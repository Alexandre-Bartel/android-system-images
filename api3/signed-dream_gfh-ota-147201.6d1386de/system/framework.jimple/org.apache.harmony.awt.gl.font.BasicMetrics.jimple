public class org.apache.harmony.awt.gl.font.BasicMetrics extends java.lang.Object
{
    float advance;
    float ascent;
    int baseLineIndex;
    float descent;
    float italicAngle;
    float leading;
    float strikethroughOffset;
    float strikethroughThickness;
    float superScriptOffset;
    float underlineOffset;
    float underlineThickness;

    void <init>(java.awt.font.GraphicAttribute)
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        java.awt.font.GraphicAttribute $r1;
        float $f0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        $r1 := @parameter0: java.awt.font.GraphicAttribute;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAscent()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getDescent()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent> = $f0;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float leading> = 2.0F;

        $i0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: int getAlignment()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: int baseLineIndex> = $i0;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float italicAngle> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float superScriptOffset> = 0.0F;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent>;

        $f0 = $f0 / 2.0F;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, 1.0F);

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset> = $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent>;

        $f0 = $f0 / 13.0F;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, 1.0F);

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineThickness> = $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent>;

        $f0 = neg $f0;

        $f0 = $f0 / 2.0F;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float strikethroughOffset> = $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineThickness>;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float strikethroughThickness> = $f0;

        return;
    }

    void <init>(java.awt.font.LineMetrics, java.awt.Font)
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        java.awt.font.LineMetrics $r1;
        java.awt.Font $r2;
        float $f0;
        int $i0;
        java.awt.geom.AffineTransform $r3;
        double $d0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        $r1 := @parameter0: java.awt.font.LineMetrics;

        $r2 := @parameter1: java.awt.Font;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getAscent()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getDescent()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getLeading()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float leading> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getUnderlineOffset()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getUnderlineThickness()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineThickness> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getStrikethroughOffset()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float strikethroughOffset> = $f0;

        $f0 = virtualinvoke $r1.<java.awt.font.LineMetrics: float getStrikethroughThickness()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float strikethroughThickness> = $f0;

        $i0 = virtualinvoke $r1.<java.awt.font.LineMetrics: int getBaselineIndex()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: int baseLineIndex> = $i0;

        $f0 = virtualinvoke $r2.<java.awt.Font: float getItalicAngle()>();

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float italicAngle> = $f0;

        $r3 = virtualinvoke $r2.<java.awt.Font: java.awt.geom.AffineTransform getTransform()>();

        $d0 = virtualinvoke $r3.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $f0 = (float) $d0;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float superScriptOffset> = $f0;

        return;
    }

    void <init>(org.apache.harmony.awt.gl.font.TextMetricsCalculator)
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        org.apache.harmony.awt.gl.font.TextMetricsCalculator $r1;
        float $f0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.TextMetricsCalculator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextMetricsCalculator: float ascent>;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent> = $f0;

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextMetricsCalculator: float descent>;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent> = $f0;

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextMetricsCalculator: float leading>;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float leading> = $f0;

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextMetricsCalculator: float advance>;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float advance> = $f0;

        $i0 = $r1.<org.apache.harmony.awt.gl.font.TextMetricsCalculator: int baselineIndex>;

        $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: int baseLineIndex> = $i0;

        return;
    }

    public float getAdvance()
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        float f0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float advance>;

        return f0;
    }

    public float getAscent()
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        float f0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent>;

        return f0;
    }

    public int getBaseLineIndex()
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        i0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: int baseLineIndex>;

        return i0;
    }

    public float getDescent()
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        float f0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent>;

        return f0;
    }

    public float getLeading()
    {
        org.apache.harmony.awt.gl.font.BasicMetrics $r0;
        float f0;

        $r0 := @this: org.apache.harmony.awt.gl.font.BasicMetrics;

        f0 = $r0.<org.apache.harmony.awt.gl.font.BasicMetrics: float leading>;

        return f0;
    }
}
