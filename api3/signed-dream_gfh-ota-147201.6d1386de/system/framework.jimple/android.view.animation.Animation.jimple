public abstract class android.view.animation.Animation extends java.lang.Object implements java.lang.Cloneable
{
    public static final int ABSOLUTE;
    public static final int INFINITE;
    public static final int RELATIVE_TO_PARENT;
    public static final int RELATIVE_TO_SELF;
    public static final int RESTART;
    public static final int REVERSE;
    public static final int START_ON_FIRST_FRAME;
    public static final int ZORDER_BOTTOM;
    public static final int ZORDER_NORMAL;
    public static final int ZORDER_TOP;
    boolean mCycleFlip;
    long mDuration;
    boolean mEnded;
    boolean mFillAfter;
    boolean mFillBefore;
    boolean mFillEnabled;
    boolean mInitialized;
    android.view.animation.Interpolator mInterpolator;
    android.view.animation.Animation$AnimationListener mListener;
    private boolean mMore;
    private boolean mOneMoreTime;
    android.graphics.RectF mPreviousRegion;
    android.view.animation.Transformation mPreviousTransformation;
    android.graphics.RectF mRegion;
    int mRepeatCount;
    int mRepeatMode;
    int mRepeated;
    long mStartOffset;
    long mStartTime;
    boolean mStarted;
    android.view.animation.Transformation mTransformation;
    private int mZAdjustment;

    public void <init>()
    {
        android.view.animation.Animation $r0;
        android.graphics.RectF $r1;
        android.view.animation.Transformation $r2;

        $r0 := @this: android.view.animation.Animation;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.animation.Animation: boolean mEnded> = 0;

        $r0.<android.view.animation.Animation: boolean mStarted> = 0;

        $r0.<android.view.animation.Animation: boolean mCycleFlip> = 0;

        $r0.<android.view.animation.Animation: boolean mInitialized> = 0;

        $r0.<android.view.animation.Animation: boolean mFillBefore> = 1;

        $r0.<android.view.animation.Animation: boolean mFillAfter> = 0;

        $r0.<android.view.animation.Animation: boolean mFillEnabled> = 0;

        $r0.<android.view.animation.Animation: long mStartTime> = -1L;

        $r0.<android.view.animation.Animation: int mRepeatCount> = 0;

        $r0.<android.view.animation.Animation: int mRepeated> = 0;

        $r0.<android.view.animation.Animation: int mRepeatMode> = 1;

        $r0.<android.view.animation.Animation: boolean mMore> = 1;

        $r0.<android.view.animation.Animation: boolean mOneMoreTime> = 1;

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.animation.Animation: android.graphics.RectF mPreviousRegion> = $r1;

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.animation.Animation: android.graphics.RectF mRegion> = $r1;

        $r2 = new android.view.animation.Transformation;

        specialinvoke $r2.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Transformation mTransformation> = $r2;

        $r2 = new android.view.animation.Transformation;

        specialinvoke $r2.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Transformation mPreviousTransformation> = $r2;

        virtualinvoke $r0.<android.view.animation.Animation: void ensureInterpolator()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.Animation $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.RectF $r3;
        android.view.animation.Transformation $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0;
        long $l1;
        boolean $z0;

        $r0 := @this: android.view.animation.Animation;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.animation.Animation: boolean mEnded> = 0;

        $r0.<android.view.animation.Animation: boolean mStarted> = 0;

        $r0.<android.view.animation.Animation: boolean mCycleFlip> = 0;

        $r0.<android.view.animation.Animation: boolean mInitialized> = 0;

        $r0.<android.view.animation.Animation: boolean mFillBefore> = 1;

        $r0.<android.view.animation.Animation: boolean mFillAfter> = 0;

        $r0.<android.view.animation.Animation: boolean mFillEnabled> = 0;

        $r0.<android.view.animation.Animation: long mStartTime> = -1L;

        $r0.<android.view.animation.Animation: int mRepeatCount> = 0;

        $r0.<android.view.animation.Animation: int mRepeated> = 0;

        $r0.<android.view.animation.Animation: int mRepeatMode> = 1;

        $r0.<android.view.animation.Animation: boolean mMore> = 1;

        $r0.<android.view.animation.Animation: boolean mOneMoreTime> = 1;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.animation.Animation: android.graphics.RectF mPreviousRegion> = $r3;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.animation.Animation: android.graphics.RectF mRegion> = $r3;

        $r4 = new android.view.animation.Transformation;

        specialinvoke $r4.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Transformation mTransformation> = $r4;

        $r4 = new android.view.animation.Transformation;

        specialinvoke $r4.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Transformation mPreviousTransformation> = $r4;

        $r5 = <com.android.internal.R$styleable: int[] Animation>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r5);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $l1 = (long) $i0;

        virtualinvoke $r0.<android.view.animation.Animation: void setDuration(long)>($l1);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(4, 0);

        $l1 = (long) $i0;

        virtualinvoke $r0.<android.view.animation.Animation: void setStartOffset(long)>($l1);

        $z0 = $r0.<android.view.animation.Animation: boolean mFillEnabled>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, $z0);

        virtualinvoke $r0.<android.view.animation.Animation: void setFillEnabled(boolean)>($z0);

        $z0 = $r0.<android.view.animation.Animation: boolean mFillBefore>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z0);

        virtualinvoke $r0.<android.view.animation.Animation: void setFillBefore(boolean)>($z0);

        $z0 = $r0.<android.view.animation.Animation: boolean mFillAfter>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, $z0);

        virtualinvoke $r0.<android.view.animation.Animation: void setFillAfter(boolean)>($z0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if $i0 <= 0 goto label1;

        virtualinvoke $r0.<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>($r1, $i0);

     label1:
        $i0 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(5, $i0);

        virtualinvoke $r0.<android.view.animation.Animation: void setRepeatCount(int)>($i0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(6, 1);

        virtualinvoke $r0.<android.view.animation.Animation: void setRepeatMode(int)>($i0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        virtualinvoke $r0.<android.view.animation.Animation: void setZAdjustment(int)>($i0);

        virtualinvoke $r0.<android.view.animation.Animation: void ensureInterpolator()>();

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        android.view.animation.Animation $r0;
        float $f0;
        android.view.animation.Transformation $r1;

        $r0 := @this: android.view.animation.Animation;

        $f0 := @parameter0: float;

        $r1 := @parameter1: android.view.animation.Transformation;

        return;
    }

    protected android.view.animation.Animation clone() throws java.lang.CloneNotSupportedException
    {
        android.view.animation.Animation $r0;
        java.lang.Object $r1;
        android.graphics.RectF $r2;
        android.view.animation.Transformation $r3;

        $r0 := @this: android.view.animation.Animation;

        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (android.view.animation.Animation) $r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.animation.Animation: android.graphics.RectF mPreviousRegion> = $r2;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.animation.Animation: android.graphics.RectF mRegion> = $r2;

        $r3 = new android.view.animation.Transformation;

        specialinvoke $r3.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Transformation mTransformation> = $r3;

        $r3 = new android.view.animation.Transformation;

        specialinvoke $r3.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Transformation mPreviousTransformation> = $r3;

        return $r0;
    }

    protected volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.view.animation.Animation $r0;

        $r0 := @this: android.view.animation.Animation;

        $r0 = virtualinvoke $r0.<android.view.animation.Animation: android.view.animation.Animation clone()>();

        return $r0;
    }

    public long computeDurationHint()
    {
        android.view.animation.Animation $r0;
        long $l0, $l1;
        int $i2;

        $r0 := @this: android.view.animation.Animation;

        $l0 = virtualinvoke $r0.<android.view.animation.Animation: long getStartOffset()>();

        $l1 = virtualinvoke $r0.<android.view.animation.Animation: long getDuration()>();

        $l0 = $l0 + $l1;

        $i2 = virtualinvoke $r0.<android.view.animation.Animation: int getRepeatCount()>();

        $i2 = $i2 + 1;

        $l1 = (long) $i2;

        $l0 = $l0 * $l1;

        return $l0;
    }

    protected void ensureInterpolator()
    {
        android.view.animation.Animation $r0;
        android.view.animation.Interpolator $r1;
        android.view.animation.AccelerateDecelerateInterpolator $r2;

        $r0 := @this: android.view.animation.Animation;

        $r1 = $r0.<android.view.animation.Animation: android.view.animation.Interpolator mInterpolator>;

        if $r1 != null goto label1;

        $r2 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        $r0.<android.view.animation.Animation: android.view.animation.Interpolator mInterpolator> = $r2;

        return;

     label1:
        return;
    }

    public long getDuration()
    {
        android.view.animation.Animation $r0;
        long l0;

        $r0 := @this: android.view.animation.Animation;

        l0 = $r0.<android.view.animation.Animation: long mDuration>;

        return l0;
    }

    public boolean getFillAfter()
    {
        android.view.animation.Animation $r0;
        boolean z0;

        $r0 := @this: android.view.animation.Animation;

        z0 = $r0.<android.view.animation.Animation: boolean mFillAfter>;

        return z0;
    }

    public boolean getFillBefore()
    {
        android.view.animation.Animation $r0;
        boolean z0;

        $r0 := @this: android.view.animation.Animation;

        z0 = $r0.<android.view.animation.Animation: boolean mFillBefore>;

        return z0;
    }

    public android.view.animation.Interpolator getInterpolator()
    {
        android.view.animation.Animation $r0;
        android.view.animation.Interpolator r1;

        $r0 := @this: android.view.animation.Animation;

        r1 = $r0.<android.view.animation.Animation: android.view.animation.Interpolator mInterpolator>;

        return r1;
    }

    public void getInvalidateRegion(int, int, int, int, android.graphics.RectF, android.view.animation.Transformation)
    {
        android.view.animation.Animation $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.RectF $r1, $r3, $r5;
        android.view.animation.Transformation $r2, $r4, $r6;
        float $f0, $f1, $f2, $f3;
        android.graphics.Matrix $r7;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: android.graphics.RectF;

        $r2 := @parameter5: android.view.animation.Transformation;

        $r5 = $r0.<android.view.animation.Animation: android.graphics.RectF mRegion>;

        $r3 = $r0.<android.view.animation.Animation: android.graphics.RectF mPreviousRegion>;

        $f3 = (float) $i0;

        $f0 = (float) $i1;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f0, $f1, $f2);

        $r7 = virtualinvoke $r2.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r1);

        virtualinvoke $r1.<android.graphics.RectF: void inset(float,float)>(-1.0F, -1.0F);

        virtualinvoke $r5.<android.graphics.RectF: void set(android.graphics.RectF)>($r1);

        virtualinvoke $r1.<android.graphics.RectF: void union(android.graphics.RectF)>($r3);

        virtualinvoke $r3.<android.graphics.RectF: void set(android.graphics.RectF)>($r5);

        $r6 = $r0.<android.view.animation.Animation: android.view.animation.Transformation mTransformation>;

        $r4 = $r0.<android.view.animation.Animation: android.view.animation.Transformation mPreviousTransformation>;

        virtualinvoke $r6.<android.view.animation.Transformation: void set(android.view.animation.Transformation)>($r2);

        virtualinvoke $r2.<android.view.animation.Transformation: void set(android.view.animation.Transformation)>($r4);

        virtualinvoke $r4.<android.view.animation.Transformation: void set(android.view.animation.Transformation)>($r6);

        return;
    }

    public int getRepeatCount()
    {
        android.view.animation.Animation $r0;
        int i0;

        $r0 := @this: android.view.animation.Animation;

        i0 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        return i0;
    }

    public int getRepeatMode()
    {
        android.view.animation.Animation $r0;
        int i0;

        $r0 := @this: android.view.animation.Animation;

        i0 = $r0.<android.view.animation.Animation: int mRepeatMode>;

        return i0;
    }

    public long getStartOffset()
    {
        android.view.animation.Animation $r0;
        long l0;

        $r0 := @this: android.view.animation.Animation;

        l0 = $r0.<android.view.animation.Animation: long mStartOffset>;

        return l0;
    }

    public long getStartTime()
    {
        android.view.animation.Animation $r0;
        long l0;

        $r0 := @this: android.view.animation.Animation;

        l0 = $r0.<android.view.animation.Animation: long mStartTime>;

        return l0;
    }

    public boolean getTransformation(long, android.view.animation.Transformation)
    {
        android.view.animation.Animation $r0;
        long $l0, $l1, $l3, $l4;
        android.view.animation.Transformation $r1;
        byte $b2;
        float $f0, $f1;
        boolean $z0, $z1;
        android.view.animation.Animation$AnimationListener $r2;
        android.view.animation.Interpolator $r3;
        int $i5, $i6;

        $r0 := @this: android.view.animation.Animation;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.view.animation.Transformation;

        $l1 = $r0.<android.view.animation.Animation: long mStartTime>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label01;

        $r0.<android.view.animation.Animation: long mStartTime> = $l0;

     label01:
        $l3 = virtualinvoke $r0.<android.view.animation.Animation: long getStartOffset()>();

        $l1 = $r0.<android.view.animation.Animation: long mDuration>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label15;

        $l4 = $r0.<android.view.animation.Animation: long mStartTime>;

        $l3 = $l4 + $l3;

        $l0 = $l0 - $l3;

        $f0 = (float) $l0;

        $f1 = (float) $l1;

        $f0 = $f0 / $f1;

     label02:
        $b2 = $f0 cmpl 1.0F;

        if $b2 < 0 goto label18;

        $z0 = 1;

     label03:
        if $z0 != 0 goto label19;

        $z1 = 1;

     label04:
        $r0.<android.view.animation.Animation: boolean mMore> = $z1;

        $z1 = $r0.<android.view.animation.Animation: boolean mFillEnabled>;

        if $z1 != 0 goto label05;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, 1.0F);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, 0.0F);

     label05:
        $b2 = $f0 cmpl 0.0F;

        if $b2 >= 0 goto label06;

        $z1 = $r0.<android.view.animation.Animation: boolean mFillBefore>;

        if $z1 == 0 goto label12;

     label06:
        $b2 = $f0 cmpg 1.0F;

        if $b2 <= 0 goto label07;

        $z1 = $r0.<android.view.animation.Animation: boolean mFillAfter>;

        if $z1 == 0 goto label12;

     label07:
        $z1 = $r0.<android.view.animation.Animation: boolean mStarted>;

        if $z1 != 0 goto label09;

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener>;

        if $r2 == null goto label08;

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener>;

        interfaceinvoke $r2.<android.view.animation.Animation$AnimationListener: void onAnimationStart(android.view.animation.Animation)>($r0);

     label08:
        $r0.<android.view.animation.Animation: boolean mStarted> = 1;

     label09:
        $z1 = $r0.<android.view.animation.Animation: boolean mFillEnabled>;

        if $z1 == 0 goto label10;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, 1.0F);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, 0.0F);

     label10:
        $z1 = $r0.<android.view.animation.Animation: boolean mCycleFlip>;

        if $z1 == 0 goto label11;

        $f0 = 1.0F - $f0;

     label11:
        $r3 = $r0.<android.view.animation.Animation: android.view.animation.Interpolator mInterpolator>;

        $f0 = interfaceinvoke $r3.<android.view.animation.Interpolator: float getInterpolation(float)>($f0);

        virtualinvoke $r0.<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>($f0, $r1);

     label12:
        if $z0 == 0 goto label14;

        $i5 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        $i6 = $r0.<android.view.animation.Animation: int mRepeated>;

        if $i5 != $i6 goto label20;

        $z0 = $r0.<android.view.animation.Animation: boolean mEnded>;

        if $z0 != 0 goto label14;

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener>;

        if $r2 == null goto label13;

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener>;

        interfaceinvoke $r2.<android.view.animation.Animation$AnimationListener: void onAnimationEnd(android.view.animation.Animation)>($r0);

     label13:
        $r0.<android.view.animation.Animation: boolean mEnded> = 1;

     label14:
        $z0 = $r0.<android.view.animation.Animation: boolean mMore>;

        if $z0 != 0 goto label25;

        $z0 = $r0.<android.view.animation.Animation: boolean mOneMoreTime>;

        if $z0 == 0 goto label25;

        $r0.<android.view.animation.Animation: boolean mOneMoreTime> = 0;

        return 1;

     label15:
        $l1 = $r0.<android.view.animation.Animation: long mStartTime>;

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label17;

        $f0 = 0.0F;

     label16:
        goto label02;

     label17:
        $f0 = 1.0F;

        goto label16;

     label18:
        $z0 = 0;

        goto label03;

     label19:
        $z1 = 0;

        goto label04;

     label20:
        $i5 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        if $i5 <= 0 goto label21;

        $i5 = $r0.<android.view.animation.Animation: int mRepeated>;

        $i5 = $i5 + 1;

        $r0.<android.view.animation.Animation: int mRepeated> = $i5;

     label21:
        $i5 = $r0.<android.view.animation.Animation: int mRepeatMode>;

        if $i5 != 2 goto label23;

        $z0 = $r0.<android.view.animation.Animation: boolean mCycleFlip>;

        if $z0 != 0 goto label24;

        $z0 = 1;

     label22:
        $r0.<android.view.animation.Animation: boolean mCycleFlip> = $z0;

     label23:
        $r0.<android.view.animation.Animation: long mStartTime> = -1L;

        $r0.<android.view.animation.Animation: boolean mMore> = 1;

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener>;

        if $r2 == null goto label14;

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener>;

        interfaceinvoke $r2.<android.view.animation.Animation$AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>($r0);

        goto label14;

     label24:
        $z0 = 0;

        goto label22;

     label25:
        $z0 = $r0.<android.view.animation.Animation: boolean mMore>;

        return $z0;
    }

    public int getZAdjustment()
    {
        android.view.animation.Animation $r0;
        int i0;

        $r0 := @this: android.view.animation.Animation;

        i0 = $r0.<android.view.animation.Animation: int mZAdjustment>;

        return i0;
    }

    public boolean hasEnded()
    {
        android.view.animation.Animation $r0;
        boolean z0;

        $r0 := @this: android.view.animation.Animation;

        z0 = $r0.<android.view.animation.Animation: boolean mEnded>;

        return z0;
    }

    public boolean hasStarted()
    {
        android.view.animation.Animation $r0;
        boolean z0;

        $r0 := @this: android.view.animation.Animation;

        z0 = $r0.<android.view.animation.Animation: boolean mStarted>;

        return z0;
    }

    public void initialize(int, int, int, int)
    {
        android.view.animation.Animation $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        virtualinvoke $r0.<android.view.animation.Animation: void reset()>();

        $r0.<android.view.animation.Animation: boolean mInitialized> = 1;

        return;
    }

    public void initializeInvalidateRegion(int, int, int, int)
    {
        android.view.animation.Animation $r0;
        int $i0, $i1, $i2, $i3;
        android.view.animation.Transformation $r1;
        android.graphics.RectF $r2;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r2 = $r0.<android.view.animation.Animation: android.graphics.RectF mPreviousRegion>;

        $f3 = (float) $i0;

        $f0 = (float) $i1;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f0, $f1, $f2);

        virtualinvoke $r2.<android.graphics.RectF: void inset(float,float)>(-1.0F, -1.0F);

        $z0 = $r0.<android.view.animation.Animation: boolean mFillBefore>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.view.animation.Animation: android.view.animation.Transformation mPreviousTransformation>;

        virtualinvoke $r0.<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>(0.0F, $r1);

        return;

     label1:
        return;
    }

    public boolean isFillEnabled()
    {
        android.view.animation.Animation $r0;
        boolean z0;

        $r0 := @this: android.view.animation.Animation;

        z0 = $r0.<android.view.animation.Animation: boolean mFillEnabled>;

        return z0;
    }

    public boolean isInitialized()
    {
        android.view.animation.Animation $r0;
        boolean z0;

        $r0 := @this: android.view.animation.Animation;

        z0 = $r0.<android.view.animation.Animation: boolean mInitialized>;

        return z0;
    }

    public void reset()
    {
        android.view.animation.Animation $r0;
        android.graphics.RectF $r1;
        android.view.animation.Transformation $r2;

        $r0 := @this: android.view.animation.Animation;

        $r1 = $r0.<android.view.animation.Animation: android.graphics.RectF mPreviousRegion>;

        virtualinvoke $r1.<android.graphics.RectF: void setEmpty()>();

        $r2 = $r0.<android.view.animation.Animation: android.view.animation.Transformation mPreviousTransformation>;

        virtualinvoke $r2.<android.view.animation.Transformation: void clear()>();

        $r0.<android.view.animation.Animation: boolean mInitialized> = 0;

        $r0.<android.view.animation.Animation: boolean mCycleFlip> = 0;

        $r0.<android.view.animation.Animation: int mRepeated> = 0;

        $r0.<android.view.animation.Animation: boolean mMore> = 1;

        $r0.<android.view.animation.Animation: boolean mOneMoreTime> = 1;

        return;
    }

    protected float resolveSize(int, float, int, int)
    {
        android.view.animation.Animation $r0;
        int $i0, $i1, $i2;
        float $f0, $f1;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return $f0;

     label2:
        return $f0;

     label3:
        $f1 = (float) $i1;

        $f0 = $f1 * $f0;

        return $f0;

     label4:
        $f1 = (float) $i2;

        $f0 = $f1 * $f0;

        return $f0;
    }

    public void restrictDuration(long)
    {
        android.view.animation.Animation $r0;
        long $l0, $l1, $l3;
        byte $b2;
        int $i4;

        $r0 := @this: android.view.animation.Animation;

        $l0 := @parameter0: long;

        $l1 = $r0.<android.view.animation.Animation: long mStartOffset>;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label1;

        $r0.<android.view.animation.Animation: long mStartOffset> = $l0;

        $r0.<android.view.animation.Animation: long mDuration> = 0L;

        $r0.<android.view.animation.Animation: int mRepeatCount> = 0;

        return;

     label1:
        $l3 = $r0.<android.view.animation.Animation: long mDuration>;

        $l1 = $r0.<android.view.animation.Animation: long mStartOffset>;

        $l1 = $l3 + $l1;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label2;

        $l1 = $r0.<android.view.animation.Animation: long mStartOffset>;

        $l1 = $l0 - $l1;

        $r0.<android.view.animation.Animation: long mDuration> = $l1;

        $l1 = $l0;

     label2:
        $l3 = $r0.<android.view.animation.Animation: long mDuration>;

        $b2 = $l3 cmp 0L;

        if $b2 > 0 goto label3;

        $r0.<android.view.animation.Animation: long mDuration> = 0L;

        $r0.<android.view.animation.Animation: int mRepeatCount> = 0;

        return;

     label3:
        $i4 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        if $i4 < 0 goto label4;

        $i4 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        $l3 = (long) $i4;

        $b2 = $l3 cmp $l0;

        if $b2 > 0 goto label4;

        $i4 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        $l3 = (long) $i4;

        $l3 = $l3 * $l1;

        $b2 = $l3 cmp $l0;

        if $b2 <= 0 goto label5;

     label4:
        $l0 = $l0 / $l1;

        $i4 = (int) $l0;

        $i4 = $i4 - 1;

        $r0.<android.view.animation.Animation: int mRepeatCount> = $i4;

        $i4 = $r0.<android.view.animation.Animation: int mRepeatCount>;

        if $i4 >= 0 goto label6;

        $r0.<android.view.animation.Animation: int mRepeatCount> = 0;

        return;

     label5:
        return;

     label6:
        return;
    }

    public void scaleCurrentDuration(float)
    {
        android.view.animation.Animation $r0;
        float $f0, $f1;
        long $l0;

        $r0 := @this: android.view.animation.Animation;

        $f0 := @parameter0: float;

        $l0 = $r0.<android.view.animation.Animation: long mDuration>;

        $f1 = (float) $l0;

        $f0 = $f1 * $f0;

        $l0 = (long) $f0;

        $r0.<android.view.animation.Animation: long mDuration> = $l0;

        return;
    }

    public void setAnimationListener(android.view.animation.Animation$AnimationListener)
    {
        android.view.animation.Animation $r0;
        android.view.animation.Animation$AnimationListener $r1;

        $r0 := @this: android.view.animation.Animation;

        $r1 := @parameter0: android.view.animation.Animation$AnimationListener;

        $r0.<android.view.animation.Animation: android.view.animation.Animation$AnimationListener mListener> = $r1;

        return;
    }

    public void setDuration(long)
    {
        android.view.animation.Animation $r0;
        long $l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: android.view.animation.Animation;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Animation duration cannot be negative");

        throw $r1;

     label1:
        $r0.<android.view.animation.Animation: long mDuration> = $l0;

        return;
    }

    public void setFillAfter(boolean)
    {
        android.view.animation.Animation $r0;
        boolean $z0;

        $r0 := @this: android.view.animation.Animation;

        $z0 := @parameter0: boolean;

        $r0.<android.view.animation.Animation: boolean mFillAfter> = $z0;

        return;
    }

    public void setFillBefore(boolean)
    {
        android.view.animation.Animation $r0;
        boolean $z0;

        $r0 := @this: android.view.animation.Animation;

        $z0 := @parameter0: boolean;

        $r0.<android.view.animation.Animation: boolean mFillBefore> = $z0;

        return;
    }

    public void setFillEnabled(boolean)
    {
        android.view.animation.Animation $r0;
        boolean $z0;

        $r0 := @this: android.view.animation.Animation;

        $z0 := @parameter0: boolean;

        $r0.<android.view.animation.Animation: boolean mFillEnabled> = $z0;

        return;
    }

    public void setInterpolator(android.content.Context, int)
    {
        android.view.animation.Animation $r0;
        android.content.Context $r1;
        int $i0;
        android.view.animation.Interpolator $r2;

        $r0 := @this: android.view.animation.Animation;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r0.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        return;
    }

    public void setInterpolator(android.view.animation.Interpolator)
    {
        android.view.animation.Animation $r0;
        android.view.animation.Interpolator $r1;

        $r0 := @this: android.view.animation.Animation;

        $r1 := @parameter0: android.view.animation.Interpolator;

        $r0.<android.view.animation.Animation: android.view.animation.Interpolator mInterpolator> = $r1;

        return;
    }

    public void setRepeatCount(int)
    {
        android.view.animation.Animation $r0;
        int $i0;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = -1;

     label1:
        $r0.<android.view.animation.Animation: int mRepeatCount> = $i0;

        return;
    }

    public void setRepeatMode(int)
    {
        android.view.animation.Animation $r0;
        int $i0;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        $r0.<android.view.animation.Animation: int mRepeatMode> = $i0;

        return;
    }

    public void setStartOffset(long)
    {
        android.view.animation.Animation $r0;
        long $l0;

        $r0 := @this: android.view.animation.Animation;

        $l0 := @parameter0: long;

        $r0.<android.view.animation.Animation: long mStartOffset> = $l0;

        return;
    }

    public void setStartTime(long)
    {
        android.view.animation.Animation $r0;
        long $l0;

        $r0 := @this: android.view.animation.Animation;

        $l0 := @parameter0: long;

        $r0.<android.view.animation.Animation: long mStartTime> = $l0;

        $r0.<android.view.animation.Animation: boolean mEnded> = 0;

        $r0.<android.view.animation.Animation: boolean mStarted> = 0;

        $r0.<android.view.animation.Animation: boolean mCycleFlip> = 0;

        $r0.<android.view.animation.Animation: int mRepeated> = 0;

        $r0.<android.view.animation.Animation: boolean mMore> = 1;

        return;
    }

    public void setZAdjustment(int)
    {
        android.view.animation.Animation $r0;
        int $i0;

        $r0 := @this: android.view.animation.Animation;

        $i0 := @parameter0: int;

        $r0.<android.view.animation.Animation: int mZAdjustment> = $i0;

        return;
    }

    public void start()
    {
        android.view.animation.Animation $r0;

        $r0 := @this: android.view.animation.Animation;

        virtualinvoke $r0.<android.view.animation.Animation: void setStartTime(long)>(-1L);

        return;
    }

    public void startNow()
    {
        android.view.animation.Animation $r0;
        long $l0;

        $r0 := @this: android.view.animation.Animation;

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke $r0.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return;
    }

    public boolean willChangeBounds()
    {
        android.view.animation.Animation $r0;

        $r0 := @this: android.view.animation.Animation;

        return 1;
    }

    public boolean willChangeTransformationMatrix()
    {
        android.view.animation.Animation $r0;

        $r0 := @this: android.view.animation.Animation;

        return 1;
    }

    public static void <clinit>()
    {
        <android.view.animation.Animation: int ZORDER_TOP> = 1;

        <android.view.animation.Animation: int ZORDER_NORMAL> = 0;

        <android.view.animation.Animation: int ZORDER_BOTTOM> = -1;

        <android.view.animation.Animation: int START_ON_FIRST_FRAME> = -1;

        <android.view.animation.Animation: int REVERSE> = 2;

        <android.view.animation.Animation: int RESTART> = 1;

        <android.view.animation.Animation: int RELATIVE_TO_SELF> = 1;

        <android.view.animation.Animation: int RELATIVE_TO_PARENT> = 2;

        <android.view.animation.Animation: int INFINITE> = -1;

        <android.view.animation.Animation: int ABSOLUTE> = 0;

        return;
    }
}
