public class org.bouncycastle.jce.provider.JCESecretKeyFactory$DES extends org.bouncycastle.jce.provider.JCESecretKeyFactory
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DES $r0;

        $r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DES;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: void <init>(java.lang.String,org.bouncycastle.asn1.DERObjectIdentifier)>("DES", null);

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DES $r0;
        java.security.spec.KeySpec $r1;
        boolean $z0;
        javax.crypto.spec.DESKeySpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        byte[] $r4;
        javax.crypto.SecretKey $r5;

        $r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DES;

        $r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = $r1 instanceof javax.crypto.spec.DESKeySpec;

        if $z0 == 0 goto label1;

        $r2 = (javax.crypto.spec.DESKeySpec) $r1;

        $r3 = new javax.crypto.spec.SecretKeySpec;

        $r4 = virtualinvoke $r2.<javax.crypto.spec.DESKeySpec: byte[] getKey()>();

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, "DES");

        return $r3;

     label1:
        $r5 = specialinvoke $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)>($r1);

        return $r5;
    }
}
