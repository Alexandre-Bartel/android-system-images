public class org.apache.harmony.awt.gl.image.BufferedImageSource extends java.lang.Object implements java.awt.image.ImageProducer
{
    private java.awt.image.ColorModel cm;
    private int height;
    private java.awt.image.ImageConsumer ic;
    private java.util.Hashtable properties;
    private java.awt.image.WritableRaster raster;
    private int width;

    public void <init>(java.awt.image.BufferedImage)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.BufferedImage $r1;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.BufferedImage;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: void <init>(java.awt.image.BufferedImage,java.util.Hashtable)>($r1, null);

        return;
    }

    public void <init>(java.awt.image.BufferedImage, java.util.Hashtable)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.BufferedImage $r1;
        java.util.Hashtable $r2;
        int $i0;
        java.awt.image.ColorModel $r3;
        java.awt.image.WritableRaster $r4;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.BufferedImage;

        $r2 := @parameter1: java.util.Hashtable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label2;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.util.Hashtable properties> = $r2;

     label1:
        $i0 = virtualinvoke $r1.<java.awt.image.BufferedImage: int getWidth()>();

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width> = $i0;

        $i0 = virtualinvoke $r1.<java.awt.image.BufferedImage: int getHeight()>();

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int height> = $i0;

        $r3 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm> = $r3;

        $r4 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster> = $r4;

        return;

     label2:
        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.util.Hashtable properties> = $r2;

        goto label1;
    }

    private void startProduction()
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.ImageConsumer $r1;
        int $i0, $i1, $i2, $i3;
        java.util.Hashtable $r2;
        java.awt.image.ColorModel $r3, $r12;
        boolean $z0;
        java.awt.image.WritableRaster $r4;
        java.awt.image.DataBuffer $r5;
        java.awt.image.DataBufferByte $r6;
        byte[] $r7;
        java.awt.image.DataBufferInt $r8;
        int[] $r9;
        java.lang.NullPointerException $r10;
        java.lang.Object $r11;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

     label01:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int height>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setDimensions(int,int)>($i0, $i1);

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.util.Hashtable properties>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setProperties(java.util.Hashtable)>($r2);

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setColorModel(java.awt.image.ColorModel)>($r3);

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setHints(int)>(30);

        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

     label02:
        $z0 = $r3 instanceof java.awt.image.IndexColorModel;

     label03:
        if $z0 == 0 goto label04;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $i0 = virtualinvoke $r4.<java.awt.image.Raster: int getTransferType()>();

        if $i0 == 0 goto label07;

     label04:
        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

     label05:
        $z0 = $r3 instanceof java.awt.image.ComponentColorModel;

     label06:
        if $z0 == 0 goto label10;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $i0 = virtualinvoke $r4.<java.awt.image.Raster: int getTransferType()>();

        if $i0 != 0 goto label10;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $i0 = virtualinvoke $r4.<java.awt.image.Raster: int getNumDataElements()>();

        if $i0 != 1 goto label10;

     label07:
        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $r5 = virtualinvoke $r4.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r6 = (java.awt.image.DataBufferByte) $r5;

        $r7 = virtualinvoke $r6.<java.awt.image.DataBufferByte: byte[] getData()>();

        $i0 = virtualinvoke $r6.<java.awt.image.DataBuffer: int getOffset()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int height>;

        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

        $i3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>(0, 0, $i1, $i2, $r3, $r7, $i0, $i3);

     label08:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void imageComplete(int)>(3);

     label09:
        return;

     label10:
        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

     label11:
        $z0 = $r3 instanceof java.awt.image.DirectColorModel;

     label12:
        if $z0 == 0 goto label15;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $i0 = virtualinvoke $r4.<java.awt.image.Raster: int getTransferType()>();

        if $i0 != 3 goto label15;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $r5 = virtualinvoke $r4.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r8 = (java.awt.image.DataBufferInt) $r5;

        $r9 = virtualinvoke $r8.<java.awt.image.DataBufferInt: int[] getData()>();

        $i0 = virtualinvoke $r8.<java.awt.image.DataBuffer: int getOffset()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int height>;

        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

        $i3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>(0, 0, $i1, $i2, $r3, $r9, $i0, $i3);

     label13:
        goto label08;

     label14:
        $r10 := @caughtexception;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        if $r1 == null goto label27;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void imageComplete(int)>(1);

        return;

     label15:
        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

     label16:
        $z0 = $r3 instanceof java.awt.image.DirectColorModel;

     label17:
        if $z0 == 0 goto label18;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $i0 = virtualinvoke $r4.<java.awt.image.Raster: int getTransferType()>();

        if $i0 != 0 goto label18;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $r5 = virtualinvoke $r4.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r6 = (java.awt.image.DataBufferByte) $r5;

        $r7 = virtualinvoke $r6.<java.awt.image.DataBufferByte: byte[] getData()>();

        $i0 = virtualinvoke $r6.<java.awt.image.DataBuffer: int getOffset()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int height>;

        $r3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

        $i3 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>(0, 0, $i1, $i2, $r3, $r7, $i0, $i3);

        goto label08;

     label18:
        $r3 = staticinvoke <java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>();

        $i0 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

     label19:
        $r9 = newarray (int)[$i0];

        $i0 = 0;

     label20:
        $r11 = null;

     label21:
        $i1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int height>;

        if $i0 >= $i1 goto label08;

        $i1 = 0;

     label22:
        $i2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        if $i1 >= $i2 goto label25;

        $r4 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.WritableRaster raster>;

        $r11 = virtualinvoke $r4.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i1, $i0, $r11);

        $r12 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ColorModel cm>;

        $i2 = virtualinvoke $r12.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r11);

        $r9[$i1] = $i2;

     label23:
        $i1 = $i1 + 1;

     label24:
        goto label22;

     label25:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: int width>;

        interfaceinvoke $r1.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>(0, $i0, $i1, 1, $r3, $r9, 0, $i2);

     label26:
        $i0 = $i0 + 1;

        goto label21;

     label27:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label14;
        catch java.lang.NullPointerException from label03 to label05 with label14;
        catch java.lang.NullPointerException from label06 to label09 with label14;
        catch java.lang.NullPointerException from label10 to label11 with label14;
        catch java.lang.NullPointerException from label12 to label13 with label14;
        catch java.lang.NullPointerException from label15 to label16 with label14;
        catch java.lang.NullPointerException from label17 to label19 with label14;
        catch java.lang.NullPointerException from label20 to label23 with label14;
        catch java.lang.NullPointerException from label24 to label26 with label14;
    }

    public void addConsumer(java.awt.image.ImageConsumer)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.ImageConsumer $r1;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.ImageConsumer;

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic> = $r1;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: void startProduction()>();

        return;
    }

    public boolean isConsumer(java.awt.image.ImageConsumer)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.ImageConsumer $r1, $r2;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.ImageConsumer;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void removeConsumer(java.awt.image.ImageConsumer)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.ImageConsumer $r1, $r2;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.ImageConsumer;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic>;

        if $r2 != $r1 goto label1;

        $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: java.awt.image.ImageConsumer ic> = null;

        return;

     label1:
        return;
    }

    public void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.ImageConsumer $r1;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.ImageConsumer;

        return;
    }

    public void startProduction(java.awt.image.ImageConsumer)
    {
        org.apache.harmony.awt.gl.image.BufferedImageSource $r0;
        java.awt.image.ImageConsumer $r1;

        $r0 := @this: org.apache.harmony.awt.gl.image.BufferedImageSource;

        $r1 := @parameter0: java.awt.image.ImageConsumer;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.BufferedImageSource: void addConsumer(java.awt.image.ImageConsumer)>($r1);

        return;
    }
}
