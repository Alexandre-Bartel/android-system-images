class org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver extends org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog
{
    int dy;

    void <init>(int, int, int, int, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog: void <init>(int,int,int,int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $i2, $i3, $r1);

        $i0 = $i3 - $i1;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver: int dy> = $i0;

        return;
    }

    void rasterize()
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver $r0;
        org.apache.harmony.awt.gl.MultiRectArea $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: org.apache.harmony.awt.gl.MultiRectArea dst>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x2>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y2>;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    void rasterize(int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i0 = $i2 + $i0;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i0;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: org.apache.harmony.awt.gl.MultiRectArea dst>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x2>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i3 = $i3 - 1;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    void rasterize(int[], int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver $r0;
        int[] $r1;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i2 = $r1[$i0];

        if $i1 < $i2 goto label1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i2 = $i0 + 2;

        $i2 = $r1[$i2];

        if $i1 > $i2 goto label2;

        $i1 = $i0 + 1;

        $i1 = $r1[$i1];

        $i0 = $i0 + 3;

        $i0 = $r1[$i0];

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        if $i2 > $i0 goto label3;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y2>;

        if $i2 < $i1 goto label4;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y2>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver: void rasterizeClipped(int,int)>($i1, $i0);

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    void rasterizeClipped(int, int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: org.apache.harmony.awt.gl.MultiRectArea dst>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i2, $i0, $i3, $i1);

        return;
    }

    void skip(int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Ortog$Ver;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i0 = $i1 + $i0;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i0;

        return;
    }
}
