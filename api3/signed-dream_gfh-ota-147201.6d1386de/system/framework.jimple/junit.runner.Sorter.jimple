public class junit.runner.Sorter extends java.lang.Object
{

    public void <init>()
    {
        junit.runner.Sorter $r0;

        $r0 := @this: junit.runner.Sorter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)
    {
        java.util.Vector $r0;
        junit.runner.Sorter$Swapper $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: java.util.Vector;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $r1 := @parameter3: junit.runner.Sorter$Swapper;

        $i0 = $i2;

        $i1 = $i3;

        $i4 = $i2 + $i3;

        $i4 = $i4 / 2;

        $r2 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i4);

        $r3 = (java.lang.String) $r2;

     label1:
        $r2 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r4 = (java.lang.String) $r2;

        $r4 = (java.lang.String) $r4;

        $i4 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r3);

        if $i4 >= 0 goto label2;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        $r4 = (java.lang.String) $r2;

        $r4 = (java.lang.String) $r4;

        $i4 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        if $i4 >= 0 goto label3;

        $i3 = $i3 + -1;

        goto label2;

     label3:
        if $i2 > $i3 goto label4;

        interfaceinvoke $r1.<junit.runner.Sorter$Swapper: void swap(java.util.Vector,int,int)>($r0, $i2, $i3);

        $i2 = $i2 + 1;

        $i3 = $i3 + -1;

     label4:
        if $i2 <= $i3 goto label1;

        if $i0 >= $i3 goto label5;

        staticinvoke <junit.runner.Sorter: void sortStrings(java.util.Vector,int,int,junit.runner.Sorter$Swapper)>($r0, $i0, $i3, $r1);

     label5:
        if $i2 >= $i1 goto label6;

        staticinvoke <junit.runner.Sorter: void sortStrings(java.util.Vector,int,int,junit.runner.Sorter$Swapper)>($r0, $i2, $i1, $r1);

        return;

     label6:
        return;
    }
}
