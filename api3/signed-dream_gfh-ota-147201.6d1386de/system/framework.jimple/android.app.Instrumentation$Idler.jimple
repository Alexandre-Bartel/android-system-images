final class android.app.Instrumentation$Idler extends java.lang.Object implements android.os.MessageQueue$IdleHandler
{
    private final java.lang.Runnable mCallback;
    private boolean mIdle;

    public void <init>(java.lang.Runnable)
    {
        android.app.Instrumentation$Idler $r0;
        java.lang.Runnable $r1;

        $r0 := @this: android.app.Instrumentation$Idler;

        $r1 := @parameter0: java.lang.Runnable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.app.Instrumentation$Idler: java.lang.Runnable mCallback> = $r1;

        $r0.<android.app.Instrumentation$Idler: boolean mIdle> = 0;

        return;
    }

    public final boolean queueIdle()
    {
        android.app.Instrumentation$Idler $r0;
        java.lang.Runnable $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.app.Instrumentation$Idler;

        $r1 = $r0.<android.app.Instrumentation$Idler: java.lang.Runnable mCallback>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.app.Instrumentation$Idler: java.lang.Runnable mCallback>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label1:
        entermonitor $r0;

     label2:
        $r0.<android.app.Instrumentation$Idler: boolean mIdle> = 1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label3:
        return 0;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void waitForIdle()
    {
        android.app.Instrumentation$Idler $r0;
        boolean $z0;
        java.lang.InterruptedException $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.app.Instrumentation$Idler;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.app.Instrumentation$Idler: boolean mIdle>;

     label2:
        if $z0 != 0 goto label6;

     label3:
        virtualinvoke $r0.<java.lang.Object: void wait()>();

     label4:
        goto label1;

     label5:
        $r1 := @caughtexception;

        goto label1;

     label6:
        exitmonitor $r0;

     label7:
        return;

     label8:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }
}
