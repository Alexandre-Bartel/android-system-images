final class com.android.internal.policy.impl.PhoneWindow$DecorView extends android.widget.FrameLayout
{
    private final android.graphics.Rect mBackgroundPadding;
    private final android.graphics.Paint mBlackPaint;
    private boolean mChanging;
    int mDefaultOpacity;
    private int mDownY;
    private final android.graphics.Rect mDrawingBounds;
    private final int mFeatureId;
    private final android.graphics.Rect mFrameOffsets;
    private final android.graphics.Rect mFramePadding;
    private android.graphics.drawable.Drawable mMenuBackground;
    private boolean mWatchingForMenu;
    final com.android.internal.policy.impl.PhoneWindow this$0;

    public void <init>(com.android.internal.policy.impl.PhoneWindow, android.content.Context, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        com.android.internal.policy.impl.PhoneWindow $r1;
        android.content.Context $r2;
        int $i0;
        android.graphics.Rect $r3;
        android.graphics.Paint $r4;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: com.android.internal.policy.impl.PhoneWindow;

        $r2 := @parameter1: android.content.Context;

        $i0 := @parameter2: int;

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0> = $r1;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context)>($r2);

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mDefaultOpacity> = -1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mDrawingBounds> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Paint mBlackPaint> = $r4;

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId> = $i0;

        $r4 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Paint mBlackPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-16777216);

        return;
    }

    private void drawableChanged()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        boolean $z0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r2, $r3;
        com.android.internal.policy.impl.PhoneWindow $r4;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $z0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i1;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        $i1 = $i1 + $i2;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i3 = $r1.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i3 = $r1.<android.graphics.Rect: int bottom>;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i4 = $r1.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + $i4;

        virtualinvoke $r0.<android.view.ViewGroup: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $i0 = -1;

        $r2 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $r3 = virtualinvoke $r0.<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>();

        if $r2 == null goto label2;

        if $r3 != null goto label3;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

     label2:
        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mDefaultOpacity> = $i0;

        $i1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label9;

        $r4 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$1400(com.android.internal.policy.impl.PhoneWindow,int)>($r4, $i0);

        return;

     label3:
        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        if $i0 > 0 goto label8;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i0 = $r1.<android.graphics.Rect: int top>;

        if $i0 > 0 goto label8;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i0 = $r1.<android.graphics.Rect: int right>;

        if $i0 > 0 goto label8;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 > 0 goto label8;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getOpacity()>();

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 == -1 goto label4;

        if $i1 != -1 goto label5;

     label4:
        $i0 = -1;

        goto label2;

     label5:
        if $i0 != 0 goto label6;

        $i0 = $i1;

        goto label2;

     label6:
        if $i1 != 0 goto label7;

        goto label2;

     label7:
        $i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>($i0, $i1);

        goto label2;

     label8:
        $i0 = -3;

        goto label2;

     label9:
        return;
    }

    private boolean isOutOfBounds(int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < -5 goto label1;

        if $i1 < -5 goto label1;

        $i2 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $i2 + 5;

        if $i0 > $i2 goto label1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i0 = $i0 + 5;

        if $i1 <= $i0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.KeyEvent $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        com.android.internal.policy.impl.PhoneWindow $r2, $r6;
        long $l2, $l3;
        byte $b4;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.media.AudioManager $r5;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r7;
        android.view.Window$Callback $r8;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label04;

        $z0 = 1;

     label01:
        if $i0 == 25 goto label02;

        if $i0 == 24 goto label02;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $l2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: long access$800(com.android.internal.policy.impl.PhoneWindow)>($r2);

        $l2 = $l2 + 300L;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label02;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r5 = (android.media.AudioManager) $r4;

        if $r5 == null goto label02;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$900(com.android.internal.policy.impl.PhoneWindow)>($r2);

        virtualinvoke $r5.<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>(0, $i1, 8);

     label02:
        if $z0 == 0 goto label06;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label06;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$000(com.android.internal.policy.impl.PhoneWindow)>($r2);

        if $i1 <= 0 goto label05;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$000(com.android.internal.policy.impl.PhoneWindow)>($r2);

        if $i1 == $i0 goto label05;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1000(com.android.internal.policy.impl.PhoneWindow)>($r6);

        $z1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$1100(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r2, $r7, $i0, $r1, 1);

        $z2 = $z1;

        if $z1 != 0 goto label03;

        $z1 = virtualinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>($r1);

        $z2 = $z1;

        if $z1 == 0 goto label03;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1000(com.android.internal.policy.impl.PhoneWindow)>($r2);

        if $r7 == null goto label03;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1000(com.android.internal.policy.impl.PhoneWindow)>($r2);

        $r7.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isHandled> = 1;

     label03:
        if $z2 == 0 goto label05;

        return 1;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1000(com.android.internal.policy.impl.PhoneWindow)>($r2);

        if $r7 == null goto label06;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1000(com.android.internal.policy.impl.PhoneWindow)>($r2);

        $z2 = $r7.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isOpen>;

        if $z2 == 0 goto label06;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1000(com.android.internal.policy.impl.PhoneWindow)>($r6);

        $z2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$1100(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r2, $r7, $i0, $r1, 0);

        if $z2 == 0 goto label06;

        return 1;

     label06:
        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = virtualinvoke $r2.<android.view.Window: android.view.Window$Callback getCallback()>();

        if $r8 == null goto label08;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label08;

        $z2 = interfaceinvoke $r8.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

     label07:
        if $z2 == 0 goto label09;

        return 1;

     label08:
        $z2 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        goto label07;

     label09:
        if $z0 == 0 goto label10;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: boolean onKeyDown(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

        return $z0;

     label10:
        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: boolean onKeyUp(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

        return $z0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.MotionEvent $r1;
        com.android.internal.policy.impl.PhoneWindow $r2;
        android.view.Window$Callback $r3;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.Window$Callback getCallback()>();

        if $r3 == null goto label1;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z0 = interfaceinvoke $r3.<android.view.Window$Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.MotionEvent $r1;
        com.android.internal.policy.impl.PhoneWindow $r2;
        android.view.Window$Callback $r3;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.Window$Callback getCallback()>();

        if $r3 == null goto label1;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z0 = interfaceinvoke $r3.<android.view.Window$Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable mMenuBackground>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable mMenuBackground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label1:
        return;
    }

    public void finishChanging()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging> = 0;

        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

        return;
    }

    protected boolean fitSystemWindows(android.graphics.Rect)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.graphics.Rect $r1, $r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        $r3 = virtualinvoke $r0.<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>();

        if $r3 == null goto label1;

        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label1:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean fitSystemWindows(android.graphics.Rect)>($r1);

        return $z0;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r1;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        specialinvoke $r0.<android.view.View: void onAttachedToWindow()>();

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 != -1 goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$1500(com.android.internal.policy.impl.PhoneWindow)>($r1);

        return;

     label1:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        float $f0;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindow $r2;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 < 0 goto label1;

        if $i0 != 0 goto label1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $z0 = specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean isOutOfBounds(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void closePanel(int)>($i0);

        return 1;

     label1:
        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindow $r1;
        android.os.Handler $r2;
        int $i0;
        android.view.Window$Callback $r3;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.View: void onWindowFocusChanged(boolean)>($z0);

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.os.Handler access$100(com.android.internal.policy.impl.PhoneWindow)>($r1);

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.os.Handler access$100(com.android.internal.policy.impl.PhoneWindow)>($r1);

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(3);

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.os.Handler access$100(com.android.internal.policy.impl.PhoneWindow)>($r1);

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(5);

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$202(com.android.internal.policy.impl.PhoneWindow,boolean)>($r1, 0);

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$302(com.android.internal.policy.impl.PhoneWindow,boolean)>($r1, 0);

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$000(com.android.internal.policy.impl.PhoneWindow)>($r1);

        if $i0 <= 0 goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void closePanel(int)>(0);

     label1:
        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = virtualinvoke $r1.<android.view.Window: android.view.Window$Callback getCallback()>();

        if $r3 == null goto label2;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label3;

        interfaceinvoke $r3.<android.view.Window$Callback: void onWindowFocusChanged(boolean)>($z0);

        return;

     label2:
        return;

     label3:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r1, $r2, $r3;
        boolean $z0;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = specialinvoke $r0.<android.view.View: boolean setFrame(int,int,int,int)>($i0, $i1, $i2, $i3);

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mDrawingBounds>;

        virtualinvoke $r0.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r1);

        $r4 = virtualinvoke $r0.<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>();

        if $r4 == null goto label1;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int bottom> = $i0;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r3.<android.graphics.Rect: int left>;

        $i2 = $r2.<android.graphics.Rect: int left>;

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r3.<android.graphics.Rect: int right>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r3.<android.graphics.Rect: int bottom>;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int bottom> = $i0;

     label1:
        $r4 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if $r4 == null goto label3;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

        return $z0;

     label2:
        return $z0;

     label3:
        return $z0;
    }

    public void setWindowBackground(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.Rect $r3;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == $r1 goto label3;

        virtualinvoke $r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        if $r1 == null goto label2;

        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

     label1:
        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

        return;

     label2:
        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        goto label1;

     label3:
        return;
    }

    public void setWindowFrame(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.Rect $r3;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke $r0.<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>();

        if $r2 == $r1 goto label3;

        virtualinvoke $r0.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>($r1);

        if $r1 == null goto label2;

        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

     label1:
        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

        return;

     label2:
        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        goto label1;

     label3:
        return;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.View $r1;
        com.android.internal.policy.impl.PhoneWindow $r2, $r6;
        com.android.internal.view.menu.ContextMenuBuilder $r3;
        android.content.Context $r4;
        com.android.internal.policy.impl.PhoneWindow$ContextMenuCallback $r5;
        android.os.IBinder $r7;
        com.android.internal.view.menu.MenuDialogHelper $r8;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r2);

        if $r3 != null goto label2;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = new com.android.internal.view.menu.ContextMenuBuilder;

        $r4 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r3.<com.android.internal.view.menu.ContextMenuBuilder: void <init>(android.content.Context)>($r4);

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1202(com.android.internal.policy.impl.PhoneWindow,com.android.internal.view.menu.ContextMenuBuilder)>($r2, $r3);

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r2);

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = $r2.<com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$ContextMenuCallback mContextMenuCallback>;

        virtualinvoke $r3.<com.android.internal.view.menu.MenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)>($r5);

     label1:
        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r6);

        $r7 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        $r8 = virtualinvoke $r3.<com.android.internal.view.menu.ContextMenuBuilder: com.android.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder)>($r1, $r7);

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1302(com.android.internal.policy.impl.PhoneWindow,com.android.internal.view.menu.MenuDialogHelper)>($r2, $r8);

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1300(com.android.internal.policy.impl.PhoneWindow)>($r2);

        if $r8 == null goto label3;

        return 1;

     label2:
        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r2);

        virtualinvoke $r3.<com.android.internal.view.menu.MenuBuilder: void clearAll()>();

        goto label1;

     label3:
        return 0;
    }

    public void startChanging()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging> = 1;

        return;
    }

    public boolean superDispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;
    }

    public boolean superDispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public boolean superDispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView $r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }
}
