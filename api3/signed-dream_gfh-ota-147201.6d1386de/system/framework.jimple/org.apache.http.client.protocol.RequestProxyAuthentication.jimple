public class org.apache.http.client.protocol.RequestProxyAuthentication extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{
    private final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.client.protocol.RequestProxyAuthentication $r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        $r0 := @this: org.apache.http.client.protocol.RequestProxyAuthentication;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        $r0.<org.apache.http.client.protocol.RequestProxyAuthentication: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.client.protocol.RequestProxyAuthentication $r0;
        org.apache.http.HttpRequest $r1;
        org.apache.http.protocol.HttpContext $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.http.auth.AuthState $r5;
        org.apache.http.auth.AuthScheme $r6;
        org.apache.http.auth.Credentials $r7;
        org.apache.commons.logging.Log $r8;
        org.apache.http.auth.AuthScope $r9;
        org.apache.http.Header $r10;
        org.apache.http.auth.AuthenticationException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        $r0 := @this: org.apache.http.client.protocol.RequestProxyAuthentication;

        $r1 := @parameter0: org.apache.http.HttpRequest;

        $r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if $r1 != null goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r3;

     label01:
        if $r2 != null goto label02;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r3;

     label02:
        $z0 = interfaceinvoke $r1.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Proxy-Authorization");

        if $z0 == 0 goto label03;

        return;

     label03:
        $r4 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.proxy-scope");

        $r5 = (org.apache.http.auth.AuthState) $r4;

        if $r5 == null goto label08;

        $r6 = virtualinvoke $r5.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if $r6 == null goto label09;

        $r7 = virtualinvoke $r5.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r7 != null goto label04;

        $r8 = $r0.<org.apache.http.client.protocol.RequestProxyAuthentication: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("User credentials not available");

        return;

     label04:
        $r9 = virtualinvoke $r5.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>();

        if $r9 != null goto label05;

        $z0 = interfaceinvoke $r6.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z0 != 0 goto label10;

     label05:
        $r10 = interfaceinvoke $r6.<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>($r7, $r1);

        interfaceinvoke $r1.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r10);

     label06:
        return;

     label07:
        $r11 := @caughtexception;

        $r8 = $r0.<org.apache.http.client.protocol.RequestProxyAuthentication: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z0 == 0 goto label11;

        $r8 = $r0.<org.apache.http.client.protocol.RequestProxyAuthentication: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy authentication error: ");

        $r13 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r13);

        return;

     label08:
        return;

     label09:
        return;

     label10:
        return;

     label11:
        return;

        catch org.apache.http.auth.AuthenticationException from label05 to label06 with label07;
    }
}
