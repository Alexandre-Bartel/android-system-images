public class org.apache.harmony.security.x509.TBSCertificate extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    byte[] encoding;
    private final org.apache.harmony.security.x509.Extensions extensions;
    private final org.apache.harmony.security.x501.Name issuer;
    private final boolean[] issuerUniqueID;
    private final java.math.BigInteger serialNumber;
    private final org.apache.harmony.security.x509.AlgorithmIdentifier signature;
    private final org.apache.harmony.security.x501.Name subject;
    private final org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo;
    private final boolean[] subjectUniqueID;
    private final org.apache.harmony.security.x509.Validity validity;
    private final int version;

    static void <clinit>()
    {
        org.apache.harmony.security.x509.TBSCertificate$1 $r0;
        org.apache.harmony.security.asn1.ASN1Type[] $r1;
        org.apache.harmony.security.asn1.ASN1Explicit $r2;
        org.apache.harmony.security.asn1.ASN1Integer $r3;
        org.apache.harmony.security.asn1.ASN1Sequence $r4;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r5;
        org.apache.harmony.security.asn1.ASN1Implicit $r6;
        org.apache.harmony.security.asn1.ASN1BitString $r7;
        org.apache.harmony.security.asn1.ASN1Type $r8;

        $r0 = new org.apache.harmony.security.x509.TBSCertificate$1;

        $r1 = newarray (org.apache.harmony.security.asn1.ASN1Type)[10];

        $r2 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r3);

        $r1[0] = $r2;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        $r1[1] = $r3;

        $r4 = <org.apache.harmony.security.x509.AlgorithmIdentifier: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1[2] = $r4;

        $r5 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r1[3] = $r5;

        $r4 = <org.apache.harmony.security.x509.Validity: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1[4] = $r4;

        $r5 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r1[5] = $r5;

        $r4 = <org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1[6] = $r4;

        $r6 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r7 = staticinvoke <org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()>();

        specialinvoke $r6.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(1, $r7);

        $r1[7] = $r6;

        $r6 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r7 = staticinvoke <org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()>();

        specialinvoke $r6.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(2, $r7);

        $r1[8] = $r6;

        $r2 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r8 = <org.apache.harmony.security.x509.Extensions: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(3, $r8);

        $r1[9] = $r2;

        specialinvoke $r0.<org.apache.harmony.security.x509.TBSCertificate$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r1);

        <org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r0;

        return;
    }

    public void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        int $i0;
        java.math.BigInteger $r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r2;
        org.apache.harmony.security.x501.Name $r3, $r5;
        org.apache.harmony.security.x509.Validity $r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r6;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        $r3 := @parameter3: org.apache.harmony.security.x501.Name;

        $r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        $r5 := @parameter5: org.apache.harmony.security.x501.Name;

        $r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        specialinvoke $r0.<org.apache.harmony.security.x509.TBSCertificate: void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions)>($i0, $r1, $r2, $r3, $r4, $r5, $r6, null, null, null);

        return;
    }

    public void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, boolean[], boolean[], org.apache.harmony.security.x509.Extensions)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        int $i0;
        java.math.BigInteger $r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r2;
        org.apache.harmony.security.x501.Name $r3, $r5;
        org.apache.harmony.security.x509.Validity $r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r6;
        boolean[] $r7, $r8;
        org.apache.harmony.security.x509.Extensions $r9;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        $r3 := @parameter3: org.apache.harmony.security.x501.Name;

        $r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        $r5 := @parameter5: org.apache.harmony.security.x501.Name;

        $r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        $r7 := @parameter7: boolean[];

        $r8 := @parameter8: boolean[];

        $r9 := @parameter9: org.apache.harmony.security.x509.Extensions;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x509.TBSCertificate: int version> = $i0;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber> = $r1;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature> = $r2;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer> = $r3;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity> = $r4;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject> = $r5;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo> = $r6;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID> = $r7;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID> = $r8;

        $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions> = $r9;

        return;
    }

    private void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, boolean[], boolean[], org.apache.harmony.security.x509.Extensions, byte[])
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        int $i0;
        java.math.BigInteger $r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r2;
        org.apache.harmony.security.x501.Name $r3, $r5;
        org.apache.harmony.security.x509.Validity $r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r6;
        boolean[] $r7, $r8;
        org.apache.harmony.security.x509.Extensions $r9;
        byte[] $r10;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        $r3 := @parameter3: org.apache.harmony.security.x501.Name;

        $r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        $r5 := @parameter5: org.apache.harmony.security.x501.Name;

        $r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        $r7 := @parameter7: boolean[];

        $r8 := @parameter8: boolean[];

        $r9 := @parameter9: org.apache.harmony.security.x509.Extensions;

        $r10 := @parameter10: byte[];

        specialinvoke $r0.<org.apache.harmony.security.x509.TBSCertificate: void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions)>($i0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9);

        $r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding> = $r10;

        return;
    }

    void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, boolean[], boolean[], org.apache.harmony.security.x509.Extensions, byte[], org.apache.harmony.security.x509.TBSCertificate$1)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        int $i0;
        java.math.BigInteger $r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r2;
        org.apache.harmony.security.x501.Name $r3, $r5;
        org.apache.harmony.security.x509.Validity $r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r6;
        boolean[] $r7, $r8;
        org.apache.harmony.security.x509.Extensions $r9;
        byte[] $r10;
        org.apache.harmony.security.x509.TBSCertificate$1 $r11;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        $r3 := @parameter3: org.apache.harmony.security.x501.Name;

        $r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        $r5 := @parameter5: org.apache.harmony.security.x501.Name;

        $r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        $r7 := @parameter7: boolean[];

        $r8 := @parameter8: boolean[];

        $r9 := @parameter9: org.apache.harmony.security.x509.Extensions;

        $r10 := @parameter10: byte[];

        $r11 := @parameter11: org.apache.harmony.security.x509.TBSCertificate$1;

        specialinvoke $r0.<org.apache.harmony.security.x509.TBSCertificate: void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[])>($i0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10);

        return;
    }

    static int access$100(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        int i0;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        i0 = $r0.<org.apache.harmony.security.x509.TBSCertificate: int version>;

        return i0;
    }

    static org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.Extensions r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        return r1;
    }

    static java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        java.math.BigInteger r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber>;

        return r1;
    }

    static org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.AlgorithmIdentifier r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature>;

        return r1;
    }

    static org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x501.Name r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer>;

        return r1;
    }

    static org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.Validity r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        return r1;
    }

    static org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x501.Name r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject>;

        return r1;
    }

    static org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        return r1;
    }

    static boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        boolean[] r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        return r1;
    }

    static boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        boolean[] r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        return r1;
    }

    public void dumpValue(java.lang.StringBuffer)
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        java.lang.StringBuffer $r1, $r2;
        int $i0, $i1;
        org.apache.harmony.security.x501.Name $r3;
        java.lang.String $r4;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r5;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r6;
        java.security.PublicKey $r7;
        org.apache.harmony.security.x509.Validity $r8;
        java.util.Date $r9;
        java.math.BigInteger $r10;
        boolean[] $r11;
        boolean $z0;
        char $c2;
        org.apache.harmony.security.x509.Extensions $r12;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 := @parameter0: java.lang.StringBuffer;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Version: V");

        $i0 = $r0.<org.apache.harmony.security.x509.TBSCertificate: int version>;

        $i0 = $i0 + 1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Subject: ");

        $r3 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Signature Algorithm: ");

        $r5 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature>;

        virtualinvoke $r5.<org.apache.harmony.security.x509.AlgorithmIdentifier: void dumpValue(java.lang.StringBuffer)>($r1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Key: ");

        $r6 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        $r7 = virtualinvoke $r6.<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()>();

        $r4 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Validity: [From: ");

        $r8 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        $r9 = virtualinvoke $r8.<org.apache.harmony.security.x509.Validity: java.util.Date getNotBefore()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n               To: ");

        $r8 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        $r9 = virtualinvoke $r8.<org.apache.harmony.security.x509.Validity: java.util.Date getNotAfter()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Issuer: ");

        $r3 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Serial Number: ");

        $r10 = $r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r11 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        if $r11 == null goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Issuer Id: ");

        $i0 = 0;

     label1:
        $r11 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label4;

        $r11 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        $z0 = $r11[$i0];

        if $z0 == 0 goto label3;

        $c2 = 49;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $c2 = 48;

        goto label2;

     label4:
        $r11 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        if $r11 == null goto label8;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Subject Id: ");

        $i0 = 0;

     label5:
        $r11 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label8;

        $r11 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        $z0 = $r11[$i0];

        if $z0 == 0 goto label7;

        $c2 = 49;

     label6:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $i0 = $i0 + 1;

        goto label5;

     label7:
        $c2 = 48;

        goto label6;

     label8:
        $r12 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        if $r12 == null goto label9;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\n  Extensions: ");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[\n");

        $r12 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        virtualinvoke $r12.<org.apache.harmony.security.x509.Extensions: void dumpValue(java.lang.StringBuffer,java.lang.String)>($r1, "    ");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ]");

     label9:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n]");

        return;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Sequence $r2;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r0);

        $r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding>;

        return $r1;
    }

    public org.apache.harmony.security.x509.Extensions getExtensions()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.Extensions r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        return r1;
    }

    public org.apache.harmony.security.x501.Name getIssuer()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x501.Name r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer>;

        return r1;
    }

    public boolean[] getIssuerUniqueID()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        boolean[] r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        return r1;
    }

    public java.math.BigInteger getSerialNumber()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber>;

        return r1;
    }

    public org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.AlgorithmIdentifier r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature>;

        return r1;
    }

    public org.apache.harmony.security.x501.Name getSubject()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x501.Name r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject>;

        return r1;
    }

    public org.apache.harmony.security.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        return r1;
    }

    public boolean[] getSubjectUniqueID()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        boolean[] r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        return r1;
    }

    public org.apache.harmony.security.x509.Validity getValidity()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        org.apache.harmony.security.x509.Validity r1;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 = $r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        return r1;
    }

    public int getVersion()
    {
        org.apache.harmony.security.x509.TBSCertificate $r0;
        int i0;

        $r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        i0 = $r0.<org.apache.harmony.security.x509.TBSCertificate: int version>;

        return i0;
    }
}
