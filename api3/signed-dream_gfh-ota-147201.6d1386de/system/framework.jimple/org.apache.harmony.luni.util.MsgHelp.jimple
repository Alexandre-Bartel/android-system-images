public final class org.apache.harmony.luni.util.MsgHelp extends java.lang.Object
{
    private static java.util.HashMap sRefMap;

    static void <clinit>()
    {
        <org.apache.harmony.luni.util.MsgHelp: java.util.HashMap sRefMap> = null;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.luni.util.MsgHelp $r0;

        $r0 := @this: org.apache.harmony.luni.util.MsgHelp;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0, $r5;
        java.lang.Object[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String[] $r3;
        byte $b0;
        int $i1, $i2, $i3;
        java.lang.Object $r4;
        char $c4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $r2 = new java.lang.StringBuilder;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = lengthof $r1;

        $i2 = $i2 * 20;

        $i1 = $i1 + $i2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = lengthof $r1;

        $r3 = newarray (java.lang.String)[$i1];

        $i1 = 0;

     label01:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label04;

        $r4 = $r1[$i1];

        if $r4 != null goto label03;

        $r3[$i1] = "<null>";

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        $r4 = $r1[$i1];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r3[$i1] = $r5;

        goto label02;

     label04:
        $i1 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(123, 0);

     label05:
        if $i2 < 0 goto label14;

        if $i2 == 0 goto label08;

        $i3 = $i2 - 1;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        if $c4 != 92 goto label08;

        if $i2 == 1 goto label06;

        $i3 = $i2 - 1;

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label06:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i1 = $i2 + 1;

     label07:
        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(123, $i1);

        goto label05;

     label08:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = $i3 - 3;

        if $i2 <= $i3 goto label09;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        goto label07;

     label09:
        $i3 = $i2 + 1;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = staticinvoke <java.lang.Character: int digit(char,int)>($c4, 10);

        $b0 = (byte) $i3;

        if $b0 < 0 goto label10;

        $i3 = $i2 + 2;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        if $c4 == 125 goto label11;

     label10:
        $i3 = $i2 + 1;

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = $i2 + 1;

        goto label07;

     label11:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = lengthof $r3;

        if $b0 < $i1 goto label13;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<missing argument>");

     label12:
        $i1 = $i2 + 3;

        goto label07;

     label13:
        $r5 = $r3[$b0];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label12;

     label14:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label15;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label15:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getString(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.util.MissingResourceException $r2;
        java.util.ResourceBundle $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <org.apache.harmony.luni.util.MsgHelp: java.util.ResourceBundle loadBundle(java.lang.String)>($r0);

        if $r3 != null goto label1;

        return $r1;

     label1:
        $r0 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r1);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing message: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    public static java.lang.String getString(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0, $r1, $r3;
        java.lang.Object[] $r2;
        java.util.ResourceBundle $r4;
        java.util.MissingResourceException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object[];

        $r3 = $r1;

        $r4 = staticinvoke <org.apache.harmony.luni.util.MsgHelp: java.util.ResourceBundle loadBundle(java.lang.String)>($r0);

        if $r4 == null goto label3;

     label1:
        $r0 = virtualinvoke $r4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r1);

     label2:
        $r3 = $r0;

     label3:
        $r0 = staticinvoke <org.apache.harmony.luni.util.MsgHelp: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r2);

        return $r0;

     label4:
        $r5 := @caughtexception;

        goto label3;

        catch java.util.MissingResourceException from label1 to label2 with label4;
    }

    public static java.util.ResourceBundle loadBundle(java.lang.String)
    {
        java.lang.ref.SoftReference $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.util.Locale $r4;
        java.util.ResourceBundle $r5;
        java.lang.Throwable $r6, $r9, $r10;
        java.util.logging.Logger $r7;
        java.lang.StringBuilder $r8;

        $r1 := @parameter0: java.lang.String;

        entermonitor class "org/apache/harmony/luni/util/MsgHelp";

     label01:
        $r2 = <org.apache.harmony.luni.util.MsgHelp: java.util.HashMap sRefMap>;

        if $r2 != null goto label02;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.harmony.luni.util.MsgHelp: java.util.HashMap sRefMap> = $r2;

     label02:
        $r2 = <org.apache.harmony.luni.util.MsgHelp: java.util.HashMap sRefMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r0 = (java.lang.ref.SoftReference) $r3;

        if $r0 == null goto label04;

        $r3 = virtualinvoke $r0.<java.lang.ref.Reference: java.lang.Object get()>();

     label03:
        if $r3 != null goto label09;

     label04:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = staticinvoke <org.apache.harmony.luni.util.MsgHelp: java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String)>($r4, $r1);

        $r0 = new java.lang.ref.SoftReference;

        specialinvoke $r0.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r5);

     label05:
        $r2 = <org.apache.harmony.luni.util.MsgHelp: java.util.HashMap sRefMap>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);

     label06:
        exitmonitor class "org/apache/harmony/luni/util/MsgHelp";

        return $r5;

     label07:
        $r6 := @caughtexception;

     label08:
        $r7 = <java.util.logging.Logger: java.util.logging.Logger global>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got Throwable ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" loading messages");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void warning(java.lang.String)>($r1);

        $r5 = null;

        goto label06;

     label09:
        $r3 = virtualinvoke $r0.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (java.util.ResourceBundle) $r3;

     label10:
        goto label06;

     label11:
        $r9 := @caughtexception;

        exitmonitor class "org/apache/harmony/luni/util/MsgHelp";

        throw $r9;

     label12:
        $r10 := @caughtexception;

        $r6 = $r10;

        goto label08;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label10 with label11;
    }

    public static java.util.ResourceBundle setLocale(java.util.Locale, java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        java.util.Locale $r2;
        org.apache.harmony.luni.util.MsgHelp$1 $r3;
        java.util.ResourceBundle $r4;
        java.util.MissingResourceException $r5;

        $r2 := @parameter0: java.util.Locale;

        $r0 := @parameter1: java.lang.String;

        $r3 = new org.apache.harmony.luni.util.MsgHelp$1;

     label1:
        specialinvoke $r3.<org.apache.harmony.luni.util.MsgHelp$1: void <init>(java.lang.String,java.util.Locale)>($r0, $r2);

        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

     label2:
        $r4 = (java.util.ResourceBundle) $r1;

        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }
}
