class com.android.im.plugin.IImPlugin$Stub$Proxy extends java.lang.Object implements com.android.im.plugin.IImPlugin
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.im.plugin.IImPlugin$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: com.android.im.plugin.IImPlugin$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.im.plugin.IImPlugin$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.im.plugin.IImPlugin$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: com.android.im.plugin.IImPlugin$Stub$Proxy;

        r1 = $r0.<com.android.im.plugin.IImPlugin$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.im.plugin.IImPlugin$Stub$Proxy $r0;

        $r0 := @this: com.android.im.plugin.IImPlugin$Stub$Proxy;

        return "com.android.im.plugin.IImPlugin";
    }

    public java.util.Map getProviderConfig() throws android.os.RemoteException
    {
        com.android.im.plugin.IImPlugin$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.util.HashMap $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.im.plugin.IImPlugin$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.im.plugin.IImPlugin");

        $r3 = $r0.<com.android.im.plugin.IImPlugin$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r2.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>($r5);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.Map getResourceMap() throws android.os.RemoteException
    {
        com.android.im.plugin.IImPlugin$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.util.HashMap $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.im.plugin.IImPlugin$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.im.plugin.IImPlugin");

        $r3 = $r0.<com.android.im.plugin.IImPlugin$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r2.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>($r5);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int[] getSmileyIconIds() throws android.os.RemoteException
    {
        com.android.im.plugin.IImPlugin$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.im.plugin.IImPlugin$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.im.plugin.IImPlugin");

        $r3 = $r0.<com.android.im.plugin.IImPlugin$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r2.<android.os.Parcel: int[] createIntArray()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
