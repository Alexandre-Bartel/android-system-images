public final class android.database.sqlite.SQLiteDebug extends java.lang.Object
{
    public static final boolean DEBUG_ACTIVE_CURSOR_FINALIZATION;
    public static final boolean DEBUG_LOCK_TIME_TRACKING;
    public static final boolean DEBUG_LOCK_TIME_TRACKING_STACK_TRACE;
    public static final boolean DEBUG_SQL_STATEMENTS;
    private static int sNumActiveCursorsFinalized;

    static void <clinit>()
    {
        <android.database.sqlite.SQLiteDebug: int sNumActiveCursorsFinalized> = 0;

        return;
    }

    public void <init>()
    {
        android.database.sqlite.SQLiteDebug $r0;

        $r0 := @this: android.database.sqlite.SQLiteDebug;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native long getHeapAllocatedSize();

    public static native void getHeapDirtyPages(int[]);

    public static native long getHeapFreeSize();

    public static native long getHeapSize();

    public static int getNumActiveCursorsFinalized()
    {
        int i0;

        i0 = <android.database.sqlite.SQLiteDebug: int sNumActiveCursorsFinalized>;

        return i0;
    }

    public static native void getPagerStats(android.database.sqlite.SQLiteDebug$PagerStats);

    static void notifyActiveCursorFinalized()
    {
        int $i0;
        java.lang.Throwable $r0;

        entermonitor class "android/database/sqlite/SQLiteDebug";

     label1:
        $i0 = <android.database.sqlite.SQLiteDebug: int sNumActiveCursorsFinalized>;

        $i0 = $i0 + 1;

        <android.database.sqlite.SQLiteDebug: int sNumActiveCursorsFinalized> = $i0;

     label2:
        exitmonitor class "android/database/sqlite/SQLiteDebug";

        return;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "android/database/sqlite/SQLiteDebug";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
