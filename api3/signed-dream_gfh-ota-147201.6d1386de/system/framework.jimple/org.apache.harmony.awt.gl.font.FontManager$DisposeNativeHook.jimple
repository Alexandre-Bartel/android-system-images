class org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook extends java.lang.Thread
{
    final org.apache.harmony.awt.gl.font.FontManager this$0;

    private void <init>(org.apache.harmony.awt.gl.font.FontManager)
    {
        org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook $r0;
        org.apache.harmony.awt.gl.font.FontManager $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.FontManager;

        $r0.<org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook: org.apache.harmony.awt.gl.font.FontManager this$0> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook $r0;
        org.apache.harmony.awt.gl.font.FontManager $r1;
        java.util.Hashtable $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.harmony.awt.gl.font.FontManager$HashMapReference $r5;
        org.apache.harmony.awt.gl.font.FontPeerImpl $r6;
        java.lang.Class $r7;
        java.lang.Throwable $r8;
        java.lang.RuntimeException $r9;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook: org.apache.harmony.awt.gl.font.FontManager this$0>;

        $r2 = $r1.<org.apache.harmony.awt.gl.font.FontManager: java.util.Hashtable fontsTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontManager$DisposeNativeHook: org.apache.harmony.awt.gl.font.FontManager this$0>;

        $r2 = $r1.<org.apache.harmony.awt.gl.font.FontManager: java.util.Hashtable fontsTable>;

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r4);

        $r5 = (org.apache.harmony.awt.gl.font.FontManager$HashMapReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

        $r6 = (org.apache.harmony.awt.gl.font.FontPeerImpl) $r4;

        if $r6 == null goto label2;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        if $r7 == class "org/apache/harmony/awt/gl/font/CompositeFont" goto label2;

        virtualinvoke $r6.<org.apache.harmony.awt.gl.font.FontPeerImpl: void dispose()>();

     label3:
        goto label2;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
}
