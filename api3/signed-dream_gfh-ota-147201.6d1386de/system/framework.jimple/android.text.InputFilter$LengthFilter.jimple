public class android.text.InputFilter$LengthFilter extends java.lang.Object implements android.text.InputFilter
{
    private int mMax;

    public void <init>(int)
    {
        android.text.InputFilter$LengthFilter $r0;
        int $i0;

        $r0 := @this: android.text.InputFilter$LengthFilter;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.InputFilter$LengthFilter: int mMax> = $i0;

        return;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        android.text.InputFilter$LengthFilter $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.text.Spanned $r2;

        $r0 := @this: android.text.InputFilter$LengthFilter;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.text.Spanned;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 = $r0.<android.text.InputFilter$LengthFilter: int mMax>;

        $i5 = interfaceinvoke $r2.<android.text.Spanned: int length()>();

        $i2 = $i3 - $i2;

        $i2 = $i5 - $i2;

        $i2 = $i4 - $i2;

        if $i2 > 0 goto label1;

        return "";

     label1:
        $i1 = $i1 - $i0;

        if $i2 < $i1 goto label2;

        return null;

     label2:
        $i1 = $i0 + $i2;

        $r1 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        return $r1;
    }
}
