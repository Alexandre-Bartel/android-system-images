public abstract class org.apache.harmony.xml.dom.InnerNodeImpl extends org.apache.harmony.xml.dom.LeafNodeImpl
{
    java.util.List children;

    public void <init>(org.apache.harmony.xml.dom.DocumentImpl)
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        org.apache.harmony.xml.dom.DocumentImpl $r1;
        java.util.ArrayList $r2;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.apache.harmony.xml.dom.DocumentImpl;

        specialinvoke $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children> = $r2;

        return;
    }

    private void refreshIndices(int)
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.harmony.xml.dom.LeafNodeImpl $r3;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $i0 := @parameter0: int;

     label1:
        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r2;

        $r3.<org.apache.harmony.xml.dom.LeafNodeImpl: int index> = $i0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        org.w3c.dom.Node $r1;
        java.util.List $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int)>($r1, $i0);

        return $r1;
    }

    public org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        org.apache.harmony.xml.dom.NodeListImpl $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.harmony.xml.dom.LeafNodeImpl $r5;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 = new org.apache.harmony.xml.dom.NodeListImpl;

        specialinvoke $r1.<org.apache.harmony.xml.dom.NodeListImpl: void <init>()>();

        $r2 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r4;

        virtualinvoke $r1.<org.apache.harmony.xml.dom.NodeListImpl: void add(org.apache.harmony.xml.dom.NodeImpl)>($r5);

        goto label1;

     label2:
        return $r1;
    }

    public org.w3c.dom.Node getFirstChild()
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.apache.harmony.xml.dom.LeafNodeImpl $r3;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r2;

        return $r3;

     label1:
        return null;
    }

    public org.w3c.dom.Node getLastChild()
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        java.util.List $r1, $r2;
        boolean $z0;
        int $i0;
        java.lang.Object $r3;
        org.apache.harmony.xml.dom.LeafNodeImpl $r4;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 - 1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r3;

        return $r4;

     label1:
        return null;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0, $r1;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.w3c.dom.Node $r4;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r1 == null goto label1;

        $i0 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r2 = $r1.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r2 = $r1.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i0 = $i0 + 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.w3c.dom.Node) $r3;

        return $r4;
    }

    public boolean hasChildNodes()
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0, $r7;
        org.w3c.dom.Node $r1, $r2;
        org.apache.harmony.xml.dom.LeafNodeImpl $r3;
        org.apache.harmony.xml.dom.DocumentImpl $r4, $r5;
        org.w3c.dom.DOMException $r6;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 := @parameter1: org.w3c.dom.Node;

        $r3 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r2;

        $r4 = $r3.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        $r5 = $r0.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r4 == $r5 goto label1;

        $r6 = new org.w3c.dom.DOMException;

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, null);

        throw $r6;

     label1:
        $r7 = $r3.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r7 == $r0 goto label2;

        $r6 = new org.w3c.dom.DOMException;

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, null);

        throw $r6;

     label2:
        $i0 = $r3.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int)>($r1, $i0);

        return $r1;
    }

    public org.w3c.dom.Node insertChildAt(org.w3c.dom.Node, int) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0, $r6;
        org.w3c.dom.Node $r1;
        int $i0, $i1;
        boolean $z0;
        org.apache.harmony.xml.dom.LeafNodeImpl $r2;
        org.apache.harmony.xml.dom.DocumentImpl $r3, $r4;
        org.w3c.dom.DOMException $r5;
        java.util.List $r7;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $i0 := @parameter1: int;

        $r2 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r1;

        $r3 = $r0.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r3 == null goto label1;

        $r3 = $r2.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r3 == null goto label1;

        $r3 = $r2.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        $r4 = $r0.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r3 == $r4 goto label1;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, null);

        throw $r5;

     label1:
        $z0 = virtualinvoke $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: boolean isParentOf(org.w3c.dom.Node)>($r0);

        if $z0 == 0 goto label2;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, null);

        throw $r5;

     label2:
        $r6 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r6 == null goto label3;

        $i1 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $r6 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r7 = $r6.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i1);

        $r6 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        specialinvoke $r6.<org.apache.harmony.xml.dom.InnerNodeImpl: void refreshIndices(int)>($i1);

     label3:
        $r7 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>($i0, $r2);

        $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent> = $r0;

        specialinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: void refreshIndices(int)>($i0);

        return $r1;
    }

    public boolean isParentOf(org.w3c.dom.Node)
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        org.w3c.dom.Node $r1;
        org.apache.harmony.xml.dom.LeafNodeImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r1;

     label1:
        if $r2 == null goto label3;

        if $r2 != $r0 goto label2;

        return 1;

     label2:
        $r2 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        goto label1;

     label3:
        return 0;
    }

    public void normalize()
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0;
        org.w3c.dom.Node $r1, $r4;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        short $s1;
        org.w3c.dom.Text $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 = null;

        $r2 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label5;

        $r2 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.w3c.dom.Node) $r3;

        interfaceinvoke $r4.<org.w3c.dom.Node: void normalize()>();

        $s1 = interfaceinvoke $r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 3 goto label3;

        if $r1 == null goto label2;

        $s1 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 3 goto label2;

        $r5 = (org.w3c.dom.Text) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.w3c.dom.Text: void setData(java.lang.String)>($r7);

        virtualinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r1);

     label2:
        $r7 = "";

        $r8 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r4);

        $r1 = null;

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r1 = $r4;

        goto label3;

     label5:
        return;
    }

    public org.w3c.dom.Node removeChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0, $r6;
        org.w3c.dom.Node $r1;
        int $i0;
        org.apache.harmony.xml.dom.LeafNodeImpl $r2;
        org.apache.harmony.xml.dom.DocumentImpl $r3, $r4;
        org.w3c.dom.DOMException $r5;
        java.util.List $r7;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r1;

        $r3 = $r2.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        $r4 = $r0.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r3 == $r4 goto label1;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, null);

        throw $r5;

     label1:
        $r6 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r6 == $r0 goto label2;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, null);

        throw $r5;

     label2:
        $i0 = $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $r7 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i0);

        $r2.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent> = null;

        specialinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: void refreshIndices(int)>($i0);

        return $r1;
    }

    public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.InnerNodeImpl $r0, $r8;
        org.w3c.dom.Node $r1, $r2;
        int $i0;
        boolean $z0;
        org.apache.harmony.xml.dom.LeafNodeImpl $r3, $r4;
        org.apache.harmony.xml.dom.DocumentImpl $r5, $r6;
        org.w3c.dom.DOMException $r7;
        java.util.List $r9;

        $r0 := @this: org.apache.harmony.xml.dom.InnerNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 := @parameter1: org.w3c.dom.Node;

        $r3 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r2;

        $r4 = (org.apache.harmony.xml.dom.LeafNodeImpl) $r1;

        $r5 = $r3.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        $r6 = $r0.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r5 != $r6 goto label1;

        $r5 = $r4.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        $r6 = $r0.<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        if $r5 == $r6 goto label2;

     label1:
        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, null);

        throw $r7;

     label2:
        $r8 = $r3.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r8 != $r0 goto label3;

        $z0 = virtualinvoke $r4.<org.apache.harmony.xml.dom.LeafNodeImpl: boolean isParentOf(org.w3c.dom.Node)>($r0);

        if $z0 == 0 goto label4;

     label3:
        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, null);

        throw $r7;

     label4:
        $i0 = $r3.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $r9 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        interfaceinvoke $r9.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r4);

        $r3.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent> = null;

        $r4.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent> = $r0;

        specialinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: void refreshIndices(int)>($i0);

        return $r3;
    }
}
