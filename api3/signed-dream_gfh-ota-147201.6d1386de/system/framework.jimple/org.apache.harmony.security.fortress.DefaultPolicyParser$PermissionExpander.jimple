class org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander extends java.lang.Object implements org.apache.harmony.security.fortress.PolicyUtils$GeneralExpansionHandler
{
    private org.apache.harmony.security.DefaultPolicyScanner$GrantEntry ge;
    private java.security.KeyStore ks;
    final org.apache.harmony.security.fortress.DefaultPolicyParser this$0;

    void <init>(org.apache.harmony.security.fortress.DefaultPolicyParser)
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander $r0;
        org.apache.harmony.security.fortress.DefaultPolicyParser $r1;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander;

        $r1 := @parameter0: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.fortress.DefaultPolicyParser this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.String pc2str(java.security.Principal)
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander $r0;
        java.security.Principal $r1;
        java.lang.StringBuffer $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r5;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander;

        $r1 := @parameter0: java.security.Principal;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r1.<java.security.Principal: java.lang.String getName()>();

        $r2 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 5;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander configure(org.apache.harmony.security.DefaultPolicyScanner$GrantEntry, java.security.KeyStore)
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander $r0;
        org.apache.harmony.security.DefaultPolicyScanner$GrantEntry $r1;
        java.security.KeyStore $r2;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander;

        $r1 := @parameter0: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry;

        $r2 := @parameter1: java.security.KeyStore;

        $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry ge> = $r1;

        $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: java.security.KeyStore ks> = $r2;

        return $r0;
    }

    public java.lang.String resolve(java.lang.String, java.lang.String) throws org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander $r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuffer $r3, $r15;
        boolean $z0;
        org.apache.harmony.security.DefaultPolicyScanner$GrantEntry $r5;
        java.util.Collection $r6;
        int $i0;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry $r9;
        org.apache.harmony.security.fortress.DefaultPolicyParser $r10;
        java.security.KeyStore $r11;
        java.security.Principal $r12;
        java.lang.Exception $r13, $r16;
        org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException $r14;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = "self";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label08;

        $r5 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry ge>;

        $r6 = $r5.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection principals>;

        if $r6 == null goto label07;

        $r5 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry ge>;

        $r6 = $r5.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection principals>;

        $i0 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        if $i0 == 0 goto label07;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry ge>;

        $r6 = $r5.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection principals>;

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry) $r8;

        $r1 = $r9.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String klass>;

        if $r1 != null goto label05;

     label02:
        $r10 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.fortress.DefaultPolicyParser this$0>;

        $r11 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: java.security.KeyStore ks>;

        $r1 = $r9.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name>;

        $r12 = virtualinvoke $r10.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.Principal getPrincipalByAlias(java.security.KeyStore,java.lang.String)>($r11, $r1);

        $r1 = specialinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: java.lang.String pc2str(java.security.Principal)>($r12);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label03:
        goto label01;

     label04:
        $r13 := @caughtexception;

        $r14 = new org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException;

        $r1 = $r9.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name>;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.143", $r1);

        specialinvoke $r14.<org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r13);

        throw $r14;

     label05:
        $r1 = $r9.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String klass>;

        $r15 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r1 = $r9.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" ");

        goto label01;

     label06:
        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label07:
        $r14 = new org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.144");

        specialinvoke $r14.<org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException: void <init>(java.lang.String)>($r1);

        throw $r14;

     label08:
        $r4 = "alias";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label12;

     label09:
        $r10 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.fortress.DefaultPolicyParser this$0>;

        $r11 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: java.security.KeyStore ks>;

        $r12 = virtualinvoke $r10.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.Principal getPrincipalByAlias(java.security.KeyStore,java.lang.String)>($r11, $r2);

        $r1 = specialinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: java.lang.String pc2str(java.security.Principal)>($r12);

     label10:
        return $r1;

     label11:
        $r16 := @caughtexception;

        $r14 = new org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.143", $r2);

        specialinvoke $r14.<org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r16);

        throw $r14;

     label12:
        $r14 = new org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.145", $r1);

        specialinvoke $r14.<org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException: void <init>(java.lang.String)>($r1);

        throw $r14;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
