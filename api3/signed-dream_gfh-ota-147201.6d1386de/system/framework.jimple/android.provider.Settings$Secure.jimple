public final class android.provider.Settings$Secure extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String ALLOW_MOCK_LOCATION;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String BACKGROUND_DATA;
    public static final java.lang.String BLUETOOTH_ON;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DEFAULT_INPUT_METHOD;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String ENABLED_INPUT_METHODS;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String LOGGING_ID2;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_ALLOWED_CHANNELS;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_WATCH_LIST;
    private static volatile android.provider.Settings$NameValueCache mNameValueCache;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_WATCH_LIST> = "wifi_watchdog_watch_list";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS> = "wifi_watchdog_ping_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_PING_DELAY_MS> = "wifi_watchdog_ping_delay_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_PING_COUNT> = "wifi_watchdog_ping_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_ON> = "wifi_watchdog_on";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS> = "wifi_watchdog_max_ap_checks";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT> = "wifi_watchdog_initial_ignored_ping_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS> = "wifi_watchdog_background_check_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED> = "wifi_watchdog_background_check_enabled";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS> = "wifi_watchdog_background_check_delay_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_AP_COUNT> = "wifi_watchdog_ap_count";

        <android.provider.Settings$Secure: java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE> = "wifi_watchdog_acceptable_packet_loss_percentage";

        <android.provider.Settings$Secure: java.lang.String WIFI_ON> = "wifi_on";

        <android.provider.Settings$Secure: java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT> = "wifi_num_open_networks_kept";

        <android.provider.Settings$Secure: java.lang.String WIFI_NUM_ALLOWED_CHANNELS> = "wifi_num_allowed_channels";

        <android.provider.Settings$Secure: java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY> = "wifi_networks_available_repeat_delay";

        <android.provider.Settings$Secure: java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wifi_networks_available_notification_on";

        <android.provider.Settings$Secure: java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS> = "wifi_mobile_data_transition_wakelock_timeout_ms";

        <android.provider.Settings$Secure: java.lang.String WIFI_MAX_DHCP_RETRY_COUNT> = "wifi_max_dhcp_retry_count";

        <android.provider.Settings$Secure: java.lang.String USE_GOOGLE_MAIL> = "use_google_mail";

        <android.provider.Settings$Secure: java.lang.String USB_MASS_STORAGE_ENABLED> = "usb_mass_storage_enabled";

        <android.provider.Settings$Secure: java.lang.String SYS_PROP_SETTING_VERSION> = "sys.settings_secure_version";

        <android.provider.Settings$Secure: java.lang.String SETTINGS_CLASSNAME> = "settings_classname";

        <android.provider.Settings$Secure: java.lang.String PARENTAL_CONTROL_REDIRECT_URL> = "parental_control_redirect_url";

        <android.provider.Settings$Secure: java.lang.String PARENTAL_CONTROL_LAST_UPDATE> = "parental_control_last_update";

        <android.provider.Settings$Secure: java.lang.String PARENTAL_CONTROL_ENABLED> = "parental_control_enabled";

        <android.provider.Settings$Secure: java.lang.String NETWORK_PREFERENCE> = "network_preference";

        <android.provider.Settings$Secure: java.lang.String LOGGING_ID2> = "logging_id2";

        <android.provider.Settings$Secure: java.lang.String LOGGING_ID> = "logging_id";

        <android.provider.Settings$Secure: java.lang.String LOCATION_PROVIDERS_ALLOWED> = "location_providers_allowed";

        <android.provider.Settings$Secure: java.lang.String INSTALL_NON_MARKET_APPS> = "install_non_market_apps";

        <android.provider.Settings$Secure: java.lang.String HTTP_PROXY> = "http_proxy";

        <android.provider.Settings$Secure: java.lang.String ENABLED_INPUT_METHODS> = "enabled_input_methods";

        <android.provider.Settings$Secure: java.lang.String DEVICE_PROVISIONED> = "device_provisioned";

        <android.provider.Settings$Secure: java.lang.String DEFAULT_INPUT_METHOD> = "default_input_method";

        <android.provider.Settings$Secure: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.provider.Settings$Secure: java.lang.String BLUETOOTH_ON> = "bluetooth_on";

        <android.provider.Settings$Secure: java.lang.String BACKGROUND_DATA> = "background_data";

        <android.provider.Settings$Secure: java.lang.String ANDROID_ID> = "android_id";

        <android.provider.Settings$Secure: java.lang.String ALLOW_MOCK_LOCATION> = "mock_location";

        <android.provider.Settings$Secure: java.lang.String ADB_ENABLED> = "adb_enabled";

        <android.provider.Settings$Secure: android.provider.Settings$NameValueCache mNameValueCache> = null;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/secure");

        <android.provider.Settings$Secure: android.net.Uri CONTENT_URI> = $r0;

        return;
    }

    public void <init>()
    {
        android.provider.Settings$Secure $r0;

        $r0 := @this: android.provider.Settings$Secure;

        specialinvoke $r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static final java.lang.String getBluetoothA2dpSinkPriorityKey(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bluetooth_a2dp_sink_priority_");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static final java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bluetooth_headset_priority_");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r3;
        java.lang.NumberFormatException $r2;
        float $f0;
        android.provider.Settings$SettingNotFoundException $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

     label2:
        return $f0;

     label3:
        $r2 := @caughtexception;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        float $f0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

        $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

     label2:
        return $f0;

     label3:
        return $f0;

     label4:
        $r2 := @caughtexception;

        return $f0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r3;
        java.lang.NumberFormatException $r2;
        int $i0;
        android.provider.Settings$SettingNotFoundException $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        return $i0;

     label4:
        $r2 := @caughtexception;

        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r3;
        java.lang.NumberFormatException $r2;
        long $l0;
        android.provider.Settings$SettingNotFoundException $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        long $l0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l0;

     label3:
        return $l0;

     label4:
        $r2 := @caughtexception;

        return $l0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        android.net.Uri $r2;
        android.provider.Settings$NameValueCache $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "android/provider/Settings$Secure";

     label1:
        $r3 = <android.provider.Settings$Secure: android.provider.Settings$NameValueCache mNameValueCache>;

        if $r3 != null goto label2;

        $r3 = new android.provider.Settings$NameValueCache;

        $r2 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        specialinvoke $r3.<android.provider.Settings$NameValueCache: void <init>(java.lang.String,android.net.Uri)>("sys.settings_secure_version", $r2);

        <android.provider.Settings$Secure: android.provider.Settings$NameValueCache mNameValueCache> = $r3;

     label2:
        $r3 = <android.provider.Settings$Secure: android.provider.Settings$NameValueCache mNameValueCache>;

        $r1 = virtualinvoke $r3.<android.provider.Settings$NameValueCache: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label3:
        exitmonitor class "android/provider/Settings$Secure";

        return $r1;

     label4:
        $r4 := @caughtexception;

        exitmonitor class "android/provider/Settings$Secure";

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String $r0;
        android.net.Uri $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r1, $r0);

        return $r1;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        float $f0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.net.Uri $r3;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $z0 = staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r3, $r1, $r2);

        return $z0;
    }
}
