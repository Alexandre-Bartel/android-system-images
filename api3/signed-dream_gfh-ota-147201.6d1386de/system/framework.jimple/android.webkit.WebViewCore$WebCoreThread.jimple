class android.webkit.WebViewCore$WebCoreThread extends java.lang.Object implements java.lang.Runnable
{
    private static final int BLOCK_CACHE_TICKER;
    private static final int CACHE_TICKER;
    private static final int CACHE_TICKER_INTERVAL;
    private static final int INITIALIZE;
    private static final int REDUCE_PRIORITY;
    private static final int RESUME_CACHE_TICKER;
    private static final int RESUME_PRIORITY;
    private static boolean mCacheTickersBlocked;

    static void <clinit>()
    {
        <android.webkit.WebViewCore$WebCoreThread: int RESUME_PRIORITY> = 2;

        <android.webkit.WebViewCore$WebCoreThread: int RESUME_CACHE_TICKER> = 5;

        <android.webkit.WebViewCore$WebCoreThread: int REDUCE_PRIORITY> = 1;

        <android.webkit.WebViewCore$WebCoreThread: int INITIALIZE> = 0;

        <android.webkit.WebViewCore$WebCoreThread: int CACHE_TICKER_INTERVAL> = 60000;

        <android.webkit.WebViewCore$WebCoreThread: int CACHE_TICKER> = 3;

        <android.webkit.WebViewCore$WebCoreThread: int BLOCK_CACHE_TICKER> = 4;

        <android.webkit.WebViewCore$WebCoreThread: boolean mCacheTickersBlocked> = 1;

        return;
    }

    private void <init>()
    {
        android.webkit.WebViewCore$WebCoreThread $r0;

        $r0 := @this: android.webkit.WebViewCore$WebCoreThread;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.webkit.WebViewCore$1)
    {
        android.webkit.WebViewCore$WebCoreThread $r0;
        android.webkit.WebViewCore$1 $r1;

        $r0 := @this: android.webkit.WebViewCore$WebCoreThread;

        $r1 := @parameter0: android.webkit.WebViewCore$1;

        specialinvoke $r0.<android.webkit.WebViewCore$WebCoreThread: void <init>()>();

        return;
    }

    static boolean access$500()
    {
        boolean z0;

        z0 = <android.webkit.WebViewCore$WebCoreThread: boolean mCacheTickersBlocked>;

        return z0;
    }

    static boolean access$502(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <android.webkit.WebViewCore$WebCoreThread: boolean mCacheTickersBlocked> = $z0;

        return $z0;
    }

    public void run()
    {
        android.webkit.WebViewCore$WebCoreThread $r0;
        android.os.Handler $r1;
        android.webkit.WebViewCore$WebCoreThread$1 $r2;
        java.lang.Class $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.WebViewCore$WebCoreThread;

        staticinvoke <android.os.Looper: void prepare()>();

        $r1 = staticinvoke <android.webkit.WebViewCore: android.os.Handler access$300()>();

        staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r1);

        entermonitor class "android/webkit/WebViewCore";

     label1:
        $r2 = new android.webkit.WebViewCore$WebCoreThread$1;

        specialinvoke $r2.<android.webkit.WebViewCore$WebCoreThread$1: void <init>(android.webkit.WebViewCore$WebCoreThread)>($r0);

        staticinvoke <android.webkit.WebViewCore: android.os.Handler access$302(android.os.Handler)>($r2);

        $r3 = class "android/webkit/WebViewCore";

        virtualinvoke $r3.<java.lang.Object: void notify()>();

        exitmonitor class "android/webkit/WebViewCore";

     label2:
        staticinvoke <android.os.Looper: void loop()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor class "android/webkit/WebViewCore";

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
