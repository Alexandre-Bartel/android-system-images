final class org.apache.harmony.luni.platform.OSMemory extends org.apache.harmony.luni.platform.OSComponent implements org.apache.harmony.luni.platform.IMemorySystem
{
    public static final org.apache.harmony.luni.platform.Endianness NATIVE_ORDER;
    public static final int POINTER_SIZE;
    private static final org.apache.harmony.luni.platform.OSMemory singleton;

    static void <clinit>()
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        boolean $z0;
        org.apache.harmony.luni.platform.Endianness $r1;

        $r0 = new org.apache.harmony.luni.platform.OSMemory;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void <init>()>();

        <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.OSMemory singleton> = $r0;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSMemory: int getPointerSizeImpl()>();

        <org.apache.harmony.luni.platform.OSMemory: int POINTER_SIZE> = $i0;

        $z0 = staticinvoke <org.apache.harmony.luni.platform.OSMemory: boolean isLittleEndianImpl()>();

        if $z0 == 0 goto label1;

        $r1 = <org.apache.harmony.luni.platform.Endianness: org.apache.harmony.luni.platform.Endianness LITTLE_ENDIAN>;

        <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER> = $r1;

        return;

     label1:
        $r1 = <org.apache.harmony.luni.platform.Endianness: org.apache.harmony.luni.platform.Endianness BIG_ENDIAN>;

        <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER> = $r1;

        return;
    }

    void <init>()
    {
        org.apache.harmony.luni.platform.OSMemory $r0;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSComponent: void <init>()>();

        return;
    }

    private native int flushImpl(int, long);

    public static org.apache.harmony.luni.platform.OSMemory getOSMemory()
    {
        org.apache.harmony.luni.platform.OSMemory r0;

        r0 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.OSMemory singleton>;

        return r0;
    }

    private static native int getPointerSizeImpl();

    private static native boolean isLittleEndianImpl();

    private native boolean isLoadedImpl(int, long);

    private native int loadImpl(int, long);

    private native int mmapImpl(int, long, long, int);

    private int swap(int)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0, $i3;
        short $s1, $s2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $i3 = $i0 >> 16;

        $s1 = (short) $i3;

        $s2 = (short) $i0;

        $s2 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: short swap(short)>($s2);

        $i3 = $s2 << 16;

        $s1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: short swap(short)>($s1);

        $i0 = $s1 & 65535;

        $i0 = $i3 | $i0;

        return $i0;
    }

    private long swap(long)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        long $l0, $l1;
        int $i2, $i3;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $l0 := @parameter0: long;

        $l1 = $l0 >> 32;

        $i2 = (int) $l1;

        $i3 = (int) $l0;

        $i3 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int swap(int)>($i3);

        $l0 = (long) $i3;

        $l0 = $l0 << 32;

        $i2 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int swap(int)>($i2);

        $l1 = (long) $i2;

        $l1 = $l1 & 4294967295L;

        $l0 = $l0 | $l1;

        return $l0;
    }

    private short swap(short)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        short $s0;
        int $i1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $s0 := @parameter0: short;

        $i1 = $s0 << 8;

        $s0 = $s0 >> 8;

        $s0 = $s0 & 255;

        $i1 = $i1 | $s0;

        $s0 = (short) $i1;

        return $s0;
    }

    private native void unmapImpl(int, long);

    public void flush(int, long)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int flushImpl(int,long)>($i0, $l1);

        return;
    }

    public native void free(int);

    public native int getAddress(int);

    public native byte getByte(int);

    public native void getByteArray(int, byte[], int, int) throws java.lang.NullPointerException, java.lang.IndexOutOfBoundsException;

    public native double getDouble(int);

    public double getDouble(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;
        double $d0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        $d0 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: double getDouble(int)>($i0);

        return $d0;

     label1:
        $l1 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long getLong(int)>($i0);

        $l1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long swap(long)>($l1);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d0;
    }

    public native float getFloat(int);

    public float getFloat(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;
        float $f0;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        $f0 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: float getFloat(int)>($i0);

        return $f0;

     label1:
        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int getInt(int)>($i0);

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int swap(int)>($i0);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public native int getInt(int);

    public int getInt(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int getInt(int)>($i0);

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int getInt(int)>($i0);

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int swap(int)>($i0);

        return $i0;
    }

    public native long getLong(int);

    public long getLong(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        $l1 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long getLong(int)>($i0);

        return $l1;

     label1:
        $l1 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long getLong(int)>($i0);

        $l1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long swap(long)>($l1);

        return $l1;
    }

    public org.apache.harmony.luni.platform.Endianness getNativeOrder()
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        org.apache.harmony.luni.platform.Endianness r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        r1 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        return r1;
    }

    public int getPointerSize()
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        i0 = <org.apache.harmony.luni.platform.OSMemory: int POINTER_SIZE>;

        return i0;
    }

    public native short getShort(int);

    public short getShort(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;
        short $s1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        $s1 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: short getShort(int)>($i0);

        return $s1;

     label1:
        $s1 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: short getShort(int)>($i0);

        $s1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: short swap(short)>($s1);

        return $s1;
    }

    public boolean isLittleEndian()
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $z0 = staticinvoke <org.apache.harmony.luni.platform.OSMemory: boolean isLittleEndianImpl()>();

        return $z0;
    }

    public boolean isLoaded(int, long)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        long $l1;
        boolean $z0;
        byte $b2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: boolean isLoadedImpl(int,long)>($i0, $l1);

        return $z0;
    }

    public void load(int, long)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int loadImpl(int,long)>($i0, $l1);

        return;
    }

    public native int malloc(int) throws java.lang.OutOfMemoryError;

    public native void memmove(int, int, long);

    public native void memset(int, byte, long);

    public int mmap(int, long, long, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0, $i3;
        long $l1, $l2;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $i3 := @parameter3: int;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int mmapImpl(int,long,long,int)>($i0, $l1, $l2, $i3);

        if $i0 != -1 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return $i0;
    }

    public native void setAddress(int, int);

    public native void setByte(int, byte);

    public native void setByteArray(int, byte[], int, int) throws java.lang.NullPointerException, java.lang.IndexOutOfBoundsException;

    public native void setDouble(int, double);

    public void setDouble(int, double, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        double $d0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setDouble(int,double)>($i0, $d0);

        return;

     label1:
        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $l1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long swap(long)>($l1);

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setLong(int,long)>($i0, $l1);

        return;
    }

    public native void setFloat(int, float);

    public void setFloat(int, float, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0, $i1;
        float $f0;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setFloat(int,float)>($i0, $f0);

        return;

     label1:
        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int swap(int)>($i1);

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setInt(int,int)>($i0, $i1);

        return;
    }

    public native void setInt(int, int);

    public void setInt(int, int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0, $i1;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setInt(int,int)>($i0, $i1);

        return;

     label1:
        $i1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: int swap(int)>($i1);

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setInt(int,int)>($i0, $i1);

        return;
    }

    public native void setIntArray(int, int[], int, int, boolean) throws java.lang.NullPointerException, java.lang.IndexOutOfBoundsException;

    public native void setLong(int, long);

    public void setLong(int, long, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        long $l1;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setLong(int,long)>($i0, $l1);

        return;

     label1:
        $l1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: long swap(long)>($l1);

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setLong(int,long)>($i0, $l1);

        return;
    }

    public native void setShort(int, short);

    public void setShort(int, short, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        short $s1;
        org.apache.harmony.luni.platform.Endianness $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $s1 := @parameter1: short;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.OSMemory: org.apache.harmony.luni.platform.Endianness NATIVE_ORDER>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setShort(int,short)>($i0, $s1);

        return;

     label1:
        $s1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: short swap(short)>($s1);

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void setShort(int,short)>($i0, $s1);

        return;
    }

    public native void setShortArray(int, short[], int, int, boolean) throws java.lang.NullPointerException, java.lang.IndexOutOfBoundsException;

    public void unmap(int, long)
    {
        org.apache.harmony.luni.platform.OSMemory $r0;
        int $i0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.OSMemory;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSMemory: void unmapImpl(int,long)>($i0, $l1);

        return;
    }
}
