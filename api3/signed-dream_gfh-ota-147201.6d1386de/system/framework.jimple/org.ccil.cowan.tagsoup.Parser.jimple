public class org.ccil.cowan.tagsoup.Parser extends org.xml.sax.helpers.DefaultHandler implements org.ccil.cowan.tagsoup.ScanHandler, org.xml.sax.XMLReader, org.xml.sax.ext.LexicalHandler
{
    public static final java.lang.String CDATAElementsFeature;
    private static boolean DEFAULT_BOGONS_EMPTY;
    private static boolean DEFAULT_CDATA_ELEMENTS;
    private static boolean DEFAULT_DEFAULT_ATTRIBUTES;
    private static boolean DEFAULT_IGNORABLE_WHITESPACE;
    private static boolean DEFAULT_IGNORE_BOGONS;
    private static boolean DEFAULT_NAMESPACES;
    private static boolean DEFAULT_RESTART_ELEMENTS;
    private static boolean DEFAULT_ROOT_BOGONS;
    private static boolean DEFAULT_TRANSLATE_COLONS;
    public static final java.lang.String XML11Feature;
    public static final java.lang.String autoDetectorProperty;
    public static final java.lang.String bogonsEmptyFeature;
    public static final java.lang.String defaultAttributesFeature;
    private static char[] etagchars;
    public static final java.lang.String externalGeneralEntitiesFeature;
    public static final java.lang.String externalParameterEntitiesFeature;
    public static final java.lang.String ignorableWhitespaceFeature;
    public static final java.lang.String ignoreBogonsFeature;
    public static final java.lang.String isStandaloneFeature;
    private static java.lang.String legal;
    public static final java.lang.String lexicalHandlerParameterEntitiesFeature;
    public static final java.lang.String lexicalHandlerProperty;
    public static final java.lang.String namespacePrefixesFeature;
    public static final java.lang.String namespacesFeature;
    public static final java.lang.String resolveDTDURIsFeature;
    public static final java.lang.String restartElementsFeature;
    public static final java.lang.String rootBogonsFeature;
    public static final java.lang.String scannerProperty;
    public static final java.lang.String schemaProperty;
    public static final java.lang.String stringInterningFeature;
    public static final java.lang.String translateColonsFeature;
    public static final java.lang.String unicodeNormalizationCheckingFeature;
    public static final java.lang.String useAttributes2Feature;
    public static final java.lang.String useEntityResolver2Feature;
    public static final java.lang.String useLocator2Feature;
    public static final java.lang.String validationFeature;
    public static final java.lang.String xmlnsURIsFeature;
    private boolean CDATAElements;
    private boolean bogonsEmpty;
    private boolean defaultAttributes;
    private boolean ignorableWhitespace;
    private boolean ignoreBogons;
    private boolean namespaces;
    private boolean restartElements;
    private boolean rootBogons;
    private java.lang.String theAttributeName;
    private org.ccil.cowan.tagsoup.AutoDetector theAutoDetector;
    private char[] theCommentBuffer;
    private org.xml.sax.ContentHandler theContentHandler;
    private org.xml.sax.DTDHandler theDTDHandler;
    private boolean theDoctypeIsPresent;
    private java.lang.String theDoctypeName;
    private java.lang.String theDoctypePublicId;
    private java.lang.String theDoctypeSystemId;
    private int theEntity;
    private org.xml.sax.EntityResolver theEntityResolver;
    private org.xml.sax.ErrorHandler theErrorHandler;
    private java.util.HashMap theFeatures;
    private org.xml.sax.ext.LexicalHandler theLexicalHandler;
    private org.ccil.cowan.tagsoup.Element theNewElement;
    private org.ccil.cowan.tagsoup.Element thePCDATA;
    private java.lang.String thePITarget;
    private org.ccil.cowan.tagsoup.Element theSaved;
    private org.ccil.cowan.tagsoup.Scanner theScanner;
    private org.ccil.cowan.tagsoup.Schema theSchema;
    private org.ccil.cowan.tagsoup.Element theStack;
    private boolean translateColons;
    private boolean virginStack;

    static void <clinit>()
    {
        char[] $r0;

        <org.ccil.cowan.tagsoup.Parser: java.lang.String xmlnsURIsFeature> = "http://xml.org/sax/features/xmlns-uris";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String validationFeature> = "http://xml.org/sax/features/validation";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String useLocator2Feature> = "http://xml.org/sax/features/use-locator2";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String useEntityResolver2Feature> = "http://xml.org/sax/features/use-entity-resolver2";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String useAttributes2Feature> = "http://xml.org/sax/features/use-attributes2";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String unicodeNormalizationCheckingFeature> = "http://xml.org/sax/features/unicode-normalization-checking";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String translateColonsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/translate-colons";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String stringInterningFeature> = "http://xml.org/sax/features/string-interning";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String schemaProperty> = "http://www.ccil.org/~cowan/tagsoup/properties/schema";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String scannerProperty> = "http://www.ccil.org/~cowan/tagsoup/properties/scanner";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String rootBogonsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/root-bogons";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String restartElementsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/restart-elements";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String resolveDTDURIsFeature> = "http://xml.org/sax/features/resolve-dtd-uris";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String namespacesFeature> = "http://xml.org/sax/features/namespaces";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String namespacePrefixesFeature> = "http://xml.org/sax/features/namespace-prefixes";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String lexicalHandlerProperty> = "http://xml.org/sax/properties/lexical-handler";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String lexicalHandlerParameterEntitiesFeature> = "http://xml.org/sax/features/lexical-handler/parameter-entities";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String isStandaloneFeature> = "http://xml.org/sax/features/is-standalone";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String ignoreBogonsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String ignorableWhitespaceFeature> = "http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String externalParameterEntitiesFeature> = "http://xml.org/sax/features/external-parameter-entities";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String externalGeneralEntitiesFeature> = "http://xml.org/sax/features/external-general-entities";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String defaultAttributesFeature> = "http://www.ccil.org/~cowan/tagsoup/features/default-attributes";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String bogonsEmptyFeature> = "http://www.ccil.org/~cowan/tagsoup/features/bogons-empty";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String autoDetectorProperty> = "http://www.ccil.org/~cowan/tagsoup/properties/auto-detector";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String XML11Feature> = "http://xml.org/sax/features/xml-1.1";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String CDATAElementsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/cdata-elements";

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_NAMESPACES> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORE_BOGONS> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_BOGONS_EMPTY> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_ROOT_BOGONS> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_DEFAULT_ATTRIBUTES> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_TRANSLATE_COLONS> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_RESTART_ELEMENTS> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORABLE_WHITESPACE> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_CDATA_ELEMENTS> = 1;

        $r0 = newarray (char)[3];

        $r0[0] = 60;

        $r0[1] = 47;

        $r0[2] = 62;

        <org.ccil.cowan.tagsoup.Parser: char[] etagchars> = $r0;

        <org.ccil.cowan.tagsoup.Parser: java.lang.String legal> = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-\'()+,./:=?;!*#@$_%";

        return;
    }

    public void <init>()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        boolean $z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;
        char[] $r3;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler> = $r0;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler> = $r0;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler> = $r0;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler> = $r0;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver> = $r0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_NAMESPACES>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORE_BOGONS>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean ignoreBogons> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_BOGONS_EMPTY>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean bogonsEmpty> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_ROOT_BOGONS>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_DEFAULT_ATTRIBUTES>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_TRANSLATE_COLONS>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean translateColons> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_RESTART_ELEMENTS>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean restartElements> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORABLE_WHITESPACE>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean ignorableWhitespace> = $z0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_CDATA_ELEMENTS>;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements> = $z0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures> = $r1;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_NAMESPACES>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/namespaces", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/namespace-prefixes", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/external-general-entities", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/external-parameter-entities", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/is-standalone", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/lexical-handler/parameter-entities", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/resolve-dtd-uris", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/string-interning", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/use-attributes2", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/use-locator2", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/use-entity-resolver2", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/validation", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/xmlns-uris", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/xmlns-uris", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/xml-1.1", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORE_BOGONS>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_BOGONS_EMPTY>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_ROOT_BOGONS>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_DEFAULT_ATTRIBUTES>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_TRANSLATE_COLONS>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_RESTART_ELEMENTS>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORABLE_WHITESPACE>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace", $r2);

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_CDATA_ELEMENTS>;

        $r2 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements", $r2);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean theDoctypeIsPresent> = 0;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: int theEntity> = 0;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack> = 1;

        $r3 = newarray (char)[2000];

        $r0.<org.ccil.cowan.tagsoup.Parser: char[] theCommentBuffer> = $r3;

        return;
    }

    private java.lang.String cleanPublicid(java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i3;
        boolean $z0;
        char $c2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i0);

        $z0 = 1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $r3 = <org.ccil.cowan.tagsoup.Parser: java.lang.String legal>;

        $i3 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($c2);

        if $i3 == -1 goto label4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $z0 = 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        if $z0 != 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $z0 = 1;

        goto label3;

     label5:
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r1;
    }

    private java.lang.String expandEntities(java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        char[] $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        char $c4;
        boolean $z0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $i0 = -1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = newarray (char)[$i1];

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label7;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i5 = $i3 + 1;

        $r2[$i3] = $c4;

        if $c4 != 38 goto label3;

        if $i0 != -1 goto label3;

        $i0 = $i5;

     label2:
        $i2 = $i2 + 1;

        $i3 = $i5;

        goto label1;

     label3:
        if $i0 == -1 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c4);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label2;

        if $c4 == 35 goto label2;

        if $c4 != 59 goto label6;

        $i3 = $i5 - $i0;

        $i3 = $i3 - 1;

        $i3 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: int lookupEntity(char[],int,int)>($r2, $i0, $i3);

        if $i3 <= 65535 goto label5;

        $i5 = $i3 - 65536;

        $i3 = $i0 - 1;

        $i6 = $i5 >> 10;

        $i6 = $i6 + 55296;

        $c4 = (char) $i6;

        $r2[$i3] = $c4;

        $i5 = $i5 & 1023;

        $i5 = $i5 + 56320;

        $c4 = (char) $i5;

        $r2[$i0] = $c4;

        $i5 = $i0 + 1;

     label4:
        $i0 = -1;

        goto label2;

     label5:
        if $i3 == 0 goto label4;

        $i5 = $i0 - 1;

        $c4 = (char) $i3;

        $r2[$i5] = $c4;

        $i5 = $i0;

        goto label4;

     label6:
        $i0 = -1;

        goto label2;

     label7:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i3);

        return $r1;
    }

    private boolean foreign(java.lang.String, java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.ccil.cowan.tagsoup.Schema $r3;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r1 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.io.InputStream getInputStream(java.lang.String, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1, $r2;
        java.net.URL $r3, $r4;
        java.lang.StringBuilder $r5;
        java.net.URLConnection $r6;
        java.io.InputStream $r7;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.net.URL;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", $r1);

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r3, $r2);

        $r6 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r7 = virtualinvoke $r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        return $r7;
    }

    private java.io.Reader getReader(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.InputSource $r1;
        java.io.Reader $r2;
        java.io.InputStreamReader $r3;
        java.io.InputStream $r4, $r5;
        java.lang.String $r6, $r7, $r8;
        org.ccil.cowan.tagsoup.AutoDetector $r9;
        java.io.UnsupportedEncodingException $r10;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.xml.sax.InputSource;

        $r2 = virtualinvoke $r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        $r4 = virtualinvoke $r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $r5 = $r4;

        $r6 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        $r7 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r8 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        if $r2 != null goto label6;

        if $r4 != null goto label1;

        $r5 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.io.InputStream getInputStream(java.lang.String,java.lang.String)>($r7, $r8);

     label1:
        if $r6 != null goto label2;

        $r9 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector>;

        $r2 = interfaceinvoke $r9.<org.ccil.cowan.tagsoup.AutoDetector: java.io.Reader autoDetectingReader(java.io.InputStream)>($r5);

        return $r2;

     label2:
        $r3 = new java.io.InputStreamReader;

     label3:
        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, $r6);

     label4:
        return $r3;

     label5:
        $r10 := @caughtexception;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        return $r3;

     label6:
        return $r2;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private int lookupEntity(char[], int, int)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1, $i3;
        char $c2;
        java.lang.String $r2;
        java.lang.NumberFormatException $r3, $r4;
        org.ccil.cowan.tagsoup.Schema $r5;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 >= 1 goto label01;

        return 0;

     label01:
        $c2 = $r1[$i0];

        if $c2 != 35 goto label10;

        if $i1 <= 1 goto label06;

        $i3 = $i0 + 1;

        $c2 = $r1[$i3];

        if $c2 == 120 goto label02;

        $i3 = $i0 + 1;

        $c2 = $r1[$i3];

        if $c2 != 88 goto label06;

     label02:
        $r2 = new java.lang.String;

        $i0 = $i0 + 2;

        $i1 = $i1 - 2;

     label03:
        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

     label04:
        return $i0;

     label05:
        $r3 := @caughtexception;

        return 0;

     label06:
        $r2 = new java.lang.String;

        $i0 = $i0 + 1;

        $i1 = $i1 - 1;

     label07:
        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 10);

     label08:
        return $i0;

     label09:
        $r4 := @caughtexception;

        return 0;

     label10:
        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $i0 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Schema: int getEntity(java.lang.String)>($r2);

        return $i0;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }

    private java.lang.String makeName(char[], int, int)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        char $c0;
        java.lang.StringBuffer $r2;
        int $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.String $r3;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r2 = new java.lang.StringBuffer;

        $i3 = $i2 + 2;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i3);

        $z0 = 0;

        $z1 = 1;

     label01:
        $i3 = $i2 - 1;

        if $i2 <= 0 goto label11;

        $c0 = $r1[$i1];

        $z2 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c0);

        if $z2 != 0 goto label02;

        if $c0 != 95 goto label04;

     label02:
        $z1 = 0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

     label03:
        $i1 = $i1 + 1;

        $i2 = $i3;

        goto label01;

     label04:
        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z2 != 0 goto label05;

        if $c0 == 45 goto label05;

        if $c0 != 46 goto label07;

     label05:
        if $z1 == 0 goto label06;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

     label06:
        $z1 = 0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label03;

     label07:
        if $c0 != 58 goto label03;

        if $z0 != 0 goto label03;

        $z0 = 1;

        if $z1 == 0 goto label08;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

     label08:
        $z1 = 1;

        $z2 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean translateColons>;

        if $z2 == 0 goto label10;

        $c0 = 95;

     label09:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label03;

     label10:
        goto label09;

     label11:
        $i1 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i1 == 0 goto label12;

        $i1 = $i1 - 1;

        $c0 = virtualinvoke $r2.<java.lang.StringBuffer: char charAt(int)>($i1);

        if $c0 != 58 goto label13;

     label12:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

     label13:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        return $r3;
    }

    private void pop() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.ccil.cowan.tagsoup.Element $r1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;
        org.xml.sax.ContentHandler $r6;
        org.ccil.cowan.tagsoup.AttributesImpl $r7;
        int $i0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r2 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r3 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String localName()>();

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r4 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String namespace()>();

        $r5 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>($r2);

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces>;

        if $z0 != 0 goto label2;

        $r3 = "";

        $r4 = "";

     label2:
        $r6 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2);

        $z0 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>($r5, $r4);

        if $z0 == 0 goto label3;

        $r6 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r5);

     label3:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r7 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()>();

        $i0 = interfaceinvoke $r7.<org.xml.sax.Attributes: int getLength()>();

        $i0 = $i0 - 1;

     label4:
        if $i0 < 0 goto label6;

        $r2 = interfaceinvoke $r7.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i0);

        $r3 = interfaceinvoke $r7.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i0);

        $r3 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>($r3);

        $z0 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>($r3, $r2);

        if $z0 == 0 goto label5;

        $r6 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r3);

     label5:
        $i0 = $i0 + -1;

        goto label4;

     label6:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r1 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = $r1;

        return;
    }

    private java.lang.String prefixOf(java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(58);

        if $i0 == -1 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;

     label1:
        return "";
    }

    private void push(org.ccil.cowan.tagsoup.Element) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.ccil.cowan.tagsoup.Element $r1, $r11;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8;
        boolean $z0;
        org.xml.sax.EntityResolver $r7;
        org.xml.sax.ContentHandler $r9;
        org.ccil.cowan.tagsoup.AttributesImpl $r10;
        int $i0, $i1;
        org.ccil.cowan.tagsoup.Scanner $r12;
        java.io.IOException $r13;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.ccil.cowan.tagsoup.Element;

        $r3 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $r4 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String localName()>();

        $r5 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String namespace()>();

        $r6 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>($r3);

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: void clean()>();

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces>;

        if $z0 != 0 goto label01;

        $r4 = "";

        $r5 = "";

     label01:
        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack>;

        if $z0 == 0 goto label03;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label03;

        $r7 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver>;

        $r8 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId>;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId>;

     label02:
        interfaceinvoke $r7.<org.xml.sax.EntityResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>($r8, $r2);

     label03:
        $z0 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>($r6, $r5);

        if $z0 == 0 goto label04;

        $r9 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r6, $r5);

     label04:
        $r10 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()>();

        $i0 = interfaceinvoke $r10.<org.xml.sax.Attributes: int getLength()>();

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label07;

        $r6 = interfaceinvoke $r10.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i1);

        $r2 = interfaceinvoke $r10.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i1);

        $r2 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>($r2);

        $z0 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>($r2, $r6);

        if $z0 == 0 goto label06;

        $r9 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r2, $r6);

     label06:
        $i1 = $i1 + 1;

        goto label05;

     label07:
        $r9 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r10 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()>();

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r5, $r4, $r3, $r10);

        $r11 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)>($r11);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = $r1;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack> = 0;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements>;

        if $z0 == 0 goto label09;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $i0 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i0 = $i0 & 2;

        if $i0 == 0 goto label10;

        $r12 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        interfaceinvoke $r12.<org.ccil.cowan.tagsoup.Scanner: void startCDATA()>();

        return;

     label08:
        $r13 := @caughtexception;

        goto label03;

     label09:
        return;

     label10:
        return;

        catch java.io.IOException from label02 to label03 with label08;
    }

    private void rectify(org.ccil.cowan.tagsoup.Element) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.ccil.cowan.tagsoup.Element $r1, $r2, $r4;
        boolean $z0;
        org.ccil.cowan.tagsoup.ElementType $r3;
        java.lang.String $r5;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r2 := @parameter0: org.ccil.cowan.tagsoup.Element;

     label01:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

     label02:
        if $r1 == null goto label03;

        $z0 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>($r2);

        if $z0 == 0 goto label05;

     label03:
        if $r1 == null goto label06;

     label04:
        if $r1 != null goto label08;

        return;

     label05:
        $r1 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        goto label02;

     label06:
        $r3 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.ElementType parent()>();

        if $r3 == null goto label04;

        $r1 = new org.ccil.cowan.tagsoup.Element;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r1.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>($r3, $z0);

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)>($r2);

        $r2 = $r1;

        goto label01;

     label07:
        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void restartablyPop()>();

     label08:
        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        if $r4 == $r1 goto label09;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        if $r4 == null goto label09;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r4 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r4 == null goto label09;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r4 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r4 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r4 != null goto label07;

     label09:
        if $r2 == null goto label11;

        $r1 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r5 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("<pcdata>");

        if $z0 != 0 goto label10;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void push(org.ccil.cowan.tagsoup.Element)>($r2);

     label10:
        $r2 = $r1;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void restart(org.ccil.cowan.tagsoup.Element)>($r1);

        goto label09;

     label11:
        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        return;
    }

    private void restart(org.ccil.cowan.tagsoup.Element) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.ccil.cowan.tagsoup.Element $r1, $r2, $r3;
        boolean $z0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.ccil.cowan.tagsoup.Element;

     label1:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        if $r2 == null goto label3;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        $z0 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>($r2);

        if $z0 == 0 goto label4;

        if $r1 == null goto label2;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        $z0 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>($r1);

        if $z0 == 0 goto label5;

     label2:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        $r2 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void push(org.ccil.cowan.tagsoup.Element)>($r3);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = $r2;

        goto label1;

     label3:
        return;

     label4:
        return;

     label5:
        return;
    }

    private void restartablyPop() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.ccil.cowan.tagsoup.Element $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean restartElements>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i0 = $i0 & 1;

        if $i0 == 0 goto label2;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: void anonymize()>();

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)>($r2);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = $r1;

        return;

     label1:
        return;

     label2:
        return;
    }

    private void setup()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.ccil.cowan.tagsoup.Schema $r1;
        org.ccil.cowan.tagsoup.HTMLSchema $r2;
        org.ccil.cowan.tagsoup.Scanner $r3;
        org.ccil.cowan.tagsoup.HTMLScanner $r4;
        org.ccil.cowan.tagsoup.AutoDetector $r5;
        org.ccil.cowan.tagsoup.Parser$1 $r6;
        org.ccil.cowan.tagsoup.Element $r7;
        org.ccil.cowan.tagsoup.ElementType $r8;
        boolean $z0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        if $r1 != null goto label1;

        $r2 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r2.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema> = $r2;

     label1:
        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        if $r3 != null goto label2;

        $r4 = new org.ccil.cowan.tagsoup.HTMLScanner;

        specialinvoke $r4.<org.ccil.cowan.tagsoup.HTMLScanner: void <init>()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner> = $r4;

     label2:
        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector>;

        if $r5 != null goto label3;

        $r6 = new org.ccil.cowan.tagsoup.Parser$1;

        specialinvoke $r6.<org.ccil.cowan.tagsoup.Parser$1: void <init>(org.ccil.cowan.tagsoup.Parser)>($r0);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector> = $r6;

     label3:
        $r7 = new org.ccil.cowan.tagsoup.Element;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r8 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>("<root>");

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r7.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>($r8, $z0);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = $r7;

        $r7 = new org.ccil.cowan.tagsoup.Element;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r8 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>("<pcdata>");

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r7.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>($r8, $z0);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA> = $r7;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: int theEntity> = 0;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack> = 1;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId> = null;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName> = null;

        return;
    }

    private static java.lang.String[] split(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.ArrayList $r0;
        java.lang.String $r1, $r3;
        int $i0, $i2, $i3;
        java.lang.String[] $r2;
        boolean $z0, $z1, $z2;
        char $c1, $c4;
        java.lang.Object[] $r4;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r2 = newarray (java.lang.String)[0];

        return $r2;

     label01:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

        $z0 = 0;

        $z1 = 0;

        $c1 = 0;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = 0;

     label02:
        if $i3 >= $i2 goto label12;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        if $z1 != 0 goto label06;

        if $c4 != 39 goto label06;

        if $c1 == 92 goto label06;

        if $z0 != 0 goto label05;

        $z0 = 1;

     label03:
        if $i0 >= 0 goto label04;

        $i0 = $i3;

     label04:
        $c1 = $c4;

        $i3 = $i3 + 1;

        goto label02;

     label05:
        $z0 = 0;

        goto label03;

     label06:
        if $z0 != 0 goto label09;

        if $c4 != 34 goto label09;

        if $c1 == 92 goto label09;

        if $z1 != 0 goto label08;

        $z1 = 1;

     label07:
        if $i0 >= 0 goto label04;

        $i0 = $i3;

        goto label04;

     label08:
        $z1 = 0;

        goto label07;

     label09:
        if $z0 != 0 goto label04;

        if $z1 != 0 goto label04;

        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z2 == 0 goto label11;

        if $i0 < 0 goto label10;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label10:
        $i0 = -1;

        goto label04;

     label11:
        if $i0 >= 0 goto label04;

        if $c4 == 32 goto label04;

        $i0 = $i3;

        goto label04;

     label12:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = newarray (java.lang.String)[0];

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r2 = (java.lang.String[]) $r4;

        $r2 = (java.lang.String[]) $r2;

        return $r2;
    }

    private static java.lang.String trimquotes(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        char $c1, $c2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return $r0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i0 = $i0 - 1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c1 != $c2 goto label4;

        if $c1 == 39 goto label2;

        if $c1 != 34 goto label5;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        return $r0;

     label3:
        return $r0;

     label4:
        return $r0;

     label5:
        return $r0;
    }

    private static java.lang.Boolean truthValue(boolean)
    {
        boolean $z0;
        java.lang.Boolean r0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r0;

     label1:
        r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r0;
    }

    public void adup(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        org.ccil.cowan.tagsoup.Element $r4;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r4 == null goto label2;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        virtualinvoke $r4.<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>($r2, null, $r3);

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        return;

     label2:
        return;
    }

    public void aname(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        org.ccil.cowan.tagsoup.Element $r2;
        java.lang.String $r3;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = $r3;

        return;
    }

    public void aval(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        org.ccil.cowan.tagsoup.Element $r4;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r4 == null goto label2;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $r3 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String expandEntities(java.lang.String)>($r2);

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        virtualinvoke $r4.<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>($r2, null, $r3);

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        return;

     label2:
        return;
    }

    public void cdsect(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        org.xml.sax.ext.LexicalHandler $r2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void pcdata(char[],int,int)>($r1, $i0, $i1);

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        return;
    }

    public void cmnt(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        org.xml.sax.ext.LexicalHandler $r2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public void decl(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5, $r7;
        java.lang.String[] $r6;
        boolean $z0;
        org.xml.sax.ext.LexicalHandler $r8;
        org.ccil.cowan.tagsoup.Scanner $r9;
        org.xml.sax.Locator $r10;
        java.net.URL $r11, $r12;
        java.lang.Exception $r13;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $r3 = null;

        $r4 = null;

        $r5 = null;

        $r6 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.String[] split(java.lang.String)>($r2);

        $i0 = lengthof $r6;

        if $i0 <= 0 goto label2;

        $r2 = "DOCTYPE";

        $r7 = $r6[0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean theDoctypeIsPresent>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0.<org.ccil.cowan.tagsoup.Parser: boolean theDoctypeIsPresent> = 1;

        $i0 = lengthof $r6;

        if $i0 <= 1 goto label2;

        $r3 = $r6[1];

        $i0 = lengthof $r6;

        if $i0 <= 3 goto label6;

        $r2 = "SYSTEM";

        $r7 = $r6[2];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label6;

        $r4 = $r6[3];

     label2:
        $r5 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.String trimquotes(java.lang.String)>($r5);

        $r4 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.String trimquotes(java.lang.String)>($r4);

        if $r3 == null goto label8;

        $r5 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String cleanPublicid(java.lang.String)>($r5);

        $r8 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r8.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>($r3, $r5, $r4);

        $r8 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r8.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName> = $r3;

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId> = $r5;

        $r9 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $z0 = $r9 instanceof org.xml.sax.Locator;

        if $z0 == 0 goto label9;

        $r9 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $r10 = (org.xml.sax.Locator) $r9;

        $r3 = interfaceinvoke $r10.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = $r3;

        $r11 = new java.net.URL;

        $r12 = new java.net.URL;

     label3:
        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId>;

        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r3);

        specialinvoke $r11.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r12, $r4);

        $r3 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = $r3;

     label4:
        return;

     label5:
        $r13 := @caughtexception;

        return;

     label6:
        $i0 = lengthof $r6;

        if $i0 <= 3 goto label2;

        $r2 = "PUBLIC";

        $r7 = $r6[2];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r5 = $r6[3];

        $i0 = lengthof $r6;

        if $i0 <= 4 goto label7;

        $r4 = $r6[4];

        goto label2;

     label7:
        $r4 = "";

        goto label2;

     label8:
        return;

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void entity(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: int lookupEntity(char[],int,int)>($r1, $i0, $i1);

        $r0.<org.ccil.cowan.tagsoup.Parser: int theEntity> = $i0;

        return;
    }

    public void eof(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;
        org.ccil.cowan.tagsoup.Element $r2;
        org.ccil.cowan.tagsoup.Schema $r3;
        java.lang.String $r4;
        org.xml.sax.ContentHandler $r5;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA>;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>($r2);

     label1:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r2 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r2 == null goto label2;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        goto label1;

     label2:
        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r4 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r4 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()>();

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r4);

     label3:
        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endDocument()>();

        return;
    }

    public void etag(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke $r0.<org.ccil.cowan.tagsoup.Parser: boolean etag_cdata(char[],int,int)>($r1, $i0, $i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void etag_basic(char[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void etag_basic(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r6;
        org.ccil.cowan.tagsoup.Schema $r3;
        org.ccil.cowan.tagsoup.ElementType $r4;
        boolean $z0, $z1;
        org.ccil.cowan.tagsoup.Element $r5, $r7;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        if $i1 == 0 goto label06;

        $r2 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>($r1, $i0, $i1);

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r4 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>($r2);

        if $r4 != null goto label01;

        return;

     label01:
        $r2 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.ElementType: java.lang.String name()>();

     label02:
        $z0 = 0;

        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

     label03:
        if $r5 == null goto label04;

        $r6 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label07;

     label04:
        if $r5 == null goto label12;

        $r7 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r7 == null goto label13;

        $r7 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r7 = virtualinvoke $r7.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r7 == null goto label14;

        if $z0 == 0 goto label09;

        virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: void preclose()>();

     label05:
        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $z0 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: boolean isPreclosed()>();

        if $z0 == 0 goto label11;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        goto label05;

     label06:
        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r2 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        goto label02;

     label07:
        $i0 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i0 = $i0 & 4;

        if $i0 == 0 goto label08;

        $z0 = 1;

     label08:
        $r5 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        goto label03;

     label09:
        $r7 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        if $r7 == $r5 goto label10;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void restartablyPop()>();

        goto label09;

     label10:
        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        goto label05;

     label11:
        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void restart(org.ccil.cowan.tagsoup.Element)>(null);

        return;

     label12:
        return;

     label13:
        return;

     label14:
        return;
    }

    public boolean etag_cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1, $r5;
        int $i0, $i1, $i2, $i3;
        org.ccil.cowan.tagsoup.Element $r2;
        java.lang.String $r3;
        boolean $z0;
        char $c4, $c5;
        org.xml.sax.ContentHandler $r4;
        org.ccil.cowan.tagsoup.Scanner $r6;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r3 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements>;

        if $z0 == 0 goto label6;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $i2 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i2 = $i2 & 2;

        if $i2 == 0 goto label6;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 != $i2 goto label4;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label3;

        $i3 = $i0 + $i2;

        $c4 = $r1[$i3];

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i2);

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c5);

        if $c4 == $c5 goto label5;

        $z0 = 0;

     label3:
        if $z0 != 0 goto label6;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r5 = <org.ccil.cowan.tagsoup.Parser: char[] etagchars>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r5, 0, 2);

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r1, $i0, $i1);

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r1 = <org.ccil.cowan.tagsoup.Parser: char[] etagchars>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r1, 2, 1);

        $r6 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        interfaceinvoke $r6.<org.ccil.cowan.tagsoup.Scanner: void startCDATA()>();

        return 1;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $i2 = $i2 + 1;

        goto label2;

     label6:
        return 0;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.ContentHandler $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        if $r1 != $r0 goto label1;

        return null;

     label1:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        return $r1;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.DTDHandler $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler>;

        if $r1 != $r0 goto label1;

        return null;

     label1:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler>;

        return $r1;
    }

    public int getEntity()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        int i0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        i0 = $r0.<org.ccil.cowan.tagsoup.Parser: int theEntity>;

        return i0;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.EntityResolver $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver>;

        if $r1 != $r0 goto label1;

        return null;

     label1:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver>;

        return $r1;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.ErrorHandler $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler>;

        if $r1 != $r0 goto label1;

        return null;

     label1:
        $r1 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler>;

        return $r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        org.xml.sax.SAXNotRecognizedException $r5;
        java.lang.StringBuilder $r6;
        boolean $z0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXNotRecognizedException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown feature ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label1:
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        boolean $z0;
        org.xml.sax.ext.LexicalHandler $r2;
        org.xml.sax.SAXNotRecognizedException $r3;
        java.lang.StringBuilder $r4;
        org.ccil.cowan.tagsoup.Scanner r5;
        org.ccil.cowan.tagsoup.Schema r6;
        org.ccil.cowan.tagsoup.AutoDetector r7;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/properties/lexical-handler");

        if $z0 == 0 goto label2;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        if $r2 != $r0 goto label1;

        return null;

     label1:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        return $r2;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner");

        if $z0 == 0 goto label3;

        r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        return r5;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema");

        if $z0 == 0 goto label4;

        r6 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        return r6;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/auto-detector");

        if $z0 == 0 goto label5;

        r7 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector>;

        return r7;

     label5:
        $r3 = new org.xml.sax.SAXNotRecognizedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown property ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public void gi(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        org.ccil.cowan.tagsoup.Element $r2;
        java.lang.String $r3, $r8;
        org.ccil.cowan.tagsoup.Schema $r4, $r7;
        org.ccil.cowan.tagsoup.ElementType $r5, $r6;
        boolean $z0;
        byte $b2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>($r1, $i0, $i1);

        if $r3 == null goto label8;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r5 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>($r3);

        $r6 = $r5;

        if $r5 != null goto label5;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean ignoreBogons>;

        if $z0 != 0 goto label9;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean bogonsEmpty>;

        if $z0 == 0 goto label6;

        $b2 = 0;

     label2:
        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons>;

        if $z0 == 0 goto label7;

        $i0 = -1;

     label3:
        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        virtualinvoke $r4.<org.ccil.cowan.tagsoup.Schema: void elementType(java.lang.String,int,int,int)>($r3, $b2, $i0, 0);

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons>;

        if $z0 != 0 goto label4;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r7 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r5 = virtualinvoke $r7.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType rootElementType()>();

        $r8 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.ElementType: java.lang.String name()>();

        virtualinvoke $r4.<org.ccil.cowan.tagsoup.Schema: void parent(java.lang.String,java.lang.String)>($r3, $r8);

     label4:
        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r6 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>($r3);

     label5:
        $r2 = new org.ccil.cowan.tagsoup.Element;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r2.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>($r6, $z0);

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = $r2;

        return;

     label6:
        $b2 = -1;

        goto label2;

     label7:
        $i0 = 2147483647;

        goto label3;

     label8:
        return;

     label9:
        return;
    }

    public void parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        org.xml.sax.InputSource $r2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r1);

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.InputSource $r1;
        java.io.Reader $r2;
        org.xml.sax.ContentHandler $r3;
        org.ccil.cowan.tagsoup.Scanner $r4;
        java.lang.String $r5, $r6;
        boolean $z0;
        org.xml.sax.Locator $r7;
        org.ccil.cowan.tagsoup.Schema $r8;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.xml.sax.InputSource;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void setup()>();

        $r2 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.io.Reader getReader(org.xml.sax.InputSource)>($r1);

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void startDocument()>();

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $r5 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r6 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        interfaceinvoke $r4.<org.ccil.cowan.tagsoup.Scanner: void resetDocumentLocator(java.lang.String,java.lang.String)>($r5, $r6);

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $z0 = $r4 instanceof org.xml.sax.Locator;

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $r7 = (org.xml.sax.Locator) $r4;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r7);

     label1:
        $r8 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r5 = virtualinvoke $r8.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r8 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r5 = virtualinvoke $r8.<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()>();

        $r8 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r6 = virtualinvoke $r8.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r5, $r6);

     label2:
        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        interfaceinvoke $r4.<org.ccil.cowan.tagsoup.Scanner: void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler)>($r2, $r0);

        return;
    }

    public void pcdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3;
        org.ccil.cowan.tagsoup.Element $r2, $r3;
        boolean $z0, $z1;
        char $c4;
        org.xml.sax.ContentHandler $r4;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 != 0 goto label1;

        return;

     label1:
        $z0 = 1;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label4;

        $i3 = $i0 + $i2;

        $c4 = $r1[$i3];

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z1 != 0 goto label3;

        $z0 = 0;

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        if $z0 == 0 goto label5;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA>;

        $z0 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>($r2);

        if $z0 != 0 goto label5;

        $z0 = $r0.<org.ccil.cowan.tagsoup.Parser: boolean ignorableWhitespace>;

        if $z0 == 0 goto label6;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>($r1, $i0, $i1);

        return;

     label5:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA>;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>($r2);

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r1, $i0, $i1);

        return;

     label6:
        return;
    }

    public void pi(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r4;
        boolean $z0;
        org.ccil.cowan.tagsoup.Element $r3;
        char $c3;
        org.xml.sax.ContentHandler $r5;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r3 != null goto label3;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = "xml";

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 != 0 goto label4;

        if $i1 <= 0 goto label2;

        $i2 = $i1 - 1;

        $c3 = $r1[$i2];

        if $c3 != 63 goto label2;

        $i1 = $i1 + -1;

     label2:
        $r5 = $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r4 = $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget>;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r4, $r2);

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = null;

        return;

     label3:
        return;

     label4:
        return;
    }

    public void pitarget(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        org.ccil.cowan.tagsoup.Element $r2;
        java.lang.String $r3;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(58, 95);

        $r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = $r3;

        return;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.ContentHandler $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        if $r1 != null goto label2;

        $r1 = $r0;

     label1:
        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler> = $r1;

        return;

     label2:
        goto label1;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.DTDHandler $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.xml.sax.DTDHandler;

        if $r1 != null goto label2;

        $r1 = $r0;

     label1:
        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler> = $r1;

        return;

     label2:
        goto label1;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.EntityResolver $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.xml.sax.EntityResolver;

        if $r1 != null goto label2;

        $r1 = $r0;

     label1:
        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver> = $r1;

        return;

     label2:
        goto label1;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        org.xml.sax.ErrorHandler $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: org.xml.sax.ErrorHandler;

        if $r1 != null goto label2;

        $r1 = $r0;

     label1:
        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler> = $r1;

        return;

     label2:
        goto label1;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        org.xml.sax.SAXNotRecognizedException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        if $r4 != null goto label01;

        $r5 = new org.xml.sax.SAXNotRecognizedException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown feature ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label01:
        if $z0 == 0 goto label03;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label02:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespaces");

        if $z1 == 0 goto label04;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces> = $z0;

        return;

     label03:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        goto label02;

     label04:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons");

        if $z1 == 0 goto label05;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean ignoreBogons> = $z0;

        return;

     label05:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty");

        if $z1 == 0 goto label06;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean bogonsEmpty> = $z0;

        return;

     label06:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons");

        if $z1 == 0 goto label07;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons> = $z0;

        return;

     label07:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes");

        if $z1 == 0 goto label08;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes> = $z0;

        return;

     label08:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons");

        if $z1 == 0 goto label09;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean translateColons> = $z0;

        return;

     label09:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements");

        if $z1 == 0 goto label10;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean restartElements> = $z0;

        return;

     label10:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace");

        if $z1 == 0 goto label11;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean ignorableWhitespace> = $z0;

        return;

     label11:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements");

        if $z1 == 0 goto label12;

        $r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements> = $z0;

        return;

     label12:
        return;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.xml.sax.ext.LexicalHandler $r3;
        org.xml.sax.SAXNotSupportedException $r4;
        org.ccil.cowan.tagsoup.Scanner $r5;
        org.ccil.cowan.tagsoup.Schema $r6;
        org.ccil.cowan.tagsoup.AutoDetector $r7;
        org.xml.sax.SAXNotRecognizedException $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/properties/lexical-handler");

        if $z0 == 0 goto label3;

        if $r2 != null goto label1;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler> = $r0;

        return;

     label1:
        $z0 = $r2 instanceof org.xml.sax.ext.LexicalHandler;

        if $z0 == 0 goto label2;

        $r3 = (org.xml.sax.ext.LexicalHandler) $r2;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler> = $r3;

        return;

     label2:
        $r4 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your lexical handler is not a LexicalHandler");

        throw $r4;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner");

        if $z0 == 0 goto label5;

        $z0 = $r2 instanceof org.ccil.cowan.tagsoup.Scanner;

        if $z0 == 0 goto label4;

        $r5 = (org.ccil.cowan.tagsoup.Scanner) $r2;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner> = $r5;

        return;

     label4:
        $r4 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your scanner is not a Scanner");

        throw $r4;

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema");

        if $z0 == 0 goto label7;

        $z0 = $r2 instanceof org.ccil.cowan.tagsoup.Schema;

        if $z0 == 0 goto label6;

        $r6 = (org.ccil.cowan.tagsoup.Schema) $r2;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema> = $r6;

        return;

     label6:
        $r4 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your schema is not a Schema");

        throw $r4;

     label7:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/auto-detector");

        if $z0 == 0 goto label9;

        $z0 = $r2 instanceof org.ccil.cowan.tagsoup.AutoDetector;

        if $z0 == 0 goto label8;

        $r7 = (org.ccil.cowan.tagsoup.AutoDetector) $r2;

        $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector> = $r7;

        return;

     label8:
        $r4 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your auto-detector is not an AutoDetector");

        throw $r4;

     label9:
        $r8 = new org.xml.sax.SAXNotRecognizedException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown property ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r1);

        throw $r8;
    }

    public void stagc(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1, $i2;
        org.ccil.cowan.tagsoup.Element $r2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>($r2);

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $i2 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: int model()>();

        if $i2 != 0 goto label2;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void etag_basic(char[],int,int)>($r1, $i0, $i1);

        return;

     label2:
        return;
    }

    public void stage(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        char[] $r1;
        int $i0, $i1;
        org.ccil.cowan.tagsoup.Element $r2;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = $r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>($r2);

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.Parser: void etag_basic(char[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1, $r2, $r3;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser $r0;
        java.lang.String $r1;

        $r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 := @parameter0: java.lang.String;

        return;
    }
}
