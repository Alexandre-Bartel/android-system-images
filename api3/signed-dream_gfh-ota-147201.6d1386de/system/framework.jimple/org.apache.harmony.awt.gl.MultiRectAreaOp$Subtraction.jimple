class org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction extends java.lang.Object
{

    void <init>()
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction $r0;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.harmony.awt.gl.MultiRectArea getResult(org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0, $r1;
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r2;
        boolean $z0;
        int $i0, $i1;
        java.awt.Rectangle $r3, $r4, $r5;
        int[] $r6, $r7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void <init>()>();

        return $r1;

     label2:
        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label3:
        $r1 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void <init>(org.apache.harmony.awt.gl.MultiRectArea)>($r0);

        return $r1;

     label4:
        $r2 = new org.apache.harmony.awt.gl.MultiRectArea$RectCash;

        specialinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void <init>()>();

        $z0 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: boolean sorted>;

        if $z0 == 0 goto label5;

        $z0 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean sorted>;

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 <= 8 goto label5;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 > 8 goto label7;

     label5:
        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void simpleSubtract(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>($r0, $r1, $r2);

     label6:
        return $r2;

     label7:
        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        $r4 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        $r5 = virtualinvoke $r3.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>($r4);

        $i0 = $r5.<java.awt.Rectangle: int width>;

        if $i0 <= 0 goto label8;

        $i0 = $r5.<java.awt.Rectangle: int height>;

        if $i0 <= 0 goto label8;

        $r6 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r7 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i0 = $r3.<java.awt.Rectangle: int height>;

        $i0 = $i0 + 2;

        $i1 = $r4.<java.awt.Rectangle: int height>;

        $i1 = $i1 + 2;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void subtractRegions(int[],int[],org.apache.harmony.awt.gl.MultiRectArea$RectCash,int,int)>($r6, $r7, $r2, $i0, $i1);

        goto label6;

     label8:
        $r6 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>($r6, 1);

        goto label6;
    }

    static void simpleSubtract(org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r3;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        $r2 := @parameter2: org.apache.harmony.awt.gl.MultiRectArea;

        $i0 = 1;

     label1:
        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i1 = $r3[0];

        if $i0 >= $i1 goto label2;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i1 = $i0 + 0;

        $i1 = $r3[$i1];

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i2 = $i0 + 1;

        $i2 = $r3[$i2];

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i3 = $i0 + 2;

        $i3 = $r3[$i3];

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i4 = $i0 + 3;

        $i4 = $r3[$i4];

        $r3 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void subtractRect(int,int,int,int,int[],int,org.apache.harmony.awt.gl.MultiRectArea)>($i1, $i2, $i3, $i4, $r3, 1, $r2);

        $i0 = $i0 + 4;

        goto label1;

     label2:
        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: void resort()>();

        return;
    }

    static void subtractRect(int, int, int, int, int[], int, org.apache.harmony.awt.gl.MultiRectArea)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r0;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $i0 := @parameter0: int;

        $i6 := @parameter1: int;

        $i1 := @parameter2: int;

        $i7 := @parameter3: int;

        $r0 := @parameter4: int[];

        $i8 := @parameter5: int;

        $r1 := @parameter6: org.apache.harmony.awt.gl.MultiRectArea;

     label1:
        $i2 = $r0[0];

        if $i8 >= $i2 goto label8;

        $i2 = $i8 + 0;

        $i2 = $r0[$i2];

        $i3 = $i8 + 1;

        $i4 = $r0[$i3];

        $i3 = $i8 + 2;

        $i3 = $r0[$i3];

        $i5 = $i8 + 3;

        $i5 = $r0[$i5];

        if $i0 > $i3 goto label7;

        if $i1 < $i2 goto label7;

        if $i6 > $i5 goto label7;

        if $i7 < $i4 goto label7;

        if $i6 >= $i4 goto label5;

        $i9 = $i4 - 1;

        $i10 = $i8 + 4;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void subtractRect(int,int,int,int,int[],int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i6, $i1, $i9, $r0, $i10, $r1);

        $i6 = $i4;

     label2:
        if $i7 <= $i5 goto label6;

        $i4 = $i5 + 1;

        $i9 = $i8 + 4;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void subtractRect(int,int,int,int,int[],int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i4, $i1, $i7, $r0, $i9, $r1);

        $i7 = $i5;

     label3:
        if $i0 >= $i2 goto label4;

        $i2 = $i2 - 1;

        $i5 = $i8 + 4;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void subtractRect(int,int,int,int,int[],int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i6, $i2, $i7, $r0, $i5, $r1);

     label4:
        if $i1 <= $i3 goto label9;

        $i0 = $i3 + 1;

        $i8 = $i8 + 4;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void subtractRect(int,int,int,int,int[],int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i6, $i1, $i7, $r0, $i8, $r1);

        return;

     label5:
        goto label2;

     label6:
        goto label3;

     label7:
        $i8 = $i8 + 4;

        goto label1;

     label8:
        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i0, $i6, $i1, $i7);

        return;

     label9:
        return;
    }

    static void subtractRegions(int[], int[], org.apache.harmony.awt.gl.MultiRectArea$RectCash, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r0;
        org.apache.harmony.awt.gl.MultiRectAreaOp$Region $r1, $r2;
        int[] $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;

        $r3 := @parameter0: int[];

        $r4 := @parameter1: int[];

        $r0 := @parameter2: org.apache.harmony.awt.gl.MultiRectArea$RectCash;

        $i1 := @parameter3: int;

        $i0 := @parameter4: int;

        $r1 = new org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        specialinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void <init>(int[])>($r3);

        $r2 = new org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        specialinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void <init>(int[])>($r4);

        $i2 = $i1 + $i0;

        $r3 = newarray (int)[$i2];

        $r4 = newarray (int)[$i1];

        $r5 = newarray (int)[$i0];

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void createLevel(int[])>($r4);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void createLevel(int[])>($r5);

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void sortOrdered(int[],int[],int[])>($r4, $r5, $r3);

        $i1 = $r3[1];

        $i2 = $i1 - 1;

        $i1 = 2;

     label01:
        $i0 = $r3[0];

        if $i1 >= $i0 goto label16;

        $i0 = $i2 + 1;

        $i2 = $r3[$i1];

        $i2 = $i2 - 1;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void findActive(int,int)>($i0, $i2);

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $r4[0];

        if $i3 != 1 goto label03;

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive(int)>($i2);

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void findActive(int,int)>($i0, $i2);

        $i3 = 1;

        $i4 = 1;

        $i5 = 0;

        $i6 = 0;

        $z0 = 1;

     label04:
        if $z0 == 0 goto label07;

        $z0 = 0;

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i5 = $r4[0];

        if $i3 < $i5 goto label06;

     label05:
        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive()>();

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive(int)>($i2);

        goto label02;

     label06:
        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i5 = $i3 + 1;

        $i6 = $i2 + 1;

        $r4[$i5] = $i6;

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i5 = $r4[$i3];

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i6 = $i3 + 2;

        $i6 = $r4[$i6];

        $i3 = $i3 + 4;

     label07:
        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i7 = $r4[0];

        if $i4 < $i7 goto label10;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i5, $i0, $i6, $i2);

     label08:
        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i4 = $r4[0];

        if $i3 >= $i4 goto label09;

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i4 = $r4[$i3];

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i5 = $i3 + 2;

        $i5 = $r4[$i5];

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i4, $i0, $i5, $i2);

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i4 = $i3 + 1;

        $i5 = $i2 + 1;

        $r4[$i4] = $i5;

        $i3 = $i3 + 4;

        goto label08;

     label09:
        goto label05;

     label10:
        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i7 = $r4[$i4];

        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i8 = $i4 + 2;

        $i8 = $r4[$i8];

        if $i5 >= $i7 goto label13;

        if $i6 < $i7 goto label12;

        if $i6 > $i8 goto label11;

        $i7 = $i7 - 1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i5, $i0, $i7, $i2);

        $z0 = 1;

        goto label04;

     label11:
        $i7 = $i7 - 1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i5, $i0, $i7, $i2);

        $i5 = $i8 + 1;

        $i4 = $i4 + 4;

        goto label04;

     label12:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i5, $i0, $i6, $i2);

        $z0 = 1;

        goto label04;

     label13:
        if $i5 > $i8 goto label15;

        if $i6 > $i8 goto label14;

        $z0 = 1;

        goto label04;

     label14:
        $i5 = $i8 + 1;

        $i4 = $i4 + 4;

        goto label04;

     label15:
        $i4 = $i4 + 4;

        goto label04;

     label16:
        return;
    }
}
