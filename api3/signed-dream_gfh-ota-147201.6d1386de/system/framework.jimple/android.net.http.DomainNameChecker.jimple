public class android.net.http.DomainNameChecker extends java.lang.Object
{
    private static final int ALT_DNS_NAME;
    private static final int ALT_IPA_NAME;
    private static java.util.regex.Pattern QUICK_IP_PATTERN;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.util.regex.PatternSyntaxException $r1;

        <android.net.http.DomainNameChecker: int ALT_IPA_NAME> = 7;

        <android.net.http.DomainNameChecker: int ALT_DNS_NAME> = 2;

     label1:
        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[a-f0-9\\.:]+$");

     label2:
        <android.net.http.DomainNameChecker: java.util.regex.Pattern QUICK_IP_PATTERN> = $r0;

        return;

     label3:
        $r1 := @caughtexception;

        return;

        catch java.util.regex.PatternSyntaxException from label1 to label2 with label3;
    }

    public void <init>()
    {
        android.net.http.DomainNameChecker $r0;

        $r0 := @this: android.net.http.DomainNameChecker;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean domainTokenMatch(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label2;

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(42);

        if $i0 < 0 goto label2;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 - 1;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 > $i2 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    private static boolean isIpAddress(java.lang.String)
    {
        java.lang.String $r0, $r4;
        int $i0;
        boolean $z0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        java.net.InetAddress $r3;
        java.net.UnknownHostException $r5;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label4;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label7;

        $r1 = <android.net.http.DomainNameChecker: java.util.regex.Pattern QUICK_IP_PATTERN>;

     label2:
        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label8;

        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $r5 := @caughtexception;

        $r0 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r0 != null goto label6;

     label6:
        return 0;

     label7:
        return $z0;

     label8:
        return $z0;

        catch java.net.UnknownHostException from label2 to label3 with label5;
    }

    public static boolean match(java.security.cert.X509Certificate, java.lang.String)
    {
        java.security.cert.X509Certificate $r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = staticinvoke <android.net.http.DomainNameChecker: boolean isIpAddress(java.lang.String)>($r1);

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <android.net.http.DomainNameChecker: boolean matchDns(java.security.cert.X509Certificate,java.lang.String)>($r0, $r1);

        return $z0;

     label3:
        $z0 = staticinvoke <android.net.http.DomainNameChecker: boolean matchIpAddress(java.security.cert.X509Certificate,java.lang.String)>($r0, $r1);

        return $z0;
    }

    private static boolean matchDns(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.String[] $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        $z1 = $z0;

        if $z0 != 0 goto label5;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i1 = lengthof $r2;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label5;

        $i2 = $i0 - 1;

     label3:
        if $i2 < 0 goto label5;

        $r0 = $r2[$i2];

        $r1 = $r3[$i2];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        $z1 = $z0;

        if $z0 != 0 goto label7;

        if $i2 != 0 goto label6;

        if $i1 != $i0 goto label6;

        $z1 = 1;

     label4:
        if $z1 == 0 goto label5;

        $r0 = $r3[0];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("*");

        $z1 = $z0;

        if $z0 != 0 goto label5;

        $r0 = $r2[0];

        $r1 = $r3[0];

        $z1 = staticinvoke <android.net.http.DomainNameChecker: boolean domainTokenMatch(java.lang.String,java.lang.String)>($r0, $r1);

     label5:
        return $z1;

     label6:
        $z1 = 0;

        goto label4;

     label7:
        $i2 = $i2 + -1;

        goto label3;
    }

    private static boolean matchDns(java.security.cert.X509Certificate, java.lang.String)
    {
        java.lang.String $r0, $r8;
        org.bouncycastle.asn1.x509.X509Name $r1;
        java.security.cert.X509Certificate $r2;
        boolean $z0, $z1;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.List $r6;
        int $i0, $i1;
        java.lang.Integer $r7;
        java.security.cert.CertificateParsingException $r9;
        java.security.Principal $r10;
        java.util.Vector $r11, $r12;
        org.bouncycastle.asn1.DERObjectIdentifier $r13;

        $r2 := @parameter0: java.security.cert.X509Certificate;

        $r0 := @parameter1: java.lang.String;

        $z0 = 0;

     label01:
        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>();

        if $r3 == null goto label11;

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label03:
        $r6 = (java.util.List) $r5;

        $r6 = (java.util.List) $r6;

     label04:
        if $r6 == null goto label02;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if 2 > $i0 goto label02;

        $r5 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

     label05:
        $r7 = (java.lang.Integer) $r5;

        $r7 = (java.lang.Integer) $r7;

     label06:
        if $r7 == null goto label02;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i0 != 2 goto label02;

        $z0 = 1;

        $r5 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

     label07:
        $r8 = (java.lang.String) $r5;

        $r8 = (java.lang.String) $r8;

     label08:
        if $r8 == null goto label02;

        $z1 = staticinvoke <android.net.http.DomainNameChecker: boolean matchDns(java.lang.String,java.lang.String)>($r0, $r8);

     label09:
        if $z1 == 0 goto label02;

        return 1;

     label10:
        $r9 := @caughtexception;

     label11:
        if $z0 != 0 goto label14;

        $r1 = new org.bouncycastle.asn1.x509.X509Name;

        $r10 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r8 = interfaceinvoke $r10.<java.security.Principal: java.lang.String getName()>();

        specialinvoke $r1.<org.bouncycastle.asn1.x509.X509Name: void <init>(java.lang.String)>($r8);

        $r11 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues()>();

        $r12 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509Name: java.util.Vector getOIDs()>();

        $i0 = 0;

     label12:
        $i1 = virtualinvoke $r12.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label14;

        $r5 = virtualinvoke $r12.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r13 = <org.bouncycastle.asn1.x509.X509Name: org.bouncycastle.asn1.DERObjectIdentifier CN>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label13;

        $r5 = virtualinvoke $r11.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r8 = (java.lang.String) $r5;

        $r8 = (java.lang.String) $r8;

        $z0 = staticinvoke <android.net.http.DomainNameChecker: boolean matchDns(java.lang.String,java.lang.String)>($r0, $r8);

        return $z0;

     label13:
        $i0 = $i0 + 1;

        goto label12;

     label14:
        return 0;

        catch java.security.cert.CertificateParsingException from label01 to label03 with label10;
        catch java.security.cert.CertificateParsingException from label04 to label05 with label10;
        catch java.security.cert.CertificateParsingException from label06 to label07 with label10;
        catch java.security.cert.CertificateParsingException from label08 to label09 with label10;
    }

    private static boolean matchIpAddress(java.security.cert.X509Certificate, java.lang.String)
    {
        java.lang.String $r0, $r7;
        java.security.cert.X509Certificate $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.List $r5;
        int $i0;
        java.lang.Integer $r6;
        java.security.cert.CertificateParsingException $r8;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r0 := @parameter1: java.lang.String;

     label01:
        $r2 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>();

        if $r2 == null goto label11;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

     label03:
        $r5 = (java.util.List) $r4;

        $r5 = (java.util.List) $r5;

     label04:
        if $r5 == null goto label02;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if 2 > $i0 goto label02;

        $r4 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

     label05:
        $r6 = (java.lang.Integer) $r4;

        $r6 = (java.lang.Integer) $r6;

     label06:
        if $r6 == null goto label02;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i0 != 7 goto label02;

        $r4 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(1);

     label07:
        $r7 = (java.lang.String) $r4;

        $r7 = (java.lang.String) $r7;

     label08:
        if $r7 == null goto label02;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

     label09:
        if $z0 == 0 goto label02;

        return 1;

     label10:
        $r8 := @caughtexception;

     label11:
        return 0;

        catch java.security.cert.CertificateParsingException from label01 to label03 with label10;
        catch java.security.cert.CertificateParsingException from label04 to label05 with label10;
        catch java.security.cert.CertificateParsingException from label06 to label07 with label10;
        catch java.security.cert.CertificateParsingException from label08 to label09 with label10;
    }
}
