public class android.app.AliasActivity extends android.app.Activity
{
    public final java.lang.String ALIAS_META_DATA;

    public void <init>()
    {
        android.app.AliasActivity $r0;

        $r0 := @this: android.app.AliasActivity;

        specialinvoke $r0.<android.app.Activity: void <init>()>();

        $r0.<android.app.AliasActivity: java.lang.String ALIAS_META_DATA> = "android.app.alias";

        return;
    }

    private android.content.Intent parseAlias(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.app.AliasActivity $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.content.Intent $r3;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7;
        android.content.res.Resources $r8;

        $r0 := @this: android.app.AliasActivity;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

        $r3 = null;

     label1:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 1 goto label2;

        if $i0 != 2 goto label1;

     label2:
        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "alias";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alias meta-data must start with <alias> tag; found");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label4:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label7;

        if $i1 != 3 goto label5;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label8;

     label5:
        if $i1 == 3 goto label4;

        if $i1 == 4 goto label4;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "intent";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r8 = virtualinvoke $r0.<android.content.ContextWrapper: android.content.res.Resources getResources()>();

        if $r3 != null goto label4;

        $r3 = staticinvoke <android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r8, $r1, $r2);

        goto label4;

     label6:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label4;

     label7:
        return $r3;

     label8:
        return $r3;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.app.AliasActivity $r0;
        android.os.Bundle $r1;
        android.content.res.XmlResourceParser $r2, $r6;
        android.content.pm.PackageManager $r3;
        android.content.ComponentName $r4;
        android.content.pm.ActivityInfo $r5;
        java.lang.RuntimeException $r7;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.Throwable $r9;
        android.content.Intent $r10;
        org.xmlpull.v1.XmlPullParserException $r11;
        java.io.IOException $r12;

        $r0 := @this: android.app.AliasActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1);

        $r2 = null;

     label01:
        $r3 = virtualinvoke $r0.<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r4, 128);

        $r3 = virtualinvoke $r0.<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r3, "android.app.alias");

     label02:
        $r2 = $r6;

     label03:
        if $r6 != null goto label09;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Alias requires a meta-data field android.app.alias");

     label04:
        throw $r7;

     label05:
        $r8 := @caughtexception;

     label06:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing alias", $r8);

        throw $r7;

     label07:
        $r9 := @caughtexception;

        if $r2 == null goto label08;

        interfaceinvoke $r2.<android.content.res.XmlResourceParser: void close()>();

     label08:
        throw $r9;

     label09:
        $r10 = specialinvoke $r0.<android.app.AliasActivity: android.content.Intent parseAlias(org.xmlpull.v1.XmlPullParser)>($r6);

        if $r10 != null goto label13;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("No <intent> tag found in alias description");

     label10:
        throw $r7;

     label11:
        $r11 := @caughtexception;

     label12:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing alias", $r11);

        throw $r7;

     label13:
        virtualinvoke $r0.<android.app.Activity: void startActivity(android.content.Intent)>($r10);

        virtualinvoke $r0.<android.app.Activity: void finish()>();

     label14:
        if $r6 == null goto label17;

        interfaceinvoke $r6.<android.content.res.XmlResourceParser: void close()>();

        return;

     label15:
        $r12 := @caughtexception;

     label16:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing alias", $r12);

        throw $r7;

     label17:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label05;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label11;
        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label05 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label16 to label17 with label07;
    }
}
