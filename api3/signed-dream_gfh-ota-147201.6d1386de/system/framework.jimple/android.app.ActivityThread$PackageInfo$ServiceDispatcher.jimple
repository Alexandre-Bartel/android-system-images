final class android.app.ActivityThread$PackageInfo$ServiceDispatcher extends java.lang.Object
{
    private final java.util.HashMap mActiveConnections;
    private final android.os.Handler mActivityThread;
    private final android.content.ServiceConnection mConnection;
    private final android.content.Context mContext;
    private boolean mDied;
    private final int mFlags;
    private final android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection mIServiceConnection;
    private final android.app.ServiceConnectionLeaked mLocation;
    private java.lang.RuntimeException mUnbindLocation;

    void <init>(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.ServiceConnection $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        int $i0;
        java.util.HashMap $r4;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection $r5;
        android.app.ServiceConnectionLeaked $r6;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: android.content.ServiceConnection;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.os.Handler;

        $i0 := @parameter3: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections> = $r4;

        $r5 = new android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection;

        specialinvoke $r5.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection: void <init>(android.app.ActivityThread$PackageInfo$ServiceDispatcher)>($r0);

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection mIServiceConnection> = $r5;

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection> = $r1;

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.Context mContext> = $r2;

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread> = $r3;

        $r6 = new android.app.ServiceConnectionLeaked;

        specialinvoke $r6.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>(null);

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation> = $r6;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation>;

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: int mFlags> = $i0;

        return;
    }

    public void connected(android.content.ComponentName, android.os.IBinder)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$RunConnection $r3;
        android.os.Handler $r4;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r4 == null goto label1;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread>;

        $r3 = new android.app.ActivityThread$PackageInfo$ServiceDispatcher$RunConnection;

        specialinvoke $r3.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$RunConnection: void <init>(android.app.ActivityThread$PackageInfo$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int)>($r0, $r1, $r2, 0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;

     label1:
        virtualinvoke $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)>($r1, $r2);

        return;
    }

    public void death(android.content.ComponentName, android.os.IBinder)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2, $r6;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo $r5;
        android.os.IBinder$DeathRecipient $r7;
        android.os.Handler $r8;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$RunConnection $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        entermonitor $r0;

     label1:
        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: boolean mDied> = 1;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        $r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo) $r3;

        if $r5 == null goto label2;

        $r6 = $r5.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        if $r6 == $r2 goto label4;

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        $r6 = $r5.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r7 = $r5.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        exitmonitor $r0;

     label5:
        $r8 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r8 == null goto label9;

        $r8 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread>;

        $r9 = new android.app.ActivityThread$PackageInfo$ServiceDispatcher$RunConnection;

        specialinvoke $r9.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$RunConnection: void <init>(android.app.ActivityThread$PackageInfo$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int)>($r0, $r1, $r2, 1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        return;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor $r0;

     label8:
        throw $r10;

     label9:
        virtualinvoke $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>($r1, $r2);

        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void doConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2, $r7;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo $r3, $r6;
        java.lang.Object $r4;
        java.util.HashMap $r5;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$DeathMonitor $r8;
        android.os.IBinder$DeathRecipient $r9;
        android.content.ServiceConnection $r10;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        entermonitor $r0;

     label01:
        $r5 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        $r4 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo) $r4;

        if $r6 == null goto label03;

        $r7 = $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        if $r7 != $r2 goto label03;

        exitmonitor $r0;

     label02:
        return;

     label03:
        if $r2 == null goto label16;

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: boolean mDied> = 0;

        $r3 = new android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo;

        specialinvoke $r3.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder> = $r2;

        $r8 = new android.app.ActivityThread$PackageInfo$ServiceDispatcher$DeathMonitor;

        specialinvoke $r8.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$DeathMonitor: void <init>(android.app.ActivityThread$PackageInfo$ServiceDispatcher,android.content.ComponentName,android.os.IBinder)>($r0, $r1, $r2);

        $r3.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor> = $r8;

     label04:
        $r9 = $r3.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

     label05:
        interfaceinvoke $r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r9, 0);

        $r5 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label06:
        if $r6 == null goto label08;

     label07:
        $r7 = $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r9 = $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r9, 0);

     label08:
        exitmonitor $r0;

     label09:
        if $r6 == null goto label10;

        $r10 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r10.<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>($r1);

     label10:
        if $r2 == null goto label18;

        $r10 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r10.<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>($r1, $r2);

        return;

     label11:
        $r11 := @caughtexception;

     label12:
        $r5 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        exitmonitor $r0;

     label13:
        return;

     label14:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label15:
        throw $r12;

     label16:
        $r5 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label17:
        goto label06;

     label18:
        return;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Throwable from label04 to label06 with label14;
        catch java.lang.Throwable from label07 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
    }

    public void doDeath(android.content.ComponentName, android.os.IBinder)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        android.content.ServiceConnection $r3;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $r3 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r3.<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>($r1);

        return;
    }

    void doForget()
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.os.IBinder$DeathRecipient $r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo $r6;
        android.os.IBinder $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo) $r5;

        $r7 = $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r1 = $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r1, 0);

        goto label2;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r8;

     label5:
        $r2 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.util.HashMap mActiveConnections>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        exitmonitor $r0;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    int getFlags()
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        int i0;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        i0 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: int mFlags>;

        return i0;
    }

    android.app.IServiceConnection getIServiceConnection()
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        r1 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.ActivityThread$PackageInfo$ServiceDispatcher$InnerConnection mIServiceConnection>;

        return r1;
    }

    android.app.ServiceConnectionLeaked getLocation()
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.app.ServiceConnectionLeaked r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        r1 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation>;

        return r1;
    }

    android.content.ServiceConnection getServiceConnection()
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.ServiceConnection r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        r1 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        return r1;
    }

    java.lang.RuntimeException getUnbindLocation()
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        java.lang.RuntimeException r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        r1 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.lang.RuntimeException mUnbindLocation>;

        return r1;
    }

    void setUnbindLocation(java.lang.RuntimeException)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        java.lang.RuntimeException $r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: java.lang.RuntimeException;

        $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.lang.RuntimeException mUnbindLocation> = $r1;

        return;
    }

    void validate(android.content.Context, android.os.Handler)
    {
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r0;
        android.content.Context $r1, $r3;
        android.os.Handler $r2, $r8;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5;
        android.content.ServiceConnection $r6;
        java.lang.String $r7;

        $r0 := @this: android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.Handler;

        $r3 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.Context mContext>;

        if $r3 == $r1 goto label1;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r6 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing Context (was ");

        $r3 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.Context mContext>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label1:
        $r8 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r8 == $r2 goto label2;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r6 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing handler (was ");

        $r8 = $r0.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.os.Handler mActivityThread>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label2:
        return;
    }
}
