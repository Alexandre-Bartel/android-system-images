class org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo extends java.lang.Object
{
    boolean absorb;
    float absorbedGapPerUnit;
    float absorbedWeight;
    int firstIdx;
    float gapPerUnit;
    float gapToFill;
    boolean grow;
    float growLimit;
    int lastIdx;
    int priority;
    final org.apache.harmony.awt.gl.font.TextRunBreaker this$0;
    boolean useLimits;
    float weight;

    void <init>(org.apache.harmony.awt.gl.font.TextRunBreaker)
    {
        org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo $r0;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.TextRunBreaker;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: org.apache.harmony.awt.gl.font.TextRunBreaker this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: boolean absorb> = 0;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: boolean useLimits> = 0;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: int priority> = 0;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: float weight> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: float absorbedWeight> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: float growLimit> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: float gapPerUnit> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo: float absorbedGapPerUnit> = 0.0F;

        return;
    }
}
