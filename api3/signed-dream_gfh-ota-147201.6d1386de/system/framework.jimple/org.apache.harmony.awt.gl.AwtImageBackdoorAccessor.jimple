public abstract class org.apache.harmony.awt.gl.AwtImageBackdoorAccessor extends java.lang.Object
{
    protected static org.apache.harmony.awt.gl.AwtImageBackdoorAccessor inst;

    public void <init>()
    {
        org.apache.harmony.awt.gl.AwtImageBackdoorAccessor $r0;

        $r0 := @this: org.apache.harmony.awt.gl.AwtImageBackdoorAccessor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.harmony.awt.gl.AwtImageBackdoorAccessor getInstance()
    {
        java.awt.image.DataBufferInt $r0;
        org.apache.harmony.awt.gl.AwtImageBackdoorAccessor r1;

        $r0 = new java.awt.image.DataBufferInt;

        specialinvoke $r0.<java.awt.image.DataBufferInt: void <init>(int)>(0);

        r1 = <org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: org.apache.harmony.awt.gl.AwtImageBackdoorAccessor inst>;

        return r1;
    }

    public abstract void addDataBufferListener(java.awt.image.DataBuffer, org.apache.harmony.awt.gl.image.DataBufferListener);

    public abstract java.lang.Object getData(java.awt.image.DataBuffer);

    public abstract byte[] getDataByte(java.awt.image.DataBuffer);

    public abstract double[] getDataDouble(java.awt.image.DataBuffer);

    public abstract float[] getDataFloat(java.awt.image.DataBuffer);

    public abstract int[] getDataInt(java.awt.image.DataBuffer);

    public abstract short[] getDataShort(java.awt.image.DataBuffer);

    public abstract short[] getDataUShort(java.awt.image.DataBuffer);

    public abstract org.apache.harmony.awt.gl.Surface getImageSurface(java.awt.Image);

    public abstract boolean isGrayPallete(java.awt.image.IndexColorModel);

    public abstract void releaseData(java.awt.image.DataBuffer);

    public abstract void removeDataBufferListener(java.awt.image.DataBuffer);

    public abstract void validate(java.awt.image.DataBuffer);
}
