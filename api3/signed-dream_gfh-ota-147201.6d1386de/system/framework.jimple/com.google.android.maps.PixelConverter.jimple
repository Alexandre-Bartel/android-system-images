final class com.google.android.maps.PixelConverter extends java.lang.Object implements com.google.android.maps.Projection
{
    private static final java.lang.String LOG_TAG;
    private final android.graphics.Matrix mInverse;
    private final com.google.googlenav.map.Map mMap;
    private final android.graphics.Matrix mMatrix;
    private final float[] mTempFloats;
    private final com.google.common.geom.Point mTempPoint;

    void <init>(com.google.googlenav.map.Map)
    {
        com.google.android.maps.PixelConverter $r0;
        com.google.googlenav.map.Map $r1;
        android.graphics.Matrix $r2;
        float[] $r3;
        com.google.common.geom.Point $r4;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $r1 := @parameter0: com.google.googlenav.map.Map;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix> = $r2;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mInverse> = $r2;

        $r3 = newarray (float)[2];

        $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats> = $r3;

        $r4 = new com.google.common.geom.Point;

        specialinvoke $r4.<com.google.common.geom.Point: void <init>()>();

        $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint> = $r4;

        $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap> = $r1;

        $r2 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void reset()>();

        $r2 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mInverse>;

        virtualinvoke $r2.<android.graphics.Matrix: void reset()>();

        return;
    }

    private void transformTempPoint()
    {
        com.google.android.maps.PixelConverter $r0;
        float[] $r1;
        com.google.common.geom.Point $r2;
        int $i0;
        float $f0;
        android.graphics.Matrix $r3;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $r1 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r2.<com.google.common.geom.Point: int x>;

        $f0 = (float) $i0;

        $r1[0] = $f0;

        $r1 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r2.<com.google.common.geom.Point: int y>;

        $f0 = (float) $i0;

        $r1[1] = $f0;

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        $r1 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        virtualinvoke $r3.<android.graphics.Matrix: void mapPoints(float[])>($r1);

        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $r1 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $f0 = $r1[0];

        $i0 = (int) $f0;

        $r2.<com.google.common.geom.Point: int x> = $i0;

        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $r1 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $f0 = $r1[1];

        $i0 = (int) $f0;

        $r2.<com.google.common.geom.Point: int y> = $i0;

        return;
    }

    public com.google.android.maps.GeoPoint fromPixels(int, int)
    {
        com.google.android.maps.PixelConverter $r0;
        int $i0, $i1, $i2;
        com.google.android.maps.GeoPoint $r1;
        com.google.common.geom.Point $r2;
        float[] $r3;
        float $f0;
        android.graphics.Matrix $r4;
        com.google.googlenav.map.Map $r5;
        com.google.map.MapPoint $r6;
        com.google.map.Zoom $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $f0 = (float) $i1;

        $r3[0] = $f0;

        $r3 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $f0 = (float) $i0;

        $r3[1] = $f0;

        $r4 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mInverse>;

        $r3 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        virtualinvoke $r4.<android.graphics.Matrix: void mapPoints(float[])>($r3);

        $r3 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $f0 = $r3[0];

        $i0 = (int) $f0;

        $r3 = $r0.<com.google.android.maps.PixelConverter: float[] mTempFloats>;

        $f0 = $r3[1];

        $i1 = (int) $f0;

        exitmonitor $r2;

     label2:
        $r5 = $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap>;

        $r6 = virtualinvoke $r5.<com.google.googlenav.map.Map: com.google.map.MapPoint getCenterPoint()>();

        $r5 = $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap>;

        $r2 = virtualinvoke $r5.<com.google.googlenav.map.Map: com.google.common.geom.Point getPointXY(com.google.map.MapPoint)>($r6);

        $i2 = $r2.<com.google.common.geom.Point: int x>;

        $i0 = $i0 - $i2;

        $i2 = $r2.<com.google.common.geom.Point: int y>;

        $i1 = $i1 - $i2;

        $r5 = $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap>;

        $r7 = virtualinvoke $r5.<com.google.googlenav.map.Map: com.google.map.Zoom getZoom()>();

        $r6 = virtualinvoke $r6.<com.google.map.MapPoint: com.google.map.MapPoint pixelOffset(int,int,com.google.map.Zoom)>($i0, $i1, $r7);

        $r1 = new com.google.android.maps.GeoPoint;

        specialinvoke $r1.<com.google.android.maps.GeoPoint: void <init>(com.google.map.MapPoint)>($r6);

        return $r1;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public float metersToEquatorPixels(float)
    {
        com.google.android.maps.PixelConverter $r0;
        float $f0;
        int $i0;
        android.graphics.Matrix $r1;
        com.google.googlenav.map.Map $r2;
        com.google.map.Zoom $r3;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $f0 := @parameter0: float;

        $r1 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap>;

        $r3 = virtualinvoke $r2.<com.google.googlenav.map.Map: com.google.map.Zoom getZoom()>();

        $i0 = (int) $f0;

        $i0 = virtualinvoke $r3.<com.google.map.Zoom: int getPixelsForDistance(int)>($i0);

        $f0 = (float) $i0;

        $f0 = virtualinvoke $r1.<android.graphics.Matrix: float mapRadius(float)>($f0);

        return $f0;
    }

    void resetMatrix()
    {
        com.google.android.maps.PixelConverter $r0;
        android.graphics.Matrix $r1;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $r1 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: void reset()>();

        $r1 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mInverse>;

        virtualinvoke $r1.<android.graphics.Matrix: void reset()>();

        return;
    }

    void setMatrix(android.graphics.Matrix, float, com.google.android.maps.GeoPoint, float, float)
    {
        com.google.android.maps.PixelConverter $r0;
        android.graphics.Matrix $r1, $r3;
        float $f0, $f1, $f2, $f3, $f4;
        com.google.android.maps.GeoPoint $r2;
        com.google.common.geom.Point $r4, $r7;
        com.google.googlenav.map.Map $r5;
        com.google.map.MapPoint $r6;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $r1 := @parameter0: android.graphics.Matrix;

        $f0 := @parameter1: float;

        $r2 := @parameter2: com.google.android.maps.GeoPoint;

        $f1 := @parameter3: float;

        $f2 := @parameter4: float;

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: void reset()>();

        $r4 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        entermonitor $r4;

     label1:
        $r5 = $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap>;

        $r6 = virtualinvoke $r2.<com.google.android.maps.GeoPoint: com.google.map.MapPoint getMapPoint()>();

        $r7 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        virtualinvoke $r5.<com.google.googlenav.map.Map: void getPointXY(com.google.map.MapPoint,com.google.common.geom.Point)>($r6, $r7);

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        $r7 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r7.<com.google.common.geom.Point: int x>;

        $i0 = neg $i0;

        $f3 = (float) $i0;

        $r7 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r7.<com.google.common.geom.Point: int y>;

        $i0 = neg $i0;

        $f4 = (float) $i0;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f3, $f4);

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f0);

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f2);

        $r7 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r7.<com.google.common.geom.Point: int x>;

        $f0 = (float) $i0;

        $f0 = $f0 - $f1;

        $r7 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r7.<com.google.common.geom.Point: int y>;

        $f1 = (float) $i0;

        $f1 = $f1 - $f2;

        exitmonitor $r4;

     label2:
        virtualinvoke $r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r1);

        $r1 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        $r3 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mInverse>;

        $z0 = virtualinvoke $r1.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>($r3);

        if $z0 != 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting singular matrix ");

        $r1 = $r0.<com.google.android.maps.PixelConverter: android.graphics.Matrix mMatrix>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PixelConverter", $r9);

        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor $r4;

     label5:
        throw $r10;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.graphics.Point toPixels(com.google.android.maps.GeoPoint, android.graphics.Point)
    {
        com.google.android.maps.PixelConverter $r0;
        com.google.android.maps.GeoPoint $r1;
        android.graphics.Point $r2;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $r1 := @parameter0: com.google.android.maps.GeoPoint;

        $r2 := @parameter1: android.graphics.Point;

        $r2 = virtualinvoke $r0.<com.google.android.maps.PixelConverter: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point,boolean)>($r1, $r2, 1);

        return $r2;
    }

    android.graphics.Point toPixels(com.google.android.maps.GeoPoint, android.graphics.Point, boolean)
    {
        com.google.android.maps.PixelConverter $r0;
        com.google.android.maps.GeoPoint $r1;
        boolean $z0;
        com.google.common.geom.Point $r2, $r3;
        com.google.map.MapPoint $r4;
        android.graphics.Point $r5;
        com.google.googlenav.map.Map $r6;
        int $i0;
        java.lang.Throwable $r7;

        $r0 := @this: com.google.android.maps.PixelConverter;

        $r1 := @parameter0: com.google.android.maps.GeoPoint;

        $r5 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        if $r5 != null goto label1;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

     label1:
        $r2 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        entermonitor $r2;

     label2:
        $r6 = $r0.<com.google.android.maps.PixelConverter: com.google.googlenav.map.Map mMap>;

        $r4 = virtualinvoke $r1.<com.google.android.maps.GeoPoint: com.google.map.MapPoint getMapPoint()>();

        $r3 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        virtualinvoke $r6.<com.google.googlenav.map.Map: void getPointXY(com.google.map.MapPoint,com.google.common.geom.Point)>($r4, $r3);

        if $z0 == 0 goto label3;

        specialinvoke $r0.<com.google.android.maps.PixelConverter: void transformTempPoint()>();

     label3:
        $r3 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r3.<com.google.common.geom.Point: int x>;

        $r5.<android.graphics.Point: int x> = $i0;

        $r3 = $r0.<com.google.android.maps.PixelConverter: com.google.common.geom.Point mTempPoint>;

        $i0 = $r3.<com.google.common.geom.Point: int y>;

        $r5.<android.graphics.Point: int y> = $i0;

        exitmonitor $r2;

     label4:
        return $r5;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r7;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <com.google.android.maps.PixelConverter: java.lang.String LOG_TAG> = "PixelConverter";

        return;
    }
}
