public class android.app.Instrumentation extends java.lang.Object
{
    public static final java.lang.String REPORT_KEY_IDENTIFIER;
    public static final java.lang.String REPORT_KEY_STREAMRESULT;
    private static final java.lang.String TAG;
    private java.util.List mActivityMonitors;
    private android.content.Context mAppContext;
    private boolean mAutomaticPerformanceSnapshots;
    private android.content.ComponentName mComponent;
    private android.content.Context mInstrContext;
    private android.os.MessageQueue mMessageQueue;
    private android.os.Bundle mPerfMetrics;
    private long mPreCpuTime;
    private android.os.Bundle mPrePerfMetrics;
    private java.lang.Thread mRunner;
    private long mStart;
    private final java.lang.Object mSync;
    private android.app.ActivityThread mThread;
    private java.util.List mWaitingActivities;
    private android.app.IInstrumentationWatcher mWatcher;

    public void <init>()
    {
        android.app.Instrumentation $r0;
        java.lang.Object $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.app.Instrumentation;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0.<android.app.Instrumentation: java.lang.Object mSync> = $r1;

        $r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = null;

        $r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue> = null;

        $r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots> = 0;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $r0.<android.app.Instrumentation: android.os.Bundle mPrePerfMetrics> = $r2;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics> = $r2;

        return;
    }

    static boolean access$100(android.app.Instrumentation)
    {
        android.app.Instrumentation $r0;
        boolean z0;

        $r0 := @parameter0: android.app.Instrumentation;

        z0 = $r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots>;

        return z0;
    }

    static java.lang.Object access$200(android.app.Instrumentation)
    {
        android.app.Instrumentation $r0;
        java.lang.Object r1;

        $r0 := @parameter0: android.app.Instrumentation;

        r1 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        return r1;
    }

    static java.util.List access$300(android.app.Instrumentation)
    {
        android.app.Instrumentation $r0;
        java.util.List r1;

        $r0 := @parameter0: android.app.Instrumentation;

        r1 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        return r1;
    }

    private void addPerfMetricInt(java.lang.String, int)
    {
        android.app.Instrumentation $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Bundle $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performance.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>($r1, $i0);

        return;
    }

    private void addPerfMetricLong(java.lang.String, long)
    {
        android.app.Instrumentation $r0;
        java.lang.String $r1;
        long $l0;
        android.os.Bundle $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = $r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performance.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>($r1, $l0);

        return;
    }

    private void addValue(java.lang.String, int, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Bundle $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Integer $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean containsKey(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>($r1);

        if $r3 == null goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        virtualinvoke $r2.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>($r1, $r3);

        return;

     label2:
        return;
    }

    static void checkStartActivityResult(int, android.content.Intent)
    {
        int $i0;
        android.content.Intent $r0;
        android.util.AndroidRuntimeException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.content.ComponentName $r4;
        android.content.ActivityNotFoundException $r5;
        java.lang.SecurityException $r6;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.content.Intent;

        if $i0 < 0 goto label1;

        return;

     label1:
        lookupswitch($i0)
        {
            case -4: goto label5;
            case -3: goto label6;
            case -2: goto label3;
            case -1: goto label3;
            default: goto label2;
        };

     label2:
        $r1 = new android.util.AndroidRuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown error code ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when starting ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label3:
        $r4 = virtualinvoke $r0.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r4 == null goto label4;

        $r5 = new android.content.ActivityNotFoundException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find explicit activity class ");

        $r4 = virtualinvoke $r0.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r3 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String toShortString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; have you declared this activity in your AndroidManifest.xml?");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label4:
        $r5 = new android.content.ActivityNotFoundException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Activity found to handle ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label5:
        $r6 = new java.lang.SecurityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to start activity ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label6:
        $r1 = new android.util.AndroidRuntimeException;

        specialinvoke $r1.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("FORWARD_RESULT_FLAG used while also requesting a result");

        throw $r1;
    }

    public static android.app.Application newApplication(java.lang.Class, android.content.Context) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        java.lang.Class $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.app.Application $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: android.content.Context;

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (android.app.Application) $r2;

        virtualinvoke $r3.<android.app.Application: void attach(android.content.Context)>($r1);

        return $r3;
    }

    private final void validateNotAppThread()
    {
        android.app.Instrumentation $r0;
        android.app.ActivityThread $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if $r1 == null goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("This method can not be called from the main application thread");

        throw $r2;

     label1:
        return;
    }

    public android.app.Instrumentation$ActivityMonitor addMonitor(android.content.IntentFilter, android.app.Instrumentation$ActivityResult, boolean)
    {
        android.app.Instrumentation $r0;
        android.content.IntentFilter $r1;
        android.app.Instrumentation$ActivityResult $r2;
        boolean $z0;
        android.app.Instrumentation$ActivityMonitor $r3;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.content.IntentFilter;

        $r2 := @parameter1: android.app.Instrumentation$ActivityResult;

        $z0 := @parameter2: boolean;

        $r3 = new android.app.Instrumentation$ActivityMonitor;

        specialinvoke $r3.<android.app.Instrumentation$ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)>($r1, $r2, $z0);

        virtualinvoke $r0.<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>($r3);

        return $r3;
    }

    public android.app.Instrumentation$ActivityMonitor addMonitor(java.lang.String, android.app.Instrumentation$ActivityResult, boolean)
    {
        android.app.Instrumentation $r0;
        java.lang.String $r1;
        android.app.Instrumentation$ActivityResult $r2;
        boolean $z0;
        android.app.Instrumentation$ActivityMonitor $r3;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.app.Instrumentation$ActivityResult;

        $z0 := @parameter2: boolean;

        $r3 = new android.app.Instrumentation$ActivityMonitor;

        specialinvoke $r3.<android.app.Instrumentation$ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation$ActivityResult,boolean)>($r1, $r2, $z0);

        virtualinvoke $r0.<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>($r3);

        return $r3;
    }

    public void addMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$ActivityMonitor $r1;
        java.lang.Object $r2;
        java.util.List $r3;
        java.util.ArrayList $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        $r2 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r3 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<android.app.Instrumentation: java.util.List mActivityMonitors> = $r4;

     label2:
        $r3 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        exitmonitor $r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void callActivityOnCreate(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        android.os.Bundle $r2;
        android.content.Intent $r3, $r9;
        android.app.Instrumentation$ActivityGoing $r4;
        java.util.List $r5;
        java.lang.Object $r6, $r7;
        int $i0, $i1;
        android.app.Instrumentation$ActivityWaiter $r8;
        boolean $z0;
        android.os.MessageQueue $r10;
        android.app.Instrumentation$ActivityMonitor $r11;
        java.lang.Throwable $r12, $r13;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.os.Bundle;

        $r5 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r5 == null goto label05;

        $r6 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r6;

     label01:
        $r5 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label04;

        $r5 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (android.app.Instrumentation$ActivityWaiter) $r7;

        $r3 = $r8.<android.app.Instrumentation$ActivityWaiter: android.content.Intent intent>;

        $r9 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r3.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r9);

        if $z0 == 0 goto label03;

        $r8.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity> = $r1;

        $r10 = $r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        $r4 = new android.app.Instrumentation$ActivityGoing;

        specialinvoke $r4.<android.app.Instrumentation$ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter)>($r0, $r8);

        virtualinvoke $r10.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r4);

     label03:
        $i1 = $i1 + 1;

        goto label02;

     label04:
        exitmonitor $r6;

     label05:
        virtualinvoke $r1.<android.app.Activity: void onCreate(android.os.Bundle)>($r2);

        $r5 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r5 == null goto label16;

        $r6 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r6;

     label06:
        $r5 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label12;

        $r5 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r11 = (android.app.Instrumentation$ActivityMonitor) $r7;

        $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r11.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>($r1, $r1, $r3);

     label08:
        $i1 = $i1 + 1;

        goto label07;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor $r6;

     label11:
        throw $r12;

     label12:
        exitmonitor $r6;

     label13:
        return;

     label14:
        $r13 := @caughtexception;

        exitmonitor $r6;

     label15:
        throw $r13;

     label16:
        return;

        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void callActivityOnDestroy(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        android.content.Intent $r2, $r8;
        android.app.Instrumentation$ActivityGoing $r3;
        java.util.List $r4;
        java.lang.Object $r5, $r6;
        int $i0, $i1;
        android.app.Instrumentation$ActivityWaiter $r7;
        boolean $z0;
        android.os.MessageQueue $r9;
        android.app.Instrumentation$ActivityMonitor $r10;
        java.lang.Throwable $r11, $r12;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $r4 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r4 == null goto label05;

        $r5 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r5;

     label01:
        $r4 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label04;

        $r4 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (android.app.Instrumentation$ActivityWaiter) $r6;

        $r2 = $r7.<android.app.Instrumentation$ActivityWaiter: android.content.Intent intent>;

        $r8 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r8);

        if $z0 == 0 goto label03;

        $r7.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity> = $r1;

        $r9 = $r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        $r3 = new android.app.Instrumentation$ActivityGoing;

        specialinvoke $r3.<android.app.Instrumentation$ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter)>($r0, $r7);

        virtualinvoke $r9.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label03:
        $i1 = $i1 + 1;

        goto label02;

     label04:
        exitmonitor $r5;

     label05:
        virtualinvoke $r1.<android.app.Activity: void onDestroy()>();

        $r4 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r4 == null goto label16;

        $r5 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r5;

     label06:
        $r4 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label12;

        $r4 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (android.app.Instrumentation$ActivityMonitor) $r6;

        $r2 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r10.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>($r1, $r1, $r2);

     label08:
        $i1 = $i1 + 1;

        goto label07;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor $r5;

     label11:
        throw $r11;

     label12:
        exitmonitor $r5;

     label13:
        return;

     label14:
        $r12 := @caughtexception;

        exitmonitor $r5;

     label15:
        throw $r12;

     label16:
        return;

        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void callActivityOnNewIntent(android.app.Activity, android.content.Intent)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        android.content.Intent $r2;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.content.Intent;

        virtualinvoke $r1.<android.app.Activity: void onNewIntent(android.content.Intent)>($r2);

        return;
    }

    public void callActivityOnPause(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        virtualinvoke $r1.<android.app.Activity: void performPause()>();

        return;
    }

    public void callActivityOnPostCreate(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.os.Bundle;

        virtualinvoke $r1.<android.app.Activity: void onPostCreate(android.os.Bundle)>($r2);

        return;
    }

    public void callActivityOnRestart(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        virtualinvoke $r1.<android.app.Activity: void onRestart()>();

        return;
    }

    public void callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.os.Bundle;

        virtualinvoke $r1.<android.app.Activity: void performRestoreInstanceState(android.os.Bundle)>($r2);

        return;
    }

    public void callActivityOnResume(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        java.util.List $r2;
        java.lang.Object $r3, $r4;
        int $i0, $i1;
        android.app.Instrumentation$ActivityMonitor $r5;
        android.content.Intent $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        virtualinvoke $r1.<android.app.Activity: void onResume()>();

        $r2 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r2 == null goto label7;

        $r3 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (android.app.Instrumentation$ActivityMonitor) $r4;

        $r6 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r5.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>($r1, $r1, $r6);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        exitmonitor $r3;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.os.Bundle;

        virtualinvoke $r1.<android.app.Activity: void performSaveInstanceState(android.os.Bundle)>($r2);

        return;
    }

    public void callActivityOnStart(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        virtualinvoke $r1.<android.app.Activity: void onStart()>();

        return;
    }

    public void callActivityOnStop(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        virtualinvoke $r1.<android.app.Activity: void onStop()>();

        return;
    }

    public void callActivityOnUserLeaving(android.app.Activity)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        virtualinvoke $r1.<android.app.Activity: void performUserLeaving()>();

        return;
    }

    public void callApplicationOnCreate(android.app.Application)
    {
        android.app.Instrumentation $r0;
        android.app.Application $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Application;

        virtualinvoke $r1.<android.app.Application: void onCreate()>();

        return;
    }

    public boolean checkMonitorHit(android.app.Instrumentation$ActivityMonitor, int)
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$ActivityMonitor $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.List $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.app.Instrumentation: void waitForIdleSync()>();

        $r2 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r2;

     label1:
        $i1 = virtualinvoke $r1.<android.app.Instrumentation$ActivityMonitor: int getHits()>();

        if $i1 >= $i0 goto label3;

        exitmonitor $r2;

     label2:
        return 0;

     label3:
        $r3 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r2;

     label4:
        return 1;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void endPerformanceSnapshot()
    {
        android.app.Instrumentation $r0;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        android.os.Debug$MemoryInfo $r1;
        boolean $z0;
        java.lang.Runtime $r2;
        android.os.Bundle $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        int $i9;

        $r0 := @this: android.app.Instrumentation;

        $z0 = virtualinvoke $r0.<android.app.Instrumentation: boolean isProfiling()>();

        if $z0 != 0 goto label5;

        $l6 = staticinvoke <android.os.Process: long getElapsedCpuTime()>();

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r0.<android.app.Instrumentation: void stopAllocCounting()>();

        $l5 = staticinvoke <android.os.Debug: long getNativeHeapSize()>();

        $l5 = $l5 / 1024L;

        $l3 = staticinvoke <android.os.Debug: long getNativeHeapAllocatedSize()>();

        $l3 = $l3 / 1024L;

        $l4 = staticinvoke <android.os.Debug: long getNativeHeapFreeSize()>();

        $l4 = $l4 / 1024L;

        $r1 = new android.os.Debug$MemoryInfo;

        specialinvoke $r1.<android.os.Debug$MemoryInfo: void <init>()>();

        staticinvoke <android.os.Debug: void getMemoryInfo(android.os.Debug$MemoryInfo)>($r1);

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l2 = virtualinvoke $r2.<java.lang.Runtime: long totalMemory()>();

        $l2 = $l2 / 1024L;

        $l0 = virtualinvoke $r2.<java.lang.Runtime: long freeMemory()>();

        $l1 = $l0 / 1024L;

        $l0 = $l2 - $l1;

        $r3 = virtualinvoke $r0.<android.app.Instrumentation: android.os.Bundle getBinderCounts()>();

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $l8 = virtualinvoke $r3.<android.os.Bundle: long getLong(java.lang.String)>($r7);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>($r7, $l8);

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<android.app.Instrumentation: android.os.Bundle getAllocCounts()>();

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $l8 = virtualinvoke $r3.<android.os.Bundle: long getLong(java.lang.String)>($r7);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>($r7, $l8);

        goto label3;

     label4:
        $l8 = $r0.<android.app.Instrumentation: long mStart>;

        $l7 = $l7 - $l8;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("execution_time", $l7);

        $l7 = $r0.<android.app.Instrumentation: long mPreCpuTime>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("pre_cpu_time", $l7);

        $l7 = $r0.<android.app.Instrumentation: long mPreCpuTime>;

        $l6 = $l6 - $l7;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("cpu_time", $l6);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("native_size", $l5);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("native_allocated", $l3);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("native_free", $l4);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int nativePss>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("native_pss", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("native_private_dirty", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("native_shared_dirty", $i9);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("java_size", $l2);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("java_allocated", $l0);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>("java_free", $l1);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("java_pss", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("java_private_dirty", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("java_shared_dirty", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int otherPss>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("other_pss", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("other_private_dirty", $i9);

        $i9 = $r1.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricInt(java.lang.String,int)>("other_shared_dirty", $i9);

        return;

     label5:
        return;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int)
    {
        android.app.Instrumentation $r0;
        android.content.Context $r1;
        android.os.IBinder $r2, $r3;
        android.app.Activity $r4;
        android.content.Intent $r5;
        int $i0, $i1, $i2;
        android.app.IApplicationThread $r6;
        java.util.List $r7;
        java.lang.Object $r8, $r9;
        android.app.Instrumentation$ActivityMonitor $r10;
        boolean $z0;
        android.app.Instrumentation$ActivityResult $r11;
        android.app.IActivityManager $r12;
        android.content.ContentResolver $r13;
        java.lang.String $r14, $r15;
        java.lang.Throwable $r16;
        android.os.RemoteException $r17;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: android.os.IBinder;

        $r4 := @parameter3: android.app.Activity;

        $r5 := @parameter4: android.content.Intent;

        $i0 := @parameter5: int;

        $r6 = (android.app.IApplicationThread) $r2;

        $r7 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r7 == null goto label08;

        $r8 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r8;

     label01:
        $r7 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i2 = 0;

     label02:
        if $i2 >= $i1 goto label07;

        $r7 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        $r10 = (android.app.Instrumentation$ActivityMonitor) $r9;

        $z0 = virtualinvoke $r10.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>($r1, null, $r5);

        if $z0 == 0 goto label06;

        $i1 = $r10.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i1 = $i1 + 1;

        $r10.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i1;

        $z0 = virtualinvoke $r10.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z0 == 0 goto label07;

        if $i0 < 0 goto label05;

        $r11 = virtualinvoke $r10.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label03:
        exitmonitor $r8;

     label04:
        return $r11;

     label05:
        $r11 = null;

        goto label03;

     label06:
        $i2 = $i2 + 1;

        goto label02;

     label07:
        exitmonitor $r8;

     label08:
        $r12 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r13 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r14 = virtualinvoke $r5.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r13);

     label09:
        if $r4 == null goto label15;

        $r15 = $r4.<android.app.Activity: java.lang.String mEmbeddedID>;

     label10:
        $i0 = interfaceinvoke $r12.<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)>($r6, $r5, $r14, null, 0, $r3, $r15, $i0, 0, 0);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,android.content.Intent)>($i0, $r5);

     label11:
        return null;

     label12:
        $r16 := @caughtexception;

     label13:
        exitmonitor $r8;

     label14:
        throw $r16;

     label15:
        $r15 = null;

        goto label10;

     label16:
        $r17 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label04 with label12;
        catch java.lang.Throwable from label05 to label08 with label12;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch android.os.RemoteException from label10 to label11 with label16;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void finish(int, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        int $i0;
        android.os.Bundle $r1, $r2;
        boolean $z0;
        android.app.ActivityThread $r3;

        $r0 := @this: android.app.Instrumentation;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $z0 = $r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.app.Instrumentation: void endPerformanceSnapshot()>();

     label1:
        $r2 = $r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        virtualinvoke $r1.<android.os.Bundle: void putAll(android.os.Bundle)>($r2);

     label2:
        $r3 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        virtualinvoke $r3.<android.app.ActivityThread: void finishInstrumentation(int,android.os.Bundle)>($i0, $r1);

        return;
    }

    public android.os.Bundle getAllocCounts()
    {
        android.app.Instrumentation $r0;
        android.os.Bundle $r1;
        int $i0;
        long $l1;

        $r0 := @this: android.app.Instrumentation;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $i0 = staticinvoke <android.os.Debug: int getGlobalAllocCount()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_alloc_count", $l1);

        $i0 = staticinvoke <android.os.Debug: int getGlobalAllocSize()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_alloc_size", $l1);

        $i0 = staticinvoke <android.os.Debug: int getGlobalFreedCount()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_freed_count", $l1);

        $i0 = staticinvoke <android.os.Debug: int getGlobalFreedSize()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_freed_size", $l1);

        $i0 = staticinvoke <android.os.Debug: int getGlobalGcInvocationCount()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("gc_invocation_count", $l1);

        return $r1;
    }

    public android.os.Bundle getBinderCounts()
    {
        android.app.Instrumentation $r0;
        android.os.Bundle $r1;
        int $i0;
        long $l1;

        $r0 := @this: android.app.Instrumentation;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $i0 = staticinvoke <android.os.Debug: int getBinderSentTransactions()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("sent_transactions", $l1);

        $i0 = staticinvoke <android.os.Debug: int getBinderReceivedTransactions()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("received_transactions", $l1);

        return $r1;
    }

    public android.content.ComponentName getComponentName()
    {
        android.app.Instrumentation $r0;
        android.content.ComponentName r1;

        $r0 := @this: android.app.Instrumentation;

        r1 = $r0.<android.app.Instrumentation: android.content.ComponentName mComponent>;

        return r1;
    }

    public android.content.Context getContext()
    {
        android.app.Instrumentation $r0;
        android.content.Context r1;

        $r0 := @this: android.app.Instrumentation;

        r1 = $r0.<android.app.Instrumentation: android.content.Context mInstrContext>;

        return r1;
    }

    public android.content.Context getTargetContext()
    {
        android.app.Instrumentation $r0;
        android.content.Context r1;

        $r0 := @this: android.app.Instrumentation;

        r1 = $r0.<android.app.Instrumentation: android.content.Context mAppContext>;

        return r1;
    }

    final void init(android.app.ActivityThread, android.content.Context, android.content.Context, android.content.ComponentName, android.app.IInstrumentationWatcher)
    {
        android.app.Instrumentation $r0;
        android.app.ActivityThread $r1;
        android.content.Context $r2, $r3;
        android.content.ComponentName $r4;
        android.app.IInstrumentationWatcher $r5;
        android.os.MessageQueue $r6;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.ActivityThread;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: android.content.ComponentName;

        $r5 := @parameter4: android.app.IInstrumentationWatcher;

        $r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = $r1;

        $r1 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        virtualinvoke $r1.<android.app.ActivityThread: android.os.Looper getLooper()>();

        $r6 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue> = $r6;

        $r0.<android.app.Instrumentation: android.content.Context mInstrContext> = $r2;

        $r0.<android.app.Instrumentation: android.content.Context mAppContext> = $r3;

        $r0.<android.app.Instrumentation: android.content.ComponentName mComponent> = $r4;

        $r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher> = $r5;

        return;
    }

    public boolean invokeContextMenuAction(android.app.Activity, int, int)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        int $i0, $i1, $i2;
        android.app.Instrumentation$1ContextMenuRunnable $r2;
        android.view.KeyEvent $r3;
        long $l3;
        java.lang.InterruptedException $r4;
        boolean z0;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(int,int)>(0, 23);

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r3);

        virtualinvoke $r0.<android.app.Instrumentation: void waitForIdleSync()>();

     label1:
        $i2 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l3 = (long) $i2;

        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(int,int)>(1, 23);

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r3);

        virtualinvoke $r0.<android.app.Instrumentation: void waitForIdleSync()>();

        $r2 = new android.app.Instrumentation$1ContextMenuRunnable;

        specialinvoke $r2.<android.app.Instrumentation$1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>($r0, $r1, $i0, $i1);

        virtualinvoke $r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r2);

        z0 = $r2.<android.app.Instrumentation$1ContextMenuRunnable: boolean returnValue>;

        return z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Instrumentation", "Could not sleep for long press timeout", $r4);

        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public boolean invokeMenuActionSync(android.app.Activity, int, int)
    {
        android.app.Instrumentation $r0;
        android.app.Activity $r1;
        int $i0, $i1;
        android.app.Instrumentation$1MenuRunnable $r2;
        boolean z0;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new android.app.Instrumentation$1MenuRunnable;

        specialinvoke $r2.<android.app.Instrumentation$1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>($r0, $r1, $i0, $i1);

        virtualinvoke $r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r2);

        z0 = $r2.<android.app.Instrumentation$1MenuRunnable: boolean returnValue>;

        return z0;
    }

    public boolean isProfiling()
    {
        android.app.Instrumentation $r0;
        boolean $z0;
        android.app.ActivityThread $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r1.<android.app.ActivityThread: boolean isProfiling()>();

        return $z0;
    }

    public android.app.Activity newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        android.app.Instrumentation $r0;
        java.lang.Class $r1;
        android.content.Context $r2;
        android.os.IBinder $r3;
        android.app.Application $r4;
        android.content.Intent $r5;
        android.content.pm.ActivityInfo $r6;
        java.lang.CharSequence $r7;
        android.app.Activity $r8, $r13;
        java.lang.String $r9;
        java.lang.Object $r10, $r12;
        android.content.res.Configuration $r11;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.os.IBinder;

        $r4 := @parameter3: android.app.Application;

        $r5 := @parameter4: android.content.Intent;

        $r6 := @parameter5: android.content.pm.ActivityInfo;

        $r7 := @parameter6: java.lang.CharSequence;

        $r8 := @parameter7: android.app.Activity;

        $r9 := @parameter8: java.lang.String;

        $r10 := @parameter9: java.lang.Object;

        $r12 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r13 = (android.app.Activity) $r12;

        $r11 = new android.content.res.Configuration;

        specialinvoke $r11.<android.content.res.Configuration: void <init>()>();

        virtualinvoke $r13.<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object,android.content.res.Configuration)>($r2, null, $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11);

        return $r13;
    }

    public android.app.Activity newActivity(java.lang.ClassLoader, java.lang.String, android.content.Intent) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        java.lang.ClassLoader $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.app.Instrumentation $r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        android.app.Activity $r6;

        $r3 := @this: android.app.Instrumentation;

        $r0 := @parameter0: java.lang.ClassLoader;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Intent;

        $r4 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = (android.app.Activity) $r5;

        return $r6;
    }

    public android.app.Application newApplication(java.lang.ClassLoader, java.lang.String, android.content.Context) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        android.app.Instrumentation $r0;
        java.lang.ClassLoader $r1;
        java.lang.String $r2;
        android.content.Context $r3;
        java.lang.Class $r4;
        android.app.Application $r5;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.ClassLoader;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r4 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r2);

        $r5 = staticinvoke <android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>($r4, $r3);

        return $r5;
    }

    public void onCreate(android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onDestroy()
    {
        android.app.Instrumentation $r0;

        $r0 := @this: android.app.Instrumentation;

        return;
    }

    public boolean onException(java.lang.Object, java.lang.Throwable)
    {
        android.app.Instrumentation $r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Throwable;

        return 0;
    }

    public void onStart()
    {
        android.app.Instrumentation $r0;

        $r0 := @this: android.app.Instrumentation;

        return;
    }

    public void removeMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$ActivityMonitor $r1;
        java.lang.Object $r2;
        java.util.List $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        $r2 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void runOnMainSync(java.lang.Runnable)
    {
        android.app.Instrumentation $r0;
        java.lang.Runnable $r1;
        android.app.Instrumentation$SyncRunnable $r2;
        android.os.Handler $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.Runnable;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r2 = new android.app.Instrumentation$SyncRunnable;

        specialinvoke $r2.<android.app.Instrumentation$SyncRunnable: void <init>(java.lang.Runnable)>($r1);

        $r4 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r3 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Handler getHandler()>();

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        virtualinvoke $r2.<android.app.Instrumentation$SyncRunnable: void waitForComplete()>();

        return;
    }

    public void sendCharacterSync(int)
    {
        android.app.Instrumentation $r0;
        int $i0;
        android.view.KeyEvent $r1;

        $r0 := @this: android.app.Instrumentation;

        $i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, $i0);

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(1, $i0);

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        return;
    }

    public void sendKeyDownUpSync(int)
    {
        android.app.Instrumentation $r0;
        int $i0;
        android.view.KeyEvent $r1;

        $r0 := @this: android.app.Instrumentation;

        $i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, $i0);

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(1, $i0);

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        return;
    }

    public void sendKeySync(android.view.KeyEvent)
    {
        android.app.Instrumentation $r0;
        android.view.KeyEvent $r1;
        android.os.IBinder $r2;
        android.view.IWindowManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.view.KeyEvent;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.view.IWindowManager: boolean injectKeyEvent(android.view.KeyEvent,boolean)>($r1, 1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendPointerSync(android.view.MotionEvent)
    {
        android.app.Instrumentation $r0;
        android.view.MotionEvent $r1;
        android.os.IBinder $r2;
        android.view.IWindowManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.view.IWindowManager: boolean injectPointerEvent(android.view.MotionEvent,boolean)>($r1, 1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStatus(int, android.os.Bundle)
    {
        android.app.Instrumentation $r0;
        int $i0;
        android.os.Bundle $r1;
        android.content.ComponentName $r2;
        android.app.IInstrumentationWatcher $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.Instrumentation;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r3 = $r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher>;

        if $r3 == null goto label4;

        $r3 = $r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher>;

        $r2 = $r0.<android.app.Instrumentation: android.content.ComponentName mComponent>;

     label1:
        interfaceinvoke $r3.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>($r2, $i0, $r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher> = null;

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStringSync(java.lang.String)
    {
        android.app.Instrumentation $r0;
        java.lang.String $r1;
        android.view.KeyCharacterMap $r2;
        char[] $r3;
        android.view.KeyEvent[] $r4;
        int $i0, $i1;
        android.view.KeyEvent $r5;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(0);

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r4 = virtualinvoke $r2.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r3);

        if $r4 == null goto label3;

        $i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label4;

        $r5 = $r4[$i0];

        virtualinvoke $r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r5);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }

    public void sendTrackballEventSync(android.view.MotionEvent)
    {
        android.app.Instrumentation $r0;
        android.view.MotionEvent $r1;
        android.os.IBinder $r2;
        android.view.IWindowManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.view.IWindowManager: boolean injectTrackballEvent(android.view.MotionEvent,boolean)>($r1, 1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAutomaticPerformanceSnapshots()
    {
        android.app.Instrumentation $r0;

        $r0 := @this: android.app.Instrumentation;

        $r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots> = 1;

        return;
    }

    public void setInTouchMode(boolean)
    {
        android.app.Instrumentation $r0;
        boolean $z0;
        android.os.IBinder $r1;
        android.view.IWindowManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.Instrumentation;

        $z0 := @parameter0: boolean;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r2 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r1);

        interfaceinvoke $r2.<android.view.IWindowManager: void setInTouchMode(boolean)>($z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void start()
    {
        android.app.Instrumentation $r0;
        java.lang.Thread $r1;
        java.lang.RuntimeException $r2;
        android.app.Instrumentation$InstrumentationThread $r3;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.String $r6;

        $r0 := @this: android.app.Instrumentation;

        $r1 = $r0.<android.app.Instrumentation: java.lang.Thread mRunner>;

        if $r1 == null goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Instrumentation already started");

        throw $r2;

     label1:
        $r3 = new android.app.Instrumentation$InstrumentationThread;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instr: ");

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.app.Instrumentation$InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>($r0, $r6);

        $r0.<android.app.Instrumentation: java.lang.Thread mRunner> = $r3;

        $r1 = $r0.<android.app.Instrumentation: java.lang.Thread mRunner>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        return;
    }

    public android.app.Activity startActivitySync(android.content.Intent)
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$ActivityWaiter $r1;
        android.content.Intent $r2, $r4;
        java.lang.Object $r3, $r17;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.ActivityInfo $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, $r13;
        java.lang.Throwable $r11;
        android.content.pm.ApplicationInfo $r12;
        boolean $z0;
        android.content.ComponentName $r14;
        java.util.List $r15;
        java.util.ArrayList $r16;
        java.lang.InterruptedException $r18;
        android.app.Activity r19;

        $r0 := @this: android.app.Instrumentation;

        $r4 := @parameter0: android.content.Intent;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r3 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r3;

     label01:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Intent)>($r4);

     label02:
        $r5 = virtualinvoke $r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r2.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r6, 0);

        if $r7 != null goto label06;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve activity for: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label03:
        $r11 := @caughtexception;

     label04:
        exitmonitor $r3;

     label05:
        throw $r11;

     label06:
        $r12 = $r7.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r12.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r5 = virtualinvoke $r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r13 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label07;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent resolved to different package ");

        $r12 = $r7.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label07:
        $r14 = new android.content.ComponentName;

        $r12 = $r7.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r13 = $r7.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r13);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r14);

        $r1 = new android.app.Instrumentation$ActivityWaiter;

        specialinvoke $r1.<android.app.Instrumentation$ActivityWaiter: void <init>(android.content.Intent)>($r2);

        $r15 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r15 != null goto label08;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $r0.<android.app.Instrumentation: java.util.List mWaitingActivities> = $r16;

     label08:
        $r15 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        virtualinvoke $r5.<android.content.Context: void startActivity(android.content.Intent)>($r2);

     label09:
        $r17 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

     label10:
        virtualinvoke $r17.<java.lang.Object: void wait()>();

     label11:
        $r15 = $r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $z0 = interfaceinvoke $r15.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label09;

        r19 = $r1.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity>;

        exitmonitor $r3;

     label12:
        return r19;

     label13:
        $r11 := @caughtexception;

        goto label04;

     label14:
        $r18 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label09 with label03;
        catch java.lang.InterruptedException from label10 to label11 with label14;
        catch java.lang.Throwable from label09 to label11 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
    }

    public void startAllocCounting()
    {
        android.app.Instrumentation $r0;
        java.lang.Runtime $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void runFinalization()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        staticinvoke <android.os.Debug: void resetAllCounts()>();

        staticinvoke <android.os.Debug: void startAllocCounting()>();

        return;
    }

    public void startPerformanceSnapshot()
    {
        android.app.Instrumentation $r0;
        boolean $z0;
        android.os.Bundle $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;
        long $l0;

        $r0 := @this: android.app.Instrumentation;

        $r0.<android.app.Instrumentation: long mStart> = 0L;

        $z0 = virtualinvoke $r0.<android.app.Instrumentation: boolean isProfiling()>();

        if $z0 != 0 goto label3;

        $r1 = virtualinvoke $r0.<android.app.Instrumentation: android.os.Bundle getBinderCounts()>();

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pre_");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>($r5);

        specialinvoke $r0.<android.app.Instrumentation: void addPerfMetricLong(java.lang.String,long)>($r7, $l0);

        goto label1;

     label2:
        virtualinvoke $r0.<android.app.Instrumentation: void startAllocCounting()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<android.app.Instrumentation: long mStart> = $l0;

        $l0 = staticinvoke <android.os.Process: long getElapsedCpuTime()>();

        $r0.<android.app.Instrumentation: long mPreCpuTime> = $l0;

        return;

     label3:
        return;
    }

    public void startProfiling()
    {
        android.app.Instrumentation $r0;
        java.io.File $r1, $r4;
        android.app.ActivityThread $r2;
        boolean $z0;
        java.lang.String $r3;

        $r0 := @this: android.app.Instrumentation;

        $r2 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r2.<android.app.ActivityThread: boolean isProfiling()>();

        if $z0 == 0 goto label1;

        $r1 = new java.io.File;

        $r2 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r3 = virtualinvoke $r2.<android.app.ActivityThread: java.lang.String getProfileFilePath()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r1.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int)>($r3, 8388608);

        return;

     label1:
        return;
    }

    public void stopAllocCounting()
    {
        android.app.Instrumentation $r0;
        java.lang.Runtime $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void runFinalization()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        return;
    }

    public void stopProfiling()
    {
        android.app.Instrumentation $r0;
        boolean $z0;
        android.app.ActivityThread $r1;

        $r0 := @this: android.app.Instrumentation;

        $r1 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r1.<android.app.ActivityThread: boolean isProfiling()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

        return;

     label1:
        return;
    }

    public void waitForIdle(java.lang.Runnable)
    {
        android.app.Instrumentation $r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;
        android.os.MessageQueue $r3;
        android.app.Instrumentation$Idler $r4;
        android.app.ActivityThread $r5;
        android.app.Instrumentation$EmptyRunnable $r6;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: java.lang.Runnable;

        $r3 = $r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        $r4 = new android.app.Instrumentation$Idler;

        specialinvoke $r4.<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>($r1);

        virtualinvoke $r3.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r4);

        $r5 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r2 = virtualinvoke $r5.<android.app.ActivityThread: android.os.Handler getHandler()>();

        $r6 = new android.app.Instrumentation$EmptyRunnable;

        specialinvoke $r6.<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>(null);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    public void waitForIdleSync()
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$Idler $r1;
        android.app.Instrumentation$EmptyRunnable $r2;
        android.os.Handler $r3;
        android.os.MessageQueue $r4;
        android.app.ActivityThread $r5;

        $r0 := @this: android.app.Instrumentation;

        specialinvoke $r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r1 = new android.app.Instrumentation$Idler;

        specialinvoke $r1.<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>(null);

        $r4 = $r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        virtualinvoke $r4.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r1);

        $r5 = $r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r3 = virtualinvoke $r5.<android.app.ActivityThread: android.os.Handler getHandler()>();

        $r2 = new android.app.Instrumentation$EmptyRunnable;

        specialinvoke $r2.<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>(null);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        virtualinvoke $r1.<android.app.Instrumentation$Idler: void waitForIdle()>();

        return;
    }

    public android.app.Activity waitForMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$ActivityMonitor $r1;
        java.lang.Object $r2;
        android.app.Activity $r3;
        java.util.List $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        $r3 = virtualinvoke $r1.<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivity()>();

        $r2 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation$ActivityMonitor, long)
    {
        android.app.Instrumentation $r0;
        android.app.Instrumentation$ActivityMonitor $r1;
        long $l0;
        java.lang.Object $r2;
        android.app.Activity $r3;
        java.util.List $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.app.Instrumentation;

        $r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        $l0 := @parameter1: long;

        $r3 = virtualinvoke $r1.<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>($l0);

        $r2 = $r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <android.app.Instrumentation: java.lang.String TAG> = "Instrumentation";

        <android.app.Instrumentation: java.lang.String REPORT_KEY_STREAMRESULT> = "stream";

        <android.app.Instrumentation: java.lang.String REPORT_KEY_IDENTIFIER> = "id";

        return;
    }
}
