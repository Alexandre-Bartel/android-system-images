public class android.media.MediaScanner extends java.lang.Object
{
    private static final java.lang.String ALARMS_DIR;
    private static final java.lang.String[] AUDIO_PROJECTION;
    private static final int DATE_MODIFIED_AUDIO_COLUMN_INDEX;
    private static final int DATE_MODIFIED_IMAGES_COLUMN_INDEX;
    private static final int DATE_MODIFIED_PLAYLISTS_COLUMN_INDEX;
    private static final int DATE_MODIFIED_VIDEO_COLUMN_INDEX;
    private static final java.lang.String DEFAULT_RINGTONE_PROPERTY_PREFIX;
    private static final java.lang.String[] GENRE_LOOKUP_PROJECTION;
    private static final java.lang.String[] ID3_GENRES;
    private static final int ID_AUDIO_COLUMN_INDEX;
    private static final int ID_IMAGES_COLUMN_INDEX;
    private static final int ID_PLAYLISTS_COLUMN_INDEX;
    private static final int ID_VIDEO_COLUMN_INDEX;
    private static final java.lang.String[] IMAGES_PROJECTION;
    private static final java.lang.String MUSIC_DIR;
    private static final java.lang.String NOTIFICATIONS_DIR;
    private static final int PATH_AUDIO_COLUMN_INDEX;
    private static final int PATH_IMAGES_COLUMN_INDEX;
    private static final int PATH_PLAYLISTS_COLUMN_INDEX;
    private static final int PATH_VIDEO_COLUMN_INDEX;
    private static final java.lang.String[] PLAYLISTS_PROJECTION;
    private static final java.lang.String[] PLAYLIST_MEMBERS_PROJECTION;
    private static final java.lang.String PODCAST_DIR;
    private static final java.lang.String RINGTONES_DIR;
    private static final java.lang.String TAG;
    private static final java.lang.String[] VIDEO_PROJECTION;
    private android.net.Uri mAudioUri;
    private android.graphics.BitmapFactory$Options mBitmapOptions;
    private boolean mCaseInsensitivePaths;
    private android.media.MediaScanner$MyMediaScannerClient mClient;
    private android.content.Context mContext;
    private java.lang.String mDefaultNotificationFilename;
    private boolean mDefaultNotificationSet;
    private java.lang.String mDefaultRingtoneFilename;
    private boolean mDefaultRingtoneSet;
    private java.util.HashMap mFileCache;
    private java.util.HashMap mGenreCache;
    private android.net.Uri mGenresUri;
    private android.net.Uri mImagesUri;
    private android.content.IContentProvider mMediaProvider;
    private int mNativeContext;
    private int mOriginalCount;
    private java.util.ArrayList mPlayLists;
    private android.net.Uri mPlaylistsUri;
    private boolean mProcessGenres;
    private boolean mProcessPlaylists;
    private android.net.Uri mThumbsUri;
    private android.net.Uri mVideoUri;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.media.MediaScanner: java.lang.String TAG> = "MediaScanner";

        <android.media.MediaScanner: java.lang.String RINGTONES_DIR> = "/ringtones/";

        <android.media.MediaScanner: java.lang.String PODCAST_DIR> = "/podcasts/";

        <android.media.MediaScanner: int PATH_VIDEO_COLUMN_INDEX> = 1;

        <android.media.MediaScanner: int PATH_PLAYLISTS_COLUMN_INDEX> = 1;

        <android.media.MediaScanner: int PATH_IMAGES_COLUMN_INDEX> = 1;

        <android.media.MediaScanner: int PATH_AUDIO_COLUMN_INDEX> = 1;

        <android.media.MediaScanner: java.lang.String NOTIFICATIONS_DIR> = "/notifications/";

        <android.media.MediaScanner: java.lang.String MUSIC_DIR> = "/music/";

        <android.media.MediaScanner: int ID_VIDEO_COLUMN_INDEX> = 0;

        <android.media.MediaScanner: int ID_PLAYLISTS_COLUMN_INDEX> = 0;

        <android.media.MediaScanner: int ID_IMAGES_COLUMN_INDEX> = 0;

        <android.media.MediaScanner: int ID_AUDIO_COLUMN_INDEX> = 0;

        <android.media.MediaScanner: java.lang.String DEFAULT_RINGTONE_PROPERTY_PREFIX> = "ro.config.";

        <android.media.MediaScanner: int DATE_MODIFIED_VIDEO_COLUMN_INDEX> = 2;

        <android.media.MediaScanner: int DATE_MODIFIED_PLAYLISTS_COLUMN_INDEX> = 2;

        <android.media.MediaScanner: int DATE_MODIFIED_IMAGES_COLUMN_INDEX> = 2;

        <android.media.MediaScanner: int DATE_MODIFIED_AUDIO_COLUMN_INDEX> = 2;

        <android.media.MediaScanner: java.lang.String ALARMS_DIR> = "/alarms/";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "date_modified";

        <android.media.MediaScanner: java.lang.String[] AUDIO_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "date_modified";

        <android.media.MediaScanner: java.lang.String[] VIDEO_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "date_modified";

        <android.media.MediaScanner: java.lang.String[] IMAGES_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "date_modified";

        <android.media.MediaScanner: java.lang.String[] PLAYLISTS_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "playlist_id";

        <android.media.MediaScanner: java.lang.String[] PLAYLIST_MEMBERS_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "_id";

        $r0[1] = "name";

        <android.media.MediaScanner: java.lang.String[] GENRE_LOOKUP_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[126];

        $r0[0] = "Blues";

        $r0[1] = "Classic Rock";

        $r0[2] = "Country";

        $r0[3] = "Dance";

        $r0[4] = "Disco";

        $r0[5] = "Funk";

        $r0[6] = "Grunge";

        $r0[7] = "Hip-Hop";

        $r0[8] = "Jazz";

        $r0[9] = "Metal";

        $r0[10] = "New Age";

        $r0[11] = "Oldies";

        $r0[12] = "Other";

        $r0[13] = "Pop";

        $r0[14] = "R&B";

        $r0[15] = "Rap";

        $r0[16] = "Reggae";

        $r0[17] = "Rock";

        $r0[18] = "Techno";

        $r0[19] = "Industrial";

        $r0[20] = "Alternative";

        $r0[21] = "Ska";

        $r0[22] = "Death Metal";

        $r0[23] = "Pranks";

        $r0[24] = "Soundtrack";

        $r0[25] = "Euro-Techno";

        $r0[26] = "Ambient";

        $r0[27] = "Trip-Hop";

        $r0[28] = "Vocal";

        $r0[29] = "Jazz+Funk";

        $r0[30] = "Fusion";

        $r0[31] = "Trance";

        $r0[32] = "Classical";

        $r0[33] = "Instrumental";

        $r0[34] = "Acid";

        $r0[35] = "House";

        $r0[36] = "Game";

        $r0[37] = "Sound Clip";

        $r0[38] = "Gospel";

        $r0[39] = "Noise";

        $r0[40] = "AlternRock";

        $r0[41] = "Bass";

        $r0[42] = "Soul";

        $r0[43] = "Punk";

        $r0[44] = "Space";

        $r0[45] = "Meditative";

        $r0[46] = "Instrumental Pop";

        $r0[47] = "Instrumental Rock";

        $r0[48] = "Ethnic";

        $r0[49] = "Gothic";

        $r0[50] = "Darkwave";

        $r0[51] = "Techno-Industrial";

        $r0[52] = "Electronic";

        $r0[53] = "Pop-Folk";

        $r0[54] = "Eurodance";

        $r0[55] = "Dream";

        $r0[56] = "Southern Rock";

        $r0[57] = "Comedy";

        $r0[58] = "Cult";

        $r0[59] = "Gangsta";

        $r0[60] = "Top 40";

        $r0[61] = "Christian Rap";

        $r0[62] = "Pop/Funk";

        $r0[63] = "Jungle";

        $r0[64] = "Native American";

        $r0[65] = "Cabaret";

        $r0[66] = "New Wave";

        $r0[67] = "Psychadelic";

        $r0[68] = "Rave";

        $r0[69] = "Showtunes";

        $r0[70] = "Trailer";

        $r0[71] = "Lo-Fi";

        $r0[72] = "Tribal";

        $r0[73] = "Acid Punk";

        $r0[74] = "Acid Jazz";

        $r0[75] = "Polka";

        $r0[76] = "Retro";

        $r0[77] = "Musical";

        $r0[78] = "Rock & Roll";

        $r0[79] = "Hard Rock";

        $r0[80] = "Folk";

        $r0[81] = "Folk-Rock";

        $r0[82] = "National Folk";

        $r0[83] = "Swing";

        $r0[84] = "Fast Fusion";

        $r0[85] = "Bebob";

        $r0[86] = "Latin";

        $r0[87] = "Revival";

        $r0[88] = "Celtic";

        $r0[89] = "Bluegrass";

        $r0[90] = "Avantgarde";

        $r0[91] = "Gothic Rock";

        $r0[92] = "Progressive Rock";

        $r0[93] = "Psychedelic Rock";

        $r0[94] = "Symphonic Rock";

        $r0[95] = "Slow Rock";

        $r0[96] = "Big Band";

        $r0[97] = "Chorus";

        $r0[98] = "Easy Listening";

        $r0[99] = "Acoustic";

        $r0[100] = "Humour";

        $r0[101] = "Speech";

        $r0[102] = "Chanson";

        $r0[103] = "Opera";

        $r0[104] = "Chamber Music";

        $r0[105] = "Sonata";

        $r0[106] = "Symphony";

        $r0[107] = "Booty Bass";

        $r0[108] = "Primus";

        $r0[109] = "Porn Groove";

        $r0[110] = "Satire";

        $r0[111] = "Slow Jam";

        $r0[112] = "Club";

        $r0[113] = "Tango";

        $r0[114] = "Samba";

        $r0[115] = "Folklore";

        $r0[116] = "Ballad";

        $r0[117] = "Power Ballad";

        $r0[118] = "Rhythmic Soul";

        $r0[119] = "Freestyle";

        $r0[120] = "Duet";

        $r0[121] = "Punk Rock";

        $r0[122] = "Drum Solo";

        $r0[123] = "A capella";

        $r0[124] = "Euro-House";

        $r0[125] = "Dance Hall";

        <android.media.MediaScanner: java.lang.String[] ID3_GENRES> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.media.MediaScanner $r0;
        android.content.Context $r1;
        android.graphics.BitmapFactory$Options $r2;
        android.media.MediaScanner$MyMediaScannerClient $r3;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions> = $r2;

        $r3 = new android.media.MediaScanner$MyMediaScannerClient;

        specialinvoke $r3.<android.media.MediaScanner$MyMediaScannerClient: void <init>(android.media.MediaScanner,android.media.MediaScanner$1)>($r0, null);

        $r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient> = $r3;

        specialinvoke $r0.<android.media.MediaScanner: void native_setup()>();

        $r0.<android.media.MediaScanner: android.content.Context mContext> = $r1;

        $r2 = $r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions>;

        $r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

        $r2 = $r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        specialinvoke $r0.<android.media.MediaScanner: void setDefaultRingtoneFileNames()>();

        return;
    }

    static boolean access$100(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        boolean z0;

        $r0 := @parameter0: android.media.MediaScanner;

        z0 = $r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths>;

        return z0;
    }

    static android.content.IContentProvider access$1000(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        android.content.IContentProvider r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        return r1;
    }

    static boolean access$1100(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        boolean z0;

        $r0 := @parameter0: android.media.MediaScanner;

        z0 = $r0.<android.media.MediaScanner: boolean mProcessGenres>;

        return z0;
    }

    static java.util.HashMap access$1200(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        java.util.HashMap r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: java.util.HashMap mGenreCache>;

        return r1;
    }

    static android.net.Uri access$1300(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        android.net.Uri r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: android.net.Uri mGenresUri>;

        return r1;
    }

    static java.lang.String[] access$1400()
    {
        java.lang.String[] r0;

        r0 = <android.media.MediaScanner: java.lang.String[] GENRE_LOOKUP_PROJECTION>;

        return r0;
    }

    static boolean access$1500(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        boolean z0;

        $r0 := @parameter0: android.media.MediaScanner;

        z0 = $r0.<android.media.MediaScanner: boolean mDefaultNotificationSet>;

        return z0;
    }

    static boolean access$1502(android.media.MediaScanner, boolean)
    {
        android.media.MediaScanner $r0;
        boolean $z0;

        $r0 := @parameter0: android.media.MediaScanner;

        $z0 := @parameter1: boolean;

        $r0.<android.media.MediaScanner: boolean mDefaultNotificationSet> = $z0;

        return $z0;
    }

    static java.lang.String access$1600(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: java.lang.String mDefaultNotificationFilename>;

        return r1;
    }

    static boolean access$1700(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        boolean z0;

        $r0 := @parameter0: android.media.MediaScanner;

        z0 = $r0.<android.media.MediaScanner: boolean mDefaultRingtoneSet>;

        return z0;
    }

    static boolean access$1702(android.media.MediaScanner, boolean)
    {
        android.media.MediaScanner $r0;
        boolean $z0;

        $r0 := @parameter0: android.media.MediaScanner;

        $z0 := @parameter1: boolean;

        $r0.<android.media.MediaScanner: boolean mDefaultRingtoneSet> = $z0;

        return $z0;
    }

    static java.lang.String access$1800(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: java.lang.String mDefaultRingtoneFilename>;

        return r1;
    }

    static android.content.Context access$1900(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        android.content.Context r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: android.content.Context mContext>;

        return r1;
    }

    static java.util.HashMap access$200(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        java.util.HashMap r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        return r1;
    }

    static boolean access$2000(android.media.MediaScanner, java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, int)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2;
        android.net.Uri $r3;
        android.content.ContentValues $r4;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.media.MediaScanner;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.net.Uri;

        $r4 := @parameter4: android.content.ContentValues;

        $i0 := @parameter5: int;

        $z0 = specialinvoke $r0.<android.media.MediaScanner: boolean addPlayListEntry(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,int)>($r1, $r2, $r3, $r4, $i0);

        return $z0;
    }

    static boolean access$300(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        boolean z0;

        $r0 := @parameter0: android.media.MediaScanner;

        z0 = $r0.<android.media.MediaScanner: boolean mProcessPlaylists>;

        return z0;
    }

    static java.util.ArrayList access$400(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        return r1;
    }

    static void access$500(android.media.MediaScanner, java.lang.String, java.lang.String, android.media.MediaScannerClient)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2;
        android.media.MediaScannerClient $r3;

        $r0 := @parameter0: android.media.MediaScanner;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.media.MediaScannerClient;

        specialinvoke $r0.<android.media.MediaScanner: void processFile(java.lang.String,java.lang.String,android.media.MediaScannerClient)>($r1, $r2, $r3);

        return;
    }

    static java.lang.String[] access$600()
    {
        java.lang.String[] r0;

        r0 = <android.media.MediaScanner: java.lang.String[] ID3_GENRES>;

        return r0;
    }

    static android.net.Uri access$700(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        android.net.Uri r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: android.net.Uri mVideoUri>;

        return r1;
    }

    static android.net.Uri access$800(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        android.net.Uri r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        return r1;
    }

    static android.net.Uri access$900(android.media.MediaScanner)
    {
        android.media.MediaScanner $r0;
        android.net.Uri r1;

        $r0 := @parameter0: android.media.MediaScanner;

        r1 = $r0.<android.media.MediaScanner: android.net.Uri mAudioUri>;

        return r1;
    }

    private boolean addPlayListEntry(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, int)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r4;
        android.net.Uri $r2;
        android.content.ContentValues $r3;
        int $i0, $i1, $i2;
        char $c3;
        boolean $z0;
        java.lang.StringBuilder $r5;
        android.media.MediaScanner$FileCacheEntry $r6, $r11;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        java.lang.Integer $r12;
        long $l4;
        java.lang.Long $r13;
        android.content.IContentProvider $r14;
        android.os.RemoteException $r15;

        $r0 := @this: android.media.MediaScanner;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.net.Uri;

        $r3 := @parameter3: android.content.ContentValues;

        $i0 := @parameter4: int;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

     label01:
        if $i1 <= 0 goto label02;

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z0 == 0 goto label02;

        $i1 = $i1 + -1;

        goto label01;

     label02:
        if $i1 >= 3 goto label03;

        return 0;

     label03:
        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label04;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label04:
        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        if $c3 == 47 goto label05;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);

        if $z0 == 0 goto label10;

        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(1);

        if $c3 != 58 goto label10;

        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(2);

        if $c3 != 92 goto label10;

     label05:
        $z0 = 1;

     label06:
        if $z0 != 0 goto label07;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r6 = null;

        $i1 = 0;

        $r7 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.media.MediaScanner$FileCacheEntry) $r10;

        $r1 = $r11.<android.media.MediaScanner$FileCacheEntry: java.lang.String mPath>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label11;

        $r6 = $r11;

     label09:
        if $r6 != null goto label12;

        return 0;

     label10:
        $z0 = 0;

        goto label06;

     label11:
        $i2 = specialinvoke $r0.<android.media.MediaScanner: int matchPaths(java.lang.String,java.lang.String)>($r1, $r4);

        if $i2 <= $i1 goto label08;

        $r6 = $r11;

        $i1 = $i2;

        goto label08;

     label12:
        virtualinvoke $r3.<android.content.ContentValues: void clear()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("play_order", $r12);

        $l4 = $r6.<android.media.MediaScanner$FileCacheEntry: long mRowId>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("audio_id", $r13);

        $r14 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        interfaceinvoke $r14.<android.content.IContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r2, $r3);

     label13:
        return 1;

     label14:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.addPlayListEntry()", $r15);

        return 0;

        catch android.os.RemoteException from label12 to label13 with label14;
    }

    private boolean inScanDirectory(java.lang.String, java.lang.String[])
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r3;
        java.lang.String[] $r2;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void initialize(java.lang.String)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.content.IContentProvider $r4;
        android.net.Uri $r5;
        boolean $z0;
        java.util.HashMap $r6;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.media.MediaScanner: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r3.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>("media");

        $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider> = $r4;

        $r5 = staticinvoke <android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>($r1);

        $r0.<android.media.MediaScanner: android.net.Uri mAudioUri> = $r5;

        $r5 = staticinvoke <android.provider.MediaStore$Video$Media: android.net.Uri getContentUri(java.lang.String)>($r1);

        $r0.<android.media.MediaScanner: android.net.Uri mVideoUri> = $r5;

        $r5 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>($r1);

        $r0.<android.media.MediaScanner: android.net.Uri mImagesUri> = $r5;

        $r5 = staticinvoke <android.provider.MediaStore$Images$Thumbnails: android.net.Uri getContentUri(java.lang.String)>($r1);

        $r0.<android.media.MediaScanner: android.net.Uri mThumbsUri> = $r5;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("internal");

        if $z0 != 0 goto label1;

        $r0.<android.media.MediaScanner: boolean mProcessPlaylists> = 1;

        $r0.<android.media.MediaScanner: boolean mProcessGenres> = 1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<android.media.MediaScanner: java.util.HashMap mGenreCache> = $r6;

        $r5 = staticinvoke <android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUri(java.lang.String)>($r1);

        $r0.<android.media.MediaScanner: android.net.Uri mGenresUri> = $r5;

        $r5 = staticinvoke <android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>($r1);

        $r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri> = $r5;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 == 0 goto label2;

        $r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths> = 1;

        return;

     label1:
        return;

     label2:
        return;
    }

    private int matchPaths(java.lang.String, java.lang.String)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i1 = 0;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

     label01:
        if $i0 <= 0 goto label11;

        if $i2 <= 0 goto label12;

        $i3 = $i0 - 1;

        $i3 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(47, $i3);

        $i4 = $i2 - 1;

        $i4 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int,int)>(47, $i4);

        $i5 = $i0 - 1;

        $i5 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(92, $i5);

        $i6 = $i2 - 1;

        $i6 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int,int)>(92, $i6);

        if $i3 <= $i5 goto label06;

     label02:
        if $i4 <= $i6 goto label07;

     label03:
        if $i3 >= 0 goto label08;

        $i3 = 0;

     label04:
        if $i4 >= 0 goto label09;

        $i4 = 0;

     label05:
        $i0 = $i0 - $i3;

        $i2 = $i2 - $i4;

        if $i2 == $i0 goto label10;

        return $i1;

     label06:
        $i3 = $i5;

        goto label02;

     label07:
        $i4 = $i6;

        goto label03;

     label08:
        $i3 = $i3 + 1;

        goto label04;

     label09:
        $i4 = $i4 + 1;

        goto label05;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i3, $r2, $i4, $i0);

        if $z0 == 0 goto label13;

        $i1 = $i1 + 1;

        $i0 = $i3 - 1;

        $i2 = $i4 - 1;

        goto label01;

     label11:
        return $i1;

     label12:
        return $i1;

     label13:
        return $i1;
    }

    private final native void native_finalize();

    private final native void native_setup();

    private void postscan(java.lang.String[]) throws android.os.RemoteException
    {
        android.media.MediaScanner $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        java.io.File $r3;
        android.content.ContentValues $r4;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        android.media.MediaScanner$FileCacheEntry $r9;
        android.media.MediaFile$MediaFileType $r10;
        int $i0;
        java.lang.Integer $r11;
        android.content.IContentProvider $r12;
        android.net.Uri $r13, $r14;
        long $l1;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String[];

        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.media.MediaScanner$FileCacheEntry) $r8;

        $r2 = $r9.<android.media.MediaScanner$FileCacheEntry: java.lang.String mPath>;

        $z0 = 0;

        $z1 = $r9.<android.media.MediaScanner$FileCacheEntry: boolean mSeenInFileSystem>;

        if $z1 != 0 goto label2;

        $z1 = specialinvoke $r0.<android.media.MediaScanner: boolean inScanDirectory(java.lang.String,java.lang.String[])>($r2, $r1);

        if $z1 == 0 goto label4;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label1;

        $r10 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>($r2);

        if $r10 != null goto label5;

        $i0 = 0;

     label3:
        $z0 = staticinvoke <android.media.MediaFile: boolean isPlayListFileType(int)>($i0);

        if $z0 == 0 goto label6;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_data", "");

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("date_modified", $r11);

        $r12 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r13 = $r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        $l1 = $r9.<android.media.MediaScanner$FileCacheEntry: long mRowId>;

        $r13 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r13, $l1);

        interfaceinvoke $r12.<android.content.IContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r13, $r4, null, null);

        goto label1;

     label4:
        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

        $z1 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $z0 = 1;

        goto label2;

     label5:
        $i0 = $r10.<android.media.MediaFile$MediaFileType: int fileType>;

        goto label3;

     label6:
        $r12 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r13 = $r9.<android.media.MediaScanner$FileCacheEntry: android.net.Uri mTableUri>;

        $l1 = $r9.<android.media.MediaScanner$FileCacheEntry: long mRowId>;

        $r13 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r13, $l1);

        interfaceinvoke $r12.<android.content.IContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r13, null, null);

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        goto label1;

     label7:
        $z0 = $r0.<android.media.MediaScanner: boolean mProcessPlaylists>;

        if $z0 == 0 goto label8;

        specialinvoke $r0.<android.media.MediaScanner: void processPlayLists()>();

     label8:
        $i0 = $r0.<android.media.MediaScanner: int mOriginalCount>;

        if $i0 != 0 goto label9;

        $r13 = $r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        $r14 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>("external");

        $z0 = virtualinvoke $r13.<android.net.Uri: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label9;

        specialinvoke $r0.<android.media.MediaScanner: void pruneDeadThumbnailFiles()>();

     label9:
        $r0.<android.media.MediaScanner: java.util.HashMap mGenreCache> = null;

        $r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists> = null;

        $r0.<android.media.MediaScanner: java.util.HashMap mFileCache> = null;

        $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider> = null;

        return;
    }

    private void prescan(java.lang.String) throws android.os.RemoteException
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r4, $r11;
        java.lang.String[] $r2, $r9;
        android.database.Cursor $r3, $r10;
        java.util.HashMap $r5;
        java.util.ArrayList $r6;
        android.content.IContentProvider $r7;
        android.net.Uri $r8;
        boolean $z0;
        long $l0, $l1;
        android.media.MediaScanner$FileCacheEntry $r12;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r17;
        int $i2;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

        $r4 = null;

        $r2 = null;

        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        if $r5 != null goto label13;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<android.media.MediaScanner: java.util.HashMap mFileCache> = $r5;

     label01:
        $r6 = $r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        if $r6 != null goto label14;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists> = $r6;

     label02:
        if $r1 == null goto label04;

     label03:
        $r4 = "_data=?";

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = $r1;

     label04:
        $r7 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mAudioUri>;

        $r9 = <android.media.MediaScanner: java.lang.String[] AUDIO_PROJECTION>;

        $r10 = interfaceinvoke $r7.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r9, $r4, $r2, null);

     label05:
        $r3 = $r10;

        if $r10 == null goto label17;

     label06:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label15;

        $l0 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(0);

        $r4 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>(1);

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(2);

        $r11 = $r4;

        $z0 = $r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths>;

        if $z0 == 0 goto label07;

        $r11 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

     label07:
        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        $r12 = new android.media.MediaScanner$FileCacheEntry;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mAudioUri>;

        specialinvoke $r12.<android.media.MediaScanner$FileCacheEntry: void <init>(android.net.Uri,long,java.lang.String,long)>($r8, $l0, $r4, $l1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label08:
        goto label06;

     label09:
        $r13 := @caughtexception;

     label10:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $r3 = null;

        throw $r13;

     label11:
        $r14 := @caughtexception;

        if $r3 == null goto label12;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label12:
        throw $r14;

     label13:
        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

        goto label01;

     label14:
        $r6 = $r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        goto label02;

     label15:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

     label16:
        $r3 = null;

     label17:
        if $r1 == null goto label26;

     label18:
        $r4 = "_data=?";

     label19:
        $r7 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mVideoUri>;

        $r9 = <android.media.MediaScanner: java.lang.String[] VIDEO_PROJECTION>;

        $r10 = interfaceinvoke $r7.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r9, $r4, $r2, null);

     label20:
        $r3 = $r10;

        if $r10 == null goto label30;

     label21:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label28;

        $l0 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(0);

        $r4 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>(1);

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(2);

        $r11 = $r4;

        $z0 = $r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths>;

        if $z0 == 0 goto label22;

        $r11 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

     label22:
        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        $r12 = new android.media.MediaScanner$FileCacheEntry;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mVideoUri>;

        specialinvoke $r12.<android.media.MediaScanner$FileCacheEntry: void <init>(android.net.Uri,long,java.lang.String,long)>($r8, $l0, $r4, $l1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label23:
        goto label21;

     label24:
        $r15 := @caughtexception;

     label25:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $r3 = null;

        throw $r15;

     label26:
        $r4 = null;

     label27:
        goto label19;

     label28:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

     label29:
        $r3 = null;

     label30:
        if $r1 == null goto label40;

     label31:
        $r4 = "_data=?";

     label32:
        $r0.<android.media.MediaScanner: int mOriginalCount> = 0;

        $r7 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        $r9 = <android.media.MediaScanner: java.lang.String[] IMAGES_PROJECTION>;

        $r10 = interfaceinvoke $r7.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r9, $r4, $r2, null);

     label33:
        $r3 = $r10;

        if $r10 == null goto label43;

     label34:
        $i2 = interfaceinvoke $r10.<android.database.Cursor: int getCount()>();

        $r0.<android.media.MediaScanner: int mOriginalCount> = $i2;

     label35:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label42;

        $l0 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(0);

        $r4 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>(1);

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(2);

        $r11 = $r4;

        $z0 = $r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths>;

        if $z0 == 0 goto label36;

        $r11 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

     label36:
        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        $r12 = new android.media.MediaScanner$FileCacheEntry;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        specialinvoke $r12.<android.media.MediaScanner$FileCacheEntry: void <init>(android.net.Uri,long,java.lang.String,long)>($r8, $l0, $r4, $l1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label37:
        goto label35;

     label38:
        $r16 := @caughtexception;

     label39:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $r3 = null;

        throw $r16;

     label40:
        $r4 = null;

     label41:
        goto label32;

     label42:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $r3 = null;

     label43:
        $z0 = $r0.<android.media.MediaScanner: boolean mProcessPlaylists>;

     label44:
        if $z0 == 0 goto label57;

        if $r1 == null goto label53;

     label45:
        $r1 = "_data=?";

     label46:
        $r7 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        $r9 = <android.media.MediaScanner: java.lang.String[] PLAYLISTS_PROJECTION>;

        $r10 = interfaceinvoke $r7.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r9, $r1, $r2, null);

     label47:
        $r3 = $r10;

        if $r10 == null goto label57;

     label48:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label55;

        $r1 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>(1);

        if $r1 == null goto label48;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label48;

        $l0 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(0);

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(2);

        $r4 = $r1;

        $z0 = $r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths>;

        if $z0 == 0 goto label49;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

     label49:
        $r5 = $r0.<android.media.MediaScanner: java.util.HashMap mFileCache>;

        $r12 = new android.media.MediaScanner$FileCacheEntry;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        specialinvoke $r12.<android.media.MediaScanner$FileCacheEntry: void <init>(android.net.Uri,long,java.lang.String,long)>($r8, $l0, $r1, $l1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r12);

     label50:
        goto label48;

     label51:
        $r17 := @caughtexception;

     label52:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $r3 = null;

        throw $r17;

     label53:
        $r1 = null;

     label54:
        goto label46;

     label55:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

     label56:
        $r3 = null;

     label57:
        if $r3 == null goto label58;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return;

     label58:
        return;

        catch java.lang.Throwable from label03 to label05 with label11;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label18 to label20 with label11;
        catch java.lang.Throwable from label21 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label11;
        catch java.lang.Throwable from label27 to label29 with label11;
        catch java.lang.Throwable from label31 to label33 with label11;
        catch java.lang.Throwable from label34 to label37 with label38;
        catch java.lang.Throwable from label39 to label40 with label11;
        catch java.lang.Throwable from label41 to label44 with label11;
        catch java.lang.Throwable from label45 to label47 with label11;
        catch java.lang.Throwable from label48 to label50 with label51;
        catch java.lang.Throwable from label52 to label53 with label11;
        catch java.lang.Throwable from label54 to label56 with label11;
    }

    private native void processDirectory(java.lang.String, java.lang.String, android.media.MediaScannerClient);

    private native void processFile(java.lang.String, java.lang.String, android.media.MediaScannerClient);

    private void processM3uPlayList(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2;
        android.net.Uri $r3;
        android.content.ContentValues $r4;
        java.io.File $r5;
        java.io.BufferedReader $r6, $r7;
        boolean $z0;
        java.io.InputStreamReader $r8;
        java.io.FileInputStream $r9;
        int $i0, $i1;
        char $c2;
        java.io.IOException $r10, $r11, $r12, $r14, $r15;
        java.lang.Throwable $r13;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.net.Uri;

        $r4 := @parameter3: android.content.ContentValues;

        $r7 = null;

     label01:
        $r5 = new java.io.File;

     label02:
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label03:
        if $z0 == 0 goto label11;

        $r6 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

     label04:
        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r8, 8192);

     label05:
        $r1 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        $i0 = 0;

     label07:
        if $r1 == null goto label10;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label08;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c2 == 35 goto label08;

        virtualinvoke $r4.<android.content.ContentValues: void clear()>();

        $z0 = specialinvoke $r0.<android.media.MediaScanner: boolean addPlayListEntry(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,int)>($r1, $r2, $r3, $r4, $i0);

        if $z0 == 0 goto label08;

        $i0 = $i0 + 1;

     label08:
        $r1 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        goto label07;

     label10:
        $r7 = $r6;

     label11:
        if $r7 == null goto label28;

     label12:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label13:
        return;

     label14:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", $r10);

        return;

     label15:
        $r11 := @caughtexception;

        $r10 = $r11;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", $r10);

     label17:
        if $r7 == null goto label29;

     label18:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label19:
        return;

     label20:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", $r12);

        return;

     label21:
        $r13 := @caughtexception;

     label22:
        if $r7 == null goto label24;

     label23:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label24:
        throw $r13;

     label25:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", $r14);

        goto label24;

     label26:
        $r13 := @caughtexception;

        $r7 = $r6;

        goto label22;

     label27:
        $r15 := @caughtexception;

        $r10 = $r15;

        $r7 = $r6;

        goto label16;

     label28:
        return;

     label29:
        return;

        catch java.io.IOException from label02 to label03 with label15;
        catch java.io.IOException from label04 to label05 with label15;
        catch java.lang.Throwable from label01 to label05 with label21;
        catch java.io.IOException from label05 to label06 with label27;
        catch java.io.IOException from label07 to label09 with label27;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label09 with label26;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label23 to label24 with label25;
    }

    private void processPlayLists() throws android.os.RemoteException
    {
        android.media.MediaScanner $r0;
        android.content.ContentValues $r1;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.media.MediaScanner$FileCacheEntry $r5;
        java.lang.String $r6, $r9;
        int $i0, $i3, $i4;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        long $l1;
        byte $b2;
        java.lang.Long $r10;
        android.content.IContentProvider $r11;
        android.net.Uri $r12, $r13, $r17;
        android.media.MediaFile$MediaFileType $r14;
        java.lang.String[] $r15;
        android.database.Cursor $r16;
        java.lang.Throwable $r18;

        $r0 := @this: android.media.MediaScanner;

        $r2 = $r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        $r3 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.media.MediaScanner$FileCacheEntry) $r4;

        $r6 = $r5.<android.media.MediaScanner$FileCacheEntry: java.lang.String mPath>;

        $z0 = $r5.<android.media.MediaScanner$FileCacheEntry: boolean mLastModifiedChanged>;

        if $z0 == 0 goto label01;

        $r1 = new android.content.ContentValues;

        specialinvoke $r1.<android.content.ContentValues: void <init>()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 >= 0 goto label02;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad path ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r7;

     label02:
        $l1 = $r5.<android.media.MediaScanner$FileCacheEntry: long mRowId>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label11;

        $i3 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(int)>(46);

        if $i3 >= 0 goto label10;

        $i3 = $i0 + 1;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i3);

     label03:
        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r9);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_data", $r6);

        $l1 = $r5.<android.media.MediaScanner$FileCacheEntry: long mLastModified>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date_modified", $r10);

        $r11 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r12 = $r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        $r13 = interfaceinvoke $r11.<android.content.IContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r12, $r1);

        $r12 = $r13;

        staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r13);

        $r13 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r13, "members");

     label04:
        $i0 = $i0 + 1;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r14 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>($r6);

        if $r14 != null goto label12;

        $i0 = 0;

     label05:
        if $i0 != 41 goto label13;

        specialinvoke $r0.<android.media.MediaScanner: void processM3uPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues)>($r6, $r9, $r13, $r1);

     label06:
        $r11 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r15 = <android.media.MediaScanner: java.lang.String[] PLAYLIST_MEMBERS_PROJECTION>;

        $r16 = interfaceinvoke $r11.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r13, $r15, null, null, null);

        if $r16 == null goto label08;

     label07:
        $i0 = interfaceinvoke $r16.<android.database.Cursor: int getCount()>();

        if $i0 != 0 goto label09;

     label08:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaScanner", "playlist is empty - deleting");

        $r11 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        interfaceinvoke $r11.<android.content.IContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r12, null, null);

     label09:
        if $r16 == null goto label01;

        interfaceinvoke $r16.<android.database.Cursor: void close()>();

        goto label01;

     label10:
        $i4 = $i0 + 1;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i4, $i3);

        goto label03;

     label11:
        $r12 = $r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        $r13 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r12, $l1);

        $r12 = $r13;

        $l1 = $r5.<android.media.MediaScanner$FileCacheEntry: long mLastModified>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date_modified", $r10);

        $r11 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        interfaceinvoke $r11.<android.content.IContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r13, $r1, null, null);

        $r17 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r13, "members");

        $r13 = $r17;

        $r11 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        interfaceinvoke $r11.<android.content.IContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r17, null, null);

        goto label04;

     label12:
        $i0 = $r14.<android.media.MediaFile$MediaFileType: int fileType>;

        goto label05;

     label13:
        if $i0 != 42 goto label14;

        specialinvoke $r0.<android.media.MediaScanner: void processPlsPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues)>($r6, $r9, $r13, $r1);

        goto label06;

     label14:
        if $i0 != 43 goto label06;

        specialinvoke $r0.<android.media.MediaScanner: void processWplPlayList(java.lang.String,java.lang.String,android.net.Uri)>($r6, $r9, $r13);

        goto label06;

     label15:
        $r18 := @caughtexception;

        if $r16 == null goto label16;

        interfaceinvoke $r16.<android.database.Cursor: void close()>();

     label16:
        throw $r18;

     label17:
        return;

        catch java.lang.Throwable from label07 to label09 with label15;
    }

    private void processPlsPlayList(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2;
        android.net.Uri $r3;
        android.content.ContentValues $r4;
        java.io.File $r5;
        java.io.BufferedReader $r6, $r7;
        boolean $z0;
        java.io.InputStreamReader $r8;
        java.io.FileInputStream $r9;
        int $i0, $i1;
        java.io.IOException $r10, $r11, $r12, $r14, $r15;
        java.lang.Throwable $r13;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.net.Uri;

        $r4 := @parameter3: android.content.ContentValues;

        $r7 = null;

     label01:
        $r5 = new java.io.File;

     label02:
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label03:
        if $z0 == 0 goto label11;

        $r6 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

     label04:
        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r8, 8192);

     label05:
        $r1 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        $i0 = 0;

     label07:
        if $r1 == null goto label10;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("File");

        if $z0 == 0 goto label08;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(61);

        if $i1 <= 0 goto label08;

        virtualinvoke $r4.<android.content.ContentValues: void clear()>();

        $i1 = $i1 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $z0 = specialinvoke $r0.<android.media.MediaScanner: boolean addPlayListEntry(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,int)>($r1, $r2, $r3, $r4, $i0);

        if $z0 == 0 goto label08;

        $i0 = $i0 + 1;

     label08:
        $r1 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        goto label07;

     label10:
        $r7 = $r6;

     label11:
        if $r7 == null goto label28;

     label12:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label13:
        return;

     label14:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", $r10);

        return;

     label15:
        $r11 := @caughtexception;

        $r10 = $r11;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", $r10);

     label17:
        if $r7 == null goto label29;

     label18:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label19:
        return;

     label20:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", $r12);

        return;

     label21:
        $r13 := @caughtexception;

     label22:
        if $r7 == null goto label24;

     label23:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label24:
        throw $r13;

     label25:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", $r14);

        goto label24;

     label26:
        $r13 := @caughtexception;

        $r7 = $r6;

        goto label22;

     label27:
        $r15 := @caughtexception;

        $r10 = $r15;

        $r7 = $r6;

        goto label16;

     label28:
        return;

     label29:
        return;

        catch java.io.IOException from label02 to label03 with label15;
        catch java.io.IOException from label04 to label05 with label15;
        catch java.lang.Throwable from label01 to label05 with label21;
        catch java.io.IOException from label05 to label06 with label27;
        catch java.io.IOException from label07 to label09 with label27;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label09 with label26;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label23 to label24 with label25;
    }

    private void processWplPlayList(java.lang.String, java.lang.String, android.net.Uri)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2;
        android.net.Uri $r3;
        java.io.File $r4;
        java.io.FileInputStream $r5, $r6;
        boolean $z0;
        android.util.Xml$Encoding $r7;
        android.media.MediaScanner$WplHandler $r8;
        org.xml.sax.ContentHandler $r9;
        java.io.IOException $r10, $r12, $r13, $r14, $r16, $r17;
        org.xml.sax.SAXException $r11, $r18;
        java.lang.Throwable $r15;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.net.Uri;

        $r6 = null;

     label01:
        $r4 = new java.io.File;

     label02:
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label03:
        if $z0 == 0 goto label07;

     label04:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

     label05:
        $r7 = staticinvoke <android.util.Xml: android.util.Xml$Encoding findEncodingByName(java.lang.String)>("UTF-8");

        $r8 = new android.media.MediaScanner$WplHandler;

        specialinvoke $r8.<android.media.MediaScanner$WplHandler: void <init>(android.media.MediaScanner,java.lang.String,android.net.Uri)>($r0, $r2, $r3);

        $r9 = virtualinvoke $r8.<android.media.MediaScanner$WplHandler: org.xml.sax.ContentHandler getContentHandler()>();

        staticinvoke <android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)>($r5, $r7, $r9);

     label06:
        $r6 = $r5;

     label07:
        if $r6 == null goto label31;

     label08:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label09:
        return;

     label10:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", $r10);

        return;

     label11:
        $r11 := @caughtexception;

     label12:
        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

     label13:
        if $r6 == null goto label32;

     label14:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label15:
        return;

     label16:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", $r12);

        return;

     label17:
        $r13 := @caughtexception;

        $r10 = $r13;

     label18:
        virtualinvoke $r10.<java.lang.Throwable: void printStackTrace()>();

     label19:
        if $r6 == null goto label33;

     label20:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label21:
        return;

     label22:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", $r14);

        return;

     label23:
        $r15 := @caughtexception;

     label24:
        if $r6 == null goto label26;

     label25:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label26:
        throw $r15;

     label27:
        $r16 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", $r16);

        goto label26;

     label28:
        $r15 := @caughtexception;

        $r6 = $r5;

        goto label24;

     label29:
        $r17 := @caughtexception;

        $r10 = $r17;

        $r6 = $r5;

        goto label18;

     label30:
        $r18 := @caughtexception;

        $r11 = $r18;

        $r6 = $r5;

        goto label12;

     label31:
        return;

     label32:
        return;

     label33:
        return;

        catch org.xml.sax.SAXException from label02 to label03 with label11;
        catch org.xml.sax.SAXException from label04 to label05 with label11;
        catch java.io.IOException from label02 to label03 with label17;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.lang.Throwable from label01 to label05 with label23;
        catch org.xml.sax.SAXException from label05 to label06 with label30;
        catch java.io.IOException from label05 to label06 with label29;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label25 to label26 with label27;
    }

    private void pruneDeadThumbnailFiles()
    {
        android.media.MediaScanner $r0;
        java.util.HashSet $r1;
        java.io.File $r2;
        java.lang.String[] $r3, $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.content.IContentProvider $r7;
        android.net.Uri $r8;
        android.database.Cursor $r9;
        boolean $z0;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        java.lang.SecurityException $r12;
        android.os.RemoteException $r13;

        $r0 := @this: android.media.MediaScanner;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/sdcard/DCIM/.thumbnails");

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String[] list()>();

        $r4 = $r3;

        if $r3 != null goto label01;

        $r4 = newarray (java.lang.String)[0];

     label01:
        $i0 = 0;

     label02:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label03;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sdcard/DCIM/.thumbnails");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = $r4[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        $i0 = $i0 + 1;

        goto label02;

     label03:
        $r7 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r8 = $r0.<android.media.MediaScanner: android.net.Uri mThumbsUri>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "_data";

     label04:
        $r9 = interfaceinvoke $r7.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r3, null, null, null);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pruneDeadThumbnailFiles... ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaScanner", $r6);

        if $r9 == null goto label06;

        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label06;

     label05:
        $r6 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r6);

        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label05;

     label06:
        $r10 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label08:
        $r6 = (java.lang.String) $r11;

        $r2 = new java.io.File;

     label09:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r6);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label10:
        goto label07;

     label11:
        $r12 := @caughtexception;

        goto label07;

     label12:
        $r5 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/pruneDeadThumbnailFiles... ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaScanner", $r6);

        if $r9 == null goto label16;

        interfaceinvoke $r9.<android.database.Cursor: void close()>();

     label14:
        return;

     label15:
        $r13 := @caughtexception;

        return;

     label16:
        return;

        catch android.os.RemoteException from label04 to label08 with label15;
        catch java.lang.SecurityException from label09 to label10 with label11;
        catch android.os.RemoteException from label09 to label10 with label15;
        catch android.os.RemoteException from label13 to label14 with label15;
    }

    private void setDefaultRingtoneFileNames()
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1;

        $r0 := @this: android.media.MediaScanner;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.config.ringtone");

        $r0.<android.media.MediaScanner: java.lang.String mDefaultRingtoneFilename> = $r1;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.config.notification_sound");

        $r0.<android.media.MediaScanner: java.lang.String mDefaultNotificationFilename> = $r1;

        return;
    }

    public native byte[] extractAlbumArt(java.io.FileDescriptor);

    protected void finalize()
    {
        android.media.MediaScanner $r0;
        android.content.IContentProvider $r1;
        android.content.ContentResolver $r2;
        android.content.Context $r3;

        $r0 := @this: android.media.MediaScanner;

        $r3 = $r0.<android.media.MediaScanner: android.content.Context mContext>;

        $r2 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r1 = $r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        virtualinvoke $r2.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r1);

        specialinvoke $r0.<android.media.MediaScanner: void native_finalize()>();

        return;
    }

    public void scanDirectories(java.lang.String[], java.lang.String)
    {
        android.media.MediaScanner $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        long $l0, $l1, $l4, $l5, $l6;
        int $i2, $i3;
        android.media.MediaScanner$MyMediaScannerClient $r4;
        java.lang.StringBuilder $r5;
        android.database.SQLException $r6;
        java.lang.UnsupportedOperationException $r7;
        android.os.RemoteException $r8;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String;

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r0.<android.media.MediaScanner: void initialize(java.lang.String)>($r2);

        specialinvoke $r0.<android.media.MediaScanner: void prescan(java.lang.String)>(null);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label02:
        $i2 = 0;

     label03:
        $i3 = lengthof $r1;

     label04:
        if $i2 >= $i3 goto label08;

     label05:
        $r2 = $r1[$i2];

        $r3 = <android.media.MediaFile: java.lang.String sFileExtensions>;

     label06:
        $r4 = $r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient>;

        specialinvoke $r0.<android.media.MediaScanner: void processDirectory(java.lang.String,java.lang.String,android.media.MediaScannerClient)>($r2, $r3, $r4);

     label07:
        $i2 = $i2 + 1;

        goto label03;

     label08:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r0.<android.media.MediaScanner: void postscan(java.lang.String[])>($r1);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prescan time: ");

        $l6 = $l1 - $l0;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms\n");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaScanner", $r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    scan time: ");

        $l1 = $l4 - $l1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms\n");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaScanner", $r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("postscan time: ");

        $l4 = $l5 - $l4;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms\n");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaScanner", $r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   total time: ");

        $l0 = $l5 - $l0;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms\n");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaScanner", $r2);

     label09:
        return;

     label10:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "SQLException in MediaScanner.scan()", $r6);

        return;

     label11:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "UnsupportedOperationException in MediaScanner.scan()", $r7);

        return;

     label12:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.scan()", $r8);

        return;

        catch android.database.SQLException from label01 to label02 with label10;
        catch android.database.SQLException from label04 to label05 with label10;
        catch android.database.SQLException from label06 to label07 with label10;
        catch android.database.SQLException from label08 to label09 with label10;
        catch java.lang.UnsupportedOperationException from label01 to label02 with label11;
        catch java.lang.UnsupportedOperationException from label04 to label05 with label11;
        catch java.lang.UnsupportedOperationException from label06 to label07 with label11;
        catch java.lang.UnsupportedOperationException from label08 to label09 with label11;
        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
    }

    public android.net.Uri scanSingleFile(java.lang.String, java.lang.String, java.lang.String)
    {
        android.media.MediaScanner $r0;
        java.lang.String $r1, $r2, $r3;
        java.io.File $r4;
        android.media.MediaScanner$MyMediaScannerClient $r5;
        long $l0, $l1;
        android.net.Uri $r6;
        android.os.RemoteException $r7;

        $r0 := @this: android.media.MediaScanner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

     label1:
        specialinvoke $r0.<android.media.MediaScanner: void initialize(java.lang.String)>($r2);

        specialinvoke $r0.<android.media.MediaScanner: void prescan(java.lang.String)>($r1);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $r5 = $r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient>;

        $l0 = virtualinvoke $r4.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke $r4.<java.io.File: long length()>();

        $r6 = virtualinvoke $r5.<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean)>($r1, $r3, $l0, $l1, 1);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.scanFile()", $r7);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public native void setLocale(java.lang.String);
}
