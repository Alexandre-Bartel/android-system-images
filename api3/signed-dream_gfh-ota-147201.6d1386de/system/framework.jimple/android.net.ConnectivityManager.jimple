public class android.net.ConnectivityManager extends java.lang.Object
{
    public static final java.lang.String ACTION_BACKGROUND_DATA_SETTING_CHANGED;
    public static final java.lang.String CONNECTIVITY_ACTION;
    public static final int DEFAULT_NETWORK_PREFERENCE;
    public static final java.lang.String EXTRA_EXTRA_INFO;
    public static final java.lang.String EXTRA_IS_FAILOVER;
    public static final java.lang.String EXTRA_NETWORK_INFO;
    public static final java.lang.String EXTRA_NO_CONNECTIVITY;
    public static final java.lang.String EXTRA_OTHER_NETWORK_INFO;
    public static final java.lang.String EXTRA_REASON;
    public static final int TYPE_MOBILE;
    public static final int TYPE_WIFI;
    private android.net.IConnectivityManager mService;

    private void <init>()
    {
        android.net.ConnectivityManager $r0;

        $r0 := @this: android.net.ConnectivityManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.net.IConnectivityManager)
    {
        android.net.ConnectivityManager $r0;
        android.net.IConnectivityManager $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $r1 := @parameter0: android.net.IConnectivityManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ConnectivityManager() cannot be constructed with null service");

        throw $r2;

     label1:
        $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService> = $r1;

        return;
    }

    public static boolean isNetworkTypeValid(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label2;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public android.net.NetworkInfo getActiveNetworkInfo()
    {
        android.net.ConnectivityManager $r0;
        android.net.NetworkInfo $r1;
        android.net.IConnectivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.ConnectivityManager;

        $r2 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.NetworkInfo[] getAllNetworkInfo()
    {
        android.net.ConnectivityManager $r0;
        android.net.NetworkInfo[] $r1;
        android.net.IConnectivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.ConnectivityManager;

        $r2 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.IConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getBackgroundDataSetting()
    {
        android.net.ConnectivityManager $r0;
        boolean $z0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.IConnectivityManager: boolean getBackgroundDataSetting()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.NetworkInfo getNetworkInfo(int)
    {
        android.net.ConnectivityManager $r0;
        int $i0;
        android.net.NetworkInfo $r1;
        android.net.IConnectivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.ConnectivityManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>($i0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getNetworkPreference()
    {
        android.net.ConnectivityManager $r0;
        int $i0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $i0 = interfaceinvoke $r1.<android.net.IConnectivityManager: int getNetworkPreference()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean requestRouteToHost(int, int)
    {
        android.net.ConnectivityManager $r0;
        int $i0, $i1;
        boolean $z0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.IConnectivityManager: boolean requestRouteToHost(int,int)>($i0, $i1);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBackgroundDataSetting(boolean)
    {
        android.net.ConnectivityManager $r0;
        boolean $z0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        interfaceinvoke $r1.<android.net.IConnectivityManager: void setBackgroundDataSetting(boolean)>($z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setNetworkPreference(int)
    {
        android.net.ConnectivityManager $r0;
        int $i0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        interfaceinvoke $r1.<android.net.IConnectivityManager: void setNetworkPreference(int)>($i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRadio(int, boolean)
    {
        android.net.ConnectivityManager $r0;
        int $i0;
        boolean $z0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.IConnectivityManager: boolean setRadio(int,boolean)>($i0, $z0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRadios(boolean)
    {
        android.net.ConnectivityManager $r0;
        boolean $z0;
        android.net.IConnectivityManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.ConnectivityManager;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.IConnectivityManager: boolean setRadios(boolean)>($z0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int startUsingNetworkFeature(int, java.lang.String)
    {
        android.net.ConnectivityManager $r0;
        int $i0;
        java.lang.String $r1;
        android.net.IConnectivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.ConnectivityManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $i0 = interfaceinvoke $r2.<android.net.IConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>($i0, $r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int stopUsingNetworkFeature(int, java.lang.String)
    {
        android.net.ConnectivityManager $r0;
        int $i0;
        java.lang.String $r1;
        android.net.IConnectivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.ConnectivityManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = $r0.<android.net.ConnectivityManager: android.net.IConnectivityManager mService>;

     label1:
        $i0 = interfaceinvoke $r2.<android.net.IConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>($i0, $r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.net.ConnectivityManager: int TYPE_WIFI> = 1;

        <android.net.ConnectivityManager: int TYPE_MOBILE> = 0;

        <android.net.ConnectivityManager: java.lang.String EXTRA_REASON> = "reason";

        <android.net.ConnectivityManager: java.lang.String EXTRA_OTHER_NETWORK_INFO> = "otherNetwork";

        <android.net.ConnectivityManager: java.lang.String EXTRA_NO_CONNECTIVITY> = "noConnectivity";

        <android.net.ConnectivityManager: java.lang.String EXTRA_NETWORK_INFO> = "networkInfo";

        <android.net.ConnectivityManager: java.lang.String EXTRA_IS_FAILOVER> = "isFailover";

        <android.net.ConnectivityManager: java.lang.String EXTRA_EXTRA_INFO> = "extraInfo";

        <android.net.ConnectivityManager: int DEFAULT_NETWORK_PREFERENCE> = 1;

        <android.net.ConnectivityManager: java.lang.String CONNECTIVITY_ACTION> = "android.net.conn.CONNECTIVITY_CHANGE";

        <android.net.ConnectivityManager: java.lang.String ACTION_BACKGROUND_DATA_SETTING_CHANGED> = "android.net.conn.BACKGROUND_DATA_SETTING_CHANGED";

        return;
    }
}
