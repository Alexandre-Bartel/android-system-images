public class com.android.internal.widget.LockPatternView$Cell extends java.lang.Object
{
    static com.android.internal.widget.LockPatternView$Cell[][] sCells;
    int column;
    int row;

    static void <clinit>()
    {
        int[] $r0;
        java.lang.Object $r1;
        com.android.internal.widget.LockPatternView$Cell[][] $r2;
        int $i0, $i1;
        com.android.internal.widget.LockPatternView$Cell[] $r3;
        com.android.internal.widget.LockPatternView$Cell $r4;

        $r0 = newarray (int)[2];

        $r0[0] = 3;

        $r0[1] = 3;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "com/android/internal/widget/LockPatternView$Cell", $r0);

        $r2 = (com.android.internal.widget.LockPatternView$Cell[][]) $r1;

        <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell[][] sCells> = $r2;

        $i0 = 0;

     label1:
        if $i0 >= 3 goto label4;

        $i1 = 0;

     label2:
        if $i1 >= 3 goto label3;

        $r2 = <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell[][] sCells>;

        $r3 = $r2[$i0];

        $r4 = new com.android.internal.widget.LockPatternView$Cell;

        specialinvoke $r4.<com.android.internal.widget.LockPatternView$Cell: void <init>(int,int)>($i0, $i1);

        $r3[$i1] = $r4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return;
    }

    private void <init>(int, int)
    {
        com.android.internal.widget.LockPatternView$Cell $r0;
        int $i0, $i1;

        $r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.widget.LockPatternView$Cell: void checkRange(int,int)>($i0, $i1);

        $r0.<com.android.internal.widget.LockPatternView$Cell: int row> = $i0;

        $r0.<com.android.internal.widget.LockPatternView$Cell: int column> = $i1;

        return;
    }

    private static void checkRange(int, int)
    {
        int $i0, $i1;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        if $i0 <= 2 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("row must be in range 0-2");

        throw $r0;

     label2:
        if $i1 < 0 goto label3;

        if $i1 <= 2 goto label4;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("column must be in range 0-2");

        throw $r0;

     label4:
        return;
    }

    public static com.android.internal.widget.LockPatternView$Cell of(int, int)
    {
        int $i0, $i1;
        com.android.internal.widget.LockPatternView$Cell[][] $r0;
        com.android.internal.widget.LockPatternView$Cell[] $r1;
        com.android.internal.widget.LockPatternView$Cell $r2;
        java.lang.Throwable $r3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor class "com/android/internal/widget/LockPatternView$Cell";

     label1:
        staticinvoke <com.android.internal.widget.LockPatternView$Cell: void checkRange(int,int)>($i0, $i1);

        $r0 = <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell[][] sCells>;

        $r1 = $r0[$i0];

        $r2 = $r1[$i1];

     label2:
        exitmonitor class "com/android/internal/widget/LockPatternView$Cell";

        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "com/android/internal/widget/LockPatternView$Cell";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getColumn()
    {
        com.android.internal.widget.LockPatternView$Cell $r0;
        int i0;

        $r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        i0 = $r0.<com.android.internal.widget.LockPatternView$Cell: int column>;

        return i0;
    }

    public int getRow()
    {
        com.android.internal.widget.LockPatternView$Cell $r0;
        int i0;

        $r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        i0 = $r0.<com.android.internal.widget.LockPatternView$Cell: int row>;

        return i0;
    }

    public java.lang.String toString()
    {
        com.android.internal.widget.LockPatternView$Cell $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(row=");

        $i0 = $r0.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",clmn=");

        $i0 = $r0.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
