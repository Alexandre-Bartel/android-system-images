public class org.apache.http.impl.cookie.BasicDomainHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.BasicDomainHandler $r0;

        $r0 := @this: org.apache.http.impl.cookie.BasicDomainHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.BasicDomainHandler $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7;

        $r0 := @this: org.apache.http.impl.cookie.BasicDomainHandler;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $r5 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r6 = $r5;

        if $r5 != null goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

        if $z0 != 0 goto label6;

        $r5 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label7;

     label6:
        return 1;

     label7:
        return 0;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.BasicDomainHandler $r0;
        org.apache.http.cookie.SetCookie $r1;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.cookie.MalformedCookieException $r4;
        int $i0;

        $r0 := @this: org.apache.http.impl.cookie.BasicDomainHandler;

        $r1 := @parameter0: org.apache.http.cookie.SetCookie;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for domain attribute");

        throw $r4;

     label2:
        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Blank value for domain attribute");

        throw $r4;

     label3:
        interfaceinvoke $r1.<org.apache.http.cookie.SetCookie: void setDomain(java.lang.String)>($r2);

        return;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.BasicDomainHandler $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r5, $r6;
        org.apache.http.cookie.MalformedCookieException $r7;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r8;

        $r0 := @this: org.apache.http.impl.cookie.BasicDomainHandler;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $r5 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r6 = $r5;

        if $r5 != null goto label3;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie domain may not be null");

        throw $r7;

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>($r5);

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label4:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label7;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal domain attribute \"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". Domain of origin: \"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label5:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label8;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal domain attribute \"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". Domain of origin: \"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label6:
        return;

     label7:
        return;

     label8:
        return;
    }
}
