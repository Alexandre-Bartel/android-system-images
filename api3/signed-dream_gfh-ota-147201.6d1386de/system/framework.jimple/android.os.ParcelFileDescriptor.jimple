public class android.os.ParcelFileDescriptor extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int MODE_APPEND;
    public static final int MODE_CREATE;
    public static final int MODE_READ_ONLY;
    public static final int MODE_READ_WRITE;
    public static final int MODE_TRUNCATE;
    public static final int MODE_WORLD_READABLE;
    public static final int MODE_WORLD_WRITEABLE;
    public static final int MODE_WRITE_ONLY;
    private boolean mClosed;
    private final java.io.FileDescriptor mFileDescriptor;
    private final android.os.ParcelFileDescriptor mParcelDescriptor;

    static void <clinit>()
    {
        android.os.ParcelFileDescriptor$1 $r0;

        <android.os.ParcelFileDescriptor: int MODE_WRITE_ONLY> = 536870912;

        <android.os.ParcelFileDescriptor: int MODE_WORLD_WRITEABLE> = 2;

        <android.os.ParcelFileDescriptor: int MODE_WORLD_READABLE> = 1;

        <android.os.ParcelFileDescriptor: int MODE_TRUNCATE> = 67108864;

        <android.os.ParcelFileDescriptor: int MODE_READ_WRITE> = 805306368;

        <android.os.ParcelFileDescriptor: int MODE_READ_ONLY> = 268435456;

        <android.os.ParcelFileDescriptor: int MODE_CREATE> = 134217728;

        <android.os.ParcelFileDescriptor: int MODE_APPEND> = 33554432;

        $r0 = new android.os.ParcelFileDescriptor$1;

        specialinvoke $r0.<android.os.ParcelFileDescriptor$1: void <init>()>();

        <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor $r0, $r1;
        java.io.FileDescriptor $r2;

        $r0 := @this: android.os.ParcelFileDescriptor;

        $r1 := @parameter0: android.os.ParcelFileDescriptor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mParcelDescriptor> = $r1;

        $r1 = $r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mParcelDescriptor>;

        $r2 = $r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor>;

        $r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor> = $r2;

        return;
    }

    void <init>(java.io.FileDescriptor)
    {
        android.os.ParcelFileDescriptor $r0;
        java.io.FileDescriptor $r1;

        $r0 := @this: android.os.ParcelFileDescriptor;

        $r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor> = $r1;

        $r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mParcelDescriptor> = null;

        return;
    }

    public static android.os.ParcelFileDescriptor fromSocket(java.net.Socket)
    {
        java.net.Socket $r0;
        android.os.ParcelFileDescriptor $r1;
        java.io.FileDescriptor $r2;

        $r0 := @parameter0: java.net.Socket;

        $r2 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptorFromSocket(java.net.Socket)>($r0);

        $r1 = new android.os.ParcelFileDescriptor;

        specialinvoke $r1.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r2);

        return $r1;
    }

    private static native java.io.FileDescriptor getFileDescriptorFromSocket(java.net.Socket);

    public static android.os.ParcelFileDescriptor open(java.io.File, int) throws java.io.FileNotFoundException
    {
        java.io.File $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.lang.SecurityManager $r2;
        java.lang.IllegalArgumentException $r3;
        java.io.FileDescriptor $r4;
        android.os.ParcelFileDescriptor $r5;

        $r0 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        $r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r2 == null goto label1;

        virtualinvoke $r2.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r1);

        $i1 = 536870912 & $i0;

        if $i1 == 0 goto label1;

        virtualinvoke $r2.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r1);

     label1:
        $i1 = 805306368 & $i0;

        if $i1 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify MODE_READ_ONLY, MODE_WRITE_ONLY, or MODE_READ_WRITE");

        throw $r3;

     label2:
        $r4 = staticinvoke <android.os.Parcel: java.io.FileDescriptor openFileDescriptor(java.lang.String,int)>($r1, $i0);

        $r5 = new android.os.ParcelFileDescriptor;

        specialinvoke $r5.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r4);

        return $r5;
    }

    public void close() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor $r0, $r1;
        java.io.FileDescriptor $r2;

        $r0 := @this: android.os.ParcelFileDescriptor;

        $r0.<android.os.ParcelFileDescriptor: boolean mClosed> = 1;

        $r1 = $r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mParcelDescriptor>;

        if $r1 == null goto label1;

        $r0 = $r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mParcelDescriptor>;

        virtualinvoke $r0.<android.os.ParcelFileDescriptor: void close()>();

        return;

     label1:
        $r2 = $r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor>;

        staticinvoke <android.os.Parcel: void closeFileDescriptor(java.io.FileDescriptor)>($r2);

        return;
    }

    public int describeContents()
    {
        android.os.ParcelFileDescriptor $r0;

        $r0 := @this: android.os.ParcelFileDescriptor;

        return 1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.ParcelFileDescriptor $r0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.os.ParcelFileDescriptor;

     label1:
        $z0 = $r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r1 := @caughtexception;

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.os.ParcelFileDescriptor $r0;
        java.io.FileDescriptor r1;

        $r0 := @this: android.os.ParcelFileDescriptor;

        r1 = $r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor>;

        return r1;
    }

    public native long getStatSize();

    public native long seekTo(long);

    public java.lang.String toString()
    {
        android.os.ParcelFileDescriptor $r0;
        java.lang.StringBuilder $r1;
        java.io.FileDescriptor $r2;
        java.lang.String $r3;

        $r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ParcelFileDescriptor: ");

        $r2 = $r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.ParcelFileDescriptor $r0;
        android.os.Parcel $r1;
        int $i0;
        java.io.FileDescriptor $r2;
        boolean $z0;
        java.io.IOException $r3;

        $r0 := @this: android.os.ParcelFileDescriptor;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFileDescriptor>;

        virtualinvoke $r1.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>($r2);

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        $z0 = $r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label5;

     label1:
        virtualinvoke $r0.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

     label4:
        return;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
