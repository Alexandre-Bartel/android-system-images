class com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView extends com.android.internal.policy.impl.LockPatternKeyguardView
{
    private java.util.List mInjectedLockScreens;
    private java.util.List mInjectedUnlockScreens;

    private void <init>(android.content.Context, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.widget.LockPatternUtils, com.android.internal.policy.impl.KeyguardWindowController)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r0;
        android.content.Context $r1;
        com.android.internal.policy.impl.KeyguardUpdateMonitor $r2;
        com.android.internal.widget.LockPatternUtils $r3;
        com.android.internal.policy.impl.KeyguardWindowController $r4;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.android.internal.policy.impl.KeyguardUpdateMonitor;

        $r3 := @parameter2: com.android.internal.widget.LockPatternUtils;

        $r4 := @parameter3: com.android.internal.policy.impl.KeyguardWindowController;

        specialinvoke $r0.<com.android.internal.policy.impl.LockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>($r1, $r2, $r3, $r4);

        return;
    }

    void <init>(android.content.Context, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.widget.LockPatternUtils, com.android.internal.policy.impl.KeyguardWindowController, com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r0;
        android.content.Context $r1;
        com.android.internal.policy.impl.KeyguardUpdateMonitor $r2;
        com.android.internal.widget.LockPatternUtils $r3;
        com.android.internal.policy.impl.KeyguardWindowController $r4;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$1 $r5;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.android.internal.policy.impl.KeyguardUpdateMonitor;

        $r3 := @parameter2: com.android.internal.widget.LockPatternUtils;

        $r4 := @parameter3: com.android.internal.policy.impl.KeyguardWindowController;

        $r5 := @parameter4: com.android.internal.policy.impl.LockPatternKeyguardViewTest$1;

        specialinvoke $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>($r1, $r2, $r3, $r4);

        return;
    }

    android.view.View createLockScreen()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r1, r5;
        android.content.Context $r2;
        java.util.List $r3;
        java.util.ArrayList $r4;
        android.view.View r6;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        r5 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen;

        $r1 = r5;

        r6 = (android.view.View) $r0;

        $r2 = virtualinvoke r6.<android.view.View: android.content.Context getContext()>();

        specialinvoke r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: void <init>(android.content.Context,com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)>($r2, null);

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedLockScreens>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedLockScreens> = $r4;

     label1:
        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedLockScreens>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $r1;
    }

    android.view.View createUnlockScreenFor(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r0;
        com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode $r1;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r2, r6;
        android.content.Context $r3;
        java.util.List $r4;
        java.util.ArrayList $r5;
        android.view.View r7;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        $r1 := @parameter0: com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode;

        r6 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen;

        $r2 = r6;

        r7 = (android.view.View) $r0;

        $r3 = virtualinvoke r7.<android.view.View: android.content.Context getContext()>();

        specialinvoke r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: void <init>(android.content.Context,com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)>($r3, null);

        $r4 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedUnlockScreens>;

        if $r4 != null goto label1;

        $r5 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedUnlockScreens> = $r5;

     label1:
        $r4 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedUnlockScreens>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public java.util.List getInjectedLockScreens()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r0;
        java.util.List r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedLockScreens>;

        return r1;
    }

    public java.util.List getInjectedUnlockScreens()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r0;
        java.util.List r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List mInjectedUnlockScreens>;

        return r1;
    }
}
