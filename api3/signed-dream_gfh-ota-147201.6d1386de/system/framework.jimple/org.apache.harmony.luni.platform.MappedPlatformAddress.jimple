public class org.apache.harmony.luni.platform.MappedPlatformAddress extends org.apache.harmony.luni.platform.PlatformAddress
{

    void <init>(int, long)
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        int $i0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<org.apache.harmony.luni.platform.PlatformAddress: void <init>(int,long)>($i0, $l1);

        return;
    }

    public org.apache.harmony.luni.platform.PlatformAddress duplicate()
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        long $l0;
        int $i1;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.MappedPlatformAddress mapOn(int,long)>($i1, $l0);

        return $r0;
    }

    public final void free()
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        int $i0;
        long $l1;
        boolean $z0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $z0 = interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: boolean free(org.apache.harmony.luni.platform.PlatformAddress)>($r0);

        if $z0 == 0 goto label1;

        $r2 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void unmap(int,long)>($i0, $l1);

        return;

     label1:
        return;
    }

    public final void mmapFlush()
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        long $l0;
        int $i1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $i1 = (int) $l0;

        $i1 = $i1 * 1;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, 0, $i1);

        $r2 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void flush(int,long)>($i1, $l0);

        return;
    }

    public final boolean mmapIsLoaded()
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        boolean $z0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        long $l0;
        int $i1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $i1 = (int) $l0;

        $i1 = $i1 * 1;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, 0, $i1);

        $r2 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $z0 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: boolean isLoaded(int,long)>($i1, $l0);

        return $z0;
    }

    public final void mmapLoad()
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        long $l0;
        int $i1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $i1 = (int) $l0;

        $i1 = $i1 * 1;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, 0, $i1);

        $r2 = <org.apache.harmony.luni.platform.MappedPlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void load(int,long)>($i1, $l0);

        return;
    }

    public final org.apache.harmony.luni.platform.PlatformAddress offsetBytes(int)
    {
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;
        int $i0, $i2;
        long $l1, $l3;

        $r0 := @this: org.apache.harmony.luni.platform.MappedPlatformAddress;

        $i0 := @parameter0: int;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i2 = $i2 + $i0;

        $l3 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $l1 = (long) $i0;

        $l1 = $l3 - $l1;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.MappedPlatformAddress mapOn(int,long)>($i2, $l1);

        return $r0;
    }
}
