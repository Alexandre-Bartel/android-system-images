final enum class com.android.internal.telephony.test.CallInfo$State extends java.lang.Enum
{
    private static final com.android.internal.telephony.test.CallInfo$State[] $VALUES;
    public static final enum com.android.internal.telephony.test.CallInfo$State ACTIVE;
    public static final enum com.android.internal.telephony.test.CallInfo$State ALERTING;
    public static final enum com.android.internal.telephony.test.CallInfo$State DIALING;
    public static final enum com.android.internal.telephony.test.CallInfo$State HOLDING;
    public static final enum com.android.internal.telephony.test.CallInfo$State INCOMING;
    public static final enum com.android.internal.telephony.test.CallInfo$State WAITING;
    private final int value;

    static void <clinit>()
    {
        com.android.internal.telephony.test.CallInfo$State $r0;
        com.android.internal.telephony.test.CallInfo$State[] $r1;

        $r0 = new com.android.internal.telephony.test.CallInfo$State;

        specialinvoke $r0.<com.android.internal.telephony.test.CallInfo$State: void <init>(java.lang.String,int,int)>("ACTIVE", 0, 0);

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ACTIVE> = $r0;

        $r0 = new com.android.internal.telephony.test.CallInfo$State;

        specialinvoke $r0.<com.android.internal.telephony.test.CallInfo$State: void <init>(java.lang.String,int,int)>("HOLDING", 1, 1);

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State HOLDING> = $r0;

        $r0 = new com.android.internal.telephony.test.CallInfo$State;

        specialinvoke $r0.<com.android.internal.telephony.test.CallInfo$State: void <init>(java.lang.String,int,int)>("DIALING", 2, 2);

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State DIALING> = $r0;

        $r0 = new com.android.internal.telephony.test.CallInfo$State;

        specialinvoke $r0.<com.android.internal.telephony.test.CallInfo$State: void <init>(java.lang.String,int,int)>("ALERTING", 3, 3);

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ALERTING> = $r0;

        $r0 = new com.android.internal.telephony.test.CallInfo$State;

        specialinvoke $r0.<com.android.internal.telephony.test.CallInfo$State: void <init>(java.lang.String,int,int)>("INCOMING", 4, 4);

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State INCOMING> = $r0;

        $r0 = new com.android.internal.telephony.test.CallInfo$State;

        specialinvoke $r0.<com.android.internal.telephony.test.CallInfo$State: void <init>(java.lang.String,int,int)>("WAITING", 5, 5);

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State WAITING> = $r0;

        $r1 = newarray (com.android.internal.telephony.test.CallInfo$State)[6];

        $r0 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ACTIVE>;

        $r1[0] = $r0;

        $r0 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State HOLDING>;

        $r1[1] = $r0;

        $r0 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State DIALING>;

        $r1[2] = $r0;

        $r0 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ALERTING>;

        $r1[3] = $r0;

        $r0 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State INCOMING>;

        $r1[4] = $r0;

        $r0 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State WAITING>;

        $r1[5] = $r0;

        <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        com.android.internal.telephony.test.CallInfo$State $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: com.android.internal.telephony.test.CallInfo$State;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<com.android.internal.telephony.test.CallInfo$State: int value> = $i1;

        return;
    }

    public static com.android.internal.telephony.test.CallInfo$State valueOf(java.lang.String)
    {
        java.lang.Enum $r0;
        java.lang.String $r1;
        com.android.internal.telephony.test.CallInfo$State $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/android/internal/telephony/test/CallInfo$State", $r1);

        $r2 = (com.android.internal.telephony.test.CallInfo$State) $r0;

        return $r2;
    }

    public static final com.android.internal.telephony.test.CallInfo$State[] values()
    {
        java.lang.Object $r0;
        com.android.internal.telephony.test.CallInfo$State[] $r1;

        $r1 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.android.internal.telephony.test.CallInfo$State[]) $r0;

        return $r1;
    }

    public int value()
    {
        com.android.internal.telephony.test.CallInfo$State $r0;
        int i0;

        $r0 := @this: com.android.internal.telephony.test.CallInfo$State;

        i0 = $r0.<com.android.internal.telephony.test.CallInfo$State: int value>;

        return i0;
    }
}
