public class org.apache.harmony.security.provider.crypto.RandomBitsSupplier extends java.lang.Object implements org.apache.harmony.security.provider.crypto.SHA1_Data
{
    private static java.io.FileInputStream bis;
    private static java.io.File randomFile;
    private static boolean serviceAvailable;

    static void <clinit>()
    {
        org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1 $r0;
        java.io.FileInputStream $r1;
        boolean $z0;

        <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.FileInputStream bis> = null;

        <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.File randomFile> = null;

        $r0 = new org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1;

        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1: void <init>()>();

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r1 = <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.FileInputStream bis>;

        if $r1 == null goto label2;

        $z0 = 1;

     label1:
        <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: boolean serviceAvailable> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.RandomBitsSupplier $r0;

        $r0 := @this: org.apache.harmony.security.provider.crypto.RandomBitsSupplier;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.io.FileInputStream access$002(java.io.FileInputStream)
    {
        java.io.FileInputStream $r0;

        $r0 := @parameter0: java.io.FileInputStream;

        <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.FileInputStream bis> = $r0;

        return $r0;
    }

    static java.io.File access$102(java.io.File)
    {
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.File randomFile> = $r0;

        return $r0;
    }

    private static byte[] getLinuxRandomBits(int)
    {
        int $i0, $i1, $i2, $i3;
        byte[] $r0;
        java.io.FileInputStream $r1;
        java.security.ProviderException $r2;
        java.lang.String $r3;
        java.io.IOException $r4;
        java.lang.Throwable $r5;

        $i0 := @parameter0: int;

        entermonitor class "org/apache/harmony/security/provider/crypto/RandomBitsSupplier";

     label01:
        $r0 = newarray (byte)[$i0];

     label02:
        $i1 = 0;

        $i2 = 0;

     label03:
        $r1 = <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.FileInputStream bis>;

        $i3 = $i0 - $i1;

     label04:
        $i3 = virtualinvoke $r1.<java.io.FileInputStream: int read(byte[],int,int)>($r0, $i2, $i3);

     label05:
        if $i3 != -1 goto label11;

     label06:
        $r2 = new java.security.ProviderException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.193");

        specialinvoke $r2.<java.security.ProviderException: void <init>(java.lang.String)>($r3);

     label07:
        throw $r2;

     label08:
        $r4 := @caughtexception;

     label09:
        $r2 = new java.security.ProviderException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.194");

        specialinvoke $r2.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r4);

        throw $r2;

     label10:
        $r5 := @caughtexception;

        exitmonitor class "org/apache/harmony/security/provider/crypto/RandomBitsSupplier";

        throw $r5;

     label11:
        $i1 = $i1 + $i3;

        $i2 = $i2 + $i3;

        if $i1 < $i0 goto label03;

        exitmonitor class "org/apache/harmony/security/provider/crypto/RandomBitsSupplier";

        return $r0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public static byte[] getRandomBits(int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;
        boolean $z0;
        java.security.ProviderException $r2;
        byte[] $r3;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.195", $i0);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;

     label1:
        $z0 = <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: boolean serviceAvailable>;

        if $z0 != 0 goto label2;

        $r2 = new java.security.ProviderException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.196");

        specialinvoke $r2.<java.security.ProviderException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        $r3 = staticinvoke <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getLinuxRandomBits(int)>($i0);

        return $r3;
    }

    static boolean isServiceAvailable()
    {
        boolean z0;

        z0 = <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: boolean serviceAvailable>;

        return z0;
    }
}
