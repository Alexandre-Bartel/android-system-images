public class android.content.pm.ActivityInfo extends android.content.pm.ComponentInfo implements android.os.Parcelable
{
    public static final int CONFIG_FONT_SCALE;
    public static final int CONFIG_KEYBOARD;
    public static final int CONFIG_KEYBOARD_HIDDEN;
    public static final int CONFIG_LOCALE;
    public static final int CONFIG_MCC;
    public static final int CONFIG_MNC;
    public static final int CONFIG_NAVIGATION;
    public static final int CONFIG_ORIENTATION;
    public static final int CONFIG_TOUCHSCREEN;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int FLAG_ALLOW_TASK_REPARENTING;
    public static final int FLAG_ALWAYS_RETAIN_TASK_STATE;
    public static final int FLAG_CLEAR_TASK_ON_LAUNCH;
    public static final int FLAG_EXCLUDE_FROM_RECENTS;
    public static final int FLAG_FINISH_ON_TASK_LAUNCH;
    public static final int FLAG_MULTIPROCESS;
    public static final int FLAG_NO_HISTORY;
    public static final int FLAG_STATE_NOT_NEEDED;
    public static final int LAUNCH_MULTIPLE;
    public static final int LAUNCH_SINGLE_INSTANCE;
    public static final int LAUNCH_SINGLE_TASK;
    public static final int LAUNCH_SINGLE_TOP;
    public static final int SCREEN_ORIENTATION_BEHIND;
    public static final int SCREEN_ORIENTATION_LANDSCAPE;
    public static final int SCREEN_ORIENTATION_NOSENSOR;
    public static final int SCREEN_ORIENTATION_PORTRAIT;
    public static final int SCREEN_ORIENTATION_SENSOR;
    public static final int SCREEN_ORIENTATION_UNSPECIFIED;
    public static final int SCREEN_ORIENTATION_USER;
    public int configChanges;
    public int flags;
    public int launchMode;
    public java.lang.String permission;
    public int screenOrientation;
    public int softInputMode;
    public java.lang.String targetActivity;
    public java.lang.String taskAffinity;
    public int theme;

    static void <clinit>()
    {
        android.content.pm.ActivityInfo$1 $r0;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_USER> = 2;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_UNSPECIFIED> = -1;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_SENSOR> = 4;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_PORTRAIT> = 1;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_NOSENSOR> = 5;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_LANDSCAPE> = 0;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_BEHIND> = 3;

        <android.content.pm.ActivityInfo: int LAUNCH_SINGLE_TOP> = 1;

        <android.content.pm.ActivityInfo: int LAUNCH_SINGLE_TASK> = 2;

        <android.content.pm.ActivityInfo: int LAUNCH_SINGLE_INSTANCE> = 3;

        <android.content.pm.ActivityInfo: int LAUNCH_MULTIPLE> = 0;

        <android.content.pm.ActivityInfo: int FLAG_STATE_NOT_NEEDED> = 16;

        <android.content.pm.ActivityInfo: int FLAG_NO_HISTORY> = 128;

        <android.content.pm.ActivityInfo: int FLAG_MULTIPROCESS> = 1;

        <android.content.pm.ActivityInfo: int FLAG_FINISH_ON_TASK_LAUNCH> = 2;

        <android.content.pm.ActivityInfo: int FLAG_EXCLUDE_FROM_RECENTS> = 32;

        <android.content.pm.ActivityInfo: int FLAG_CLEAR_TASK_ON_LAUNCH> = 4;

        <android.content.pm.ActivityInfo: int FLAG_ALWAYS_RETAIN_TASK_STATE> = 8;

        <android.content.pm.ActivityInfo: int FLAG_ALLOW_TASK_REPARENTING> = 64;

        <android.content.pm.ActivityInfo: int CONFIG_TOUCHSCREEN> = 8;

        <android.content.pm.ActivityInfo: int CONFIG_ORIENTATION> = 128;

        <android.content.pm.ActivityInfo: int CONFIG_NAVIGATION> = 64;

        <android.content.pm.ActivityInfo: int CONFIG_MNC> = 2;

        <android.content.pm.ActivityInfo: int CONFIG_MCC> = 1;

        <android.content.pm.ActivityInfo: int CONFIG_LOCALE> = 4;

        <android.content.pm.ActivityInfo: int CONFIG_KEYBOARD_HIDDEN> = 32;

        <android.content.pm.ActivityInfo: int CONFIG_KEYBOARD> = 16;

        <android.content.pm.ActivityInfo: int CONFIG_FONT_SCALE> = 1073741824;

        $r0 = new android.content.pm.ActivityInfo$1;

        specialinvoke $r0.<android.content.pm.ActivityInfo$1: void <init>()>();

        <android.content.pm.ActivityInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.content.pm.ActivityInfo $r0;

        $r0 := @this: android.content.pm.ActivityInfo;

        specialinvoke $r0.<android.content.pm.ComponentInfo: void <init>()>();

        $r0.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        return;
    }

    public void <init>(android.content.pm.ActivityInfo)
    {
        android.content.pm.ActivityInfo $r0, $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.content.pm.ActivityInfo;

        $r1 := @parameter0: android.content.pm.ActivityInfo;

        specialinvoke $r0.<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>($r1);

        $r0.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        $i0 = $r1.<android.content.pm.ActivityInfo: int theme>;

        $r0.<android.content.pm.ActivityInfo: int theme> = $i0;

        $i0 = $r1.<android.content.pm.ActivityInfo: int launchMode>;

        $r0.<android.content.pm.ActivityInfo: int launchMode> = $i0;

        $r2 = $r1.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r0.<android.content.pm.ActivityInfo: java.lang.String permission> = $r2;

        $r2 = $r1.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        $r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r2;

        $r2 = $r1.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        $r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity> = $r2;

        $i0 = $r1.<android.content.pm.ActivityInfo: int flags>;

        $r0.<android.content.pm.ActivityInfo: int flags> = $i0;

        $i0 = $r1.<android.content.pm.ActivityInfo: int screenOrientation>;

        $r0.<android.content.pm.ActivityInfo: int screenOrientation> = $i0;

        $i0 = $r1.<android.content.pm.ActivityInfo: int configChanges>;

        $r0.<android.content.pm.ActivityInfo: int configChanges> = $i0;

        $i0 = $r1.<android.content.pm.ActivityInfo: int softInputMode>;

        $r0.<android.content.pm.ActivityInfo: int softInputMode> = $i0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.content.pm.ActivityInfo $r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.content.pm.ActivityInfo;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>($r1);

        $r0.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.content.pm.ActivityInfo: int theme> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.content.pm.ActivityInfo: int launchMode> = $i0;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r0.<android.content.pm.ActivityInfo: java.lang.String permission> = $r2;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r2;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity> = $r2;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.content.pm.ActivityInfo: int flags> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.content.pm.ActivityInfo: int screenOrientation> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.content.pm.ActivityInfo: int configChanges> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.content.pm.ActivityInfo: int softInputMode> = $i0;

        return;
    }

    void <init>(android.os.Parcel, android.content.pm.ActivityInfo$1)
    {
        android.content.pm.ActivityInfo $r0;
        android.os.Parcel $r1;
        android.content.pm.ActivityInfo$1 $r2;

        $r0 := @this: android.content.pm.ActivityInfo;

        $r1 := @parameter0: android.os.Parcel;

        $r2 := @parameter1: android.content.pm.ActivityInfo$1;

        specialinvoke $r0.<android.content.pm.ActivityInfo: void <init>(android.os.Parcel)>($r1);

        return;
    }

    public int describeContents()
    {
        android.content.pm.ActivityInfo $r0;

        $r0 := @this: android.content.pm.ActivityInfo;

        return 0;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.content.pm.ActivityInfo $r0;
        android.util.Printer $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @this: android.content.pm.ActivityInfo;

        $r1 := @parameter0: android.util.Printer;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>($r1, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permission=");

        $r4 = $r0.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taskAffinity=");

        $r4 = $r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targetActivity=");

        $r4 = $r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchMode=");

        $i0 = $r0.<android.content.pm.ActivityInfo: int launchMode>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $i0 = $r0.<android.content.pm.ActivityInfo: int flags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" theme=0x");

        $i0 = $r0.<android.content.pm.ActivityInfo: int theme>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("screenOrientation=");

        $i0 = $r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configChanges=0x");

        $i0 = $r0.<android.content.pm.ActivityInfo: int configChanges>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" softInputMode=0x");

        $i0 = $r0.<android.content.pm.ActivityInfo: int softInputMode>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        specialinvoke $r0.<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>($r1, $r2);

        return;
    }

    public final int getThemeResource()
    {
        android.content.pm.ActivityInfo $r0;
        int $i0;
        android.content.pm.ApplicationInfo $r1;

        $r0 := @this: android.content.pm.ActivityInfo;

        $i0 = $r0.<android.content.pm.ActivityInfo: int theme>;

        if $i0 == 0 goto label1;

        $i0 = $r0.<android.content.pm.ActivityInfo: int theme>;

        return $i0;

     label1:
        $r1 = $r0.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int theme>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.content.pm.ActivityInfo $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.content.pm.ActivityInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityInfo{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = $r0.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.ActivityInfo $r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.content.pm.ActivityInfo;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>($r1, $i0);

        $i0 = $r0.<android.content.pm.ActivityInfo: int theme>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<android.content.pm.ActivityInfo: int launchMode>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r2 = $r0.<android.content.pm.ActivityInfo: java.lang.String permission>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r2 = $r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r2 = $r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i0 = $r0.<android.content.pm.ActivityInfo: int flags>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<android.content.pm.ActivityInfo: int configChanges>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<android.content.pm.ActivityInfo: int softInputMode>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
}
