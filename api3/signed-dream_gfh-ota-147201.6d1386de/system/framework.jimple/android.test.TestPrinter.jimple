public class android.test.TestPrinter extends java.lang.Object implements android.test.TestRunner$Listener, junit.framework.TestListener
{
    private java.util.Set mFailedTests;
    private boolean mOnlyFailures;
    private java.lang.String mTag;

    public void <init>(java.lang.String, boolean)
    {
        android.test.TestPrinter $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.HashSet $r2;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<android.test.TestPrinter: java.util.Set mFailedTests> = $r2;

        $r0.<android.test.TestPrinter: java.lang.String mTag> = $r1;

        $r0.<android.test.TestPrinter: boolean mOnlyFailures> = $z0;

        return;
    }

    private void failed(junit.framework.Test, java.lang.Throwable)
    {
        android.test.TestPrinter $r0;
        junit.framework.Test $r1;
        java.lang.Throwable $r2;
        java.util.Set $r3;
        java.lang.String $r4;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<android.test.TestPrinter: java.util.Set mFailedTests>;

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<android.test.TestPrinter: void failed(java.lang.String,java.lang.Throwable)>($r4, $r2);

        return;
    }

    public void addError(junit.framework.Test, java.lang.Throwable)
    {
        android.test.TestPrinter $r0;
        junit.framework.Test $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke $r0.<android.test.TestPrinter: void failed(junit.framework.Test,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void addFailure(junit.framework.Test, junit.framework.AssertionFailedError)
    {
        android.test.TestPrinter $r0;
        junit.framework.Test $r1;
        junit.framework.AssertionFailedError $r2;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: junit.framework.AssertionFailedError;

        specialinvoke $r0.<android.test.TestPrinter: void failed(junit.framework.Test,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void endTest(junit.framework.Test)
    {
        android.test.TestPrinter $r0;
        junit.framework.Test $r1;
        java.lang.String $r2;
        java.util.Set $r3;
        boolean $z0;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<android.test.TestPrinter: void finished(java.lang.String)>($r2);

        $r3 = $r0.<android.test.TestPrinter: java.util.Set mFailedTests>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<android.test.TestPrinter: void passed(java.lang.String)>($r2);

     label1:
        $r3 = $r0.<android.test.TestPrinter: java.util.Set mFailedTests>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        return;
    }

    public void failed(java.lang.String, java.lang.Throwable)
    {
        android.test.TestPrinter $r0;
        java.lang.String $r1, $r3;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r1);

        $r1 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "----- begin exception -----");

        $r1 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "", $r2);

        $r1 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "----- end exception -----");

        return;
    }

    public void finished(java.lang.String)
    {
        android.test.TestPrinter $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: java.lang.String;

        $z0 = $r0.<android.test.TestPrinter: boolean mOnlyFailures>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r1);

        return;

     label1:
        return;
    }

    public void passed(java.lang.String)
    {
        android.test.TestPrinter $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: java.lang.String;

        $z0 = $r0.<android.test.TestPrinter: boolean mOnlyFailures>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("passed: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r1);

        return;

     label1:
        return;
    }

    public void performance(java.lang.String, long, int, java.util.List)
    {
        android.test.TestPrinter $r0;
        java.lang.String $r1, $r3;
        long $l0;
        int $i1, $i2;
        java.util.List $r2;
        java.lang.StringBuilder $r4;
        java.lang.Object $r5;
        android.test.TestRunner$IntermediateTime $r6;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.util.List;

        $r3 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("perf: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns/op (done ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times)");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r1);

        if $r2 == null goto label2;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 <= 0 goto label3;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r6 = (android.test.TestRunner$IntermediateTime) $r5;

        $r1 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  intermediate: ");

        $r3 = $r6.<android.test.TestRunner$IntermediateTime: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $l0 = $r6.<android.test.TestRunner$IntermediateTime: long timeInNS>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    public void startTest(junit.framework.Test)
    {
        android.test.TestPrinter $r0;
        junit.framework.Test $r1;
        java.lang.String $r2;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<android.test.TestPrinter: void started(java.lang.String)>($r2);

        return;
    }

    public void started(java.lang.String)
    {
        android.test.TestPrinter $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.test.TestPrinter;

        $r1 := @parameter0: java.lang.String;

        $z0 = $r0.<android.test.TestPrinter: boolean mOnlyFailures>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.test.TestPrinter: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("started: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r1);

        return;

     label1:
        return;
    }
}
