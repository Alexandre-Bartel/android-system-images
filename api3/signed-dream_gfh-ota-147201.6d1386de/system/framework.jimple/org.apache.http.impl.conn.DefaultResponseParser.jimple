public class org.apache.http.impl.conn.DefaultResponseParser extends org.apache.http.impl.io.AbstractMessageParser
{
    private final org.apache.http.util.CharArrayBuffer lineBuf;
    private final int maxGarbageLines;
    private final org.apache.http.HttpResponseFactory responseFactory;

    public void <init>(org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.DefaultResponseParser $r0;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.message.LineParser $r2;
        org.apache.http.HttpResponseFactory $r3;
        org.apache.http.params.HttpParams $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        org.apache.http.util.CharArrayBuffer $r6;

        $r0 := @this: org.apache.http.impl.conn.DefaultResponseParser;

        $r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        $r2 := @parameter1: org.apache.http.message.LineParser;

        $r3 := @parameter2: org.apache.http.HttpResponseFactory;

        $r4 := @parameter3: org.apache.http.params.HttpParams;

        specialinvoke $r0.<org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>($r1, $r2, $r4);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Response factory may not be null");

        throw $r5;

     label1:
        $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpResponseFactory responseFactory> = $r3;

        $r6 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r6.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.util.CharArrayBuffer lineBuf> = $r6;

        $i0 = interfaceinvoke $r4.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.max-status-line-garbage", 2147483647);

        $r0.<org.apache.http.impl.conn.DefaultResponseParser: int maxGarbageLines> = $i0;

        return;
    }

    protected org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) throws java.io.IOException, org.apache.http.HttpException
    {
        org.apache.http.impl.conn.DefaultResponseParser $r0;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        int $i0, $i1, $i2;
        org.apache.http.NoHttpResponseException $r3;
        org.apache.http.message.ParserCursor $r4;
        org.apache.http.message.LineParser $r5;
        boolean $z0;
        org.apache.http.StatusLine $r6;
        org.apache.http.HttpResponseFactory $r7;
        org.apache.http.HttpResponse $r8;
        org.apache.http.ProtocolException $r9;

        $r0 := @this: org.apache.http.impl.conn.DefaultResponseParser;

        $r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        $r2 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void clear()>();

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $i1 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>($r2);

        if $i1 != -1 goto label2;

        if $i0 != 0 goto label2;

        $r3 = new org.apache.http.NoHttpResponseException;

        specialinvoke $r3.<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>("The target server failed to respond");

        throw $r3;

     label2:
        $r4 = new org.apache.http.message.ParserCursor;

        $r2 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $i2 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r4.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i2);

        $r5 = $r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.message.LineParser lineParser>;

        $r2 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $z0 = interfaceinvoke $r5.<org.apache.http.message.LineParser: boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r2, $r4);

        if $z0 == 0 goto label3;

        $r5 = $r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.message.LineParser lineParser>;

        $r2 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $r6 = interfaceinvoke $r5.<org.apache.http.message.LineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r2, $r4);

        $r7 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpResponseFactory responseFactory>;

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponseFactory: org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext)>($r6, null);

        return $r8;

     label3:
        if $i1 == -1 goto label4;

        $i1 = $r0.<org.apache.http.impl.conn.DefaultResponseParser: int maxGarbageLines>;

        if $i0 < $i1 goto label5;

     label4:
        $r9 = new org.apache.http.ProtocolException;

        specialinvoke $r9.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("The server failed to respond with a valid HTTP response");

        throw $r9;

     label5:
        $i0 = $i0 + 1;

        goto label1;
    }
}
