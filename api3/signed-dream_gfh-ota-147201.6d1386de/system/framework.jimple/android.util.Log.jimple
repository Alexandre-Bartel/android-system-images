public final class android.util.Log extends java.lang.Object
{
    public static final int ASSERT;
    public static final int DEBUG;
    public static final int ERROR;
    public static final int INFO;
    public static final int VERBOSE;
    public static final int WARN;

    private void <init>()
    {
        android.util.Log $r0;

        $r0 := @this: android.util.Log;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int d(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(3, $r0, $r1);

        return $i0;
    }

    public static int d(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(3, $r0, $r1);

        return $i0;
    }

    public static int e(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(6, $r0, $r1);

        return $i0;
    }

    public static int e(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(6, $r0, $r1);

        staticinvoke <com.android.internal.os.RuntimeInit: void reportException(java.lang.String,java.lang.Throwable,boolean)>($r0, $r2, 0);

        return $i0;
    }

    public static java.lang.String getStackTraceString(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.io.PrintWriter $r1;
        java.io.StringWriter $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.Throwable;

        if $r0 != null goto label1;

        return "";

     label1:
        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r2);

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

        $r3 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public static int i(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(4, $r0, $r1);

        return $i0;
    }

    public static int i(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(4, $r0, $r1);

        return $i0;
    }

    public static native boolean isLoggable(java.lang.String, int);

    public static native int println(int, java.lang.String, java.lang.String);

    public static int v(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(2, $r0, $r1);

        return $i0;
    }

    public static int v(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(2, $r0, $r1);

        return $i0;
    }

    public static int w(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(5, $r0, $r1);

        return $i0;
    }

    public static int w(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(5, $r0, $r1);

        return $i0;
    }

    public static int w(java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r2;
        java.lang.Throwable $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        $i0 = staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(5, $r0, $r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <android.util.Log: int WARN> = 5;

        <android.util.Log: int VERBOSE> = 2;

        <android.util.Log: int INFO> = 4;

        <android.util.Log: int ERROR> = 6;

        <android.util.Log: int DEBUG> = 3;

        <android.util.Log: int ASSERT> = 7;

        return;
    }
}
