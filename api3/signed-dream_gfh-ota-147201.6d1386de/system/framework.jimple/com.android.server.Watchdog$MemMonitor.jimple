final class com.android.server.Watchdog$MemMonitor extends java.lang.Object
{
    static final int STATE_HARD;
    static final int STATE_OK;
    static final int STATE_SOFT;
    boolean mEnabled;
    final java.lang.String mEnabledSetting;
    final java.lang.String mHardSetting;
    int mHardThreshold;
    long mLastPss;
    final java.lang.String mProcessName;
    final java.lang.String mSoftSetting;
    int mSoftThreshold;
    int mState;
    final com.android.server.Watchdog this$0;

    void <init>(com.android.server.Watchdog, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int)
    {
        com.android.server.Watchdog$MemMonitor $r0;
        com.android.server.Watchdog $r1;
        java.lang.String $r2, $r3, $r4, $r5;
        int $i0, $i1;

        $r0 := @this: com.android.server.Watchdog$MemMonitor;

        $r1 := @parameter0: com.android.server.Watchdog;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $r5 := @parameter5: java.lang.String;

        $i1 := @parameter6: int;

        $r0.<com.android.server.Watchdog$MemMonitor: com.android.server.Watchdog this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mProcessName> = $r2;

        $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mEnabledSetting> = $r3;

        $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mSoftSetting> = $r4;

        $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mHardSetting> = $r5;

        $r0.<com.android.server.Watchdog$MemMonitor: int mSoftThreshold> = $i0;

        $r0.<com.android.server.Watchdog$MemMonitor: int mHardThreshold> = $i1;

        return;
    }

    boolean checkLocked(long, int, int)
    {
        com.android.server.Watchdog$MemMonitor $r0;
        long $l0, $l3, $l4;
        int $i1, $i2;
        byte $b5;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r6;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        com.android.server.Watchdog $r5;
        boolean z0;

        $r0 := @this: com.android.server.Watchdog$MemMonitor;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $l3 = (long) $i2;

        $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss> = $l3;

        $l3 = $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss>;

        $i2 = $r0.<com.android.server.Watchdog$MemMonitor: int mSoftThreshold>;

        $l4 = (long) $i2;

        $b5 = $l3 cmp $l4;

        if $b5 >= 0 goto label02;

        $r0.<com.android.server.Watchdog$MemMonitor: int mState> = 0;

     label01:
        $r1 = newarray (java.lang.Object)[3];

        $r2 = $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mProcessName>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $l3 = $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[2] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2803, $r1);

        $i2 = $r0.<com.android.server.Watchdog$MemMonitor: int mState>;

        if $i2 != 0 goto label04;

        return 0;

     label02:
        $l3 = $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss>;

        $i2 = $r0.<com.android.server.Watchdog$MemMonitor: int mHardThreshold>;

        $l4 = (long) $i2;

        $b5 = $l3 cmp $l4;

        if $b5 >= 0 goto label03;

        $r0.<com.android.server.Watchdog$MemMonitor: int mState> = 1;

        goto label01;

     label03:
        $r0.<com.android.server.Watchdog$MemMonitor: int mState> = 2;

        goto label01;

     label04:
        $i2 = $r0.<com.android.server.Watchdog$MemMonitor: int mState>;

        if $i2 != 2 goto label05;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mProcessName>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i1 = $r0.<com.android.server.Watchdog$MemMonitor: int mHardThreshold>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r3;

        $l0 = $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[3] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2805, $r1);

        z0 = $r0.<com.android.server.Watchdog$MemMonitor: boolean mEnabled>;

        return z0;

     label05:
        $r5 = $r0.<com.android.server.Watchdog$MemMonitor: com.android.server.Watchdog this$0>;

        virtualinvoke $r5.<com.android.server.Watchdog: void computeMemcheckTimesLocked(long)>($l0);

        $r5 = $r0.<com.android.server.Watchdog$MemMonitor: com.android.server.Watchdog this$0>;

        $l3 = $r5.<com.android.server.Watchdog: long mMemcheckExecStartTime>;

        $b5 = $l0 cmp $l3;

        if $b5 < 0 goto label06;

        $r5 = $r0.<com.android.server.Watchdog$MemMonitor: com.android.server.Watchdog this$0>;

        $l3 = $r5.<com.android.server.Watchdog: long mMemcheckExecEndTime>;

        $b5 = $l0 cmp $l3;

        if $b5 <= 0 goto label09;

     label06:
        $r2 = "time";

     label07:
        $r1 = newarray (java.lang.Object)[5];

        $r6 = $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mProcessName>;

        $r1[0] = $r6;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i1 = $r0.<com.android.server.Watchdog$MemMonitor: int mSoftThreshold>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r3;

        $l0 = $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[3] = $r4;

        if $r2 == null goto label10;

        $r6 = $r2;

     label08:
        $r1[4] = $r6;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2804, $r1);

        if $r2 == null goto label11;

        $r5 = $r0.<com.android.server.Watchdog$MemMonitor: com.android.server.Watchdog this$0>;

        $r5.<com.android.server.Watchdog: boolean mNeedScheduledCheck> = 1;

        return 0;

     label09:
        $r5 = $r0.<com.android.server.Watchdog$MemMonitor: com.android.server.Watchdog this$0>;

        $r2 = virtualinvoke $r5.<com.android.server.Watchdog: java.lang.String shouldWeBeBrutalLocked(long)>($l0);

        goto label07;

     label10:
        $r6 = "";

        goto label08;

     label11:
        z0 = $r0.<com.android.server.Watchdog$MemMonitor: boolean mEnabled>;

        return z0;
    }

    void clear()
    {
        com.android.server.Watchdog$MemMonitor $r0;

        $r0 := @this: com.android.server.Watchdog$MemMonitor;

        $r0.<com.android.server.Watchdog$MemMonitor: long mLastPss> = 0L;

        $r0.<com.android.server.Watchdog$MemMonitor: int mState> = 0;

        return;
    }

    void retrieveSettings(android.content.ContentResolver)
    {
        com.android.server.Watchdog$MemMonitor $r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.server.Watchdog$MemMonitor;

        $r1 := @parameter0: android.content.ContentResolver;

        $r2 = $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mSoftSetting>;

        $i0 = $r0.<com.android.server.Watchdog$MemMonitor: int mSoftThreshold>;

        $i0 = staticinvoke <android.provider.Settings$Gservices: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, $r2, $i0);

        $r0.<com.android.server.Watchdog$MemMonitor: int mSoftThreshold> = $i0;

        $r2 = $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mHardSetting>;

        $i0 = $r0.<com.android.server.Watchdog$MemMonitor: int mHardThreshold>;

        $i0 = staticinvoke <android.provider.Settings$Gservices: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, $r2, $i0);

        $r0.<com.android.server.Watchdog$MemMonitor: int mHardThreshold> = $i0;

        $r2 = $r0.<com.android.server.Watchdog$MemMonitor: java.lang.String mEnabledSetting>;

        $i0 = staticinvoke <android.provider.Settings$Gservices: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, $r2, 0);

        if $i0 == 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<com.android.server.Watchdog$MemMonitor: boolean mEnabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public static void <clinit>()
    {
        <com.android.server.Watchdog$MemMonitor: int STATE_SOFT> = 1;

        <com.android.server.Watchdog$MemMonitor: int STATE_OK> = 0;

        <com.android.server.Watchdog$MemMonitor: int STATE_HARD> = 2;

        return;
    }
}
