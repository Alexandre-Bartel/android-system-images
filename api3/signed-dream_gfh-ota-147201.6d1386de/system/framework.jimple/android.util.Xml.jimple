public class android.util.Xml extends java.lang.Object
{
    public static java.lang.String FEATURE_RELAXED;

    static void <clinit>()
    {
        <android.util.Xml: java.lang.String FEATURE_RELAXED> = "http://xmlpull.org/v1/doc/features.html#relaxed";

        return;
    }

    public void <init>()
    {
        android.util.Xml $r0;

        $r0 := @this: android.util.Xml;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0;
        android.util.AttributeSet $r1;
        android.util.XmlPullAttributes $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $z0 = $r0 instanceof android.util.AttributeSet;

        if $z0 == 0 goto label1;

        $r1 = (android.util.AttributeSet) $r0;

        return $r1;

     label1:
        $r2 = new android.util.XmlPullAttributes;

        specialinvoke $r2.<android.util.XmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser)>($r0);

        return $r2;
    }

    public static android.util.Xml$Encoding findEncodingByName(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r3;
        android.util.Xml$Encoding $r1;
        int $i0, $i1;
        android.util.Xml$Encoding[] $r2;
        boolean $z0;
        java.io.UnsupportedEncodingException $r4;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = <android.util.Xml$Encoding: android.util.Xml$Encoding UTF_8>;

        return $r1;

     label1:
        $r2 = staticinvoke <android.util.Xml$Encoding: android.util.Xml$Encoding[] values()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = $r2[$i1];

        $r3 = $r1.<android.util.Xml$Encoding: java.lang.String expatName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

        return $r1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r4 = new java.io.UnsupportedEncodingException;

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r0);

        throw $r4;
    }

    public static org.xmlpull.v1.XmlPullParser newPullParser()
    {
        org.apache.harmony.xml.ExpatPullParser $r0, r1;
        org.xmlpull.v1.XmlPullParser r2;

        r1 = new org.apache.harmony.xml.ExpatPullParser;

        $r0 = r1;

        specialinvoke r1.<org.apache.harmony.xml.ExpatPullParser: void <init>()>();

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatPullParser: void setNamespaceProcessingEnabled(boolean)>(1);

        r2 = (org.xmlpull.v1.XmlPullParser) $r0;

        return r2;
    }

    public static org.xmlpull.v1.XmlSerializer newSerializer()
    {
        org.xmlpull.v1.XmlSerializer $r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        org.xmlpull.v1.XmlPullParserException $r2;
        java.lang.AssertionError $r3;

        $r1 = <android.util.Xml$XmlSerializerFactory: org.xmlpull.v1.XmlPullParserFactory instance>;

     label1:
        $r0 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public static void parse(java.io.InputStream, android.util.Xml$Encoding, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.io.InputStream $r0;
        android.util.Xml$Encoding $r1;
        org.xml.sax.ContentHandler $r2;
        org.apache.harmony.xml.ExpatReader $r3, r8;
        org.xml.sax.InputSource $r4, r9;
        java.lang.String $r5;
        java.io.IOException $r6;
        java.lang.AssertionError r10;
        org.xml.sax.XMLReader r11;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: android.util.Xml$Encoding;

        $r2 := @parameter2: org.xml.sax.ContentHandler;

        r8 = new org.apache.harmony.xml.ExpatReader;

        $r3 = r8;

     label1:
        specialinvoke r8.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r11 = (org.xml.sax.XMLReader) $r3;

        interfaceinvoke r11.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r2);

     label2:
        r9 = new org.xml.sax.InputSource;

     label3:
        $r4 = r9;

        specialinvoke r9.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r0);

        $r5 = $r1.<android.util.Xml$Encoding: java.lang.String expatName>;

        virtualinvoke $r4.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>($r5);

        r11 = (org.xml.sax.XMLReader) $r3;

        interfaceinvoke r11.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r10 = new java.lang.AssertionError;

        specialinvoke r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw r10;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public static void parse(java.io.Reader, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.io.Reader $r0;
        org.xml.sax.ContentHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2, r4;
        org.xml.sax.InputSource r5;
        org.xml.sax.XMLReader r6;

        $r0 := @parameter0: java.io.Reader;

        $r1 := @parameter1: org.xml.sax.ContentHandler;

        r4 = new org.apache.harmony.xml.ExpatReader;

        $r2 = r4;

        specialinvoke r4.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r6 = (org.xml.sax.XMLReader) $r2;

        interfaceinvoke r6.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r1);

        r5 = new org.xml.sax.InputSource;

        specialinvoke r5.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r0);

        r6 = (org.xml.sax.XMLReader) $r2;

        interfaceinvoke r6.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r5);

        return;
    }

    public static void parse(java.lang.String, org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        org.xml.sax.ContentHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2, r7;
        org.xml.sax.InputSource $r4, r9;
        java.io.IOException $r5;
        java.io.StringReader r8;
        java.lang.AssertionError r10;
        org.xml.sax.XMLReader r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.xml.sax.ContentHandler;

        r7 = new org.apache.harmony.xml.ExpatReader;

        $r2 = r7;

     label1:
        specialinvoke r7.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r11 = (org.xml.sax.XMLReader) $r2;

        interfaceinvoke r11.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r1);

     label2:
        r9 = new org.xml.sax.InputSource;

        $r4 = r9;

        r8 = new java.io.StringReader;

     label3:
        specialinvoke r8.<java.io.StringReader: void <init>(java.lang.String)>($r0);

        specialinvoke r9.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r8);

        r11 = (org.xml.sax.XMLReader) $r2;

        interfaceinvoke r11.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r10 = new java.lang.AssertionError;

        specialinvoke r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw r10;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
}
