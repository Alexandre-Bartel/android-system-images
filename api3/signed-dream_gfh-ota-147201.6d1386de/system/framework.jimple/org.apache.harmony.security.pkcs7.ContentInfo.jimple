public class org.apache.harmony.security.pkcs7.ContentInfo extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    public static final int[] DATA;
    public static final int[] DIGESTED_DATA;
    public static final int[] ENCRYPTED_DATA;
    public static final int[] ENVELOPED_DATA;
    public static final int[] SIGNED_AND_ENVELOPED_DATA;
    public static final int[] SIGNED_DATA;
    private java.lang.Object content;
    private byte[] encoding;
    private int[] oid;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Explicit $r0;
        int[] $r1;
        org.apache.harmony.security.pkcs7.ContentInfo$1 $r2;
        org.apache.harmony.security.asn1.ASN1Type[] $r3;
        org.apache.harmony.security.asn1.ASN1Oid $r4;
        org.apache.harmony.security.asn1.ASN1Any $r5;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 840;

        $r1[3] = 113549;

        $r1[4] = 1;

        $r1[5] = 7;

        $r1[6] = 1;

        <org.apache.harmony.security.pkcs7.ContentInfo: int[] DATA> = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 840;

        $r1[3] = 113549;

        $r1[4] = 1;

        $r1[5] = 7;

        $r1[6] = 2;

        <org.apache.harmony.security.pkcs7.ContentInfo: int[] SIGNED_DATA> = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 840;

        $r1[3] = 113549;

        $r1[4] = 1;

        $r1[5] = 7;

        $r1[6] = 3;

        <org.apache.harmony.security.pkcs7.ContentInfo: int[] ENVELOPED_DATA> = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 840;

        $r1[3] = 113549;

        $r1[4] = 1;

        $r1[5] = 7;

        $r1[6] = 4;

        <org.apache.harmony.security.pkcs7.ContentInfo: int[] SIGNED_AND_ENVELOPED_DATA> = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 840;

        $r1[3] = 113549;

        $r1[4] = 1;

        $r1[5] = 7;

        $r1[6] = 5;

        <org.apache.harmony.security.pkcs7.ContentInfo: int[] DIGESTED_DATA> = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 840;

        $r1[3] = 113549;

        $r1[4] = 1;

        $r1[5] = 7;

        $r1[6] = 6;

        <org.apache.harmony.security.pkcs7.ContentInfo: int[] ENCRYPTED_DATA> = $r1;

        $r2 = new org.apache.harmony.security.pkcs7.ContentInfo$1;

        $r3 = newarray (org.apache.harmony.security.asn1.ASN1Type)[2];

        $r4 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        $r3[0] = $r4;

        $r0 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r5 = staticinvoke <org.apache.harmony.security.asn1.ASN1Any: org.apache.harmony.security.asn1.ASN1Any getInstance()>();

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r5);

        $r3[1] = $r0;

        specialinvoke $r2.<org.apache.harmony.security.pkcs7.ContentInfo$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r3);

        <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r2;

        return;
    }

    public void <init>(int[], java.lang.Object)
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        int[] $r1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid> = $r1;

        $r0.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content> = $r2;

        return;
    }

    private void <init>(int[], java.lang.Object, byte[])
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        int[] $r1;
        java.lang.Object $r2;
        byte[] $r3;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid> = $r1;

        $r0.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content> = $r2;

        $r0.<org.apache.harmony.security.pkcs7.ContentInfo: byte[] encoding> = $r3;

        return;
    }

    void <init>(int[], java.lang.Object, byte[], org.apache.harmony.security.pkcs7.ContentInfo$1)
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        int[] $r1;
        java.lang.Object $r2;
        byte[] $r3;
        org.apache.harmony.security.pkcs7.ContentInfo$1 $r4;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: org.apache.harmony.security.pkcs7.ContentInfo$1;

        specialinvoke $r0.<org.apache.harmony.security.pkcs7.ContentInfo: void <init>(int[],java.lang.Object,byte[])>($r1, $r2, $r3);

        return;
    }

    static int[] access$000(org.apache.harmony.security.pkcs7.ContentInfo)
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        int[] r1;

        $r0 := @parameter0: org.apache.harmony.security.pkcs7.ContentInfo;

        r1 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid>;

        return r1;
    }

    static java.lang.Object access$100(org.apache.harmony.security.pkcs7.ContentInfo)
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        java.lang.Object r1;

        $r0 := @parameter0: org.apache.harmony.security.pkcs7.ContentInfo;

        r1 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content>;

        return r1;
    }

    public java.lang.Object getContent()
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        r1 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content>;

        return r1;
    }

    public int[] getContentType()
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        int[] r1;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        r1 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid>;

        return r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Sequence $r2;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        $r1 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: byte[] encoding>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r0);

        $r0.<org.apache.harmony.security.pkcs7.ContentInfo: byte[] encoding> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: byte[] encoding>;

        return $r1;
    }

    public org.apache.harmony.security.pkcs7.SignedData getSignedData()
    {
        int[] $r0, $r2;
        boolean $z0;
        org.apache.harmony.security.pkcs7.ContentInfo $r1;
        java.lang.Object $r3;
        org.apache.harmony.security.pkcs7.SignedData $r4;

        $r1 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        $r2 = $r1.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid>;

        $r0 = <org.apache.harmony.security.pkcs7.ContentInfo: int[] SIGNED_DATA>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r2, $r0);

        if $z0 == 0 goto label1;

        $r3 = $r1.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content>;

        $r4 = (org.apache.harmony.security.pkcs7.SignedData) $r3;

        return $r4;

     label1:
        return null;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.security.pkcs7.ContentInfo $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        int[] $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.security.pkcs7.ContentInfo;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("==== ContentInfo:");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n== ContentType (OID): ");

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r2 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: int[] oid>;

        $i1 = $r2[$i0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n== Content: ");

        $r3 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content>;

        if $r3 == null goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r3 = $r0.<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object content>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n== Content End");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n==== ContentInfo End\n");

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
