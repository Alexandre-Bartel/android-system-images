public final class android.os.Bundle extends java.lang.Object implements android.os.Parcelable, java.lang.Cloneable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final android.os.Bundle EMPTY;
    private static final java.lang.String LOG_TAG;
    private java.lang.ClassLoader mClassLoader;
    private boolean mFdsKnown;
    private boolean mHasFds;
    java.util.Map mMap;
    android.os.Parcel mParcelledData;

    static void <clinit>()
    {
        java.util.Map $r0;
        android.os.Bundle $r1;
        java.util.HashMap $r2;
        android.os.Bundle$1 $r3;

        <android.os.Bundle: java.lang.String LOG_TAG> = "Bundle";

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        <android.os.Bundle: android.os.Bundle EMPTY> = $r1;

        $r1 = <android.os.Bundle: android.os.Bundle EMPTY>;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        $r1.<android.os.Bundle: java.util.Map mMap> = $r0;

        $r3 = new android.os.Bundle$1;

        specialinvoke $r3.<android.os.Bundle$1: void <init>()>();

        <android.os.Bundle: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }

    public void <init>()
    {
        android.os.Bundle $r0;
        java.util.HashMap $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;

        $r0 := @this: android.os.Bundle;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = null;

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

        $r0.<android.os.Bundle: boolean mHasFds> = 0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = $r1;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r0.<android.os.Bundle: java.lang.ClassLoader mClassLoader> = $r3;

        return;
    }

    public void <init>(int)
    {
        android.os.Bundle $r0;
        int $i0;
        java.util.HashMap $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;

        $r0 := @this: android.os.Bundle;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = null;

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

        $r0.<android.os.Bundle: boolean mHasFds> = 0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i0);

        $r0.<android.os.Bundle: java.util.Map mMap> = $r1;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r0.<android.os.Bundle: java.lang.ClassLoader mClassLoader> = $r3;

        return;
    }

    public void <init>(android.os.Bundle)
    {
        android.os.Bundle $r0, $r1;
        android.os.Parcel $r2, $r3, $r4;
        int $i0;
        java.util.Map $r5;
        java.util.HashMap $r6;
        boolean $z0;
        java.lang.ClassLoader $r7;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = null;

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

        $r0.<android.os.Bundle: boolean mHasFds> = 0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        $r2 = $r1.<android.os.Bundle: android.os.Parcel mParcelledData>;

        if $r2 == null goto label3;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = $r2;

        $r2 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $r3 = $r1.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $r4 = $r1.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r4.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r2.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r3, 0, $i0);

        $r2 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

     label1:
        $r5 = $r1.<android.os.Bundle: java.util.Map mMap>;

        if $r5 == null goto label4;

        $r6 = new java.util.HashMap;

        $r5 = $r1.<android.os.Bundle: java.util.Map mMap>;

        specialinvoke $r6.<java.util.HashMap: void <init>(java.util.Map)>($r5);

        $r0.<android.os.Bundle: java.util.Map mMap> = $r6;

     label2:
        $z0 = $r1.<android.os.Bundle: boolean mHasFds>;

        $r0.<android.os.Bundle: boolean mHasFds> = $z0;

        $z0 = $r1.<android.os.Bundle: boolean mFdsKnown>;

        $r0.<android.os.Bundle: boolean mFdsKnown> = $z0;

        $r7 = $r1.<android.os.Bundle: java.lang.ClassLoader mClassLoader>;

        $r0.<android.os.Bundle: java.lang.ClassLoader mClassLoader> = $r7;

        return;

     label3:
        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

        goto label1;

     label4:
        $r0.<android.os.Bundle: java.util.Map mMap> = null;

        goto label2;
    }

    void <init>(android.os.Parcel)
    {
        android.os.Bundle $r0;
        android.os.Parcel $r1;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = null;

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

        $r0.<android.os.Bundle: boolean mHasFds> = 0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        virtualinvoke $r0.<android.os.Bundle: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        android.os.Bundle $r0;
        java.lang.ClassLoader $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = null;

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

        $r0.<android.os.Bundle: boolean mHasFds> = 0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.os.Bundle: java.util.Map mMap> = $r2;

        $r0.<android.os.Bundle: java.lang.ClassLoader mClassLoader> = $r1;

        return;
    }

    private void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.ClassCastException)
    {
        android.os.Bundle $r0;
        java.lang.String $r1, $r3;
        java.lang.Object $r2;
        java.lang.ClassCastException $r4;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.ClassCastException;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r2, $r3, "<null>", $r4);

        return;
    }

    private void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.ClassCastException)
    {
        android.os.Bundle $r0;
        java.lang.String $r1, $r3;
        java.lang.Object $r2, $r4;
        java.lang.ClassCastException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.Object;

        $r5 := @parameter4: java.lang.ClassCastException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but value was a ");

        $r7 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  The default value ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was returned.");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", $r1);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Bundle", "Attempt to cast generated internal exception:", $r5);

        return;
    }

    public void clear()
    {
        android.os.Bundle $r0;
        java.util.Map $r1;

        $r0 := @this: android.os.Bundle;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r1 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r0.<android.os.Bundle: boolean mHasFds> = 0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        return;
    }

    public java.lang.Object clone()
    {
        android.os.Bundle $r0, $r1;

        $r0 := @this: android.os.Bundle;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>(android.os.Bundle)>($r0);

        return $r1;
    }

    public boolean containsKey(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public int describeContents()
    {
        android.os.Bundle $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.os.Bundle;

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label1;

        $b0 = 0 | 1;

        return $b0;

     label1:
        return 0;
    }

    public java.lang.Object get(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        return $r2;
    }

    public boolean getBoolean(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>($r1, 0);

        return $z0;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $z0;

     label1:
        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Boolean", $r4, $r5);

        return $z0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean[] getBooleanArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        boolean[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (boolean[]) $r2;

     label2:
        $r4 = (boolean[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "byte[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public android.os.Bundle getBundle(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r0 = (android.os.Bundle) $r3;

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "Bundle", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public byte getByte(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Byte $r2;
        byte $b0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>($r1, 0);

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

    public java.lang.Byte getByte(java.lang.String, byte)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        byte $b0;
        java.lang.ClassCastException $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.Byte $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $b0 := @parameter1: byte;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label1;

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r5;

     label1:
        $r5 = (java.lang.Byte) $r4;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r4, "Byte", $r5, $r2);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r5;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public byte[] getByteArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        byte[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (byte[]) $r2;

     label2:
        $r4 = (byte[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "byte[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public char getChar(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        char $c0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $c0 = virtualinvoke $r0.<android.os.Bundle: char getChar(java.lang.String,char)>($r1, 0);

        return $c0;
    }

    public char getChar(java.lang.String, char)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        char $c0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Character $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $c0;

     label1:
        $r4 = (java.lang.Character) $r3;

        $c0 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

     label2:
        return $c0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Character", $r4, $r5);

        return $c0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public char[] getCharArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        char[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (char[]) $r2;

     label2:
        $r4 = (char[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "char[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.CharSequence getCharSequence(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.lang.CharSequence $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (java.lang.CharSequence) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "CharSequence", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double getDouble(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        double $d0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $d0 = virtualinvoke $r0.<android.os.Bundle: double getDouble(java.lang.String,double)>($r1, 0.0);

        return $d0;
    }

    public double getDouble(java.lang.String, double)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        double $d0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Double $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $d0;

     label1:
        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Double", $r4, $r5);

        return $d0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        double[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (double[]) $r2;

     label2:
        $r4 = (double[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "double[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public float getFloat(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        float $f0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $f0 = virtualinvoke $r0.<android.os.Bundle: float getFloat(java.lang.String,float)>($r1, 0.0F);

        return $f0;
    }

    public float getFloat(java.lang.String, float)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        float $f0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Float $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $f0;

     label1:
        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

     label2:
        return $f0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Float", $r4, $r5);

        return $f0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public float[] getFloatArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        float[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (float[]) $r2;

     label2:
        $r4 = (float[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "float[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public android.os.IBinder getIBinder(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        android.os.IBinder $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (android.os.IBinder) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "IBinder", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int getInt(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $i0 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String,int)>($r1, 0);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        int $i0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $i0;

     label1:
        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Integer", $r4, $r5);

        return $i0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int[] getIntArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        int[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (int[]) $r2;

     label2:
        $r4 = (int[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "int[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.util.ArrayList getIntegerArrayList(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.util.ArrayList $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (java.util.ArrayList) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "ArrayList<Integer>", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long getLong(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        long $l0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $l0 = virtualinvoke $r0.<android.os.Bundle: long getLong(java.lang.String,long)>($r1, 0L);

        return $l0;
    }

    public long getLong(java.lang.String, long)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        long $l0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Long $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $l0;

     label1:
        $r4 = (java.lang.Long) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label2:
        return $l0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Long", $r4, $r5);

        return $l0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long[] getLongArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        long[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (long[]) $r2;

     label2:
        $r4 = (long[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "long[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public android.os.Parcelable getParcelable(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        android.os.Parcelable $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (android.os.Parcelable) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "Parcelable", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public android.os.Parcelable[] getParcelableArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        android.os.Parcelable[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (android.os.Parcelable[]) $r2;

     label2:
        $r4 = (android.os.Parcelable[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "Parcelable[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.util.ArrayList getParcelableArrayList(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.util.ArrayList $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (java.util.ArrayList) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "ArrayList", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.io.Serializable getSerializable(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.io.Serializable $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (java.io.Serializable) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "Serializable", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public short getShort(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        short $s0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $s0 = virtualinvoke $r0.<android.os.Bundle: short getShort(java.lang.String,short)>($r1, 0);

        return $s0;
    }

    public short getShort(java.lang.String, short)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        short $s0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Short $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $s0 := @parameter1: short;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return $s0;

     label1:
        $r4 = (java.lang.Short) $r3;

        $s0 = virtualinvoke $r4.<java.lang.Short: short shortValue()>();

     label2:
        return $s0;

     label3:
        $r5 := @caughtexception;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>($r1, $r3, "Short", $r4, $r5);

        return $s0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public short[] getShortArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        short[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (short[]) $r2;

     label2:
        $r4 = (short[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "short[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public android.util.SparseArray getSparseParcelableArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        android.util.SparseArray $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (android.util.SparseArray) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "SparseArray", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r1 = (java.lang.String) $r3;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "String", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        java.lang.String[] $r4;
        java.lang.ClassCastException $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = (java.lang.String[]) $r2;

     label2:
        $r4 = (java.lang.String[]) $r4;

        return $r4;

     label3:
        $r5 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r2, "String[]", $r5);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.util.ArrayList getStringArrayList(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.ClassCastException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.util.ArrayList $r5;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = (java.util.ArrayList) $r3;

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        specialinvoke $r0.<android.os.Bundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>($r1, $r3, "ArrayList<String>", $r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean hasFileDescriptors()
    {
        android.os.Bundle $r0;
        boolean $z0, $z1;
        android.os.Parcel $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;
        android.os.Parcelable $r7;
        int $i0, $i1;
        android.os.Parcelable[] $r8;
        android.util.SparseArray $r9;
        java.util.ArrayList $r10;

        $r0 := @this: android.os.Bundle;

        $z0 = $r0.<android.os.Bundle: boolean mFdsKnown>;

        if $z0 != 0 goto label02;

        $z0 = 0;

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label03;

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $z1 = virtualinvoke $r1.<android.os.Parcel: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label01;

        $z0 = 1;

     label01:
        $r0.<android.os.Bundle: boolean mHasFds> = $z0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

     label02:
        $z0 = $r0.<android.os.Bundle: boolean mHasFds>;

        return $z0;

     label03:
        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        if $z0 != 0 goto label01;

        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label01;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = $r5 instanceof android.os.Parcelable;

        if $z1 == 0 goto label05;

        $r7 = (android.os.Parcelable) $r5;

        $i0 = interfaceinvoke $r7.<android.os.Parcelable: int describeContents()>();

        $i0 = $i0 & 1;

        if $i0 == 0 goto label04;

        $z0 = 1;

        goto label01;

     label05:
        $z1 = $r5 instanceof android.os.Parcelable[];

        if $z1 == 0 goto label08;

        $r8 = (android.os.Parcelable[]) $r5;

        $r8 = (android.os.Parcelable[]) $r8;

        $i0 = lengthof $r8;

        $i0 = $i0 - 1;

     label06:
        if $i0 < 0 goto label04;

        $r7 = $r8[$i0];

        $i1 = interfaceinvoke $r7.<android.os.Parcelable: int describeContents()>();

        $i1 = $i1 & 1;

        if $i1 == 0 goto label07;

        $z0 = 1;

        goto label04;

     label07:
        $i0 = $i0 + -1;

        goto label06;

     label08:
        $z1 = $r5 instanceof android.util.SparseArray;

        if $z1 == 0 goto label11;

        $r9 = (android.util.SparseArray) $r5;

        $i0 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        $i0 = $i0 - 1;

     label09:
        if $i0 < 0 goto label04;

        $r5 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r7 = (android.os.Parcelable) $r5;

        $i1 = interfaceinvoke $r7.<android.os.Parcelable: int describeContents()>();

        $i1 = $i1 & 1;

        if $i1 == 0 goto label10;

        $z0 = 1;

        goto label04;

     label10:
        $i0 = $i0 + -1;

        goto label09;

     label11:
        $z1 = $r5 instanceof java.util.ArrayList;

        if $z1 == 0 goto label04;

        $r10 = (java.util.ArrayList) $r5;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label04;

        $r5 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $z1 = $r5 instanceof android.os.Parcelable;

        if $z1 == 0 goto label04;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label12:
        if $i0 < 0 goto label04;

        $r5 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (android.os.Parcelable) $r5;

        if $r7 == null goto label13;

        $i1 = interfaceinvoke $r7.<android.os.Parcelable: int describeContents()>();

        $i1 = $i1 & 1;

        if $i1 == 0 goto label13;

        $z0 = 1;

        goto label04;

     label13:
        $i0 = $i0 + -1;

        goto label12;
    }

    public boolean isEmpty()
    {
        android.os.Bundle $r0;
        boolean $z0;
        java.util.Map $r1;

        $r0 := @this: android.os.Bundle;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r1 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        android.os.Bundle $r0;
        java.util.Set $r1;
        java.util.Map $r2;

        $r0 := @this: android.os.Bundle;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        return $r1;
    }

    public void putAll(android.os.Bundle)
    {
        android.os.Bundle $r0, $r1;
        java.util.Map $r2, $r3;
        boolean $z0, $z1;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: android.os.Bundle;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        virtualinvoke $r1.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = $r1.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>($r3);

        $z0 = $r0.<android.os.Bundle: boolean mHasFds>;

        $z1 = $r1.<android.os.Bundle: boolean mHasFds>;

        $z0 = $z0 | $z1;

        $r0.<android.os.Bundle: boolean mHasFds> = $z0;

        $z0 = $r0.<android.os.Bundle: boolean mFdsKnown>;

        if $z0 == 0 goto label2;

        $z0 = $r1.<android.os.Bundle: boolean mFdsKnown>;

        if $z0 == 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<android.os.Bundle: boolean mFdsKnown> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void putBoolean(java.lang.String, boolean)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Boolean $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putBooleanArray(java.lang.String, boolean[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        boolean[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: boolean[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putBundle(java.lang.String, android.os.Bundle)
    {
        android.os.Bundle $r0, $r2;
        java.lang.String $r1;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putByte(java.lang.String, byte)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        byte $b0;
        java.util.Map $r2;
        java.lang.Byte $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $b0 := @parameter1: byte;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putByteArray(java.lang.String, byte[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putChar(java.lang.String, char)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        char $c0;
        java.util.Map $r2;
        java.lang.Character $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putCharArray(java.lang.String, char[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        char[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: char[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.CharSequence $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.CharSequence;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putDouble(java.lang.String, double)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        double $d0;
        java.util.Map $r2;
        java.lang.Double $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putDoubleArray(java.lang.String, double[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        double[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: double[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putFloat(java.lang.String, float)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        float $f0;
        java.util.Map $r2;
        java.lang.Float $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putFloatArray(java.lang.String, float[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        float[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: float[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putIBinder(java.lang.String, android.os.IBinder)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        android.os.IBinder $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.IBinder;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putInt(java.lang.String, int)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        int $i0;
        java.util.Map $r2;
        java.lang.Integer $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putIntArray(java.lang.String, int[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        int[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: int[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putIntegerArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putLong(java.lang.String, long)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        long $l0;
        java.util.Map $r2;
        java.lang.Long $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putLongArray(java.lang.String, long[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        long[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: long[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putParcelable(java.lang.String, android.os.Parcelable)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        android.os.Parcelable $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Parcelable;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r0.<android.os.Bundle: boolean mFdsKnown> = 0;

        return;
    }

    public void putParcelableArray(java.lang.String, android.os.Parcelable[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        android.os.Parcelable[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Parcelable[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r0.<android.os.Bundle: boolean mFdsKnown> = 0;

        return;
    }

    public void putParcelableArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r0.<android.os.Bundle: boolean mFdsKnown> = 0;

        return;
    }

    public void putSerializable(java.lang.String, java.io.Serializable)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.io.Serializable $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.Serializable;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putShort(java.lang.String, short)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        short $s0;
        java.util.Map $r2;
        java.lang.Short $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $s0 := @parameter1: short;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void putShortArray(java.lang.String, short[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        short[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: short[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putSparseParcelableArray(java.lang.String, android.util.SparseArray)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        android.util.SparseArray $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.util.SparseArray;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r0.<android.os.Bundle: boolean mFdsKnown> = 0;

        return;
    }

    public void putString(java.lang.String, java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1, $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putStringArray(java.lang.String, java.lang.String[])
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void putStringArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r3 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.os.Bundle $r0;
        android.os.Parcel $r1;
        boolean $z0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: android.os.Parcel;

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = $r1;

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $z0 = virtualinvoke $r1.<android.os.Parcel: boolean hasFileDescriptors()>();

        $r0.<android.os.Bundle: boolean mHasFds> = $z0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        return;
    }

    public void remove(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r2 = $r0.<android.os.Bundle: java.util.Map mMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public void setClassLoader(java.lang.ClassLoader)
    {
        android.os.Bundle $r0;
        java.lang.ClassLoader $r1;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: java.lang.ClassLoader;

        $r0.<android.os.Bundle: java.lang.ClassLoader mClassLoader> = $r1;

        return;
    }

    public int size()
    {
        android.os.Bundle $r0;
        int $i0;
        java.util.Map $r1;

        $r0 := @this: android.os.Bundle;

        virtualinvoke $r0.<android.os.Bundle: void unparcel()>();

        $r1 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        android.os.Bundle $r0;
        android.os.Parcel $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r3;
        java.util.Map $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.os.Bundle;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bundle[mParcelledData.dataSize=");

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataSize()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        exitmonitor $r0;

        return $r3;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bundle[");

        $r4 = $r0.<android.os.Bundle: java.util.Map mMap>;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void unparcel()
    {
        android.os.Bundle $r0, $r3;
        android.os.Parcel $r1;
        java.lang.ClassLoader $r2;
        java.util.Map $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        $r0 := @this: android.os.Bundle;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

     label2:
        if $r1 != null goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $r2 = $r0.<android.os.Bundle: java.lang.ClassLoader mClassLoader>;

        $r3 = virtualinvoke $r1.<android.os.Parcel: android.os.Bundle readBundleUnpacked(java.lang.ClassLoader)>($r2);

        $r4 = $r3.<android.os.Bundle: java.util.Map mMap>;

        $r0.<android.os.Bundle: java.util.Map mMap> = $r4;

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $z0 = virtualinvoke $r1.<android.os.Parcel: boolean hasFileDescriptors()>();

        $r0.<android.os.Bundle: boolean mHasFds> = $z0;

        $r0.<android.os.Bundle: boolean mFdsKnown> = 1;

        $r1 = $r0.<android.os.Bundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        $r0.<android.os.Bundle: android.os.Parcel mParcelledData> = null;

     label5:
        goto label3;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.Bundle $r0;
        android.os.Parcel $r1;
        int $i0;

        $r0 := @this: android.os.Bundle;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r0);

        return;
    }
}
