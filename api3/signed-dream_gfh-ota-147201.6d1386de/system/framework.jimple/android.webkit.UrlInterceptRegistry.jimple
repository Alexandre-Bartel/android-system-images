public final class android.webkit.UrlInterceptRegistry extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private static boolean mDisabled;
    private static java.util.LinkedList mHandlerList;

    static void <clinit>()
    {
        <android.webkit.UrlInterceptRegistry: java.lang.String LOGTAG> = "intercept";

        <android.webkit.UrlInterceptRegistry: boolean mDisabled> = 0;

        return;
    }

    public void <init>()
    {
        android.webkit.UrlInterceptRegistry $r0;

        $r0 := @this: android.webkit.UrlInterceptRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.LinkedList getHandlers()
    {
        java.util.LinkedList $r0;
        java.lang.Throwable $r1;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        $r0 = <android.webkit.UrlInterceptRegistry: java.util.LinkedList mHandlerList>;

        if $r0 != null goto label2;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        <android.webkit.UrlInterceptRegistry: java.util.LinkedList mHandlerList> = $r0;

     label2:
        $r0 = <android.webkit.UrlInterceptRegistry: java.util.LinkedList mHandlerList>;

     label3:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static android.webkit.PluginData getPluginData(java.lang.String, java.util.Map)
    {
        java.lang.String $r0;
        java.util.Map $r1;
        boolean $z0;
        android.webkit.PluginData $r2;
        java.util.LinkedList $r3;
        java.util.ListIterator $r4;
        java.lang.Object $r5;
        android.webkit.UrlInterceptHandler $r6;
        java.lang.Throwable $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        $z0 = staticinvoke <android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>();

     label2:
        if $z0 == 0 goto label4;

        $r2 = null;

     label3:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return $r2;

     label4:
        $r3 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        $r4 = virtualinvoke $r3.<java.util.AbstractList: java.util.ListIterator listIterator()>();

     label5:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.webkit.UrlInterceptHandler) $r5;

        $r2 = interfaceinvoke $r6.<android.webkit.UrlInterceptHandler: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>($r0, $r1);

     label6:
        if $r2 == null goto label5;

        goto label3;

     label7:
        $r2 = null;

        goto label3;

     label8:
        $r7 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label6 with label8;
    }

    public static android.webkit.CacheManager$CacheResult getSurrogate(java.lang.String, java.util.Map)
    {
        java.lang.String $r0;
        java.util.Map $r1;
        boolean $z0;
        android.webkit.CacheManager$CacheResult $r2;
        java.util.LinkedList $r3;
        java.util.ListIterator $r4;
        java.lang.Object $r5;
        android.webkit.UrlInterceptHandler $r6;
        java.lang.Throwable $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        $z0 = staticinvoke <android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>();

     label2:
        if $z0 == 0 goto label4;

        $r2 = null;

     label3:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return $r2;

     label4:
        $r3 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        $r4 = virtualinvoke $r3.<java.util.AbstractList: java.util.ListIterator listIterator()>();

     label5:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.webkit.UrlInterceptHandler) $r5;

        $r2 = interfaceinvoke $r6.<android.webkit.UrlInterceptHandler: android.webkit.CacheManager$CacheResult service(java.lang.String,java.util.Map)>($r0, $r1);

     label6:
        if $r2 == null goto label5;

        goto label3;

     label7:
        $r2 = null;

        goto label3;

     label8:
        $r7 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label6 with label8;
    }

    public static boolean registerHandler(android.webkit.UrlInterceptHandler)
    {
        android.webkit.UrlInterceptHandler $r0;
        java.util.LinkedList $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: android.webkit.UrlInterceptHandler;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        $r1 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean contains(java.lang.Object)>($r0);

        if $z0 != 0 goto label4;

        $r1 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        virtualinvoke $r1.<java.util.LinkedList: void addFirst(java.lang.Object)>($r0);

     label2:
        $z0 = 1;

     label3:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public static void setUrlInterceptDisabled(boolean)
    {
        boolean $z0;
        java.lang.Throwable $r0;

        $z0 := @parameter0: boolean;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        <android.webkit.UrlInterceptRegistry: boolean mDisabled> = $z0;

     label2:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean unregisterHandler(android.webkit.UrlInterceptHandler)
    {
        android.webkit.UrlInterceptHandler $r0;
        java.util.LinkedList $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: android.webkit.UrlInterceptHandler;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        $r1 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean remove(java.lang.Object)>($r0);

     label2:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return $z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean urlInterceptDisabled()
    {
        java.lang.Throwable $r0;
        boolean z0;

        entermonitor class "android/webkit/UrlInterceptRegistry";

     label1:
        z0 = <android.webkit.UrlInterceptRegistry: boolean mDisabled>;

     label2:
        exitmonitor class "android/webkit/UrlInterceptRegistry";

        return z0;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "android/webkit/UrlInterceptRegistry";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
