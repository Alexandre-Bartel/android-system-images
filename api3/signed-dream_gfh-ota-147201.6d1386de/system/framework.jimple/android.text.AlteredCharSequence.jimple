public class android.text.AlteredCharSequence extends java.lang.Object implements android.text.GetChars, java.lang.CharSequence
{
    private char[] mChars;
    private int mEnd;
    private java.lang.CharSequence mSource;
    private int mStart;

    private void <init>(java.lang.CharSequence, char[], int, int)
    {
        android.text.AlteredCharSequence $r0;
        java.lang.CharSequence $r1;
        char[] $r2;
        int $i0, $i1;

        $r0 := @this: android.text.AlteredCharSequence;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.AlteredCharSequence: java.lang.CharSequence mSource> = $r1;

        $r0.<android.text.AlteredCharSequence: char[] mChars> = $r2;

        $r0.<android.text.AlteredCharSequence: int mStart> = $i0;

        $r0.<android.text.AlteredCharSequence: int mEnd> = $i1;

        return;
    }

    void <init>(java.lang.CharSequence, char[], int, int, android.text.AlteredCharSequence$1)
    {
        android.text.AlteredCharSequence $r0;
        java.lang.CharSequence $r1;
        char[] $r2;
        int $i0, $i1;
        android.text.AlteredCharSequence$1 $r3;

        $r0 := @this: android.text.AlteredCharSequence;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: android.text.AlteredCharSequence$1;

        specialinvoke $r0.<android.text.AlteredCharSequence: void <init>(java.lang.CharSequence,char[],int,int)>($r1, $r2, $i0, $i1);

        return;
    }

    public static android.text.AlteredCharSequence make(java.lang.CharSequence, char[], int, int)
    {
        java.lang.CharSequence $r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;
        android.text.AlteredCharSequence$AlteredSpanned r3;
        android.text.AlteredCharSequence r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = $r0 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        r3 = new android.text.AlteredCharSequence$AlteredSpanned;

        specialinvoke r3.<android.text.AlteredCharSequence$AlteredSpanned: void <init>(java.lang.CharSequence,char[],int,int,android.text.AlteredCharSequence$1)>($r0, $r1, $i0, $i1, null);

        return r3;

     label1:
        r4 = new android.text.AlteredCharSequence;

        specialinvoke r4.<android.text.AlteredCharSequence: void <init>(java.lang.CharSequence,char[],int,int)>($r0, $r1, $i0, $i1);

        return r4;
    }

    public char charAt(int)
    {
        android.text.AlteredCharSequence $r0;
        int $i0, $i2;
        char $c1;
        char[] $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.text.AlteredCharSequence;

        $i0 := @parameter0: int;

        $i2 = $r0.<android.text.AlteredCharSequence: int mStart>;

        if $i0 < $i2 goto label1;

        $i2 = $r0.<android.text.AlteredCharSequence: int mEnd>;

        if $i0 >= $i2 goto label1;

        $r1 = $r0.<android.text.AlteredCharSequence: char[] mChars>;

        $i2 = $r0.<android.text.AlteredCharSequence: int mStart>;

        $i0 = $i0 - $i2;

        $c1 = $r1[$i0];

        return $c1;

     label1:
        $r2 = $r0.<android.text.AlteredCharSequence: java.lang.CharSequence mSource>;

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c1;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.AlteredCharSequence $r0;
        char[] $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r2;

        $r0 := @this: android.text.AlteredCharSequence;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 := @parameter2: char[];

        $i0 := @parameter3: int;

        $r2 = $r0.<android.text.AlteredCharSequence: java.lang.CharSequence mSource>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r2, $i1, $i2, $r1, $i0);

        $i3 = $r0.<android.text.AlteredCharSequence: int mStart>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i1);

        $i3 = $r0.<android.text.AlteredCharSequence: int mEnd>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        if $i1 <= $i2 goto label1;

        $r3 = $r0.<android.text.AlteredCharSequence: char[] mChars>;

        $i3 = $r0.<android.text.AlteredCharSequence: int mStart>;

        $i3 = $i1 - $i3;

        $i1 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i3, $r1, $i0, $i1);

        return;

     label1:
        return;
    }

    public int length()
    {
        android.text.AlteredCharSequence $r0;
        int $i0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.AlteredCharSequence;

        $r1 = $r0.<android.text.AlteredCharSequence: java.lang.CharSequence mSource>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.AlteredCharSequence $r0;
        int $i0, $i1, $i2;
        char[] $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.text.AlteredCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = $r0.<android.text.AlteredCharSequence: java.lang.CharSequence mSource>;

        $r2 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        $r1 = $r0.<android.text.AlteredCharSequence: char[] mChars>;

        $i1 = $r0.<android.text.AlteredCharSequence: int mStart>;

        $i1 = $i1 - $i0;

        $i2 = $r0.<android.text.AlteredCharSequence: int mEnd>;

        $i0 = $i2 - $i0;

        $r0 = staticinvoke <android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)>($r2, $r1, $i1, $i0);

        return $r0;
    }

    public java.lang.String toString()
    {
        android.text.AlteredCharSequence $r0;
        char[] $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.text.AlteredCharSequence;

        $i0 = virtualinvoke $r0.<android.text.AlteredCharSequence: int length()>();

        $r1 = newarray (char)[$i0];

        virtualinvoke $r0.<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>(0, $i0, $r1, 0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r1);

        return $r2;
    }

    void update(char[], int, int)
    {
        android.text.AlteredCharSequence $r0;
        char[] $r1;
        int $i0, $i1;

        $r0 := @this: android.text.AlteredCharSequence;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0.<android.text.AlteredCharSequence: char[] mChars> = $r1;

        $r0.<android.text.AlteredCharSequence: int mStart> = $i0;

        $r0.<android.text.AlteredCharSequence: int mEnd> = $i1;

        return;
    }
}
