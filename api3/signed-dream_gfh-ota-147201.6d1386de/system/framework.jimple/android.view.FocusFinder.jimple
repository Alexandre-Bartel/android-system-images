public class android.view.FocusFinder extends java.lang.Object
{
    private static java.lang.ThreadLocal tlFocusFinder;
    android.graphics.Rect mBestCandidateRect;
    android.graphics.Rect mFocusedRect;
    android.graphics.Rect mOtherRect;

    static void <clinit>()
    {
        android.view.FocusFinder$1 $r0;

        $r0 = new android.view.FocusFinder$1;

        specialinvoke $r0.<android.view.FocusFinder$1: void <init>()>();

        <android.view.FocusFinder: java.lang.ThreadLocal tlFocusFinder> = $r0;

        return;
    }

    private void <init>()
    {
        android.view.FocusFinder $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.view.FocusFinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect> = $r1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect> = $r1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect> = $r1;

        return;
    }

    void <init>(android.view.FocusFinder$1)
    {
        android.view.FocusFinder $r0;
        android.view.FocusFinder$1 $r1;

        $r0 := @this: android.view.FocusFinder;

        $r1 := @parameter0: android.view.FocusFinder$1;

        specialinvoke $r0.<android.view.FocusFinder: void <init>()>();

        return;
    }

    private android.view.View findNextFocus(android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder $r0;
        android.view.ViewGroup $r1;
        android.view.View $r2, $r6, $r8;
        android.graphics.Rect $r3, $r5, $r9;
        int $i0, $i1, $i2;
        java.util.ArrayList $r4;
        java.lang.Object $r7;
        boolean $z0;

        $r0 := @this: android.view.FocusFinder;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.Rect;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<android.view.View: java.util.ArrayList getFocusables(int)>($i0);

        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        lookupswitch($i0)
        {
            case 17: goto label4;
            case 33: goto label6;
            case 66: goto label5;
            case 130: goto label7;
            default: goto label1;
        };

     label1:
        $r6 = null;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label9;

        $r7 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r8 = (android.view.View) $r7;

        if $r8 == $r2 goto label3;

        if $r8 != $r1 goto label8;

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i1 = $i1 + 1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>($i1, 0);

        goto label1;

     label5:
        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i1 = $i1 + 1;

        $i1 = neg $i1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>($i1, 0);

        goto label1;

     label6:
        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $i1 = $i1 + 1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>(0, $i1);

        goto label1;

     label7:
        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $i1 = $i1 + 1;

        $i1 = neg $i1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>(0, $i1);

        goto label1;

     label8:
        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke $r8.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r5);

        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke $r1.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r8, $r5);

        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        $r9 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($i0, $r3, $r5, $r9);

        if $z0 == 0 goto label3;

        $r5 = $r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $r9 = $r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r9);

        $r6 = $r8;

        goto label3;

     label9:
        return $r6;
    }

    public static android.view.FocusFinder getInstance()
    {
        java.lang.Object $r0;
        java.lang.ThreadLocal $r1;
        android.view.FocusFinder $r2;

        $r1 = <android.view.FocusFinder: java.lang.ThreadLocal tlFocusFinder>;

        $r0 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.view.FocusFinder) $r0;

        return $r2;
    }

    private boolean isTouchCandidate(int, int, android.graphics.Rect, int)
    {
        android.view.FocusFinder $r0;
        int $i0, $i1, $i2;
        android.graphics.Rect $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.view.FocusFinder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $i2 := @parameter3: int;

        lookupswitch($i2)
        {
            case 17: goto label2;
            case 33: goto label6;
            case 66: goto label4;
            case 130: goto label8;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i2 = $r1.<android.graphics.Rect: int left>;

        if $i2 > $i0 goto label3;

        $i0 = $r1.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label3;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        if $i1 > $i0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i2 = $r1.<android.graphics.Rect: int left>;

        if $i2 < $i0 goto label5;

        $i0 = $r1.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label5;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        if $i1 > $i0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        $i2 = $r1.<android.graphics.Rect: int top>;

        if $i2 > $i1 goto label7;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i1 > $i0 goto label7;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label7;

        return 1;

     label7:
        return 0;

     label8:
        $i2 = $r1.<android.graphics.Rect: int top>;

        if $i2 < $i1 goto label9;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i1 > $i0 goto label9;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label9;

        return 1;

     label9:
        return 0;
    }

    static int majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0;
        android.graphics.Rect $r0, $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        $i0 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;
    }

    static int majorAxisDistanceRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        lookupswitch($i0)
        {
            case 17: goto label2;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r0.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;

     label4:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        return $i0;

     label5:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r0.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        return $i0;
    }

    static int majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0;
        android.graphics.Rect $r0, $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        $i0 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        return $i0;
    }

    static int majorAxisDistanceToFarEdgeRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        lookupswitch($i0)
        {
            case 17: goto label2;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r0.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;

     label4:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        return $i0;

     label5:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r0.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        return $i0;
    }

    static int minorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1, $i2;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        lookupswitch($i0)
        {
            case 17: goto label2;
            case 33: goto label3;
            case 66: goto label2;
            case 130: goto label3;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = virtualinvoke $r0.<android.graphics.Rect: int height()>();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        return $i0;

     label3:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = virtualinvoke $r0.<android.graphics.Rect: int width()>();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        return $i0;
    }

    boolean beamBeats(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder $r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r2, $r3;
        boolean $z0, $z1;

        $r0 := @this: android.view.FocusFinder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 := @parameter3: android.graphics.Rect;

        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r2);

        $z1 = virtualinvoke $r0.<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r3);

        if $z1 != 0 goto label1;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r3);

        if $z0 != 0 goto label3;

        return 1;

     label3:
        if $i0 == 17 goto label4;

        if $i0 != 66 goto label5;

     label4:
        return 1;

     label5:
        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r2);

        $i0 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r3);

        if $i1 >= $i0 goto label6;

        return 1;

     label6:
        return 0;
    }

    boolean beamsOverlap(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder $r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.view.FocusFinder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 := @parameter2: android.graphics.Rect;

        lookupswitch($i0)
        {
            case 17: goto label2;
            case 33: goto label4;
            case 66: goto label2;
            case 130: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label2:
        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        if $i0 < $i1 goto label3;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 > $i1 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i0 = $r2.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i0 < $i1 goto label5;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label5;

        return 1;

     label5:
        return 0;
    }

    public android.view.View findNearestTouchable(android.view.ViewGroup, int, int, int, int[])
    {
        android.view.FocusFinder $r0;
        android.view.ViewGroup $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r2;
        android.graphics.Rect $r3, $r8;
        java.util.ArrayList $r4;
        android.view.View $r5, $r10;
        android.content.Context $r6;
        android.view.ViewConfiguration $r7;
        java.lang.Object $r9;
        boolean $z0;

        $r0 := @this: android.view.FocusFinder;

        $r1 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 := @parameter4: int[];

        $r4 = virtualinvoke $r1.<android.view.View: java.util.ArrayList getTouchables()>();

        $i3 = 2147483647;

        $r5 = null;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r6 = $r1.<android.view.View: android.content.Context mContext>;

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r6);

        $i5 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledEdgeSlop()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r8 = $r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        $i6 = 0;

     label01:
        if $i6 >= $i4 goto label15;

        $r9 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r10 = (android.view.View) $r9;

        virtualinvoke $r10.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r8);

        virtualinvoke $r1.<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>($r10, $r8, 1, 1);

        $z0 = specialinvoke $r0.<android.view.FocusFinder: boolean isTouchCandidate(int,int,android.graphics.Rect,int)>($i0, $i1, $r8, $i2);

        if $z0 != 0 goto label03;

     label02:
        $i6 = $i6 + 1;

        goto label01;

     label03:
        $i7 = 2147483647;

        lookupswitch($i2)
        {
            case 17: goto label08;
            case 33: goto label10;
            case 66: goto label09;
            case 130: goto label11;
            default: goto label04;
        };

     label04:
        if $i7 >= $i5 goto label02;

        if $r5 == null goto label05;

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean contains(android.graphics.Rect)>($r8);

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r8.<android.graphics.Rect: boolean contains(android.graphics.Rect)>($r3);

        if $z0 != 0 goto label02;

        if $i7 >= $i3 goto label02;

     label05:
        $i3 = $i7;

        $r5 = $r10;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r8);

        lookupswitch($i2)
        {
            case 17: goto label07;
            case 33: goto label13;
            case 66: goto label12;
            case 130: goto label14;
            default: goto label06;
        };

     label06:
        goto label02;

     label07:
        $i7 = neg $i7;

        $r2[0] = $i7;

        goto label02;

     label08:
        $i7 = $r8.<android.graphics.Rect: int right>;

        $i7 = $i0 - $i7;

        $i7 = $i7 + 1;

        goto label04;

     label09:
        $i7 = $r8.<android.graphics.Rect: int left>;

        goto label04;

     label10:
        $i7 = $r8.<android.graphics.Rect: int bottom>;

        $i7 = $i1 - $i7;

        $i7 = $i7 + 1;

        goto label04;

     label11:
        $i7 = $r8.<android.graphics.Rect: int top>;

        goto label04;

     label12:
        $r2[0] = $i7;

        goto label02;

     label13:
        $i7 = neg $i7;

        $r2[1] = $i7;

        goto label02;

     label14:
        $r2[1] = $i7;

        goto label02;

     label15:
        return $r5;
    }

    public final android.view.View findNextFocus(android.view.ViewGroup, android.view.View, int)
    {
        android.view.FocusFinder $r0;
        android.view.ViewGroup $r1;
        android.view.View $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.graphics.Rect $r4;

        $r0 := @this: android.view.FocusFinder;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        if $r2 == null goto label4;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>($r1, $i0);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r3.<android.view.View: boolean isInTouchMode()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r3.<android.view.View: boolean isFocusableInTouchMode()>();

        if $z0 == 0 goto label2;

     label1:
        return $r3;

     label2:
        $r4 = $r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        virtualinvoke $r2.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r4);

        $r4 = $r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        virtualinvoke $r1.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r4);

     label3:
        $r4 = $r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        $r2 = specialinvoke $r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>($r1, $r2, $r4, $i0);

        return $r2;

     label4:
        lookupswitch($i0)
        {
            case 17: goto label6;
            case 33: goto label6;
            case 66: goto label7;
            case 130: goto label7;
            default: goto label5;
        };

     label5:
        goto label3;

     label6:
        $i1 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = $i2 + $i3;

        $r4 = $r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i1, $i2, $i1);

        goto label3;

     label7:
        $i1 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $r4 = $r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i1, $i2, $i1);

        goto label3;
    }

    public android.view.View findNextFocusFromRect(android.view.ViewGroup, android.graphics.Rect, int)
    {
        android.view.FocusFinder $r0;
        android.view.ViewGroup $r1;
        android.graphics.Rect $r2;
        int $i0;
        android.view.View $r3;

        $r0 := @this: android.view.FocusFinder;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        $r3 = specialinvoke $r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>($r1, null, $r2, $i0);

        return $r3;
    }

    int getWeightedDistanceFor(int, int)
    {
        android.view.FocusFinder $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.view.FocusFinder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i0 * 13;

        $i0 = $i2 * $i0;

        $i1 = $i1 * $i1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    boolean isBetterCandidate(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder $r0;
        int $i0, $i1, $i2;
        android.graphics.Rect $r1, $r2, $r3;
        boolean $z0;

        $r0 := @this: android.view.FocusFinder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 := @parameter3: android.graphics.Rect;

        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>($r1, $r2, $i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>($r1, $r3, $i0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r2, $r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $z0 = virtualinvoke $r0.<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r3, $r2);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r2);

        $i2 = staticinvoke <android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r2);

        $i1 = virtualinvoke $r0.<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>($i1, $i2);

        $i2 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r3);

        $i0 = staticinvoke <android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r1, $r3);

        $i0 = virtualinvoke $r0.<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>($i2, $i0);

        if $i1 >= $i0 goto label5;

        return 1;

     label5:
        return 0;
    }

    boolean isCandidate(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.view.FocusFinder $r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.view.FocusFinder;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        lookupswitch($i0)
        {
            case 17: goto label02;
            case 33: goto label08;
            case 66: goto label05;
            case 130: goto label11;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label02:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label03;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        if $i0 < $i1 goto label04;

     label03:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        if $i0 <= $i1 goto label04;

        return 1;

     label04:
        return 0;

     label05:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        if $i0 < $i1 goto label06;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        if $i0 > $i1 goto label07;

     label06:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        if $i0 >= $i1 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        if $i0 > $i1 goto label09;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label10;

     label09:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        if $i0 <= $i1 goto label10;

        return 1;

     label10:
        return 0;

     label11:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        if $i0 < $i1 goto label12;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label13;

     label12:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        if $i0 >= $i1 goto label13;

        return 1;

     label13:
        return 0;
    }

    boolean isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder $r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.view.FocusFinder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 := @parameter2: android.graphics.Rect;

        lookupswitch($i0)
        {
            case 17: goto label2;
            case 33: goto label6;
            case 66: goto label4;
            case 130: goto label8;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label2:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        if $i0 < $i1 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        if $i0 > $i1 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label7;

        return 1;

     label7:
        return 0;

     label8:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label9;

        return 1;

     label9:
        return 0;
    }
}
