public abstract class android.content.ContentProvider extends java.lang.Object implements android.content.ComponentCallbacks
{
    private android.content.Context mContext;
    private java.lang.String mReadPermission;
    private android.content.ContentProvider$Transport mTransport;
    private java.lang.String mWritePermission;

    public void <init>()
    {
        android.content.ContentProvider $r0;
        android.content.ContentProvider$Transport $r1;

        $r0 := @this: android.content.ContentProvider;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.ContentProvider: android.content.Context mContext> = null;

        $r1 = new android.content.ContentProvider$Transport;

        specialinvoke $r1.<android.content.ContentProvider$Transport: void <init>(android.content.ContentProvider)>($r0);

        $r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport> = $r1;

        return;
    }

    public static android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider)
    {
        android.content.ContentProvider $r0;
        android.content.IContentProvider $r1;
        boolean $z0;
        android.content.ContentProvider$Transport $r2;

        $r1 := @parameter0: android.content.IContentProvider;

        $z0 = $r1 instanceof android.content.ContentProvider$Transport;

        if $z0 == 0 goto label1;

        $r2 = (android.content.ContentProvider$Transport) $r1;

        $r0 = virtualinvoke $r2.<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>();

        return $r0;

     label1:
        return null;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.content.ContentProvider $r0;
        android.content.Context $r1, $r3;
        android.content.pm.ProviderInfo $r2;
        java.lang.String $r4;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.pm.ProviderInfo;

        $r3 = $r0.<android.content.ContentProvider: android.content.Context mContext>;

        if $r3 != null goto label2;

        $r0.<android.content.ContentProvider: android.content.Context mContext> = $r1;

        if $r2 == null goto label1;

        $r4 = $r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        virtualinvoke $r0.<android.content.ContentProvider: void setReadPermission(java.lang.String)>($r4);

        $r4 = $r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        virtualinvoke $r0.<android.content.ContentProvider: void setWritePermission(java.lang.String)>($r4);

     label1:
        virtualinvoke $r0.<android.content.ContentProvider: boolean onCreate()>();

        return;

     label2:
        return;
    }

    public int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentProvider $r0;
        android.net.Uri $r1;
        android.content.ContentValues[] $r2;
        int $i0, $i1;
        android.content.ContentValues $r3;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues[];

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        virtualinvoke $r0.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r1, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i0;
    }

    public abstract int delete(android.net.Uri, java.lang.String, java.lang.String[]);

    public final android.content.Context getContext()
    {
        android.content.ContentProvider $r0;
        android.content.Context r1;

        $r0 := @this: android.content.ContentProvider;

        r1 = $r0.<android.content.ContentProvider: android.content.Context mContext>;

        return r1;
    }

    public android.content.IContentProvider getIContentProvider()
    {
        android.content.ContentProvider $r0;
        android.content.ContentProvider$Transport r1;

        $r0 := @this: android.content.ContentProvider;

        r1 = $r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        return r1;
    }

    public final java.lang.String getReadPermission()
    {
        android.content.ContentProvider $r0;
        java.lang.String r1;

        $r0 := @this: android.content.ContentProvider;

        r1 = $r0.<android.content.ContentProvider: java.lang.String mReadPermission>;

        return r1;
    }

    public android.content.SyncAdapter getSyncAdapter()
    {
        android.content.ContentProvider $r0;

        $r0 := @this: android.content.ContentProvider;

        return null;
    }

    public abstract java.lang.String getType(android.net.Uri);

    public final java.lang.String getWritePermission()
    {
        android.content.ContentProvider $r0;
        java.lang.String r1;

        $r0 := @this: android.content.ContentProvider;

        r1 = $r0.<android.content.ContentProvider: java.lang.String mWritePermission>;

        return r1;
    }

    public abstract android.net.Uri insert(android.net.Uri, android.content.ContentValues);

    protected boolean isTemporary()
    {
        android.content.ContentProvider $r0;

        $r0 := @this: android.content.ContentProvider;

        return 0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.content.ContentProvider $r0;
        android.content.res.Configuration $r1;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    public abstract boolean onCreate();

    public void onLowMemory()
    {
        android.content.ContentProvider $r0;

        $r0 := @this: android.content.ContentProvider;

        return;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        android.os.ParcelFileDescriptor $r3;
        android.content.res.AssetFileDescriptor $r4;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>($r1, $r2);

        if $r3 == null goto label1;

        $r4 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r4.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>($r3, 0L, -1L);

        return $r4;

     label1:
        return null;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.io.FileNotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.io.FileNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No files supported by provider at ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    protected final android.os.ParcelFileDescriptor openFileHelper(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r7;
        java.lang.String[] $r3;
        android.database.Cursor $r4;
        int $i0;
        java.io.FileNotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.io.File $r8;
        android.os.ParcelFileDescriptor $r9;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "_data";

        $r4 = virtualinvoke $r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r3, null, null, null);

        if $r4 == null goto label3;

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getCount()>();

     label1:
        if $i0 == 1 goto label5;

        if $r4 == null goto label2;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label2:
        if $i0 != 0 goto label4;

        $r5 = new java.io.FileNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry for ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $r5 = new java.io.FileNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple items at ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label5:
        interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        if $i0 < 0 goto label7;

        $r7 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label6:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        if $r7 != null goto label8;

        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Column _data not found.");

        throw $r5;

     label7:
        $r7 = null;

        goto label6;

     label8:
        $i0 = staticinvoke <android.content.ContentResolver: int modeToMode(android.net.Uri,java.lang.String)>($r1, $r2);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r7);

        $r9 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r8, $i0);

        return $r9;
    }

    public abstract android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String);

    protected final void setReadPermission(java.lang.String)
    {
        android.content.ContentProvider $r0;
        java.lang.String $r1;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: java.lang.String;

        $r0.<android.content.ContentProvider: java.lang.String mReadPermission> = $r1;

        return;
    }

    protected final void setWritePermission(java.lang.String)
    {
        android.content.ContentProvider $r0;
        java.lang.String $r1;

        $r0 := @this: android.content.ContentProvider;

        $r1 := @parameter0: java.lang.String;

        $r0.<android.content.ContentProvider: java.lang.String mWritePermission> = $r1;

        return;
    }

    public abstract int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]);
}
