public class android.graphics.drawable.BitmapDrawable extends android.graphics.drawable.Drawable
{
    private static final int DEFAULT_PAINT_FLAGS;
    private boolean mApplyGravity;
    private android.graphics.Bitmap mBitmap;
    private int mBitmapHeight;
    private android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState;
    private int mBitmapWidth;
    private final android.graphics.Rect mDstRect;
    private boolean mMutated;
    private boolean mRebuildShader;

    public void <init>()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect> = $r2;

        $r1 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        specialinvoke $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>(null);

        $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = $r1;

        return;
    }

    public void <init>(android.graphics.Bitmap)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r1);

        specialinvoke $r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>($r2);

        return;
    }

    private void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Rect $r2;
        android.graphics.Bitmap $r3;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.drawable.BitmapDrawable$BitmapState;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect> = $r2;

        $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = $r1;

        $r3 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap>;

        specialinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>($r3);

        return;
    }

    void <init>(android.graphics.drawable.BitmapDrawable$BitmapState, android.graphics.drawable.BitmapDrawable$1)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.drawable.BitmapDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.drawable.BitmapDrawable$BitmapState;

        $r2 := @parameter1: android.graphics.drawable.BitmapDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>($r1);

        return;
    }

    public void <init>(java.io.InputStream)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        java.io.InputStream $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Bitmap $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r1);

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r3);

        specialinvoke $r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>($r2);

        $r3 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r3 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitmapDrawable cannot decode ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapDrawable", $r5);

        return;

     label1:
        return;
    }

    public void <init>(java.lang.String)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        java.lang.String $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Bitmap $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r1);

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r3);

        specialinvoke $r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>($r2);

        $r3 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r3 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitmapDrawable cannot decode ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapDrawable", $r1);

        return;

     label1:
        return;
    }

    private void setBitmap(android.graphics.Bitmap)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        int $i0;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap> = $r1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight> = $i0;

        return;

     label1:
        $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight> = -1;

        $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth> = -1;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        android.graphics.BitmapShader $r3;
        android.graphics.drawable.BitmapDrawable$BitmapState $r4;
        android.graphics.Shader$TileMode $r5, $r6;
        int $i0, $i1, $i2;
        android.graphics.Rect $r7, $r10;
        boolean $z0;
        android.graphics.Paint $r8;
        android.graphics.Shader $r9;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r2 == null goto label11;

        $r4 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $z0 = $r0.<android.graphics.drawable.BitmapDrawable: boolean mRebuildShader>;

        if $z0 == 0 goto label02;

        $r5 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        $r6 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        if $r5 != null goto label04;

        if $r6 != null goto label04;

        $r8 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

     label01:
        $r0.<android.graphics.drawable.BitmapDrawable: boolean mRebuildShader> = 0;

        $r7 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r7);

     label02:
        $r8 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $r9 = virtualinvoke $r8.<android.graphics.Paint: android.graphics.Shader getShader()>();

        if $r9 != null goto label09;

        $z0 = $r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity>;

        if $z0 == 0 goto label03;

        $i1 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        $i2 = $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth>;

        $i0 = $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight>;

        $r10 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r7 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>($i1, $i2, $i0, $r10, $r7);

        $r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 0;

     label03:
        $r7 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $r8 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r2, null, $r7, $r8);

        return;

     label04:
        $r3 = new android.graphics.BitmapShader;

        if $r5 != null goto label07;

        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

     label05:
        if $r6 != null goto label08;

        $r6 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

     label06:
        specialinvoke $r3.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r2, $r5, $r6);

        $r8 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r3);

        goto label01;

     label07:
        goto label05;

     label08:
        goto label06;

     label09:
        $z0 = $r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity>;

        if $z0 == 0 goto label10;

        $r7 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $r10 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r10);

        $r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 0;

     label10:
        $r7 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $r8 = $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r7, $r8);

        return;

     label11:
        return;
    }

    public final android.graphics.Bitmap getBitmap()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Bitmap r1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        return r1;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i1 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public final android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        int $i0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        return $r1;
    }

    public int getGravity()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        int i0;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        i0 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        return i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        float $f0, $f1, $f2;
        boolean $z0;
        byte $b0;
        int $i1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $z0 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mAutoScale>;

        if $z0 == 0 goto label1;

        $f1 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: float mBitmapScale>;

        $b0 = $f1 cmpl -1.0F;

        if $b0 != 0 goto label2;

     label1:
        $i1 = $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight>;

        return $i1;

     label2:
        if $r1 == null goto label3;

        $i1 = $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight>;

        $f1 = (float) $i1;

        $f2 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: float mBitmapScale>;

        $f0 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: float mTargetDensityScale>;

        $f0 = $f2 / $f0;

        $f1 = $f1 / $f0;

        $f1 = $f1 + 0.5F;

        $i1 = (int) $f1;

        return $i1;

     label3:
        return -1;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        float $f0, $f1, $f2;
        boolean $z0;
        byte $b0;
        int $i1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $z0 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mAutoScale>;

        if $z0 == 0 goto label1;

        $f1 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: float mBitmapScale>;

        $b0 = $f1 cmpl -1.0F;

        if $b0 != 0 goto label2;

     label1:
        $i1 = $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth>;

        return $i1;

     label2:
        if $r1 == null goto label3;

        $i1 = $r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth>;

        $f1 = (float) $i1;

        $f2 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: float mBitmapScale>;

        $f0 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: float mTargetDensityScale>;

        $f0 = $f2 / $f0;

        $f1 = $f1 / $f0;

        $f1 = $f1 + 0.5F;

        $i1 = (int) $f1;

        return $i1;

     label3:
        return -1;
    }

    public int getOpacity()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        int $i0;
        boolean $z0;
        android.graphics.Paint $r3;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        if $i0 == 119 goto label1;

        return -3;

     label1:
        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean hasAlpha()>();

        if $z0 != 0 goto label2;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        if $i0 >= 255 goto label3;

     label2:
        return -3;

     label3:
        return -1;
    }

    public final android.graphics.Paint getPaint()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        return r2;
    }

    public android.graphics.Shader$TileMode getTileModeX()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Shader$TileMode r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        return r2;
    }

    public android.graphics.Shader$TileMode getTileModeY()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Shader$TileMode r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        return r2;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        android.graphics.Paint $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0;
        org.xmlpull.v1.XmlPullParserException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        android.graphics.Bitmap $r10;
        android.graphics.drawable.BitmapDrawable$BitmapState $r11;
        android.util.DisplayMetrics $r12;
        boolean $z0;
        android.graphics.Shader$TileMode $r13, $r14;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        $r5 = <com.android.internal.R$styleable: int[] BitmapDrawable>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if $i0 != 0 goto label1;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <bitmap> requires a valid src attribute");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label1:
        $r10 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r1, $i0);

        if $r10 != null goto label2;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <bitmap> requires a valid src attribute");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label2:
        $r11 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r11.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap> = $r10;

        specialinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>($r10);

        $r12 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setDensityScale(android.util.DisplayMetrics)>($r12);

        $r11 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r11.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $z0 = virtualinvoke $r4.<android.graphics.Paint: boolean isAntiAlias()>();

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z0);

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>($z0);

        $z0 = virtualinvoke $r4.<android.graphics.Paint: boolean isFilterBitmap()>();

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, $z0);

        virtualinvoke $r4.<android.graphics.Paint: void setFilterBitmap(boolean)>($z0);

        $z0 = virtualinvoke $r4.<android.graphics.Paint: boolean isDither()>();

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, $z0);

        virtualinvoke $r4.<android.graphics.Paint: void setDither(boolean)>($z0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(0, 119);

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setGravity(int)>($i0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(5, -1);

        if $i0 == -1 goto label3;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label3;
        };

     label3:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;

     label4:
        $r13 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r14 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r13, $r14);

        goto label3;

     label5:
        $r13 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        $r14 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r13, $r14);

        goto label3;

     label6:
        $r13 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        $r14 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r13, $r14);

        goto label3;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r3;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $z0 = $r0.<android.graphics.drawable.BitmapDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != $r0 goto label2;

        $r3 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>($r1);

        $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = $r3;

        $r0.<android.graphics.drawable.BitmapDrawable: boolean mMutated> = 1;

        return $r0;

     label1:
        return $r0;

     label2:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        $r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 1;

        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        int $i0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }

    public void setAntiAlias(boolean)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>($z0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Paint $r3;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    public void setDensityScale(float)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        float $f0;
        byte $b0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl -1.0F;

        if $b0 != 0 goto label1;

        $f0 = 1.0F;

     label1:
        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: float mTargetDensityScale> = $f0;

        return;
    }

    public void setDensityScale(android.graphics.Canvas)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Canvas $r1;
        float $f0;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 = virtualinvoke $r1.<android.graphics.Canvas: float getDensityScale()>();

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setDensityScale(float)>($f0);

        return;
    }

    public void setDensityScale(android.util.DisplayMetrics)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.util.DisplayMetrics $r1;
        float $f0;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.util.DisplayMetrics;

        $f0 = $r1.<android.util.DisplayMetrics: float density>;

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setDensityScale(float)>($f0);

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>($z0);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setFilterBitmap(boolean)>($z0);

        return;
    }

    public void setGravity(int)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        int $i0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity> = $i0;

        $r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 1;

        return;
    }

    public void setTileModeX(android.graphics.Shader$TileMode)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Shader$TileMode $r1, $r3;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Shader$TileMode;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r1, $r3);

        return;
    }

    public void setTileModeXY(android.graphics.Shader$TileMode, android.graphics.Shader$TileMode)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Shader$TileMode $r1, $r2, $r4;
        android.graphics.drawable.BitmapDrawable$BitmapState $r3;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Shader$TileMode;

        $r2 := @parameter1: android.graphics.Shader$TileMode;

        $r3 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        if $r4 != $r1 goto label1;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        if $r4 == $r2 goto label2;

     label1:
        $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX> = $r1;

        $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY> = $r2;

        $r0.<android.graphics.drawable.BitmapDrawable: boolean mRebuildShader> = 1;

        return;

     label2:
        return;
    }

    public final void setTileModeY(android.graphics.Shader$TileMode)
    {
        android.graphics.drawable.BitmapDrawable $r0;
        android.graphics.Shader$TileMode $r1, $r3;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;

        $r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 := @parameter0: android.graphics.Shader$TileMode;

        $r2 = $r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        virtualinvoke $r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r3, $r1);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.BitmapDrawable: int DEFAULT_PAINT_FLAGS> = 2;

        return;
    }
}
