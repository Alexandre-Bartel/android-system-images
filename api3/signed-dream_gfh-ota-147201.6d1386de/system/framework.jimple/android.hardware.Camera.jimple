public class android.hardware.Camera extends java.lang.Object
{
    private static final int AUTOFOCUS_CALLBACK;
    public static final int CAMERA_ERROR_SERVER_DIED;
    public static final int CAMERA_ERROR_UNKNOWN;
    private static final int ERROR_CALLBACK;
    private static final int JPEG_PICTURE_CALLBACK;
    private static final int PREVIEW_CALLBACK;
    private static final int RAW_PICTURE_CALLBACK;
    private static final int SHUTTER_CALLBACK;
    private static final java.lang.String TAG;
    private android.hardware.Camera$AutoFocusCallback mAutoFocusCallback;
    private android.hardware.Camera$ErrorCallback mErrorCallback;
    private android.hardware.Camera$EventHandler mEventHandler;
    private android.hardware.Camera$PictureCallback mJpegCallback;
    private int mNativeContext;
    private boolean mOneShot;
    private android.hardware.Camera$PreviewCallback mPreviewCallback;
    private android.hardware.Camera$PictureCallback mRawImageCallback;
    private android.hardware.Camera$ShutterCallback mShutterCallback;

    void <init>()
    {
        android.hardware.Camera $r0;
        android.os.Looper $r1;
        android.hardware.Camera$EventHandler $r2;
        java.lang.ref.WeakReference $r3;

        $r0 := @this: android.hardware.Camera;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.hardware.Camera: android.hardware.Camera$ShutterCallback mShutterCallback> = null;

        $r0.<android.hardware.Camera: android.hardware.Camera$PictureCallback mRawImageCallback> = null;

        $r0.<android.hardware.Camera: android.hardware.Camera$PictureCallback mJpegCallback> = null;

        $r0.<android.hardware.Camera: android.hardware.Camera$PreviewCallback mPreviewCallback> = null;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label2;

        $r2 = new android.hardware.Camera$EventHandler;

        specialinvoke $r2.<android.hardware.Camera$EventHandler: void <init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper)>($r0, $r0, $r1);

        $r0.<android.hardware.Camera: android.hardware.Camera$EventHandler mEventHandler> = $r2;

     label1:
        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r0);

        specialinvoke $r0.<android.hardware.Camera: void native_setup(java.lang.Object)>($r3);

        return;

     label2:
        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r1 == null goto label3;

        $r2 = new android.hardware.Camera$EventHandler;

        specialinvoke $r2.<android.hardware.Camera$EventHandler: void <init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper)>($r0, $r0, $r1);

        $r0.<android.hardware.Camera: android.hardware.Camera$EventHandler mEventHandler> = $r2;

        goto label1;

     label3:
        $r0.<android.hardware.Camera: android.hardware.Camera$EventHandler mEventHandler> = null;

        goto label1;
    }

    static android.hardware.Camera$ShutterCallback access$000(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$ShutterCallback r1;

        $r0 := @parameter0: android.hardware.Camera;

        r1 = $r0.<android.hardware.Camera: android.hardware.Camera$ShutterCallback mShutterCallback>;

        return r1;
    }

    static android.hardware.Camera$PictureCallback access$100(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$PictureCallback r1;

        $r0 := @parameter0: android.hardware.Camera;

        r1 = $r0.<android.hardware.Camera: android.hardware.Camera$PictureCallback mRawImageCallback>;

        return r1;
    }

    static android.hardware.Camera$PictureCallback access$200(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$PictureCallback r1;

        $r0 := @parameter0: android.hardware.Camera;

        r1 = $r0.<android.hardware.Camera: android.hardware.Camera$PictureCallback mJpegCallback>;

        return r1;
    }

    static android.hardware.Camera$PreviewCallback access$300(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$PreviewCallback r1;

        $r0 := @parameter0: android.hardware.Camera;

        r1 = $r0.<android.hardware.Camera: android.hardware.Camera$PreviewCallback mPreviewCallback>;

        return r1;
    }

    static android.hardware.Camera$PreviewCallback access$302(android.hardware.Camera, android.hardware.Camera$PreviewCallback)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$PreviewCallback $r1;

        $r0 := @parameter0: android.hardware.Camera;

        $r1 := @parameter1: android.hardware.Camera$PreviewCallback;

        $r0.<android.hardware.Camera: android.hardware.Camera$PreviewCallback mPreviewCallback> = $r1;

        return $r1;
    }

    static boolean access$400(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        boolean z0;

        $r0 := @parameter0: android.hardware.Camera;

        z0 = $r0.<android.hardware.Camera: boolean mOneShot>;

        return z0;
    }

    static android.hardware.Camera$AutoFocusCallback access$500(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$AutoFocusCallback r1;

        $r0 := @parameter0: android.hardware.Camera;

        r1 = $r0.<android.hardware.Camera: android.hardware.Camera$AutoFocusCallback mAutoFocusCallback>;

        return r1;
    }

    static android.hardware.Camera$ErrorCallback access$600(android.hardware.Camera)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$ErrorCallback r1;

        $r0 := @parameter0: android.hardware.Camera;

        r1 = $r0.<android.hardware.Camera: android.hardware.Camera$ErrorCallback mErrorCallback>;

        return r1;
    }

    private final native void native_autoFocus();

    private final native java.lang.String native_getParameters();

    private final native void native_release();

    private final native void native_setParameters(java.lang.String);

    private final native void native_setup(java.lang.Object);

    private final native void native_takePicture();

    public static android.hardware.Camera open()
    {
        android.hardware.Camera $r0;

        $r0 = new android.hardware.Camera;

        specialinvoke $r0.<android.hardware.Camera: void <init>()>();

        return $r0;
    }

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        int $i0, $i1, $i2;
        java.lang.Object $r0, $r1;
        java.lang.ref.WeakReference $r2;
        android.hardware.Camera $r3;
        android.hardware.Camera$EventHandler $r4;
        android.os.Message $r5;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r0 := @parameter4: java.lang.Object;

        $r2 = (java.lang.ref.WeakReference) $r1;

        $r1 = virtualinvoke $r2.<java.lang.ref.Reference: java.lang.Object get()>();

        $r3 = (android.hardware.Camera) $r1;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = $r3.<android.hardware.Camera: android.hardware.Camera$EventHandler mEventHandler>;

        if $r4 == null goto label2;

        $r4 = $r3.<android.hardware.Camera: android.hardware.Camera$EventHandler mEventHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>($i0, $i1, $i2, $r0);

        $r4 = $r3.<android.hardware.Camera: android.hardware.Camera$EventHandler mEventHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;

     label2:
        return;
    }

    private final native void setHasPreviewCallback(boolean, boolean);

    private final native void setPreviewDisplay(android.view.Surface);

    public final void autoFocus(android.hardware.Camera$AutoFocusCallback)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$AutoFocusCallback $r1;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.hardware.Camera$AutoFocusCallback;

        $r0.<android.hardware.Camera: android.hardware.Camera$AutoFocusCallback mAutoFocusCallback> = $r1;

        specialinvoke $r0.<android.hardware.Camera: void native_autoFocus()>();

        return;
    }

    protected void finalize()
    {
        android.hardware.Camera $r0;

        $r0 := @this: android.hardware.Camera;

        specialinvoke $r0.<android.hardware.Camera: void native_release()>();

        return;
    }

    public android.hardware.Camera$Parameters getParameters()
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$Parameters $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.hardware.Camera;

        $r1 = new android.hardware.Camera$Parameters;

        specialinvoke $r1.<android.hardware.Camera$Parameters: void <init>(android.hardware.Camera,android.hardware.Camera$1)>($r0, null);

        $r2 = specialinvoke $r0.<android.hardware.Camera: java.lang.String native_getParameters()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_getParameters: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Camera", $r4);

        virtualinvoke $r1.<android.hardware.Camera$Parameters: void unflatten(java.lang.String)>($r2);

        return $r1;
    }

    public final native int lock();

    public final native boolean previewEnabled();

    public final native void reconnect() throws java.io.IOException;

    public final void release()
    {
        android.hardware.Camera $r0;

        $r0 := @this: android.hardware.Camera;

        specialinvoke $r0.<android.hardware.Camera: void native_release()>();

        return;
    }

    public final void setErrorCallback(android.hardware.Camera$ErrorCallback)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$ErrorCallback $r1;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.hardware.Camera$ErrorCallback;

        $r0.<android.hardware.Camera: android.hardware.Camera$ErrorCallback mErrorCallback> = $r1;

        return;
    }

    public final void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$PreviewCallback $r1;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.hardware.Camera$PreviewCallback;

        if $r1 == null goto label1;

        $r0.<android.hardware.Camera: android.hardware.Camera$PreviewCallback mPreviewCallback> = $r1;

        $r0.<android.hardware.Camera: boolean mOneShot> = 1;

        specialinvoke $r0.<android.hardware.Camera: void setHasPreviewCallback(boolean,boolean)>(1, 1);

        return;

     label1:
        return;
    }

    public void setParameters(android.hardware.Camera$Parameters)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$Parameters $r1;
        java.lang.String $r2;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.hardware.Camera$Parameters;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Camera", "setParameters()");

        $r2 = virtualinvoke $r1.<android.hardware.Camera$Parameters: java.lang.String flatten()>();

        specialinvoke $r0.<android.hardware.Camera: void native_setParameters(java.lang.String)>($r2);

        return;
    }

    public final void setPreviewCallback(android.hardware.Camera$PreviewCallback)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$PreviewCallback $r1;
        boolean $z0;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.hardware.Camera$PreviewCallback;

        $r0.<android.hardware.Camera: android.hardware.Camera$PreviewCallback mPreviewCallback> = $r1;

        $r0.<android.hardware.Camera: boolean mOneShot> = 0;

        if $r1 == null goto label2;

        $z0 = 1;

     label1:
        specialinvoke $r0.<android.hardware.Camera: void setHasPreviewCallback(boolean,boolean)>($z0, 0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public final void setPreviewDisplay(android.view.SurfaceHolder) throws java.io.IOException
    {
        android.hardware.Camera $r0;
        android.view.SurfaceHolder $r1;
        android.view.Surface $r2;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = interfaceinvoke $r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke $r0.<android.hardware.Camera: void setPreviewDisplay(android.view.Surface)>($r2);

        return;
    }

    public final native void startPreview();

    public final native void stopPreview();

    public final void takePicture(android.hardware.Camera$ShutterCallback, android.hardware.Camera$PictureCallback, android.hardware.Camera$PictureCallback)
    {
        android.hardware.Camera $r0;
        android.hardware.Camera$ShutterCallback $r1;
        android.hardware.Camera$PictureCallback $r2, $r3;

        $r0 := @this: android.hardware.Camera;

        $r1 := @parameter0: android.hardware.Camera$ShutterCallback;

        $r2 := @parameter1: android.hardware.Camera$PictureCallback;

        $r3 := @parameter2: android.hardware.Camera$PictureCallback;

        $r0.<android.hardware.Camera: android.hardware.Camera$ShutterCallback mShutterCallback> = $r1;

        $r0.<android.hardware.Camera: android.hardware.Camera$PictureCallback mRawImageCallback> = $r2;

        $r0.<android.hardware.Camera: android.hardware.Camera$PictureCallback mJpegCallback> = $r3;

        specialinvoke $r0.<android.hardware.Camera: void native_takePicture()>();

        return;
    }

    public final native int unlock();

    public static void <clinit>()
    {
        <android.hardware.Camera: java.lang.String TAG> = "Camera";

        <android.hardware.Camera: int SHUTTER_CALLBACK> = 0;

        <android.hardware.Camera: int RAW_PICTURE_CALLBACK> = 1;

        <android.hardware.Camera: int PREVIEW_CALLBACK> = 3;

        <android.hardware.Camera: int JPEG_PICTURE_CALLBACK> = 2;

        <android.hardware.Camera: int ERROR_CALLBACK> = 5;

        <android.hardware.Camera: int CAMERA_ERROR_UNKNOWN> = 1;

        <android.hardware.Camera: int CAMERA_ERROR_SERVER_DIED> = 100;

        <android.hardware.Camera: int AUTOFOCUS_CALLBACK> = 4;

        return;
    }
}
