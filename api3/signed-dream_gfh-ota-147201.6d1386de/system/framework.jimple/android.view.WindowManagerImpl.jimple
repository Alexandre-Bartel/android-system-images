public class android.view.WindowManagerImpl extends java.lang.Object implements android.view.WindowManager
{
    public static final int ADD_APP_EXITING;
    public static final int ADD_BAD_APP_TOKEN;
    public static final int ADD_BAD_SUBWINDOW_TOKEN;
    public static final int ADD_DUPLICATE_ADD;
    public static final int ADD_FLAG_APP_VISIBLE;
    public static final int ADD_FLAG_IN_TOUCH_MODE;
    public static final int ADD_MULTIPLE_SINGLETON;
    public static final int ADD_NOT_APP_TOKEN;
    public static final int ADD_OKAY;
    public static final int ADD_PERMISSION_DENIED;
    public static final int ADD_STARTING_NOT_NEEDED;
    public static final int RELAYOUT_FIRST_TIME;
    public static final int RELAYOUT_IN_TOUCH_MODE;
    private static android.view.WindowManagerImpl mWindowManager;
    private android.view.WindowManager$LayoutParams[] mParams;
    private android.view.ViewRoot[] mRoots;
    private android.view.View[] mViews;

    static void <clinit>()
    {
        android.view.WindowManagerImpl $r0;

        <android.view.WindowManagerImpl: int RELAYOUT_IN_TOUCH_MODE> = 1;

        <android.view.WindowManagerImpl: int RELAYOUT_FIRST_TIME> = 2;

        <android.view.WindowManagerImpl: int ADD_STARTING_NOT_NEEDED> = -6;

        <android.view.WindowManagerImpl: int ADD_PERMISSION_DENIED> = -8;

        <android.view.WindowManagerImpl: int ADD_OKAY> = 0;

        <android.view.WindowManagerImpl: int ADD_NOT_APP_TOKEN> = -3;

        <android.view.WindowManagerImpl: int ADD_MULTIPLE_SINGLETON> = -7;

        <android.view.WindowManagerImpl: int ADD_FLAG_IN_TOUCH_MODE> = 1;

        <android.view.WindowManagerImpl: int ADD_FLAG_APP_VISIBLE> = 2;

        <android.view.WindowManagerImpl: int ADD_DUPLICATE_ADD> = -5;

        <android.view.WindowManagerImpl: int ADD_BAD_SUBWINDOW_TOKEN> = -2;

        <android.view.WindowManagerImpl: int ADD_BAD_APP_TOKEN> = -1;

        <android.view.WindowManagerImpl: int ADD_APP_EXITING> = -4;

        $r0 = new android.view.WindowManagerImpl;

        specialinvoke $r0.<android.view.WindowManagerImpl: void <init>()>();

        <android.view.WindowManagerImpl: android.view.WindowManagerImpl mWindowManager> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.WindowManagerImpl $r0;

        $r0 := @this: android.view.WindowManagerImpl;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void addView(android.view.View, android.view.ViewGroup$LayoutParams, boolean)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1, $r5;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        android.view.WindowManager$LayoutParams $r4;
        int $i0, $i1;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        android.view.ViewRoot[] $r10, $r19;
        android.view.ViewRoot $r11;
        android.view.View[] $r12, $r18;
        android.view.ViewRoot$W $r13;
        android.os.IBinder $r14, $r15;
        android.content.Context $r16;
        android.view.WindowManager$LayoutParams[] $r17, $r20;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 := @parameter2: boolean;

        $z1 = $r2 instanceof android.view.WindowManager$LayoutParams;

        if $z1 != 0 goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Params must be WindowManager.LayoutParams");

        throw $r3;

     label01:
        $r4 = (android.view.WindowManager$LayoutParams) $r2;

        $r5 = null;

        entermonitor $r0;

     label02:
        $i0 = specialinvoke $r0.<android.view.WindowManagerImpl: int findViewLocked(android.view.View,boolean)>($r1, 0);

        if $i0 < 0 goto label07;

        if $z0 != 0 goto label05;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been added to the window manager.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label03:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r9;

     label05:
        $r10 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r11 = $r10[$i0];

        $i0 = $r11.<android.view.ViewRoot: int mAddNesting>;

        $i0 = $i0 + 1;

        $r11.<android.view.ViewRoot: int mAddNesting> = $i0;

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

        virtualinvoke $r11.<android.view.ViewRoot: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)>($r4, 1);

        exitmonitor $r0;

     label06:
        return;

     label07:
        $i0 = $r4.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 < 1000 goto label12;

        $i0 = $r4.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 > 1999 goto label12;

        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        if $r12 == null goto label11;

        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $i0 = lengthof $r12;

     label08:
        $i1 = 0;

     label09:
        if $i1 >= $i0 goto label12;

        $r10 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r11 = $r10[$i1];

        $r13 = $r11.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $r14 = virtualinvoke $r13.<android.view.IWindow$Stub: android.os.IBinder asBinder()>();

        $r15 = $r4.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r14 != $r15 goto label10;

        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $r5 = $r12[$i1];

     label10:
        $i1 = $i1 + 1;

        goto label09;

     label11:
        $i0 = 0;

        goto label08;

     label12:
        $r11 = new android.view.ViewRoot;

        $r16 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r11.<android.view.ViewRoot: void <init>(android.content.Context)>($r16);

        $r11.<android.view.ViewRoot: int mAddNesting> = 1;

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        if $r12 != null goto label15;

        $i0 = 1;

        $r12 = newarray (android.view.View)[1];

        $r0.<android.view.WindowManagerImpl: android.view.View[] mViews> = $r12;

        $r10 = newarray (android.view.ViewRoot)[1];

        $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots> = $r10;

        $r17 = newarray (android.view.WindowManager$LayoutParams)[1];

        $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams> = $r17;

     label13:
        $i0 = $i0 + -1;

        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $r12[$i0] = $r1;

        $r10 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r10[$i0] = $r11;

        $r17 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        $r17[$i0] = $r4;

        exitmonitor $r0;

     label14:
        virtualinvoke $r11.<android.view.ViewRoot: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)>($r1, $r4, $r5);

        return;

     label15:
        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $i0 = lengthof $r12;

        $i0 = $i0 + 1;

        $r12 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $r18 = newarray (android.view.View)[$i0];

        $r0.<android.view.WindowManagerImpl: android.view.View[] mViews> = $r18;

        $r18 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $i1 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r18, 0, $i1);

        $r10 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r19 = newarray (android.view.ViewRoot)[$i0];

        $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots> = $r19;

        $r19 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $i1 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r19, 0, $i1);

        $r17 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        $r20 = newarray (android.view.WindowManager$LayoutParams)[$i0];

        $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams> = $r20;

        $r20 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        $i1 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r20, 0, $i1);

     label16:
        goto label13;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label07 to label14 with label03;
        catch java.lang.Throwable from label15 to label16 with label03;
    }

    private int findViewLocked(android.view.View, boolean)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1, $r3;
        boolean $z0;
        android.view.View[] $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label01:
        $r2 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        if $r2 == null goto label05;

        $r2 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $i0 = lengthof $r2;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label07;

        $r2 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $r3 = $r2[$i1];

        if $r3 != $r1 goto label06;

        exitmonitor $r0;

     label04:
        return $i1;

     label05:
        $i0 = 0;

        goto label02;

     label06:
        $i1 = $i1 + 1;

        goto label03;

     label07:
        if $z0 == 0 goto label10;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View not attached to window manager");

        throw $r4;

     label08:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r5;

     label10:
        exitmonitor $r0;

     label11:
        return -1;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label09 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public static android.view.WindowManagerImpl getDefault()
    {
        android.view.WindowManagerImpl r0;

        r0 = <android.view.WindowManagerImpl: android.view.WindowManagerImpl mWindowManager>;

        return r0;
    }

    private static void removeItem(java.lang.Object[], java.lang.Object[], int)
    {
        java.lang.Object[] $r0, $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r0;

        if $i1 <= 0 goto label2;

        if $i0 <= 0 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r0, 0, $i0);

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $i1 = $i0 + 1;

        $i2 = lengthof $r1;

        $i2 = $i2 - $i0;

        $i2 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r0, $i0, $i2);

        return;

     label2:
        return;

     label3:
        return;
    }

    public void addView(android.view.View)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1;
        android.view.WindowManager$LayoutParams $r2;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r2.<android.view.WindowManager$LayoutParams: void <init>(int,int,int)>(2, 0, -1);

        virtualinvoke $r0.<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke $r0.<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup$LayoutParams,boolean)>($r1, $r2, 0);

        return;
    }

    public void addViewNesting(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke $r0.<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup$LayoutParams,boolean)>($r1, $r2, 0);

        return;
    }

    public void closeAll()
    {
        android.view.WindowManagerImpl $r0;

        $r0 := @this: android.view.WindowManagerImpl;

        virtualinvoke $r0.<android.view.WindowManagerImpl: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(null, null, null);

        return;
    }

    public void closeAll(android.os.IBinder, java.lang.String, java.lang.String)
    {
        android.view.WindowManagerImpl $r0;
        android.os.IBinder $r1, $r9;
        java.lang.String $r2, $r3, $r13;
        android.view.WindowLeaked $r4, $r14;
        android.view.ViewRoot $r5;
        android.view.View[] $r6;
        int $i0, $i1;
        android.view.WindowManager$LayoutParams[] $r7;
        android.view.WindowManager$LayoutParams $r8;
        android.view.ViewRoot[] $r10;
        java.lang.StringBuilder $r11;
        android.view.View $r12;
        java.lang.StackTraceElement[] $r15;
        java.lang.Throwable $r16;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        entermonitor $r0;

     label01:
        $r6 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        if $r6 != null goto label03;

        exitmonitor $r0;

     label02:
        return;

     label03:
        $r6 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $i0 = lengthof $r6;

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label08;

        if $r1 == null goto label05;

        $r7 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        $r8 = $r7[$i1];

        $r9 = $r8.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r9 != $r1 goto label07;

     label05:
        $r10 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r5 = $r10[$i1];

        $r5.<android.view.ViewRoot: int mAddNesting> = 1;

        if $r2 == null goto label06;

        $r4 = new android.view.WindowLeaked;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked window ");

        $r12 = virtualinvoke $r5.<android.view.ViewRoot: android.view.View getView()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was originally added here");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.view.WindowLeaked: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r5.<android.view.ViewRoot: android.view.WindowLeaked getLocation()>();

        $r15 = virtualinvoke $r14.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r4.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r15);

        $r13 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r13, $r4);

     label06:
        virtualinvoke $r0.<android.view.WindowManagerImpl: android.view.View removeViewLocked(int)>($i1);

        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

     label07:
        $i1 = $i1 + 1;

        goto label04;

     label08:
        exitmonitor $r0;

     label09:
        return;

     label10:
        $r16 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void finishRemoveViewLocked(android.view.View, int)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.view.WindowManager$LayoutParams[] $r2, $r7;
        android.view.ViewRoot[] $r3, $r6;
        android.view.View[] $r4, $r5;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r4 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        $r4 = newarray (android.view.View)[$i2];

        $r5 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        staticinvoke <android.view.WindowManagerImpl: void removeItem(java.lang.Object[],java.lang.Object[],int)>($r4, $r5, $i0);

        $r0.<android.view.WindowManagerImpl: android.view.View[] mViews> = $r4;

        $i2 = $i1 - 1;

        $r3 = newarray (android.view.ViewRoot)[$i2];

        $r6 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        staticinvoke <android.view.WindowManagerImpl: void removeItem(java.lang.Object[],java.lang.Object[],int)>($r3, $r6, $i0);

        $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots> = $r3;

        $i1 = $i1 - 1;

        $r2 = newarray (android.view.WindowManager$LayoutParams)[$i1];

        $r7 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        staticinvoke <android.view.WindowManagerImpl: void removeItem(java.lang.Object[],java.lang.Object[],int)>($r2, $r7, $i0);

        $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams> = $r2;

        virtualinvoke $r1.<android.view.View: void assignParent(android.view.ViewParent)>(null);

        return;
    }

    public android.view.Display getDefaultDisplay()
    {
        android.view.WindowManagerImpl $r0;
        android.view.Display $r1;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 = new android.view.Display;

        specialinvoke $r1.<android.view.Display: void <init>(int)>(0);

        return $r1;
    }

    public android.view.WindowManager$LayoutParams getRootViewLayoutParameter(android.view.View)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewParent $r2;
        boolean $z0;
        android.view.WindowManager$LayoutParams $r3;
        android.view.ViewRoot $r4, $r6;
        android.view.ViewRoot[] $r5;
        android.view.WindowManager$LayoutParams[] $r7;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        if $r2 == null goto label2;

        $z0 = $r2 instanceof android.view.ViewRoot;

        if $z0 != 0 goto label2;

        $r2 = interfaceinvoke $r2.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        if $r2 != null goto label3;

        return null;

     label3:
        $r4 = (android.view.ViewRoot) $r2;

        $r5 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $i0 = lengthof $r5;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label6;

        $r5 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r6 = $r5[$i1];

        if $r6 != $r4 goto label5;

        $r7 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        $r3 = $r7[$i1];

        return $r3;

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        return null;
    }

    public void removeView(android.view.View)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1, $r2;
        int $i0;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<android.view.WindowManagerImpl: int findViewLocked(android.view.View,boolean)>($r1, 1);

        $r2 = virtualinvoke $r0.<android.view.WindowManagerImpl: android.view.View removeViewLocked(int)>($i0);

        if $r2 != $r1 goto label3;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling with view ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the ViewRoot is attached to ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public void removeViewImmediate(android.view.View)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1, $r4;
        android.view.ViewRoot $r2;
        int $i0;
        android.view.ViewRoot[] $r3;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<android.view.WindowManagerImpl: int findViewLocked(android.view.View,boolean)>($r1, 1);

        $r3 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r2 = $r3[$i0];

        $r4 = virtualinvoke $r2.<android.view.ViewRoot: android.view.View getView()>();

        $r2.<android.view.ViewRoot: int mAddNesting> = 0;

        virtualinvoke $r2.<android.view.ViewRoot: void die(boolean)>(1);

        virtualinvoke $r0.<android.view.WindowManagerImpl: void finishRemoveViewLocked(android.view.View,int)>($r4, $i0);

        if $r4 != $r1 goto label3;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling with view ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the ViewRoot is attached to ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    android.view.View removeViewLocked(int)
    {
        android.view.WindowManagerImpl $r0;
        int $i0, $i1;
        android.view.ViewRoot $r1;
        android.view.ViewRoot[] $r2;
        android.view.View $r3, $r7;
        android.content.Context $r4;
        android.view.inputmethod.InputMethodManager $r5;
        android.view.View[] $r6;
        android.os.IBinder $r8;

        $r0 := @this: android.view.WindowManagerImpl;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r1 = $r2[$i0];

        $r3 = virtualinvoke $r1.<android.view.ViewRoot: android.view.View getView()>();

        $i1 = $r1.<android.view.ViewRoot: int mAddNesting>;

        $i1 = $i1 - 1;

        $r1.<android.view.ViewRoot: int mAddNesting> = $i1;

        $i1 = $r1.<android.view.ViewRoot: int mAddNesting>;

        if $i1 <= 0 goto label1;

        return $r3;

     label1:
        $r4 = virtualinvoke $r3.<android.view.View: android.content.Context getContext()>();

        $r5 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)>($r4);

        if $r5 == null goto label2;

        $r6 = $r0.<android.view.WindowManagerImpl: android.view.View[] mViews>;

        $r7 = $r6[$i0];

        $r8 = virtualinvoke $r7.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r5.<android.view.inputmethod.InputMethodManager: void windowDismissed(android.os.IBinder)>($r8);

     label2:
        virtualinvoke $r1.<android.view.ViewRoot: void die(boolean)>(0);

        virtualinvoke $r0.<android.view.WindowManagerImpl: void finishRemoveViewLocked(android.view.View,int)>($r3, $i0);

        return $r3;
    }

    public void updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerImpl $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewRoot $r3;
        int $i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        android.view.WindowManager$LayoutParams $r5;
        android.view.ViewRoot[] $r6;
        android.view.WindowManager$LayoutParams[] $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.view.WindowManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = $r2 instanceof android.view.WindowManager$LayoutParams;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Params must be WindowManager.LayoutParams");

        throw $r4;

     label1:
        $r5 = (android.view.WindowManager$LayoutParams) $r2;

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

        entermonitor $r0;

     label2:
        $i0 = specialinvoke $r0.<android.view.WindowManagerImpl: int findViewLocked(android.view.View,boolean)>($r1, 1);

        $r6 = $r0.<android.view.WindowManagerImpl: android.view.ViewRoot[] mRoots>;

        $r3 = $r6[$i0];

        $r7 = $r0.<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams[] mParams>;

        $r7[$i0] = $r5;

        virtualinvoke $r3.<android.view.ViewRoot: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)>($r5, 0);

        exitmonitor $r0;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
