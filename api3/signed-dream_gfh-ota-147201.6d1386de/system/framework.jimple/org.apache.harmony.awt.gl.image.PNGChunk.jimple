class org.apache.harmony.awt.gl.image.PNGChunk extends java.lang.Object
{
    private byte[] mData;
    private byte[] mType;

    public void <init>(byte[], byte[])
    {
        org.apache.harmony.awt.gl.image.PNGChunk $r0;
        byte[] $r1, $r2;

        $r0 := @this: org.apache.harmony.awt.gl.image.PNGChunk;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.image.PNGChunk: byte[] mType> = $r1;

        $r0.<org.apache.harmony.awt.gl.image.PNGChunk: byte[] mData> = $r2;

        return;
    }

    public byte[] getData()
    {
        org.apache.harmony.awt.gl.image.PNGChunk $r0;
        byte[] r1;

        $r0 := @this: org.apache.harmony.awt.gl.image.PNGChunk;

        r1 = $r0.<org.apache.harmony.awt.gl.image.PNGChunk: byte[] mData>;

        return r1;
    }

    public java.lang.String getTypeString()
    {
        org.apache.harmony.awt.gl.image.PNGChunk $r0;
        byte[] $r1;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException $r3;

        $r0 := @this: org.apache.harmony.awt.gl.image.PNGChunk;

        $r2 = new java.lang.String;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PNGChunk: byte[] mType>;

     label1:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF8");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return "";

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public short getUnsignedByte(int)
    {
        org.apache.harmony.awt.gl.image.PNGChunk $r0;
        int $i0;
        byte[] $r1;
        byte $b1;
        short $s2;

        $r0 := @this: org.apache.harmony.awt.gl.image.PNGChunk;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PNGChunk: byte[] mData>;

        $b1 = $r1[$i0];

        $s2 = $b1 & 255;

        $s2 = (short) $s2;

        return $s2;
    }

    public long getUnsignedInt(int)
    {
        org.apache.harmony.awt.gl.image.PNGChunk $r0;
        int $i0, $i2, $i3;
        long $l1, $l6;
        byte[] $r1;
        byte $b4;
        short $s5;

        $r0 := @this: org.apache.harmony.awt.gl.image.PNGChunk;

        $i0 := @parameter0: int;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= 4 goto label2;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PNGChunk: byte[] mData>;

        $i3 = $i0 + $i2;

        $b4 = $r1[$i3];

        $s5 = $b4 & 255;

        $i3 = 3 - $i2;

        $i3 = $i3 * 8;

        $i3 = $s5 << $i3;

        $l6 = (long) $i3;

        $l1 = $l1 + $l6;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }
}
