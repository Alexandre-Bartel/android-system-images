public class org.apache.http.impl.conn.tsccm.ConnPoolByRoute extends org.apache.http.impl.conn.tsccm.AbstractConnPool
{
    private final org.apache.http.conn.params.ConnPerRoute connPerRoute;
    protected java.util.Queue freeConnections;
    private final org.apache.commons.logging.Log log;
    protected final int maxTotalConnections;
    protected final org.apache.http.conn.ClientConnectionOperator operator;
    protected final java.util.Map routeToPool;
    protected java.util.Queue waitingThreads;

    public void <init>(org.apache.http.conn.ClientConnectionOperator, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.ClientConnectionOperator $r1;
        org.apache.http.params.HttpParams $r2;
        java.lang.Class $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        java.util.Queue $r6;
        java.util.Map $r7;
        int $i0;
        org.apache.http.conn.params.ConnPerRoute $r8;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.ClientConnectionOperator;

        $r2 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log> = $r4;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection operator may not be null");

        throw $r5;

     label1:
        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator> = $r1;

        $r6 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>();

        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections> = $r6;

        $r6 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>();

        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads> = $r6;

        $r7 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>();

        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool> = $r7;

        $i0 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>($r2);

        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = $i0;

        $r8 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>($r2);

        $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute> = $r8;

        return;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r1;
        org.apache.http.conn.ClientConnectionOperator $r2;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r3;
        org.apache.commons.logging.Log $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        org.apache.http.conn.routing.HttpRoute $r6;
        java.lang.String $r7;
        java.lang.ref.ReferenceQueue $r8;
        java.util.concurrent.locks.Lock $r9;
        int $i0;
        java.util.Set $r10;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r11;
        java.lang.Throwable $r12;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r2 := @parameter1: org.apache.http.conn.ClientConnectionOperator;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new connection [");

        $r6 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label1:
        $r3 = new org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r6 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r8 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.lang.ref.ReferenceQueue refQueue>;

        specialinvoke $r3.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,java.lang.ref.ReferenceQueue)>($r2, $r6, $r8);

        $r9 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r3);

        $i0 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $i0 = $i0 + 1;

        $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections> = $i0;

        $r10 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.Set issuedConnections>;

        $r11 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label3:
        $r9 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r3;

     label4:
        $r12 := @caughtexception;

        $r9 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    protected java.util.Queue createFreeConnQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.LinkedList $r1;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    protected java.util.Map createRouteToPoolMap()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.HashMap $r1;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    protected java.util.Queue createWaitingThreadQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.LinkedList $r1;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    public void deleteClosedConnections()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Lock $r1;
        java.util.Queue $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r5;
        org.apache.http.conn.OperatedClientConnection $r6;
        java.lang.Throwable $r7;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r4;

        $r6 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        $z0 = interfaceinvoke $r6.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r5);

     label3:
        goto label2;

     label4:
        $r7 := @caughtexception;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

     label5:
        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    protected void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r1;
        org.apache.http.conn.routing.HttpRoute $r2;
        org.apache.commons.logging.Log $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.util.concurrent.locks.Lock $r7;
        org.apache.http.conn.OperatedClientConnection $r8;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r9;
        int $i0;
        java.util.Map $r10;
        org.apache.http.impl.conn.IdleConnectionHandler $r11;
        java.lang.Throwable $r12;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r2 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting connection [");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r5 = virtualinvoke $r1.<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

     label1:
        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r8 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r8);

        $r9 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r2, 1);

        virtualinvoke $r9.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r1);

        $i0 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $i0 = $i0 - 1;

        $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections> = $i0;

        $z0 = virtualinvoke $r9.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z0 == 0 goto label3;

        $r10 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

     label3:
        $r11 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r8 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r11.<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>($r8);

     label4:
        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label5:
        $r12 := @caughtexception;

        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r12;

        catch java.lang.Throwable from label2 to label4 with label5;
    }

    protected void deleteLeastUsedEntry()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Lock $r1;
        java.util.Queue $r2;
        java.lang.Object $r3;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r4;
        org.apache.commons.logging.Log $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

     label1:
        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object remove()>();

        $r4 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r3;

        if $r4 == null goto label3;

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r4);

     label2:
        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r5 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r5 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("No free connection to delete.");

     label4:
        goto label2;

     label5:
        $r6 := @caughtexception;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r1;
        boolean $z0, $z1;
        long $l0;
        java.util.concurrent.TimeUnit $r2;
        org.apache.http.conn.routing.HttpRoute $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.util.concurrent.locks.Lock $r8;
        org.apache.http.conn.OperatedClientConnection $r9;
        java.util.Set $r10;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r11;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r12;
        java.util.Queue $r13;
        org.apache.http.impl.conn.IdleConnectionHandler $r14;
        int $i1;
        java.lang.Throwable $r15;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $z0 := @parameter1: boolean;

        $l0 := @parameter2: long;

        $r2 := @parameter3: java.util.concurrent.TimeUnit;

        $r3 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing connection [");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r6 = virtualinvoke $r1.<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label1:
        $r8 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $z1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: boolean isShutDown>;

        if $z1 == 0 goto label4;

        $r9 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r9);

     label3:
        $r8 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label4:
        $r10 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.Set issuedConnections>;

        $r11 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r10.<java.util.Set: boolean remove(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r3, 1);

        if $z0 == 0 goto label7;

        virtualinvoke $r12.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r1);

        $r13 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r13.<java.util.Queue: boolean add(java.lang.Object)>($r1);

        $r14 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r9 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r14.<org.apache.http.impl.conn.IdleConnectionHandler: void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit)>($r9, $l0, $r2);

     label5:
        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r12);

     label6:
        $r8 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label7:
        virtualinvoke $r12.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $i1 = $i1 - 1;

        $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections> = $i1;

     label8:
        goto label5;

     label9:
        $r15 := @caughtexception;

        $r8 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r15;

        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label4 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        java.util.concurrent.locks.Lock $r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r1, 0);

        if $r3 == null goto label3;

        $i0 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>();

     label2:
        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return $i0;

     label3:
        $i0 = 0;

        goto label2;

     label4:
        $r4 := @caughtexception;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.impl.conn.tsccm.WaitingThreadAborter) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        java.lang.Object $r2;
        long $l0, $l2;
        java.util.concurrent.TimeUnit $r3;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter $r4;
        java.util.Date $r5;
        byte $b1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r6, $r17;
        java.util.concurrent.locks.Lock $r7;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r8;
        org.apache.http.impl.conn.tsccm.WaitingThread $r9, $r20;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r10;
        java.lang.Throwable $r11, $r22;
        org.apache.commons.logging.Log $r12;
        java.lang.StringBuilder $r13;
        java.util.Queue $r14;
        int $i3, $i4;
        java.lang.String $r15;
        java.util.Set $r16;
        org.apache.http.conn.ClientConnectionOperator $r18;
        java.util.concurrent.locks.Condition $r19;
        org.apache.http.conn.ConnectionPoolTimeoutException $r21;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 := @parameter1: java.lang.Object;

        $l0 := @parameter2: long;

        $r3 := @parameter3: java.util.concurrent.TimeUnit;

        $r4 := @parameter4: org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        $r5 = null;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label01;

        $r5 = new java.util.Date;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $l0 = $l2 + $l0;

        specialinvoke $r5.<java.util.Date: void <init>(long)>($l0);

     label01:
        $r6 = null;

        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $r8 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r1, 1);

     label03:
        $r9 = null;

     label04:
        if $r6 != null goto label09;

        $z0 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: boolean isShutDown>;

        if $z0 == 0 goto label06;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection pool shut down.");

        throw $r10;

     label05:
        $r11 := @caughtexception;

        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r11;

     label06:
        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label07;

        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total connections kept alive: ");

        $r14 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $i3 = interfaceinvoke $r14.<java.util.Queue: int size()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total issued connections: ");

        $r16 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.Set issuedConnections>;

        $i3 = interfaceinvoke $r16.<java.util.Set: int size()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total allocated connection: ");

        $i3 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i3 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label07:
        $r17 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>($r8, $r2);

     label08:
        $r6 = $r17;

        if $r17 == null goto label10;

     label09:
        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r6;

     label10:
        $i3 = virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

     label11:
        if $i3 <= 0 goto label16;

     label12:
        $z0 = 1;

     label13:
        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label14;

        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Available capacity: ");

        $i3 = virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i3 = virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label14:
        if $z0 == 0 goto label18;

        $i3 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $i4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        if $i3 >= $i4 goto label18;

        $r18 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        $r6 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>($r8, $r18);

     label15:
        goto label04;

     label16:
        $z0 = 0;

     label17:
        goto label13;

     label18:
        if $z0 == 0 goto label20;

        $r14 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $z0 = interfaceinvoke $r14.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label20;

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteLeastUsedEntry()>();

        $r18 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        $r6 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>($r8, $r18);

     label19:
        goto label04;

     label20:
        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label21;

        $r12 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to wait for connection [");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label21:
        if $r9 != null goto label22;

        $r7 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        $r19 = interfaceinvoke $r7.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        $r20 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r19, $r8);

        $r9 = $r20;

        virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>($r20);

     label22:
        virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread)>($r9);

        $r14 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r14.<java.util.Queue: boolean add(java.lang.Object)>($r9);

        $z0 = virtualinvoke $r9.<org.apache.http.impl.conn.tsccm.WaitingThread: boolean await(java.util.Date)>($r5);

     label23:
        virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>($r9);

        $r14 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r14.<java.util.Queue: boolean remove(java.lang.Object)>($r9);

     label24:
        if $z0 != 0 goto label04;

     label25:
        if $r5 == null goto label04;

        $l0 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label26:
        $b1 = $l0 cmp $l2;

     label27:
        if $b1 > 0 goto label04;

        $r21 = new org.apache.http.conn.ConnectionPoolTimeoutException;

        specialinvoke $r21.<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>("Timeout waiting for connection");

        throw $r21;

     label28:
        $r22 := @caughtexception;

        virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>($r9);

        $r14 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r14.<java.util.Queue: boolean remove(java.lang.Object)>($r9);

        throw $r22;

     label29:
        nop;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label08 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label12 to label15 with label05;
        catch java.lang.Throwable from label17 to label19 with label05;
        catch java.lang.Throwable from label20 to label22 with label05;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label23 to label24 with label05;
        catch java.lang.Throwable from label25 to label26 with label05;
        catch java.lang.Throwable from label27 to label29 with label05;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r1;
        java.lang.Object $r2;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r3, $r5;
        java.util.concurrent.locks.Lock $r4;
        boolean $z0, $z1;
        org.apache.commons.logging.Log $r6;
        java.lang.StringBuilder $r7;
        org.apache.http.conn.routing.HttpRoute $r8;
        java.lang.String $r9;
        java.util.Queue $r10;
        org.apache.http.impl.conn.IdleConnectionHandler $r11;
        org.apache.http.conn.OperatedClientConnection $r12;
        int $i0;
        java.lang.Throwable $r13;
        java.util.Set $r14;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r15;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r2 := @parameter1: java.lang.Object;

        $r3 = null;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

        $z0 = 0;

     label01:
        if $z0 != 0 goto label13;

     label02:
        $r5 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object)>($r2);

     label03:
        $r3 = $r5;

     label04:
        if $r5 == null goto label11;

        $r6 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label05;

        $r6 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting free connection [");

        $r8 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9);

     label05:
        $r10 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r10.<java.util.Queue: boolean remove(java.lang.Object)>($r5);

        $r11 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r12 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        $z1 = virtualinvoke $r11.<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>($r12);

        if $z1 != 0 goto label09;

        $r6 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label06;

        $r6 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing expired free connection [");

        $r8 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9);

     label06:
        $r12 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r12);

        virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i0 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $i0 = $i0 - 1;

        $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections> = $i0;

     label07:
        goto label01;

     label08:
        $r13 := @caughtexception;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r13;

     label09:
        $r14 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.Set issuedConnections>;

        $r15 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r15);

     label10:
        $z0 = 1;

        goto label01;

     label11:
        $z0 = 1;

        $r6 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label01;

        $r6 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No free connections [");

        $r8 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9);

     label12:
        goto label01;

     label13:
        $r4 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r3;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute, boolean)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        boolean $z0;
        java.util.concurrent.locks.Lock $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r5, $r6;
        java.lang.Throwable $r7;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (org.apache.http.impl.conn.tsccm.RouteSpecificPool) $r4;

     label2:
        $r6 = $r5;

        if $r5 != null goto label4;

     label3:
        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)>($r1);

        $r6 = $r5;

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label4:
        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r6;

     label5:
        $r7 := @caughtexception;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected void handleLostEntry(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        java.util.concurrent.locks.Lock $r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r3;
        boolean $z0;
        java.util.Map $r4;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>($r1, 1);

        virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z0 == 0 goto label2;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        $i0 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        $i0 = $i0 - 1;

        $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections> = $i0;

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r3);

     label3:
        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label4:
        $r5 := @caughtexception;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r2;
        int $i0;
        org.apache.http.conn.params.ConnPerRoute $r3;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = new org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute>;

        $i0 = interfaceinvoke $r3.<org.apache.http.conn.params.ConnPerRoute: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>($r1);

        specialinvoke $r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void <init>(org.apache.http.conn.routing.HttpRoute,int)>($r1, $i0);

        return $r2;
    }

    protected org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Condition $r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r2;
        org.apache.http.impl.conn.tsccm.WaitingThread $r3;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: java.util.concurrent.locks.Condition;

        $r2 := @parameter1: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = new org.apache.http.impl.conn.tsccm.WaitingThread;

        specialinvoke $r3.<org.apache.http.impl.conn.tsccm.WaitingThread: void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r1, $r2);

        return $r3;
    }

    protected void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r1;
        org.apache.http.impl.conn.tsccm.WaitingThread $r2;
        java.util.concurrent.locks.Lock $r3;
        boolean $z0;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuilder $r5;
        org.apache.http.conn.routing.HttpRoute $r6;
        java.lang.String $r7;
        java.util.Queue $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r10;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r2 = null;

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

        if $r1 == null goto label05;

     label01:
        $z0 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean hasThread()>();

        if $z0 == 0 goto label05;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label02;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying thread waiting on pool [");

        $r6 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label02:
        $r2 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>();

     label03:
        if $r2 == null goto label04;

        virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label04:
        $r3 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label05:
        $r8 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $z0 = interfaceinvoke $r8.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label06;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying thread waiting on any pool");

     label06:
        $r8 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r9 = interfaceinvoke $r8.<java.util.Queue: java.lang.Object remove()>();

        $r2 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r9;

     label07:
        goto label03;

     label08:
        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying no-one, there are no waiting threads");

     label09:
        goto label03;

     label10:
        $r10 := @caughtexception;

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        java.lang.Object $r2;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter $r3;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 $r4;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        specialinvoke $r3.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()>();

        $r4 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1;

        specialinvoke $r4.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: void <init>(org.apache.http.impl.conn.tsccm.ConnPoolByRoute,org.apache.http.impl.conn.tsccm.WaitingThreadAborter,org.apache.http.conn.routing.HttpRoute,java.lang.Object)>($r0, $r3, $r1, $r2);

        return $r4;
    }

    public void shutdown()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Lock $r1;
        java.util.Queue $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r5;
        org.apache.http.conn.OperatedClientConnection $r6;
        java.lang.Throwable $r7;
        org.apache.http.impl.conn.tsccm.WaitingThread $r8;
        java.util.Map $r9;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void shutdown()>();

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r4;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        $r6 = virtualinvoke $r5.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r6);

     label3:
        goto label2;

     label4:
        $r7 := @caughtexception;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

     label5:
        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r4;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        virtualinvoke $r8.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

        goto label6;

     label7:
        $r9 = $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

     label8:
        $r1 = $r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label8 with label4;
    }
}
