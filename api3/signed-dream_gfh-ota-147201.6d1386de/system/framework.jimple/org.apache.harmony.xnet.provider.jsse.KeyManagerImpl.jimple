public class org.apache.harmony.xnet.provider.jsse.KeyManagerImpl extends javax.net.ssl.X509ExtendedKeyManager
{
    private final java.util.Hashtable hash;

    public void <init>(java.security.KeyStore, char[])
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.security.KeyStore $r1;
        char[] $r2;
        java.util.Hashtable $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.security.KeyStore$PasswordProtection $r7;
        java.security.KeyStore$Entry $r8;
        java.security.KeyStore$PrivateKeyEntry $r9;
        java.security.KeyStoreException $r10, $r11;
        java.security.UnrecoverableEntryException $r12;
        java.security.NoSuchAlgorithmException $r13;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.security.KeyStore;

        $r2 := @parameter1: char[];

        specialinvoke $r0.<javax.net.ssl.X509ExtendedKeyManager: void <init>()>();

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash> = $r3;

     label01:
        $r4 = virtualinvoke $r1.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label13;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (java.lang.String) $r5;

     label03:
        $z0 = virtualinvoke $r1.<java.security.KeyStore: boolean entryInstanceOf(java.lang.String,java.lang.Class)>($r6, class "java/security/KeyStore$PrivateKeyEntry");

     label04:
        if $z0 == 0 goto label02;

     label05:
        $r7 = new java.security.KeyStore$PasswordProtection;

        specialinvoke $r7.<java.security.KeyStore$PasswordProtection: void <init>(char[])>($r2);

        $r8 = virtualinvoke $r1.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r6, $r7);

     label06:
        $r9 = (java.security.KeyStore$PrivateKeyEntry) $r8;

     label07:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r9);

     label08:
        goto label02;

     label09:
        $r10 := @caughtexception;

        goto label02;

     label10:
        $r11 := @caughtexception;

        return;

     label11:
        $r12 := @caughtexception;

        goto label02;

     label12:
        $r13 := @caughtexception;

        goto label02;

     label13:
        return;

        catch java.security.KeyStoreException from label01 to label02 with label10;
        catch java.security.KeyStoreException from label03 to label04 with label09;
        catch java.security.KeyStoreException from label05 to label06 with label09;
        catch java.security.KeyStoreException from label07 to label08 with label09;
        catch java.security.UnrecoverableEntryException from label03 to label04 with label11;
        catch java.security.UnrecoverableEntryException from label05 to label06 with label11;
        catch java.security.UnrecoverableEntryException from label07 to label08 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label12;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label12;
    }

    private java.lang.String[] chooseAlias(java.lang.String[], java.security.Principal[])
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String[] $r1;
        java.security.Principal[] $r2;
        java.util.Vector $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Hashtable $r4;
        java.util.Enumeration $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String $r7, $r12, $r13;
        java.security.KeyStore$PrivateKeyEntry $r8;
        java.security.cert.Certificate[] $r9;
        java.security.cert.Certificate $r10;
        java.security.PublicKey $r11;
        java.security.cert.X509Certificate $r14;
        javax.security.auth.x500.X500Principal $r15;
        java.security.Principal $r16;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.security.Principal[];

        if $r1 == null goto label01;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        $i0 = 0;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.util.Enumeration keys()>();

     label03:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (java.lang.String) $r6;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        $r6 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r7);

        $r8 = (java.security.KeyStore$PrivateKeyEntry) $r6;

        $r9 = virtualinvoke $r8.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        $r10 = $r9[0];

        $r11 = virtualinvoke $r10.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r12 = interfaceinvoke $r11.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $i1 = 0;

     label04:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label03;

        $r13 = $r1[$i1];

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label07;

        if $r2 == null goto label10;

        $i2 = lengthof $r2;

        if $i2 == 0 goto label10;

        $i2 = 0;

     label05:
        $i3 = lengthof $r9;

        if $i2 >= $i3 goto label07;

        $r10 = $r9[$i2];

        $z0 = $r10 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label09;

        $r10 = $r9[$i2];

        $r14 = (java.security.cert.X509Certificate) $r10;

        $r15 = virtualinvoke $r14.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $i3 = 0;

     label06:
        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label09;

        $r16 = $r2[$i3];

        $z0 = virtualinvoke $r15.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label08;

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r7);

        $i0 = $i0 + 1;

     label07:
        $i1 = $i1 + 1;

        goto label04;

     label08:
        $i3 = $i3 + 1;

        goto label06;

     label09:
        $i2 = $i2 + 1;

        goto label05;

     label10:
        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r7);

        $i0 = $i0 + 1;

        goto label07;

     label11:
        if $i0 <= 0 goto label12;

        $r1 = newarray (java.lang.String)[$i0];

        virtualinvoke $r3.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;

     label12:
        return null;
    }

    public java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String[] $r1;
        java.security.Principal[] $r2;
        java.net.Socket $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.security.Principal[];

        $r3 := @parameter2: java.net.Socket;

        $r1 = specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r1, $r2);

        if $r1 == null goto label1;

        $r4 = $r1[0];

        return $r4;

     label1:
        return null;
    }

    public java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String[] $r1;
        java.security.Principal[] $r2;
        javax.net.ssl.SSLEngine $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.security.Principal[];

        $r3 := @parameter2: javax.net.ssl.SSLEngine;

        $r1 = specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r1, $r2);

        if $r1 == null goto label1;

        $r4 = $r1[0];

        return $r4;

     label1:
        return null;
    }

    public java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String $r1;
        java.security.Principal[] $r2;
        javax.net.ssl.SSLEngine $r3;
        java.lang.String[] $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.Principal[];

        $r3 := @parameter2: javax.net.ssl.SSLEngine;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        $r4 = specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r4, $r2);

        if $r4 == null goto label1;

        $r1 = $r4[0];

        return $r1;

     label1:
        return null;
    }

    public java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String $r1;
        java.security.Principal[] $r2;
        java.net.Socket $r3;
        java.lang.String[] $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.Principal[];

        $r3 := @parameter2: java.net.Socket;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        $r4 = specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r4, $r2);

        if $r4 == null goto label1;

        $r1 = $r4[0];

        return $r1;

     label1:
        return null;
    }

    public java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)
    {
        java.lang.String $r0;
        java.security.cert.X509Certificate[] $r1;
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r2;
        java.util.Hashtable $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.security.KeyStore$PrivateKeyEntry $r5;
        java.security.cert.Certificate[] $r6;
        java.security.cert.Certificate $r7;
        int $i0, $i1;
        java.security.cert.X509Certificate $r8;

        $r2 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r3 = $r2.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        $z0 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        $r3 = $r2.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r5 = (java.security.KeyStore$PrivateKeyEntry) $r4;

        $r6 = virtualinvoke $r5.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        $r7 = $r6[0];

        $z0 = $r7 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label4;

        $i0 = lengthof $r6;

        $r1 = newarray (java.security.cert.X509Certificate)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label3;

        $r7 = $r6[$i0];

        $r8 = (java.security.cert.X509Certificate) $r7;

        $r1[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r1;

     label4:
        return null;
    }

    public java.lang.String[] getClientAliases(java.lang.String, java.security.Principal[])
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String $r1;
        java.security.Principal[] $r2;
        java.lang.String[] $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.Principal[];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r1;

        $r3 = specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r3, $r2);

        return $r3;
    }

    public java.security.PrivateKey getPrivateKey(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r1;
        java.util.Hashtable $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.KeyStore$PrivateKeyEntry $r4;
        java.security.PrivateKey $r5;

        $r1 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = $r1.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        $r2 = $r1.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.util.Hashtable hash>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (java.security.KeyStore$PrivateKeyEntry) $r3;

        $r5 = virtualinvoke $r4.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

        return $r5;

     label2:
        return null;
    }

    public java.lang.String[] getServerAliases(java.lang.String, java.security.Principal[])
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r0;
        java.lang.String $r1;
        java.security.Principal[] $r2;
        java.lang.String[] $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.Principal[];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r1;

        $r3 = specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r3, $r2);

        return $r3;
    }
}
