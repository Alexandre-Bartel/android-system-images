public class android.test.TestLocationProvider extends android.location.LocationProviderImpl
{
    public static final double ALTITUDE;
    public static final float BEARING;
    public static final double LAT;
    public static final double LON;
    public static final java.lang.String PROVIDER_NAME;
    public static final float SPEED;
    public static final int STATUS;
    private boolean mEnabled;
    private android.location.Location mLocation;

    public void <init>()
    {
        android.test.TestLocationProvider $r0;
        android.location.Location $r1;

        $r0 := @this: android.test.TestLocationProvider;

        specialinvoke $r0.<android.location.LocationProviderImpl: void <init>(java.lang.String)>("test");

        $r1 = new android.location.Location;

        specialinvoke $r1.<android.location.Location: void <init>(java.lang.String)>("test");

        $r0.<android.test.TestLocationProvider: android.location.Location mLocation> = $r1;

        specialinvoke $r0.<android.test.TestLocationProvider: void updateLocation()>();

        return;
    }

    private void updateLocation()
    {
        android.test.TestLocationProvider $r0;
        android.os.Bundle $r1;
        long $l0, $l1;
        android.location.Location $r2;
        double $d0;
        float $f0;

        $r0 := @this: android.test.TestLocationProvider;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l1 / 5000L;

        $l0 = $l0 % 500000L;

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        $d0 = (double) $l0;

        $d0 = 0.0 * $d0;

        virtualinvoke $r2.<android.location.Location: void setLatitude(double)>($d0);

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        $d0 = (double) $l0;

        $d0 = 1.0 * $d0;

        virtualinvoke $r2.<android.location.Location: void setLongitude(double)>($d0);

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r2.<android.location.Location: void setAltitude(double)>(10000.0);

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r2.<android.location.Location: void setSpeed(float)>(10.0F);

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        $f0 = (float) $l0;

        $f0 = 1.0F * $f0;

        virtualinvoke $r2.<android.location.Location: void setBearing(float)>($f0);

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("extraTest", 24);

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r2.<android.location.Location: void setExtras(android.os.Bundle)>($r1);

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r2.<android.location.Location: void setTime(long)>($l1);

        return;
    }

    public void disable()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        $r0.<android.test.TestLocationProvider: boolean mEnabled> = 0;

        return;
    }

    public void enable()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        $r0.<android.test.TestLocationProvider: boolean mEnabled> = 1;

        return;
    }

    public int getAccuracy()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 2;
    }

    public boolean getLocation(android.location.Location)
    {
        android.test.TestLocationProvider $r0;
        android.location.Location $r1, $r2;

        $r0 := @this: android.test.TestLocationProvider;

        $r1 := @parameter0: android.location.Location;

        specialinvoke $r0.<android.test.TestLocationProvider: void updateLocation()>();

        $r2 = $r0.<android.test.TestLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r1.<android.location.Location: void set(android.location.Location)>($r2);

        return 1;
    }

    public int getPowerRequirement()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 0;
    }

    public int getStatus(android.os.Bundle)
    {
        android.test.TestLocationProvider $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.test.TestLocationProvider;

        $r1 := @parameter0: android.os.Bundle;

        return 2;
    }

    public boolean hasMonetaryCost()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 0;
    }

    public boolean isEnabled()
    {
        android.test.TestLocationProvider $r0;
        boolean z0;

        $r0 := @this: android.test.TestLocationProvider;

        z0 = $r0.<android.test.TestLocationProvider: boolean mEnabled>;

        return z0;
    }

    public boolean requiresCell()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 0;
    }

    public boolean requiresNetwork()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 0;
    }

    public boolean requiresSatellite()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 0;
    }

    public boolean supportsAltitude()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 1;
    }

    public boolean supportsBearing()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 1;
    }

    public boolean supportsSpeed()
    {
        android.test.TestLocationProvider $r0;

        $r0 := @this: android.test.TestLocationProvider;

        return 1;
    }

    public static void <clinit>()
    {
        <android.test.TestLocationProvider: int STATUS> = 2;

        <android.test.TestLocationProvider: float SPEED> = 10.0F;

        <android.test.TestLocationProvider: java.lang.String PROVIDER_NAME> = "test";

        <android.test.TestLocationProvider: double LON> = 1.0;

        <android.test.TestLocationProvider: double LAT> = 0.0;

        <android.test.TestLocationProvider: float BEARING> = 1.0F;

        <android.test.TestLocationProvider: double ALTITUDE> = 10000.0;

        return;
    }
}
