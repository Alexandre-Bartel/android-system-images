public final class com.android.internal.os.BatteryStatsImpl$Uid extends android.os.BatteryStats$Uid
{
    long mCurrentTcpBytesReceived;
    long mCurrentTcpBytesSent;
    boolean mFullWifiLockOut;
    com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer;
    long mLoadedTcpBytesReceived;
    long mLoadedTcpBytesSent;
    final java.util.HashMap mPackageStats;
    final java.util.HashMap mProcessStats;
    boolean mScanWifiLockOut;
    com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer;
    final java.util.HashMap mSensorStats;
    long mStartedTcpBytesReceived;
    long mStartedTcpBytesSent;
    long mTcpBytesReceivedAtLastUnplug;
    long mTcpBytesSentAtLastUnplug;
    final int mUid;
    com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters;
    final java.util.HashMap mWakelockStats;
    boolean mWifiTurnedOn;
    com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer;
    final com.android.internal.os.BatteryStatsImpl this$0;

    public void <init>(com.android.internal.os.BatteryStatsImpl, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        int $i0;
        java.util.HashMap $r2;
        com.android.internal.os.BatteryStatsImpl$Timer $r3;
        java.util.ArrayList $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter1: int;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0> = $r1;

        specialinvoke $r0.<android.os.BatteryStats$Uid: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesReceived> = -1L;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesSent> = -1L;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats> = $r2;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid> = $i0;

        $r3 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r4 = $r1.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(4, null, $r4);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer> = $r3;

        $r3 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r4 = $r1.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(5, null, $r4);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer> = $r3;

        $r3 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r4 = $r1.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(6, null, $r4);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer> = $r3;

        return;
    }

    public long computeCurrentTcpBytesReceived()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        long $l0, $l1, $l4;
        byte $b2;
        int $i3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesReceived>;

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesReceived>;

        $b2 = $l0 cmp 0L;

        if $b2 < 0 goto label2;

        $i3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        $l0 = staticinvoke <android.os.NetStat: long getUidRxBytes(int)>($i3);

        $l4 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesReceived>;

        $l0 = $l0 - $l4;

     label1:
        $l1 = $l1 + $l0;

        return $l1;

     label2:
        $l0 = 0L;

        goto label1;
    }

    public long computeCurrentTcpBytesSent()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        long $l0, $l1, $l4;
        byte $b2;
        int $i3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesSent>;

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesSent>;

        $b2 = $l0 cmp 0L;

        if $b2 < 0 goto label2;

        $i3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        $l0 = staticinvoke <android.os.NetStat: long getUidTxBytes(int)>($i3);

        $l4 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesSent>;

        $l0 = $l0 - $l4;

     label1:
        $l1 = $l1 + $l0;

        return $l1;

     label2:
        $l0 = 0L;

        goto label1;
    }

    public com.android.internal.os.BatteryStatsImpl getBatteryStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        return r1;
    }

    public long getFullWifiLockTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public java.util.Map getPackageStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.util.HashMap r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        return r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r2;

        if $r4 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid$Pkg;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>($r0);

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r4;

     label1:
        return $r4;
    }

    public java.util.Map getProcessStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.util.HashMap r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        return r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r2;

        if $r4 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>($r0);

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r4;

     label1:
        return $r4;
    }

    public long getScanWifiLockTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public java.util.Map getSensorStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.util.HashMap r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        return r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getSensorTimerLocked(int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0;
        boolean $z0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor $r4;
        com.android.internal.os.BatteryStatsImpl$Timer $r5;
        com.android.internal.os.BatteryStatsImpl $r6;
        android.util.SparseArray $r7;
        java.util.ArrayList $r8, $r9;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid$Sensor) $r3;

        if $r4 != null goto label2;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int)>($r0, $i0);

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

     label2:
        $r5 = $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer mTimer>;

        if $r5 == null goto label3;

        return $r5;

     label3:
        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r7 = $r6.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers>;

        $r3 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r8 = (java.util.ArrayList) $r3;

        if $r8 != null goto label4;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r7 = $r6.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r8);

     label4:
        $r5 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r9 = $r6.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(3, $r8, $r9);

        $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer mTimer> = $r5;

        return $r5;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.lang.String $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r6;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>($r1);

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv) $r5;

        if $r6 != null goto label1;

        $r6 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv newServiceStatsLocked()>();

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

        return $r6;

     label1:
        return $r6;
    }

    public long getTcpBytesReceived(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesReceived>;

        return $l1;

     label1:
        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesReceived()>();

        $l2 = $l1;

        if $i0 != 3 goto label3;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesReceivedAtLastUnplug>;

        $l2 = $l1 - $l2;

     label2:
        return $l2;

     label3:
        if $i0 != 0 goto label2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesReceived>;

        $l2 = $l1 + $l2;

        goto label2;
    }

    public long getTcpBytesSent(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesSent>;

        return $l1;

     label1:
        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesSent()>();

        $l2 = $l1;

        if $i0 != 3 goto label3;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesSentAtLastUnplug>;

        $l2 = $l1 - $l2;

     label2:
        return $l2;

     label3:
        if $i0 != 0 goto label2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesSent>;

        $l2 = $l1 + $l2;

        goto label2;
    }

    public int getUid()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int i0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        return i0;
    }

    public int getUserActivityCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r1;
        com.android.internal.os.BatteryStatsImpl$Counter $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r2 = $r1[$i0];

        $i0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Counter: int getCount(int)>($i1);

        return $i0;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getWakeTimerLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.lang.String $r1;
        int $i0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        com.android.internal.os.BatteryStatsImpl$Timer $r7;
        com.android.internal.os.BatteryStatsImpl $r8;
        java.util.ArrayList $r9, $r10;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid$Wakelock) $r3;

        if $r4 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>($r0);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label5;
            case 2: goto label7;
            default: goto label2;
        };

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label3:
        $r7 = $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial>;

        if $r7 != null goto label4;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r9 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r10 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(0, $r9, $r10);

        $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial> = $r7;

     label4:
        return $r7;

     label5:
        $r7 = $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull>;

        if $r7 != null goto label6;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r9 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers>;

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r10 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(1, $r9, $r10);

        $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull> = $r7;

     label6:
        return $r7;

     label7:
        $r7 = $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow>;

        if $r7 != null goto label8;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r9 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers>;

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r10 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(2, $r9, $r10);

        $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow> = $r7;

     label8:
        return $r7;
    }

    public java.util.Map getWakelockStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.util.HashMap r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        return r1;
    }

    public long getWifiTurnedOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public boolean hasUserActivity()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    void initUserActivityLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl$Counter $r1;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r2;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r3;
        java.util.ArrayList $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r2 = newarray (com.android.internal.os.BatteryStatsImpl$Counter)[7];

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters> = $r2;

        $i0 = 0;

     label1:
        if $i0 >= 7 goto label2;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r1 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList)>($r4);

        $r2[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteFullWifiLockAcquiredLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer>;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r1);

        return;

     label1:
        return;
    }

    public void noteFullWifiLockReleasedLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 0;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer>;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r1);

        return;

     label1:
        return;
    }

    public void noteScanWifiLockAcquiredLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mScanWifiLockOut>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mScanWifiLockOut> = 1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer>;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r1);

        return;

     label1:
        return;
    }

    public void noteScanWifiLockReleasedLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mScanWifiLockOut>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mScanWifiLockOut> = 0;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer>;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r1);

        return;

     label1:
        return;
    }

    public void noteStartGps()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getSensorTimerLocked(int,boolean)>(-10000, 1);

        if $r1 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r2);

        return;

     label1:
        return;
    }

    public void noteStartSensor(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getSensorTimerLocked(int,boolean)>($i0, 1);

        if $r1 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r2);

        return;

     label1:
        return;
    }

    public void noteStartWakeLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.lang.String $r1;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r2;
        com.android.internal.os.BatteryStatsImpl$Timer $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getWakeTimerLocked(java.lang.String,int)>($r1, $i0);

        if $r3 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r2);

        return;

     label1:
        return;
    }

    public void noteStopGps()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getSensorTimerLocked(int,boolean)>(-10000, 0);

        if $r1 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r2);

        return;

     label1:
        return;
    }

    public void noteStopSensor(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getSensorTimerLocked(int,boolean)>($i0, 0);

        if $r1 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r2);

        return;

     label1:
        return;
    }

    public void noteStopWakeLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.lang.String $r1;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r2;
        com.android.internal.os.BatteryStatsImpl$Timer $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getWakeTimerLocked(java.lang.String,int)>($r1, $i0);

        if $r3 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r2);

        return;

     label1:
        return;
    }

    public void noteUserActivityLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r1;
        com.android.internal.os.BatteryStatsImpl$Counter $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r1 != null goto label1;

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: void initUserActivityLocked()>();

     label1:
        if $i0 >= 0 goto label3;

        $i0 = 0;

     label2:
        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r2 = $r1[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Counter: void stepLocked()>();

        return;

     label3:
        if $i0 < 7 goto label2;

        $i0 = 6;

        goto label2;
    }

    public void noteWifiTurnedOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiTurnedOn>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiTurnedOn> = 0;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer>;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r1);

        return;

     label1:
        return;
    }

    public void noteWifiTurnedOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiTurnedOn>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiTurnedOn> = 1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer>;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r1);

        return;

     label1:
        return;
    }

    void readFromParcelLocked(java.util.ArrayList, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        java.util.ArrayList $r1;
        android.os.Parcel $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r4;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor $r5;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r6;
        int $i0, $i1, $i2;
        java.util.HashMap $r7;
        java.lang.String $r8;
        com.android.internal.os.BatteryStatsImpl $r9;
        java.lang.Integer $r10;
        long $l3;
        com.android.internal.os.BatteryStatsImpl$Timer $r11;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r12;
        com.android.internal.os.BatteryStatsImpl$Counter $r13;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: android.os.Parcel;

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label02;

        $r8 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

        $r6 = new com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        specialinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>($r0);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>($r1, $r2);

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r6);

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label04;

        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r5 = new com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int)>($r0, $i2);

        $r9 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r1 = $r9.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>($r1, $r2);

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r5);

        $i1 = $i1 + 1;

        goto label03;

     label04:
        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label06;

        $r8 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>($r0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void readFromParcelLocked(android.os.Parcel)>($r2);

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r4);

        $i1 = $i1 + 1;

        goto label05;

     label06:
        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label08;

        $r8 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

        $r3 = new com.android.internal.os.BatteryStatsImpl$Uid$Pkg;

        specialinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>($r0);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void readFromParcelLocked(android.os.Parcel)>($r2);

        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r3);

        $i1 = $i1 + 1;

        goto label07;

     label08:
        $l3 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesReceived> = $l3;

        $l3 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesSent> = $l3;

        $l3 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesReceived> = $l3;

        $l3 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesSent> = $l3;

        $l3 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesReceivedAtLastUnplug> = $l3;

        $l3 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesSentAtLastUnplug> = $l3;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiTurnedOn> = 0;

        $r11 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r9 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r1 = $r9.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(4, null, $r1, $r2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer> = $r11;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 0;

        $r11 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r9 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r1 = $r9.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(5, null, $r1, $r2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer> = $r11;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mScanWifiLockOut> = 0;

        $r11 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r9 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r1 = $r9.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(6, null, $r1, $r2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer> = $r11;

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        if $i0 != 0 goto label09;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters> = null;

        return;

     label09:
        $r12 = newarray (com.android.internal.os.BatteryStatsImpl$Counter)[7];

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters> = $r12;

        $i0 = 0;

     label10:
        if $i0 >= 7 goto label11;

        $r12 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r13 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r9 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r1 = $r9.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList,android.os.Parcel)>($r1, $r2);

        $r12[$i0] = $r13;

        $i0 = $i0 + 1;

        goto label10;

     label11:
        return;
    }

    void writeToParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid $r0;
        android.os.Parcel $r1;
        long $l0, $l2;
        java.util.HashMap $r2;
        int $i1;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;
        java.lang.String $r7;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r8;
        java.lang.Integer $r9;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor $r10;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r11;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r12;
        com.android.internal.os.BatteryStatsImpl$Timer $r13;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r14;
        com.android.internal.os.BatteryStatsImpl$Counter $r15;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid;

        $r1 := @parameter0: android.os.Parcel;

        $l0 := @parameter1: long;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (com.android.internal.os.BatteryStatsImpl$Uid$Wakelock) $r5;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void writeToParcelLocked(android.os.Parcel,long)>($r1, $l0);

        goto label01;

     label02:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (com.android.internal.os.BatteryStatsImpl$Uid$Sensor) $r5;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void writeToParcelLocked(android.os.Parcel,long)>($r1, $l0);

        goto label03;

     label04:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r5;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeToParcelLocked(android.os.Parcel)>($r1);

        goto label05;

     label06:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r5;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void writeToParcelLocked(android.os.Parcel)>($r1);

        goto label07;

     label08:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesReceived>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesSent>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesReceived()>();

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesSent()>();

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesReceivedAtLastUnplug>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesSentAtLastUnplug>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $r13 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l0);

        $r13 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l0);

        $r13 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l0);

        $r14 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r14 != null goto label09;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label09:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $i1 = 0;

     label10:
        if $i1 >= 7 goto label11;

        $r14 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r15 = $r14[$i1];

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$Counter: void writeToParcel(android.os.Parcel)>($r1);

        $i1 = $i1 + 1;

        goto label10;

     label11:
        return;
    }
}
