public class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager extends java.lang.Object implements org.apache.http.conn.ClientConnectionManager
{
    protected org.apache.http.conn.ClientConnectionOperator connOperator;
    protected final org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool;
    private final org.apache.commons.logging.Log log;
    protected org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

    public void <init>(org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.params.HttpParams $r1;
        org.apache.http.conn.scheme.SchemeRegistry $r2;
        java.lang.Class $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.http.conn.ClientConnectionOperator $r6;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r7;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 := @parameter0: org.apache.http.params.HttpParams;

        $r2 := @parameter1: org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log> = $r4;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r5;

     label1:
        $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry> = $r2;

        $r6 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>($r2);

        $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator connOperator> = $r6;

        $r7 = virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)>($r1);

        $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool> = $r7;

        return;
    }

    static org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.commons.logging.Log r1;

        $r0 := @parameter0: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        return r1;
    }

    public void closeExpiredConnections()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r1;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeExpiredConnections()>();

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void deleteClosedConnections()>();

        return;
    }

    public void closeIdleConnections(long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r2;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeIdleConnections(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void deleteClosedConnections()>();

        return;
    }

    protected org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.conn.scheme.SchemeRegistry $r1;
        org.apache.http.impl.conn.DefaultClientConnectionOperator $r2;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        $r2 = new org.apache.http.impl.conn.DefaultClientConnectionOperator;

        specialinvoke $r2.<org.apache.http.impl.conn.DefaultClientConnectionOperator: void <init>(org.apache.http.conn.scheme.SchemeRegistry)>($r1);

        return $r2;
    }

    protected org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.params.HttpParams $r1;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r2;
        org.apache.http.conn.ClientConnectionOperator $r3;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 := @parameter0: org.apache.http.params.HttpParams;

        $r2 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r3 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator connOperator>;

        specialinvoke $r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)>($r3, $r1);

        virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void enableConnectionGC()>();

        return $r2;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        virtualinvoke $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void shutdown()>();

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;
    }

    public int getConnectionsInPool()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r1, $r2;
        java.lang.Throwable $r3;
        int i0;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        i0 = $r2.<org.apache.http.impl.conn.tsccm.AbstractConnPool: int numConnections>;

        exitmonitor $r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.conn.routing.HttpRoute $r0;
        int $i0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r1;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r2;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r3;

        $r1 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r0 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = $r1.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        $r3 = (org.apache.http.impl.conn.tsccm.ConnPoolByRoute) $r2;

        $i0 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>($r0);

        return $i0;
    }

    public org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.conn.scheme.SchemeRegistry r1;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        return r1;
    }

    public void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.conn.ManagedClientConnection $r1;
        long $l0;
        java.util.concurrent.TimeUnit $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter $r4;
        org.apache.http.impl.conn.AbstractPoolEntry $r5;
        org.apache.http.conn.ClientConnectionManager $r6;
        org.apache.commons.logging.Log $r7;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r8;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r9;
        java.io.IOException $r10;
        java.lang.Throwable $r11;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 := @parameter0: org.apache.http.conn.ManagedClientConnection;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        $z0 = $r1 instanceof org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter;

        if $z0 != 0 goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection class mismatch, connection not obtained from this manager.");

        throw $r3;

     label01:
        $r4 = (org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter) $r1;

        $r5 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>();

        if $r5 == null goto label02;

        $r6 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>();

        if $r6 == $r0 goto label02;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection not obtained from this manager.");

        throw $r3;

     label02:
        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isOpen()>();

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isMarkedReusable()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        $r7 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label05;

        $r7 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection open but not marked reusable.");

     label05:
        virtualinvoke $r4.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void shutdown()>();

     label06:
        $r5 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>();

        $r8 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r5;

        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isMarkedReusable()>();

        virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>();

        if $r8 == null goto label12;

        $r9 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r9.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>($r8, $z0, $l0, $r2);

        return;

     label07:
        $r10 := @caughtexception;

     label08:
        $r7 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label09;

        $r7 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Exception shutting down released connection.", $r10);

     label09:
        $r5 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>();

        $r8 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r5;

        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isMarkedReusable()>();

        virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>();

        if $r8 == null goto label13;

        $r9 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r9.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>($r8, $z0, $l0, $r2);

        return;

     label10:
        $r11 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>();

        $r8 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r5;

        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isMarkedReusable()>();

        virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>();

        if $r8 == null goto label11;

        $r9 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r9.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>($r8, $z0, $l0, $r2);

     label11:
        throw $r11;

     label12:
        return;

     label13:
        return;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label04 to label06 with label07;
        catch java.lang.Throwable from label02 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        java.lang.Object $r2;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r3;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r4;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 $r5;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 := @parameter1: java.lang.Object;

        $r4 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        $r3 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>($r1, $r2);

        $r5 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        specialinvoke $r5.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.tsccm.PoolEntryRequest,org.apache.http.conn.routing.HttpRoute)>($r0, $r3, $r1);

        return $r5;
    }

    public void shutdown()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r1;

        $r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool>;

        virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void shutdown()>();

        return;
    }
}
