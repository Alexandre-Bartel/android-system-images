class android.view.ViewRoot$W extends android.view.IWindow$Stub
{
    private final android.os.Looper mMainLooper;
    private final java.lang.ref.WeakReference mViewRoot;

    public void <init>(android.view.ViewRoot, android.content.Context)
    {
        android.view.ViewRoot$W $r0;
        android.view.ViewRoot $r1;
        android.content.Context $r2;
        android.os.Looper $r3;
        java.lang.ref.WeakReference $r4;

        $r0 := @this: android.view.ViewRoot$W;

        $r1 := @parameter0: android.view.ViewRoot;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<android.view.IWindow$Stub: void <init>()>();

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot> = $r4;

        $r3 = virtualinvoke $r2.<android.content.Context: android.os.Looper getMainLooper()>();

        $r0.<android.view.ViewRoot$W: android.os.Looper mMainLooper> = $r3;

        return;
    }

    private static int checkCallingPermission(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        android.app.IActivityManager $r1;
        int $i0, $i1;
        android.os.RemoteException $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i0 = interfaceinvoke $r1.<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>($r0, $i0, $i1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchAppVisibility(boolean)
    {
        android.view.ViewRoot$W $r0;
        boolean $z0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.ViewRoot $r3;

        $r0 := @this: android.view.ViewRoot$W;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r2 = virtualinvoke $r1.<java.lang.ref.Reference: java.lang.Object get()>();

        $r3 = (android.view.ViewRoot) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<android.view.ViewRoot: void dispatchAppVisibility(boolean)>($z0);

        return;

     label1:
        return;
    }

    public void dispatchGetNewSurface()
    {
        android.view.ViewRoot$W $r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.ViewRoot $r3;

        $r0 := @this: android.view.ViewRoot$W;

        $r1 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r2 = virtualinvoke $r1.<java.lang.ref.Reference: java.lang.Object get()>();

        $r3 = (android.view.ViewRoot) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<android.view.ViewRoot: void dispatchGetNewSurface()>();

        return;

     label1:
        return;
    }

    public void dispatchKey(android.view.KeyEvent)
    {
        android.view.ViewRoot$W $r0;
        android.view.KeyEvent $r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        android.view.ViewRoot $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.view.ViewRoot$EventCompletion $r7;
        android.os.Looper $r8;

        $r0 := @this: android.view.ViewRoot$W;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r3 = virtualinvoke $r2.<java.lang.ref.Reference: java.lang.Object get()>();

        $r4 = (android.view.ViewRoot) $r3;

        if $r4 == null goto label1;

        virtualinvoke $r4.<android.view.ViewRoot: void dispatchKey(android.view.KeyEvent)>($r1);

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key event ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but no ViewRoot available!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewRoot.W", $r6);

        $r7 = new android.view.ViewRoot$EventCompletion;

        $r8 = $r0.<android.view.ViewRoot$W: android.os.Looper mMainLooper>;

        specialinvoke $r7.<android.view.ViewRoot$EventCompletion: void <init>(android.os.Looper,android.view.IWindow,android.view.KeyEvent,boolean,android.view.MotionEvent)>($r8, $r0, $r1, 0, null);

        return;
    }

    public void dispatchPointer(android.view.MotionEvent, long)
    {
        android.view.ViewRoot$W $r0;
        android.view.MotionEvent $r1;
        long $l0;
        android.os.Looper $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        android.view.ViewRoot $r5;
        android.view.ViewRoot$EventCompletion $r6;

        $r0 := @this: android.view.ViewRoot$W;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 := @parameter1: long;

        $r4 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (android.view.ViewRoot) $r3;

        if $r5 == null goto label1;

        virtualinvoke $r5.<android.view.ViewRoot: void dispatchPointer(android.view.MotionEvent,long)>($r1, $l0);

        return;

     label1:
        $r6 = new android.view.ViewRoot$EventCompletion;

        $r2 = $r0.<android.view.ViewRoot$W: android.os.Looper mMainLooper>;

        specialinvoke $r6.<android.view.ViewRoot$EventCompletion: void <init>(android.os.Looper,android.view.IWindow,android.view.KeyEvent,boolean,android.view.MotionEvent)>($r2, $r0, null, 1, $r1);

        return;
    }

    public void dispatchTrackball(android.view.MotionEvent, long)
    {
        android.view.ViewRoot$W $r0;
        android.view.MotionEvent $r1;
        long $l0;
        android.os.Looper $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        android.view.ViewRoot $r5;
        android.view.ViewRoot$EventCompletion $r6;

        $r0 := @this: android.view.ViewRoot$W;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 := @parameter1: long;

        $r4 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (android.view.ViewRoot) $r3;

        if $r5 == null goto label1;

        virtualinvoke $r5.<android.view.ViewRoot: void dispatchTrackball(android.view.MotionEvent,long)>($r1, $l0);

        return;

     label1:
        $r6 = new android.view.ViewRoot$EventCompletion;

        $r2 = $r0.<android.view.ViewRoot$W: android.os.Looper mMainLooper>;

        specialinvoke $r6.<android.view.ViewRoot$EventCompletion: void <init>(android.os.Looper,android.view.IWindow,android.view.KeyEvent,boolean,android.view.MotionEvent)>($r2, $r0, null, 0, $r1);

        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.view.ViewRoot$W $r0;
        java.lang.String $r1, $r2;
        android.os.ParcelFileDescriptor $r3;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r4, $r11;
        android.view.View $r5;
        java.lang.ref.WeakReference $r6;
        java.lang.Object $r7;
        android.view.ViewRoot $r8;
        int $i0;
        java.lang.SecurityException $r9;
        java.lang.StringBuilder $r10;
        java.io.IOException $r12, $r13, $r14, $r16, $r17;
        java.lang.Throwable $r15;

        $r0 := @this: android.view.ViewRoot$W;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.ParcelFileDescriptor;

        $r6 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r7 = virtualinvoke $r6.<java.lang.ref.Reference: java.lang.Object get()>();

        $r8 = (android.view.ViewRoot) $r7;

        if $r8 == null goto label22;

        $r5 = $r8.<android.view.ViewRoot: android.view.View mView>;

        if $r5 == null goto label23;

        $i0 = staticinvoke <android.view.ViewRoot$W: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label01;

        $r9 = new java.lang.SecurityException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Insufficient permissions to invoke executeCommand() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r9;

     label01:
        $r11 = null;

     label02:
        $r4 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

     label03:
        specialinvoke $r4.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r3);

     label04:
        staticinvoke <android.view.ViewDebug: void dispatchCommand(android.view.View,java.lang.String,java.lang.String,java.io.OutputStream)>($r5, $r1, $r2, $r4);

     label05:
        if $r4 == null goto label24;

     label06:
        virtualinvoke $r4.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>();

     label07:
        return;

     label08:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

        return;

     label09:
        $r13 := @caughtexception;

        $r12 = $r13;

     label10:
        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

     label11:
        if $r11 == null goto label25;

     label12:
        virtualinvoke $r11.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>();

     label13:
        return;

     label14:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Throwable: void printStackTrace()>();

        return;

     label15:
        $r15 := @caughtexception;

     label16:
        if $r11 == null goto label18;

     label17:
        virtualinvoke $r11.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>();

     label18:
        throw $r15;

     label19:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.lang.Throwable: void printStackTrace()>();

        goto label18;

     label20:
        $r15 := @caughtexception;

        $r11 = $r4;

        goto label16;

     label21:
        $r17 := @caughtexception;

        $r12 = $r17;

        $r11 = $r4;

        goto label10;

     label22:
        return;

     label23:
        return;

     label24:
        return;

     label25:
        return;

        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label02 to label04 with label15;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label17 to label18 with label19;
    }

    public void resized(int, int, android.graphics.Rect, android.graphics.Rect, boolean)
    {
        android.view.ViewRoot$W $r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        android.view.ViewRoot $r5;

        $r0 := @this: android.view.ViewRoot$W;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $r2 := @parameter3: android.graphics.Rect;

        $z0 := @parameter4: boolean;

        $r4 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (android.view.ViewRoot) $r3;

        if $r5 == null goto label1;

        virtualinvoke $r5.<android.view.ViewRoot: void dispatchResized(int,int,android.graphics.Rect,android.graphics.Rect,boolean)>($i0, $i1, $r1, $r2, $z0);

        return;

     label1:
        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        android.view.ViewRoot$W $r0;
        boolean $z0, $z1;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.ViewRoot $r3;

        $r0 := @this: android.view.ViewRoot$W;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = $r0.<android.view.ViewRoot$W: java.lang.ref.WeakReference mViewRoot>;

        $r2 = virtualinvoke $r1.<java.lang.ref.Reference: java.lang.Object get()>();

        $r3 = (android.view.ViewRoot) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<android.view.ViewRoot: void windowFocusChanged(boolean,boolean)>($z0, $z1);

        return;

     label1:
        return;
    }
}
