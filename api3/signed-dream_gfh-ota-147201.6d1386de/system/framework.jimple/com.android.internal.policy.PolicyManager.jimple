public final class com.android.internal.policy.PolicyManager extends java.lang.Object
{
    private static final java.lang.String POLICY_IMPL_CLASS_NAME;
    private static final com.android.internal.policy.IPolicy sPolicy;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.Object $r1;
        com.android.internal.policy.IPolicy $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.RuntimeException $r4;
        java.lang.InstantiationException $r5;
        java.lang.IllegalAccessException $r6;

        <com.android.internal.policy.PolicyManager: java.lang.String POLICY_IMPL_CLASS_NAME> = "com.android.internal.policy.impl.Policy";

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.android.internal.policy.impl.Policy");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        $r2 = (com.android.internal.policy.IPolicy) $r1;

        <com.android.internal.policy.PolicyManager: com.android.internal.policy.IPolicy sPolicy> = $r2;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("com.android.internal.policy.impl.Policy could not be loaded", $r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("com.android.internal.policy.impl.Policy could not be instantiated", $r5);

        throw $r4;

     label5:
        $r6 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("com.android.internal.policy.impl.Policy could not be instantiated", $r6);

        throw $r4;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    private void <init>()
    {
        com.android.internal.policy.PolicyManager $r0;

        $r0 := @this: com.android.internal.policy.PolicyManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)
    {
        android.content.Context $r0;
        android.view.LayoutInflater $r1;
        com.android.internal.policy.IPolicy $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.android.internal.policy.PolicyManager: com.android.internal.policy.IPolicy sPolicy>;

        $r1 = interfaceinvoke $r2.<com.android.internal.policy.IPolicy: android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)>($r0);

        return $r1;
    }

    public static android.view.Window makeNewWindow(android.content.Context)
    {
        android.content.Context $r0;
        android.view.Window $r1;
        com.android.internal.policy.IPolicy $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.android.internal.policy.PolicyManager: com.android.internal.policy.IPolicy sPolicy>;

        $r1 = interfaceinvoke $r2.<com.android.internal.policy.IPolicy: android.view.Window makeNewWindow(android.content.Context)>($r0);

        return $r1;
    }

    public static android.view.WindowManagerPolicy makeNewWindowManager()
    {
        android.view.WindowManagerPolicy $r0;
        com.android.internal.policy.IPolicy $r1;

        $r1 = <com.android.internal.policy.PolicyManager: com.android.internal.policy.IPolicy sPolicy>;

        $r0 = interfaceinvoke $r1.<com.android.internal.policy.IPolicy: android.view.WindowManagerPolicy makeNewWindowManager()>();

        return $r0;
    }
}
