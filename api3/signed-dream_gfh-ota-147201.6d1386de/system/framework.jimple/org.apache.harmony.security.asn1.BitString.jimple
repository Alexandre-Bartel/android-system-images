public final class org.apache.harmony.security.asn1.BitString extends java.lang.Object
{
    private static final byte[] RESET_MASK;
    private static final byte[] SET_MASK;
    public final byte[] bytes;
    public final int unusedBits;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8];

        $r0[0] = -128;

        $r0[1] = 64;

        $r0[2] = 32;

        $r0[3] = 16;

        $r0[4] = 8;

        $r0[5] = 4;

        $r0[6] = 2;

        $r0[7] = 1;

        <org.apache.harmony.security.asn1.BitString: byte[] SET_MASK> = $r0;

        $r0 = newarray (byte)[8];

        $r0[0] = 127;

        $r0[1] = -65;

        $r0[2] = -33;

        $r0[3] = -17;

        $r0[4] = -9;

        $r0[5] = -5;

        $r0[6] = -3;

        $r0[7] = -2;

        <org.apache.harmony.security.asn1.BitString: byte[] RESET_MASK> = $r0;

        return;
    }

    public void <init>(byte[], int)
    {
        org.apache.harmony.security.asn1.BitString $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.security.asn1.BitString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i0 < 0 goto label1;

        if $i0 <= 7 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.13D");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $i1 = lengthof $r1;

        if $i1 != 0 goto label3;

        if $i0 == 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.13E");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $r0.<org.apache.harmony.security.asn1.BitString: byte[] bytes> = $r1;

        $r0.<org.apache.harmony.security.asn1.BitString: int unusedBits> = $i0;

        return;
    }

    public void <init>(boolean[])
    {
        org.apache.harmony.security.asn1.BitString $r0;
        boolean[] $r1;
        int $i0, $i1;
        byte[] $r2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.asn1.BitString;

        $r1 := @parameter0: boolean[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r1;

        $i0 = $i0 % 8;

        $r0.<org.apache.harmony.security.asn1.BitString: int unusedBits> = $i0;

        $i0 = lengthof $r1;

        $i0 = $i0 / 8;

        $i1 = $r0.<org.apache.harmony.security.asn1.BitString: int unusedBits>;

        if $i1 == 0 goto label1;

        $i0 = $i0 + 1;

     label1:
        $r2 = newarray (byte)[$i0];

        $r0.<org.apache.harmony.security.asn1.BitString: byte[] bytes> = $r2;

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $z0 = $r1[$i0];

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BitString: void setBit(int,boolean)>($i0, $z0);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean getBit(int)
    {
        org.apache.harmony.security.asn1.BitString $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2, $b3;

        $r0 := @this: org.apache.harmony.security.asn1.BitString;

        $i0 := @parameter0: int;

        $i1 = $i0 % 8;

        $i0 = $i0 / 8;

        $r1 = $r0.<org.apache.harmony.security.asn1.BitString: byte[] bytes>;

        $b2 = $r1[$i0];

        $r1 = <org.apache.harmony.security.asn1.BitString: byte[] SET_MASK>;

        $b3 = $r1[$i1];

        $b2 = $b2 & $b3;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setBit(int, boolean)
    {
        org.apache.harmony.security.asn1.BitString $r0;
        int $i0, $i1;
        boolean $z0;
        byte[] $r1, $r2;
        byte $b2, $b3;

        $r0 := @this: org.apache.harmony.security.asn1.BitString;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = $i0 % 8;

        $i0 = $i0 / 8;

        if $z0 == 0 goto label1;

        $r1 = $r0.<org.apache.harmony.security.asn1.BitString: byte[] bytes>;

        $b2 = $r1[$i0];

        $r2 = <org.apache.harmony.security.asn1.BitString: byte[] SET_MASK>;

        $b3 = $r2[$i1];

        $b2 = $b2 | $b3;

        $b2 = (byte) $b2;

        $r1[$i0] = $b2;

        return;

     label1:
        $r1 = $r0.<org.apache.harmony.security.asn1.BitString: byte[] bytes>;

        $b2 = $r1[$i0];

        $r2 = <org.apache.harmony.security.asn1.BitString: byte[] RESET_MASK>;

        $b3 = $r2[$i1];

        $b2 = $b2 & $b3;

        $b2 = (byte) $b2;

        $r1[$i0] = $b2;

        return;
    }

    public boolean[] toBooleanArray()
    {
        org.apache.harmony.security.asn1.BitString $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BitString;

        $r2 = $r0.<org.apache.harmony.security.asn1.BitString: byte[] bytes>;

        $i0 = lengthof $r2;

        $i1 = $i0 * 8;

        $i0 = $r0.<org.apache.harmony.security.asn1.BitString: int unusedBits>;

        $i0 = $i1 - $i0;

        $r1 = newarray (boolean)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $z0 = virtualinvoke $r0.<org.apache.harmony.security.asn1.BitString: boolean getBit(int)>($i0);

        $r1[$i0] = $z0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }
}
