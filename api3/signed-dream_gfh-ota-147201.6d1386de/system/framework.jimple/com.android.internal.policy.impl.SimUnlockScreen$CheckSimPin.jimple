abstract class com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin extends java.lang.Thread
{
    private final java.lang.String mPin;
    final com.android.internal.policy.impl.SimUnlockScreen this$0;

    protected void <init>(com.android.internal.policy.impl.SimUnlockScreen, java.lang.String)
    {
        com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin $r0;
        com.android.internal.policy.impl.SimUnlockScreen $r1;
        java.lang.String $r2;

        $r0 := @this: com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin;

        $r1 := @parameter0: com.android.internal.policy.impl.SimUnlockScreen;

        $r2 := @parameter1: java.lang.String;

        $r0.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: com.android.internal.policy.impl.SimUnlockScreen this$0> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: java.lang.String mPin> = $r2;

        return;
    }

    abstract void onSimLockChangedResponse(boolean);

    public void run()
    {
        com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin $r0;
        android.os.IBinder $r1;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.String $r3;
        boolean $z0;
        com.android.internal.policy.impl.SimUnlockScreen $r4;
        com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1 $r5;
        android.os.RemoteException $r6;
        com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2 $r7;

        $r0 := @this: com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("phone");

        $r2 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r1);

        $r3 = $r0.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: java.lang.String mPin>;

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean supplyPin(java.lang.String)>($r3);

     label2:
        $r4 = $r0.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: com.android.internal.policy.impl.SimUnlockScreen this$0>;

     label3:
        $r5 = new com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1;

        specialinvoke $r5.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1: void <init>(com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin,boolean)>($r0, $z0);

        virtualinvoke $r4.<android.view.View: boolean post(java.lang.Runnable)>($r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r4 = $r0.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: com.android.internal.policy.impl.SimUnlockScreen this$0>;

        $r7 = new com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2;

        specialinvoke $r7.<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2: void <init>(com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin)>($r0);

        virtualinvoke $r4.<android.view.View: boolean post(java.lang.Runnable)>($r7);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }
}
