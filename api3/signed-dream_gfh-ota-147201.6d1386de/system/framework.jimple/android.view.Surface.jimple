public class android.view.Surface extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int FLAGS_ORIENTATION_ANIMATION_DISABLE;
    public static final int FX_SURFACE_BLUR;
    public static final int FX_SURFACE_DIM;
    public static final int FX_SURFACE_MASK;
    public static final int FX_SURFACE_NORMAL;
    public static final int GPU;
    public static final int HARDWARE;
    public static final int HIDDEN;
    private static final java.lang.String LOG_TAG;
    public static final int NON_PREMULTIPLIED;
    public static final int PUSH_BUFFERS;
    public static final int ROTATION_0;
    public static final int ROTATION_180;
    public static final int ROTATION_270;
    public static final int ROTATION_90;
    public static final int SECURE;
    public static final int SURACE_FROZEN;
    public static final int SURFACE_BLUR_FREEZE;
    public static final int SURFACE_DITHER;
    public static final int SURFACE_HIDDEN;
    private android.graphics.Canvas mCanvas;
    private int mSaveCount;
    private int mSurface;

    static void <clinit>()
    {
        android.view.Surface$1 $r0;

        <android.view.Surface: int SURFACE_HIDDEN> = 1;

        <android.view.Surface: int SURFACE_DITHER> = 4;

        <android.view.Surface: int SURFACE_BLUR_FREEZE> = 16;

        <android.view.Surface: int SURACE_FROZEN> = 2;

        <android.view.Surface: int SECURE> = 128;

        <android.view.Surface: int ROTATION_90> = 1;

        <android.view.Surface: int ROTATION_270> = 3;

        <android.view.Surface: int ROTATION_180> = 2;

        <android.view.Surface: int ROTATION_0> = 0;

        <android.view.Surface: int PUSH_BUFFERS> = 512;

        <android.view.Surface: int NON_PREMULTIPLIED> = 256;

        <android.view.Surface: java.lang.String LOG_TAG> = "Surface";

        <android.view.Surface: int HIDDEN> = 4;

        <android.view.Surface: int HARDWARE> = 16;

        <android.view.Surface: int GPU> = 40;

        <android.view.Surface: int FX_SURFACE_NORMAL> = 0;

        <android.view.Surface: int FX_SURFACE_MASK> = 983040;

        <android.view.Surface: int FX_SURFACE_DIM> = 131072;

        <android.view.Surface: int FX_SURFACE_BLUR> = 65536;

        <android.view.Surface: int FLAGS_ORIENTATION_ANIMATION_DISABLE> = 1;

        staticinvoke <android.view.Surface: void nativeClassInit()>();

        $r0 = new android.view.Surface$1;

        specialinvoke $r0.<android.view.Surface$1: void <init>()>();

        <android.view.Surface: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.Surface $r0;
        android.graphics.Canvas $r1;

        $r0 := @this: android.view.Surface;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Canvas;

        specialinvoke $r1.<android.graphics.Canvas: void <init>()>();

        $r0.<android.view.Surface: android.graphics.Canvas mCanvas> = $r1;

        return;
    }

    private void <init>(android.os.Parcel) throws android.view.Surface$OutOfResourcesException
    {
        android.view.Surface $r0;
        android.os.Parcel $r1;

        $r0 := @this: android.view.Surface;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        specialinvoke $r0.<android.view.Surface: void init(android.os.Parcel)>($r1);

        return;
    }

    void <init>(android.os.Parcel, android.view.Surface$1) throws android.view.Surface$OutOfResourcesException
    {
        android.view.Surface $r0;
        android.os.Parcel $r1;
        android.view.Surface$1 $r2;

        $r0 := @this: android.view.Surface;

        $r1 := @parameter0: android.os.Parcel;

        $r2 := @parameter1: android.view.Surface$1;

        specialinvoke $r0.<android.view.Surface: void <init>(android.os.Parcel)>($r1);

        return;
    }

    public void <init>(android.view.SurfaceSession, int, int, int, int, int, int) throws android.view.Surface$OutOfResourcesException
    {
        android.view.Surface $r0;
        android.view.SurfaceSession $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Canvas $r2;

        $r0 := @this: android.view.Surface;

        $r1 := @parameter0: android.view.SurfaceSession;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $i5 := @parameter6: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Canvas;

        specialinvoke $r2.<android.graphics.Canvas: void <init>()>();

        $r0.<android.view.Surface: android.graphics.Canvas mCanvas> = $r2;

        specialinvoke $r0.<android.view.Surface: void init(android.view.SurfaceSession,int,int,int,int,int,int)>($r1, $i0, $i1, $i2, $i3, $i4, $i5);

        return;
    }

    public static native void closeTransaction();

    public static native void freezeDisplay(int);

    private native void init(android.os.Parcel);

    private native void init(android.view.SurfaceSession, int, int, int, int, int, int) throws android.view.Surface$OutOfResourcesException;

    private native android.graphics.Canvas lockCanvasNative(android.graphics.Rect);

    private static native void nativeClassInit();

    public static native void openTransaction();

    public static void setOrientation(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        staticinvoke <android.view.Surface: void setOrientation(int,int,int)>($i0, $i1, 0);

        return;
    }

    public static native void setOrientation(int, int, int);

    public static native void unfreezeDisplay(int);

    public native void clear();

    public native void copyFrom(android.view.Surface);

    public int describeContents()
    {
        android.view.Surface $r0;

        $r0 := @this: android.view.Surface;

        return 0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.Surface $r0;

        $r0 := @this: android.view.Surface;

        virtualinvoke $r0.<android.view.Surface: void clear()>();

        return;
    }

    public native void freeze();

    public native void hide();

    public native boolean isValid();

    public android.graphics.Canvas lockCanvas(android.graphics.Rect) throws android.view.Surface$OutOfResourcesException
    {
        android.view.Surface $r0;
        android.graphics.Rect $r1;
        android.graphics.Canvas $r2;

        $r0 := @this: android.view.Surface;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = specialinvoke $r0.<android.view.Surface: android.graphics.Canvas lockCanvasNative(android.graphics.Rect)>($r1);

        return $r2;
    }

    public native void readFromParcel(android.os.Parcel);

    public native void setAlpha(float);

    public native void setFlags(int, int);

    public native void setFreezeTint(int);

    public native void setLayer(int);

    public native void setMatrix(float, float, float, float);

    public native void setPosition(int, int);

    public native void setSize(int, int);

    public native void setTransparentRegionHint(android.graphics.Region);

    public native void show();

    public java.lang.String toString()
    {
        android.view.Surface $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.view.Surface;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Surface(native-token=");

        $i0 = $r0.<android.view.Surface: int mSurface>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public native void unfreeze();

    public native void unlockCanvas(android.graphics.Canvas);

    public native void unlockCanvasAndPost(android.graphics.Canvas);

    public native void writeToParcel(android.os.Parcel, int);
}
