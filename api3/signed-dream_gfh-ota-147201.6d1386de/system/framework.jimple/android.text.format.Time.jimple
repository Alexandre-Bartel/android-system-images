public class android.text.format.Time extends java.lang.Object
{
    private static final int[] DAYS_PER_MONTH;
    public static final int EPOCH_JULIAN_DAY;
    public static final int FRIDAY;
    public static final int HOUR;
    public static final int MINUTE;
    public static final int MONDAY;
    public static final int MONTH;
    public static final int MONTH_DAY;
    public static final int SATURDAY;
    public static final int SECOND;
    public static final int SUNDAY;
    public static final int THURSDAY;
    public static final java.lang.String TIMEZONE_UTC;
    public static final int TUESDAY;
    public static final int WEDNESDAY;
    public static final int WEEK_DAY;
    public static final int WEEK_NUM;
    public static final int YEAR;
    public static final int YEAR_DAY;
    private static final java.lang.String Y_M_D;
    private static final java.lang.String Y_M_D_T_H_M_S_000;
    private static final java.lang.String Y_M_D_T_H_M_S_000_Z;
    private static java.lang.String sAm;
    private static java.lang.String sDateCommand;
    private static java.lang.String sDateOnlyFormat;
    private static java.lang.String sDateTimeFormat;
    private static java.util.Locale sLocale;
    private static java.lang.String[] sLongMonths;
    private static java.lang.String[] sLongWeekdays;
    private static java.lang.String sPm;
    private static java.lang.String[] sShortMonths;
    private static java.lang.String[] sShortWeekdays;
    private static final int[] sThursdayOffset;
    private static java.lang.String sTimeOnlyFormat;
    public boolean allDay;
    public long gmtoff;
    public int hour;
    public int isDst;
    public int minute;
    public int month;
    public int monthDay;
    public int second;
    public java.lang.String timezone;
    public int weekDay;
    public int year;
    public int yearDay;

    static void <clinit>()
    {
        int[] $r0;

        <android.text.format.Time: java.lang.String Y_M_D_T_H_M_S_000_Z> = "%Y-%m-%dT%H:%M:%S.000Z";

        <android.text.format.Time: java.lang.String Y_M_D_T_H_M_S_000> = "%Y-%m-%dT%H:%M:%S.000";

        <android.text.format.Time: java.lang.String Y_M_D> = "%Y-%m-%d";

        <android.text.format.Time: int YEAR_DAY> = 8;

        <android.text.format.Time: int YEAR> = 6;

        <android.text.format.Time: int WEEK_NUM> = 9;

        <android.text.format.Time: int WEEK_DAY> = 7;

        <android.text.format.Time: int WEDNESDAY> = 3;

        <android.text.format.Time: int TUESDAY> = 2;

        <android.text.format.Time: java.lang.String TIMEZONE_UTC> = "UTC";

        <android.text.format.Time: int THURSDAY> = 4;

        <android.text.format.Time: int SUNDAY> = 0;

        <android.text.format.Time: int SECOND> = 1;

        <android.text.format.Time: int SATURDAY> = 6;

        <android.text.format.Time: int MONTH_DAY> = 4;

        <android.text.format.Time: int MONTH> = 5;

        <android.text.format.Time: int MONDAY> = 1;

        <android.text.format.Time: int MINUTE> = 2;

        <android.text.format.Time: int HOUR> = 3;

        <android.text.format.Time: int FRIDAY> = 5;

        <android.text.format.Time: int EPOCH_JULIAN_DAY> = 2440588;

        <android.text.format.Time: java.lang.String sDateCommand> = "%a %b %e %H:%M:%S %Z %Y";

        $r0 = newarray (int)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <android.text.format.Time: int[] DAYS_PER_MONTH> = $r0;

        $r0 = newarray (int)[7];

        $r0[0] = -3;

        $r0[1] = 3;

        $r0[2] = 2;

        $r0[3] = 1;

        $r0[4] = 0;

        $r0[5] = -1;

        $r0[6] = -2;

        <android.text.format.Time: int[] sThursdayOffset> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.format.Time $r0;
        java.util.TimeZone $r1;
        java.lang.String $r2;

        $r0 := @this: android.text.format.Time;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke $r0.<android.text.format.Time: void <init>(java.lang.String)>($r2);

        return;
    }

    public void <init>(android.text.format.Time)
    {
        android.text.format.Time $r0, $r1;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: android.text.format.Time;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        virtualinvoke $r0.<android.text.format.Time: void set(android.text.format.Time)>($r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.text.format.Time $r0;
        java.lang.String $r1;
        java.lang.NullPointerException $r2;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("timezone is null!");

        throw $r2;

     label1:
        $r0.<android.text.format.Time: java.lang.String timezone> = $r1;

        $r0.<android.text.format.Time: int year> = 1970;

        $r0.<android.text.format.Time: int monthDay> = 1;

        $r0.<android.text.format.Time: int isDst> = -1;

        return;
    }

    public static native int compare(android.text.format.Time, android.text.format.Time);

    private native java.lang.String format1(java.lang.String);

    public static java.lang.String getCurrentTimezone()
    {
        java.util.TimeZone $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r1 = virtualinvoke $r0.<java.util.TimeZone: java.lang.String getID()>();

        return $r1;
    }

    public static int getJulianDay(long, long)
    {
        long $l0, $l1;
        int $i2;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l1 = $l1 * 1000L;

        $l0 = $l0 + $l1;

        $l0 = $l0 / 86400000L;

        $i2 = (int) $l0;

        $i2 = $i2 + 2440588;

        return $i2;
    }

    public static boolean isEpoch(android.text.format.Time)
    {
        android.text.format.Time $r0;
        long $l0;
        int $i1;

        $r0 := @parameter0: android.text.format.Time;

        $l0 = virtualinvoke $r0.<android.text.format.Time: long toMillis(boolean)>(1);

        $i1 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>($l0, 0L);

        if $i1 != 2440588 goto label1;

        return 1;

     label1:
        return 0;
    }

    private native boolean nativeParse(java.lang.String);

    private native boolean nativeParse3339(java.lang.String);

    public boolean after(android.text.format.Time)
    {
        android.text.format.Time $r0, $r1;
        int $i0;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: android.text.format.Time;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>($r0, $r1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean before(android.text.format.Time)
    {
        android.text.format.Time $r0, $r1;
        int $i0;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: android.text.format.Time;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>($r0, $r1);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void clear(java.lang.String)
    {
        android.text.format.Time $r0;
        java.lang.String $r1;
        java.lang.NullPointerException $r2;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("timezone is null!");

        throw $r2;

     label1:
        $r0.<android.text.format.Time: java.lang.String timezone> = $r1;

        $r0.<android.text.format.Time: boolean allDay> = 0;

        $r0.<android.text.format.Time: int second> = 0;

        $r0.<android.text.format.Time: int minute> = 0;

        $r0.<android.text.format.Time: int hour> = 0;

        $r0.<android.text.format.Time: int monthDay> = 0;

        $r0.<android.text.format.Time: int month> = 0;

        $r0.<android.text.format.Time: int year> = 0;

        $r0.<android.text.format.Time: int weekDay> = 0;

        $r0.<android.text.format.Time: int yearDay> = 0;

        $r0.<android.text.format.Time: long gmtoff> = 0L;

        $r0.<android.text.format.Time: int isDst> = -1;

        return;
    }

    public java.lang.String format(java.lang.String)
    {
        android.text.format.Time $r0;
        java.lang.String $r1, $r6;
        java.util.Locale $r2, $r3;
        boolean $z0;
        android.content.res.Resources $r4;
        java.lang.String[] $r5;
        java.lang.Throwable $r7;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: java.lang.String;

        entermonitor class "android/text/format/Time";

     label1:
        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = <android.text.format.Time: java.util.Locale sLocale>;

        if $r3 == null goto label2;

        if $r2 == null goto label2;

        $r3 = <android.text.format.Time: java.util.Locale sLocale>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

     label2:
        $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r5 = newarray (java.lang.String)[12];

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039906);

        $r5[0] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039907);

        $r5[1] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039908);

        $r5[2] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039909);

        $r5[3] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039910);

        $r5[4] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039911);

        $r5[5] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039912);

        $r5[6] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039913);

        $r5[7] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039914);

        $r5[8] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039915);

        $r5[9] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039916);

        $r5[10] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039917);

        $r5[11] = $r6;

        <android.text.format.Time: java.lang.String[] sShortMonths> = $r5;

        $r5 = newarray (java.lang.String)[12];

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039894);

        $r5[0] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039895);

        $r5[1] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039896);

        $r5[2] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039897);

        $r5[3] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039898);

        $r5[4] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039899);

        $r5[5] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039900);

        $r5[6] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039901);

        $r5[7] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039902);

        $r5[8] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039903);

        $r5[9] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039904);

        $r5[10] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039905);

        $r5[11] = $r6;

        <android.text.format.Time: java.lang.String[] sLongMonths> = $r5;

        $r5 = newarray (java.lang.String)[7];

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039866);

        $r5[0] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039867);

        $r5[1] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039868);

        $r5[2] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039869);

        $r5[3] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039870);

        $r5[4] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039871);

        $r5[5] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039872);

        $r5[6] = $r6;

        <android.text.format.Time: java.lang.String[] sShortWeekdays> = $r5;

        $r5 = newarray (java.lang.String)[7];

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039859);

        $r5[0] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039860);

        $r5[1] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039861);

        $r5[2] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039862);

        $r5[3] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039863);

        $r5[4] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039864);

        $r5[5] = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039865);

        $r5[6] = $r6;

        <android.text.format.Time: java.lang.String[] sLongWeekdays> = $r5;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039829);

        <android.text.format.Time: java.lang.String sTimeOnlyFormat> = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039827);

        <android.text.format.Time: java.lang.String sDateOnlyFormat> = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039830);

        <android.text.format.Time: java.lang.String sDateTimeFormat> = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039801);

        <android.text.format.Time: java.lang.String sAm> = $r6;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(17039802);

        <android.text.format.Time: java.lang.String sPm> = $r6;

        <android.text.format.Time: java.util.Locale sLocale> = $r2;

     label3:
        $r1 = specialinvoke $r0.<android.text.format.Time: java.lang.String format1(java.lang.String)>($r1);

        exitmonitor class "android/text/format/Time";

     label4:
        return $r1;

     label5:
        $r7 := @caughtexception;

        exitmonitor class "android/text/format/Time";

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public native java.lang.String format2445();

    public java.lang.String format3339(boolean)
    {
        android.text.format.Time $r0;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        long $l2;
        byte $b3;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;

        $r0 := @this: android.text.format.Time;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%d");

        return $r1;

     label1:
        $r1 = "UTC";

        $r2 = $r0.<android.text.format.Time: java.lang.String timezone>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%dT%H:%M:%S.000Z");

        return $r1;

     label2:
        $r1 = virtualinvoke $r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%dT%H:%M:%S.000");

        $l2 = $r0.<android.text.format.Time: long gmtoff>;

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label4;

        $r2 = "-";

     label3:
        $l2 = $r0.<android.text.format.Time: long gmtoff>;

        $l2 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $i0 = (int) $l2;

        $i1 = $i0 % 3600;

        $i1 = $i1 / 60;

        $i0 = $i0 / 3600;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[3] = $r4;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s%02d:%02d", $r3);

        return $r1;

     label4:
        $r2 = "+";

        goto label3;
    }

    public int getActualMaximum(int)
    {
        android.text.format.Time $r0;
        int $i0, $i2;
        byte $b1;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int[] $r4;

        $r0 := @this: android.text.format.Time;

        $i0 := @parameter0: int;

        $b1 = 59;

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label03;
            case 3: goto label02;
            case 4: goto label04;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label14;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad field=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label02:
        $b1 = 23;

     label03:
        return $b1;

     label04:
        $r4 = <android.text.format.Time: int[] DAYS_PER_MONTH>;

        $i0 = $r0.<android.text.format.Time: int month>;

        $i0 = $r4[$i0];

        if $i0 == 28 goto label05;

        return $i0;

     label05:
        $i0 = $r0.<android.text.format.Time: int year>;

        $i2 = $i0 % 4;

        if $i2 != 0 goto label07;

        $i2 = $i0 % 100;

        if $i2 != 0 goto label06;

        $i0 = $i0 % 400;

        if $i0 != 0 goto label07;

     label06:
        return 29;

     label07:
        return 28;

     label08:
        return 11;

     label09:
        return 2037;

     label10:
        return 6;

     label11:
        $i0 = $r0.<android.text.format.Time: int year>;

        $i2 = $i0 % 4;

        if $i2 != 0 goto label13;

        $i2 = $i0 % 100;

        if $i2 != 0 goto label12;

        $i0 = $i0 % 400;

        if $i0 != 0 goto label13;

     label12:
        return 365;

     label13:
        return 364;

     label14:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("WEEK_NUM not implemented");

        throw $r1;
    }

    public int getWeekNumber()
    {
        android.text.format.Time $r0, $r1;
        int $i0, $i1;
        int[] $r2;

        $r0 := @this: android.text.format.Time;

        $i0 = $r0.<android.text.format.Time: int yearDay>;

        $r2 = <android.text.format.Time: int[] sThursdayOffset>;

        $i1 = $r0.<android.text.format.Time: int weekDay>;

        $i1 = $r2[$i1];

        $i0 = $i0 + $i1;

        if $i0 < 0 goto label1;

        if $i0 > 364 goto label1;

        $i0 = $i0 / 7;

        $i0 = $i0 + 1;

        return $i0;

     label1:
        $r1 = new android.text.format.Time;

        specialinvoke $r1.<android.text.format.Time: void <init>(android.text.format.Time)>($r0);

        $i0 = $r1.<android.text.format.Time: int monthDay>;

        $r2 = <android.text.format.Time: int[] sThursdayOffset>;

        $i1 = $r0.<android.text.format.Time: int weekDay>;

        $i1 = $r2[$i1];

        $i0 = $i0 + $i1;

        $r1.<android.text.format.Time: int monthDay> = $i0;

        virtualinvoke $r1.<android.text.format.Time: long normalize(boolean)>(1);

        $i0 = $r1.<android.text.format.Time: int yearDay>;

        $i0 = $i0 / 7;

        $i0 = $i0 + 1;

        return $i0;
    }

    public native long normalize(boolean);

    public boolean parse(java.lang.String)
    {
        android.text.format.Time $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r0.<android.text.format.Time: boolean nativeParse(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        return 1;

     label1:
        return 0;
    }

    public boolean parse3339(java.lang.String)
    {
        android.text.format.Time $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r0.<android.text.format.Time: boolean nativeParse3339(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        return 1;

     label1:
        return 0;
    }

    public void set(int, int, int)
    {
        android.text.format.Time $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.format.Time;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0.<android.text.format.Time: boolean allDay> = 1;

        $r0.<android.text.format.Time: int second> = 0;

        $r0.<android.text.format.Time: int minute> = 0;

        $r0.<android.text.format.Time: int hour> = 0;

        $r0.<android.text.format.Time: int monthDay> = $i0;

        $r0.<android.text.format.Time: int month> = $i1;

        $r0.<android.text.format.Time: int year> = $i2;

        $r0.<android.text.format.Time: int weekDay> = 0;

        $r0.<android.text.format.Time: int yearDay> = 0;

        $r0.<android.text.format.Time: int isDst> = -1;

        $r0.<android.text.format.Time: long gmtoff> = 0L;

        return;
    }

    public void set(int, int, int, int, int, int)
    {
        android.text.format.Time $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @this: android.text.format.Time;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $r0.<android.text.format.Time: boolean allDay> = 0;

        $r0.<android.text.format.Time: int second> = $i0;

        $r0.<android.text.format.Time: int minute> = $i1;

        $r0.<android.text.format.Time: int hour> = $i2;

        $r0.<android.text.format.Time: int monthDay> = $i3;

        $r0.<android.text.format.Time: int month> = $i4;

        $r0.<android.text.format.Time: int year> = $i5;

        $r0.<android.text.format.Time: int weekDay> = 0;

        $r0.<android.text.format.Time: int yearDay> = 0;

        $r0.<android.text.format.Time: int isDst> = -1;

        $r0.<android.text.format.Time: long gmtoff> = 0L;

        return;
    }

    public native void set(long);

    public void set(android.text.format.Time)
    {
        android.text.format.Time $r0, $r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;
        long $l1;

        $r0 := @this: android.text.format.Time;

        $r1 := @parameter0: android.text.format.Time;

        $r2 = $r1.<android.text.format.Time: java.lang.String timezone>;

        $r0.<android.text.format.Time: java.lang.String timezone> = $r2;

        $z0 = $r1.<android.text.format.Time: boolean allDay>;

        $r0.<android.text.format.Time: boolean allDay> = $z0;

        $i0 = $r1.<android.text.format.Time: int second>;

        $r0.<android.text.format.Time: int second> = $i0;

        $i0 = $r1.<android.text.format.Time: int minute>;

        $r0.<android.text.format.Time: int minute> = $i0;

        $i0 = $r1.<android.text.format.Time: int hour>;

        $r0.<android.text.format.Time: int hour> = $i0;

        $i0 = $r1.<android.text.format.Time: int monthDay>;

        $r0.<android.text.format.Time: int monthDay> = $i0;

        $i0 = $r1.<android.text.format.Time: int month>;

        $r0.<android.text.format.Time: int month> = $i0;

        $i0 = $r1.<android.text.format.Time: int year>;

        $r0.<android.text.format.Time: int year> = $i0;

        $i0 = $r1.<android.text.format.Time: int weekDay>;

        $r0.<android.text.format.Time: int weekDay> = $i0;

        $i0 = $r1.<android.text.format.Time: int yearDay>;

        $r0.<android.text.format.Time: int yearDay> = $i0;

        $i0 = $r1.<android.text.format.Time: int isDst>;

        $r0.<android.text.format.Time: int isDst> = $i0;

        $l1 = $r1.<android.text.format.Time: long gmtoff>;

        $r0.<android.text.format.Time: long gmtoff> = $l1;

        return;
    }

    public long setJulianDay(int)
    {
        android.text.format.Time $r0;
        int $i0, $i1;
        long $l2, $l3;

        $r0 := @this: android.text.format.Time;

        $i0 := @parameter0: int;

        $i1 = $i0 - 2440588;

        $l2 = (long) $i1;

        $l2 = $l2 * 86400000L;

        virtualinvoke $r0.<android.text.format.Time: void set(long)>($l2);

        $l3 = $r0.<android.text.format.Time: long gmtoff>;

        $i1 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>($l2, $l3);

        $i0 = $i0 - $i1;

        $i1 = $r0.<android.text.format.Time: int monthDay>;

        $i0 = $i1 + $i0;

        $r0.<android.text.format.Time: int monthDay> = $i0;

        $r0.<android.text.format.Time: int hour> = 0;

        $r0.<android.text.format.Time: int minute> = 0;

        $r0.<android.text.format.Time: int second> = 0;

        $l2 = virtualinvoke $r0.<android.text.format.Time: long normalize(boolean)>(1);

        return $l2;
    }

    public native void setToNow();

    public native void switchTimezone(java.lang.String);

    public native long toMillis(boolean);

    public native java.lang.String toString();
}
