public abstract class android.telephony.CellLocation extends java.lang.Object
{

    public void <init>()
    {
        android.telephony.CellLocation $r0;

        $r0 := @this: android.telephony.CellLocation;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.telephony.CellLocation getEmpty()
    {
        android.telephony.gsm.GsmCellLocation $r0;

        $r0 = new android.telephony.gsm.GsmCellLocation;

        specialinvoke $r0.<android.telephony.gsm.GsmCellLocation: void <init>()>();

        return $r0;
    }

    public static android.telephony.CellLocation newFromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        android.telephony.gsm.GsmCellLocation $r1;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new android.telephony.gsm.GsmCellLocation;

        specialinvoke $r1.<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>($r0);

        return $r1;
    }

    public static void requestLocationUpdate()
    {
        android.os.IBinder $r0;
        com.android.internal.telephony.ITelephony $r1;
        android.os.RemoteException $r2;

     label1:
        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("phone");

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r0);

        if $r1 == null goto label4;

        interfaceinvoke $r1.<com.android.internal.telephony.ITelephony: void updateServiceLocation()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract void fillInNotifierBundle(android.os.Bundle);
}
