public class org.apache.harmony.security.fortress.DefaultPolicyParser extends java.lang.Object
{
    private final org.apache.harmony.security.DefaultPolicyScanner scanner;

    public void <init>()
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        org.apache.harmony.security.DefaultPolicyScanner $r1;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.harmony.security.DefaultPolicyScanner;

        specialinvoke $r1.<org.apache.harmony.security.DefaultPolicyScanner: void <init>()>();

        $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: org.apache.harmony.security.DefaultPolicyScanner scanner> = $r1;

        return;
    }

    public void <init>(org.apache.harmony.security.DefaultPolicyScanner)
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        org.apache.harmony.security.DefaultPolicyScanner $r1;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r1 := @parameter0: org.apache.harmony.security.DefaultPolicyScanner;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: org.apache.harmony.security.DefaultPolicyScanner scanner> = $r1;

        return;
    }

    protected java.security.Principal getPrincipalByAlias(java.security.KeyStore, java.lang.String) throws java.security.KeyStoreException, java.security.cert.CertificateException
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        java.security.KeyStore $r1;
        java.lang.String $r2;
        java.security.KeyStoreException $r3;
        java.security.cert.Certificate $r4;
        boolean $z0;
        java.security.cert.X509Certificate $r5;
        javax.security.auth.x500.X500Principal $r6;
        java.security.cert.CertificateException $r7;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r1 := @parameter0: java.security.KeyStore;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.security.KeyStoreException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.147", $r2);

        specialinvoke $r3.<java.security.KeyStoreException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $r4 = virtualinvoke $r1.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r2);

        $z0 = $r4 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label2;

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r6;

     label2:
        $r7 = new java.security.cert.CertificateException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.148", $r2, $r4);

        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r2);

        throw $r7;
    }

    protected java.security.KeyStore initKeyStore(java.util.List, java.net.URL, java.util.Properties, boolean)
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        java.util.List $r1;
        java.net.URL $r2, $r4;
        java.util.Properties $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.Object $r5;
        org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry $r6;
        java.lang.String $r7;
        java.security.KeyStore $r8;
        org.apache.harmony.security.fortress.PolicyUtils$URLLoader $r9;
        java.io.InputStream $r10;
        java.lang.Throwable $r11;
        java.lang.Exception $r12;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.net.URL;

        $r3 := @parameter2: java.util.Properties;

        $z0 := @parameter3: boolean;

        $i0 = 0;

     label01:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label11;

     label02:
        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry) $r5;

        if $z0 == 0 goto label03;

        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String url>;

        $r7 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expandURL(java.lang.String,java.util.Properties)>($r7, $r3);

        $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String url> = $r7;

        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type>;

        if $r7 == null goto label03;

        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type>;

        $r7 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r7, $r3);

        $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type> = $r7;

     label03:
        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type>;

        if $r7 == null goto label04;

        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 != 0 goto label05;

     label04:
        $r7 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type> = $r7;

     label05:
        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String type>;

        $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7);

        $r4 = new java.net.URL;

        $r7 = $r6.<org.apache.harmony.security.DefaultPolicyScanner$KeystoreEntry: java.lang.String url>;

        specialinvoke $r4.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r2, $r7);

        $r9 = new org.apache.harmony.security.fortress.PolicyUtils$URLLoader;

        specialinvoke $r9.<org.apache.harmony.security.fortress.PolicyUtils$URLLoader: void <init>(java.net.URL)>($r4);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r9);

        $r10 = (java.io.InputStream) $r5;

     label06:
        virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r10, null);

     label07:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label08:
        return $r8;

     label09:
        $r11 := @caughtexception;

        virtualinvoke $r10.<java.io.InputStream: void close()>();

        throw $r11;

     label10:
        $r12 := @caughtexception;

        $i0 = $i0 + 1;

        goto label01;

     label11:
        return null;

        catch java.lang.Exception from label02 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.Exception from label09 to label10 with label10;
    }

    public java.util.Collection parse(java.net.URL, java.util.Properties) throws java.lang.Exception
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        java.net.URL $r1;
        java.util.Properties $r2;
        java.util.HashSet $r3, $r6;
        java.util.ArrayList $r4;
        java.io.BufferedReader $r5;
        java.io.InputStreamReader $r7;
        boolean $z0, $z1;
        org.apache.harmony.security.fortress.PolicyUtils$URLLoader $r8;
        java.lang.Object $r9;
        java.io.InputStream $r10;
        org.apache.harmony.security.DefaultPolicyScanner $r11;
        java.security.KeyStore $r12;
        java.util.Iterator $r13;
        org.apache.harmony.security.DefaultPolicyScanner$GrantEntry $r14;
        org.apache.harmony.security.PolicyEntry $r15;
        java.lang.Exception $r16;
        java.lang.Throwable $r17;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: java.util.Properties;

        $z0 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: boolean canExpandProperties()>();

        $r5 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        $r8 = new org.apache.harmony.security.fortress.PolicyUtils$URLLoader;

        specialinvoke $r8.<org.apache.harmony.security.fortress.PolicyUtils$URLLoader: void <init>(java.net.URL)>($r1);

        $r9 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r8);

        $r10 = (java.io.InputStream) $r9;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r7, 8192);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label1:
        $r11 = $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: org.apache.harmony.security.DefaultPolicyScanner scanner>;

        virtualinvoke $r11.<org.apache.harmony.security.DefaultPolicyScanner: void scanStream(java.io.Reader,java.util.Collection,java.util.List)>($r5, $r3, $r4);

     label2:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        $r12 = virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.KeyStore initKeyStore(java.util.List,java.net.URL,java.util.Properties,boolean)>($r4, $r1, $r2, $z0);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r13 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r9 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (org.apache.harmony.security.DefaultPolicyScanner$GrantEntry) $r9;

     label4:
        $r15 = virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: org.apache.harmony.security.PolicyEntry resolveGrant(org.apache.harmony.security.DefaultPolicyScanner$GrantEntry,java.security.KeyStore,java.util.Properties,boolean)>($r14, $r12, $r2, $z0);

        $z1 = virtualinvoke $r15.<org.apache.harmony.security.PolicyEntry: boolean isVoid()>();

        if $z1 != 0 goto label3;

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r15);

     label5:
        goto label3;

     label6:
        $r16 := @caughtexception;

        goto label3;

     label7:
        $r17 := @caughtexception;

        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        throw $r17;

     label8:
        return $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected org.apache.harmony.security.PolicyEntry resolveGrant(org.apache.harmony.security.DefaultPolicyScanner$GrantEntry, java.security.KeyStore, java.util.Properties, boolean) throws java.lang.Exception
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        org.apache.harmony.security.DefaultPolicyScanner$GrantEntry $r1;
        java.security.KeyStore $r2;
        java.util.Properties $r3;
        boolean $z0, $z1;
        java.io.File $r4;
        java.util.HashSet $r5, $r6;
        java.net.URL $r7;
        java.security.cert.Certificate[] $r8;
        java.lang.String $r9, $r10;
        java.lang.StringBuilder $r11;
        java.util.Collection $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry $r15;
        java.security.Principal $r16;
        org.apache.harmony.security.UnresolvedPrincipal $r17;
        org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry $r18;
        java.security.Permission $r19;
        java.lang.Exception $r20;
        org.apache.harmony.security.PolicyEntry $r21;
        java.security.CodeSource $r22;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r1 := @parameter0: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry;

        $r2 := @parameter1: java.security.KeyStore;

        $r3 := @parameter2: java.util.Properties;

        $z0 := @parameter3: boolean;

        $r7 = null;

        $r8 = null;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r9 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String codebase>;

        if $r9 == null goto label02;

        $r7 = new java.net.URL;

        if $z0 == 0 goto label07;

        $r9 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String codebase>;

        $r9 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expandURL(java.lang.String,java.util.Properties)>($r9, $r3);

     label01:
        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r9);

        $r9 = "file";

        $r10 = virtualinvoke $r7.<java.net.URL: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label02;

        $r4 = new java.io.File;

        $r9 = virtualinvoke $r7.<java.net.URL: java.lang.String getFile()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r9);

        $z1 = virtualinvoke $r4.<java.io.File: boolean isAbsolute()>();

        if $z1 == 0 goto label02;

        $r7 = new java.net.URL;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r9 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r9);

     label02:
        $r9 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String signers>;

        if $r9 == null goto label04;

        if $z0 == 0 goto label03;

        $r9 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String signers>;

        $r9 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r9, $r3);

        $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String signers> = $r9;

     label03:
        $r9 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String signers>;

        $r8 = virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.cert.Certificate[] resolveSigners(java.security.KeyStore,java.lang.String)>($r2, $r9);

     label04:
        $r12 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection principals>;

        if $r12 == null goto label09;

        $r12 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection principals>;

        $r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry) $r14;

        if $z0 == 0 goto label06;

        $r9 = $r15.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name>;

        $r9 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r9, $r3);

        $r15.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name> = $r9;

     label06:
        $r9 = $r15.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String klass>;

        if $r9 != null goto label08;

        $r9 = $r15.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name>;

        $r16 = virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.Principal getPrincipalByAlias(java.security.KeyStore,java.lang.String)>($r2, $r9);

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r16);

        goto label05;

     label07:
        $r9 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.lang.String codebase>;

        goto label01;

     label08:
        $r17 = new org.apache.harmony.security.UnresolvedPrincipal;

        $r9 = $r15.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String klass>;

        $r10 = $r15.<org.apache.harmony.security.DefaultPolicyScanner$PrincipalEntry: java.lang.String name>;

        specialinvoke $r17.<org.apache.harmony.security.UnresolvedPrincipal: void <init>(java.lang.String,java.lang.String)>($r9, $r10);

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label05;

     label09:
        $r12 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection permissions>;

        if $r12 == null goto label14;

        $r12 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$GrantEntry: java.util.Collection permissions>;

        $r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry) $r14;

     label11:
        $r19 = virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.Permission resolvePermission(org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry,org.apache.harmony.security.DefaultPolicyScanner$GrantEntry,java.security.KeyStore,java.util.Properties,boolean)>($r18, $r1, $r2, $r3, $z0);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r19);

     label12:
        goto label10;

     label13:
        $r20 := @caughtexception;

        goto label10;

     label14:
        $r21 = new org.apache.harmony.security.PolicyEntry;

        $r22 = new java.security.CodeSource;

        specialinvoke $r22.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r7, $r8);

        specialinvoke $r21.<org.apache.harmony.security.PolicyEntry: void <init>(java.security.CodeSource,java.util.Collection,java.util.Collection)>($r22, $r6, $r5);

        return $r21;

        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected java.security.Permission resolvePermission(org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry, org.apache.harmony.security.DefaultPolicyScanner$GrantEntry, java.security.KeyStore, java.util.Properties, boolean) throws java.lang.Exception
    {
        org.apache.harmony.security.fortress.DefaultPolicyParser $r0;
        org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry $r1;
        org.apache.harmony.security.DefaultPolicyScanner$GrantEntry $r2;
        java.security.KeyStore $r3;
        java.util.Properties $r4;
        boolean $z0;
        java.lang.String $r5, $r6, $r14;
        org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander $r7;
        java.security.cert.Certificate[] $r8;
        java.lang.Class $r9;
        java.lang.Object[] $r10;
        java.security.Permission $r11;
        java.security.UnresolvedPermission $r12;
        java.lang.ClassNotFoundException $r13;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r1 := @parameter0: org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry;

        $r2 := @parameter1: org.apache.harmony.security.DefaultPolicyScanner$GrantEntry;

        $r3 := @parameter2: java.security.KeyStore;

        $r4 := @parameter3: java.util.Properties;

        $z0 := @parameter4: boolean;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name>;

        if $r5 == null goto label01;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name>;

        $r7 = new org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander;

        specialinvoke $r7.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: void <init>(org.apache.harmony.security.fortress.DefaultPolicyParser)>($r0);

        $r7 = virtualinvoke $r7.<org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander: org.apache.harmony.security.fortress.DefaultPolicyParser$PermissionExpander configure(org.apache.harmony.security.DefaultPolicyScanner$GrantEntry,java.security.KeyStore)>($r2, $r3);

        $r5 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expandGeneral(java.lang.String,org.apache.harmony.security.fortress.PolicyUtils$GeneralExpansionHandler)>($r5, $r7);

        $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name> = $r5;

     label01:
        if $z0 == 0 goto label04;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name>;

        if $r5 == null goto label02;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name>;

        $r5 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r5, $r4);

        $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name> = $r5;

     label02:
        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String actions>;

        if $r5 == null goto label03;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String actions>;

        $r5 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r5, $r4);

        $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String actions> = $r5;

     label03:
        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String signers>;

        if $r5 == null goto label04;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String signers>;

        $r5 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r5, $r4);

        $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String signers> = $r5;

     label04:
        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String signers>;

        if $r5 != null goto label10;

        $r8 = null;

     label05:
        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String klass>;

     label06:
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Object[] getSigners()>();

        $z0 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: boolean matchSubset(java.lang.Object[],java.lang.Object[])>($r8, $r10);

     label07:
        if $z0 == 0 goto label12;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name>;

     label08:
        $r6 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String actions>;

        $r11 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.security.Permission instantiatePermission(java.lang.Class,java.lang.String,java.lang.String)>($r9, $r5, $r6);

     label09:
        return $r11;

     label10:
        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String signers>;

        $r8 = virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.security.cert.Certificate[] resolveSigners(java.security.KeyStore,java.lang.String)>($r3, $r5);

        goto label05;

     label11:
        $r13 := @caughtexception;

     label12:
        $r12 = new java.security.UnresolvedPermission;

        $r14 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String klass>;

        $r5 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String name>;

        $r6 = $r1.<org.apache.harmony.security.DefaultPolicyScanner$PermissionEntry: java.lang.String actions>;

        specialinvoke $r12.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>($r14, $r5, $r6, $r8);

        return $r12;

        catch java.lang.ClassNotFoundException from label06 to label07 with label11;
        catch java.lang.ClassNotFoundException from label08 to label09 with label11;
    }

    protected java.security.cert.Certificate[] resolveSigners(java.security.KeyStore, java.lang.String) throws java.lang.Exception
    {
        java.security.KeyStore $r0;
        java.lang.String $r1;
        java.util.HashSet $r2;
        java.util.StringTokenizer $r3;
        org.apache.harmony.security.fortress.DefaultPolicyParser $r4;
        java.security.KeyStoreException $r5;
        boolean $z0;
        java.security.cert.Certificate $r6;
        int $i0;
        java.security.cert.Certificate[] $r7;
        java.lang.Object[] $r8;

        $r4 := @this: org.apache.harmony.security.fortress.DefaultPolicyParser;

        $r0 := @parameter0: java.security.KeyStore;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r5 = new java.security.KeyStoreException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.146", $r1);

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label1:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ",");

     label2:
        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r6 = virtualinvoke $r0.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r1);

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $r7 = newarray (java.security.cert.Certificate)[$i0];

        $r8 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (java.security.cert.Certificate[]) $r8;

        return $r7;
    }
}
