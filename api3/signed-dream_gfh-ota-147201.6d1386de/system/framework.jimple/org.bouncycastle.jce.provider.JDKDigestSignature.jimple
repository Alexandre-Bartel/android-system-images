public class org.bouncycastle.jce.provider.JDKDigestSignature extends java.security.Signature implements org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers, org.bouncycastle.asn1.x509.X509ObjectIdentifiers
{
    private org.bouncycastle.asn1.x509.AlgorithmIdentifier algId;
    private org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private org.bouncycastle.crypto.Digest digest;

    protected void <init>(java.lang.String, org.bouncycastle.asn1.DERObjectIdentifier, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.lang.String $r1;
        org.bouncycastle.asn1.DERObjectIdentifier $r2;
        org.bouncycastle.crypto.Digest $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r4;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r5;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.bouncycastle.asn1.DERObjectIdentifier;

        $r3 := @parameter2: org.bouncycastle.crypto.Digest;

        $r4 := @parameter3: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke $r0.<java.security.Signature: void <init>(java.lang.String)>($r1);

        $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest> = $r3;

        $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r4;

        $r5 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke $r5.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier)>($r2);

        $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.asn1.x509.AlgorithmIdentifier algId> = $r5;

        return;
    }

    private byte[] derEncode(byte[]) throws java.io.IOException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        byte[] $r1;
        org.bouncycastle.asn1.x509.DigestInfo $r2;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: byte[];

        $r2 = new org.bouncycastle.asn1.x509.DigestInfo;

        $r3 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.asn1.x509.AlgorithmIdentifier algId>;

        specialinvoke $r2.<org.bouncycastle.asn1.x509.DigestInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r3, $r1);

        $r1 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1Encodable: byte[] getEncoded(java.lang.String)>("DER");

        return $r1;
    }

    private java.lang.String getType(java.lang.Object)
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    protected java.lang.Object engineGetParameter(java.lang.String)
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.lang.String $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r2;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.security.PrivateKey $r1;
        boolean $z0;
        java.security.InvalidKeyException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.security.interfaces.RSAPrivateKey $r5;
        org.bouncycastle.crypto.params.RSAKeyParameters $r6;
        org.bouncycastle.crypto.Digest $r7;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r8;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.security.PrivateKey;

        $z0 = $r1 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 != 0 goto label1;

        $r2 = new java.security.InvalidKeyException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Supplied key (");

        $r4 = specialinvoke $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: java.lang.String getType(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not a RSAPrivateKey instance");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = (java.security.interfaces.RSAPrivateKey) $r1;

        $r6 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r5);

        $r7 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void reset()>();

        $r8 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r6);

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.security.PublicKey $r1;
        boolean $z0;
        java.security.InvalidKeyException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.security.interfaces.RSAPublicKey $r5;
        org.bouncycastle.crypto.params.RSAKeyParameters $r6;
        org.bouncycastle.crypto.Digest $r7;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r8;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.security.PublicKey;

        $z0 = $r1 instanceof java.security.interfaces.RSAPublicKey;

        if $z0 != 0 goto label1;

        $r2 = new java.security.InvalidKeyException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Supplied key (");

        $r4 = specialinvoke $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: java.lang.String getType(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not a RSAPublicKey instance");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = (java.security.interfaces.RSAPublicKey) $r1;

        $r6 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePublicKeyParameter(java.security.interfaces.RSAPublicKey)>($r5);

        $r7 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void reset()>();

        $r8 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r6);

        return;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object)
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r3;
    }

    protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec)
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        java.security.spec.AlgorithmParameterSpec $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r2;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        byte[] $r1;
        int $i0;
        org.bouncycastle.crypto.Digest $r2;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.security.SignatureException $r5;
        java.lang.Exception $r6;
        java.lang.String $r7;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r1, 0);

     label1:
        $r1 = specialinvoke $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: byte[] derEncode(byte[])>($r1);

     label2:
        $r3 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

     label3:
        $i0 = lengthof $r1;

        $r1 = interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r1, 0, $i0);

     label4:
        return $r1;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.security.SignatureException;

        specialinvoke $r5.<java.security.SignatureException: void <init>(java.lang.String)>("key too small for signature type");

        throw $r5;

     label6:
        $r6 := @caughtexception;

        $r5 = new java.security.SignatureException;

        $r7 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r5.<java.security.SignatureException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label5;
        catch java.lang.ArrayIndexOutOfBoundsException from label3 to label4 with label5;
        catch java.lang.Exception from label1 to label4 with label6;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        byte $b0;
        org.bouncycastle.crypto.Digest $r1;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $b0 := @parameter0: byte;

        $r1 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>($b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        byte[] $r1;
        int $i0, $i1;
        org.bouncycastle.crypto.Digest $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKDigestSignature $r0;
        byte[] $r1, $r2, $r5;
        int $i0, $i1, $i4, $i5;
        org.bouncycastle.crypto.Digest $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r4;
        byte $b2, $b3;
        java.lang.Exception $r6;

        $r0 := @this: org.bouncycastle.jce.provider.JDKDigestSignature;

        $r1 := @parameter0: byte[];

        $r3 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        $i1 = interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r2 = newarray (byte)[$i1];

        $r3 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, 0);

     label01:
        $r4 = $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i1 = lengthof $r1;

        $r1 = interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r1, 0, $i1);

        $r5 = specialinvoke $r0.<org.bouncycastle.jce.provider.JDKDigestSignature: byte[] derEncode(byte[])>($r2);

     label02:
        $i1 = lengthof $r1;

        $i0 = lengthof $r5;

        if $i1 != $i0 goto label06;

        $i1 = 0;

     label03:
        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label13;

        $b2 = $r1[$i1];

        $b3 = $r5[$i1];

        if $b2 == $b3 goto label05;

        return 0;

     label04:
        $r6 := @caughtexception;

        return 0;

     label05:
        $i1 = $i1 + 1;

        goto label03;

     label06:
        $i1 = lengthof $r5;

        $i0 = lengthof $r1;

        $i0 = $i0 - 2;

        if $i1 != $i0 goto label12;

        $i1 = lengthof $r1;

        $i0 = lengthof $r2;

        $i1 = $i1 - $i0;

        $i1 = $i1 - 2;

        $i0 = lengthof $r5;

        $i4 = lengthof $r2;

        $i0 = $i0 - $i4;

        $i0 = $i0 - 2;

        $b2 = $r1[1];

        $i4 = $b2 - 2;

        $b2 = (byte) $i4;

        $r1[1] = $b2;

        $b2 = $r1[3];

        $i4 = $b2 - 2;

        $b2 = (byte) $i4;

        $r1[3] = $b2;

        $i4 = 0;

     label07:
        $i5 = lengthof $r2;

        if $i4 >= $i5 goto label09;

        $i5 = $i1 + $i4;

        $b2 = $r1[$i5];

        $i5 = $i0 + $i4;

        $b3 = $r5[$i5];

        if $b2 == $b3 goto label08;

        return 0;

     label08:
        $i4 = $i4 + 1;

        goto label07;

     label09:
        $i1 = 0;

     label10:
        if $i1 >= $i0 goto label13;

        $b2 = $r1[$i1];

        $b3 = $r5[$i1];

        if $b2 == $b3 goto label11;

        return 0;

     label11:
        $i1 = $i1 + 1;

        goto label10;

     label12:
        return 0;

     label13:
        return 1;

        catch java.lang.Exception from label01 to label02 with label04;
    }
}
