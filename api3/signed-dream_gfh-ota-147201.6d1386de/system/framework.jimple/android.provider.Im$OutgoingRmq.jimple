public final class android.provider.Im$OutgoingRmq extends java.lang.Object implements android.provider.BaseColumns, android.provider.Im$OutgoingRmqColumns
{
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_URI_FOR_HIGHEST_RMQ_ID;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    private static java.lang.String[] RMQ_ID_PROJECTION;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.net.Uri $r1;

        <android.provider.Im$OutgoingRmq: java.lang.String DEFAULT_SORT_ORDER> = "rmq_id ASC";

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "rmq_id";

        <android.provider.Im$OutgoingRmq: java.lang.String[] RMQ_ID_PROJECTION> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://im/outgoingRmqMessages");

        <android.provider.Im$OutgoingRmq: android.net.Uri CONTENT_URI> = $r1;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://im/outgoingHighestRmqId");

        <android.provider.Im$OutgoingRmq: android.net.Uri CONTENT_URI_FOR_HIGHEST_RMQ_ID> = $r1;

        return;
    }

    public void <init>()
    {
        android.provider.Im$OutgoingRmq $r0;

        $r0 := @this: android.provider.Im$OutgoingRmq;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final long queryHighestRmqId(android.content.ContentResolver)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        android.database.Cursor $r3;
        long $l0;
        boolean $z0;
        int $i1;
        java.lang.Throwable $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 = <android.provider.Im$OutgoingRmq: android.net.Uri CONTENT_URI_FOR_HIGHEST_RMQ_ID>;

        $r2 = <android.provider.Im$OutgoingRmq: java.lang.String[] RMQ_ID_PROJECTION>;

        $r3 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, null);

        $l0 = 0L;

     label1:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        $i1 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("rmq_id");

        $l0 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>($i1);

     label2:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return $l0;

     label3:
        $r4 := @caughtexception;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
