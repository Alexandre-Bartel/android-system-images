class com.android.internal.telephony.test.CallInfo extends java.lang.Object
{
    int TOA;
    boolean isMT;
    boolean isMpty;
    java.lang.String number;
    com.android.internal.telephony.test.CallInfo$State state;

    void <init>(boolean, com.android.internal.telephony.test.CallInfo$State, boolean, java.lang.String)
    {
        com.android.internal.telephony.test.CallInfo $r0;
        boolean $z0, $z1;
        com.android.internal.telephony.test.CallInfo$State $r1;
        java.lang.String $r2;
        int $i0;
        char $c1;

        $r0 := @this: com.android.internal.telephony.test.CallInfo;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.android.internal.telephony.test.CallInfo$State;

        $z1 := @parameter2: boolean;

        $r2 := @parameter3: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.telephony.test.CallInfo: boolean isMT> = $z0;

        $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state> = $r1;

        $r0.<com.android.internal.telephony.test.CallInfo: boolean isMpty> = $z1;

        $r0.<com.android.internal.telephony.test.CallInfo: java.lang.String number> = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        if $c1 != 43 goto label1;

        $r0.<com.android.internal.telephony.test.CallInfo: int TOA> = 145;

        return;

     label1:
        $r0.<com.android.internal.telephony.test.CallInfo: int TOA> = 129;

        return;
    }

    static com.android.internal.telephony.test.CallInfo createIncomingCall(java.lang.String)
    {
        java.lang.String $r0;
        com.android.internal.telephony.test.CallInfo $r1;
        com.android.internal.telephony.test.CallInfo$State $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.android.internal.telephony.test.CallInfo;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State INCOMING>;

        specialinvoke $r1.<com.android.internal.telephony.test.CallInfo: void <init>(boolean,com.android.internal.telephony.test.CallInfo$State,boolean,java.lang.String)>(1, $r2, 0, $r0);

        return $r1;
    }

    static com.android.internal.telephony.test.CallInfo createOutgoingCall(java.lang.String)
    {
        java.lang.String $r0;
        com.android.internal.telephony.test.CallInfo $r1;
        com.android.internal.telephony.test.CallInfo$State $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.android.internal.telephony.test.CallInfo;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State DIALING>;

        specialinvoke $r1.<com.android.internal.telephony.test.CallInfo: void <init>(boolean,com.android.internal.telephony.test.CallInfo$State,boolean,java.lang.String)>(0, $r2, 0, $r0);

        return $r1;
    }

    boolean isActiveOrHeld()
    {
        com.android.internal.telephony.test.CallInfo $r0;
        com.android.internal.telephony.test.CallInfo$State $r1, $r2;

        $r0 := @this: com.android.internal.telephony.test.CallInfo;

        $r1 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ACTIVE>;

        if $r1 == $r2 goto label1;

        $r1 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State HOLDING>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isConnecting()
    {
        com.android.internal.telephony.test.CallInfo $r0;
        com.android.internal.telephony.test.CallInfo$State $r1, $r2;

        $r0 := @this: com.android.internal.telephony.test.CallInfo;

        $r1 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State DIALING>;

        if $r1 == $r2 goto label1;

        $r1 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ALERTING>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isRinging()
    {
        com.android.internal.telephony.test.CallInfo $r0;
        com.android.internal.telephony.test.CallInfo$State $r1, $r2;

        $r0 := @this: com.android.internal.telephony.test.CallInfo;

        $r1 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State INCOMING>;

        if $r1 == $r2 goto label1;

        $r1 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State WAITING>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    java.lang.String toCLCCLine(int)
    {
        com.android.internal.telephony.test.CallInfo $r0;
        int $i0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.String $r2;
        com.android.internal.telephony.test.CallInfo$State $r3;

        $r0 := @this: com.android.internal.telephony.test.CallInfo;

        $i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+CLCC: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $z0 = $r0.<com.android.internal.telephony.test.CallInfo: boolean isMT>;

        if $z0 == 0 goto label3;

        $r2 = "1";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r3 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.test.CallInfo$State: int value()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",0,");

        $z0 = $r0.<com.android.internal.telephony.test.CallInfo: boolean isMpty>;

        if $z0 == 0 goto label4;

        $r2 = "1";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r2 = $r0.<com.android.internal.telephony.test.CallInfo: java.lang.String number>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",");

        $i0 = $r0.<com.android.internal.telephony.test.CallInfo: int TOA>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $r2 = "0";

        goto label1;

     label4:
        $r2 = "0";

        goto label2;
    }

    com.android.internal.telephony.gsm.DriverCall toDriverCall(int)
    {
        com.android.internal.telephony.test.CallInfo $r0;
        int $i0;
        com.android.internal.telephony.gsm.DriverCall $r1;
        boolean $z0;
        com.android.internal.telephony.test.CallInfo$State $r2;
        com.android.internal.telephony.gsm.DriverCall$State $r3;
        java.lang.String $r4;
        com.android.internal.telephony.ATParseEx $r5;
        java.lang.RuntimeException $r6;

        $r0 := @this: com.android.internal.telephony.test.CallInfo;

        $i0 := @parameter0: int;

        $r1 = new com.android.internal.telephony.gsm.DriverCall;

        specialinvoke $r1.<com.android.internal.telephony.gsm.DriverCall: void <init>()>();

        $r1.<com.android.internal.telephony.gsm.DriverCall: int index> = $i0;

        $z0 = $r0.<com.android.internal.telephony.test.CallInfo: boolean isMT>;

        $r1.<com.android.internal.telephony.gsm.DriverCall: boolean isMT> = $z0;

        $r2 = $r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State state>;

     label1:
        $i0 = virtualinvoke $r2.<com.android.internal.telephony.test.CallInfo$State: int value()>();

        $r3 = staticinvoke <com.android.internal.telephony.gsm.DriverCall: com.android.internal.telephony.gsm.DriverCall$State stateFromCLCC(int)>($i0);

     label2:
        $r1.<com.android.internal.telephony.gsm.DriverCall: com.android.internal.telephony.gsm.DriverCall$State state> = $r3;

        $z0 = $r0.<com.android.internal.telephony.test.CallInfo: boolean isMpty>;

        $r1.<com.android.internal.telephony.gsm.DriverCall: boolean isMpty> = $z0;

        $r4 = $r0.<com.android.internal.telephony.test.CallInfo: java.lang.String number>;

        $r1.<com.android.internal.telephony.gsm.DriverCall: java.lang.String number> = $r4;

        $i0 = $r0.<com.android.internal.telephony.test.CallInfo: int TOA>;

        $r1.<com.android.internal.telephony.gsm.DriverCall: int TOA> = $i0;

        $r1.<com.android.internal.telephony.gsm.DriverCall: boolean isVoice> = 1;

        $r1.<com.android.internal.telephony.gsm.DriverCall: int als> = 0;

        return $r1;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("should never happen", $r5);

        throw $r6;

        catch com.android.internal.telephony.ATParseEx from label1 to label2 with label3;
    }
}
