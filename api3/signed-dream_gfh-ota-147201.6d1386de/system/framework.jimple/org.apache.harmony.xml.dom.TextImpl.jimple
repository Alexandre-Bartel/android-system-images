public class org.apache.harmony.xml.dom.TextImpl extends org.apache.harmony.xml.dom.CharacterDataImpl implements org.w3c.dom.Text
{

    void <init>(org.apache.harmony.xml.dom.DocumentImpl, java.lang.String)
    {
        org.apache.harmony.xml.dom.TextImpl $r0;
        org.apache.harmony.xml.dom.DocumentImpl $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        $r1 := @parameter0: org.apache.harmony.xml.dom.DocumentImpl;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<org.apache.harmony.xml.dom.CharacterDataImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r1, $r2);

        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.harmony.xml.dom.TextImpl $r0;

        $r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        return "#text";
    }

    public short getNodeType()
    {
        org.apache.harmony.xml.dom.TextImpl $r0;

        $r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        return 3;
    }

    public java.lang.String getNodeValue()
    {
        org.apache.harmony.xml.dom.TextImpl $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        $r1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getData()>();

        return $r1;
    }

    public org.w3c.dom.Text splitText(int) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.TextImpl $r0;
        int $i0, $i1;
        org.w3c.dom.Document $r1;
        java.lang.String $r2;
        org.w3c.dom.Text $r3;
        org.w3c.dom.Node $r4, $r5;

        $r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()>();

        $i1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.CharacterDataImpl: int getLength()>();

        $i1 = $i1 - $i0;

        $r2 = virtualinvoke $r0.<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String substringData(int,int)>($i0, $i1);

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r2);

        virtualinvoke $r0.<org.apache.harmony.xml.dom.CharacterDataImpl: void deleteData(int,int)>(0, $i0);

        $r4 = virtualinvoke $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getNextSibling()>();

        if $r4 != null goto label1;

        $r4 = virtualinvoke $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return $r0;

     label1:
        $r5 = virtualinvoke $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r3, $r4);

        return $r0;
    }
}
