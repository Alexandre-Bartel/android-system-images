public class android.widget.AnalogClock extends android.view.View
{
    private boolean mAttached;
    private android.text.format.Time mCalendar;
    private boolean mChanged;
    private android.graphics.drawable.Drawable mDial;
    private int mDialHeight;
    private int mDialWidth;
    private final android.os.Handler mHandler;
    private float mHour;
    private android.graphics.drawable.Drawable mHourHand;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private android.graphics.drawable.Drawable mMinuteHand;
    private float mMinutes;

    public void <init>(android.content.Context)
    {
        android.widget.AnalogClock $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.AnalogClock;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AnalogClock $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.AnalogClock;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AnalogClock $r0;
        android.content.Context $r1, $r5;
        android.util.AttributeSet $r2;
        int $i0;
        android.os.Handler $r3;
        android.widget.AnalogClock$1 $r4;
        android.content.res.Resources $r6;
        int[] $r7;
        android.content.res.TypedArray $r8;
        android.graphics.drawable.Drawable $r9;
        android.text.format.Time $r10;

        $r0 := @this: android.widget.AnalogClock;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        $r0.<android.widget.AnalogClock: android.os.Handler mHandler> = $r3;

        $r4 = new android.widget.AnalogClock$1;

        specialinvoke $r4.<android.widget.AnalogClock$1: void <init>(android.widget.AnalogClock)>($r0);

        $r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver> = $r4;

        $r5 = $r0.<android.view.View: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = <com.android.internal.R$styleable: int[] AnalogClock>;

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r7, $i0, 0);

        $r9 = virtualinvoke $r8.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial> = $r9;

        $r9 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        if $r9 != null goto label1;

        $r9 = virtualinvoke $r6.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301794);

        $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial> = $r9;

     label1:
        $r9 = virtualinvoke $r8.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand> = $r9;

        $r9 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand>;

        if $r9 != null goto label2;

        $r9 = virtualinvoke $r6.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301795);

        $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand> = $r9;

     label2:
        $r9 = virtualinvoke $r8.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand> = $r9;

        $r9 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand>;

        if $r9 != null goto label3;

        $r9 = virtualinvoke $r6.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301796);

        $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand> = $r9;

     label3:
        $r10 = new android.text.format.Time;

        specialinvoke $r10.<android.text.format.Time: void <init>()>();

        $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar> = $r10;

        $r9 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r0.<android.widget.AnalogClock: int mDialWidth> = $i0;

        $r9 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r0.<android.widget.AnalogClock: int mDialHeight> = $i0;

        return;
    }

    static android.text.format.Time access$002(android.widget.AnalogClock, android.text.format.Time)
    {
        android.widget.AnalogClock $r0;
        android.text.format.Time $r1;

        $r0 := @parameter0: android.widget.AnalogClock;

        $r1 := @parameter1: android.text.format.Time;

        $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar> = $r1;

        return $r1;
    }

    static void access$100(android.widget.AnalogClock)
    {
        android.widget.AnalogClock $r0;

        $r0 := @parameter0: android.widget.AnalogClock;

        specialinvoke $r0.<android.widget.AnalogClock: void onTimeChanged()>();

        return;
    }

    private void onTimeChanged()
    {
        android.widget.AnalogClock $r0;
        int $i0, $i1, $i2;
        android.text.format.Time $r1;
        float $f0, $f1;

        $r0 := @this: android.widget.AnalogClock;

        $r1 = $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        virtualinvoke $r1.<android.text.format.Time: void setToNow()>();

        $r1 = $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        $i0 = $r1.<android.text.format.Time: int hour>;

        $r1 = $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        $i1 = $r1.<android.text.format.Time: int minute>;

        $r1 = $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        $i2 = $r1.<android.text.format.Time: int second>;

        $f0 = (float) $i1;

        $f1 = (float) $i2;

        $f1 = $f1 / 60.0F;

        $f0 = $f0 + $f1;

        $r0.<android.widget.AnalogClock: float mMinutes> = $f0;

        $f0 = (float) $i0;

        $f1 = $r0.<android.widget.AnalogClock: float mMinutes>;

        $f1 = $f1 / 60.0F;

        $f0 = $f0 + $f1;

        $r0.<android.widget.AnalogClock: float mHour> = $f0;

        $r0.<android.widget.AnalogClock: boolean mChanged> = 1;

        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AnalogClock $r0;
        android.content.IntentFilter $r1;
        android.content.BroadcastReceiver $r2;
        android.os.Handler $r3;
        android.content.Context $r4;
        boolean $z0;
        android.text.format.Time $r5;

        $r0 := @this: android.widget.AnalogClock;

        specialinvoke $r0.<android.view.View: void onAttachedToWindow()>();

        $z0 = $r0.<android.widget.AnalogClock: boolean mAttached>;

        if $z0 != 0 goto label1;

        $r0.<android.widget.AnalogClock: boolean mAttached> = 1;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r4 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = $r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver>;

        $r3 = $r0.<android.widget.AnalogClock: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r2, $r1, null, $r3);

     label1:
        $r5 = new android.text.format.Time;

        specialinvoke $r5.<android.text.format.Time: void <init>()>();

        $r0.<android.widget.AnalogClock: android.text.format.Time mCalendar> = $r5;

        specialinvoke $r0.<android.widget.AnalogClock: void onTimeChanged()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AnalogClock $r0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;
        boolean $z0;

        $r0 := @this: android.widget.AnalogClock;

        specialinvoke $r0.<android.view.View: void onDetachedFromWindow()>();

        $z0 = $r0.<android.widget.AnalogClock: boolean mAttached>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r1 = $r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        $r0.<android.widget.AnalogClock: boolean mAttached> = 0;

        return;

     label1:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.AnalogClock $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r2;
        float $f0, $f1, $f2;

        $r0 := @this: android.widget.AnalogClock;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $z0 = $r0.<android.widget.AnalogClock: boolean mChanged>;

        if $z0 == 0 goto label1;

        $r0.<android.widget.AnalogClock: boolean mChanged> = 0;

     label1:
        $i3 = $r0.<android.view.View: int mRight>;

        $i2 = $r0.<android.view.View: int mLeft>;

        $i1 = $i3 - $i2;

        $i3 = $r0.<android.view.View: int mBottom>;

        $i2 = $r0.<android.view.View: int mTop>;

        $i0 = $i3 - $i2;

        $i2 = $i1 / 2;

        $i3 = $i0 / 2;

        $r2 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i4 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $z1 = 0;

        if $i1 < $i4 goto label2;

        if $i0 >= $i5 goto label3;

     label2:
        $z1 = 1;

        $f0 = (float) $i1;

        $f1 = (float) $i4;

        $f0 = $f0 / $f1;

        $f1 = (float) $i0;

        $f2 = (float) $i5;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float,float,float)>($f0, $f0, $f1, $f2);

     label3:
        if $z0 == 0 goto label4;

        $i1 = $i4 / 2;

        $i1 = $i2 - $i1;

        $i0 = $i5 / 2;

        $i0 = $i3 - $i0;

        $i4 = $i4 / 2;

        $i4 = $i4 + $i2;

        $i5 = $i5 / 2;

        $i5 = $i5 + $i3;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i4, $i5);

     label4:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f0 = $r0.<android.widget.AnalogClock: float mHour>;

        $f0 = $f0 / 12.0F;

        $f0 = $f0 * 360.0F;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f1, $f2);

        $r2 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand>;

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i5 = $i0 / 2;

        $i5 = $i2 - $i5;

        $i4 = $i1 / 2;

        $i4 = $i3 - $i4;

        $i0 = $i0 / 2;

        $i0 = $i0 + $i2;

        $i1 = $i1 / 2;

        $i1 = $i1 + $i3;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i5, $i4, $i0, $i1);

     label5:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f0 = $r0.<android.widget.AnalogClock: float mMinutes>;

        $f0 = $f0 / 60.0F;

        $f0 = $f0 * 360.0F;

        $f1 = (float) $i2;

        $f2 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f1, $f2);

        $r2 = $r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand>;

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i5 = $i0 / 2;

        $i5 = $i2 - $i5;

        $i4 = $i1 / 2;

        $i4 = $i3 - $i4;

        $i0 = $i0 / 2;

        $i2 = $i0 + $i2;

        $i1 = $i1 / 2;

        $i3 = $i1 + $i3;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i5, $i4, $i2, $i3);

     label6:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        if $z1 == 0 goto label7;

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label7:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AnalogClock $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2;

        $r0 := @this: android.widget.AnalogClock;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $f0 = 1.0F;

        $f1 = 1.0F;

        if $i2 == 0 goto label1;

        $i2 = $r0.<android.widget.AnalogClock: int mDialWidth>;

        if $i3 >= $i2 goto label1;

        $f0 = (float) $i3;

        $i3 = $r0.<android.widget.AnalogClock: int mDialWidth>;

        $f2 = (float) $i3;

        $f0 = $f0 / $f2;

     label1:
        if $i4 == 0 goto label2;

        $i4 = $r0.<android.widget.AnalogClock: int mDialHeight>;

        if $i5 >= $i4 goto label2;

        $f1 = (float) $i5;

        $i5 = $r0.<android.widget.AnalogClock: int mDialHeight>;

        $f2 = (float) $i5;

        $f1 = $f1 / $f2;

     label2:
        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $i5 = $r0.<android.widget.AnalogClock: int mDialWidth>;

        $f1 = (float) $i5;

        $f1 = $f1 * $f0;

        $i5 = (int) $f1;

        $i0 = staticinvoke <android.widget.AnalogClock: int resolveSize(int,int)>($i5, $i0);

        $i5 = $r0.<android.widget.AnalogClock: int mDialHeight>;

        $f1 = (float) $i5;

        $f0 = $f1 * $f0;

        $i5 = (int) $f0;

        $i1 = staticinvoke <android.widget.AnalogClock: int resolveSize(int,int)>($i5, $i1);

        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AnalogClock $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.AnalogClock;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.view.View: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<android.widget.AnalogClock: boolean mChanged> = 1;

        return;
    }
}
