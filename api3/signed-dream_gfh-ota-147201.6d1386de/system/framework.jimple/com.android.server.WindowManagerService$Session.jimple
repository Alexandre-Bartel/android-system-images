final class com.android.server.WindowManagerService$Session extends android.view.IWindowSession$Stub implements android.os.IBinder$DeathRecipient
{
    final com.android.internal.view.IInputMethodClient mClient;
    boolean mClientDead;
    final com.android.internal.view.IInputContext mInputContext;
    int mNumWindow;
    com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove;
    com.android.server.WindowManagerService$WindowState mPendingPointerWindow;
    com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove;
    com.android.server.WindowManagerService$WindowState mPendingTrackballWindow;
    final int mPid;
    android.view.SurfaceSession mSurfaceSession;
    final int mUid;
    final com.android.server.WindowManagerService this$0;

    public void <init>(com.android.server.WindowManagerService, com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext)
    {
        com.android.server.WindowManagerService$Session $r0;
        com.android.server.WindowManagerService $r1;
        com.android.internal.view.IInputMethodClient $r2;
        com.android.internal.view.IInputContext $r3;
        int $i0, $i2;
        java.util.HashMap $r4;
        com.android.internal.view.IInputMethodManager $r5;
        boolean $z0;
        android.os.IBinder $r6;
        long $l1;
        java.lang.Throwable $r7, $r9;
        android.os.RemoteException $r8, $r10;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: com.android.server.WindowManagerService;

        $r2 := @parameter1: com.android.internal.view.IInputMethodClient;

        $r3 := @parameter2: com.android.internal.view.IInputContext;

        $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0> = $r1;

        specialinvoke $r0.<android.view.IWindowSession$Stub: void <init>()>();

        $r0.<com.android.server.WindowManagerService$Session: int mNumWindow> = 0;

        $r0.<com.android.server.WindowManagerService$Session: boolean mClientDead> = 0;

        $r0.<com.android.server.WindowManagerService$Session: com.android.internal.view.IInputMethodClient mClient> = $r2;

        $r0.<com.android.server.WindowManagerService$Session: com.android.internal.view.IInputContext mInputContext> = $r3;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r0.<com.android.server.WindowManagerService$Session: int mUid> = $i0;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r0.<com.android.server.WindowManagerService$Session: int mPid> = $i0;

        $r4 = $r1.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r4;

     label01:
        $r5 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r5 != null goto label02;

        $z0 = $r1.<com.android.server.WindowManagerService: boolean mHaveInputMethods>;

        if $z0 == 0 goto label02;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("input_method");

        $r5 = staticinvoke <com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>($r6);

        $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager> = $r5;

     label02:
        exitmonitor $r4;

     label03:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r5 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r5 == null goto label11;

        $r5 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        $i2 = $r0.<com.android.server.WindowManagerService$Session: int mUid>;

        $i0 = $r0.<com.android.server.WindowManagerService$Session: int mPid>;

     label05:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>($r2, $r3, $i2, $i0);

     label06:
        $r6 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r0, 0);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor $r4;

     label10:
        throw $r7;

     label11:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodClient: void setUsingInputMethod(boolean)>(0);

     label12:
        goto label06;

     label13:
        $r8 := @caughtexception;

     label14:
        $r5 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r5 == null goto label16;

        $r5 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

     label15:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>($r2);

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

     label17:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        throw $r9;

     label18:
        $r10 := @caughtexception;

        goto label16;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch android.os.RemoteException from label05 to label07 with label13;
        catch java.lang.Throwable from label04 to label07 with label17;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch android.os.RemoteException from label15 to label16 with label18;
        catch java.lang.Throwable from label14 to label16 with label17;
    }

    public int add(android.view.IWindow, android.view.WindowManager$LayoutParams, int, android.graphics.Rect)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        android.view.WindowManager$LayoutParams $r2;
        int $i0;
        android.graphics.Rect $r3;
        com.android.server.WindowManagerService $r4;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 := @parameter1: android.view.WindowManager$LayoutParams;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.graphics.Rect;

        $r4 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $i0 = virtualinvoke $r4.<com.android.server.WindowManagerService: int addWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>($r0, $r1, $r2, $i0, $r3);

        return $i0;
    }

    public void binderDied()
    {
        com.android.server.WindowManagerService$Session $r0;
        com.android.server.WindowManagerService $r1;
        com.android.internal.view.IInputMethodManager $r2;
        com.android.internal.view.IInputMethodClient $r3;
        java.util.HashMap $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        if $r2 == null goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: com.android.internal.view.IInputMethodManager mInputMethodManager>;

        $r3 = $r0.<com.android.server.WindowManagerService$Session: com.android.internal.view.IInputMethodClient mClient>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>($r3);

     label2:
        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r4 = $r1.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r4;

     label3:
        $r0.<com.android.server.WindowManagerService$Session: boolean mClientDead> = 1;

        virtualinvoke $r0.<com.android.server.WindowManagerService$Session: void killSessionLocked()>();

        exitmonitor $r4;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r5;

     label7:
        $r6 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.WindowManagerService$Session $r0;
        java.io.PrintWriter $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0;
        boolean $z0;
        android.view.SurfaceSession $r5;
        com.android.server.WindowManagerService$WindowState $r6;
        com.android.server.KeyInputQueue$QueuedEvent $r7;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: java.io.PrintWriter;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNumWindow=");

        $i0 = $r0.<com.android.server.WindowManagerService$Session: int mNumWindow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mClientDead=");

        $z0 = $r0.<com.android.server.WindowManagerService$Session: boolean mClientDead>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSurfaceSession=");

        $r5 = $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPendingPointerWindow=");

        $r6 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingPointerWindow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingPointerMove=");

        $r7 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPendingTrackballWindow=");

        $r6 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingTrackballWindow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingTrackballMove=");

        $r7 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    public void finishDrawing(android.view.IWindow)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        com.android.server.WindowManagerService $r2;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void finishDrawingWindow(com.android.server.WindowManagerService$Session,android.view.IWindow)>($r0, $r1);

        return;
    }

    public void finishKey(android.view.IWindow)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        com.android.server.WindowManagerService $r2;
        com.android.server.WindowManagerService$KeyWaiter $r3;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        virtualinvoke $r3.<com.android.server.WindowManagerService$KeyWaiter: android.view.MotionEvent finishedKey(com.android.server.WindowManagerService$Session,android.view.IWindow,boolean,int)>($r0, $r1, 0, 0);

        return;
    }

    public void getDisplayFrame(android.view.IWindow, android.graphics.Rect)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        android.graphics.Rect $r2;
        com.android.server.WindowManagerService $r3;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r3.<com.android.server.WindowManagerService: void getWindowDisplayFrame(com.android.server.WindowManagerService$Session,android.view.IWindow,android.graphics.Rect)>($r0, $r1, $r2);

        return;
    }

    public boolean getInTouchMode()
    {
        com.android.server.WindowManagerService$Session $r0;
        com.android.server.WindowManagerService $r1;
        java.util.HashMap $r2;
        java.lang.Throwable $r3;
        boolean z0;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        z0 = $r1.<com.android.server.WindowManagerService: boolean mInTouchMode>;

        exitmonitor $r2;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.MotionEvent getPendingPointerMove(android.view.IWindow)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        android.view.MotionEvent $r2;
        com.android.server.WindowManagerService $r3;
        com.android.server.WindowManagerService$KeyWaiter $r4;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r3 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $r2 = virtualinvoke $r4.<com.android.server.WindowManagerService$KeyWaiter: android.view.MotionEvent finishedKey(com.android.server.WindowManagerService$Session,android.view.IWindow,boolean,int)>($r0, $r1, 0, 1);

        return $r2;
    }

    public android.view.MotionEvent getPendingTrackballMove(android.view.IWindow)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        android.view.MotionEvent $r2;
        com.android.server.WindowManagerService $r3;
        com.android.server.WindowManagerService$KeyWaiter $r4;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r3 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $r2 = virtualinvoke $r4.<com.android.server.WindowManagerService$KeyWaiter: android.view.MotionEvent finishedKey(com.android.server.WindowManagerService$Session,android.view.IWindow,boolean,int)>($r0, $r1, 0, 2);

        return $r2;
    }

    void killSessionLocked()
    {
        com.android.server.WindowManagerService$Session $r0;
        int $i0;
        boolean $z0;
        com.android.server.WindowManagerService $r1;
        java.util.HashSet $r2;
        android.view.SurfaceSession $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $i0 = $r0.<com.android.server.WindowManagerService$Session: int mNumWindow>;

        if $i0 > 0 goto label4;

        $z0 = $r0.<com.android.server.WindowManagerService$Session: boolean mClientDead>;

        if $z0 == 0 goto label5;

        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: java.util.HashSet mSessions>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r0);

        $r3 = $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession>;

        if $r3 == null goto label6;

     label1:
        $r3 = $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession>;

        virtualinvoke $r3.<android.view.SurfaceSession: void kill()>();

     label2:
        $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession> = null;

        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when killing surface session ");

        $r3 = $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in session ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r6);

        goto label2;

     label4:
        return;

     label5:
        return;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.WindowManagerService$Session $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        java.lang.RuntimeException $r3;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke $r0.<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $z0 = $r3 instanceof java.lang.SecurityException;

        if $z0 != 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Window Session Crash", $r3);

     label4:
        throw $r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public boolean performHapticFeedback(android.view.IWindow, int, boolean)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        int $i0;
        boolean $z0;
        com.android.server.WindowManagerService $r2;
        java.util.HashMap $r3;
        long $l1;
        android.view.WindowManagerPolicy $r4;
        com.android.server.WindowManagerService$WindowState $r5;
        java.lang.Throwable $r6, $r7;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label1:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r4 = $r2.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r5 = virtualinvoke $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$WindowState windowForClientLocked(com.android.server.WindowManagerService$Session,android.view.IWindow)>($r0, $r1);

        $z0 = interfaceinvoke $r4.<android.view.WindowManagerPolicy: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>($r5, $i0, $z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r3;

     label4:
        return $z0;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public int relayout(android.view.IWindow, android.view.WindowManager$LayoutParams, int, int, int, boolean, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.view.Surface)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        android.view.WindowManager$LayoutParams $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        android.graphics.Rect $r3, $r4, $r5;
        android.view.Surface $r6;
        com.android.server.WindowManagerService $r7;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 := @parameter1: android.view.WindowManager$LayoutParams;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $r3 := @parameter6: android.graphics.Rect;

        $r4 := @parameter7: android.graphics.Rect;

        $r5 := @parameter8: android.graphics.Rect;

        $r6 := @parameter9: android.view.Surface;

        $r7 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $i0 = virtualinvoke $r7.<com.android.server.WindowManagerService: int relayoutWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.Surface)>($r0, $r1, $r2, $i0, $i1, $i2, $z0, $r3, $r4, $r5, $r6);

        return $i0;
    }

    public void remove(android.view.IWindow)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        com.android.server.WindowManagerService $r2;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void removeWindow(com.android.server.WindowManagerService$Session,android.view.IWindow)>($r0, $r1);

        return;
    }

    public void setInTouchMode(boolean)
    {
        com.android.server.WindowManagerService$Session $r0;
        boolean $z0;
        com.android.server.WindowManagerService $r1;
        java.util.HashMap $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r1.<com.android.server.WindowManagerService: boolean mInTouchMode> = $z0;

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setInsets(android.view.IWindow, int, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        int $i0;
        android.graphics.Rect $r2, $r3;
        com.android.server.WindowManagerService $r4;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 := @parameter3: android.graphics.Rect;

        $r4 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r4.<com.android.server.WindowManagerService: void setInsetsWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect)>($r0, $r1, $i0, $r2, $r3);

        return;
    }

    public void setTransparentRegion(android.view.IWindow, android.graphics.Region)
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.IWindow $r1;
        android.graphics.Region $r2;
        com.android.server.WindowManagerService $r3;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 := @parameter0: android.view.IWindow;

        $r2 := @parameter1: android.graphics.Region;

        $r3 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$1400(com.android.server.WindowManagerService,com.android.server.WindowManagerService$Session,android.view.IWindow,android.graphics.Region)>($r3, $r0, $r1, $r2);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.WindowManagerService$Session $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    void windowAddedLocked()
    {
        com.android.server.WindowManagerService$Session $r0;
        android.view.SurfaceSession $r1;
        com.android.server.WindowManagerService $r2;
        java.util.HashSet $r3;
        int $i0;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $r1 = $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession>;

        if $r1 != null goto label1;

        $r1 = new android.view.SurfaceSession;

        specialinvoke $r1.<android.view.SurfaceSession: void <init>()>();

        $r0.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession> = $r1;

        $r2 = $r0.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashSet mSessions>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r0);

     label1:
        $i0 = $r0.<com.android.server.WindowManagerService$Session: int mNumWindow>;

        $i0 = $i0 + 1;

        $r0.<com.android.server.WindowManagerService$Session: int mNumWindow> = $i0;

        return;
    }

    void windowRemovedLocked()
    {
        com.android.server.WindowManagerService$Session $r0;
        int $i0;

        $r0 := @this: com.android.server.WindowManagerService$Session;

        $i0 = $r0.<com.android.server.WindowManagerService$Session: int mNumWindow>;

        $i0 = $i0 - 1;

        $r0.<com.android.server.WindowManagerService$Session: int mNumWindow> = $i0;

        virtualinvoke $r0.<com.android.server.WindowManagerService$Session: void killSessionLocked()>();

        return;
    }
}
