public class org.apache.http.impl.cookie.RFC2965PortAttributeHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int[] parsePortAttribute(java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        java.lang.String $r0;
        int[] $r1;
        java.util.StringTokenizer $r2;
        int $i0, $i1;
        boolean $z0;
        org.apache.http.cookie.MalformedCookieException $r3;
        java.lang.NumberFormatException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r0, ",");

        $i0 = virtualinvoke $r2.<java.util.StringTokenizer: int countTokens()>();

        $r1 = newarray (int)[$i0];

        $i0 = 0;

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label7;

        $r0 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        $r1[$i0] = $i1;

        $i1 = $r1[$i0];

        if $i1 >= 0 goto label6;

     label3:
        $r3 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r3.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Invalid Port attribute.");

     label4:
        throw $r3;

     label5:
        $r4 := @caughtexception;

        $r3 = new org.apache.http.cookie.MalformedCookieException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Port attribute: ");

        $r0 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        return $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private static boolean portMatch(int, int[])
    {
        int $i0, $i1, $i2, $i3;
        int[] $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: int[];

        $i3 = 0;

        $i1 = lengthof $r0;

     label1:
        if $i3 >= $i1 goto label3;

        $i2 = $r0[$i3];

        if $i0 != $i2 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        boolean $z0;
        org.apache.http.cookie.ClientCookie $r4;
        int[] $r5;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $i0 = virtualinvoke $r2.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $z0 = $r1 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label4;

        $r4 = (org.apache.http.cookie.ClientCookie) $r1;

        $z0 = interfaceinvoke $r4.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("port");

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if $r5 != null goto label3;

        return 0;

     label3:
        $r5 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        $z0 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean portMatch(int,int[])>($i0, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r0;
        org.apache.http.cookie.SetCookie $r1;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        org.apache.http.cookie.SetCookie2 $r4;
        int $i0;
        int[] $r6;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        $r1 := @parameter0: org.apache.http.cookie.SetCookie;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        $z0 = $r1 instanceof org.apache.http.cookie.SetCookie2;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.http.cookie.SetCookie2) $r1;

        if $r2 == null goto label3;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r6 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>($r2);

        interfaceinvoke $r4.<org.apache.http.cookie.SetCookie2: void setPorts(int[])>($r6);

        return;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        boolean $z0;
        org.apache.http.cookie.ClientCookie $r4;
        int[] $r5;
        org.apache.http.cookie.MalformedCookieException $r6;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $i0 = virtualinvoke $r2.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $z0 = $r1 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label3;

        $r4 = (org.apache.http.cookie.ClientCookie) $r1;

        $z0 = interfaceinvoke $r4.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("port");

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        $z0 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean portMatch(int,int[])>($i0, $r5);

        if $z0 != 0 goto label5;

        $r6 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r6.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Port attribute violates RFC 2965: Request port not found in cookie\'s port list.");

        throw $r6;

     label3:
        return;

     label4:
        return;

     label5:
        return;
    }
}
