class com.android.server.Installer extends java.lang.Object
{
    private static final java.lang.String TAG;
    byte[] buf;
    int buflen;
    java.io.InputStream mIn;
    java.io.OutputStream mOut;
    android.net.LocalSocket mSocket;

    void <init>()
    {
        com.android.server.Installer $r0;
        byte[] $r1;

        $r0 := @this: com.android.server.Installer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[1024];

        $r0.<com.android.server.Installer: byte[] buf> = $r1;

        $r0.<com.android.server.Installer: int buflen> = 0;

        return;
    }

    private boolean connect()
    {
        com.android.server.Installer $r0;
        android.net.LocalSocketAddress $r1;
        android.net.LocalSocket $r2;
        android.net.LocalSocketAddress$Namespace $r3;
        java.io.InputStream $r4;
        java.io.OutputStream $r5;
        java.io.IOException $r6;

        $r0 := @this: com.android.server.Installer;

        $r2 = $r0.<com.android.server.Installer: android.net.LocalSocket mSocket>;

        if $r2 == null goto label1;

        return 1;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Installer", "connecting...");

        $r2 = new android.net.LocalSocket;

     label2:
        specialinvoke $r2.<android.net.LocalSocket: void <init>()>();

     label3:
        $r0.<com.android.server.Installer: android.net.LocalSocket mSocket> = $r2;

        $r1 = new android.net.LocalSocketAddress;

     label4:
        $r3 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r1.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("installd", $r3);

        $r2 = $r0.<com.android.server.Installer: android.net.LocalSocket mSocket>;

        virtualinvoke $r2.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r1);

        $r2 = $r0.<com.android.server.Installer: android.net.LocalSocket mSocket>;

        $r4 = virtualinvoke $r2.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

     label5:
        $r0.<com.android.server.Installer: java.io.InputStream mIn> = $r4;

     label6:
        $r2 = $r0.<com.android.server.Installer: android.net.LocalSocket mSocket>;

        $r5 = virtualinvoke $r2.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

     label7:
        $r0.<com.android.server.Installer: java.io.OutputStream mOut> = $r5;

        return 1;

     label8:
        $r6 := @caughtexception;

        specialinvoke $r0.<com.android.server.Installer: void disconnect()>();

        return 0;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private void disconnect()
    {
        com.android.server.Installer $r0;
        android.net.LocalSocket $r1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;
        java.io.IOException $r4, $r5, $r6;

        $r0 := @this: com.android.server.Installer;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Installer", "disconnecting...");

        $r1 = $r0.<com.android.server.Installer: android.net.LocalSocket mSocket>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.android.server.Installer: android.net.LocalSocket mSocket>;

     label1:
        virtualinvoke $r1.<android.net.LocalSocket: void close()>();

     label2:
        $r2 = $r0.<com.android.server.Installer: java.io.InputStream mIn>;

        if $r2 == null goto label4;

        $r2 = $r0.<com.android.server.Installer: java.io.InputStream mIn>;

     label3:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label4:
        $r3 = $r0.<com.android.server.Installer: java.io.OutputStream mOut>;

        if $r3 == null goto label6;

        $r3 = $r0.<com.android.server.Installer: java.io.OutputStream mOut>;

     label5:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label6:
        $r0.<com.android.server.Installer: android.net.LocalSocket mSocket> = null;

        $r0.<com.android.server.Installer: java.io.InputStream mIn> = null;

        $r0.<com.android.server.Installer: java.io.OutputStream mOut> = null;

        return;

     label7:
        $r4 := @caughtexception;

        goto label6;

     label8:
        $r5 := @caughtexception;

        goto label4;

     label9:
        $r6 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private int execute(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        java.lang.NumberFormatException $r2;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke $r0.<com.android.server.Installer: java.lang.String transaction(java.lang.String)>($r1);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean readBytes(byte[], int)
    {
        com.android.server.Installer $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        java.io.InputStream $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.IOException $r5;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = 0;

        if $i0 >= 0 goto label2;

        return 0;

     label1:
        $i1 = $i1 + $i2;

     label2:
        if $i1 == $i0 goto label6;

        $r2 = $r0.<com.android.server.Installer: java.io.InputStream mIn>;

        $i2 = $i0 - $i1;

     label3:
        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i2);

     label4:
        if $i2 > 0 goto label1;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read error ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Installer", $r4);

     label6:
        if $i1 != $i0 goto label8;

        return 1;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Installer", "read exception");

        goto label6;

     label8:
        specialinvoke $r0.<com.android.server.Installer: void disconnect()>();

        return 0;

        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private boolean readReply()
    {
        com.android.server.Installer $r0;
        int $i0;
        byte[] $r1;
        boolean $z0;
        byte $b1;
        short $s2, $s3;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: com.android.server.Installer;

        $r0.<com.android.server.Installer: int buflen> = 0;

        $r1 = $r0.<com.android.server.Installer: byte[] buf>;

        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean readBytes(byte[],int)>($r1, 2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.android.server.Installer: byte[] buf>;

        $b1 = $r1[0];

        $s2 = $b1 & 255;

        $r1 = $r0.<com.android.server.Installer: byte[] buf>;

        $b1 = $r1[1];

        $s3 = $b1 & 255;

        $i0 = $s3 << 8;

        $i0 = $s2 | $i0;

        if $i0 < 1 goto label2;

        if $i0 <= 1024 goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid reply length (");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Installer", $r3);

        specialinvoke $r0.<com.android.server.Installer: void disconnect()>();

        return 0;

     label3:
        $r1 = $r0.<com.android.server.Installer: byte[] buf>;

        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean readBytes(byte[],int)>($r1, $i0);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r0.<com.android.server.Installer: int buflen> = $i0;

        return 1;
    }

    private java.lang.String transaction(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        boolean $z0;
        byte[] $r2;
        int $i0;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean connect()>();

        if $z0 != 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Installer", "connection failed");

     label2:
        $r1 = "-1";

     label3:
        exitmonitor $r0;

        return $r1;

     label4:
        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean writeCommand(java.lang.String)>($r1);

        if $z0 != 0 goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Installer", "write command failed? reconnect!");

        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean connect()>();

        if $z0 == 0 goto label5;

        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean writeCommand(java.lang.String)>($r1);

        if $z0 != 0 goto label6;

     label5:
        $r1 = "-1";

        goto label3;

     label6:
        $z0 = specialinvoke $r0.<com.android.server.Installer: boolean readReply()>();

        if $z0 == 0 goto label7;

        $r1 = new java.lang.String;

        $r2 = $r0.<com.android.server.Installer: byte[] buf>;

        $i0 = $r0.<com.android.server.Installer: int buflen>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int)>($r2, 0, $i0);

        goto label3;

     label7:
        $r1 = "-1";

        goto label3;

     label8:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label7 with label8;
    }

    private boolean writeCommand(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        int $i0, $i1;
        byte[] $r2, $r3;
        byte $b2;
        java.io.OutputStream $r4;
        java.io.IOException $r5;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r2;

        if $i0 < 1 goto label1;

        if $i0 <= 1024 goto label2;

     label1:
        return 0;

     label2:
        $r3 = $r0.<com.android.server.Installer: byte[] buf>;

        $i1 = $i0 & 255;

        $b2 = (byte) $i1;

        $r3[0] = $b2;

        $r3 = $r0.<com.android.server.Installer: byte[] buf>;

        $i1 = $i0 >> 8;

        $i1 = $i1 & 255;

        $b2 = (byte) $i1;

        $r3[1] = $b2;

        $r4 = $r0.<com.android.server.Installer: java.io.OutputStream mOut>;

        $r3 = $r0.<com.android.server.Installer: byte[] buf>;

     label3:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, 2);

        $r4 = $r0.<com.android.server.Installer: java.io.OutputStream mOut>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label4:
        return 1;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Installer", "write error");

        specialinvoke $r0.<com.android.server.Installer: void disconnect()>();

        return 0;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public int clearUserData(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmuserdata");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public int deleteCacheFiles(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmcache");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public int dexopt(java.lang.String, int, boolean)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("dexopt");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        if $z0 == 0 goto label2;

        $r1 = " 1";

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;

     label2:
        $r1 = " 0";

        goto label1;
    }

    public int freeCache(long)
    {
        com.android.server.Installer $r0;
        long $l0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i1;

        $r0 := @this: com.android.server.Installer;

        $l0 := @parameter0: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("freecache");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r2);

        return $i1;
    }

    public int getSizeInfo(java.lang.String, java.lang.String, java.lang.String, android.content.pm.PackageStats)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1, $r2, $r3;
        android.content.pm.PackageStats $r4;
        java.lang.StringBuilder $r5;
        java.lang.String[] $r6;
        int $i0;
        long $l1;
        java.lang.NumberFormatException $r7;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.content.pm.PackageStats;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("getsize");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if $r3 == null goto label03;

        $r1 = $r3;

     label01:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = specialinvoke $r0.<com.android.server.Installer: java.lang.String transaction(java.lang.String)>($r1);

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        if $r6 == null goto label02;

        $i0 = lengthof $r6;

        if $i0 == 4 goto label04;

     label02:
        return -1;

     label03:
        $r1 = "!";

        goto label01;

     label04:
        $r1 = $r6[1];

     label05:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label06:
        $r4.<android.content.pm.PackageStats: long codeSize> = $l1;

     label07:
        $r1 = $r6[2];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label08:
        $r4.<android.content.pm.PackageStats: long dataSize> = $l1;

     label09:
        $r1 = $r6[3];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label10:
        $r4.<android.content.pm.PackageStats: long cacheSize> = $l1;

     label11:
        $r1 = $r6[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label12:
        return $i0;

     label13:
        $r7 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label05 to label06 with label13;
        catch java.lang.NumberFormatException from label07 to label08 with label13;
        catch java.lang.NumberFormatException from label09 to label10 with label13;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
    }

    public int install(java.lang.String, int, int)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("install");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public int movedex(java.lang.String, java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("movedex");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public boolean ping()
    {
        com.android.server.Installer $r0;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>("ping");

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public int remove(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("remove");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public int rmdex(java.lang.String)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmdex");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public int setForwardLockPerm(java.lang.String, int)
    {
        com.android.server.Installer $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.android.server.Installer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("protect");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke $r0.<com.android.server.Installer: int execute(java.lang.String)>($r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.server.Installer: java.lang.String TAG> = "Installer";

        return;
    }
}
