public class org.apache.http.impl.cookie.RFC2965Spec extends org.apache.http.impl.cookie.RFC2109Spec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        specialinvoke $r0.<org.apache.http.impl.cookie.RFC2965Spec: void <init>(java.lang.String[],boolean)>(null, 0);

        return;
    }

    public void <init>(java.lang.String[], boolean)
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        java.lang.String[] $r1;
        boolean $z0;
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r2;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r3;
        org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler $r4;
        org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler $r5;
        org.apache.http.impl.cookie.RFC2965VersionAttributeHandler $r6;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<org.apache.http.impl.cookie.RFC2109Spec: void <init>(java.lang.String[],boolean)>($r1, $z0);

        $r2 = new org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke $r2.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("domain", $r2);

        $r3 = new org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke $r3.<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("port", $r3);

        $r4 = new org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler;

        specialinvoke $r4.<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("commenturl", $r4);

        $r5 = new org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler;

        specialinvoke $r5.<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("discard", $r5);

        $r6 = new org.apache.http.impl.cookie.RFC2965VersionAttributeHandler;

        specialinvoke $r6.<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("version", $r6);

        return;
    }

    private static org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin $r0, $r3;
        java.lang.String $r1, $r4;
        boolean $z0;
        int $i0, $i1;
        char $c2;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke $r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $z0 = 1;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 == 46 goto label2;

        if $c2 != 58 goto label4;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new org.apache.http.cookie.CookieOrigin;

        $i0 = virtualinvoke $r0.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r4 = virtualinvoke $r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        $z0 = virtualinvoke $r0.<org.apache.http.cookie.CookieOrigin: boolean isSecure()>();

        specialinvoke $r3.<org.apache.http.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r1, $i0, $r4, $z0);

        return $r3;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        return $r0;
    }

    private org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String, java.lang.String, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        java.lang.String $r1, $r2;
        org.apache.http.cookie.CookieOrigin $r3;
        org.apache.http.impl.cookie.BasicClientCookie $r4;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.http.cookie.CookieOrigin;

        $r4 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>($r3);

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r1);

        $r1 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>($r3);

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r1);

        return $r4;
    }

    private org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String, java.lang.String, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        java.lang.String $r1, $r2;
        org.apache.http.cookie.CookieOrigin $r3;
        org.apache.http.impl.cookie.BasicClientCookie2 $r4;
        int[] $r5;
        int $i0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.http.cookie.CookieOrigin;

        $r4 = new org.apache.http.impl.cookie.BasicClientCookie2;

        specialinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie2: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>($r3);

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r1);

        $r1 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>($r3);

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r1);

        $r5 = newarray (int)[1];

        $i0 = virtualinvoke $r3.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r5[0] = $i0;

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>($r5);

        return $r4;
    }

    protected void formatCookieAsVer(org.apache.http.util.CharArrayBuffer, org.apache.http.cookie.Cookie, int)
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.cookie.Cookie $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        org.apache.http.cookie.ClientCookie $r3;
        java.lang.String $r4;
        int[] $r5;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.cookie.Cookie;

        $i0 := @parameter2: int;

        specialinvoke $r0.<org.apache.http.impl.cookie.RFC2109Spec: void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int)>($r1, $r2, $i0);

        $z0 = $r2 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label4;

        $r3 = (org.apache.http.cookie.ClientCookie) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.http.cookie.ClientCookie: java.lang.String getAttribute(java.lang.String)>("port");

        if $r4 == null goto label5;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; $Port");

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=\"");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r5 = interfaceinvoke $r2.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if $r5 == null goto label3;

        $i1 = 0;

        $i0 = lengthof $r5;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 <= 0 goto label2;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(",");

     label2:
        $i2 = $r5[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("\"");

        return;

     label4:
        return;

     label5:
        return;
    }

    public int getVersion()
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        return 1;
    }

    public org.apache.http.Header getVersionHeader()
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        int $i0;
        java.lang.String $r2;
        org.apache.http.message.BufferedHeader $r3;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r1.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(40);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Cookie2");

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("$Version=");

        $i0 = virtualinvoke $r0.<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r2);

        $r3 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r3.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r1);

        return $r3;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r2 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>($r2);

        $z0 = specialinvoke $r0.<org.apache.http.impl.cookie.CookieSpecBase: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>($r1, $r2);

        return $z0;
    }

    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        org.apache.http.Header $r1;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        org.apache.http.HeaderElement $r4;
        org.apache.http.NameValuePair $r5;
        org.apache.http.cookie.CookieOrigin $r6;
        java.lang.IllegalArgumentException $r7;
        org.apache.http.HeaderElement[] $r8;
        int $i0, $i1, $i2;
        java.lang.String $r9, $r10, $r12;
        org.apache.http.cookie.MalformedCookieException $r11;
        boolean $z0;
        org.apache.http.impl.cookie.BasicClientCookie $r13;
        org.apache.http.NameValuePair[] $r14;
        java.util.Locale $r15;
        java.util.Set $r16;
        java.util.Iterator $r17;
        java.lang.Object $r18;
        java.util.Map$Entry $r19;
        org.apache.http.cookie.CookieAttributeHandler $r20;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.http.Header;

        $r6 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label01;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r7;

     label01:
        if $r6 != null goto label02;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r7;

     label02:
        $r6 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>($r6);

        $r8 = interfaceinvoke $r1.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $r3 = new java.util.ArrayList;

        $i0 = lengthof $r8;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r8;

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label12;

        $r4 = $r8[$i1];

        $r9 = interfaceinvoke $r4.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r10 = interfaceinvoke $r4.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r9 == null goto label04;

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i2 != 0 goto label05;

     label04:
        $r11 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r11.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r11;

     label05:
        $r12 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("Set-Cookie2");

        if $z0 == 0 goto label08;

        $r13 = specialinvoke $r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin)>($r9, $r10, $r6);

     label06:
        $r14 = interfaceinvoke $r4.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $r2 = new java.util.HashMap;

        $i2 = lengthof $r14;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i2);

        $i2 = lengthof $r14;

        $i2 = $i2 - 1;

     label07:
        if $i2 < 0 goto label09;

        $r5 = $r14[$i2];

        $r9 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r15 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r15);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r5);

        $i2 = $i2 + -1;

        goto label07;

     label08:
        $r13 = specialinvoke $r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin)>($r9, $r10, $r6);

        goto label06;

     label09:
        $r16 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r17 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.util.Map$Entry) $r18;

        $r18 = interfaceinvoke $r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (org.apache.http.NameValuePair) $r18;

        $r9 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r15 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r15);

        $r10 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke $r13.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>($r9, $r10);

        $r20 = virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r9);

        if $r20 == null goto label10;

        $r9 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r20.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>($r13, $r9);

        goto label10;

     label11:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

        $i1 = $i1 + 1;

        goto label03;

     label12:
        return $r3;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965Spec $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r2 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>($r2);

        specialinvoke $r0.<org.apache.http.impl.cookie.RFC2109Spec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>($r1, $r2);

        return;
    }
}
