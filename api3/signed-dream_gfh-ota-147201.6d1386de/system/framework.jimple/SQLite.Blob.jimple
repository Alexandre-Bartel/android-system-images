public class SQLite.Blob extends java.lang.Object
{
    private long handle;
    protected int size;

    static void <clinit>()
    {
        staticinvoke <SQLite.Blob: void internal_init()>();

        return;
    }

    public void <init>()
    {
        SQLite.Blob $r0;

        $r0 := @this: SQLite.Blob;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<SQLite.Blob: long handle> = 0L;

        $r0.<SQLite.Blob: int size> = 0;

        return;
    }

    private static native void internal_init();

    public native void close();

    protected native void finalize();

    public java.io.InputStream getInputStream()
    {
        SQLite.Blob $r0;
        SQLite.BlobR $r1;

        $r0 := @this: SQLite.Blob;

        $r1 = new SQLite.BlobR;

        specialinvoke $r1.<SQLite.BlobR: void <init>(SQLite.Blob)>($r0);

        return $r1;
    }

    public java.io.OutputStream getOutputStream()
    {
        SQLite.Blob $r0;
        SQLite.BlobW $r1;

        $r0 := @this: SQLite.Blob;

        $r1 = new SQLite.BlobW;

        specialinvoke $r1.<SQLite.BlobW: void <init>(SQLite.Blob)>($r0);

        return $r1;
    }

    native int read(byte[], int, int, int) throws java.io.IOException;

    native int write(byte[], int, int, int) throws java.io.IOException;
}
