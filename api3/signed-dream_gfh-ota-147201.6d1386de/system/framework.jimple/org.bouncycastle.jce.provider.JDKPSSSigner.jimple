public class org.bouncycastle.jce.provider.JDKPSSSigner extends java.security.Signature
{
    private org.bouncycastle.crypto.Digest digest;
    private java.security.AlgorithmParameters engineParams;
    private java.security.spec.PSSParameterSpec originalSpec;
    private java.security.spec.PSSParameterSpec paramSpec;
    private org.bouncycastle.crypto.signers.PSSSigner pss;
    private int saltLength;
    private org.bouncycastle.crypto.AsymmetricBlockCipher signer;
    private byte trailer;

    protected void <init>(java.lang.String, org.bouncycastle.crypto.AsymmetricBlockCipher, java.security.spec.PSSParameterSpec)
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        java.lang.String $r1;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        java.security.spec.PSSParameterSpec $r3;
        org.bouncycastle.crypto.Digest $r4;
        int $i0;
        byte $b1;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.bouncycastle.crypto.AsymmetricBlockCipher;

        $r3 := @parameter2: java.security.spec.PSSParameterSpec;

        specialinvoke $r0.<java.security.Signature: void <init>(java.lang.String)>($r1);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer> = $r2;

        if $r3 != null goto label2;

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec> = null;

        $r3 = <java.security.spec.PSSParameterSpec: java.security.spec.PSSParameterSpec DEFAULT>;

     label1:
        $r1 = virtualinvoke $r3.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r4 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r1);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest digest> = $r4;

        $i0 = virtualinvoke $r3.<java.security.spec.PSSParameterSpec: int getSaltLength()>();

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength> = $i0;

        $i0 = virtualinvoke $r3.<java.security.spec.PSSParameterSpec: int getTrailerField()>();

        $b1 = specialinvoke $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte getTrailer(int)>($i0);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer> = $b1;

        return;

     label2:
        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec> = $r3;

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec> = $r3;

        goto label1;
    }

    private byte getTrailer(int)
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        return -68;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown trailer field");

        throw $r1;
    }

    protected java.lang.Object engineGetParameter(java.lang.String)
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        java.lang.String $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineGetParameter unsupported");

        throw $r2;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        java.security.AlgorithmParameters $r1;
        java.security.spec.PSSParameterSpec $r2;
        java.lang.Exception $r3;
        java.lang.RuntimeException $r4;
        java.lang.String $r5;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams>;

        if $r1 != null goto label2;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        if $r2 == null goto label2;

     label1:
        $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("PSS", "BC");

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams> = $r1;

        $r1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams>;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        virtualinvoke $r1.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r2);

     label2:
        $r1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.AlgorithmParameters engineParams>;

        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        int $i0;
        byte $b1;
        org.bouncycastle.crypto.params.RSAKeyParameters $r1;
        java.security.PrivateKey $r2;
        boolean $z0;
        java.security.InvalidKeyException $r3;
        org.bouncycastle.crypto.signers.PSSSigner $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        org.bouncycastle.crypto.Digest $r6;
        java.security.interfaces.RSAPrivateKey $r7;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r2 := @parameter0: java.security.PrivateKey;

        $z0 = $r2 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 != 0 goto label1;

        $r3 = new java.security.InvalidKeyException;

        specialinvoke $r3.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Supplied key is not a RSAPrivateKey instance");

        throw $r3;

     label1:
        $r4 = new org.bouncycastle.crypto.signers.PSSSigner;

        $r5 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer>;

        $r6 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength>;

        $b1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer>;

        specialinvoke $r4.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,int,byte)>($r5, $r6, $i0, $b1);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss> = $r4;

        $r4 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r7 = (java.security.interfaces.RSAPrivateKey) $r2;

        $r1 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r7);

        virtualinvoke $r4.<org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r1);

        return;
    }

    protected void engineInitSign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        java.security.SecureRandom $r1;
        byte $b0;
        org.bouncycastle.crypto.params.RSAKeyParameters $r2;
        java.security.PrivateKey $r3;
        boolean $z0;
        java.security.InvalidKeyException $r4;
        org.bouncycastle.crypto.signers.PSSSigner $r5;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r6;
        org.bouncycastle.crypto.Digest $r7;
        int $i1;
        org.bouncycastle.crypto.params.ParametersWithRandom $r8;
        java.security.interfaces.RSAPrivateKey $r9;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r3 := @parameter0: java.security.PrivateKey;

        $r1 := @parameter1: java.security.SecureRandom;

        $z0 = $r3 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 != 0 goto label1;

        $r4 = new java.security.InvalidKeyException;

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Supplied key is not a RSAPrivateKey instance");

        throw $r4;

     label1:
        $r5 = new org.bouncycastle.crypto.signers.PSSSigner;

        $r6 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer>;

        $r7 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength>;

        $b0 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer>;

        specialinvoke $r5.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,int,byte)>($r6, $r7, $i1, $b0);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss> = $r5;

        $r5 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r8 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        $r9 = (java.security.interfaces.RSAPrivateKey) $r3;

        $r2 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r9);

        specialinvoke $r8.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>($r2, $r1);

        virtualinvoke $r5.<org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r8);

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        int $i0;
        org.bouncycastle.crypto.params.RSAKeyParameters $r1;
        java.security.PublicKey $r2;
        boolean $z0;
        java.security.InvalidKeyException $r3;
        org.bouncycastle.crypto.signers.PSSSigner $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        org.bouncycastle.crypto.Digest $r6;
        java.security.interfaces.RSAPublicKey $r7;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r2 := @parameter0: java.security.PublicKey;

        $z0 = $r2 instanceof java.security.interfaces.RSAPublicKey;

        if $z0 != 0 goto label1;

        $r3 = new java.security.InvalidKeyException;

        specialinvoke $r3.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Supplied key is not a RSAPublicKey instance");

        throw $r3;

     label1:
        $r4 = new org.bouncycastle.crypto.signers.PSSSigner;

        $r5 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher signer>;

        $r6 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength>;

        specialinvoke $r4.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,int)>($r5, $r6, $i0);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss> = $r4;

        $r4 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $r7 = (java.security.interfaces.RSAPublicKey) $r2;

        $r1 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePublicKeyParameter(java.security.interfaces.RSAPublicKey)>($r7);

        virtualinvoke $r4.<org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r1);

        return;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object)
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r3;
    }

    protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidParameterException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        java.security.spec.AlgorithmParameterSpec $r1;
        boolean $z0;
        java.security.spec.PSSParameterSpec $r2;
        java.lang.String $r3, $r4;
        java.security.InvalidParameterException $r5;
        java.lang.StringBuilder $r6;
        org.bouncycastle.asn1.DERObjectIdentifier $r7;
        java.security.spec.MGF1ParameterSpec $r8;
        org.bouncycastle.crypto.Digest $r9;
        int $i0;
        byte $b1;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = $r1 instanceof java.security.spec.PSSParameterSpec;

        if $z0 == 0 goto label6;

        $r2 = (java.security.spec.PSSParameterSpec) $r1;

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec> = $r2;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec>;

        if $r2 == null goto label1;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec>;

        $r3 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r4 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $z0 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: boolean isSameDigest(java.lang.String,java.lang.String)>($r3, $r4);

        if $z0 != 0 goto label1;

        $r5 = new java.security.InvalidParameterException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameter must be using ");

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec originalSpec>;

        $r3 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label1:
        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r3 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MGF1");

        if $z0 != 0 goto label2;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r3 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()>();

        $r7 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_mgf1>;

        $r4 = virtualinvoke $r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = new java.security.InvalidParameterException;

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>("unknown mask generation function specified");

        throw $r5;

     label2:
        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r1 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        $z0 = $r1 instanceof java.security.spec.MGF1ParameterSpec;

        if $z0 != 0 goto label3;

        $r5 = new java.security.InvalidParameterException;

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>("unkown MGF parameters");

        throw $r5;

     label3:
        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r1 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        $r8 = (java.security.spec.MGF1ParameterSpec) $r1;

        $r3 = virtualinvoke $r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $r4 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>();

        $z0 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: boolean isSameDigest(java.lang.String,java.lang.String)>($r3, $r4);

        if $z0 != 0 goto label4;

        $r5 = new java.security.InvalidParameterException;

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>("digest algorithm for MGF should be the same as for PSS parameters.");

        throw $r5;

     label4:
        $r3 = virtualinvoke $r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r9 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r3);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest digest> = $r9;

        $r9 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.Digest digest>;

        if $r9 != null goto label5;

        $r5 = new java.security.InvalidParameterException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on MGF digest algorithm: ");

        $r3 = virtualinvoke $r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label5:
        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $i0 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: int getSaltLength()>();

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: int saltLength> = $i0;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: java.security.spec.PSSParameterSpec paramSpec>;

        $i0 = virtualinvoke $r2.<java.security.spec.PSSParameterSpec: int getTrailerField()>();

        $b1 = specialinvoke $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte getTrailer(int)>($i0);

        $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: byte trailer> = $b1;

        return;

     label6:
        $r5 = new java.security.InvalidParameterException;

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>("Only PSSParameterSpec supported");

        throw $r5;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        org.bouncycastle.crypto.signers.PSSSigner $r1;
        byte[] $r2;
        org.bouncycastle.crypto.CryptoException $r3;
        java.security.SignatureException $r4;
        java.lang.String $r5;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

     label1:
        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.signers.PSSSigner: byte[] generateSignature()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.security.SignatureException;

        $r5 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r4.<java.security.SignatureException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch org.bouncycastle.crypto.CryptoException from label1 to label2 with label3;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        byte $b0;
        org.bouncycastle.crypto.signers.PSSSigner $r1;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $b0 := @parameter0: byte;

        $r1 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        virtualinvoke $r1.<org.bouncycastle.crypto.signers.PSSSigner: void update(byte)>($b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        byte[] $r1;
        int $i0, $i1;
        org.bouncycastle.crypto.signers.PSSSigner $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        virtualinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: void update(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        org.bouncycastle.jce.provider.JDKPSSSigner $r0;
        byte[] $r1;
        boolean $z0;
        org.bouncycastle.crypto.signers.PSSSigner $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKPSSSigner;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKPSSSigner: org.bouncycastle.crypto.signers.PSSSigner pss>;

        $z0 = virtualinvoke $r2.<org.bouncycastle.crypto.signers.PSSSigner: boolean verifySignature(byte[])>($r1);

        return $z0;
    }
}
