public class android.graphics.drawable.LayerDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    android.graphics.drawable.LayerDrawable$LayerState mLayerState;
    private boolean mMutated;
    private int[] mPaddingB;
    private int[] mPaddingL;
    private int[] mPaddingR;
    private int[] mPaddingT;
    private final android.graphics.Rect mTmpRect;

    void <init>()
    {
        android.graphics.drawable.LayerDrawable $r0;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState)>(null);

        return;
    }

    void <init>(android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.Rect $r2;
        int $i0;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpRect> = $r2;

        $r1 = virtualinvoke $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState> = $r1;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        if $i0 <= 0 goto label1;

        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        return;

     label1:
        return;
    }

    public void <init>(android.graphics.drawable.Drawable[])
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.Drawable[] $r1;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable[];

        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState)>($r1, null);

        return;
    }

    void <init>(android.graphics.drawable.Drawable[], android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.Drawable[] $r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable[];

        $r2 := @parameter1: android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState)>($r2);

        $i0 = lengthof $r1;

        $r3 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[$i0];

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r4 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        specialinvoke $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>()>();

        $r3[$i2] = $r4;

        $r4 = $r3[$i2];

        $r5 = $r1[$i2];

        $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = $r5;

        $r5 = $r1[$i2];

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i3 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $r5 = $r1[$i2];

        $i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i1 = $i3 | $i1;

        $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum> = $i0;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = $r3;

        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        return;
    }

    private void addLayer(android.graphics.drawable.Drawable, int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r3, $r5;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r6;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r3 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        if $r3 == null goto label4;

        $r3 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $i6 = lengthof $r3;

     label1:
        $i5 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        if $i5 < $i6 goto label3;

        $i6 = $i6 + 10;

        $r3 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[$i6];

        if $i5 <= 0 goto label2;

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r3, 0, $i5);

     label2:
        $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = $r3;

     label3:
        $r6 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i7 = $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i6 = $i7 | $i6;

        $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i6;

        $r2 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        specialinvoke $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>()>();

        $r3 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3[$i5] = $r2;

        $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = $i0;

        $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = $r1;

        $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = $i1;

        $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = $i2;

        $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = $i3;

        $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = $i4;

        $i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i0 = $i0 + 1;

        $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum> = $i0;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        return;

     label4:
        $i6 = 0;

        goto label1;
    }

    private void ensurePadding()
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int[] $r2;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return;

     label1:
        $r2 = newarray (int)[$i0];

        $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL> = $r2;

        $r2 = newarray (int)[$i0];

        $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT> = $r2;

        $r2 = newarray (int)[$i0];

        $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR> = $r2;

        $r2 = newarray (int)[$i0];

        $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB> = $r2;

        return;
    }

    private boolean reapplyPadding(int, android.graphics.drawable.LayerDrawable$ChildDrawable)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r1;
        android.graphics.Rect $r2;
        android.graphics.drawable.Drawable $r3;
        int[] $r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.drawable.LayerDrawable$ChildDrawable;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpRect>;

        $r3 = $r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i1 = $r2.<android.graphics.Rect: int left>;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i2 = $r4[$i0];

        if $i1 != $i2 goto label1;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i2 = $r4[$i0];

        if $i1 != $i2 goto label1;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i2 = $r4[$i0];

        if $i1 != $i2 goto label1;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i2 = $r4[$i0];

        if $i1 == $i2 goto label2;

     label1:
        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $r4[$i0] = $i1;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $r4[$i0] = $i1;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $r4[$i0] = $i1;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        $r4[$i0] = $i1;

        return 1;

     label2:
        return 0;
    }

    android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        $r2 = new android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke $r2.<android.graphics.drawable.LayerDrawable$LayerState: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable)>($r1, $r0);

        return $r2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r2[$i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public android.graphics.drawable.Drawable findDrawableByLayerId(int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r3 = $r1[$i1];

        $i2 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        if $i2 != $i0 goto label2;

        $r3 = $r1[$i1];

        r4 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return r4;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return null;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[$i0];

        r4 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return r4;
    }

    public int getId(int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[$i0];

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.Drawable $r4;
        int[] $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i2 = -1;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i3 = 0;

        $i4 = 0;

        $i5 = 0;

     label1:
        if $i5 >= $i0 goto label3;

        $r2 = $r1[$i5];

        $r4 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i6 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i1 = $i1 + $i6;

        $i6 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i1 = $i1 + $i6;

        $i1 = $i1 + $i3;

        $i1 = $i1 + $i4;

        if $i1 <= $i2 goto label2;

        $i2 = $i1;

     label2:
        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i1 = $r5[$i5];

        $i3 = $i3 + $i1;

        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i1 = $r5[$i5];

        $i4 = $i4 + $i1;

        $i5 = $i5 + 1;

        goto label1;

     label3:
        return $i2;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.Drawable $r4;
        int[] $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i2 = -1;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i3 = 0;

        $i4 = 0;

        $i5 = 0;

     label1:
        if $i5 >= $i0 goto label3;

        $r2 = $r1[$i5];

        $r4 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i6 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        $i1 = $i1 + $i6;

        $i6 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        $i1 = $i1 + $i6;

        $i1 = $i1 + $i3;

        $i1 = $i1 + $i4;

        if $i1 <= $i2 goto label2;

        $i2 = $i1;

     label2:
        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = $r5[$i5];

        $i3 = $i3 + $i1;

        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i1 = $r5[$i5];

        $i4 = $i4 + $i1;

        $i5 = $i5 + 1;

        goto label1;

     label3:
        return $i2;
    }

    public int getNumberOfLayers()
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int i0;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        return i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        int[] $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r1.<android.graphics.Rect: int left> = 0;

        $r1.<android.graphics.Rect: int top> = 0;

        $r1.<android.graphics.Rect: int right> = 0;

        $r1.<android.graphics.Rect: int bottom> = 0;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r2[$i1];

        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: boolean reapplyPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>($i1, $r4);

        $i2 = $r1.<android.graphics.Rect: int left>;

        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i3 = $r5[$i1];

        $i2 = $i2 + $i3;

        $r1.<android.graphics.Rect: int left> = $i2;

        $i2 = $r1.<android.graphics.Rect: int top>;

        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i3 = $r5[$i1];

        $i2 = $i2 + $i3;

        $r1.<android.graphics.Rect: int top> = $i2;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i3 = $r5[$i1];

        $i2 = $i2 + $i3;

        $r1.<android.graphics.Rect: int right> = $i2;

        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $r5 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i3 = $r5[$i1];

        $i2 = $i2 + $i3;

        $r1.<android.graphics.Rect: int bottom> = $i2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return 1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r4;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.graphics.drawable.Drawable $r7;
        org.xmlpull.v1.XmlPullParserException $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

     label1:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label2;

        if $i1 == 3 goto label6;

     label2:
        if $i1 != 2 goto label1;

        if $i2 > $i0 goto label1;

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label1;

        $r5 = <com.android.internal.R$styleable: int[] LayerDrawableItem>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, 0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, 0);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(4, 0);

        $i4 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(5, 0);

        $i5 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        $i6 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        if $i5 == 0 goto label4;

        $r7 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i5);

     label3:
        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void addLayer(android.graphics.drawable.Drawable,int,int,int,int,int)>($r7, $i6, $i1, $i2, $i3, $i4);

        goto label1;

     label4:
        $i5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i5 == 4 goto label4;

        if $i5 == 2 goto label5;

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child tag defining a drawable");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label5:
        $r7 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        goto label3;

     label6:
        specialinvoke $r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        $r5 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke $r0.<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>($r5);

        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.Drawable$Callback $r2;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r2.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>($r0);

        return;

     label1:
        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.LayerDrawable $r0;
        boolean $z0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean isStateful()>();

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 = $r0.<android.graphics.drawable.LayerDrawable: boolean mMutated>;

        if $z0 != 0 goto label3;

        $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != $r0 goto label4;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r1[$i1];

        $r2 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r0.<android.graphics.drawable.LayerDrawable: boolean mMutated> = 1;

        return $r0;

     label3:
        return $r0;

     label4:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4;
        android.graphics.drawable.Drawable $r5;
        int[] $r6;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i2 = 0;

        $i3 = 0;

        $i4 = 0;

        $i5 = 0;

        $i6 = 0;

     label1:
        if $i6 >= $i0 goto label2;

        $r3 = $r2[$i6];

        $r5 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i7 = $r1.<android.graphics.Rect: int left>;

        $i8 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        $i7 = $i7 + $i8;

        $i7 = $i7 + $i2;

        $i8 = $r1.<android.graphics.Rect: int top>;

        $i9 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i8 = $i8 + $i9;

        $i8 = $i8 + $i3;

        $i9 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        $i9 = $i9 - $i1;

        $i9 = $i9 - $i4;

        $i10 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i1 = $i10 - $i1;

        $i1 = $i1 - $i5;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i7, $i8, $i9, $i1);

        $r6 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i7 = $r6[$i6];

        $i2 = $i2 + $i7;

        $r6 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i7 = $r6[$i6];

        $i4 = $i4 + $i7;

        $r6 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i7 = $r6[$i6];

        $i3 = $i3 + $i7;

        $r6 = $r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i7 = $r6[$i6];

        $i5 = $i5 + $i7;

        $i6 = $i6 + 1;

        goto label1;

     label2:
        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r4;
        android.graphics.Rect $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $z0 = 0;

        $z1 = 0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r2 = $r1[$i2];

        $r4 = $r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z2 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        if $z2 == 0 goto label2;

        $z1 = 1;

     label2:
        $z2 = specialinvoke $r0.<android.graphics.drawable.LayerDrawable: boolean reapplyPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>($i2, $r2);

        if $z2 == 0 goto label3;

        $z0 = 1;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        $r5 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r0.<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>($r5);

        return $z1;

     label5:
        return $z1;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.LayerDrawable $r0;
        int[] $r1;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r5;
        android.graphics.Rect $r6;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: int[];

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $z0 = 0;

        $z1 = 0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = $r2[$i1];

        $r5 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z2 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        if $z2 == 0 goto label2;

        $z1 = 1;

     label2:
        $z2 = specialinvoke $r0.<android.graphics.drawable.LayerDrawable: boolean reapplyPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>($i1, $r3);

        if $z2 == 0 goto label3;

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        $r6 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r0.<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>($r6);

        return $z1;

     label5:
        return $z1;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        long $l0;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>($r0, $r2, $l0);

        return;

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r3 = $r1[$i2];

        $r4 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.ColorFilter $r1;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r2[$i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.LayerDrawable $r0;
        boolean $z0;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r1[$i1];

        $r4 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean setDrawableByLayerId(int, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r4 = $r2[$i1];

        $i2 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        if $i2 != $i0 goto label2;

        $r4 = $r2[$i1];

        $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = $r1;

        return 1;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public void setId(int, int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[$i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = $i1;

        return;
    }

    public void setLayerInset(int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r3;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r3 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r1 = $r3[$i0];

        $r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = $i1;

        $r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = $i2;

        $r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = $i3;

        $r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = $i4;

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.LayerDrawable $r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r2 = $r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r1[$i1];

        $r4 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $z2;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.LayerDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>($r0, $r2);

        return;

     label1:
        return;
    }
}
