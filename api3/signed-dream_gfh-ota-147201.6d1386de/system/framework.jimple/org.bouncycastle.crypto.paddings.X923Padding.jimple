public class org.bouncycastle.crypto.paddings.X923Padding extends java.lang.Object implements org.bouncycastle.crypto.paddings.BlockCipherPadding
{
    java.security.SecureRandom random;

    public void <init>()
    {
        org.bouncycastle.crypto.paddings.X923Padding $r0;

        $r0 := @this: org.bouncycastle.crypto.paddings.X923Padding;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.bouncycastle.crypto.paddings.X923Padding: java.security.SecureRandom random> = null;

        return;
    }

    public int addPadding(byte[], int)
    {
        org.bouncycastle.crypto.paddings.X923Padding $r0;
        byte[] $r1;
        byte $b0, $b3;
        int $i1, $i2;
        java.security.SecureRandom $r2;

        $r0 := @this: org.bouncycastle.crypto.paddings.X923Padding;

        $r1 := @parameter0: byte[];

        $i2 := @parameter1: int;

        $i1 = lengthof $r1;

        $i1 = $i1 - $i2;

        $b0 = (byte) $i1;

     label1:
        $i1 = lengthof $r1;

        $i1 = $i1 - 1;

        if $i2 >= $i1 goto label4;

        $r2 = $r0.<org.bouncycastle.crypto.paddings.X923Padding: java.security.SecureRandom random>;

        if $r2 != null goto label3;

        $r1[$i2] = 0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r2 = $r0.<org.bouncycastle.crypto.paddings.X923Padding: java.security.SecureRandom random>;

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt()>();

        $b3 = (byte) $i1;

        $r1[$i2] = $b3;

        goto label2;

     label4:
        $r1[$i2] = $b0;

        return $b0;
    }

    public java.lang.String getPaddingName()
    {
        org.bouncycastle.crypto.paddings.X923Padding $r0;

        $r0 := @this: org.bouncycastle.crypto.paddings.X923Padding;

        return "X9.23";
    }

    public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.paddings.X923Padding $r0;
        java.security.SecureRandom $r1;

        $r0 := @this: org.bouncycastle.crypto.paddings.X923Padding;

        $r1 := @parameter0: java.security.SecureRandom;

        $r0.<org.bouncycastle.crypto.paddings.X923Padding: java.security.SecureRandom random> = $r1;

        return;
    }

    public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        org.bouncycastle.crypto.paddings.X923Padding $r0;
        byte[] $r1;
        short $s0;
        int $i1;
        byte $b2;
        org.bouncycastle.crypto.InvalidCipherTextException $r2;

        $r0 := @this: org.bouncycastle.crypto.paddings.X923Padding;

        $r1 := @parameter0: byte[];

        $i1 = lengthof $r1;

        $i1 = $i1 - 1;

        $b2 = $r1[$i1];

        $s0 = $b2 & 255;

        $i1 = lengthof $r1;

        if $s0 <= $i1 goto label1;

        $r2 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r2.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("pad block corrupted");

        throw $r2;

     label1:
        return $s0;
    }
}
