final class org.apache.harmony.luni.platform.OSNetworkSystem extends java.lang.Object implements org.apache.harmony.luni.platform.INetworkSystem
{
    private static final int ERRORCODE_SOCKET_TIMEOUT;
    private static final int INETADDR_REACHABLE;
    private static boolean isNetworkInited;
    private static org.apache.harmony.luni.platform.OSNetworkSystem ref;

    static void <clinit>()
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;

        <org.apache.harmony.luni.platform.OSNetworkSystem: int ERRORCODE_SOCKET_TIMEOUT> = -209;

        $r0 = new org.apache.harmony.luni.platform.OSNetworkSystem;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSNetworkSystem: void <init>()>();

        <org.apache.harmony.luni.platform.OSNetworkSystem: org.apache.harmony.luni.platform.OSNetworkSystem ref> = $r0;

        <org.apache.harmony.luni.platform.OSNetworkSystem: boolean isNetworkInited> = 0;

        return;
    }

    private void <init>()
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static native void acceptSocketImpl(java.io.FileDescriptor, java.net.SocketImpl, java.io.FileDescriptor, int) throws java.io.IOException;

    static native int availableStreamImpl(java.io.FileDescriptor) throws java.net.SocketException;

    static native void connectDatagramImpl2(java.io.FileDescriptor, int, int, java.net.InetAddress) throws java.net.SocketException;

    static native int connectSocketImpl(java.io.FileDescriptor, int, java.net.InetAddress, int);

    static native void connectStreamWithTimeoutSocketImpl(java.io.FileDescriptor, int, int, int, java.net.InetAddress) throws java.io.IOException;

    static native int connectWithTimeoutSocketImpl(java.io.FileDescriptor, int, int, java.net.InetAddress, int, int, byte[]);

    static native void createDatagramSocketImpl(java.io.FileDescriptor, boolean) throws java.net.SocketException;

    static native void createMulticastSocketImpl(java.io.FileDescriptor, boolean) throws java.net.SocketException;

    static native void createServerStreamSocketImpl(java.io.FileDescriptor, boolean) throws java.net.SocketException;

    static native void createSocketImpl(java.io.FileDescriptor, boolean);

    static native void disconnectDatagramImpl(java.io.FileDescriptor) throws java.net.SocketException;

    static native java.net.InetAddress getHostByAddrImpl(byte[]) throws java.net.UnknownHostException;

    static native java.net.InetAddress getHostByNameImpl(java.lang.String, boolean) throws java.net.UnknownHostException;

    public static org.apache.harmony.luni.platform.OSNetworkSystem getOSNetworkSystem()
    {
        org.apache.harmony.luni.platform.OSNetworkSystem r0;

        r0 = <org.apache.harmony.luni.platform.OSNetworkSystem: org.apache.harmony.luni.platform.OSNetworkSystem ref>;

        return r0;
    }

    static native int getSocketFlagsImpl();

    static native java.net.InetAddress getSocketLocalAddressImpl(java.io.FileDescriptor, boolean);

    static native int getSocketLocalPortImpl(java.io.FileDescriptor, boolean);

    static native java.lang.Object getSocketOptionImpl(java.io.FileDescriptor, int) throws java.net.SocketException;

    static native void listenStreamSocketImpl(java.io.FileDescriptor, int) throws java.net.SocketException;

    static native int peekDatagramImpl(java.io.FileDescriptor, java.net.InetAddress, int) throws java.io.IOException;

    static native int readSocketDirectImpl(java.io.FileDescriptor, int, int, int, int) throws java.io.IOException;

    static native int readSocketImpl(java.io.FileDescriptor, byte[], int, int, int) throws java.io.IOException;

    static native int receiveDatagramDirectImpl(java.io.FileDescriptor, java.net.DatagramPacket, int, int, int, int, boolean) throws java.io.IOException;

    static native int receiveDatagramImpl(java.io.FileDescriptor, java.net.DatagramPacket, byte[], int, int, int, boolean) throws java.io.IOException;

    static native int receiveStreamImpl(java.io.FileDescriptor, byte[], int, int, int) throws java.io.IOException;

    static native int recvConnectedDatagramDirectImpl(java.io.FileDescriptor, java.net.DatagramPacket, int, int, int, int, boolean) throws java.io.IOException;

    static native int recvConnectedDatagramImpl(java.io.FileDescriptor, java.net.DatagramPacket, byte[], int, int, int, boolean) throws java.io.IOException;

    static native int selectImpl(java.io.FileDescriptor[], java.io.FileDescriptor[], int, int, int[], long);

    static native int sendConnectedDatagramDirectImpl(java.io.FileDescriptor, int, int, int, boolean) throws java.io.IOException;

    static native int sendConnectedDatagramImpl(java.io.FileDescriptor, byte[], int, int, boolean) throws java.io.IOException;

    static native int sendDatagramDirectImpl(java.io.FileDescriptor, int, int, int, int, boolean, int, java.net.InetAddress) throws java.io.IOException;

    static native int sendDatagramImpl(java.io.FileDescriptor, byte[], int, int, int, boolean, int, java.net.InetAddress) throws java.io.IOException;

    static native int sendDatagramImpl2(java.io.FileDescriptor, byte[], int, int, int, java.net.InetAddress) throws java.io.IOException;

    static native int sendStreamImpl(java.io.FileDescriptor, byte[], int, int) throws java.io.IOException;

    static native void sendUrgentDataImpl(java.io.FileDescriptor, byte);

    static native void setNonBlockingImpl(java.io.FileDescriptor, boolean);

    static native void setSocketOptionImpl(java.io.FileDescriptor, int, java.lang.Object) throws java.net.SocketException;

    private native void shutdownInputImpl(java.io.FileDescriptor) throws java.io.IOException;

    private native void shutdownOutputImpl(java.io.FileDescriptor) throws java.io.IOException;

    static native void socketBindImpl(java.io.FileDescriptor, int, java.net.InetAddress) throws java.net.SocketException;

    static native boolean socketBindImpl2(java.io.FileDescriptor, int, boolean, java.net.InetAddress) throws java.net.SocketException;

    static native void socketCloseImpl(java.io.FileDescriptor);

    static native boolean supportsUrgentDataImpl(java.io.FileDescriptor);

    static native int writeSocketDirectImpl(java.io.FileDescriptor, int, int, int) throws java.io.IOException;

    static native int writeSocketImpl(java.io.FileDescriptor, byte[], int, int) throws java.io.IOException;

    public void accept(java.io.FileDescriptor, java.net.SocketImpl, java.io.FileDescriptor, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1, $r3;
        java.net.SocketImpl $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.net.SocketImpl;

        $r3 := @parameter2: java.io.FileDescriptor;

        $i0 := @parameter3: int;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void acceptSocketImpl(java.io.FileDescriptor,java.net.SocketImpl,java.io.FileDescriptor,int)>($r1, $r2, $r3, $i0);

        return;
    }

    public int availableStream(java.io.FileDescriptor) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int availableStreamImpl(java.io.FileDescriptor)>($r1);

        return $i0;
    }

    public void bind(java.io.FileDescriptor, int, java.net.InetAddress) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void socketBindImpl(java.io.FileDescriptor,int,java.net.InetAddress)>($r1, $i0, $r2);

        return;
    }

    public boolean bind2(java.io.FileDescriptor, int, boolean, java.net.InetAddress) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0;
        boolean $z0;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: java.net.InetAddress;

        $z0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: boolean socketBindImpl2(java.io.FileDescriptor,int,boolean,java.net.InetAddress)>($r1, $i0, $z0, $r2);

        return $z0;
    }

    public int connect(java.io.FileDescriptor, int, java.net.InetAddress, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int connectSocketImpl(java.io.FileDescriptor,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        return $i0;
    }

    public void connectDatagram(java.io.FileDescriptor, int, int, java.net.InetAddress) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.net.InetAddress;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void connectDatagramImpl2(java.io.FileDescriptor,int,int,java.net.InetAddress)>($r1, $i0, $i1, $r2);

        return;
    }

    public void connectStreamWithTimeoutSocket(java.io.FileDescriptor, int, int, int, java.net.InetAddress) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1, $i2;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 := @parameter4: java.net.InetAddress;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void connectStreamWithTimeoutSocketImpl(java.io.FileDescriptor,int,int,int,java.net.InetAddress)>($r1, $i0, $i1, $i2, $r2);

        return;
    }

    public int connectWithTimeout(java.io.FileDescriptor, int, int, java.net.InetAddress, int, int, byte[]) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1, $i2, $i3;
        java.net.InetAddress $r2;
        byte[] $r3;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.net.InetAddress;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r3 := @parameter6: byte[];

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int connectWithTimeoutSocketImpl(java.io.FileDescriptor,int,int,java.net.InetAddress,int,int,byte[])>($r1, $i0, $i1, $r2, $i2, $i3, $r3);

        return $i0;
    }

    public void createDatagramSocket(java.io.FileDescriptor, boolean) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void createDatagramSocketImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return;
    }

    public void createMulticastSocket(java.io.FileDescriptor, boolean) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void createMulticastSocketImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return;
    }

    public void createServerStreamSocket(java.io.FileDescriptor, boolean) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void createServerStreamSocketImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return;
    }

    public void createSocket(java.io.FileDescriptor, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void createSocketImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return;
    }

    public void disconnectDatagram(java.io.FileDescriptor) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void disconnectDatagramImpl(java.io.FileDescriptor)>($r1);

        return;
    }

    public java.net.InetAddress getHostByAddr(byte[]) throws java.net.UnknownHostException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        byte[] $r1;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: java.net.InetAddress getHostByAddrImpl(byte[])>($r1);

        return $r2;
    }

    public java.net.InetAddress getHostByName(java.lang.String, boolean) throws java.net.UnknownHostException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.lang.String $r1;
        boolean $z0;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: java.net.InetAddress getHostByNameImpl(java.lang.String,boolean)>($r1, $z0);

        return $r2;
    }

    public int getSocketFlags()
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int getSocketFlagsImpl()>();

        return $i0;
    }

    public java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor, boolean)
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: java.net.InetAddress getSocketLocalAddressImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return $r2;
    }

    public int getSocketLocalPort(java.io.FileDescriptor, boolean)
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int getSocketLocalPortImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return $i0;
    }

    public java.lang.Object getSocketOption(java.io.FileDescriptor, int) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: java.lang.Object getSocketOptionImpl(java.io.FileDescriptor,int)>($r1, $i0);

        return $r2;
    }

    public java.nio.channels.Channel inheritedChannel()
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.nio.channels.Channel $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.platform.OSNetworkSystem: java.nio.channels.Channel inheritedChannelImpl()>();

        return $r1;
    }

    native java.nio.channels.Channel inheritedChannelImpl();

    public void listenStreamSocket(java.io.FileDescriptor, int) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void listenStreamSocketImpl(java.io.FileDescriptor,int)>($r1, $i0);

        return;
    }

    public void oneTimeInitialization(boolean)
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        boolean $z0, $z1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $z0 := @parameter0: boolean;

        $z1 = <org.apache.harmony.luni.platform.OSNetworkSystem: boolean isNetworkInited>;

        if $z1 != 0 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSNetworkSystem: void oneTimeInitializationImpl(boolean)>($z0);

        <org.apache.harmony.luni.platform.OSNetworkSystem: boolean isNetworkInited> = 1;

        return;

     label1:
        return;
    }

    native void oneTimeInitializationImpl(boolean);

    public int peekDatagram(java.io.FileDescriptor, java.net.InetAddress, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        java.net.InetAddress $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.net.InetAddress;

        $i0 := @parameter2: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int peekDatagramImpl(java.io.FileDescriptor,java.net.InetAddress,int)>($r1, $r2, $i0);

        return $i0;
    }

    public int read(java.io.FileDescriptor, byte[], int, int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int readSocketImpl(java.io.FileDescriptor,byte[],int,int,int)>($r1, $r2, $i0, $i1, $i2);

        return $i0;
    }

    public int readDirect(java.io.FileDescriptor, int, int, int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int readSocketDirectImpl(java.io.FileDescriptor,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return $i0;
    }

    public int receiveDatagram(java.io.FileDescriptor, java.net.DatagramPacket, byte[], int, int, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        java.net.DatagramPacket $r2;
        byte[] $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.net.DatagramPacket;

        $r3 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int receiveDatagramImpl(java.io.FileDescriptor,java.net.DatagramPacket,byte[],int,int,int,boolean)>($r1, $r2, $r3, $i0, $i1, $i2, $z0);

        return $i0;
    }

    public int receiveDatagramDirect(java.io.FileDescriptor, java.net.DatagramPacket, int, int, int, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        java.net.DatagramPacket $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.net.DatagramPacket;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int receiveDatagramDirectImpl(java.io.FileDescriptor,java.net.DatagramPacket,int,int,int,int,boolean)>($r1, $r2, $i0, $i1, $i2, $i3, $z0);

        return $i0;
    }

    public int receiveStream(java.io.FileDescriptor, byte[], int, int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int receiveStreamImpl(java.io.FileDescriptor,byte[],int,int,int)>($r1, $r2, $i0, $i1, $i2);

        return $i0;
    }

    public int recvConnectedDatagram(java.io.FileDescriptor, java.net.DatagramPacket, byte[], int, int, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        java.net.DatagramPacket $r2;
        byte[] $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.net.DatagramPacket;

        $r3 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int recvConnectedDatagramImpl(java.io.FileDescriptor,java.net.DatagramPacket,byte[],int,int,int,boolean)>($r1, $r2, $r3, $i0, $i1, $i2, $z0);

        return $i0;
    }

    public int recvConnectedDatagramDirect(java.io.FileDescriptor, java.net.DatagramPacket, int, int, int, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        java.net.DatagramPacket $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.net.DatagramPacket;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int recvConnectedDatagramDirectImpl(java.io.FileDescriptor,java.net.DatagramPacket,int,int,int,int,boolean)>($r1, $r2, $i0, $i1, $i2, $i3, $z0);

        return $i0;
    }

    public int[] select(java.io.FileDescriptor[], java.io.FileDescriptor[], long) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor[] $r1, $r2;
        long $l0;
        int $i1, $i2, $i3;
        int[] $r3;
        java.net.SocketException $r4;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor[];

        $r2 := @parameter1: java.io.FileDescriptor[];

        $l0 := @parameter2: long;

        $i1 = lengthof $r1;

        $i2 = lengthof $r2;

        $i3 = $i1 + $i2;

        if $i3 != 0 goto label1;

        $r3 = newarray (int)[0];

        return $r3;

     label1:
        $i3 = $i1 + $i2;

        $r3 = newarray (int)[$i3];

        $i1 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int selectImpl(java.io.FileDescriptor[],java.io.FileDescriptor[],int,int,int[],long)>($r1, $r2, $i1, $i2, $r3, $l0);

        if $i1 < 0 goto label2;

        return $r3;

     label2:
        if -209 != $i1 goto label3;

        $r3 = newarray (int)[0];

        return $r3;

     label3:
        $r4 = new java.net.SocketException;

        specialinvoke $r4.<java.net.SocketException: void <init>()>();

        throw $r4;
    }

    public int sendConnectedDatagram(java.io.FileDescriptor, byte[], int, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int sendConnectedDatagramImpl(java.io.FileDescriptor,byte[],int,int,boolean)>($r1, $r2, $i0, $i1, $z0);

        return $i0;
    }

    public int sendConnectedDatagramDirect(java.io.FileDescriptor, int, int, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int sendConnectedDatagramDirectImpl(java.io.FileDescriptor,int,int,int,boolean)>($r1, $i0, $i1, $i2, $z0);

        return $i0;
    }

    public int sendDatagram(java.io.FileDescriptor, byte[], int, int, int, boolean, int, java.net.InetAddress) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.net.InetAddress $r3;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $i3 := @parameter6: int;

        $r3 := @parameter7: java.net.InetAddress;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int sendDatagramImpl(java.io.FileDescriptor,byte[],int,int,int,boolean,int,java.net.InetAddress)>($r1, $r2, $i0, $i1, $i2, $z0, $i3, $r3);

        return $i0;
    }

    public int sendDatagram2(java.io.FileDescriptor, byte[], int, int, int, java.net.InetAddress) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1, $i2;
        java.net.InetAddress $r3;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r3 := @parameter5: java.net.InetAddress;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int sendDatagramImpl2(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress)>($r1, $r2, $i0, $i1, $i2, $r3);

        return $i0;
    }

    public int sendDatagramDirect(java.io.FileDescriptor, int, int, int, int, boolean, int, java.net.InetAddress) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.net.InetAddress $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $i4 := @parameter6: int;

        $r2 := @parameter7: java.net.InetAddress;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int sendDatagramDirectImpl(java.io.FileDescriptor,int,int,int,int,boolean,int,java.net.InetAddress)>($r1, $i0, $i1, $i2, $i3, $z0, $i4, $r2);

        return $i0;
    }

    public int sendStream(java.io.FileDescriptor, byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int sendStreamImpl(java.io.FileDescriptor,byte[],int,int)>($r1, $r2, $i0, $i1);

        return $i0;
    }

    public void sendUrgentData(java.io.FileDescriptor, byte)
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte $b0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $b0 := @parameter1: byte;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void sendUrgentDataImpl(java.io.FileDescriptor,byte)>($r1, $b0);

        return;
    }

    public void setInetAddress(java.net.InetAddress, byte[])
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.net.InetAddress $r1;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.net.InetAddress;

        $r2 := @parameter1: byte[];

        virtualinvoke $r0.<org.apache.harmony.luni.platform.OSNetworkSystem: void setInetAddressImpl(java.net.InetAddress,byte[])>($r1, $r2);

        return;
    }

    native void setInetAddressImpl(java.net.InetAddress, byte[]);

    public void setNonBlocking(java.io.FileDescriptor, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 := @parameter1: boolean;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void setNonBlockingImpl(java.io.FileDescriptor,boolean)>($r1, $z0);

        return;
    }

    public void setSocketOption(java.io.FileDescriptor, int, java.lang.Object) throws java.net.SocketException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void setSocketOptionImpl(java.io.FileDescriptor,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void shutdownInput(java.io.FileDescriptor) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSNetworkSystem: void shutdownInputImpl(java.io.FileDescriptor)>($r1);

        return;
    }

    public void shutdownOutput(java.io.FileDescriptor) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSNetworkSystem: void shutdownOutputImpl(java.io.FileDescriptor)>($r1);

        return;
    }

    public void socketClose(java.io.FileDescriptor) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: void socketCloseImpl(java.io.FileDescriptor)>($r1);

        return;
    }

    public boolean supportsUrgentData(java.io.FileDescriptor)
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $z0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: boolean supportsUrgentDataImpl(java.io.FileDescriptor)>($r1);

        return $z0;
    }

    public int write(java.io.FileDescriptor, byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        byte[] $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int writeSocketImpl(java.io.FileDescriptor,byte[],int,int)>($r1, $r2, $i0, $i1);

        return $i0;
    }

    public int writeDirect(java.io.FileDescriptor, int, int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSNetworkSystem $r0;
        java.io.FileDescriptor $r1;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.luni.platform.OSNetworkSystem;

        $r1 := @parameter0: java.io.FileDescriptor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i0 = staticinvoke <org.apache.harmony.luni.platform.OSNetworkSystem: int writeSocketDirectImpl(java.io.FileDescriptor,int,int,int)>($r1, $i0, $i1, $i2);

        return $i0;
    }
}
