public final enum class dalvik.annotation.TestLevel extends java.lang.Enum
{
    private static final dalvik.annotation.TestLevel[] $VALUES;
    public static final enum dalvik.annotation.TestLevel ADDITIONAL;
    public static final enum dalvik.annotation.TestLevel COMPLETE;
    public static final enum dalvik.annotation.TestLevel NOT_FEASIBLE;
    public static final enum dalvik.annotation.TestLevel NOT_NECESSARY;
    public static final enum dalvik.annotation.TestLevel PARTIAL;
    public static final enum dalvik.annotation.TestLevel PARTIAL_COMPLETE;
    public static final enum dalvik.annotation.TestLevel PARTIAL_OK;
    public static final enum dalvik.annotation.TestLevel SUFFICIENT;
    public static final enum dalvik.annotation.TestLevel TODO;

    static void <clinit>()
    {
        dalvik.annotation.TestLevel $r0;
        dalvik.annotation.TestLevel[] $r1;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("COMPLETE", 0);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel COMPLETE> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("PARTIAL_COMPLETE", 1);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel PARTIAL_COMPLETE> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("PARTIAL_OK", 2);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel PARTIAL_OK> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("PARTIAL", 3);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel PARTIAL> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("SUFFICIENT", 4);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel SUFFICIENT> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("ADDITIONAL", 5);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel ADDITIONAL> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("NOT_NECESSARY", 6);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel NOT_NECESSARY> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("NOT_FEASIBLE", 7);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel NOT_FEASIBLE> = $r0;

        $r0 = new dalvik.annotation.TestLevel;

        specialinvoke $r0.<dalvik.annotation.TestLevel: void <init>(java.lang.String,int)>("TODO", 8);

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel TODO> = $r0;

        $r1 = newarray (dalvik.annotation.TestLevel)[9];

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel COMPLETE>;

        $r1[0] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel PARTIAL_COMPLETE>;

        $r1[1] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel PARTIAL_OK>;

        $r1[2] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel PARTIAL>;

        $r1[3] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel SUFFICIENT>;

        $r1[4] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel ADDITIONAL>;

        $r1[5] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel NOT_NECESSARY>;

        $r1[6] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel NOT_FEASIBLE>;

        $r1[7] = $r0;

        $r0 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel TODO>;

        $r1[8] = $r0;

        <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        dalvik.annotation.TestLevel $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: dalvik.annotation.TestLevel;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static dalvik.annotation.TestLevel valueOf(java.lang.String)
    {
        java.lang.Enum $r0;
        java.lang.String $r1;
        dalvik.annotation.TestLevel $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "dalvik/annotation/TestLevel", $r1);

        $r2 = (dalvik.annotation.TestLevel) $r0;

        return $r2;
    }

    public static final dalvik.annotation.TestLevel[] values()
    {
        java.lang.Object $r0;
        dalvik.annotation.TestLevel[] $r1;

        $r1 = <dalvik.annotation.TestLevel: dalvik.annotation.TestLevel[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (dalvik.annotation.TestLevel[]) $r0;

        return $r1;
    }
}
