public class org.apache.http.protocol.BasicHttpContext extends java.lang.Object implements org.apache.http.protocol.HttpContext
{
    private java.util.Map map;
    private final org.apache.http.protocol.HttpContext parentContext;

    public void <init>()
    {
        org.apache.http.protocol.BasicHttpContext $r0;

        $r0 := @this: org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r0.<org.apache.http.protocol.BasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>(null);

        return;
    }

    public void <init>(org.apache.http.protocol.HttpContext)
    {
        org.apache.http.protocol.BasicHttpContext $r0;
        org.apache.http.protocol.HttpContext $r1;

        $r0 := @this: org.apache.http.protocol.BasicHttpContext;

        $r1 := @parameter0: org.apache.http.protocol.HttpContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map> = null;

        $r0.<org.apache.http.protocol.BasicHttpContext: org.apache.http.protocol.HttpContext parentContext> = $r1;

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.apache.http.protocol.BasicHttpContext $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        org.apache.http.protocol.HttpContext $r5;

        $r0 := @this: org.apache.http.protocol.BasicHttpContext;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r2;

     label1:
        $r3 = null;

        $r4 = $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        if $r4 == null goto label2;

        $r4 = $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        if $r3 != null goto label3;

        $r5 = $r0.<org.apache.http.protocol.BasicHttpContext: org.apache.http.protocol.HttpContext parentContext>;

        if $r5 == null goto label3;

        $r5 = $r0.<org.apache.http.protocol.BasicHttpContext: org.apache.http.protocol.HttpContext parentContext>;

        $r3 = interfaceinvoke $r5.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>($r1);

        return $r3;

     label3:
        return $r3;
    }

    public java.lang.Object removeAttribute(java.lang.String)
    {
        org.apache.http.protocol.BasicHttpContext $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Map $r4;

        $r0 := @this: org.apache.http.protocol.BasicHttpContext;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r3;

     label1:
        $r4 = $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        if $r4 == null goto label2;

        $r4 = $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        $r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return $r2;

     label2:
        return null;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.apache.http.protocol.BasicHttpContext $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Map $r4;
        java.util.HashMap $r5;

        $r0 := @this: org.apache.http.protocol.BasicHttpContext;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r3;

     label1:
        $r4 = $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        if $r4 != null goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map> = $r5;

     label2:
        $r4 = $r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
}
