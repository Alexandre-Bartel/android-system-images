public class org.apache.harmony.awt.gl.color.ICC_Transform extends java.lang.Object
{
    private java.awt.color.ICC_Profile dst;
    private int numInputChannels;
    private int numOutputChannels;
    private java.awt.color.ICC_Profile src;
    private long transformHandle;

    public void <init>(java.awt.color.ICC_Profile[])
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        java.awt.color.ICC_Profile[] $r1;
        int $i0, $i1, $i2, $i3;
        long[] $r2;
        int[] $r3;
        java.awt.color.ICC_Profile $r4;
        long $l4;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r1 := @parameter0: java.awt.color.ICC_Profile[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r1;

        $r3 = newarray (int)[$i0];

        $i1 = 0;

        $r4 = $r1[0];

        $i2 = virtualinvoke $r4.<java.awt.color.ICC_Profile: int getProfileClass()>();

        if $i2 != 2 goto label1;

        $i1 = 1;

     label1:
        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label4;

        if $i2 == 0 goto label3;

        $i3 = $i0 - 1;

        if $i2 == $i3 goto label3;

        $r4 = $r1[$i2];

        $i3 = virtualinvoke $r4.<java.awt.color.ICC_Profile: int getProfileClass()>();

        if $i3 != 5 goto label3;

        $i1 = 0;

     label3:
        $r3[$i2] = $i1;

        $r4 = $r1[$i2];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.color.ICC_ProfileHelper: int getRenderingIntent(java.awt.color.ICC_Profile)>($r4);

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $r2 = newarray (long)[$i0];

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label6;

        $r4 = $r1[$i1];

        $l4 = staticinvoke <org.apache.harmony.awt.gl.color.NativeCMM: long getHandle(java.awt.color.ICC_Profile)>($r4);

        $r2[$i1] = $l4;

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $l4 = staticinvoke <org.apache.harmony.awt.gl.color.NativeCMM: long cmmCreateMultiprofileTransform(long[],int[])>($r2, $r3);

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: long transformHandle> = $l4;

        $r4 = $r1[0];

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile src> = $r4;

        $i0 = $i0 - 1;

        $r4 = $r1[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile dst> = $r4;

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile src>;

        $i0 = virtualinvoke $r4.<java.awt.color.ICC_Profile: int getNumComponents()>();

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: int numInputChannels> = $i0;

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile dst>;

        $i0 = virtualinvoke $r4.<java.awt.color.ICC_Profile: int getNumComponents()>();

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: int numOutputChannels> = $i0;

        return;
    }

    public void <init>(java.awt.color.ICC_Profile[], int[])
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        java.awt.color.ICC_Profile[] $r1;
        int[] $r2;
        int $i0, $i1;
        long[] $r3;
        java.awt.color.ICC_Profile $r4;
        long $l2;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r1 := @parameter0: java.awt.color.ICC_Profile[];

        $r2 := @parameter1: int[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r1;

        $r3 = newarray (long)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r1[$i1];

        $l2 = staticinvoke <org.apache.harmony.awt.gl.color.NativeCMM: long getHandle(java.awt.color.ICC_Profile)>($r4);

        $r3[$i1] = $l2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $l2 = staticinvoke <org.apache.harmony.awt.gl.color.NativeCMM: long cmmCreateMultiprofileTransform(long[],int[])>($r3, $r2);

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: long transformHandle> = $l2;

        $r4 = $r1[0];

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile src> = $r4;

        $i0 = $i0 - 1;

        $r4 = $r1[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile dst> = $r4;

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile src>;

        $i0 = virtualinvoke $r4.<java.awt.color.ICC_Profile: int getNumComponents()>();

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: int numInputChannels> = $i0;

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile dst>;

        $i0 = virtualinvoke $r4.<java.awt.color.ICC_Profile: int getNumComponents()>();

        $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: int numOutputChannels> = $i0;

        return;
    }

    protected void finalize()
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        long $l0;
        byte $b1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        $l0 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: long transformHandle>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l0 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: long transformHandle>;

        staticinvoke <org.apache.harmony.awt.gl.color.NativeCMM: void cmmDeleteTransform(long)>($l0);

        return;

     label1:
        return;
    }

    public java.awt.color.ICC_Profile getDst()
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        java.awt.color.ICC_Profile r1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        r1 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile dst>;

        return r1;
    }

    public int getNumInputChannels()
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        i0 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: int numInputChannels>;

        return i0;
    }

    public int getNumOutputChannels()
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        i0 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: int numOutputChannels>;

        return i0;
    }

    public java.awt.color.ICC_Profile getSrc()
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        java.awt.color.ICC_Profile r1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        r1 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile src>;

        return r1;
    }

    public void translateColors(org.apache.harmony.awt.gl.color.NativeImageFormat, org.apache.harmony.awt.gl.color.NativeImageFormat)
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        org.apache.harmony.awt.gl.color.NativeImageFormat $r1, $r2;
        long $l0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r1 := @parameter0: org.apache.harmony.awt.gl.color.NativeImageFormat;

        $r2 := @parameter1: org.apache.harmony.awt.gl.color.NativeImageFormat;

        $l0 = $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: long transformHandle>;

        staticinvoke <org.apache.harmony.awt.gl.color.NativeCMM: void cmmTranslateColors(long,org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>($l0, $r1, $r2);

        return;
    }
}
