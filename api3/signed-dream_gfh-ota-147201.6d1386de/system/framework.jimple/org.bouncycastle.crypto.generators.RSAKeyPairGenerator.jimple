public class org.bouncycastle.crypto.generators.RSAKeyPairGenerator extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator
{
    private static java.math.BigInteger ONE;
    private org.bouncycastle.crypto.params.RSAKeyGenerationParameters param;

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE> = $r0;

        return;
    }

    public void <init>()
    {
        org.bouncycastle.crypto.generators.RSAKeyPairGenerator $r0;

        $r0 := @this: org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        org.bouncycastle.crypto.generators.RSAKeyPairGenerator $r0;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.params.RSAKeyGenerationParameters $r1;
        java.math.BigInteger $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        java.security.SecureRandom $r4;
        boolean $z0;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r11;
        org.bouncycastle.crypto.params.RSAKeyParameters $r12;
        org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters $r13;

        $r0 := @this: org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.KeyGenerationParameters: int getStrength()>();

        $i0 = $i0 + 1;

        $i1 = $i0 / 2;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.KeyGenerationParameters: int getStrength()>();

        $i0 = $i0 - $i1;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.math.BigInteger getPublicExponent()>();

     label1:
        $r3 = new java.math.BigInteger;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r4 = virtualinvoke $r1.<org.bouncycastle.crypto.KeyGenerationParameters: java.security.SecureRandom getRandom()>();

        specialinvoke $r3.<java.math.BigInteger: void <init>(int,int,java.util.Random)>($i1, 1, $r4);

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $r6 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean isProbablePrime(int)>($i2);

        if $z0 == 0 goto label1;

        $r5 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r5);

        $r5 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r5);

        $r6 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

     label2:
        $r5 = new java.math.BigInteger;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r4 = virtualinvoke $r1.<org.bouncycastle.crypto.KeyGenerationParameters: java.security.SecureRandom getRandom()>();

        specialinvoke $r5.<java.math.BigInteger: void <init>(int,int,java.util.Random)>($i0, 1, $r4);

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $r7 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i1 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>();

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean isProbablePrime(int)>($i1);

        if $z0 == 0 goto label2;

        $r6 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r6);

        $r6 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r6);

        $r7 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        $i1 = virtualinvoke $r6.<java.math.BigInteger: int bitLength()>();

        $r1 = $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i2 = virtualinvoke $r1.<org.bouncycastle.crypto.KeyGenerationParameters: int getStrength()>();

        if $i1 != $i2 goto label4;

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r5);

        if $i0 >= 0 goto label3;

        $r7 = $r3;

        $r3 = $r5;

        $r5 = $r7;

     label3:
        $r7 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r8 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r7);

        $r7 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r9 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r7);

        $r7 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r9);

        $r7 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r7);

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>($r8);

        $r9 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>($r9);

        $r10 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r3);

        $r11 = new org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r12 = new org.bouncycastle.crypto.params.RSAKeyParameters;

        specialinvoke $r12.<org.bouncycastle.crypto.params.RSAKeyParameters: void <init>(boolean,java.math.BigInteger,java.math.BigInteger)>(0, $r6, $r2);

        $r13 = new org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        specialinvoke $r13.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r2, $r7, $r3, $r5, $r8, $r9, $r10);

        specialinvoke $r11.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.bouncycastle.crypto.CipherParameters,org.bouncycastle.crypto.CipherParameters)>($r12, $r13);

        return $r11;

     label4:
        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>($r5);

        goto label2;
    }

    public void init(org.bouncycastle.crypto.KeyGenerationParameters)
    {
        org.bouncycastle.crypto.generators.RSAKeyPairGenerator $r0;
        org.bouncycastle.crypto.KeyGenerationParameters $r1;
        org.bouncycastle.crypto.params.RSAKeyGenerationParameters $r2;

        $r0 := @this: org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        $r1 := @parameter0: org.bouncycastle.crypto.KeyGenerationParameters;

        $r2 = (org.bouncycastle.crypto.params.RSAKeyGenerationParameters) $r1;

        $r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param> = $r2;

        return;
    }
}
