class org.apache.harmony.luni.platform.OSFileSystem extends org.apache.harmony.luni.platform.OSComponent implements org.apache.harmony.luni.platform.IFileSystem
{

    public void <init>()
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSComponent: void <init>()>();

        return;
    }

    private native int closeImpl(int);

    private native int fflushImpl(int, boolean);

    private native int lockImpl(int, long, long, int, boolean);

    private native int openImpl(byte[], int);

    private native long readDirectImpl(int, int, int, int);

    private native long readImpl(int, byte[], int, int);

    private native long readvImpl(int, int[], int[], int[], int);

    private native long seekImpl(int, long, int);

    private native long transferImpl(int, java.io.FileDescriptor, long, long);

    private native int truncateImpl(int, long);

    private native long ttyReadImpl(byte[], int, int);

    private native int unlockImpl(int, long, long);

    private final void validateLockArgs(int, long, long)
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0;
        long $l1, $l2;
        java.lang.IllegalArgumentException $r1;
        byte $b3;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        if $i0 == 1 goto label1;

        if $i0 == 2 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal lock type requested.");

        throw $r1;

     label1:
        $b3 = $l1 cmp 0L;

        if $b3 >= 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lock start position must be non-negative");

        throw $r1;

     label2:
        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lock length must be non-negative");

        throw $r1;

     label3:
        return;
    }

    private native long writeDirectImpl(int, int, int, int);

    private native long writeImpl(int, byte[], int, int);

    private native long writevImpl(int, int[], int[], int[], int);

    public void close(int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: int closeImpl(int)>($i0);

        if $i0 != -1 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public void fflush(int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0;
        boolean $z0;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: int fflushImpl(int,boolean)>($i0, $z0);

        if $i0 != -1 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public native int getAllocGranularity() throws java.io.IOException;

    public native int ioctlAvailable(int) throws java.io.IOException;

    public boolean lock(int, long, long, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i3;
        long $l1, $l2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $i3 := @parameter3: int;

        $z0 := @parameter4: boolean;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: void validateLockArgs(int,long,long)>($i3, $l1, $l2);

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: int lockImpl(int,long,long,int,boolean)>($i0, $l1, $l2, $i3, $z0);

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int open(byte[], int) throws java.io.FileNotFoundException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        byte[] $r1;
        int $i0;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;
        java.io.FileNotFoundException $r4;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: int openImpl(byte[],int)>($r1, $i0);

        if $i0 >= 0 goto label2;

        $r4 = new java.io.FileNotFoundException;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r1);

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label2:
        return $i0;
    }

    public long read(int, byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        long $l3;
        java.lang.NullPointerException $r2;
        byte $b4;
        java.io.IOException $r3;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $l3 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long readImpl(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        $b4 = $l3 cmp -1L;

        if $b4 >= 0 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>()>();

        throw $r3;

     label2:
        return $l3;
    }

    public long readDirect(int, int, int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i1, $i2, $i3;
        long $l4;
        byte $b5;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $l4 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long readDirectImpl(int,int,int,int)>($i0, $i1, $i2, $i3);

        $b5 = $l4 cmp -1L;

        if $b5 >= 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return $l4;
    }

    public long readv(int, int[], int[], int[], int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i1;
        int[] $r1, $r2, $r3;
        long $l2;
        byte $b3;
        java.io.IOException $r4;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: int[];

        $r3 := @parameter3: int[];

        $i1 := @parameter4: int;

        $l2 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long readvImpl(int,int[],int[],int[],int)>($i0, $r1, $r2, $r3, $i1);

        $b3 = $l2 cmp -1L;

        if $b3 >= 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label1:
        return $l2;
    }

    public long seek(int, long, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i2;
        long $l1;
        byte $b3;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $l1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long seekImpl(int,long,int)>($i0, $l1, $i2);

        $b3 = $l1 cmp -1L;

        if $b3 != 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return $l1;
    }

    public long transfer(int, java.io.FileDescriptor, long, long) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0;
        java.io.FileDescriptor $r1;
        long $l1, $l2;
        byte $b3;
        java.io.IOException $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.FileDescriptor;

        $l1 := @parameter2: long;

        $l2 := @parameter3: long;

        $l1 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long transferImpl(int,java.io.FileDescriptor,long,long)>($i0, $r1, $l1, $l2);

        $b3 = $l1 cmp 0L;

        if $b3 >= 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;

     label1:
        return $l1;
    }

    public void truncate(int, long) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0;
        long $l1;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: int truncateImpl(int,long)>($i0, $l1);

        if $i0 >= 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public long ttyRead(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        byte[] $r1;
        int $i0, $i1;
        long $l2;
        byte $b3;
        java.io.IOException $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long ttyReadImpl(byte[],int,int)>($r1, $i0, $i1);

        $b3 = $l2 cmp -1L;

        if $b3 >= 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;

     label1:
        return $l2;
    }

    public void unlock(int, long, long) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0;
        long $l1, $l2;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: void validateLockArgs(int,long,long)>(1, $l1, $l2);

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: int unlockImpl(int,long,long)>($i0, $l1, $l2);

        if $i0 != -1 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public long write(int, byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        long $l3;
        byte $b4;
        java.io.IOException $r2;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $l3 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long writeImpl(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;

     label1:
        return $l3;
    }

    public long writeDirect(int, int, int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i1, $i2, $i3;
        long $l4;
        byte $b5;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $l4 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long writeDirectImpl(int,int,int,int)>($i0, $i1, $i2, $i3);

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        return $l4;
    }

    public long writev(int, int[], int[], int[], int) throws java.io.IOException
    {
        org.apache.harmony.luni.platform.OSFileSystem $r0;
        int $i0, $i1;
        int[] $r1, $r2, $r3;
        long $l2;
        byte $b3;
        java.io.IOException $r4;

        $r0 := @this: org.apache.harmony.luni.platform.OSFileSystem;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: int[];

        $r3 := @parameter3: int[];

        $i1 := @parameter4: int;

        $l2 = specialinvoke $r0.<org.apache.harmony.luni.platform.OSFileSystem: long writevImpl(int,int[],int[],int[],int)>($i0, $r1, $r2, $r3, $i1);

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label1:
        return $l2;
    }
}
