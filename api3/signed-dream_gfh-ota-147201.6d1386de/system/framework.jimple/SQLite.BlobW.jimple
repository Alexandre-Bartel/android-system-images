class SQLite.BlobW extends java.io.OutputStream
{
    private SQLite.Blob blob;
    private int pos;

    void <init>(SQLite.Blob)
    {
        SQLite.BlobW $r0;
        SQLite.Blob $r1;

        $r0 := @this: SQLite.BlobW;

        $r1 := @parameter0: SQLite.Blob;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        $r0.<SQLite.BlobW: SQLite.Blob blob> = $r1;

        $r0.<SQLite.BlobW: int pos> = 0;

        return;
    }

    public void close() throws java.io.IOException
    {
        SQLite.BlobW $r0;
        SQLite.Blob $r1;

        $r0 := @this: SQLite.BlobW;

        $r1 = $r0.<SQLite.BlobW: SQLite.Blob blob>;

        virtualinvoke $r1.<SQLite.Blob: void close()>();

        $r0.<SQLite.BlobW: SQLite.Blob blob> = null;

        $r0.<SQLite.BlobW: int pos> = 0;

        return;
    }

    public void flush() throws java.io.IOException
    {
        SQLite.BlobW $r0;

        $r0 := @this: SQLite.BlobW;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        SQLite.BlobW $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;
        SQLite.Blob $r2;

        $r0 := @this: SQLite.BlobW;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[1];

        $b2 = (byte) $i0;

        $r1[0] = $b2;

        $i0 = $r0.<SQLite.BlobW: int pos>;

        $r2 = $r0.<SQLite.BlobW: SQLite.Blob blob>;

        $i1 = $r0.<SQLite.BlobW: int pos>;

        $i1 = virtualinvoke $r2.<SQLite.Blob: int write(byte[],int,int,int)>($r1, 0, $i1, 1);

        $i0 = $i0 + $i1;

        $r0.<SQLite.BlobW: int pos> = $i0;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        SQLite.BlobW $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        SQLite.Blob $r2;

        $r0 := @this: SQLite.BlobW;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label1;

        $i2 = lengthof $r1;

        if $i2 <= 0 goto label2;

        $i2 = $r0.<SQLite.BlobW: int pos>;

        $r2 = $r0.<SQLite.BlobW: SQLite.Blob blob>;

        $i0 = $r0.<SQLite.BlobW: int pos>;

        $i1 = lengthof $r1;

        $i0 = virtualinvoke $r2.<SQLite.Blob: int write(byte[],int,int,int)>($r1, 0, $i0, $i1);

        $i2 = $i2 + $i0;

        $r0.<SQLite.BlobW: int pos> = $i2;

        return;

     label1:
        return;

     label2:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        SQLite.BlobW $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        SQLite.Blob $r2;

        $r0 := @this: SQLite.BlobW;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        if $r1 == null goto label3;

        $i3 = $i0 + $i2;

        $i1 = lengthof $r1;

        if $i3 <= $i1 goto label1;

        $i2 = lengthof $r1;

        $i2 = $i2 - $i0;

     label1:
        if $i2 > 0 goto label2;

        return;

     label2:
        $i3 = $r0.<SQLite.BlobW: int pos>;

        $r2 = $r0.<SQLite.BlobW: SQLite.Blob blob>;

        $i1 = $r0.<SQLite.BlobW: int pos>;

        $i0 = virtualinvoke $r2.<SQLite.Blob: int write(byte[],int,int,int)>($r1, $i0, $i1, $i2);

        $i0 = $i3 + $i0;

        $r0.<SQLite.BlobW: int pos> = $i0;

        return;

     label3:
        return;
    }
}
