public abstract class org.bouncycastle.asn1.ASN1Collection extends org.bouncycastle.asn1.DERObject
{
    private org.bouncycastle.asn1.DEREncodable obj0;
    private org.bouncycastle.asn1.DEREncodable obj1;
    private org.bouncycastle.asn1.DEREncodable obj2;
    private org.bouncycastle.asn1.DEREncodable obj3;
    private org.bouncycastle.asn1.DEREncodable[] rest;
    private int size;

    public void <init>()
    {
        org.bouncycastle.asn1.ASN1Collection $r0;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        specialinvoke $r0.<org.bouncycastle.asn1.DERObject: void <init>()>();

        return;
    }

    static int access$100(org.bouncycastle.asn1.ASN1Collection)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        int i0;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Collection;

        i0 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        return i0;
    }

    static org.bouncycastle.asn1.DEREncodable access$200(org.bouncycastle.asn1.ASN1Collection)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable r1;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Collection;

        r1 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj0>;

        return r1;
    }

    static org.bouncycastle.asn1.DEREncodable access$300(org.bouncycastle.asn1.ASN1Collection)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable r1;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Collection;

        r1 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj1>;

        return r1;
    }

    static org.bouncycastle.asn1.DEREncodable access$400(org.bouncycastle.asn1.ASN1Collection)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable r1;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Collection;

        r1 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj2>;

        return r1;
    }

    static org.bouncycastle.asn1.DEREncodable access$500(org.bouncycastle.asn1.ASN1Collection)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable r1;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Collection;

        r1 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj3>;

        return r1;
    }

    static org.bouncycastle.asn1.DEREncodable[] access$600(org.bouncycastle.asn1.ASN1Collection)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable[] r1;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Collection;

        r1 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        return r1;
    }

    private static byte[] getEncoded(org.bouncycastle.asn1.DEREncodable)
    {
        org.bouncycastle.asn1.DEREncodable $r0;
        org.bouncycastle.asn1.ASN1OutputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        java.io.IOException $r3;
        byte[] $r4;
        java.lang.IllegalArgumentException $r5;

        $r0 := @parameter0: org.bouncycastle.asn1.DEREncodable;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r2);

     label1:
        virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r0);

     label2:
        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

     label3:
        $r3 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot encode object added to collection");

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static boolean lessThanOrEqual(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1;
        byte $b2;
        short $s3, $s4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i1 = lengthof $r0;

        $i0 = lengthof $r1;

        if $i1 > $i0 goto label5;

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 == $i1 goto label4;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $b2 = $r1[$i0];

        $s4 = $b2 & 255;

        if $s4 <= $s3 goto label2;

        return 1;

     label2:
        if $s3 <= $s4 goto label3;

        return 0;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return 1;

     label5:
        $i0 = 0;

     label6:
        $i1 = lengthof $r1;

        if $i0 == $i1 goto label9;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $b2 = $r1[$i0];

        $s4 = $b2 & 255;

        if $s4 <= $s3 goto label7;

        return 1;

     label7:
        if $s3 <= $s4 goto label8;

        return 0;

     label8:
        $i0 = $i0 + 1;

        goto label6;

     label9:
        return 0;
    }

    private void setObjectAt(org.bouncycastle.asn1.DEREncodable, int)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable $r1;
        int $i0;
        org.bouncycastle.asn1.DEREncodable[] $r2;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $r1 := @parameter0: org.bouncycastle.asn1.DEREncodable;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $i0 = $i0 - 4;

        $r2[$i0] = $r1;

        return;

     label2:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj0> = $r1;

        return;

     label3:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj1> = $r1;

        return;

     label4:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj2> = $r1;

        return;

     label5:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj3> = $r1;

        return;
    }

    protected void addObject(org.bouncycastle.asn1.DEREncodable)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.DEREncodable $r1;
        int $i0, $i1;
        org.bouncycastle.asn1.DEREncodable[] $r2, $r4, $r5;
        java.lang.NullPointerException $r3;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $r1 := @parameter0: org.bouncycastle.asn1.DEREncodable;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("obj == null");

        throw $r3;

     label1:
        $i0 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            case 3: goto label8;
            case 4: goto label9;
            default: goto label2;
        };

     label2:
        $i0 = $i0 - 4;

        $r2 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label3;

        $i1 = $i0 * 2;

        $i1 = $i1 + 10;

        $r2 = newarray (org.bouncycastle.asn1.DEREncodable)[$i1];

        $r4 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $r5 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $i1 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i1);

        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest> = $r2;

     label3:
        $r2 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $r2[$i0] = $r1;

     label4:
        $i0 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        $i0 = $i0 + 1;

        $r0.<org.bouncycastle.asn1.ASN1Collection: int size> = $i0;

        return;

     label5:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj0> = $r1;

        goto label4;

     label6:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj1> = $r1;

        goto label4;

     label7:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj2> = $r1;

        goto label4;

     label8:
        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj3> = $r1;

        goto label4;

     label9:
        $r2 = newarray (org.bouncycastle.asn1.DEREncodable)[5];

        $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest> = $r2;

        $r2 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $r2[0] = $r1;

        goto label4;
    }

    abstract void encode(org.bouncycastle.asn1.DEROutputStream) throws java.io.IOException;

    public final org.bouncycastle.asn1.DEREncodable getObjectAt(int)
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.lang.IndexOutOfBoundsException $r2;
        org.bouncycastle.asn1.DEREncodable[] $r3;
        org.bouncycastle.asn1.DEREncodable $r4;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label3;
        };

     label3:
        $r3 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable[] rest>;

        $i0 = $i0 - 4;

        $r4 = $r3[$i0];

        return $r4;

     label4:
        $r4 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj0>;

        return $r4;

     label5:
        $r4 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj1>;

        return $r4;

     label6:
        $r4 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj2>;

        return $r4;

     label7:
        $r4 = $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable obj3>;

        return $r4;
    }

    public final java.util.Enumeration getObjects()
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        org.bouncycastle.asn1.ASN1Collection$ASN1CollectionEnumeration $r1;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $r1 = new org.bouncycastle.asn1.ASN1Collection$ASN1CollectionEnumeration;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1Collection$ASN1CollectionEnumeration: void <init>(org.bouncycastle.asn1.ASN1Collection,org.bouncycastle.asn1.ASN1Collection$1)>($r0, null);

        return $r1;
    }

    public final int hashCode()
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        java.util.Enumeration $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r2;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        if $r2 == null goto label1;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 ^ $i1;

        goto label1;

     label2:
        return $i0;
    }

    public final int size()
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        int i0;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        i0 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        return i0;
    }

    protected void sort()
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        org.bouncycastle.asn1.DEREncodable $r1, $r4;
        byte[] $r2, $r3;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $i1 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        if $i1 > 1 goto label1;

        return;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 0 goto label6;

        $i1 = 0;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r2 = staticinvoke <org.bouncycastle.asn1.ASN1Collection: byte[] getEncoded(org.bouncycastle.asn1.DEREncodable)>($r1);

        $z0 = 0;

     label3:
        $i0 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        $i0 = $i0 - 1;

        if $i1 == $i0 goto label2;

        $i0 = $i1 + 1;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i0);

        $r3 = staticinvoke <org.bouncycastle.asn1.ASN1Collection: byte[] getEncoded(org.bouncycastle.asn1.DEREncodable)>($r1);

        $z1 = staticinvoke <org.bouncycastle.asn1.ASN1Collection: boolean lessThanOrEqual(byte[],byte[])>($r2, $r3);

        if $z1 == 0 goto label5;

        $r2 = $r3;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i1);

        $r4 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i0);

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: void setObjectAt(org.bouncycastle.asn1.DEREncodable,int)>($r4, $i1);

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: void setObjectAt(org.bouncycastle.asn1.DEREncodable,int)>($r1, $i0);

        $z0 = 1;

        goto label4;

     label6:
        return;
    }

    public final java.lang.String toString()
    {
        org.bouncycastle.asn1.ASN1Collection $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        org.bouncycastle.asn1.DEREncodable $r2;
        java.lang.String $r3;

        $r0 := @this: org.bouncycastle.asn1.ASN1Collection;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $i0 = 0;

     label1:
        $i1 = $r0.<org.bouncycastle.asn1.ASN1Collection: int size>;

        if $i0 >= $i1 goto label3;

        if $i0 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r2 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
