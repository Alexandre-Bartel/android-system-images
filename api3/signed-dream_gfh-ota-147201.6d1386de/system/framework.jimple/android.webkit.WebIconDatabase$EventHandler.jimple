class android.webkit.WebIconDatabase$EventHandler extends android.os.Handler
{
    static final int CLOSE;
    private static final int ICON_RESULT;
    static final int OPEN;
    static final int RELEASE_ICON;
    static final int REMOVE_ALL;
    static final int REQUEST_ICON;
    static final int RETAIN_ICON;
    private android.os.Handler mHandler;
    private java.util.Vector mMessages;
    final android.webkit.WebIconDatabase this$0;

    private void <init>(android.webkit.WebIconDatabase)
    {
        android.webkit.WebIconDatabase$EventHandler $r0;
        android.webkit.WebIconDatabase $r1;
        java.util.Vector $r2;

        $r0 := @this: android.webkit.WebIconDatabase$EventHandler;

        $r1 := @parameter0: android.webkit.WebIconDatabase;

        $r0.<android.webkit.WebIconDatabase$EventHandler: android.webkit.WebIconDatabase this$0> = $r1;

        specialinvoke $r0.<android.os.Handler: void <init>()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r0.<android.webkit.WebIconDatabase$EventHandler: java.util.Vector mMessages> = $r2;

        return;
    }

    void <init>(android.webkit.WebIconDatabase, android.webkit.WebIconDatabase$1)
    {
        android.webkit.WebIconDatabase$EventHandler $r0;
        android.webkit.WebIconDatabase $r1;
        android.webkit.WebIconDatabase$1 $r2;

        $r0 := @this: android.webkit.WebIconDatabase$EventHandler;

        $r1 := @parameter0: android.webkit.WebIconDatabase;

        $r2 := @parameter1: android.webkit.WebIconDatabase$1;

        specialinvoke $r0.<android.webkit.WebIconDatabase$EventHandler: void <init>(android.webkit.WebIconDatabase)>($r1);

        return;
    }

    static void access$700(android.webkit.WebIconDatabase$EventHandler, android.os.Message)
    {
        android.webkit.WebIconDatabase$EventHandler $r0;
        android.os.Message $r1;

        $r0 := @parameter0: android.webkit.WebIconDatabase$EventHandler;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<android.webkit.WebIconDatabase$EventHandler: void postMessage(android.os.Message)>($r1);

        return;
    }

    static void access$800(android.webkit.WebIconDatabase$EventHandler)
    {
        android.webkit.WebIconDatabase$EventHandler $r0;

        $r0 := @parameter0: android.webkit.WebIconDatabase$EventHandler;

        specialinvoke $r0.<android.webkit.WebIconDatabase$EventHandler: void createHandler()>();

        return;
    }

    private void createHandler()
    {
        android.webkit.WebIconDatabase$EventHandler $r0;
        android.os.Handler $r1;
        android.webkit.WebIconDatabase$EventHandler$1 $r2;
        java.util.Vector $r3;
        int $i0;
        java.lang.Object $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.webkit.WebIconDatabase$EventHandler;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.webkit.WebIconDatabase$EventHandler: android.os.Handler mHandler>;

        if $r1 != null goto label4;

        $r2 = new android.webkit.WebIconDatabase$EventHandler$1;

        specialinvoke $r2.<android.webkit.WebIconDatabase$EventHandler$1: void <init>(android.webkit.WebIconDatabase$EventHandler)>($r0);

        $r0.<android.webkit.WebIconDatabase$EventHandler: android.os.Handler mHandler> = $r2;

        $r3 = $r0.<android.webkit.WebIconDatabase$EventHandler: java.util.Vector mMessages>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

     label2:
        if $i0 <= 0 goto label3;

        $r1 = $r0.<android.webkit.WebIconDatabase$EventHandler: android.os.Handler mHandler>;

        $r3 = $r0.<android.webkit.WebIconDatabase$EventHandler: java.util.Vector mMessages>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object remove(int)>(0);

        $r5 = (android.os.Message) $r4;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        $i0 = $i0 + -1;

        goto label2;

     label3:
        $r0.<android.webkit.WebIconDatabase$EventHandler: java.util.Vector mMessages> = null;

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    private void postMessage(android.os.Message)
    {
        android.webkit.WebIconDatabase$EventHandler $r0;
        android.os.Message $r1;
        java.util.Vector $r2;
        android.os.Handler $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.WebIconDatabase$EventHandler;

        $r1 := @parameter0: android.os.Message;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.webkit.WebIconDatabase$EventHandler: java.util.Vector mMessages>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.webkit.WebIconDatabase$EventHandler: java.util.Vector mMessages>;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 = $r0.<android.webkit.WebIconDatabase$EventHandler: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

     label4:
        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void handleMessage(android.os.Message)
    {
        android.os.Message $r0;
        int $i0;
        android.webkit.WebIconDatabase$EventHandler $r1;
        java.lang.Object $r2;
        android.webkit.WebIconDatabase$EventHandler$IconResult $r3;

        $r1 := @this: android.webkit.WebIconDatabase$EventHandler;

        $r0 := @parameter0: android.os.Message;

        $i0 = $r0.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 10: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r2 = $r0.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.webkit.WebIconDatabase$EventHandler$IconResult) $r2;

        virtualinvoke $r3.<android.webkit.WebIconDatabase$EventHandler$IconResult: void dispatch()>();

        return;
    }

    public static void <clinit>()
    {
        <android.webkit.WebIconDatabase$EventHandler: int RETAIN_ICON> = 4;

        <android.webkit.WebIconDatabase$EventHandler: int REQUEST_ICON> = 3;

        <android.webkit.WebIconDatabase$EventHandler: int REMOVE_ALL> = 2;

        <android.webkit.WebIconDatabase$EventHandler: int RELEASE_ICON> = 5;

        <android.webkit.WebIconDatabase$EventHandler: int OPEN> = 0;

        <android.webkit.WebIconDatabase$EventHandler: int ICON_RESULT> = 10;

        <android.webkit.WebIconDatabase$EventHandler: int CLOSE> = 1;

        return;
    }
}
