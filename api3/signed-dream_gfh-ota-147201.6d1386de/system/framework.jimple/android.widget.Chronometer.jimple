public class android.widget.Chronometer extends android.widget.TextView
{
    private static final java.lang.String TAG;
    private static final int TICK_WHAT;
    private long mBase;
    private java.lang.String mFormat;
    private java.lang.StringBuilder mFormatBuilder;
    private java.util.Formatter mFormatter;
    private java.lang.Object[] mFormatterArgs;
    private java.util.Locale mFormatterLocale;
    private android.os.Handler mHandler;
    private boolean mLogged;
    private android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener;
    private java.lang.StringBuilder mRecycle;
    private boolean mRunning;
    private boolean mStarted;
    private boolean mVisible;

    public void <init>(android.content.Context)
    {
        android.widget.Chronometer $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.Chronometer;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Chronometer $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.Chronometer;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Chronometer $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        android.widget.Chronometer$1 $r5;
        int[] $r6;
        android.content.res.TypedArray $r7;
        java.lang.String $r8;

        $r0 := @this: android.widget.Chronometer;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = newarray (java.lang.Object)[1];

        $r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(8);

        $r0.<android.widget.Chronometer: java.lang.StringBuilder mRecycle> = $r4;

        $r5 = new android.widget.Chronometer$1;

        specialinvoke $r5.<android.widget.Chronometer$1: void <init>(android.widget.Chronometer)>($r0);

        $r0.<android.widget.Chronometer: android.os.Handler mHandler> = $r5;

        $r6 = <com.android.internal.R$styleable: int[] Chronometer>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r6, $i0, 0);

        $r8 = virtualinvoke $r7.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke $r0.<android.widget.Chronometer: void setFormat(java.lang.String)>($r8);

        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        specialinvoke $r0.<android.widget.Chronometer: void init()>();

        return;
    }

    static boolean access$000(android.widget.Chronometer)
    {
        android.widget.Chronometer $r0;
        boolean z0;

        $r0 := @parameter0: android.widget.Chronometer;

        z0 = $r0.<android.widget.Chronometer: boolean mRunning>;

        return z0;
    }

    static void access$100(android.widget.Chronometer, long)
    {
        android.widget.Chronometer $r0;
        long $l0;

        $r0 := @parameter0: android.widget.Chronometer;

        $l0 := @parameter1: long;

        specialinvoke $r0.<android.widget.Chronometer: void updateText(long)>($l0);

        return;
    }

    private void init()
    {
        android.widget.Chronometer $r0;
        long $l0;

        $r0 := @this: android.widget.Chronometer;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r0.<android.widget.Chronometer: long mBase> = $l0;

        $l0 = $r0.<android.widget.Chronometer: long mBase>;

        specialinvoke $r0.<android.widget.Chronometer: void updateText(long)>($l0);

        return;
    }

    private void updateRunning()
    {
        android.widget.Chronometer $r0;
        boolean $z0, $z1;
        long $l0;
        android.os.Handler $r1, $r2;
        android.os.Message $r3;

        $r0 := @this: android.widget.Chronometer;

        $z0 = $r0.<android.widget.Chronometer: boolean mVisible>;

        if $z0 == 0 goto label3;

        $z0 = $r0.<android.widget.Chronometer: boolean mStarted>;

        if $z0 == 0 goto label3;

        $z0 = 1;

     label1:
        $z1 = $r0.<android.widget.Chronometer: boolean mRunning>;

        if $z0 == $z1 goto label5;

        if $z0 == 0 goto label4;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r0.<android.widget.Chronometer: void updateText(long)>($l0);

        virtualinvoke $r0.<android.widget.Chronometer: void dispatchChronometerTick()>();

        $r1 = $r0.<android.widget.Chronometer: android.os.Handler mHandler>;

        $r2 = $r0.<android.widget.Chronometer: android.os.Handler mHandler>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r2, 2);

        virtualinvoke $r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r3, 1000L);

     label2:
        $r0.<android.widget.Chronometer: boolean mRunning> = $z0;

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r1 = $r0.<android.widget.Chronometer: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        goto label2;

     label5:
        return;
    }

    private void updateText(long)
    {
        android.widget.Chronometer $r0;
        long $l0, $l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3, $r4;
        java.util.Locale $r5, $r7;
        java.util.Formatter $r6;
        boolean $z0;
        java.lang.Object[] $r8;
        java.util.IllegalFormatException $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.widget.Chronometer;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label01:
        $l1 = $r0.<android.widget.Chronometer: long mBase>;

        $l0 = $l0 - $l1;

        $l0 = $l0 / 1000L;

        $r1 = $r0.<android.widget.Chronometer: java.lang.StringBuilder mRecycle>;

        $r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>($r1, $l0);

        $r3 = $r2;

        $r4 = $r0.<android.widget.Chronometer: java.lang.String mFormat>;

        if $r4 == null goto label06;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = $r0.<android.widget.Chronometer: java.util.Formatter mFormatter>;

        if $r6 == null goto label02;

        $r7 = $r0.<android.widget.Chronometer: java.util.Locale mFormatterLocale>;

        $z0 = virtualinvoke $r5.<java.util.Locale: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label03;

     label02:
        $r0.<android.widget.Chronometer: java.util.Locale mFormatterLocale> = $r5;

        $r6 = new java.util.Formatter;

        $r1 = $r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        specialinvoke $r6.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r1, $r5);

        $r0.<android.widget.Chronometer: java.util.Formatter mFormatter> = $r6;

     label03:
        $r1 = $r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r8 = $r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs>;

        $r8[0] = $r2;

     label04:
        $r6 = $r0.<android.widget.Chronometer: java.util.Formatter mFormatter>;

        $r2 = $r0.<android.widget.Chronometer: java.lang.String mFormat>;

        $r8 = $r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs>;

     label05:
        virtualinvoke $r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r2, $r8);

        $r1 = $r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

     label07:
        exitmonitor $r0;

        return;

     label08:
        $r9 := @caughtexception;

     label09:
        $z0 = $r0.<android.widget.Chronometer: boolean mLogged>;

        if $z0 != 0 goto label06;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal format string: ");

        $r2 = $r0.<android.widget.Chronometer: java.lang.String mFormat>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Chronometer", $r2);

        $r0.<android.widget.Chronometer: boolean mLogged> = 1;

     label10:
        goto label06;

     label11:
        $r10 := @caughtexception;

        exitmonitor $r0;

        throw $r10;

        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.util.IllegalFormatException from label05 to label06 with label08;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    void dispatchChronometerTick()
    {
        android.widget.Chronometer $r0;
        android.widget.Chronometer$OnChronometerTickListener $r1;

        $r0 := @this: android.widget.Chronometer;

        $r1 = $r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        interfaceinvoke $r1.<android.widget.Chronometer$OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>($r0);

        return;

     label1:
        return;
    }

    public long getBase()
    {
        android.widget.Chronometer $r0;
        long l0;

        $r0 := @this: android.widget.Chronometer;

        l0 = $r0.<android.widget.Chronometer: long mBase>;

        return l0;
    }

    public java.lang.String getFormat()
    {
        android.widget.Chronometer $r0;
        java.lang.String r1;

        $r0 := @this: android.widget.Chronometer;

        r1 = $r0.<android.widget.Chronometer: java.lang.String mFormat>;

        return r1;
    }

    public android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()
    {
        android.widget.Chronometer $r0;
        android.widget.Chronometer$OnChronometerTickListener r1;

        $r0 := @this: android.widget.Chronometer;

        r1 = $r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        return r1;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.Chronometer $r0;

        $r0 := @this: android.widget.Chronometer;

        specialinvoke $r0.<android.widget.TextView: void onDetachedFromWindow()>();

        $r0.<android.widget.Chronometer: boolean mVisible> = 0;

        specialinvoke $r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        android.widget.Chronometer $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.widget.Chronometer;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.View: void onWindowVisibilityChanged(int)>($i0);

        if $i0 != 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<android.widget.Chronometer: boolean mVisible> = $z0;

        specialinvoke $r0.<android.widget.Chronometer: void updateRunning()>();

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void setBase(long)
    {
        android.widget.Chronometer $r0;
        long $l0;

        $r0 := @this: android.widget.Chronometer;

        $l0 := @parameter0: long;

        $r0.<android.widget.Chronometer: long mBase> = $l0;

        virtualinvoke $r0.<android.widget.Chronometer: void dispatchChronometerTick()>();

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r0.<android.widget.Chronometer: void updateText(long)>($l0);

        return;
    }

    public void setFormat(java.lang.String)
    {
        android.widget.Chronometer $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.StringBuilder $r2;

        $r0 := @this: android.widget.Chronometer;

        $r1 := @parameter0: java.lang.String;

        $r0.<android.widget.Chronometer: java.lang.String mFormat> = $r1;

        if $r1 == null goto label1;

        $r2 = $r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        if $r2 != null goto label2;

        $r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder> = $r2;

        return;

     label1:
        return;

     label2:
        return;
    }

    public void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)
    {
        android.widget.Chronometer $r0;
        android.widget.Chronometer$OnChronometerTickListener $r1;

        $r0 := @this: android.widget.Chronometer;

        $r1 := @parameter0: android.widget.Chronometer$OnChronometerTickListener;

        $r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener> = $r1;

        return;
    }

    public void setStarted(boolean)
    {
        android.widget.Chronometer $r0;
        boolean $z0;

        $r0 := @this: android.widget.Chronometer;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.Chronometer: boolean mStarted> = $z0;

        specialinvoke $r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void start()
    {
        android.widget.Chronometer $r0;

        $r0 := @this: android.widget.Chronometer;

        $r0.<android.widget.Chronometer: boolean mStarted> = 1;

        specialinvoke $r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void stop()
    {
        android.widget.Chronometer $r0;

        $r0 := @this: android.widget.Chronometer;

        $r0.<android.widget.Chronometer: boolean mStarted> = 0;

        specialinvoke $r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Chronometer: int TICK_WHAT> = 2;

        <android.widget.Chronometer: java.lang.String TAG> = "Chronometer";

        return;
    }
}
