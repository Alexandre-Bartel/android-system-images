public class android.content.ContentQueryMap extends java.util.Observable
{
    private java.lang.String[] mColumnNames;
    private android.database.ContentObserver mContentObserver;
    private android.database.Cursor mCursor;
    private boolean mDirty;
    private android.os.Handler mHandlerForUpdateNotifications;
    private boolean mKeepUpdated;
    private int mKeyColumn;
    private java.util.Map mValues;

    public void <init>(android.database.Cursor, java.lang.String, boolean, android.os.Handler)
    {
        android.content.ContentQueryMap $r0;
        android.database.Cursor $r1;
        java.lang.String $r2;
        boolean $z0;
        android.os.Handler $r3;
        java.lang.String[] $r4;
        int $i0;

        $r0 := @this: android.content.ContentQueryMap;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: android.os.Handler;

        specialinvoke $r0.<java.util.Observable: void <init>()>();

        $r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications> = null;

        $r0.<android.content.ContentQueryMap: boolean mKeepUpdated> = 0;

        $r0.<android.content.ContentQueryMap: java.util.Map mValues> = null;

        $r0.<android.content.ContentQueryMap: boolean mDirty> = 0;

        $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor> = $r1;

        $r1 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r0.<android.content.ContentQueryMap: java.lang.String[] mColumnNames> = $r4;

        $r1 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>($r2);

        $r0.<android.content.ContentQueryMap: int mKeyColumn> = $i0;

        $r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications> = $r3;

        virtualinvoke $r0.<android.content.ContentQueryMap: void setKeepUpdated(boolean)>($z0);

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.content.ContentQueryMap: void readCursorIntoCache()>();

        return;

     label1:
        return;
    }

    static boolean access$002(android.content.ContentQueryMap, boolean)
    {
        android.content.ContentQueryMap $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentQueryMap;

        $z0 := @parameter1: boolean;

        $r0.<android.content.ContentQueryMap: boolean mDirty> = $z0;

        return $z0;
    }

    private void readCursorIntoCache()
    {
        android.content.ContentQueryMap $r0;
        android.content.ContentValues $r1;
        int $i0, $i1;
        java.util.Map $r2;
        java.util.HashMap $r3;
        android.database.Cursor $r4;
        boolean $z0;
        java.lang.String[] $r5;
        java.lang.String $r6, $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.content.ContentQueryMap;

        entermonitor $r0;

     label01:
        $r2 = $r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        if $r2 == null goto label06;

        $r2 = $r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

     label02:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>($i0);

        $r0.<android.content.ContentQueryMap: java.util.Map mValues> = $r3;

     label03:
        $r4 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label10;

        $r1 = new android.content.ContentValues;

        specialinvoke $r1.<android.content.ContentValues: void <init>()>();

        $i0 = 0;

     label04:
        $r5 = $r0.<android.content.ContentQueryMap: java.lang.String[] mColumnNames>;

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label07;

        $i1 = $r0.<android.content.ContentQueryMap: int mKeyColumn>;

        if $i0 == $i1 goto label05;

        $r5 = $r0.<android.content.ContentQueryMap: java.lang.String[] mColumnNames>;

        $r6 = $r5[$i0];

        $r4 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r7 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>($r6, $r7);

     label05:
        $i0 = $i0 + 1;

        goto label04;

     label06:
        $i0 = 0;

        goto label02;

     label07:
        $r2 = $r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        $r4 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $i0 = $r0.<android.content.ContentQueryMap: int mKeyColumn>;

        $r6 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r1);

     label08:
        goto label03;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

     label10:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label01 to label08 with label09;
    }

    public void close()
    {
        android.content.ContentQueryMap $r0;
        android.database.ContentObserver $r1;
        android.database.Cursor $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.content.ContentQueryMap;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        if $r1 == null goto label2;

        $r2 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r1 = $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        interfaceinvoke $r2.<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>($r1);

        $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver> = null;

     label2:
        $r2 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor> = null;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.ContentQueryMap $r0;
        android.database.Cursor $r1;

        $r0 := @this: android.content.ContentQueryMap;

        $r1 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        virtualinvoke $r0.<android.content.ContentQueryMap: void close()>();

     label1:
        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;
    }

    public java.util.Map getRows()
    {
        android.content.ContentQueryMap $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        java.util.Map r2;

        $r0 := @this: android.content.ContentQueryMap;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.content.ContentQueryMap: boolean mDirty>;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<android.content.ContentQueryMap: void requery()>();

     label2:
        r2 = $r0.<android.content.ContentQueryMap: java.util.Map mValues>;

     label3:
        exitmonitor $r0;

        return r2;

     label4:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public android.content.ContentValues getValues(java.lang.String)
    {
        android.content.ContentQueryMap $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.Map $r3;
        android.content.ContentValues $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.content.ContentQueryMap;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.content.ContentQueryMap: boolean mDirty>;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<android.content.ContentQueryMap: void requery()>();

     label2:
        $r3 = $r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (android.content.ContentValues) $r2;

     label3:
        exitmonitor $r0;

        return $r4;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void requery()
    {
        android.content.ContentQueryMap $r0;
        android.database.Cursor $r1;

        $r0 := @this: android.content.ContentQueryMap;

        $r0.<android.content.ContentQueryMap: boolean mDirty> = 0;

        $r1 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        interfaceinvoke $r1.<android.database.Cursor: boolean requery()>();

        specialinvoke $r0.<android.content.ContentQueryMap: void readCursorIntoCache()>();

        virtualinvoke $r0.<java.util.Observable: void setChanged()>();

        virtualinvoke $r0.<java.util.Observable: void notifyObservers()>();

        return;
    }

    public void setKeepUpdated(boolean)
    {
        android.content.ContentQueryMap $r0;
        boolean $z0, $z1;
        android.database.Cursor $r1;
        android.database.ContentObserver $r2;
        android.os.Handler $r3;
        android.content.ContentQueryMap$1 $r4;

        $r0 := @this: android.content.ContentQueryMap;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.content.ContentQueryMap: boolean mKeepUpdated>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        $r0.<android.content.ContentQueryMap: boolean mKeepUpdated> = $z0;

        $z0 = $r0.<android.content.ContentQueryMap: boolean mKeepUpdated>;

        if $z0 != 0 goto label2;

        $r1 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r2 = $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        interfaceinvoke $r1.<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>($r2);

        $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver> = null;

        return;

     label2:
        $r3 = $r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications>;

        if $r3 != null goto label3;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        $r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications> = $r3;

     label3:
        $r2 = $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        if $r2 != null goto label4;

        $r4 = new android.content.ContentQueryMap$1;

        $r3 = $r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications>;

        specialinvoke $r4.<android.content.ContentQueryMap$1: void <init>(android.content.ContentQueryMap,android.os.Handler)>($r0, $r3);

        $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver> = $r4;

     label4:
        $r1 = $r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r2 = $r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        interfaceinvoke $r1.<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>($r2);

        $r0.<android.content.ContentQueryMap: boolean mDirty> = 1;

        return;
    }
}
