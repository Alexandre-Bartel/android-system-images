public class junit.textui.ResultPrinter extends java.lang.Object implements junit.framework.TestListener
{
    int fColumn;
    java.io.PrintStream fWriter;

    public void <init>(java.io.PrintStream)
    {
        junit.textui.ResultPrinter $r0;
        java.io.PrintStream $r1;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: java.io.PrintStream;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<junit.textui.ResultPrinter: int fColumn> = 0;

        $r0.<junit.textui.ResultPrinter: java.io.PrintStream fWriter> = $r1;

        return;
    }

    public void addError(junit.framework.Test, java.lang.Throwable)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.Test $r1;
        java.lang.Throwable $r2;
        java.io.PrintStream $r3;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("E");

        return;
    }

    public void addFailure(junit.framework.Test, junit.framework.AssertionFailedError)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.Test $r1;
        junit.framework.AssertionFailedError $r2;
        java.io.PrintStream $r3;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: junit.framework.AssertionFailedError;

        $r3 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("F");

        return;
    }

    protected java.lang.String elapsedTimeAsString(long)
    {
        junit.textui.ResultPrinter $r0;
        long $l0;
        java.lang.String $r1;
        double $d0;

        $r0 := @this: junit.textui.ResultPrinter;

        $l0 := @parameter0: long;

        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        $r1 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r1;
    }

    public void endTest(junit.framework.Test)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.Test $r1;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.Test;

        return;
    }

    public java.io.PrintStream getWriter()
    {
        junit.textui.ResultPrinter $r0;
        java.io.PrintStream r1;

        $r0 := @this: junit.textui.ResultPrinter;

        r1 = $r0.<junit.textui.ResultPrinter: java.io.PrintStream fWriter>;

        return r1;
    }

    void print(junit.framework.TestResult, long)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestResult $r1;
        long $l0;
        java.lang.Throwable $r2;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestResult;

        $l0 := @parameter1: long;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<junit.textui.ResultPrinter: void printHeader(long)>($l0);

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>($r1);

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>($r1);

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void printDefect(junit.framework.TestFailure, int)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestFailure $r1;
        int $i0;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestFailure;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printDefectHeader(junit.framework.TestFailure,int)>($r1, $i0);

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>($r1);

        return;
    }

    protected void printDefectHeader(junit.framework.TestFailure, int)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestFailure $r1;
        int $i0;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        junit.framework.Test $r4;
        java.lang.String $r5;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestFailure;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r4 = virtualinvoke $r1.<junit.framework.TestFailure: junit.framework.Test failedTest()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r5);

        return;
    }

    protected void printDefectTrace(junit.framework.TestFailure)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestFailure $r1;
        java.io.PrintStream $r2;
        java.lang.String $r3;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestFailure;

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r3 = virtualinvoke $r1.<junit.framework.TestFailure: java.lang.String trace()>();

        $r3 = staticinvoke <junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r3);

        return;
    }

    protected void printDefects(java.util.Enumeration, int, java.lang.String)
    {
        junit.textui.ResultPrinter $r0;
        java.util.Enumeration $r1;
        int $i0;
        java.lang.String $r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;
        java.lang.Object $r5;
        junit.framework.TestFailure $r6;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: java.util.Enumeration;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        if $i0 != 0 goto label1;

        return;

     label1:
        if $i0 != 1 goto label4;

        $r3 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label2:
        $i0 = 1;

     label3:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (junit.framework.TestFailure) $r5;

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>($r6, $i0);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r3 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There were ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s:");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label2;

     label5:
        return;
    }

    protected void printErrors(junit.framework.TestResult)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestResult $r1;
        java.util.Enumeration $r2;
        int $i0;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestResult;

        $r2 = virtualinvoke $r1.<junit.framework.TestResult: java.util.Enumeration errors()>();

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int errorCount()>();

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>($r2, $i0, "error");

        return;
    }

    protected void printFailures(junit.framework.TestResult)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestResult $r1;
        java.util.Enumeration $r2;
        int $i0;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestResult;

        $r2 = virtualinvoke $r1.<junit.framework.TestResult: java.util.Enumeration failures()>();

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int failureCount()>();

        virtualinvoke $r0.<junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>($r2, $i0, "failure");

        return;
    }

    protected void printFooter(junit.framework.TestResult)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.TestResult $r1;
        boolean $z0;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r4;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.TestResult;

        $z0 = virtualinvoke $r1.<junit.framework.TestResult: boolean wasSuccessful()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>("OK");

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int runCount()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" test");

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int runCount()>();

        if $i0 != 1 goto label3;

        $r4 = "";

     label1:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label2:
        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        return;

     label3:
        $r4 = "s";

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("FAILURES!!!");

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tests run: ");

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int runCount()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  Failures: ");

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int failureCount()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  Errors: ");

        $i0 = virtualinvoke $r1.<junit.framework.TestResult: int errorCount()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        goto label2;
    }

    protected void printHeader(long)
    {
        junit.textui.ResultPrinter $r0;
        long $l0;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: junit.textui.ResultPrinter;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        $r1 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time: ");

        $r3 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.lang.String elapsedTimeAsString(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }

    void printWaitPrompt()
    {
        junit.textui.ResultPrinter $r0;
        java.io.PrintStream $r1;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        $r1 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("<RETURN> to continue");

        return;
    }

    public void startTest(junit.framework.Test)
    {
        junit.textui.ResultPrinter $r0;
        junit.framework.Test $r1;
        java.io.PrintStream $r2;
        int $i0, $i1;

        $r0 := @this: junit.textui.ResultPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>(".");

        $i0 = $r0.<junit.textui.ResultPrinter: int fColumn>;

        $i1 = $i0 + 1;

        $r0.<junit.textui.ResultPrinter: int fColumn> = $i1;

        if $i0 < 40 goto label1;

        $r2 = virtualinvoke $r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        $r0.<junit.textui.ResultPrinter: int fColumn> = 0;

        return;

     label1:
        return;
    }
}
