public class android.graphics.drawable.GradientDrawable extends android.graphics.drawable.Drawable
{
    public static final int LINE;
    public static final int LINEAR_GRADIENT;
    public static final int OVAL;
    public static final int RADIAL_GRADIENT;
    public static final int RECTANGLE;
    public static final int RING;
    public static final int SWEEP_GRADIENT;
    private int mAlpha;
    private android.graphics.ColorFilter mColorFilter;
    private boolean mDither;
    private final android.graphics.Paint mFillPaint;
    private android.graphics.drawable.GradientDrawable$GradientState mGradientState;
    private android.graphics.Paint mLayerPaint;
    private boolean mMutated;
    private android.graphics.Rect mPadding;
    private final android.graphics.Path mPath;
    private boolean mPathIsDirty;
    private final android.graphics.RectF mRect;
    private boolean mRectIsDirty;
    private android.graphics.Path mRingPath;
    private android.graphics.Paint mStrokePaint;

    public void <init>()
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r2 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>($r2, null);

        specialinvoke $r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        return;
    }

    private void <init>(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.Paint $r2;
        android.graphics.Path $r3;
        android.graphics.RectF $r4;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint> = $r2;

        $r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = 255;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect> = $r4;

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = $r1;

        specialinvoke $r0.<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        $r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        return;
    }

    void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.graphics.drawable.GradientDrawable$1)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $r2 := @parameter1: android.graphics.drawable.GradientDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        return;
    }

    public void <init>(android.graphics.drawable.GradientDrawable$Orientation, int[])
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$Orientation $r1;
        int[] $r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        $r2 := @parameter1: int[];

        $r3 = new android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>($r1, $r2);

        specialinvoke $r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r3);

        return;
    }

    private android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.RectF $r2, $r4;
        android.graphics.Path $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0;
        int $i0;
        byte $b1;
        android.graphics.Path$FillType $r5;
        android.graphics.Path$Direction $r6;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r3 == null goto label02;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        if $z0 == 0 goto label01;

        $z0 = $r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z0 != 0 goto label02;

     label01:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        return $r3;

     label02:
        $r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        if $z0 == 0 goto label08;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        $f2 = (float) $i0;

        $f2 = $f2 * 360.0F;

        $f2 = $f2 / 10000.0F;

     label03:
        $r4 = new android.graphics.RectF;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        specialinvoke $r4.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r2);

        $f1 = virtualinvoke $r4.<android.graphics.RectF: float width()>();

        $f0 = $f1 / 2.0F;

        $f1 = virtualinvoke $r4.<android.graphics.RectF: float height()>();

        $f1 = $f1 / 2.0F;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i0 == -1 goto label09;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        $f3 = (float) $i0;

     label04:
        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i0 == -1 goto label10;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        $f4 = (float) $i0;

     label05:
        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r4);

        $f5 = $f0 - $f4;

        $f6 = $f1 - $f4;

        virtualinvoke $r2.<android.graphics.RectF: void inset(float,float)>($f5, $f6);

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r2);

        $f5 = neg $f3;

        $f6 = neg $f3;

        virtualinvoke $r4.<android.graphics.RectF: void inset(float,float)>($f5, $f6);

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r3 != null goto label11;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = $r3;

     label06:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        $b1 = $f2 cmpg 360.0F;

        if $b1 >= 0 goto label12;

        $b1 = $f2 cmpl -360.0F;

        if $b1 <= 0 goto label12;

        $r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        virtualinvoke $r3.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r5);

        $f5 = $f0 + $f4;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>($f5, $f1);

        $f0 = $f0 + $f4;

        $f0 = $f0 + $f3;

        virtualinvoke $r3.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        virtualinvoke $r3.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r4, 0.0F, $f2, 0);

        $f1 = neg $f2;

        virtualinvoke $r3.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r2, $f2, $f1, 0);

        virtualinvoke $r3.<android.graphics.Path: void close()>();

     label07:
        return $r3;

     label08:
        $f2 = 360.0F;

        goto label03;

     label09:
        $f3 = virtualinvoke $r4.<android.graphics.RectF: float width()>();

        $f4 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        $f3 = $f3 / $f4;

        goto label04;

     label10:
        $f4 = virtualinvoke $r4.<android.graphics.RectF: float width()>();

        $f5 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        $f4 = $f4 / $f5;

        goto label05;

     label11:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        virtualinvoke $r3.<android.graphics.Path: void reset()>();

        goto label06;

     label12:
        $r6 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r3.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>($r4, $r6);

        $r6 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke $r3.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>($r2, $r6);

        goto label07;
    }

    private boolean ensureValidRect()
    {
        android.graphics.drawable.GradientDrawable $r0;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Shader$TileMode $r1;
        boolean $z0;
        android.graphics.Rect $r2;
        android.graphics.Paint $r3;
        android.graphics.drawable.GradientDrawable$GradientState $r4;
        android.graphics.RectF $r5;
        int $i0, $i1, $i2;
        int[] $r6, $r7, $r12;
        android.graphics.drawable.GradientDrawable$Orientation $r8;
        float[] $r10, $r13;
        android.graphics.LinearGradient r15;
        android.graphics.RadialGradient r16;
        android.graphics.SweepGradient r17;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = $r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty>;

        if $z0 == 0 goto label05;

        $r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 0;

        $r2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $f1 = 0.0F;

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r3 == null goto label01;

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f1 = virtualinvoke $r3.<android.graphics.Paint: float getStrokeWidth()>();

        $f1 = $f1 * 0.5F;

     label01:
        $r4 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $f2 = $f2 + $f1;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i0;

        $f0 = $f0 + $f1;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $f3 = (float) $i0;

        $f3 = $f3 - $f1;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $f4 = (float) $i0;

        $f1 = $f4 - $f1;

        virtualinvoke $r5.<android.graphics.RectF: void set(float,float,float,float)>($f2, $f0, $f3, $f1);

        $r6 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if $r6 == null goto label05;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i0 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i0 != 0 goto label14;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        if $z0 == 0 goto label06;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        $f1 = (float) $i0;

        $f1 = $f1 / 10000.0F;

     label02:
        $r7 = <android.graphics.drawable.GradientDrawable$1: int[] $SwitchMap$android$graphics$drawable$GradientDrawable$Orientation>;

        $r8 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        $i0 = virtualinvoke $r8.<java.lang.Enum: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            case 7: goto label13;
            default: goto label03;
        };

     label03:
        $f2 = $r5.<android.graphics.RectF: float left>;

        $f0 = $r5.<android.graphics.RectF: float top>;

        $f3 = $r5.<android.graphics.RectF: float right>;

        $f3 = $f1 * $f3;

        $f4 = $r5.<android.graphics.RectF: float bottom>;

        $f1 = $f1 * $f4;

     label04:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        r15 = new android.graphics.LinearGradient;

        $r10 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r1 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke r15.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f2, $f0, $f3, $f1, $r6, $r10, $r1);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r15);

     label05:
        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $z0 = virtualinvoke $r5.<android.graphics.RectF: boolean isEmpty()>();

        if $z0 != 0 goto label25;

        return 1;

     label06:
        $f1 = 1.0F;

        goto label02;

     label07:
        $f3 = $r5.<android.graphics.RectF: float left>;

        $f2 = $f3;

        $f0 = $r5.<android.graphics.RectF: float top>;

        $f4 = $r5.<android.graphics.RectF: float bottom>;

        $f1 = $f1 * $f4;

        goto label04;

     label08:
        $f2 = $r5.<android.graphics.RectF: float right>;

        $f0 = $r5.<android.graphics.RectF: float top>;

        $f3 = $r5.<android.graphics.RectF: float left>;

        $f3 = $f1 * $f3;

        $f4 = $r5.<android.graphics.RectF: float bottom>;

        $f1 = $f1 * $f4;

        goto label04;

     label09:
        $f2 = $r5.<android.graphics.RectF: float right>;

        $f4 = $r5.<android.graphics.RectF: float top>;

        $f0 = $f4;

        $f3 = $r5.<android.graphics.RectF: float left>;

        $f3 = $f1 * $f3;

        $f1 = $f4;

        goto label04;

     label10:
        $f2 = $r5.<android.graphics.RectF: float right>;

        $f0 = $r5.<android.graphics.RectF: float bottom>;

        $f3 = $r5.<android.graphics.RectF: float left>;

        $f3 = $f1 * $f3;

        $f4 = $r5.<android.graphics.RectF: float top>;

        $f1 = $f1 * $f4;

        goto label04;

     label11:
        $f3 = $r5.<android.graphics.RectF: float left>;

        $f2 = $f3;

        $f0 = $r5.<android.graphics.RectF: float bottom>;

        $f4 = $r5.<android.graphics.RectF: float top>;

        $f1 = $f1 * $f4;

        goto label04;

     label12:
        $f2 = $r5.<android.graphics.RectF: float left>;

        $f0 = $r5.<android.graphics.RectF: float bottom>;

        $f3 = $r5.<android.graphics.RectF: float right>;

        $f3 = $f1 * $f3;

        $f4 = $r5.<android.graphics.RectF: float top>;

        $f1 = $f1 * $f4;

        goto label04;

     label13:
        $f2 = $r5.<android.graphics.RectF: float left>;

        $f4 = $r5.<android.graphics.RectF: float top>;

        $f0 = $f4;

        $f3 = $r5.<android.graphics.RectF: float right>;

        $f3 = $f1 * $f3;

        $f1 = $f4;

        goto label04;

     label14:
        $i0 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i0 != 1 goto label17;

        $f1 = $r5.<android.graphics.RectF: float left>;

        $f2 = $r5.<android.graphics.RectF: float right>;

        $f0 = $r5.<android.graphics.RectF: float left>;

        $f2 = $f2 - $f0;

        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$200(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        $f2 = $f2 * $f0;

        $f1 = $f2 + $f1;

        $f2 = $r5.<android.graphics.RectF: float top>;

        $f0 = $r5.<android.graphics.RectF: float bottom>;

        $f3 = $r5.<android.graphics.RectF: float top>;

        $f0 = $f0 - $f3;

        $f3 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        $f0 = $f0 * $f3;

        $f2 = $f0 + $f2;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        if $z0 == 0 goto label16;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 10000.0F;

     label15:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        r16 = new android.graphics.RadialGradient;

        $f3 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        $f0 = $f0 * $f3;

        $r1 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke r16.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f1, $f2, $f0, $r6, null, $r1);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r16);

        goto label05;

     label16:
        $f0 = 1.0F;

        goto label15;

     label17:
        $i0 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i0 != 2 goto label05;

        $f1 = $r5.<android.graphics.RectF: float left>;

        $f2 = $r5.<android.graphics.RectF: float right>;

        $f0 = $r5.<android.graphics.RectF: float left>;

        $f2 = $f2 - $f0;

        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$200(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        $f2 = $f2 * $f0;

        $f1 = $f2 + $f1;

        $f2 = $r5.<android.graphics.RectF: float top>;

        $f0 = $r5.<android.graphics.RectF: float bottom>;

        $f3 = $r5.<android.graphics.RectF: float top>;

        $f0 = $f0 - $f3;

        $f3 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        $f0 = $f0 * $f3;

        $f2 = $f0 + $f2;

        $r7 = $r6;

        $r10 = null;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        if $z0 == 0 goto label24;

        $r12 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors>;

        $r7 = $r12;

        $i0 = lengthof $r6;

        if $r12 == null goto label18;

        $i1 = lengthof $r12;

        $i2 = $i0 + 1;

        if $i1 == $i2 goto label19;

     label18:
        $i1 = $i0 + 1;

        $r12 = newarray (int)[$i1];

        $r7 = $r12;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors> = $r12;

     label19:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 0, $i0);

        $i1 = $i0 - 1;

        $i1 = $r6[$i1];

        $r7[$i0] = $i1;

        $r13 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions>;

        $r10 = $r13;

        $i1 = $i0 - 1;

        $f0 = (float) $i1;

        $f0 = 1.0F / $f0;

        if $r13 == null goto label20;

        $i1 = lengthof $r13;

        $i2 = $i0 + 1;

        if $i1 == $i2 goto label21;

     label20:
        $i1 = $i0 + 1;

        $r13 = newarray (float)[$i1];

        $r10 = $r13;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions> = $r13;

     label21:
        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        $f3 = (float) $i1;

        $f3 = $f3 / 10000.0F;

        $i1 = 0;

     label22:
        if $i1 >= $i0 goto label23;

        $f4 = (float) $i1;

        $f4 = $f4 * $f0;

        $f4 = $f4 * $f3;

        $r10[$i1] = $f4;

        $i1 = $i1 + 1;

        goto label22;

     label23:
        $f0 = 1.06535322E9F;

        $r10[$i0] = $f0;

     label24:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        r17 = new android.graphics.SweepGradient;

        specialinvoke r17.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f1, $f2, $r7, $r10);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r17);

        goto label05;

     label25:
        return 0;
    }

    private static float getFloatOrFraction(android.content.res.TypedArray, int, float)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        float $f0;
        android.util.TypedValue $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i0);

        if $r1 == null goto label4;

        $i0 = $r1.<android.util.TypedValue: int type>;

        if $i0 != 6 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $f0 = virtualinvoke $r1.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        return $f0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $f0 = virtualinvoke $r1.<android.util.TypedValue: float getFloat()>();

        return $f0;

     label4:
        return $f0;
    }

    private void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.DashPathEffect $r2;
        float $f0;
        boolean $z0;
        android.graphics.Paint $r3;
        int $i0;
        android.graphics.Rect $r4;
        android.graphics.Paint$Style $r5;
        byte $b1;
        float[] $r6;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $z0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor>;

        if $z0 == 0 goto label1;

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mSolidColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

     label1:
        $r4 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = $r4;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i0 < 0 goto label2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r3;

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        $f0 = (float) $i0;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label3;

        $r2 = new android.graphics.DashPathEffect;

        $r6 = newarray (float)[2];

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $r6[0] = $f0;

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        $r6[1] = $f0;

        specialinvoke $r2.<android.graphics.DashPathEffect: void <init>(float[],float)>($r6, 0.0F);

        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r2);

        return;

     label2:
        return;

     label3:
        return;
    }

    private int modulateAlpha(int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i2 = $r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i2 = $i2 >> 7;

        $i1 = $i1 + $i2;

        $i0 = $i0 * $i1;

        $i0 = $i0 >> 8;

        return $i0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.Canvas $r1;
        boolean $z0, $z1, $z2;
        android.graphics.Paint $r2;
        int $i0, $i1, $i2, $i3, $i5;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b4;
        android.graphics.drawable.GradientDrawable$GradientState $r3;
        android.graphics.ColorFilter $r4;
        android.graphics.RectF $r5;
        float[] $r6;
        android.graphics.Path $r7;
        android.graphics.Path$Direction $r8;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = specialinvoke $r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r2 == null goto label09;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i1 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

     label02:
        $i2 = specialinvoke $r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>($i0);

        $i3 = specialinvoke $r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>($i1);

        if $i3 <= 0 goto label10;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        $b4 = $f0 cmpl 0.0F;

        if $b4 <= 0 goto label10;

        $z0 = 1;

     label03:
        if $i2 <= 0 goto label11;

        $z1 = 1;

     label04:
        $r3 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if $z0 == 0 goto label12;

        if $z1 == 0 goto label12;

        $i5 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i5 == 2 goto label12;

        if $i3 >= 255 goto label12;

        $z1 = 1;

     label05:
        if $z1 == 0 goto label13;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        if $r2 != null goto label06;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint> = $r2;

     label06:
        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $z2 = $r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>($z2);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $i2 = $r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i2);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $r4 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f1 = $r5.<android.graphics.RectF: float left>;

        $f1 = $f1 - $f0;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f2 = $r5.<android.graphics.RectF: float top>;

        $f2 = $f2 - $f0;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f3 = $r5.<android.graphics.RectF: float right>;

        $f3 = $f3 + $f0;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f4 = $r5.<android.graphics.RectF: float bottom>;

        $f0 = $f4 + $f0;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f1, $f2, $f3, $f0, $r2, 4);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label07:
        $i2 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        lookupswitch($i2)
        {
            case 0: goto label14;
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label18;
            default: goto label08;
        };

     label08:
        if $z1 == 0 goto label19;

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label09:
        $i1 = 0;

        goto label02;

     label10:
        $z0 = 0;

        goto label03;

     label11:
        $z1 = 0;

        goto label04;

     label12:
        $z1 = 0;

        goto label05;

     label13:
        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i2);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $z2 = $r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>($z2);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r4 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        if $z0 == 0 goto label07;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i3);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $z2 = $r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>($z2);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r4 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        goto label07;

     label14:
        $r6 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r6 == null goto label15;

        $r7 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        virtualinvoke $r7.<android.graphics.Path: void reset()>();

        $r7 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r6 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $r8 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r7.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>($r5, $r6, $r8);

        $r7 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r2);

        if $z0 == 0 goto label08;

        $r7 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r2);

        goto label08;

     label15:
        $f0 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f0, $f0, $r2);

        if $z0 == 0 goto label08;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f0, $f0, $r2);

        goto label08;

     label16:
        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r5, $r2);

        if $z0 == 0 goto label08;

        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r5, $r2);

        goto label08;

     label17:
        $r5 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f0 = virtualinvoke $r5.<android.graphics.RectF: float centerY()>();

        $f1 = $r5.<android.graphics.RectF: float left>;

        $f2 = $r5.<android.graphics.RectF: float right>;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f0, $f2, $f0, $r2);

        goto label08;

     label18:
        $r7 = specialinvoke $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)>($r3);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r2);

        if $z0 == 0 goto label08;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r2);

        goto label08;

     label19:
        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0);

        if $z0 == 0 goto label20;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i1);

        return;

     label20:
        return;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        return $r1;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int i0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        return i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int i0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        return i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.GradientDrawable $r0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        return -3;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.Rect $r1, $r2;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.GradientDrawable$GradientState $r4, $r14;
        int[] $r5;
        android.content.res.TypedArray $r6;
        float $f0, $f1;
        boolean $z0, $z1;
        java.lang.String $r7;
        java.lang.StringBuilder $r9, r15;
        float[] $r10;
        byte $b6;
        android.graphics.drawable.GradientDrawable$Orientation $r11;
        android.util.TypedValue $r12;
        android.graphics.Rect $r13, r17;
        org.xmlpull.v1.XmlPullParserException r16;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawable>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>($r1, $r2, $r6, 0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        if $i0 != 3 goto label03;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(5, -1);

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i1;

        $i1 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i1 != -1 goto label01;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getFloat(int,float)>(2, 3.0F);

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = $f0;

     label01:
        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(6, -1);

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i1;

        $i1 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i1 != -1 goto label02;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getFloat(int,float)>(3, 9.0F);

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = $f0;

     label02:
        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 1);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$102(android.graphics.drawable.GradientDrawable$GradientState,boolean)>($r4, $z0);

     label03:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setShape(int)>($i0);

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

     label04:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label34;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label05;

        if $i1 == 3 goto label35;

     label05:
        if $i1 != 2 goto label04;

        if $i2 > $i0 goto label04;

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("size");

        if $z0 == 0 goto label06;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawableSize>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, -1);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, -1);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setSize(int,int)>($i1, $i2);

        goto label04;

     label06:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z0 == 0 goto label26;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawableGradient>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean hasValue(int)>(8);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(8, 0);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        $i4 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(4, 0);

        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>($r6, 5, 0.5F);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$202(android.graphics.drawable.GradientDrawable$GradientState,float)>($r4, $f0);

        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>($r6, 6, 0.5F);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$302(android.graphics.drawable.GradientDrawable$GradientState,float)>($r4, $f0);

        $z1 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>($r4, $z1);

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = $i4;

        if $i4 != 0 goto label18;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getFloat(int,float)>(3, 0.0F);

        $i4 = (int) $f0;

        $i4 = $i4 % 360;

        $i5 = $i4 % 45;

        if $i5 == 0 goto label07;

        r16 = new org.xmlpull.v1.XmlPullParserException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires \'angle\' attribute to ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("be a multiple of 45");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        throw r16;

     label07:
        lookupswitch($i4)
        {
            case 0: goto label10;
            case 45: goto label11;
            case 90: goto label12;
            case 135: goto label13;
            case 180: goto label14;
            case 225: goto label15;
            case 270: goto label16;
            case 315: goto label17;
            default: goto label08;
        };

     label08:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        if $z0 == 0 goto label25;

        $r5 = newarray (int)[3];

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r5;

        $r5 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r5[0] = $i1;

        $r5 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r5[1] = $i2;

        $r5 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r5[2] = $i3;

        $r10 = newarray (float)[3];

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = $r10;

        $r10 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $f0 = 0.0F;

        $r10[0] = $f0;

        $r10 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$200(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        $b6 = $f0 cmpl 0.5F;

        if $b6 == 0 goto label24;

        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$200(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

     label09:
        $r10[1] = $f0;

        $r10 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $f0 = 1.06535322E9F;

        $r10[2] = $f0;

        goto label04;

     label10:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation LEFT_RIGHT>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label11:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BL_TR>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label12:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BOTTOM_TOP>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label13:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BR_TL>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label14:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation RIGHT_LEFT>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label15:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TR_BL>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label16:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label17:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TL_BR>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

        goto label08;

     label18:
        $r12 = virtualinvoke $r6.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(7);

        if $r12 == null goto label23;

        $i4 = $r12.<android.util.TypedValue: int type>;

        if $i4 != 6 goto label21;

        $z1 = 1;

     label19:
        if $z1 == 0 goto label22;

        $f0 = virtualinvoke $r12.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label20:
        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$402(android.graphics.drawable.GradientDrawable$GradientState,float)>($r4, $f0);

        goto label08;

     label21:
        $z1 = 0;

        goto label19;

     label22:
        $f0 = virtualinvoke $r12.<android.util.TypedValue: float getFloat()>();

        goto label20;

     label23:
        if $i4 != 1 goto label08;

        r16 = new org.xmlpull.v1.XmlPullParserException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires \'gradientRadius\' ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attribute with radial type");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        throw r16;

     label24:
        $f0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        goto label09;

     label25:
        $r5 = newarray (int)[2];

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r5;

        $r5 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r5[0] = $i1;

        $r5 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r5[1] = $i3;

        goto label04;

     label26:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("solid");

        if $z0 == 0 goto label27;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawableSolid>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setColor(int)>($i1);

        goto label04;

     label27:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("stroke");

        if $z0 == 0 goto label30;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawableStroke>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(2, 0.0F);

        $b6 = $f0 cmpl 0.0F;

        if $b6 == 0 goto label29;

        $f1 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(3, 0.0F);

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>($i1, $i2, $f0, $f1);

     label28:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        goto label04;

     label29:
        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>($i1, $i2);

        goto label28;

     label30:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("corners");

        if $z0 == 0 goto label32;

        $r5 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        $f0 = (float) $i1;

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>($f0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i1);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, $i1);

        $i4 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, $i1);

        $i5 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, $i1);

        if $i2 == $i1 goto label31;

        if $i3 == $i1 goto label31;

        if $i4 == $i1 goto label31;

        if $i5 == $i1 goto label31;

        $r10 = newarray (float)[8];

        $f0 = (float) $i2;

        $r10[0] = $f0;

        $f0 = (float) $i2;

        $r10[1] = $f0;

        $f0 = (float) $i3;

        $r10[2] = $f0;

        $f0 = (float) $i3;

        $r10[3] = $f0;

        $f0 = (float) $i4;

        $r10[4] = $f0;

        $f0 = (float) $i4;

        $r10[5] = $f0;

        $f0 = (float) $i5;

        $r10[6] = $f0;

        $f0 = (float) $i5;

        $r10[7] = $f0;

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>($r10);

     label31:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        goto label04;

     label32:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("padding");

        if $z0 == 0 goto label33;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawablePadding>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        r17 = new android.graphics.Rect;

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(0, 0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, 0);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, 0);

        $i4 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, 0);

        specialinvoke r17.<android.graphics.Rect: void <init>(int,int,int,int)>($i1, $i2, $i3, $i4);

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = r17;

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r14 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r13 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        $r14.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r13;

        goto label04;

     label33:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <shape>: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r7);

        goto label04;

     label34:
        return;

     label35:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r3;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = $r0.<android.graphics.drawable.GradientDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != $r0 goto label2;

        $r3 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = $r3;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke $r0.<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        $r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 1;

        return $r0;

     label1:
        return $r0;

     label2:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        $r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        $r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>($i0);

        $r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        $r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return 1;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = $i0;

        return;
    }

    public void setColor(int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSolidColor(int)>($i0);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.GradientDrawable $r0;
        android.graphics.ColorFilter $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter> = $r1;

        return;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.GradientDrawable $r0;
        float[] $r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 := @parameter0: float[];

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadii(float[])>($r1);

        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.GradientDrawable $r0;
        float $f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $f0 := @parameter0: float;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadius(float)>($f0);

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.GradientDrawable $r0;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 := @parameter0: boolean;

        $r0.<android.graphics.drawable.GradientDrawable: boolean mDither> = $z0;

        return;
    }

    public void setGradientCenter(float, float)
    {
        android.graphics.drawable.GradientDrawable $r0;
        float $f0, $f1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientCenter(float,float)>($f0, $f1);

        return;
    }

    public void setGradientRadius(float)
    {
        android.graphics.drawable.GradientDrawable $r0;
        float $f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $f0 := @parameter0: float;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientRadius(float)>($f0);

        return;
    }

    public void setGradientType(int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientType(int)>($i0);

        $r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        return;
    }

    public void setShape(int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setShape(int)>($i0);

        return;
    }

    public void setSize(int, int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSize(int,int)>($i0, $i1);

        return;
    }

    public void setStroke(int, int)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0, $i1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>($i0, $i1, 0.0F, 0.0F);

        return;
    }

    public void setStroke(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable $r0;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.Paint $r2;
        android.graphics.Paint$Style $r3;
        android.graphics.DashPathEffect $r4;
        byte $b2;
        float[] $r5;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,int,float,float)>($i0, $i1, $f0, $f1);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r2 != null goto label1;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r2;

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

     label1:
        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f2 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f2);

        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1);

        $r4 = null;

        $b2 = $f0 cmpl 0.0F;

        if $b2 <= 0 goto label2;

        $r4 = new android.graphics.DashPathEffect;

        $r5 = newarray (float)[2];

        $r5[0] = $f0;

        $r5[1] = $f1;

        specialinvoke $r4.<android.graphics.DashPathEffect: void <init>(float[],float)>($r5, 0.0F);

     label2:
        $r2 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r4);

        return;
    }

    public void setUseLevel(boolean)
    {
        android.graphics.drawable.GradientDrawable $r0;
        boolean $z0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        $r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>($r1, $z0);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.GradientDrawable: int SWEEP_GRADIENT> = 2;

        <android.graphics.drawable.GradientDrawable: int RING> = 3;

        <android.graphics.drawable.GradientDrawable: int RECTANGLE> = 0;

        <android.graphics.drawable.GradientDrawable: int RADIAL_GRADIENT> = 1;

        <android.graphics.drawable.GradientDrawable: int OVAL> = 1;

        <android.graphics.drawable.GradientDrawable: int LINEAR_GRADIENT> = 0;

        <android.graphics.drawable.GradientDrawable: int LINE> = 2;

        return;
    }
}
