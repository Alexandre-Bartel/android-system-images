public abstract class android.content.AbstractTableMerger extends java.lang.Object
{
    private static final java.lang.String SELECT_BY_ID;
    private static final java.lang.String SELECT_BY_SYNC_ID_AND_ACCOUNT;
    private static final java.lang.String SELECT_MARKED;
    private static final java.lang.String SELECT_UNSYNCED;
    private static final java.lang.String TAG;
    private static boolean TRACE;
    protected static android.content.ContentValues mSyncMarkValues;
    private static final java.lang.String[] syncDirtyProjection;
    private static final java.lang.String[] syncIdAndVersionProjection;
    protected android.database.sqlite.SQLiteDatabase mDb;
    protected java.lang.String mDeletedTable;
    protected android.net.Uri mDeletedTableURL;
    private volatile boolean mIsMergeCancelled;
    protected java.lang.String mTable;
    protected android.net.Uri mTableURL;
    private android.content.ContentValues mValues;

    static void <clinit>()
    {
        java.lang.Integer $r0;
        android.content.ContentValues $r1;
        java.lang.String[] $r2;

        <android.content.AbstractTableMerger: java.lang.String TAG> = "AbstractTableMerger";

        <android.content.AbstractTableMerger: java.lang.String SELECT_UNSYNCED> = "_sync_dirty > 0 and (_sync_account=? or _sync_account is null)";

        <android.content.AbstractTableMerger: java.lang.String SELECT_MARKED> = "_sync_mark> 0 and _sync_account=?";

        <android.content.AbstractTableMerger: java.lang.String SELECT_BY_SYNC_ID_AND_ACCOUNT> = "_sync_id=? and _sync_account=?";

        <android.content.AbstractTableMerger: java.lang.String SELECT_BY_ID> = "_id=?";

        $r1 = new android.content.ContentValues;

        specialinvoke $r1.<android.content.ContentValues: void <init>()>();

        <android.content.AbstractTableMerger: android.content.ContentValues mSyncMarkValues> = $r1;

        $r1 = <android.content.AbstractTableMerger: android.content.ContentValues mSyncMarkValues>;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_sync_mark", $r0);

        <android.content.AbstractTableMerger: boolean TRACE> = 0;

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "_sync_dirty";

        $r2[1] = "_id";

        $r2[2] = "_sync_id";

        $r2[3] = "_sync_version";

        <android.content.AbstractTableMerger: java.lang.String[] syncDirtyProjection> = $r2;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "_sync_id";

        $r2[1] = "_sync_version";

        <android.content.AbstractTableMerger: java.lang.String[] syncIdAndVersionProjection> = $r2;

        return;
    }

    public void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String, android.net.Uri, java.lang.String, android.net.Uri)
    {
        android.content.AbstractTableMerger $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2, $r4;
        android.net.Uri $r3, $r5;
        android.content.ContentValues $r6;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.net.Uri;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: android.net.Uri;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb> = $r1;

        $r0.<android.content.AbstractTableMerger: java.lang.String mTable> = $r2;

        $r0.<android.content.AbstractTableMerger: android.net.Uri mTableURL> = $r3;

        $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable> = $r4;

        $r0.<android.content.AbstractTableMerger: android.net.Uri mDeletedTableURL> = $r5;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues> = $r6;

        return;
    }

    private static boolean findInCursor(android.database.Cursor, int, java.lang.String)
    {
        android.database.Cursor $r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.database.Cursor;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

     label1:
        $z0 = interfaceinvoke $r0.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 != 0 goto label4;

        $z0 = interfaceinvoke $r0.<android.database.Cursor: boolean isNull(int)>($i0);

        if $z0 != 0 goto label4;

        $r2 = interfaceinvoke $r0.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i1 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if $i1 <= 0 goto label2;

        interfaceinvoke $r0.<android.database.Cursor: boolean moveToNext()>();

        goto label1;

     label2:
        if $i1 != 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    private void findLocalChanges(android.content.TempProviderSyncResult, android.content.SyncableContentProvider, java.lang.String, android.content.SyncResult)
    {
        android.content.AbstractTableMerger $r0;
        android.content.TempProviderSyncResult $r1;
        android.content.SyncableContentProvider $r2, $r6;
        java.lang.String $r3, $r13;
        android.content.SyncResult $r4;
        java.lang.String[] $r5, $r11;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r7;
        android.database.Cursor $r8;
        int $i0;
        long $l1, $l2, $l3, $l4;
        android.content.ContentValues $r9;
        android.net.Uri $r10;
        java.lang.StringBuilder $r12;
        android.content.SyncStats $r14;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.content.TempProviderSyncResult;

        $r2 := @parameter1: android.content.SyncableContentProvider;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.content.SyncResult;

        $r6 = $r1.<android.content.TempProviderSyncResult: android.content.SyncableContentProvider tempContentProvider>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", "generating client updates");

     label01:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = $r3;

        $r7 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, "_sync_dirty > 0 and (_sync_account=? or _sync_account is null)", $r5, null, null, null);

        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getCount()>();

        $l1 = (long) $i0;

     label02:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label05;

        $z0 = $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled>;

        if $z0 == 0 goto label03;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return;

     label03:
        if $r6 != null goto label04;

        $r6 = virtualinvoke $r2.<android.content.SyncableContentProvider: android.content.SyncableContentProvider getTemporaryInstance()>();

     label04:
        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        virtualinvoke $r9.<android.content.ContentValues: void clear()>();

        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        virtualinvoke $r0.<android.content.AbstractTableMerger: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>($r8, $r9);

        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        virtualinvoke $r9.<android.content.ContentValues: void remove(java.lang.String)>("_id");

        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>($r8, "_id", $r9, "_sync_local_id");

        $r10 = $r0.<android.content.AbstractTableMerger: android.net.Uri mTableURL>;

        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        virtualinvoke $r6.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r10, $r9);

        goto label02;

     label05:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z0 == 0 goto label06;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", "generating client deletions");

     label06:
        $r7 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $l2 = staticinvoke <android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r7, $r3);

        $l3 = 0L;

        $r3 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        if $r3 == null goto label11;

        $r7 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r11 = <android.content.AbstractTableMerger: java.lang.String[] syncIdAndVersionProjection>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sync_id");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, $r11, "_sync_account=? AND _sync_id IS NOT NULL", $r5, null, null, $r13);

        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getCount()>();

        $l3 = (long) $i0;

     label07:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label10;

        $z0 = $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled>;

        if $z0 == 0 goto label08;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return;

     label08:
        if $r6 != null goto label09;

        $r6 = virtualinvoke $r2.<android.content.SyncableContentProvider: android.content.SyncableContentProvider getTemporaryInstance()>();

     label09:
        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        virtualinvoke $r9.<android.content.ContentValues: void clear()>();

        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        staticinvoke <android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>($r8, $r9);

        $r10 = $r0.<android.content.AbstractTableMerger: android.net.Uri mDeletedTableURL>;

        $r9 = $r0.<android.content.AbstractTableMerger: android.content.ContentValues mValues>;

        virtualinvoke $r6.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r10, $r9);

        goto label07;

     label10:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label11:
        if $r6 == null goto label12;

        $r1.<android.content.TempProviderSyncResult: android.content.SyncableContentProvider tempContentProvider> = $r6;

     label12:
        $r14 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l4 = $r14.<android.content.SyncStats: long numDeletes>;

        $l3 = $l4 + $l3;

        $r14.<android.content.SyncStats: long numDeletes> = $l3;

        $r14 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l3 = $r14.<android.content.SyncStats: long numUpdates>;

        $l1 = $l3 + $l1;

        $r14.<android.content.SyncStats: long numUpdates> = $l1;

        $r14 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l1 = $r14.<android.content.SyncStats: long numEntries>;

        $l2 = $l1 + $l2;

        $r14.<android.content.SyncStats: long numEntries> = $l2;

        return;
    }

    private void fullyDeleteMatchingRows(android.database.Cursor, java.lang.String, android.content.SyncResult)
    {
        android.content.AbstractTableMerger $r0;
        android.database.Cursor $r1;
        java.lang.String $r2, $r5;
        android.content.SyncResult $r3;
        int $i0;
        boolean $z0, $z1;
        java.lang.String[] $r4, $r7;
        android.database.sqlite.SQLiteDatabase $r6;
        android.content.SyncStats $r8;
        long $l1;
        java.lang.Throwable $r9;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.SyncResult;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_id");

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isNull(int)>($i0);

        if $z0 != 0 goto label06;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label07;

        $r4 = newarray (java.lang.String)[2];

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r4[0] = $r5;

        $r4[1] = $r2;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "_id";

        $r1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r2, $r7, "_sync_id=? and _sync_account=?", $r4, null, null, null);

     label02:
        interfaceinvoke $r1.<android.database.Cursor: boolean moveToFirst()>();

     label03:
        $z1 = interfaceinvoke $r1.<android.database.Cursor: boolean isAfterLast()>();

        if $z1 != 0 goto label08;

        virtualinvoke $r0.<android.content.AbstractTableMerger: void deleteRow(android.database.Cursor)>($r1);

        $r8 = $r3.<android.content.SyncResult: android.content.SyncStats stats>;

        $l1 = $r8.<android.content.SyncStats: long numDeletes>;

        $l1 = $l1 + 1L;

        $r8.<android.content.SyncStats: long numDeletes> = $l1;

     label04:
        goto label03;

     label05:
        $r9 := @caughtexception;

        interfaceinvoke $r1.<android.database.Cursor: void deactivate()>();

        throw $r9;

     label06:
        $z0 = 0;

        goto label01;

     label07:
        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_local_id");

        $r4 = newarray (java.lang.String)[1];

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r4[0] = $r2;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "_id";

        $r1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r2, $r7, "_id=?", $r4, null, null, null);

        goto label02;

     label08:
        interfaceinvoke $r1.<android.database.Cursor: void deactivate()>();

        if $z0 == 0 goto label09;

        $r2 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        if $r2 == null goto label10;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r2, "_sync_id=? and _sync_account=?", $r4);

        return;

     label09:
        return;

     label10:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
    }

    protected void cursorRowToContentValues(android.database.Cursor, android.content.ContentValues)
    {
        android.content.AbstractTableMerger $r0;
        android.database.Cursor $r1;
        android.content.ContentValues $r2;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: android.content.ContentValues;

        staticinvoke <android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>($r1, $r2);

        return;
    }

    public void deleteRow(android.database.Cursor)
    {
        android.content.AbstractTableMerger $r0;
        android.database.Cursor $r1;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.database.Cursor;

        interfaceinvoke $r1.<android.database.Cursor: boolean deleteRow()>();

        return;
    }

    public abstract void insertRow(android.content.ContentProvider, android.database.Cursor);

    public void merge(android.content.SyncContext, java.lang.String, android.content.SyncableContentProvider, android.content.TempProviderSyncResult, android.content.SyncResult, android.content.SyncableContentProvider)
    {
        android.content.AbstractTableMerger $r0;
        android.content.SyncContext $r1;
        java.lang.String $r2;
        android.content.SyncableContentProvider $r3, $r6;
        android.content.TempProviderSyncResult $r4;
        android.content.SyncResult $r5;
        android.database.sqlite.SQLiteDatabase $r7;
        boolean $z0;
        java.lang.IllegalStateException $r8;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.content.SyncContext;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.SyncableContentProvider;

        $r4 := @parameter3: android.content.TempProviderSyncResult;

        $r5 := @parameter4: android.content.SyncResult;

        $r6 := @parameter5: android.content.SyncableContentProvider;

        $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled> = 0;

        if $r3 == null goto label2;

        $r7 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("this must be called from within a DB transaction");

        throw $r8;

     label1:
        virtualinvoke $r0.<android.content.AbstractTableMerger: void mergeServerDiffs(android.content.SyncContext,java.lang.String,android.content.SyncableContentProvider,android.content.SyncResult)>($r1, $r2, $r3, $r5);

        virtualinvoke $r0.<android.content.AbstractTableMerger: void notifyChanges()>();

     label2:
        if $r4 == null goto label3;

        specialinvoke $r0.<android.content.AbstractTableMerger: void findLocalChanges(android.content.TempProviderSyncResult,android.content.SyncableContentProvider,java.lang.String,android.content.SyncResult)>($r4, $r6, $r2, $r5);

     label3:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", "merge complete");

        return;

     label4:
        return;
    }

    public void mergeServerDiffs(android.content.SyncContext, java.lang.String, android.content.SyncableContentProvider, android.content.SyncResult)
    {
        android.content.AbstractTableMerger $r0;
        android.content.SyncContext $r1;
        java.lang.String $r2, $r7, $r11, $r16, $r17, $r18, $r19;
        android.content.SyncableContentProvider $r3;
        android.content.SyncResult $r4;
        android.content.ContentValues $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.String[] $r8, $r9;
        java.lang.StringBuilder $r10;
        android.database.Cursor $r12, $r13, $r15;
        android.net.Uri $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        long $l7, $l9;
        android.content.SyncStats $r20;

        $r0 := @this: android.content.AbstractTableMerger;

        $r1 := @parameter0: android.content.SyncContext;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.SyncableContentProvider;

        $r4 := @parameter3: android.content.SyncResult;

        $z0 = virtualinvoke $r3.<android.content.SyncableContentProvider: boolean getContainsDiffs()>();

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r5 = <android.content.AbstractTableMerger: android.content.ContentValues mSyncMarkValues>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r5, null, null);

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        if $r7 == null goto label01;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r5 = <android.content.AbstractTableMerger: android.content.ContentValues mSyncMarkValues>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r5, null, null);

     label01:
        $r8 = newarray (java.lang.String)[1];

        $r8[0] = $r2;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r9 = <android.content.AbstractTableMerger: java.lang.String[] syncDirtyProjection>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sync_id");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, $r9, "_sync_mark> 0 and _sync_account=?", $r8, null, null, $r11);

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        if $r7 == null goto label04;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r9 = <android.content.AbstractTableMerger: java.lang.String[] syncIdAndVersionProjection>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sync_id");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, $r9, "_sync_mark> 0 and _sync_account=?", $r8, null, null, $r11);

     label02:
        $r14 = $r0.<android.content.AbstractTableMerger: android.net.Uri mTableURL>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r7 = $r0.<android.content.AbstractTableMerger: java.lang.String mTable>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sync_id");

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke $r3.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r14, null, null, null, $r7);

        $i0 = interfaceinvoke $r13.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_id");

        $i1 = interfaceinvoke $r13.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_version");

        $i2 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_id");

        $i3 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_version");

        $i4 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_sync_local_id");

        $r7 = null;

        $i5 = 0;

        $i6 = 0;

        interfaceinvoke $r12.<android.database.Cursor: boolean moveToFirst()>();

        interfaceinvoke $r13.<android.database.Cursor: boolean moveToFirst()>();

     label03:
        $z1 = interfaceinvoke $r15.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label43;

        $z1 = $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled>;

        if $z1 == 0 goto label05;

        interfaceinvoke $r12.<android.database.Cursor: void close()>();

        interfaceinvoke $r13.<android.database.Cursor: void close()>();

        interfaceinvoke $r15.<android.database.Cursor: void close()>();

        return;

     label04:
        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r13 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select \'a\' as _sync_id, \'b\' as _sync_version limit 0", null);

        goto label02;

     label05:
        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>();

        $r11 = interfaceinvoke $r15.<android.database.Cursor: java.lang.String getString(int)>($i2);

        $r16 = interfaceinvoke $r15.<android.database.Cursor: java.lang.String getString(int)>($i3);

        $l7 = 0L;

        $r17 = null;

        $i5 = $i5 + 1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i8 = interfaceinvoke $r15.<android.database.Cursor: int getCount()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.content.SyncContext: void setStatusText(java.lang.String)>($r18);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processing server entry ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r18);

     label06:
        $z1 = <android.content.AbstractTableMerger: boolean TRACE>;

        if $z1 == 0 goto label08;

        if $i5 != 10 goto label07;

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String)>("atmtrace");

     label07:
        if $i5 != 20 goto label08;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label08:
        $z1 = 0;

        $z2 = 0;

        $z3 = 0;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z4 == 0 goto label09;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found event with serverSyncID ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r18);

     label09:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z4 == 0 goto label10;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AbstractTableMerger", "server entry doesn\'t have a serverSyncID");

        goto label03;

     label10:
        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label11;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label03;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping record with duplicate remote server id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r11);

        goto label03;

     label11:
        $r7 = $r11;

        $r19 = null;

        $z4 = 0;

     label12:
        $z5 = interfaceinvoke $r12.<android.database.Cursor: boolean isAfterLast()>();

        if $z5 != 0 goto label25;

        $z5 = $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled>;

        if $z5 == 0 goto label13;

        interfaceinvoke $r12.<android.database.Cursor: void deactivate()>();

        interfaceinvoke $r13.<android.database.Cursor: void deactivate()>();

        interfaceinvoke $r15.<android.database.Cursor: void deactivate()>();

        return;

     label13:
        $i6 = $i6 + 1;

        $r18 = interfaceinvoke $r12.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r19 = $r18;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r18);

        if $z5 == 0 goto label15;

        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z5 == 0 goto label14;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("local record ");

        $l9 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no _sync_id, ignoring");

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r18);

     label14:
        interfaceinvoke $r12.<android.database.Cursor: boolean moveToNext()>();

        $r19 = null;

        goto label12;

     label15:
        $i8 = virtualinvoke $r11.<java.lang.String: int compareTo(java.lang.String)>($r18);

        if $i8 <= 0 goto label20;

        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z5 == 0 goto label16;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("local record ");

        $l9 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is < server _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r19 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r19);

     label16:
        if $z0 == 0 goto label18;

        interfaceinvoke $r12.<android.database.Cursor: boolean moveToNext()>();

     label17:
        $r19 = null;

        goto label12;

     label18:
        virtualinvoke $r0.<android.content.AbstractTableMerger: void deleteRow(android.database.Cursor)>($r12);

        $r19 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        if $r19 == null goto label19;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r19 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = $r18;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r19, "_sync_id=?", $r8);

     label19:
        $r20 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l9 = $r20.<android.content.SyncStats: long numDeletes>;

        $l9 = $l9 + 1L;

        $r20.<android.content.SyncStats: long numDeletes> = $l9;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>();

        goto label17;

     label20:
        if $i8 >= 0 goto label22;

        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z5 == 0 goto label21;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("local record ");

        $l9 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is > server _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r18);

     label21:
        $r19 = null;

     label22:
        if $i8 != 0 goto label25;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z4 == 0 goto label23;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("local record ");

        $l7 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that matches the server _sync_id");

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r17);

     label23:
        $i8 = interfaceinvoke $r12.<android.database.Cursor: int getInt(int)>(0);

        if $i8 == 0 goto label28;

        $z4 = 1;

     label24:
        $l7 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(1);

        $r17 = interfaceinvoke $r12.<android.database.Cursor: java.lang.String getString(int)>(3);

        interfaceinvoke $r12.<android.database.Cursor: boolean moveToNext()>();

     label25:
        $z5 = staticinvoke <android.content.AbstractTableMerger: boolean findInCursor(android.database.Cursor,int,java.lang.String)>($r13, $i0, $r11);

        if $z5 == 0 goto label29;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label26;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote record ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in the deleted table");

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r17);

     label26:
        $r17 = interfaceinvoke $r13.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r17, $r16);

        if $z1 != 0 goto label03;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label27;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting version of deleted record ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r17);

     label27:
        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_sync_version", $r16);

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r16 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = $r11;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r16, $r5, "_sync_id=?", $r8);

        goto label03;

     label28:
        $z4 = 0;

        goto label24;

     label29:
        $z5 = interfaceinvoke $r15.<android.database.Cursor: boolean isNull(int)>($i4);

        if $z5 != 0 goto label31;

        $l9 = interfaceinvoke $r15.<android.database.Cursor: long getLong(int)>($i4);

        $l7 = $l9;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z4 == 0 goto label30;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the remote record with sync id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has a local sync id, ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r17);

     label30:
        $r19 = $r11;

        $z4 = 0;

        $r17 = null;

     label31:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r19);

        if $z5 != 0 goto label39;

        if $r17 == null goto label32;

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z5 != 0 goto label36;

     label32:
        $z5 = 1;

     label33:
        if $z5 == 0 goto label35;

        if $z4 == 0 goto label37;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label34;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote record ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conflicts with local _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", local _id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r16);

     label34:
        $z1 = 1;

     label35:
        if $z2 == 0 goto label41;

        virtualinvoke $r0.<android.content.AbstractTableMerger: void updateRow(long,android.content.ContentProvider,android.database.Cursor)>($l7, $r3, $r15);

        $r20 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l7 = $r20.<android.content.SyncStats: long numUpdates>;

        $l7 = $l7 + 1L;

        $r20.<android.content.SyncStats: long numUpdates> = $l7;

        goto label03;

     label36:
        $z5 = 0;

        goto label33;

     label37:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z2 == 0 goto label38;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote record ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" updates local _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", local _id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r16);

     label38:
        $z2 = 1;

        goto label35;

     label39:
        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z3 == 0 goto label40;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote record ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is new, inserting");

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r16);

     label40:
        $z3 = 1;

        goto label35;

     label41:
        if $z1 == 0 goto label42;

        virtualinvoke $r0.<android.content.AbstractTableMerger: void resolveRow(long,java.lang.String,android.content.ContentProvider,android.database.Cursor)>($l7, $r11, $r3, $r15);

        $r20 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l7 = $r20.<android.content.SyncStats: long numUpdates>;

        $l7 = $l7 + 1L;

        $r20.<android.content.SyncStats: long numUpdates> = $l7;

        goto label03;

     label42:
        if $z3 == 0 goto label03;

        virtualinvoke $r0.<android.content.AbstractTableMerger: void insertRow(android.content.ContentProvider,android.database.Cursor)>($r3, $r15);

        $r20 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l7 = $r20.<android.content.SyncStats: long numInserts>;

        $l7 = $l7 + 1L;

        $r20.<android.content.SyncStats: long numInserts> = $l7;

        goto label03;

     label43:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z1 == 0 goto label44;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processed ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" server entries");

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r7);

     label44:
        if $z0 != 0 goto label49;

     label45:
        $z0 = interfaceinvoke $r12.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 != 0 goto label49;

        $r7 = interfaceinvoke $r12.<android.database.Cursor: java.lang.String getString(int)>(2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label49;

        $z0 = $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled>;

        if $z0 == 0 goto label46;

        interfaceinvoke $r12.<android.database.Cursor: void deactivate()>();

        interfaceinvoke $r13.<android.database.Cursor: void deactivate()>();

        interfaceinvoke $r15.<android.database.Cursor: void deactivate()>();

        return;

     label46:
        $i6 = $i6 + 1;

        $r7 = interfaceinvoke $r12.<android.database.Cursor: java.lang.String getString(int)>(2);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z0 == 0 goto label47;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting local record ");

        $l7 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" _sync_id ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r11);

     label47:
        virtualinvoke $r0.<android.content.AbstractTableMerger: void deleteRow(android.database.Cursor)>($r12);

        $r11 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        if $r11 == null goto label48;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        $r11 = $r0.<android.content.AbstractTableMerger: java.lang.String mDeletedTable>;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = $r7;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r11, "_sync_id=?", $r8);

     label48:
        $r20 = $r4.<android.content.SyncResult: android.content.SyncStats stats>;

        $l7 = $r20.<android.content.SyncStats: long numDeletes>;

        $l7 = $l7 + 1L;

        $r20.<android.content.SyncStats: long numDeletes> = $l7;

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>();

        goto label45;

     label49:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z0 == 0 goto label50;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checked ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" local entries");

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", $r7);

     label50:
        interfaceinvoke $r15.<android.database.Cursor: void deactivate()>();

        interfaceinvoke $r12.<android.database.Cursor: void deactivate()>();

        interfaceinvoke $r13.<android.database.Cursor: void deactivate()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AbstractTableMerger", 2);

        if $z0 == 0 goto label51;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AbstractTableMerger", "applying deletions from the server");

     label51:
        $r14 = $r0.<android.content.AbstractTableMerger: android.net.Uri mDeletedTableURL>;

        if $r14 == null goto label55;

        $r14 = $r0.<android.content.AbstractTableMerger: android.net.Uri mDeletedTableURL>;

        $r12 = virtualinvoke $r3.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r14, null, null, null, null);

     label52:
        $z0 = interfaceinvoke $r12.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label54;

        $z0 = $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled>;

        if $z0 == 0 goto label53;

        interfaceinvoke $r12.<android.database.Cursor: void deactivate()>();

        return;

     label53:
        specialinvoke $r0.<android.content.AbstractTableMerger: void fullyDeleteMatchingRows(android.database.Cursor,java.lang.String,android.content.SyncResult)>($r12, $r2, $r4);

        $r6 = $r0.<android.content.AbstractTableMerger: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>();

        goto label52;

     label54:
        interfaceinvoke $r12.<android.database.Cursor: void deactivate()>();

        return;

     label55:
        return;
    }

    protected abstract void notifyChanges();

    public void onMergeCancelled()
    {
        android.content.AbstractTableMerger $r0;

        $r0 := @this: android.content.AbstractTableMerger;

        $r0.<android.content.AbstractTableMerger: boolean mIsMergeCancelled> = 1;

        return;
    }

    public abstract void resolveRow(long, java.lang.String, android.content.ContentProvider, android.database.Cursor);

    public abstract void updateRow(long, android.content.ContentProvider, android.database.Cursor);
}
