public abstract class org.apache.http.impl.client.AbstractAuthenticationHandler extends java.lang.Object implements org.apache.http.client.AuthenticationHandler
{
    private static final java.util.List DEFAULT_SCHEME_PRIORITY;
    private final org.apache.commons.logging.Log log;

    static void <clinit>()
    {
        java.util.List $r0;
        java.lang.String[] $r1;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "ntlm";

        $r1[1] = "digest";

        $r1[2] = "basic";

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        <org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List DEFAULT_SCHEME_PRIORITY> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler $r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        $r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    protected java.util.List getAuthPreferences()
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler $r0;
        java.util.List r1;

        $r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        r1 = <org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List DEFAULT_SCHEME_PRIORITY>;

        return r1;
    }

    protected java.util.Map parseChallenges(org.apache.http.Header[]) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler $r0;
        org.apache.http.Header[] $r1;
        int $i0, $i1, $i2, $i3, $i5;
        org.apache.http.Header $r2;
        java.util.HashMap $r3;
        boolean $z0;
        org.apache.http.FormattedHeader $r4;
        org.apache.http.util.CharArrayBuffer $r5;
        char $c4;
        java.lang.String $r6;
        org.apache.http.auth.MalformedChallengeException $r7;
        java.util.Locale $r8;

        $r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        $r1 := @parameter0: org.apache.http.Header[];

        $r3 = new java.util.HashMap;

        $i1 = lengthof $r1;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>($i1);

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label8;

        $r2 = $r1[$i2];

        $z0 = $r2 instanceof org.apache.http.FormattedHeader;

        if $z0 == 0 goto label3;

        $r4 = (org.apache.http.FormattedHeader) $r2;

        $r5 = interfaceinvoke $r4.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        $r4 = (org.apache.http.FormattedHeader) $r2;

        $i3 = interfaceinvoke $r4.<org.apache.http.FormattedHeader: int getValuePos()>();

     label2:
        $i0 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        if $i3 >= $i0 goto label5;

        $c4 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: char charAt(int)>($i3);

        $z0 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c4);

        if $z0 == 0 goto label5;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $r6 = interfaceinvoke $r2.<org.apache.http.Header: java.lang.String getValue()>();

        if $r6 != null goto label4;

        $r7 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r7.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("Header value is null");

        throw $r7;

     label4:
        $r5 = new org.apache.http.util.CharArrayBuffer;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        specialinvoke $r5.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i3);

        virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r6);

        $i3 = 0;

        goto label2;

     label5:
        $i0 = $i3;

     label6:
        $i5 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        if $i3 >= $i5 goto label7;

        $c4 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: char charAt(int)>($i3);

        $z0 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c4);

        if $z0 != 0 goto label7;

        $i3 = $i3 + 1;

        goto label6;

     label7:
        $r6 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>($i0, $i3);

        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

        $i2 = $i2 + 1;

        goto label1;

     label8:
        return $r3;
    }

    public org.apache.http.auth.AuthScheme selectScheme(java.util.Map, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler $r0;
        java.util.Map $r1;
        org.apache.http.HttpResponse $r2;
        org.apache.http.protocol.HttpContext $r3;
        java.lang.Object $r4;
        org.apache.http.auth.AuthSchemeRegistry $r5;
        java.lang.IllegalStateException $r6;
        java.util.List $r7;
        org.apache.commons.logging.Log $r8;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, $r13;
        org.apache.http.auth.AuthScheme $r11;
        int $i0, $i1;
        java.util.Locale $r12;
        org.apache.http.Header $r14;
        org.apache.http.params.HttpParams $r15;
        org.apache.http.auth.AuthenticationException $r16;

        $r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: org.apache.http.HttpResponse;

        $r3 := @parameter2: org.apache.http.protocol.HttpContext;

        $r4 = interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.authscheme-registry");

        $r5 = (org.apache.http.auth.AuthSchemeRegistry) $r4;

        if $r5 != null goto label01;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AuthScheme registry not set in HTTP context");

        throw $r6;

     label01:
        $r4 = interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.scheme-pref");

        $r7 = (java.util.List) $r4;

        if $r7 != null goto label02;

        $r7 = virtualinvoke $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>();

     label02:
        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication schemes in the order of preference: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

     label03:
        $r11 = null;

        $i0 = 0;

     label04:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 >= $i1 goto label06;

        $r4 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r10 = (java.lang.String) $r4;

        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r13 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r14 = (org.apache.http.Header) $r4;

        if $r14 == null goto label09;

        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label05;

        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication scheme selected");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r13);

     label05:
        $r15 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.params.HttpParams getParams()>();

        $r11 = virtualinvoke $r5.<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>($r10, $r15);

     label06:
        if $r11 != null goto label10;

        $r16 = new org.apache.http.auth.AuthenticationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to respond to any of these challenges: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r10);

        throw $r16;

     label07:
        $r6 := @caughtexception;

        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z0 == 0 goto label08;

        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication scheme ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r10);

     label08:
        $i0 = $i0 + 1;

        goto label04;

     label09:
        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label08;

        $r8 = $r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Challenge for ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication scheme not available");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

        goto label08;

     label10:
        return $r11;

        catch java.lang.IllegalStateException from label05 to label06 with label07;
    }
}
