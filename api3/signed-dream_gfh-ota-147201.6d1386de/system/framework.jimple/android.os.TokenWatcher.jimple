public abstract class android.os.TokenWatcher extends java.lang.Object
{
    private volatile boolean mAcquired;
    private android.os.Handler mHandler;
    private int mNotificationQueue;
    private java.lang.Runnable mNotificationTask;
    private java.lang.String mTag;
    private java.util.WeakHashMap mTokens;

    public void <init>(android.os.Handler, java.lang.String)
    {
        android.os.TokenWatcher $r0;
        android.os.Handler $r1;
        java.lang.String $r2;
        android.os.TokenWatcher$1 $r3;
        java.util.WeakHashMap $r4;

        $r0 := @this: android.os.TokenWatcher;

        $r1 := @parameter0: android.os.Handler;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.TokenWatcher$1;

        specialinvoke $r3.<android.os.TokenWatcher$1: void <init>(android.os.TokenWatcher)>($r0);

        $r0.<android.os.TokenWatcher: java.lang.Runnable mNotificationTask> = $r3;

        $r4 = new java.util.WeakHashMap;

        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();

        $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens> = $r4;

        $r0.<android.os.TokenWatcher: int mNotificationQueue> = -1;

        $r0.<android.os.TokenWatcher: boolean mAcquired> = 0;

        $r0.<android.os.TokenWatcher: android.os.Handler mHandler> = $r1;

        if $r2 == null goto label2;

     label1:
        $r0.<android.os.TokenWatcher: java.lang.String mTag> = $r2;

        return;

     label2:
        $r2 = "TokenWatcher";

        goto label1;
    }

    static java.util.WeakHashMap access$000(android.os.TokenWatcher)
    {
        android.os.TokenWatcher $r0;
        java.util.WeakHashMap r1;

        $r0 := @parameter0: android.os.TokenWatcher;

        r1 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        return r1;
    }

    static int access$100(android.os.TokenWatcher)
    {
        android.os.TokenWatcher $r0;
        int i0;

        $r0 := @parameter0: android.os.TokenWatcher;

        i0 = $r0.<android.os.TokenWatcher: int mNotificationQueue>;

        return i0;
    }

    static int access$102(android.os.TokenWatcher, int)
    {
        android.os.TokenWatcher $r0;
        int $i0;

        $r0 := @parameter0: android.os.TokenWatcher;

        $i0 := @parameter1: int;

        $r0.<android.os.TokenWatcher: int mNotificationQueue> = $i0;

        return $i0;
    }

    static java.lang.String access$200(android.os.TokenWatcher)
    {
        android.os.TokenWatcher $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.os.TokenWatcher;

        r1 = $r0.<android.os.TokenWatcher: java.lang.String mTag>;

        return r1;
    }

    private void sendNotificationLocked(boolean)
    {
        android.os.TokenWatcher $r0;
        boolean $z0;
        byte $b0;
        int $i1;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        $r0 := @this: android.os.TokenWatcher;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $i1 = $r0.<android.os.TokenWatcher: int mNotificationQueue>;

        if $i1 != -1 goto label3;

        $r0.<android.os.TokenWatcher: int mNotificationQueue> = $b0;

        $r1 = $r0.<android.os.TokenWatcher: android.os.Handler mHandler>;

        $r2 = $r0.<android.os.TokenWatcher: java.lang.Runnable mNotificationTask>;

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;

     label2:
        $b0 = 0;

        goto label1;

     label3:
        $i1 = $r0.<android.os.TokenWatcher: int mNotificationQueue>;

        if $i1 == $b0 goto label4;

        $r0.<android.os.TokenWatcher: int mNotificationQueue> = -1;

        $r1 = $r0.<android.os.TokenWatcher: android.os.Handler mHandler>;

        $r2 = $r0.<android.os.TokenWatcher: java.lang.Runnable mNotificationTask>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        return;

     label4:
        return;
    }

    public void acquire(android.os.IBinder, java.lang.String)
    {
        android.os.TokenWatcher $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        android.os.TokenWatcher$Death $r3;
        android.os.RemoteException $r4;
        java.util.WeakHashMap $r5, $r6;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r7;

        $r0 := @this: android.os.TokenWatcher;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $r5 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        entermonitor $r5;

     label1:
        $r6 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        $i0 = virtualinvoke $r6.<java.util.WeakHashMap: int size()>();

        $r3 = new android.os.TokenWatcher$Death;

        specialinvoke $r3.<android.os.TokenWatcher$Death: void <init>(android.os.TokenWatcher,android.os.IBinder,java.lang.String)>($r0, $r1, $r2);

     label2:
        interfaceinvoke $r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label3:
        $r6 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $i0 != 0 goto label4;

        $z0 = $r0.<android.os.TokenWatcher: boolean mAcquired>;

        if $z0 != 0 goto label4;

        specialinvoke $r0.<android.os.TokenWatcher: void sendNotificationLocked(boolean)>(1);

        $r0.<android.os.TokenWatcher: boolean mAcquired> = 1;

     label4:
        exitmonitor $r5;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r5;

     label7:
        return;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r5;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public abstract void acquired();

    public void cleanup(android.os.IBinder, boolean)
    {
        android.os.TokenWatcher $r0;
        android.os.IBinder $r1;
        boolean $z0;
        java.util.WeakHashMap $r2, $r3;
        java.lang.Object $r4;
        android.os.TokenWatcher$Death $r5;
        int $i0;
        java.lang.Throwable $r6;

        $r0 := @this: android.os.TokenWatcher;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = (android.os.TokenWatcher$Death) $r4;

        if $z0 == 0 goto label2;

        if $r5 == null goto label2;

        $r1 = $r5.<android.os.TokenWatcher$Death: android.os.IBinder token>;

        interfaceinvoke $r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        $r5.<android.os.TokenWatcher$Death: android.os.IBinder token> = null;

     label2:
        $r3 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        $i0 = virtualinvoke $r3.<java.util.WeakHashMap: int size()>();

        if $i0 != 0 goto label3;

        $z0 = $r0.<android.os.TokenWatcher: boolean mAcquired>;

        if $z0 == 0 goto label3;

        specialinvoke $r0.<android.os.TokenWatcher: void sendNotificationLocked(boolean)>(0);

        $r0.<android.os.TokenWatcher: boolean mAcquired> = 0;

     label3:
        exitmonitor $r2;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void dump()
    {
        android.os.TokenWatcher $r0;
        java.util.WeakHashMap $r1, $r2;
        java.util.Set $r3;
        java.lang.String $r4, $r6;
        java.lang.StringBuilder $r5;
        int $i0;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        android.os.IBinder $r9;
        android.os.TokenWatcher$Death $r10;
        java.lang.Throwable $r11;

        $r0 := @this: android.os.TokenWatcher;

        $r1 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.util.Set keySet()>();

        $r4 = $r0.<android.os.TokenWatcher: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token count: ");

        $r2 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        $i0 = virtualinvoke $r2.<java.util.WeakHashMap: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r6);

        $i0 = 0;

        $r7 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.os.IBinder) $r8;

        $r4 = $r0.<android.os.TokenWatcher: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r2 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        $r8 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = (android.os.TokenWatcher$Death) $r8;

        $r6 = $r10.<android.os.TokenWatcher$Death: java.lang.String tag>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, $r6);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isAcquired()
    {
        android.os.TokenWatcher $r0;
        java.util.WeakHashMap $r1;
        java.lang.Throwable $r2;
        boolean z0;

        $r0 := @this: android.os.TokenWatcher;

        $r1 = $r0.<android.os.TokenWatcher: java.util.WeakHashMap mTokens>;

        entermonitor $r1;

     label1:
        z0 = $r0.<android.os.TokenWatcher: boolean mAcquired>;

        exitmonitor $r1;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void release(android.os.IBinder)
    {
        android.os.TokenWatcher $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.os.TokenWatcher;

        $r1 := @parameter0: android.os.IBinder;

        virtualinvoke $r0.<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>($r1, 1);

        return;
    }

    public abstract void released();
}
