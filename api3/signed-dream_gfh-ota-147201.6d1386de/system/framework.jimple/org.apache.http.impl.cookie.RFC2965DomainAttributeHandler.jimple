public class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean domainMatch(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r6;
        java.util.Locale $r5;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $r6 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $z0 = virtualinvoke $r0.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: boolean domainMatch(java.lang.String,java.lang.String)>($r4, $r6);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(46);

        if $i0 != -1 goto label4;

        return 1;

     label4:
        return 0;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r0;
        org.apache.http.cookie.SetCookie $r1;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.cookie.MalformedCookieException $r4;
        int $i0;
        java.util.Locale $r6;
        boolean $z0;
        java.lang.StringBuilder $r7;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        $r1 := @parameter0: org.apache.http.cookie.SetCookie;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for domain attribute");

        throw $r4;

     label2:
        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Blank value for domain attribute");

        throw $r4;

     label3:
        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r5 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        interfaceinvoke $r1.<org.apache.http.cookie.SetCookie: void setDomain(java.lang.String)>($r5);

        return;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r6;
        java.util.Locale $r5;
        org.apache.http.cookie.MalformedCookieException $r7;
        boolean $z0;
        org.apache.http.cookie.ClientCookie $r8;
        java.lang.StringBuilder $r9;
        int $i0, $i1;

        $r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label01:
        if $r2 != null goto label02;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label02:
        $r4 = virtualinvoke $r2.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $r6 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        if $r6 != null goto label03;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Invalid cookie state: domain not specified");

        throw $r7;

     label03:
        $r6 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = $r1 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label08;

        $r8 = (org.apache.http.cookie.ClientCookie) $r1;

        $z0 = interfaceinvoke $r8.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("domain");

        if $z0 == 0 goto label08;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label04;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r4 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2109: domain must start with a dot");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label04:
        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(int,int)>(46, 1);

        if $i0 < 0 goto label05;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 - 1;

        if $i0 != $i1 goto label06;

     label05:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(".local");

        if $z0 != 0 goto label06;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r4 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2965: the value contains no embedded dots ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and the value is not .local");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label06:
        $z0 = virtualinvoke $r0.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: boolean domainMatch(java.lang.String,java.lang.String)>($r4, $r6);

        if $z0 != 0 goto label07;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r4 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2965: effective host name does not ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("domain-match domain attribute.");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label07:
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(46);

        if $i0 == -1 goto label09;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r4 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2965: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("effective host minus domain may not contain any dots");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label08:
        $r6 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label10;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal domain attribute: \"");

        $r6 = interfaceinvoke $r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain of origin: \"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label09:
        return;

     label10:
        return;
    }
}
