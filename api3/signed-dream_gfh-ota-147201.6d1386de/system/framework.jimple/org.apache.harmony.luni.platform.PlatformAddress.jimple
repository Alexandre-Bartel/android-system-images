public class org.apache.harmony.luni.platform.PlatformAddress extends java.lang.Object implements java.lang.Comparable, org.apache.harmony.luni.platform.ICommonDataTypes
{
    public static final org.apache.harmony.luni.platform.PlatformAddress NULL;
    static final int SIZEOF;
    static final long UNKNOWN;
    public static final org.apache.harmony.luni.platform.IMemorySpy memorySpy;
    static final org.apache.harmony.luni.platform.IMemorySystem osMemory;
    final int osaddr;
    final long size;

    static void <clinit>()
    {
        org.apache.harmony.luni.platform.IMemorySystem $r0;
        int $i0;
        org.apache.harmony.luni.platform.PlatformAddress $r1;
        org.apache.harmony.luni.platform.RuntimeMemorySpy $r2;

        <org.apache.harmony.luni.platform.PlatformAddress: long UNKNOWN> = -1L;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.Platform: org.apache.harmony.luni.platform.IMemorySystem getMemorySystem()>();

        $i0 = interfaceinvoke $r0.<org.apache.harmony.luni.platform.IMemorySystem: int getPointerSize()>();

        <org.apache.harmony.luni.platform.PlatformAddress: int SIZEOF> = $i0;

        $r1 = new org.apache.harmony.luni.platform.PlatformAddress;

        specialinvoke $r1.<org.apache.harmony.luni.platform.PlatformAddress: void <init>(int,long)>(0, 0L);

        <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.PlatformAddress NULL> = $r1;

        $r2 = new org.apache.harmony.luni.platform.RuntimeMemorySpy;

        specialinvoke $r2.<org.apache.harmony.luni.platform.RuntimeMemorySpy: void <init>()>();

        <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy> = $r2;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.Platform: org.apache.harmony.luni.platform.IMemorySystem getMemorySystem()>();

        <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory> = $r0;

        return;
    }

    void <init>(int, long)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr> = $i0;

        $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size> = $l1;

        return;
    }

    public final void autoFree()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void autoFree(org.apache.harmony.luni.platform.PlatformAddress)>($r0);

        return;
    }

    public final int compareTo(java.lang.Object)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0, $r3;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.ClassCastException $r4;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $z0 = $r1 instanceof org.apache.harmony.luni.platform.PlatformAddress;

        if $z0 == 0 goto label4;

        $r3 = (org.apache.harmony.luni.platform.PlatformAddress) $r1;

        $i0 = $r3.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        if $i1 != $i0 goto label2;

        return 0;

     label2:
        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        if $i1 >= $i0 goto label3;

        return -1;

     label3:
        return 1;

     label4:
        $r4 = new java.lang.ClassCastException;

        specialinvoke $r4.<java.lang.ClassCastException: void <init>()>();

        throw $r4;
    }

    public org.apache.harmony.luni.platform.PlatformAddress duplicate()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        long $l0;
        int $i1;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.PlatformAddress on(int,long)>($i1, $l0);

        return $r0;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0, $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.apache.harmony.luni.platform.PlatformAddress;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.harmony.luni.platform.PlatformAddress) $r1;

        $i1 = $r2.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void free()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0;
        boolean $z0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $z0 = interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: boolean free(org.apache.harmony.luni.platform.PlatformAddress)>($r0);

        if $z0 == 0 goto label1;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void free(int)>($i0);

        return;

     label1:
        return;
    }

    public final org.apache.harmony.luni.platform.PlatformAddress getAddress(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.platform.PlatformAddress: int getInt(int)>($i0);

        $r0 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.PlatformAddress on(int)>($i0);

        return $r0;
    }

    public final byte getByte(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        byte $b1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 1);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        $b1 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: byte getByte(int)>($i0);

        return $b1;
    }

    public final void getByteArray(int, byte[], int, int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $i3 = $i2 * 1;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, $i3);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i3 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i3 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void getByteArray(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        return;
    }

    public final double getDouble(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        double $d0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        $d0 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: double getDouble(int)>($i0);

        return $d0;
    }

    public final double getDouble(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        org.apache.harmony.luni.platform.Endianness $r1;
        double $d0;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        $d0 = interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: double getDouble(int,org.apache.harmony.luni.platform.Endianness)>($i0, $r1);

        return $d0;
    }

    public final float getFloat(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        float $f0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        $f0 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: float getFloat(int)>($i0);

        return $f0;
    }

    public final float getFloat(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        org.apache.harmony.luni.platform.Endianness $r1;
        float $f0;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        $f0 = interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: float getFloat(int,org.apache.harmony.luni.platform.Endianness)>($i0, $r1);

        return $f0;
    }

    public final int getInt(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        $i0 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: int getInt(int)>($i0);

        return $i0;
    }

    public final int getInt(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        org.apache.harmony.luni.platform.Endianness $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        $i0 = interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: int getInt(int,org.apache.harmony.luni.platform.Endianness)>($i0, $r1);

        return $i0;
    }

    public final long getLong(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        long $l1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        $l1 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: long getLong(int)>($i0);

        return $l1;
    }

    public final long getLong(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        org.apache.harmony.luni.platform.Endianness $r1;
        long $l1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        $l1 = interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: long getLong(int,org.apache.harmony.luni.platform.Endianness)>($i0, $r1);

        return $l1;
    }

    public final short getShort(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        short $s1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 2);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        $s1 = interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: short getShort(int)>($i0);

        return $s1;
    }

    public final short getShort(int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        org.apache.harmony.luni.platform.Endianness $r1;
        short $s1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 2);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        $s1 = interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: short getShort(int,org.apache.harmony.luni.platform.Endianness)>($i0, $r1);

        return $s1;
    }

    public final long getSize()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        long l0;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        l0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        return l0;
    }

    public final int hashCode()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int i0;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        return i0;
    }

    public final boolean isNULL()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0, $r1;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.PlatformAddress NULL>;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void moveTo(org.apache.harmony.luni.platform.PlatformAddress, long)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0, $r1;
        long $l0;
        org.apache.harmony.luni.platform.IMemorySystem $r2;
        int $i1, $i2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 := @parameter0: org.apache.harmony.luni.platform.PlatformAddress;

        $l0 := @parameter1: long;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r1.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void memmove(int,int,long)>($i1, $i2, $l0);

        return;
    }

    public org.apache.harmony.luni.platform.PlatformAddress offsetBytes(int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        long $l1, $l3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i2 = $i2 + $i0;

        $l3 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: long size>;

        $l1 = (long) $i0;

        $l1 = $l3 - $l1;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.PlatformAddress on(int,long)>($i2, $l1);

        return $r0;
    }

    public final void setAddress(int, org.apache.harmony.luni.platform.PlatformAddress)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0, $r1;
        int $i0, $i1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.harmony.luni.platform.PlatformAddress;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i1 = $i1 + $i0;

        $i0 = $r1.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setAddress(int,int)>($i1, $i0);

        return;
    }

    public final void setByte(int, byte)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        byte $b1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $b1 := @parameter1: byte;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 1);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setByte(int,byte)>($i0, $b1);

        return;
    }

    public final void setByteArray(int, byte[], int, int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $i3 = $i2 * 1;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, $i3);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i3 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i3 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setByteArray(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        return;
    }

    public final void setDouble(int, double)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        double $d0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setDouble(int,double)>($i0, $d0);

        return;
    }

    public final void setDouble(int, double, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        double $d0;
        org.apache.harmony.luni.platform.Endianness $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setDouble(int,double,org.apache.harmony.luni.platform.Endianness)>($i0, $d0, $r1);

        return;
    }

    public final void setFloat(int, float)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        float $f0;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setFloat(int,float)>($i0, $f0);

        return;
    }

    public final void setFloat(int, float, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1;
        float $f0;
        org.apache.harmony.luni.platform.Endianness $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i1 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setFloat(int,float,org.apache.harmony.luni.platform.Endianness)>($i0, $f0, $r1);

        return;
    }

    public final void setInt(int, int)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1, $i2;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setInt(int,int)>($i0, $i1);

        return;
    }

    public final void setInt(int, int, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1, $i2;
        org.apache.harmony.luni.platform.Endianness $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 4);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setInt(int,int,org.apache.harmony.luni.platform.Endianness)>($i0, $i1, $r1);

        return;
    }

    public final void setIntArray(int, int[], int, int, boolean)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        boolean $z0;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $i3 = $i2 * 4;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, $i3);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i3 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i3 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setIntArray(int,int[],int,int,boolean)>($i0, $r1, $i1, $i2, $z0);

        return;
    }

    public final void setLong(int, long)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        long $l1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setLong(int,long)>($i0, $l1);

        return;
    }

    public final void setLong(int, long, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        long $l1;
        org.apache.harmony.luni.platform.Endianness $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 8);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setLong(int,long,org.apache.harmony.luni.platform.Endianness)>($i0, $l1, $r1);

        return;
    }

    public final void setShort(int, short)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        short $s1;
        org.apache.harmony.luni.platform.IMemorySpy $r1;
        org.apache.harmony.luni.platform.IMemorySystem $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $s1 := @parameter1: short;

        $r1 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r1.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 2);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySystem: void setShort(int,short)>($i0, $s1);

        return;
    }

    public final void setShort(int, short, org.apache.harmony.luni.platform.Endianness)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i2;
        short $s1;
        org.apache.harmony.luni.platform.Endianness $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $s1 := @parameter1: short;

        $r1 := @parameter2: org.apache.harmony.luni.platform.Endianness;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, 2);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i2 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i2 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setShort(int,short,org.apache.harmony.luni.platform.Endianness)>($i0, $s1, $r1);

        return;
    }

    public final void setShortArray(int, short[], int, int, boolean)
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0, $i1, $i2, $i3;
        short[] $r1;
        boolean $z0;
        org.apache.harmony.luni.platform.IMemorySpy $r2;
        org.apache.harmony.luni.platform.IMemorySystem $r3;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter0: int;

        $r1 := @parameter1: short[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        $i3 = $i2 * 2;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void rangeCheck(org.apache.harmony.luni.platform.PlatformAddress,int,int)>($r0, $i0, $i3);

        $r3 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i3 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $i0 = $i3 + $i0;

        interfaceinvoke $r3.<org.apache.harmony.luni.platform.IMemorySystem: void setShortArray(int,short[],int,int,boolean)>($i0, $r1, $i1, $i2, $z0);

        return;
    }

    public final int toInt()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int i0;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        return i0;
    }

    public final long toLong()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        int $i0;
        long $l1;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $l1 = (long) $i0;

        return $l1;
    }

    public final java.lang.String toString()
    {
        org.apache.harmony.luni.platform.PlatformAddress $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddress;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PlatformAddress[");

        $i0 = $r0.<org.apache.harmony.luni.platform.PlatformAddress: int osaddr>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
