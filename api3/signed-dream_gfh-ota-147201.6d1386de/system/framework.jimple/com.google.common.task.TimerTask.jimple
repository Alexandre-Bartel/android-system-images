public class com.google.common.task.TimerTask extends com.google.common.task.Task
{
    public static final int REPEAT_FOREVER;
    public static final long UNSET_VALUE;
    private int count;
    private long deadline;
    private long delay;
    private boolean isFixedRate;
    private long period;
    private long scheduled;

    public void <init>(com.google.common.task.TaskRunner)
    {
        com.google.common.task.TimerTask $r0;
        com.google.common.task.TaskRunner $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $r1 := @parameter0: com.google.common.task.TaskRunner;

        specialinvoke $r0.<com.google.common.task.TimerTask: void <init>(com.google.common.task.TaskRunner,java.lang.Runnable)>($r1, null);

        return;
    }

    public void <init>(com.google.common.task.TaskRunner, java.lang.Runnable)
    {
        com.google.common.task.TimerTask $r0;
        com.google.common.task.TaskRunner $r1;
        java.lang.Runnable $r2;

        $r0 := @this: com.google.common.task.TimerTask;

        $r1 := @parameter0: com.google.common.task.TaskRunner;

        $r2 := @parameter1: java.lang.Runnable;

        specialinvoke $r0.<com.google.common.task.Task: void <init>(com.google.common.task.TaskRunner,java.lang.Runnable)>($r1, $r2);

        $r0.<com.google.common.task.TimerTask: long delay> = 0L;

        $r0.<com.google.common.task.TimerTask: long deadline> = -1L;

        $r0.<com.google.common.task.TimerTask: long period> = -1L;

        $r0.<com.google.common.task.TimerTask: long scheduled> = -1L;

        $r0.<com.google.common.task.TimerTask: int count> = -1;

        $r0.<com.google.common.task.TimerTask: boolean isFixedRate> = 0;

        return;
    }

    public int cancelInternal()
    {
        com.google.common.task.TimerTask $r0;
        boolean $z0;
        com.google.common.task.TaskRunner $r1;
        int $i0;
        long $l1;
        byte $b2;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.task.TimerTask;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.common.task.AbstractTask: com.google.common.task.TaskRunner runner>;

        $z0 = virtualinvoke $r1.<com.google.common.task.TaskRunner: boolean cancelTaskInternal(com.google.common.task.AbstractTask)>($r0);

        if $z0 == 0 goto label3;

        $r0.<com.google.common.task.TimerTask: long scheduled> = -1L;

        $i0 = $r0.<com.google.common.task.TimerTask: int count>;

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $l1 = $r0.<com.google.common.task.TimerTask: long scheduled>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label5;

        $r0.<com.google.common.task.TimerTask: long scheduled> = -1L;

        $i0 = $r0.<com.google.common.task.TimerTask: int count>;

     label4:
        goto label2;

     label5:
        $i0 = 0;

        goto label2;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public int getRepeatCount()
    {
        com.google.common.task.TimerTask $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: com.google.common.task.TimerTask;

        entermonitor $r0;

     label1:
        i0 = $r0.<com.google.common.task.TimerTask: int count>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getScheduledTime()
    {
        com.google.common.task.TimerTask $r0;
        java.lang.Throwable $r1;
        long l0;

        $r0 := @this: com.google.common.task.TimerTask;

        entermonitor $r0;

     label1:
        l0 = $r0.<com.google.common.task.TimerTask: long scheduled>;

     label2:
        exitmonitor $r0;

        return l0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void runInternal()
    {
        com.google.common.task.TimerTask $r0;
        long $l0, $l3;
        byte $b1;
        com.google.common.task.TaskRunner $r1;
        int $i2;
        java.lang.Throwable $r2, $r3;
        boolean $z0;

        $r0 := @this: com.google.common.task.TimerTask;

        entermonitor $r0;

     label01:
        $l0 = $r0.<com.google.common.task.TimerTask: long period>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label07;

        $r0.<com.google.common.task.TimerTask: long scheduled> = -1L;

     label02:
        exitmonitor $r0;

     label03:
        specialinvoke $r0.<com.google.common.task.AbstractTask: void runInternal()>();

        entermonitor $r0;

     label04:
        $l0 = $r0.<com.google.common.task.TimerTask: long scheduled>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label05;

        $r1 = $r0.<com.google.common.task.AbstractTask: com.google.common.task.TaskRunner runner>;

        virtualinvoke $r1.<com.google.common.task.TaskRunner: void scheduleTask(com.google.common.task.AbstractTask)>($r0);

     label05:
        exitmonitor $r0;

     label06:
        return;

     label07:
        $i2 = $r0.<com.google.common.task.TimerTask: int count>;

        if $i2 <= 0 goto label08;

        $i2 = $r0.<com.google.common.task.TimerTask: int count>;

        $i2 = $i2 - 1;

        $r0.<com.google.common.task.TimerTask: int count> = $i2;

     label08:
        $i2 = $r0.<com.google.common.task.TimerTask: int count>;

        if $i2 != 0 goto label11;

        $r0.<com.google.common.task.TimerTask: long scheduled> = -1L;

        goto label02;

     label09:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r2;

     label11:
        $z0 = $r0.<com.google.common.task.TimerTask: boolean isFixedRate>;

        if $z0 == 0 goto label12;

        $l0 = $r0.<com.google.common.task.TimerTask: long scheduled>;

        $l3 = $r0.<com.google.common.task.TimerTask: long period>;

        $l0 = $l0 + $l3;

        $r0.<com.google.common.task.TimerTask: long scheduled> = $l0;

        goto label02;

     label12:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $r0.<com.google.common.task.TimerTask: long period>;

        $l0 = $l0 + $l3;

        $r0.<com.google.common.task.TimerTask: long scheduled> = $l0;

     label13:
        goto label02;

     label14:
        $r3 := @caughtexception;

     label15:
        exitmonitor $r0;

     label16:
        throw $r3;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label14;
        catch java.lang.Throwable from label07 to label10 with label09;
        catch java.lang.Throwable from label11 to label13 with label09;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void schedule()
    {
        com.google.common.task.TimerTask $r0;
        long $l0, $l3;
        int $i1;
        byte $b2;
        com.google.common.task.TaskRunner $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.task.TimerTask;

        entermonitor $r0;

     label1:
        $i1 = $r0.<com.google.common.task.TimerTask: int count>;

        if $i1 == -1 goto label2;

        $i1 = $r0.<com.google.common.task.TimerTask: int count>;

        if $i1 <= 0 goto label4;

     label2:
        $l0 = $r0.<com.google.common.task.TimerTask: long scheduled>;

        $b2 = $l0 cmp -1L;

        if $b2 != 0 goto label4;

        $l0 = $r0.<com.google.common.task.TimerTask: long deadline>;

        $b2 = $l0 cmp -1L;

        if $b2 != 0 goto label5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $r0.<com.google.common.task.TimerTask: long delay>;

        $l0 = $l0 + $l3;

        $r0.<com.google.common.task.TimerTask: long scheduled> = $l0;

     label3:
        $r1 = $r0.<com.google.common.task.AbstractTask: com.google.common.task.TaskRunner runner>;

        virtualinvoke $r1.<com.google.common.task.TaskRunner: void scheduleTask(com.google.common.task.AbstractTask)>($r0);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $l0 = $r0.<com.google.common.task.TimerTask: long deadline>;

        $l3 = $r0.<com.google.common.task.TimerTask: long delay>;

        $l0 = $l0 + $l3;

        $r0.<com.google.common.task.TimerTask: long scheduled> = $l0;

     label6:
        goto label3;

     label7:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    protected void scheduleInternal()
    {
        com.google.common.task.TimerTask $r0;
        com.google.common.task.TaskRunner $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $r1 = $r0.<com.google.common.task.AbstractTask: com.google.common.task.TaskRunner runner>;

        virtualinvoke $r1.<com.google.common.task.TaskRunner: void scheduleTimerTaskInternal(com.google.common.task.TimerTask)>($r0);

        return;
    }

    public void setDeadline(long)
    {
        com.google.common.task.TimerTask $r0;
        long $l0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.task.TimerTask: long deadline> = $l0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setDelay(long)
    {
        com.google.common.task.TimerTask $r0;
        long $l0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.task.TimerTask: long delay> = $l0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setPeriod(long)
    {
        com.google.common.task.TimerTask $r0;
        long $l0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.task.TimerTask: long period> = $l0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setRepeatCount(int)
    {
        com.google.common.task.TimerTask $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.task.TimerTask: int count> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setRepeatFixedRate(boolean)
    {
        com.google.common.task.TimerTask $r0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.task.TimerTask;

        $z0 := @parameter0: boolean;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.task.TimerTask: boolean isFixedRate> = $z0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.google.common.task.TimerTask: long UNSET_VALUE> = -1L;

        <com.google.common.task.TimerTask: int REPEAT_FOREVER> = -1;

        return;
    }
}
