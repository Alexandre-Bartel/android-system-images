final class com.android.server.WindowManagerService$WindowState extends java.lang.Object implements android.view.WindowManagerPolicy$WindowState
{
    float mAlpha;
    int mAnimLayer;
    boolean mAnimating;
    android.view.animation.Animation mAnimation;
    boolean mAnimationIsEntrance;
    boolean mAppFreezing;
    com.android.server.WindowManagerService$AppWindowToken mAppToken;
    boolean mAttachedHidden;
    final com.android.server.WindowManagerService$WindowState mAttachedWindow;
    final android.view.WindowManager$LayoutParams mAttrs;
    final int mBaseLayer;
    final java.util.ArrayList mChildWindows;
    final android.view.IWindow mClient;
    boolean mCommitDrawPending;
    final android.graphics.Rect mContainingFrame;
    final android.graphics.Rect mContentFrame;
    final android.graphics.Rect mContentInsets;
    boolean mContentInsetsChanged;
    final com.android.server.WindowManagerService$WindowState$DeathRecipient mDeathRecipient;
    boolean mDestroying;
    final android.graphics.Rect mDisplayFrame;
    boolean mDrawPending;
    float mDsDx;
    float mDsDy;
    float mDtDx;
    float mDtDy;
    boolean mEnterAnimationPending;
    boolean mExiting;
    final android.graphics.Rect mFrame;
    final android.graphics.Rect mGivenContentInsets;
    boolean mGivenInsetsPending;
    final android.graphics.Rect mGivenVisibleInsets;
    float mHScale;
    boolean mHasDrawn;
    boolean mHasLocalTransformation;
    boolean mHasTransformation;
    boolean mHaveFrame;
    final boolean mIsImWindow;
    float mLastAlpha;
    final android.graphics.Rect mLastContentInsets;
    float mLastDsDx;
    float mLastDsDy;
    float mLastDtDx;
    float mLastDtDy;
    final android.graphics.Rect mLastFrame;
    float mLastHScale;
    boolean mLastHidden;
    int mLastLayer;
    int mLastRequestedHeight;
    int mLastRequestedWidth;
    final android.graphics.Rect mLastShownFrame;
    float mLastVScale;
    final android.graphics.Rect mLastVisibleInsets;
    int mLayer;
    final boolean mLayoutAttached;
    boolean mLocalAnimating;
    com.android.server.WindowManagerService$WindowState mNextOutsideTouch;
    boolean mOrientationChanging;
    boolean mPolicyVisibility;
    boolean mPolicyVisibilityAfterAnim;
    boolean mReadyToShow;
    boolean mRelayoutCalled;
    boolean mRemoveOnExit;
    boolean mRemoved;
    int mReqXPos;
    int mReqYPos;
    int mRequestedHeight;
    int mRequestedWidth;
    com.android.server.WindowManagerService$WindowToken mRootToken;
    final com.android.server.WindowManagerService$Session mSession;
    float mShownAlpha;
    final android.graphics.Rect mShownFrame;
    final int mSubLayer;
    android.view.Surface mSurface;
    com.android.server.WindowManagerService$AppWindowToken mTargetAppToken;
    final android.graphics.Matrix mTmpMatrix;
    com.android.server.WindowManagerService$WindowToken mToken;
    int mTouchableInsets;
    final android.view.animation.Transformation mTransformation;
    float mVScale;
    int mViewVisibility;
    final android.graphics.Rect mVisibleFrame;
    final android.graphics.Rect mVisibleInsets;
    boolean mVisibleInsetsChanged;
    final com.android.server.WindowManagerService this$0;

    void <init>(com.android.server.WindowManagerService, com.android.server.WindowManagerService$Session, android.view.IWindow, com.android.server.WindowManagerService$WindowToken, com.android.server.WindowManagerService$WindowState, android.view.WindowManager$LayoutParams, int)
    {
        com.android.server.WindowManagerService$WindowState $r0, $r5, $r15;
        com.android.server.WindowManagerService $r1;
        com.android.server.WindowManagerService$Session $r2;
        android.view.IWindow $r3;
        com.android.server.WindowManagerService$WindowToken $r4, $r20;
        android.view.WindowManager$LayoutParams $r6, $r8;
        int $i0;
        com.android.server.WindowManagerService$WindowState$DeathRecipient $r7;
        java.util.ArrayList $r9;
        android.graphics.Rect $r10;
        android.graphics.Matrix $r11;
        android.view.animation.Transformation $r12;
        float $f0;
        android.os.IBinder $r13;
        android.view.WindowManagerPolicy $r14;
        boolean $z0;
        android.os.RemoteException $r16;
        com.android.server.WindowManagerService$AppWindowToken $r17;
        java.util.HashMap $r18;
        java.lang.Object $r19;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 := @parameter0: com.android.server.WindowManagerService;

        $r2 := @parameter1: com.android.server.WindowManagerService$Session;

        $r3 := @parameter2: android.view.IWindow;

        $r4 := @parameter3: com.android.server.WindowManagerService$WindowToken;

        $r5 := @parameter4: com.android.server.WindowManagerService$WindowState;

        $r6 := @parameter5: android.view.WindowManager$LayoutParams;

        $i0 := @parameter6: int;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r8 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r8.<android.view.WindowManager$LayoutParams: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows> = $r9;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim> = 1;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mShownFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastShownFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleInsets> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastVisibleInsets> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentInsets> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastContentInsets> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets> = $r10;

        $r0.<com.android.server.WindowManagerService$WindowState: int mTouchableInsets> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDsDx> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDtDx> = 0.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDsDy> = 0.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDtDy> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastDsDx> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastDtDx> = 0.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastDsDy> = 0.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastDtDy> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mHScale> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mVScale> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastHScale> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastVScale> = 1.0F;

        $r11 = new android.graphics.Matrix;

        specialinvoke $r11.<android.graphics.Matrix: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Matrix mTmpMatrix> = $r11;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContainingFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mDisplayFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentFrame> = $r10;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleFrame> = $r10;

        $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mAlpha> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mLastAlpha> = 1.0F;

        $r12 = new android.view.animation.Transformation;

        specialinvoke $r12.<android.view.animation.Transformation: void <init>()>();

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation> = $r12;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession> = $r2;

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient> = $r3;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken> = $r4;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        virtualinvoke $r8.<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>($r6);

        $r0.<com.android.server.WindowManagerService$WindowState: int mViewVisibility> = $i0;

        $r7 = new com.android.server.WindowManagerService$WindowState$DeathRecipient;

        specialinvoke $r7.<com.android.server.WindowManagerService$WindowState$DeathRecipient: void <init>(com.android.server.WindowManagerService$WindowState,com.android.server.WindowManagerService$1)>($r0, null);

        $f0 = $r6.<android.view.WindowManager$LayoutParams: float alpha>;

        $r0.<com.android.server.WindowManagerService$WindowState: float mAlpha> = $f0;

     label01:
        $r13 = interfaceinvoke $r3.<android.view.IWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

     label02:
        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState$DeathRecipient mDeathRecipient> = $r7;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r8.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 < 1000 goto label11;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r8.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 > 1999 goto label11;

        $r14 = $r1.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r8 = $r5.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r8.<android.view.WindowManager$LayoutParams: int type>;

        $i0 = interfaceinvoke $r14.<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>($i0);

        $i0 = $i0 * 10000;

        $i0 = $i0 + 1000;

        $r0.<com.android.server.WindowManagerService$WindowState: int mBaseLayer> = $i0;

        $r14 = $r1.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        $i0 = interfaceinvoke $r14.<android.view.WindowManagerPolicy: int subWindowTypeToLayerLw(int)>($i0);

        $r0.<com.android.server.WindowManagerService$WindowState: int mSubLayer> = $i0;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow> = $r5;

        $r15 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        $r9 = $r15.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 == 1003 goto label09;

        $z0 = 1;

     label03:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLayoutAttached> = $z0;

        $r6 = $r5.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 == 2011 goto label04;

        $r6 = $r5.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 != 2012 goto label10;

     label04:
        $z0 = 1;

     label05:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mIsImWindow> = $z0;

     label06:
        $r5 = $r0;

     label07:
        $r15 = $r5.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        if $r15 == null goto label15;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        goto label07;

     label08:
        $r16 := @caughtexception;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState$DeathRecipient mDeathRecipient> = null;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow> = null;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLayoutAttached> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mIsImWindow> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mBaseLayer> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mSubLayer> = 0;

        return;

     label09:
        $z0 = 0;

        goto label03;

     label10:
        $z0 = 0;

        goto label05;

     label11:
        $r14 = $r1.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        $i0 = interfaceinvoke $r14.<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>($i0);

        $i0 = $i0 * 10000;

        $i0 = $i0 + 1000;

        $r0.<com.android.server.WindowManagerService$WindowState: int mBaseLayer> = $i0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mSubLayer> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow> = null;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLayoutAttached> = 0;

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 == 2011 goto label12;

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 != 2012 goto label14;

     label12:
        $z0 = 1;

     label13:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mIsImWindow> = $z0;

        goto label06;

     label14:
        $z0 = 0;

        goto label13;

     label15:
        $r4 = $r5.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

     label16:
        $r17 = $r4.<com.android.server.WindowManagerService$WindowToken: com.android.server.WindowManagerService$AppWindowToken appWindowToken>;

        if $r17 != null goto label17;

        $r18 = $r1.<com.android.server.WindowManagerService: java.util.HashMap mTokenMap>;

        $r13 = $r4.<com.android.server.WindowManagerService$WindowToken: android.os.IBinder token>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        $r20 = (com.android.server.WindowManagerService$WindowToken) $r19;

        if $r20 == null goto label17;

        if $r4 != $r20 goto label18;

     label17:
        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mRootToken> = $r4;

        $r17 = $r4.<com.android.server.WindowManagerService$WindowToken: com.android.server.WindowManagerService$AppWindowToken appWindowToken>;

        $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken> = $r17;

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface> = null;

        $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedWidth> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedHeight> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mLastRequestedWidth> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mLastRequestedHeight> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mReqXPos> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mReqYPos> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mLayer> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mAnimLayer> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: int mLastLayer> = 0;

        return;

     label18:
        $r4 = $r20;

        goto label16;

        catch android.os.RemoteException from label01 to label02 with label08;
    }

    void attach()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$Session $r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r1.<com.android.server.WindowManagerService$Session: void windowAddedLocked()>();

        return;
    }

    public final boolean canReceiveKeys()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        boolean $z0;
        int $i0;
        android.view.WindowManager$LayoutParams $r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $z0 = virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: boolean isVisibleOrAdding()>();

        if $z0 == 0 goto label1;

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mViewVisibility>;

        if $i0 != 0 goto label1;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i0 = $i0 & 8;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void clearAnimation()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.view.animation.Animation $r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r1 == null goto label1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation> = null;

        return;

     label1:
        return;
    }

    void commitFinishDrawingLocked(long)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        long $l0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        boolean $z0, $z1;
        android.view.WindowManager$LayoutParams $r2;
        int $i1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $l0 := @parameter0: long;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mReadyToShow> = 1;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 != 3 goto label4;

        $z0 = 1;

     label2:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label3;

        $z1 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean allDrawn>;

        if $z1 != 0 goto label3;

        if $z0 == 0 goto label5;

     label3:
        virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: boolean performShowLocked()>();

        return;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        return;
    }

    public void computeFrameLw(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect $r1, $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.WindowManager$LayoutParams $r5;
        float $f0, $f1, $f2;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.graphics.Rect;

        $r4 := @parameter3: android.graphics.Rect;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHaveFrame> = 1;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i1 = $i0 - $i1;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i2;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r5.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i2 & 16384;

        if $i2 == 0 goto label13;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        if $i2 >= 0 goto label11;

        $i2 = $i1;

     label01:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i3 >= 0 goto label12;

        $i3 = $i0;

     label02:
        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContainingFrame>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mDisplayFrame>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentFrame>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleFrame>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r4);

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i4 = $r5.<android.view.WindowManager$LayoutParams: int gravity>;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i5 = $r5.<android.view.WindowManager$LayoutParams: int x>;

        $f0 = (float) $i5;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $f1 = $r5.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        $f2 = (float) $i1;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $i1 = (int) $f0;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i5 = $r5.<android.view.WindowManager$LayoutParams: int y>;

        $f0 = (float) $i5;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $f1 = $r5.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        $f2 = (float) $i0;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $i0 = (int) $f0;

        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>($i4, $i2, $i3, $r6, $i1, $i0, $r4);

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r5.<android.view.WindowManager$LayoutParams: int gravity>;

        staticinvoke <android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r2, $r4);

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        if $i0 >= $i1 goto label03;

        $i0 = $r4.<android.graphics.Rect: int left>;

        $r1.<android.graphics.Rect: int left> = $i0;

     label03:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        if $i0 >= $i1 goto label04;

        $i0 = $r4.<android.graphics.Rect: int top>;

        $r1.<android.graphics.Rect: int top> = $i0;

     label04:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        if $i0 <= $i1 goto label05;

        $i0 = $r4.<android.graphics.Rect: int right>;

        $r1.<android.graphics.Rect: int right> = $i0;

     label05:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        if $i0 <= $i1 goto label06;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        $r1.<android.graphics.Rect: int bottom> = $i0;

     label06:
        $i0 = $r3.<android.graphics.Rect: int left>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        if $i0 >= $i1 goto label07;

        $i0 = $r4.<android.graphics.Rect: int left>;

        $r3.<android.graphics.Rect: int left> = $i0;

     label07:
        $i0 = $r3.<android.graphics.Rect: int top>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        if $i0 >= $i1 goto label08;

        $i0 = $r4.<android.graphics.Rect: int top>;

        $r3.<android.graphics.Rect: int top> = $i0;

     label08:
        $i0 = $r3.<android.graphics.Rect: int right>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        if $i0 <= $i1 goto label09;

        $i0 = $r4.<android.graphics.Rect: int right>;

        $r3.<android.graphics.Rect: int right> = $i0;

     label09:
        $i0 = $r3.<android.graphics.Rect: int bottom>;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        if $i0 <= $i1 goto label10;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        $r3.<android.graphics.Rect: int bottom> = $i0;

     label10:
        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentInsets>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $r2.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        $r2.<android.graphics.Rect: int top> = $i0;

        $i0 = $r4.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $r2.<android.graphics.Rect: int right> = $i0;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        $r2.<android.graphics.Rect: int bottom> = $i0;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleInsets>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int top> = $i0;

        $i0 = $r4.<android.graphics.Rect: int right>;

        $i1 = $r3.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        $i1 = $r3.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int bottom> = $i0;

        return;

     label11:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        goto label01;

     label12:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        goto label02;

     label13:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        if $i2 != -1 goto label16;

        $i2 = $i1;

     label14:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i3 != -1 goto label17;

        $i3 = $i0;

     label15:
        goto label02;

     label16:
        $i2 = $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedWidth>;

        goto label14;

     label17:
        $i3 = $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedHeight>;

        goto label15;
    }

    void computeShownFrameLocked()
    {
        com.android.server.WindowManagerService$WindowState $r0, $r4;
        android.graphics.Rect $r1, $r11;
        boolean $z0, $z1;
        float[] $r2;
        android.graphics.Matrix $r3, $r10;
        int $i0, $i1, $i2, $i3;
        android.view.animation.Transformation $r5, $r7, $r9;
        com.android.server.WindowManagerService$AppWindowToken $r6;
        com.android.server.WindowManagerService $r8;
        float $f0, $f1, $f2, $f3;
        android.view.WindowManager$LayoutParams $r12;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasLocalTransformation>;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        if $r4 == null goto label10;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        $z1 = $r4.<com.android.server.WindowManagerService$WindowState: boolean mHasLocalTransformation>;

        if $z1 == 0 goto label10;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        $r5 = $r4.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

     label01:
        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r6 == null goto label11;

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $z1 = $r6.<com.android.server.WindowManagerService$AppWindowToken: boolean hasTransformation>;

        if $z1 == 0 goto label11;

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r7 = $r6.<com.android.server.WindowManagerService$AppWindowToken: android.view.animation.Transformation transformation>;

     label02:
        if $z0 != 0 goto label03;

        if $r5 != null goto label03;

        if $r7 == null goto label12;

     label03:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r2 = $r8.<com.android.server.WindowManagerService: float[] mTmpFloats>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Matrix mTmpMatrix>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $f0 = (float) $i1;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $f1 = (float) $i1;

        virtualinvoke $r3.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        if $z0 == 0 goto label04;

        $r9 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        $r10 = virtualinvoke $r9.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r10);

     label04:
        if $r5 == null goto label05;

        $r10 = virtualinvoke $r5.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r10);

     label05:
        if $r7 == null goto label06;

        $r10 = virtualinvoke $r7.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r10);

     label06:
        virtualinvoke $r3.<android.graphics.Matrix: void getValues(float[])>($r2);

        $f0 = $r2[0];

        $r0.<com.android.server.WindowManagerService$WindowState: float mDsDx> = $f0;

        $f0 = $r2[1];

        $r0.<com.android.server.WindowManagerService$WindowState: float mDtDx> = $f0;

        $f0 = $r2[3];

        $r0.<com.android.server.WindowManagerService$WindowState: float mDsDy> = $f0;

        $f0 = $r2[4];

        $r0.<com.android.server.WindowManagerService$WindowState: float mDtDy> = $f0;

        $f0 = $r2[2];

        $i0 = (int) $f0;

        $f0 = $r2[5];

        $i1 = (int) $f0;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i3 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $r11 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mShownFrame>;

        $i2 = $i0 + $i2;

        $i3 = $i1 + $i3;

        virtualinvoke $r11.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mAlpha>;

        $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha> = $f0;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $z1 = $r8.<com.android.server.WindowManagerService: boolean mLimitedAlphaCompositing>;

        if $z1 == 0 goto label07;

        $r12 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r12.<android.view.WindowManager$LayoutParams: int format>;

        $z1 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i3);

        if $z1 == 0 goto label07;

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mDsDx>;

        $f1 = $r0.<com.android.server.WindowManagerService$WindowState: float mDtDx>;

        $f2 = $r0.<com.android.server.WindowManagerService$WindowState: float mDsDy>;

        $f3 = $r0.<com.android.server.WindowManagerService$WindowState: float mDtDy>;

        $z1 = virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: boolean isIdentityMatrix(float,float,float,float)>($f0, $f1, $f2, $f3);

        if $z1 == 0 goto label13;

        $i3 = $r1.<android.graphics.Rect: int left>;

        if $i0 != $i3 goto label14;

        $i0 = $r1.<android.graphics.Rect: int top>;

        if $i1 != $i0 goto label15;

     label07:
        if $z0 == 0 goto label08;

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha>;

        $r9 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        $f1 = virtualinvoke $r9.<android.view.animation.Transformation: float getAlpha()>();

        $f0 = $f0 * $f1;

        $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha> = $f0;

     label08:
        if $r5 == null goto label09;

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha>;

        $f1 = virtualinvoke $r5.<android.view.animation.Transformation: float getAlpha()>();

        $f0 = $f0 * $f1;

        $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha> = $f0;

     label09:
        if $r7 == null goto label16;

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha>;

        $f1 = virtualinvoke $r7.<android.view.animation.Transformation: float getAlpha()>();

        $f0 = $f0 * $f1;

        $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha> = $f0;

        return;

     label10:
        $r5 = null;

        goto label01;

     label11:
        $r7 = null;

        goto label02;

     label12:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mShownFrame>;

        $r11 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mAlpha>;

        $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha> = $f0;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDsDx> = 1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDtDx> = 0.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDsDy> = 0.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: float mDtDy> = 1.0F;

        return;

     label13:
        return;

     label14:
        return;

     label15:
        return;

     label16:
        return;
    }

    android.view.Surface createSurfaceLocked()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.view.Surface $r1;
        com.android.server.WindowManagerService$AppWindowToken $r2;
        short $s0;
        android.view.WindowManager$LayoutParams $r3;
        int $i1, $i2, $i3, $i4;
        android.graphics.Rect $r4;
        com.android.server.WindowManagerService$Session $r5;
        android.view.SurfaceSession $r6;
        android.view.Surface$OutOfResourcesException $r7;
        com.android.server.WindowManagerService $r8;
        java.lang.Exception $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r1 != null goto label14;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mReadyToShow> = 0;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r2 == null goto label01;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r2.<com.android.server.WindowManagerService$AppWindowToken: boolean allDrawn> = 0;

     label01:
        $s0 = 0;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r3.<android.view.WindowManager$LayoutParams: int memoryType>;

        if $i1 != 1 goto label15;

        $s0 = 0 | 16;

     label02:
        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = $i1 & 8192;

        if $i1 == 0 goto label03;

        $s0 = $s0 | 128;

     label03:
        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i1 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i2 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = $i3 & 16384;

        if $i3 == 0 goto label04;

        $i1 = $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedWidth>;

        $i2 = $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedHeight>;

     label04:
        $r1 = new android.view.Surface;

     label05:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        $r6 = $r5.<com.android.server.WindowManagerService$Session: android.view.SurfaceSession mSurfaceSession>;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        $i3 = $r5.<com.android.server.WindowManagerService$Session: int mPid>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i4 = $r3.<android.view.WindowManager$LayoutParams: int format>;

     label06:
        specialinvoke $r1.<android.view.Surface: void <init>(android.view.SurfaceSession,int,int,int,int,int,int)>($r6, $i3, 0, $i1, $i2, $i4, $s0);

     label07:
        $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface> = $r1;

     label08:
        staticinvoke <android.view.Surface: void openTransaction()>();

     label09:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i2 = $r4.<android.graphics.Rect: int left>;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i3 = $r4.<android.graphics.Rect: int top>;

        virtualinvoke $r1.<android.view.Surface: void setPosition(int,int)>($i2, $i3);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        $i2 = $r0.<com.android.server.WindowManagerService$WindowState: int mAnimLayer>;

        virtualinvoke $r1.<android.view.Surface: void setLayer(int)>($i2);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        virtualinvoke $r1.<android.view.Surface: void hide()>();

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

     label10:
        $i2 = $i2 & 4096;

     label11:
        if $i2 == 0 goto label12;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        virtualinvoke $r1.<android.view.Surface: void setFlags(int,int)>(4, 4);

     label12:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLastHidden> = 1;

     label13:
        staticinvoke <android.view.Surface: void closeTransaction()>();

     label14:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        return $r1;

     label15:
        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r3.<android.view.WindowManager$LayoutParams: int memoryType>;

        if $i1 != 2 goto label16;

        $s0 = 0 | 40;

        goto label02;

     label16:
        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r3.<android.view.WindowManager$LayoutParams: int memoryType>;

        if $i1 != 3 goto label02;

        $s0 = 0 | 512;

        goto label02;

     label17:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", "OutOfResourcesException creating surface");

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r8.<com.android.server.WindowManagerService: void reclaimSomeSurfaceMemoryLocked(com.android.server.WindowManagerService$WindowState,java.lang.String)>($r0, "create");

        return null;

     label18:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception creating surface", $r9);

        return null;

     label19:
        $r10 := @caughtexception;

     label20:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating surface in ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r12, $r10);

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r8.<com.android.server.WindowManagerService: void reclaimSomeSurfaceMemoryLocked(com.android.server.WindowManagerService$WindowState,java.lang.String)>($r0, "create-init");

     label21:
        goto label12;

     label22:
        $r13 := @caughtexception;

        staticinvoke <android.view.Surface: void closeTransaction()>();

        throw $r13;

        catch android.view.Surface$OutOfResourcesException from label06 to label07 with label17;
        catch java.lang.Exception from label05 to label08 with label18;
        catch java.lang.RuntimeException from label09 to label10 with label19;
        catch java.lang.RuntimeException from label11 to label12 with label19;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    void destroySurfaceLocked()
    {
        com.android.server.WindowManagerService$WindowState $r0, $r6;
        com.android.server.WindowManagerService $r1;
        com.android.server.WindowManagerService$KeyWaiter $r2;
        com.android.server.WindowManagerService$Session $r3;
        android.view.IWindow $r4;
        com.android.server.WindowManagerService$AppWindowToken $r5;
        android.view.Surface $r7;
        java.util.ArrayList $r8;
        int $i0;
        java.lang.Object $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        virtualinvoke $r2.<com.android.server.WindowManagerService$KeyWaiter: android.view.MotionEvent finishedKey(com.android.server.WindowManagerService$Session,android.view.IWindow,boolean,int)>($r3, $r4, 1, 0);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r2.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingPointerLocked(com.android.server.WindowManagerService$Session)>($r3);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r2.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingTrackballLocked(com.android.server.WindowManagerService$Session)>($r3);

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r5 == null goto label1;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r6 = $r5.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow>;

        if $r0 != $r6 goto label1;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r5.<com.android.server.WindowManagerService$AppWindowToken: boolean startingDisplayed> = 0;

     label1:
        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r7 == null goto label6;

     label2:
        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        virtualinvoke $r7.<android.view.Surface: void clear()>();

     label3:
        $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface> = null;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mReadyToShow> = 0;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label4:
        if $i0 <= 0 goto label7;

        $i0 = $i0 + -1;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.android.server.WindowManagerService$WindowState) $r9;

        $r6.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden> = 1;

        goto label4;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when destroying Window ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" surface ");

        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session ");

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r12);

        goto label3;

     label6:
        return;

     label7:
        return;

        catch java.lang.RuntimeException from label2 to label3 with label5;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.WindowManagerService$WindowState $r0, $r9;
        java.io.PrintWriter $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        com.android.server.WindowManagerService$Session $r5;
        android.view.IWindow $r6;
        android.os.IBinder $r7;
        android.view.WindowManager$LayoutParams $r8;
        boolean $z0;
        int $i0;
        com.android.server.WindowManagerService$AppWindowToken $r10;
        android.view.Surface $r11;
        com.android.server.WindowManagerService$WindowToken $r12;
        android.graphics.Rect $r13;
        float $f0;
        android.view.animation.Animation $r14;
        android.view.animation.Transformation $r15;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 := @parameter0: java.io.PrintWriter;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSession=");

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mClient=");

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        $r7 = interfaceinvoke $r6.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAttrs=");

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAttachedWindow=");

        $r9 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLayoutAttached=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mLayoutAttached>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsImWindow=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mIsImWindow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBaseLayer=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mBaseLayer>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSubLayer=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mSubLayer>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAnimLayer=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mLayer>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r10 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mTargetAppToken>;

        if $r10 == null goto label2;

        $r10 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mTargetAppToken>;

        $i0 = $r10.<com.android.server.WindowManagerService$AppWindowToken: int animLayerAdjustment>;

     label1:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mAnimLayer>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastLayer=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mLastLayer>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSurface=");

        $r11 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mToken=");

        $r12 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRootToken=");

        $r12 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mRootToken>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAppToken=");

        $r10 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTargetAppToken=");

        $r10 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mTargetAppToken>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mViewVisibility=0x");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mViewVisibility>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPolicyVisibility=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (after=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") mAttachedHidden=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastHidden=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mLastHidden>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHaveFrame=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHaveFrame>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested w=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedWidth>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" h=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mRequestedHeight>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mReqXPos>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mReqYPos>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mGivenContentInsets=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGivenVisibleInsets=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTouchableInsets=");

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mTouchableInsets>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mGivenInsetsPending>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mShownFrame=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mShownFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" last=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastShownFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFrame=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" last=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mContainingFrame=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContainingFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDisplayFrame=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mDisplayFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mContentFrame=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVisibleFrame=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleFrame>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mContentInsets=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentInsets>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" last=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastContentInsets>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVisibleInsets=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleInsets>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" last=");

        $r13 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mLastVisibleInsets>;

        $r4 = virtualinvoke $r13.<android.graphics.Rect: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mShownAlpha=");

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mShownAlpha>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAlpha=");

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mAlpha>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastAlpha=");

        $f0 = $r0.<com.android.server.WindowManagerService$WindowState: float mLastAlpha>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAnimating=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLocalAnimating=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAnimationIsEntrance=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimationIsEntrance>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAnimation=");

        $r14 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XForm: has=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasTransformation>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        $r4 = virtualinvoke $r15.<android.view.animation.Transformation: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDrawPending=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCommitDrawPending=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReadyToShow=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mReadyToShow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHasDrawn=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasDrawn>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mExiting=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRemoveOnExit=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mRemoveOnExit>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDestroying=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRemoved=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mRemoved>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOrientationChanging=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mOrientationChanging>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAppFreezing=");

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAppFreezing>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;

     label2:
        $r10 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r10 == null goto label3;

        $r10 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $i0 = $r10.<com.android.server.WindowManagerService$AppWindowToken: int animLayerAdjustment>;

        goto label1;

     label3:
        $i0 = 0;

        goto label1;
    }

    public boolean fillsScreenLw(int, int, boolean, boolean)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        android.view.Surface $r1;
        com.android.server.WindowManagerService$AppWindowToken $r2;
        android.view.WindowManager$LayoutParams $r3;
        android.graphics.Rect $r4;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $z2 = $r2.<com.android.server.WindowManagerService$AppWindowToken: boolean appFullscreen>;

        if $z2 != 0 goto label2;

        return 0;

     label2:
        if $z1 == 0 goto label3;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r3.<android.view.WindowManager$LayoutParams: int format>;

        if $i2 == -1 goto label3;

        return 0;

     label3:
        if $z0 == 0 goto label5;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mShownFrame>;

     label4:
        $i2 = $r4.<android.graphics.Rect: int left>;

        if $i2 > 0 goto label6;

        $i2 = $r4.<android.graphics.Rect: int top>;

        if $i2 > 0 goto label6;

        $i2 = $r4.<android.graphics.Rect: int right>;

        if $i2 < $i0 goto label6;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label6;

        return 1;

     label5:
        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        goto label4;

     label6:
        return 0;
    }

    boolean finishDrawingLocked()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending>;

        if $z0 == 0 goto label1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending> = 0;

        return 1;

     label1:
        return 0;
    }

    void finishExit()
    {
        com.android.server.WindowManagerService$WindowState $r0, $r3;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;
        android.view.Surface $r4;
        com.android.server.WindowManagerService $r5;
        com.android.server.WindowManagerService$KeyWaiter $r6;
        com.android.server.WindowManagerService$Session $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.android.server.WindowManagerService$WindowState) $r2;

        virtualinvoke $r3.<com.android.server.WindowManagerService$WindowState: void finishExit()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting>;

        if $z0 != 0 goto label3;

        return;

     label3:
        $z0 = virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: boolean isWindowAnimating()>();

        if $z0 != 0 goto label8;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r4 == null goto label6;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r1 = $r5.<com.android.server.WindowManagerService: java.util.ArrayList mDestroySurface>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying> = 1;

     label4:
        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        virtualinvoke $r4.<android.view.Surface: void hide()>();

     label5:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLastHidden> = 1;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r6 = $r5.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r6.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingPointerLocked(com.android.server.WindowManagerService$Session)>($r7);

     label6:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting> = 0;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mRemoveOnExit>;

        if $z0 == 0 goto label9;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r1 = $r5.<com.android.server.WindowManagerService: java.util.ArrayList mPendingRemove>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mRemoveOnExit> = 0;

        return;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error hiding surface in ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r10, $r8);

        goto label5;

     label8:
        return;

     label9:
        return;

        catch java.lang.RuntimeException from label4 to label5 with label7;
    }

    public android.view.WindowManagerPolicy$WindowState getAppStartingWindow()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow>;

        return $r0;

     label1:
        return null;
    }

    public android.view.IApplicationToken getAppToken()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.IApplicationToken r2;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        r2 = $r1.<com.android.server.WindowManagerService$AppWindowToken: android.view.IApplicationToken appToken>;

        return r2;

     label1:
        return null;
    }

    public android.view.WindowManager$LayoutParams getAttrs()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.view.WindowManager$LayoutParams r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        return r1;
    }

    public android.graphics.Rect getContentFrameLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mContentFrame>;

        return r1;
    }

    public android.graphics.Rect getDisplayFrameLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mDisplayFrame>;

        return r1;
    }

    public android.graphics.Rect getFrameLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        return r1;
    }

    public android.graphics.Rect getGivenContentInsetsLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets>;

        return r1;
    }

    public boolean getGivenInsetsPendingLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        boolean z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mGivenInsetsPending>;

        return z0;
    }

    public android.graphics.Rect getGivenVisibleInsetsLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets>;

        return r1;
    }

    public android.graphics.Rect getShownFrameLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mShownFrame>;

        return r1;
    }

    public int getSurfaceLayer()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        int i0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mLayer>;

        return i0;
    }

    public android.graphics.Rect getVisibleFrameLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.graphics.Rect r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mVisibleFrame>;

        return r1;
    }

    public boolean hasAppShownWindows()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        boolean z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean firstWindowDrawn>;

        return z0;

     label1:
        return 0;
    }

    public boolean hasAppStartingIcon()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        com.android.server.WindowManagerService$StartingData $r2;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r2 = $r1.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData>;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    public boolean hasDrawnLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        boolean z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasDrawn>;

        return z0;
    }

    public boolean hideLw(boolean)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        boolean $z0, $z1;
        com.android.server.WindowManagerService $r1;
        android.view.animation.Animation $r2;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label4;

        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim>;

     label1:
        if $z1 == 0 goto label6;

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: boolean access$1700(com.android.server.WindowManagerService,com.android.server.WindowManagerService$WindowState,int,boolean)>($r1, $r0, 2, 0);

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r2 != null goto label2;

        $z0 = 0;

     label2:
        if $z0 == 0 goto label5;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim> = 0;

     label3:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r1.<com.android.server.WindowManagerService: void requestAnimationLocked(long)>(0L);

        return 1;

     label4:
        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        goto label1;

     label5:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility> = 0;

        goto label3;

     label6:
        return 0;
    }

    boolean isAnimating()
    {
        com.android.server.WindowManagerService$WindowState $r0, $r2;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.animation.Animation $r3;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r3 != null goto label2;

        if $r2 == null goto label1;

        $r3 = $r2.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r3 != null goto label2;

     label1:
        if $r1 == null goto label3;

        $r3 = $r1.<com.android.server.WindowManagerService$AppWindowToken: android.view.animation.Animation animation>;

        if $r3 != null goto label2;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean inPendingTransaction>;

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean isDisplayedLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.Surface $r2;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending>;

        if $z0 != 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending>;

        if $z0 != 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 != 0 goto label1;

        if $r1 == null goto label2;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean hiddenRequested>;

        if $z0 == 0 goto label2;

     label1:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating>;

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    boolean isFullscreenOpaque(int, int)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        int $i0, $i1, $i2;
        android.view.WindowManager$LayoutParams $r1;
        android.view.Surface $r2;
        android.view.animation.Animation $r3;
        boolean $z0;
        android.graphics.Rect $r4;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r1.<android.view.WindowManager$LayoutParams: int format>;

        if $i2 != -1 goto label1;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r3 != null goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending>;

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i2 = $r4.<android.graphics.Rect: int left>;

        if $i2 > 0 goto label3;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i2 = $r4.<android.graphics.Rect: int top>;

        if $i2 > 0 goto label3;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i2 = $r4.<android.graphics.Rect: int right>;

        if $i2 < $i0 goto label3;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    boolean isIdentityMatrix(float, float, float, float)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        float $f0, $f1, $f2, $f3;
        byte $b0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $b0 = $f0 cmpg 0.99999F;

        if $b0 < 0 goto label1;

        $b0 = $f0 cmpl 1.00001F;

        if $b0 <= 0 goto label2;

     label1:
        return 0;

     label2:
        $b0 = $f3 cmpg 0.99999F;

        if $b0 < 0 goto label3;

        $b0 = $f3 cmpl 1.00001F;

        if $b0 <= 0 goto label4;

     label3:
        return 0;

     label4:
        $b0 = $f1 cmpg -1.0E-6F;

        if $b0 < 0 goto label5;

        $b0 = $f1 cmpl 1.0E-6F;

        if $b0 <= 0 goto label6;

     label5:
        return 0;

     label6:
        $b0 = $f2 cmpg -1.0E-6F;

        if $b0 < 0 goto label7;

        $b0 = $f2 cmpl 1.0E-6F;

        if $b0 <= 0 goto label8;

     label7:
        return 0;

     label8:
        return 1;
    }

    boolean isOnScreen()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.Surface $r2;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label4;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 != 0 goto label1;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean hiddenRequested>;

        if $z0 == 0 goto label2;

     label1:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating>;

        if $z0 != 0 goto label2;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean animating>;

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label6;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label6;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label6;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 == 0 goto label5;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating>;

        if $z0 == 0 goto label6;

     label5:
        return 1;

     label6:
        return 0;
    }

    boolean isReadyForDisplay()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        boolean $z0, $z1;
        android.view.Surface $r2;
        com.android.server.WindowManagerService$WindowToken $r3;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r1 == null goto label4;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean animating>;

     label1:
        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label5;

        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label5;

        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z1 != 0 goto label5;

        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z1 != 0 goto label2;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mRootToken>;

        $z1 = $r3.<com.android.server.WindowManagerService$WindowToken: boolean hidden>;

        if $z1 == 0 goto label3;

     label2:
        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating>;

        if $z1 != 0 goto label3;

        if $z0 == 0 goto label5;

     label3:
        return 1;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        return 0;
    }

    public boolean isVisibleLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.Surface $r2;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label2;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label2;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 != 0 goto label2;

        if $r1 == null goto label1;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean hiddenRequested>;

        if $z0 != 0 goto label2;

     label1:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting>;

        if $z0 != 0 goto label2;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isVisibleNow()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.view.Surface $r1;
        boolean $z0;
        com.android.server.WindowManagerService$WindowToken $r2;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mRootToken>;

        $z0 = $r2.<com.android.server.WindowManagerService$WindowToken: boolean hidden>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isVisibleOrAdding()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.Surface $r2;
        boolean $z0;
        int $i0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 != null goto label1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mRelayoutCalled>;

        if $z0 != 0 goto label3;

        $i0 = $r0.<com.android.server.WindowManagerService$WindowState: int mViewVisibility>;

        if $i0 != 0 goto label3;

     label1:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 != 0 goto label3;

        if $r1 == null goto label2;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean hiddenRequested>;

        if $z0 != 0 goto label3;

     label2:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting>;

        if $z0 != 0 goto label3;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean isWinVisibleLw()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        com.android.server.WindowManagerService$AppWindowToken $r1;
        android.view.Surface $r2;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r2 == null goto label2;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z0 == 0 goto label2;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 != 0 goto label2;

        if $r1 == null goto label1;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean hiddenRequested>;

        if $z0 == 0 goto label1;

        $z0 = $r1.<com.android.server.WindowManagerService$AppWindowToken: boolean animating>;

        if $z0 == 0 goto label2;

     label1:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mExiting>;

        if $z0 != 0 goto label2;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDestroying>;

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isWindowAnimating()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.view.animation.Animation $r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean performShowLocked()
    {
        com.android.server.WindowManagerService$WindowState $r0, $r4;
        boolean $z0;
        com.android.server.WindowManagerService $r1;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r3;
        android.view.Surface $r5;
        android.view.WindowManager$LayoutParams $r6;
        com.android.server.WindowManagerService$AppWindowToken $r7;
        android.view.animation.Animation $r8;
        com.android.server.WindowManagerService$StartingData $r9;
        com.android.server.WindowManagerService$H $r10;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mReadyToShow>;

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: boolean isReadyForDisplay()>();

        if $z0 == 0 goto label5;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $z0 = virtualinvoke $r1.<com.android.server.WindowManagerService: boolean showSurfaceRobustlyLocked(com.android.server.WindowManagerService$WindowState)>($r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r0.<com.android.server.WindowManagerService$WindowState: float mLastAlpha> = -1.0F;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasDrawn> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLastHidden> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mReadyToShow> = 0;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r1.<com.android.server.WindowManagerService: void enableScreenIfNeededLocked()>();

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$1600(com.android.server.WindowManagerService,com.android.server.WindowManagerService$WindowState)>($r1, $r0);

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label2:
        if $i0 <= 0 goto label3;

        $i0 = $i0 + -1;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.WindowManagerService$WindowState) $r3;

        $r5 = $r4.<com.android.server.WindowManagerService$WindowState: android.view.Surface mSurface>;

        if $r5 == null goto label2;

        $z0 = $r4.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden>;

        if $z0 == 0 goto label2;

        $r4.<com.android.server.WindowManagerService$WindowState: boolean mAttachedHidden> = 0;

        virtualinvoke $r4.<com.android.server.WindowManagerService$WindowState: boolean performShowLocked()>();

        goto label2;

     label3:
        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 == 3 goto label5;

        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r7 == null goto label5;

        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r7.<com.android.server.WindowManagerService$AppWindowToken: boolean firstWindowDrawn> = 1;

        $r8 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r8 != null goto label4;

        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r9 = $r7.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData>;

        if $r9 == null goto label4;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r10 = $r1.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$H mH>;

        virtualinvoke $r10.<android.os.Handler: boolean sendEmptyMessage(int)>(7);

     label4:
        $r7 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        virtualinvoke $r7.<com.android.server.WindowManagerService$AppWindowToken: void updateReportedVisibilityLocked()>();

     label5:
        return 1;
    }

    void removeLocked()
    {
        com.android.server.WindowManagerService$WindowState $r0, $r3;
        com.android.server.WindowManagerService$WindowState$DeathRecipient $r1;
        android.os.IBinder $r2;
        java.util.ArrayList $r4;
        com.android.server.WindowManagerService$Session $r5;
        android.view.IWindow $r6;
        java.lang.RuntimeException $r7;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mAttachedWindow>;

        $r4 = $r3.<com.android.server.WindowManagerService$WindowState: java.util.ArrayList mChildWindows>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r0);

     label1:
        virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: void destroySurfaceLocked()>();

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r5.<com.android.server.WindowManagerService$Session: void windowRemovedLocked()>();

     label2:
        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        $r2 = interfaceinvoke $r6.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r1, 0);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setAnimation(android.view.animation.Animation)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        android.view.animation.Animation $r1;
        com.android.server.WindowManagerService $r2;
        float $f0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 := @parameter0: android.view.animation.Animation;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation> = $r1;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        virtualinvoke $r1.<android.view.animation.Animation: void restrictDuration(long)>(10000L);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $f0 = $r2.<com.android.server.WindowManagerService: float mWindowAnimationScale>;

        virtualinvoke $r1.<android.view.animation.Animation: void scaleCurrentDuration(float)>($f0);

        return;
    }

    public boolean showLw(boolean)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        boolean $z0, $z1;
        com.android.server.WindowManagerService $r1;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility>;

        if $z1 == 0 goto label1;

        $z1 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim>;

        if $z1 != 0 goto label3;

     label1:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim> = 1;

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: boolean access$1700(com.android.server.WindowManagerService,com.android.server.WindowManagerService$WindowState,int,boolean)>($r1, $r0, 1, 1);

     label2:
        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r1.<com.android.server.WindowManagerService: void requestAnimationLocked(long)>(0L);

        return 1;

     label3:
        return 0;
    }

    boolean stepAnimationLocked(long, int, int)
    {
        com.android.server.WindowManagerService$WindowState $r0;
        long $l0;
        int $i1, $i2, $i3, $i4;
        com.android.server.WindowManagerService $r1;
        boolean $z0;
        android.view.animation.Animation $r2;
        android.graphics.Rect $r3;
        android.view.animation.Transformation $r4;
        com.android.server.WindowManagerService$AppWindowToken $r5;
        android.view.WindowManager$LayoutParams $r6;
        com.android.server.WindowManagerService$StartingData $r7;
        java.util.ArrayList $r8;
        com.android.server.WindowManagerService$H $r9;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $z0 = $r1.<com.android.server.WindowManagerService: boolean mDisplayFrozen>;

        if $z0 != 0 goto label08;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mDrawPending>;

        if $z0 != 0 goto label03;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mCommitDrawPending>;

        if $z0 != 0 goto label03;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r2 == null goto label03;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasTransformation> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasLocalTransformation> = 1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating>;

        if $z0 != 0 goto label01;

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i3 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i4 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        virtualinvoke $r2.<android.view.animation.Animation: void initialize(int,int,int,int)>($i3, $i4, $i1, $i2);

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        virtualinvoke $r2.<android.view.animation.Animation: void setStartTime(long)>($l0);

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 1;

     label01:
        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r4.<android.view.animation.Transformation: void clear()>();

        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        $z0 = virtualinvoke $r2.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>($l0, $r4);

        if $z0 == 0 goto label02;

        return 1;

     label02:
        $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation> = null;

     label03:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasLocalTransformation> = 0;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating>;

        if $z0 == 0 goto label04;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimationIsEntrance>;

        if $z0 == 0 goto label05;

     label04:
        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r5 == null goto label05;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $z0 = $r5.<com.android.server.WindowManagerService$AppWindowToken: boolean hasTransformation>;

        if $z0 == 0 goto label05;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasTransformation> = 1;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r4.<android.view.animation.Transformation: void clear()>();

        return 0;

     label05:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasTransformation>;

        if $z0 == 0 goto label07;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 1;

     label06:
        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating>;

        if $z0 != 0 goto label09;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating>;

        if $z0 != 0 goto label09;

        return 0;

     label07:
        $z0 = virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: boolean isAnimating()>();

        if $z0 == 0 goto label06;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 1;

        goto label06;

     label08:
        $r2 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation>;

        if $r2 == null goto label06;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating> = 1;

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation> = null;

        goto label06;

     label09:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mAnimating> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mLocalAnimating> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Animation mAnimation> = null;

        $i1 = $r0.<com.android.server.WindowManagerService$WindowState: int mLayer>;

        $r0.<com.android.server.WindowManagerService$WindowState: int mAnimLayer> = $i1;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mIsImWindow>;

        if $z0 == 0 goto label10;

        $i1 = $r0.<com.android.server.WindowManagerService$WindowState: int mAnimLayer>;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $i2 = $r1.<com.android.server.WindowManagerService: int mInputMethodAnimLayerAdjustment>;

        $i1 = $i1 + $i2;

        $r0.<com.android.server.WindowManagerService$WindowState: int mAnimLayer> = $i1;

     label10:
        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasTransformation> = 0;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasLocalTransformation> = 0;

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibilityAfterAnim>;

        $r0.<com.android.server.WindowManagerService$WindowState: boolean mPolicyVisibility> = $z0;

        $r4 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r4.<android.view.animation.Transformation: void clear()>();

        $z0 = $r0.<com.android.server.WindowManagerService$WindowState: boolean mHasDrawn>;

        if $z0 == 0 goto label11;

        $r6 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r6.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 != 3 goto label11;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r5 == null goto label11;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $z0 = $r5.<com.android.server.WindowManagerService$AppWindowToken: boolean firstWindowDrawn>;

        if $z0 == 0 goto label11;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        $r7 = $r5.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData>;

        if $r7 == null goto label11;

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r8 = $r1.<com.android.server.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r1 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService this$0>;

        $r9 = $r1.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$H mH>;

        virtualinvoke $r9.<android.os.Handler: boolean sendEmptyMessage(int)>(7);

     label11:
        virtualinvoke $r0.<com.android.server.WindowManagerService$WindowState: void finishExit()>();

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        if $r5 == null goto label12;

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

        virtualinvoke $r5.<com.android.server.WindowManagerService$AppWindowToken: void updateReportedVisibilityLocked()>();

     label12:
        return 0;
    }

    public java.lang.String toString()
    {
        com.android.server.WindowManagerService$WindowState $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        android.view.WindowManager$LayoutParams $r3;
        java.lang.CharSequence $r4;
        com.android.server.WindowManagerService$WindowToken $r5;
        boolean $z0;

        $r0 := @this: com.android.server.WindowManagerService$WindowState;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = $r0.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r4 = virtualinvoke $r3.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" paused=");

        $r5 = $r0.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $z0 = $r5.<com.android.server.WindowManagerService$WindowToken: boolean paused>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
