public class org.apache.http.message.BasicLineFormatter extends java.lang.Object implements org.apache.http.message.LineFormatter
{
    public static final org.apache.http.message.BasicLineFormatter DEFAULT;

    static void <clinit>()
    {
        org.apache.http.message.BasicLineFormatter $r0;

        $r0 = new org.apache.http.message.BasicLineFormatter;

        specialinvoke $r0.<org.apache.http.message.BasicLineFormatter: void <init>()>();

        <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.message.BasicLineFormatter $r0;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String formatHeader(org.apache.http.Header, org.apache.http.message.LineFormatter)
    {
        org.apache.http.Header $r0;
        org.apache.http.message.LineFormatter $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.http.Header;

        $r1 := @parameter1: org.apache.http.message.LineFormatter;

        if $r1 != null goto label1;

        $r1 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header)>(null, $r0);

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static final java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion, org.apache.http.message.LineFormatter)
    {
        org.apache.http.ProtocolVersion $r0;
        org.apache.http.message.LineFormatter $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.http.ProtocolVersion;

        $r1 := @parameter1: org.apache.http.message.LineFormatter;

        if $r1 != null goto label1;

        $r1 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion)>(null, $r0);

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static final java.lang.String formatRequestLine(org.apache.http.RequestLine, org.apache.http.message.LineFormatter)
    {
        org.apache.http.RequestLine $r0;
        org.apache.http.message.LineFormatter $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.http.RequestLine;

        $r1 := @parameter1: org.apache.http.message.LineFormatter;

        if $r1 != null goto label1;

        $r1 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine)>(null, $r0);

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static final java.lang.String formatStatusLine(org.apache.http.StatusLine, org.apache.http.message.LineFormatter)
    {
        org.apache.http.StatusLine $r0;
        org.apache.http.message.LineFormatter $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.http.StatusLine;

        $r1 := @parameter1: org.apache.http.message.LineFormatter;

        if $r1 != null goto label1;

        $r1 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine)>(null, $r0);

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r3;
    }

    public org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.ProtocolVersion)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1, $r4;
        org.apache.http.ProtocolVersion $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        java.lang.String $r5;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.ProtocolVersion;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Protocol version may not be null");

        throw $r3;

     label1:
        $r4 = $r1;

        $i0 = virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: int estimateProtocolVersionLen(org.apache.http.ProtocolVersion)>($r2);

        if $r1 != null goto label3;

        $r4 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r4.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i0);

     label2:
        $r5 = virtualinvoke $r2.<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>();

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(char)>(47);

        $i0 = virtualinvoke $r2.<org.apache.http.ProtocolVersion: int getMajor()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(char)>(46);

        $i0 = virtualinvoke $r2.<org.apache.http.ProtocolVersion: int getMinor()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        return $r4;

     label3:
        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>($i0);

        goto label2;
    }

    protected void doFormatHeader(org.apache.http.util.CharArrayBuffer, org.apache.http.Header)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.Header $r2;
        java.lang.String $r3, $r4;
        int $i0, $i1;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.Header;

        $r3 = interfaceinvoke $r2.<org.apache.http.Header: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<org.apache.http.Header: java.lang.String getValue()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + 2;

        if $r4 == null goto label1;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

     label1:
        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>($i0);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        if $r4 == null goto label2;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        return;

     label2:
        return;
    }

    protected void doFormatRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.RequestLine)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.RequestLine $r2;
        int $i0, $i1;
        java.lang.String $r3, $r4;
        org.apache.http.ProtocolVersion $r5;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.RequestLine;

        $r3 = interfaceinvoke $r2.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $r4 = interfaceinvoke $r2.<org.apache.http.RequestLine: java.lang.String getUri()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 1;

        $r5 = interfaceinvoke $r2.<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $i1 = virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: int estimateProtocolVersionLen(org.apache.http.ProtocolVersion)>($r5);

        $i0 = $i0 + $i1;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>($i0);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(32);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(32);

        $r5 = interfaceinvoke $r2.<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion)>($r1, $r5);

        return;
    }

    protected void doFormatStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.StatusLine)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.StatusLine $r2;
        org.apache.http.ProtocolVersion $r3;
        int $i0, $i1;
        java.lang.String $r4, $r5;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.StatusLine;

        $r3 = interfaceinvoke $r2.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $i0 = virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: int estimateProtocolVersionLen(org.apache.http.ProtocolVersion)>($r3);

        $i0 = $i0 + 1;

        $i0 = $i0 + 3;

        $i0 = $i0 + 1;

        $r4 = interfaceinvoke $r2.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        if $r4 == null goto label1;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

     label1:
        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion)>($r1, $r3);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(32);

        $i0 = interfaceinvoke $r2.<org.apache.http.StatusLine: int getStatusCode()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(32);

        if $r4 == null goto label2;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        return;

     label2:
        return;
    }

    protected int estimateProtocolVersionLen(org.apache.http.ProtocolVersion)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.ProtocolVersion $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.ProtocolVersion;

        $r2 = virtualinvoke $r1.<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + 4;

        return $i0;
    }

    public org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer, org.apache.http.Header)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.Header $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        org.apache.http.FormattedHeader $r4;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.Header;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r3;

     label1:
        $z0 = $r2 instanceof org.apache.http.FormattedHeader;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.http.FormattedHeader) $r2;

        $r1 = interfaceinvoke $r4.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        return $r1;

     label2:
        $r1 = virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer)>($r1);

        virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header)>($r1, $r2);

        return $r1;
    }

    public org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.RequestLine)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.RequestLine $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.RequestLine;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request line may not be null");

        throw $r3;

     label1:
        $r1 = virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer)>($r1);

        virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine)>($r1, $r2);

        return $r1;
    }

    public org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.StatusLine)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.StatusLine $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 := @parameter1: org.apache.http.StatusLine;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Status line may not be null");

        throw $r3;

     label1:
        $r1 = virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer)>($r1);

        virtualinvoke $r0.<org.apache.http.message.BasicLineFormatter: void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine)>($r1, $r2);

        return $r1;
    }

    protected org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer)
    {
        org.apache.http.message.BasicLineFormatter $r0;
        org.apache.http.util.CharArrayBuffer $r1;

        $r0 := @this: org.apache.http.message.BasicLineFormatter;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        if $r1 == null goto label1;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void clear()>();

        return $r1;

     label1:
        $r1 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r1.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(64);

        return $r1;
    }
}
