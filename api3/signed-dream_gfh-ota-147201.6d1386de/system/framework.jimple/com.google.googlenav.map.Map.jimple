public class com.google.googlenav.map.Map extends java.lang.Object implements com.google.map.GoogleMap
{
    private static final int CHINA_MAP_MAX_ZOOM;
    private static final int DEFAULT_MAP_MAX_ZOOM;
    private static final int E6;
    private static final int E6_360;
    private static final int INFO_RECORD_FORMAT_VERSION;
    private static final java.lang.String INFO_RECORD_STORE_NAME;
    private static final int JAPAN_MAP_MAX_ZOOM;
    private static final int JAPAN_MAX_INITIAL_ZOOM;
    private static final int KOREA_MAP_MAX_ZOOM;
    private static final int KOREA_SATELLITE_MAP_MAX_ZOOM;
    private static final int MAX_INITIAL_ZOOM;
    private static final long MAX_PAINT_TIME;
    protected static int MAX_PRELOAD_MAP_TILES;
    protected static int MAX_PRELOAD_SAT_TILES;
    private static final int PRECACHE_BASE_PRIORITY;
    private static final int SATELLITE_FLAG;
    private static final java.lang.String TILE_RECORD_STORE_NAME;
    private final com.google.googlenav.map.MapBiller biller;
    private int centerPixelX;
    private int centerPixelY;
    private int completeTilesInViewport;
    private int displayHeight;
    private int displayWidth;
    private long earliestTileNeededTime;
    private int halfHeight;
    private int halfWidth;
    private boolean isViewportAllNew;
    private long lastPaintStartTime;
    private final java.util.Vector layerServices;
    private final com.google.googlenav.map.MapService mapService;
    private com.google.map.MapState mapState;
    private boolean running;
    private com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer;
    private com.google.googlenav.map.Tile[] tiles;
    private com.google.googlenav.map.Tile topLeftTile;
    private int xTiles;
    private int yTiles;

    static void <clinit>()
    {
        <com.google.googlenav.map.Map: java.lang.String TILE_RECORD_STORE_NAME> = "Tiles";

        <com.google.googlenav.map.Map: int SATELLITE_FLAG> = 1;

        <com.google.googlenav.map.Map: int PRECACHE_BASE_PRIORITY> = 8000000;

        <com.google.googlenav.map.Map: long MAX_PAINT_TIME> = 500L;

        <com.google.googlenav.map.Map: int MAX_INITIAL_ZOOM> = 15;

        <com.google.googlenav.map.Map: int KOREA_SATELLITE_MAP_MAX_ZOOM> = 17;

        <com.google.googlenav.map.Map: int KOREA_MAP_MAX_ZOOM> = 18;

        <com.google.googlenav.map.Map: int JAPAN_MAX_INITIAL_ZOOM> = 16;

        <com.google.googlenav.map.Map: int JAPAN_MAP_MAX_ZOOM> = 20;

        <com.google.googlenav.map.Map: java.lang.String INFO_RECORD_STORE_NAME> = "Map info";

        <com.google.googlenav.map.Map: int INFO_RECORD_FORMAT_VERSION> = 2;

        <com.google.googlenav.map.Map: int E6_360> = 360000000;

        <com.google.googlenav.map.Map: int E6> = 1000000;

        <com.google.googlenav.map.Map: int DEFAULT_MAP_MAX_ZOOM> = 19;

        <com.google.googlenav.map.Map: int CHINA_MAP_MAX_ZOOM> = 18;

        <com.google.googlenav.map.Map: int MAX_PRELOAD_MAP_TILES> = 38;

        <com.google.googlenav.map.Map: int MAX_PRELOAD_SAT_TILES> = 24;

        return;
    }

    public void <init>(int, int, int, com.google.map.MapPoint, com.google.map.Zoom, int)
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i1, $i2, $i3;
        com.google.map.MapPoint $r1;
        com.google.map.Zoom $r2, $r3;
        java.util.Vector $r4;
        com.google.googlenav.map.MapBiller $r5;
        com.google.googlenav.map.MapService $r6;
        com.google.map.MapState $r7;

        $r0 := @this: com.google.googlenav.map.Map;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: com.google.map.MapPoint;

        $r2 := @parameter4: com.google.map.Zoom;

        $i3 := @parameter5: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices> = $r4;

        $r0.<com.google.googlenav.map.Map: int displayHeight> = 0;

        $r0.<com.google.googlenav.map.Map: int displayWidth> = 0;

        $r0.<com.google.googlenav.map.Map: int halfWidth> = 0;

        $r0.<com.google.googlenav.map.Map: int halfHeight> = 0;

        $r0.<com.google.googlenav.map.Map: int xTiles> = 0;

        $r0.<com.google.googlenav.map.Map: int yTiles> = 0;

        $r0.<com.google.googlenav.map.Map: int completeTilesInViewport> = 0;

        $r5 = new com.google.googlenav.map.MapBiller;

        specialinvoke $r5.<com.google.googlenav.map.MapBiller: void <init>()>();

        $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapBiller biller> = $r5;

        $r6 = new com.google.googlenav.map.MapService;

        specialinvoke $r6.<com.google.googlenav.map.MapService: void <init>(int,int,int,int,java.lang.String)>($i0, $i1, $i2, $i3, "Tiles");

        $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService> = $r6;

        $r7 = new com.google.map.MapState;

        $r3 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>(3);

        specialinvoke $r7.<com.google.map.MapState: void <init>(com.google.map.MapPoint,com.google.map.Zoom,boolean)>($r1, $r3, 0);

        $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState> = $r7;

        specialinvoke $r0.<com.google.googlenav.map.Map: void load(com.google.map.MapPoint,com.google.map.Zoom)>($r1, $r2);

        $r0.<com.google.googlenav.map.Map: boolean running> = 1;

        return;
    }

    private void calculateCenterPixel()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState $r1;
        com.google.map.MapPoint $r2;
        com.google.map.Zoom $r3;
        int $i0;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r3 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = virtualinvoke $r2.<com.google.map.MapPoint: int getXPixel(com.google.map.Zoom)>($r3);

        $r0.<com.google.googlenav.map.Map: int centerPixelX> = $i0;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r3 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = virtualinvoke $r2.<com.google.map.MapPoint: int getYPixel(com.google.map.Zoom)>($r3);

        $r0.<com.google.googlenav.map.Map: int centerPixelY> = $i0;

        return;
    }

    private boolean checkPaintTimeExceeded(long)
    {
        com.google.googlenav.map.Map $r0;
        long $l0, $l1;
        byte $b2;

        $r0 := @this: com.google.googlenav.map.Map;

        $l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $b2 = $l0 cmp 500L;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean drawMapBackground(com.google.common.graphics.GoogleGraphics, boolean, boolean)
    {
        com.google.googlenav.map.Map $r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7;
        com.google.common.graphics.GoogleGraphics $r1;
        com.google.googlenav.map.Tile $r2;
        com.google.map.MapState $r3;
        com.google.map.MapPoint $r4;
        com.google.map.Zoom $r5;
        com.google.googlenav.map.TileOverlayRenderer $r6;
        long $l4;
        com.google.googlenav.map.Tile[] $r7;
        byte $b8;
        com.google.googlenav.map.MapService $r8;
        java.util.Vector $r9;
        java.lang.Object $r10;
        com.google.googlenav.map.LayerService $r11;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.common.graphics.GoogleGraphics;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        staticinvoke <com.google.common.Log: void startTimer(java.lang.String)>("DrawMap");

        $i0 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile>;

        $i2 = virtualinvoke $r2.<com.google.googlenav.map.Tile: int getXPixelTopLeft()>();

        $i0 = $i0 + $i2;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i2 = virtualinvoke $r4.<com.google.map.MapPoint: int getXPixel(com.google.map.Zoom)>($r5);

        $i2 = $i0 - $i2;

        $i0 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile>;

        $i3 = virtualinvoke $r2.<com.google.googlenav.map.Tile: int getYPixelTopLeft()>();

        $i0 = $i0 + $i3;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i3 = virtualinvoke $r4.<com.google.map.MapPoint: int getYPixel(com.google.map.Zoom)>($r5);

        $i0 = $i0 - $i3;

     label01:
        if $i2 <= 0 goto label02;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i3 = virtualinvoke $r5.<com.google.map.Zoom: int getEquatorPixels()>();

        $i2 = $i2 - $i3;

        goto label01;

     label02:
        $r6 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer>;

        if $r6 == null goto label03;

        $r6 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer>;

        interfaceinvoke $r6.<com.google.googlenav.map.TileOverlayRenderer: void begin()>();

     label03:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<com.google.googlenav.map.Map: long earliestTileNeededTime> = 9223372036854775807L;

        $i3 = 0;

        $i1 = 0;

        $i5 = 0;

     label04:
        $i6 = $r0.<com.google.googlenav.map.Map: int xTiles>;

        if $i3 >= $i6 goto label09;

        $i6 = 0;

        $i7 = $i1;

     label05:
        $i1 = $r0.<com.google.googlenav.map.Map: int yTiles>;

        if $i6 >= $i1 goto label08;

        $r7 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        $i1 = $i7 + 1;

        $r2 = $r7[$i7];

        $z2 = specialinvoke $r0.<com.google.googlenav.map.Map: boolean drawTile(com.google.googlenav.map.Tile,int,int,com.google.common.graphics.GoogleGraphics,int,int,boolean,boolean,long)>($r2, $i3, $i6, $r1, $i2, $i0, $z0, $z1, $l4);

        if $z2 == 0 goto label07;

        $b8 = 1;

     label06:
        $i6 = $i6 + 1;

        $i5 = $b8 + $i5;

        $i7 = $i1;

        goto label05;

     label07:
        $b8 = 0;

        goto label06;

     label08:
        $i3 = $i3 + 1;

        $i1 = $i7;

        goto label04;

     label09:
        if $r1 == null goto label10;

        specialinvoke $r0.<com.google.googlenav.map.Map: void logPerceivedTileLatency(int)>($i5);

     label10:
        if $z0 == 0 goto label11;

        $r8 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r8.<com.google.googlenav.map.MapService: boolean requestTiles(boolean)>(1);

     label11:
        $i0 = 0;

        $r9 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $i2 = virtualinvoke $r9.<java.util.Vector: int size()>();

     label12:
        if $i0 >= $i2 goto label14;

        $r9 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $r10 = virtualinvoke $r9.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r11 = (com.google.googlenav.map.LayerService) $r10;

        $z0 = virtualinvoke $r11.<com.google.googlenav.map.LayerService: boolean needFetchLayerTiles()>();

        if $z0 == 0 goto label13;

        virtualinvoke $r11.<com.google.googlenav.map.LayerService: void requestTiles()>();

     label13:
        $i0 = $i0 + 1;

        goto label12;

     label14:
        $r6 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer>;

        if $r6 == null goto label15;

        $r6 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer>;

        interfaceinvoke $r6.<com.google.googlenav.map.TileOverlayRenderer: void end()>();

     label15:
        staticinvoke <com.google.googlenav.map.FlashRecord: void clearDataCache()>();

        staticinvoke <com.google.common.Log: long endTimerAndLogConditionally(java.lang.String,java.lang.String,long)>("MAP", "DrawMap", 200L);

        $r0.<com.google.googlenav.map.Map: long lastPaintStartTime> = $l4;

        $z0 = specialinvoke $r0.<com.google.googlenav.map.Map: boolean checkPaintTimeExceeded(long)>($l4);

        if $z0 != 0 goto label16;

        return 1;

     label16:
        return 0;
    }

    private boolean drawTile(com.google.googlenav.map.Tile, int, int, com.google.common.graphics.GoogleGraphics, int, int, boolean, boolean, long)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.Tile $r1, $r10;
        int $i0, $i1, $i2, $i4, $i5;
        com.google.common.graphics.GoogleGraphics $r2;
        boolean $z0, $z1, $z2;
        long $l3, $l6;
        com.google.googlenav.map.MapService $r3;
        com.google.googlenav.map.MapTile $r4;
        com.google.googlenav.map.TileOverlayRenderer $r5;
        com.google.common.graphics.GoogleImage $r6;
        java.util.Vector $r7;
        java.lang.Object $r8;
        com.google.googlenav.map.LayerService $r9;
        com.google.googlenav.map.LayerTile $r11;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.Tile;

        $i4 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.google.common.graphics.GoogleGraphics;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $z1 := @parameter7: boolean;

        $l3 := @parameter8: long;

        staticinvoke <com.google.common.Log: void startTimer(java.lang.String)>("DrawTile");

        $i4 = $i4 * 128;

        $i4 = $i4 + $i1;

        $i0 = $i0 * 128;

        $i0 = $i0 + $i2;

        $z2 = virtualinvoke $r1.<com.google.googlenav.map.Tile: boolean notValid()>();

        if $z2 == 0 goto label02;

        if $r2 == null goto label01;

        interfaceinvoke $r2.<com.google.common.graphics.GoogleGraphics: void setColor(int)>(16777215);

        interfaceinvoke $r2.<com.google.common.graphics.GoogleGraphics: void fillRect(int,int,int,int)>($i4, $i0, 128, 128);

        return 1;

     label01:
        return 0;

     label02:
        $i1 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $i2 = $i4 + 64;

        $i1 = $i1 - $i2;

        $i2 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $i5 = $i0 + 64;

        $i2 = $i2 - $i5;

        $i1 = $i1 * $i1;

        $i2 = $i2 * $i2;

        $i1 = $i1 + $i2;

        $z2 = specialinvoke $r0.<com.google.googlenav.map.Map: boolean checkPaintTimeExceeded(long)>($l3);

        if $z2 != 0 goto label09;

        $z2 = 1;

     label03:
        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $r4 = virtualinvoke $r3.<com.google.googlenav.map.MapService: com.google.googlenav.map.MapTile getTile(com.google.googlenav.map.Tile,int,boolean,boolean)>($r1, $i1, $z0, $z2);

        $r5 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer>;

        if $r5 == null goto label04;

        $z2 = specialinvoke $r0.<com.google.googlenav.map.Map: boolean checkPaintTimeExceeded(long)>($l3);

        if $z2 != 0 goto label04;

        $r5 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer>;

        interfaceinvoke $r5.<com.google.googlenav.map.TileOverlayRenderer: boolean renderTile(com.google.googlenav.map.MapTile,boolean)>($r4, $z0);

     label04:
        if $r2 == null goto label11;

        $z2 = virtualinvoke $r4.<com.google.googlenav.map.MapTile: boolean hasImage()>();

        if $z2 != 0 goto label05;

        if $z1 == 0 goto label11;

     label05:
        $r6 = virtualinvoke $r4.<com.google.googlenav.map.MapTile: com.google.common.graphics.GoogleImage getImage()>();

        interfaceinvoke $r2.<com.google.common.graphics.GoogleGraphics: void drawImage(com.google.common.graphics.GoogleImage,int,int)>($r6, $i4, $i0);

        $l6 = $r0.<com.google.googlenav.map.Map: long lastPaintStartTime>;

        virtualinvoke $r4.<com.google.googlenav.map.MapTile: void setPaint(long,long)>($l3, $l6);

        $i1 = virtualinvoke $r4.<com.google.googlenav.map.MapTile: int getCompletePaintCount()>();

        if $i1 <= 0 goto label11;

        specialinvoke $r0.<com.google.googlenav.map.Map: void updatePerceivedTileLatency(com.google.googlenav.map.MapTile)>($r4);

        specialinvoke $r0.<com.google.googlenav.map.Map: void logIfPreCached(com.google.googlenav.map.MapTile)>($r4);

        $z1 = 1;

     label06:
        $i1 = 0;

        $r7 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $i2 = virtualinvoke $r7.<java.util.Vector: int size()>();

     label07:
        if $i1 >= $i2 goto label10;

        $r7 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r9 = (com.google.googlenav.map.LayerService) $r8;

        $z2 = virtualinvoke $r9.<com.google.googlenav.map.LayerService: boolean needFetchLayerTiles()>();

        if $z2 == 0 goto label08;

        $r10 = new com.google.googlenav.map.Tile;

        specialinvoke $r10.<com.google.googlenav.map.Tile: void <init>(byte,com.google.googlenav.map.Tile)>(8, $r1);

        $r11 = virtualinvoke $r9.<com.google.googlenav.map.LayerService: com.google.googlenav.map.LayerTile getTile(com.google.googlenav.map.Tile,boolean)>($r10, $z0);

        if $r2 == null goto label08;

        if $r11 == null goto label08;

        $z2 = virtualinvoke $r11.<com.google.googlenav.map.LayerTile: boolean hasImage()>();

        if $z2 == 0 goto label08;

        $r6 = virtualinvoke $r11.<com.google.googlenav.map.LayerTile: com.google.common.graphics.GoogleImage getImage()>();

        interfaceinvoke $r2.<com.google.common.graphics.GoogleGraphics: void drawImage(com.google.common.graphics.GoogleImage,int,int)>($r6, $i4, $i0);

     label08:
        $i1 = $i1 + 1;

        goto label07;

     label09:
        $z2 = 0;

        goto label03;

     label10:
        staticinvoke <com.google.common.Log: long endTimerAndLogConditionally(java.lang.String,java.lang.String,long)>("MAP", "DrawTile", 40L);

        return $z1;

     label11:
        $z1 = 0;

        goto label06;
    }

    private com.google.map.Zoom findZoom(int, int)
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i1, $i2;
        com.google.map.MapState $r1;
        com.google.map.MapPoint $r2;
        com.google.map.Zoom $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.googlenav.map.Map;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $i2 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getMaxMapZoomForPoint(com.google.map.MapPoint)>($r2);

        $r3 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>($i2);

     label2:
        $r4 = virtualinvoke $r3.<com.google.map.Zoom: com.google.map.Zoom getNextLowerZoom()>();

        if $r4 == null goto label5;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r1 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapState newMapState(com.google.map.Zoom)>($r3);

        $i2 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getLatitudeSpan(com.google.map.MapState)>($r1);

        if $i2 < $i0 goto label3;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r1 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapState newMapState(com.google.map.Zoom)>($r3);

        $i2 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getLongitudeSpan(com.google.map.MapState)>($r1);

        if $i2 >= $i1 goto label5;

     label3:
        $r3 = virtualinvoke $r3.<com.google.map.Zoom: com.google.map.Zoom getNextLowerZoom()>();

     label4:
        goto label2;

     label5:
        exitmonitor $r0;

        return $r3;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label6;
    }

    public static int getMaxMapInitialZoomForPoint(com.google.map.MapPoint)
    {
        com.google.map.MapPoint $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.map.MapPoint;

        $z0 = staticinvoke <com.google.googlenav.map.Map: boolean isMapPointInJapanBoundingBox(com.google.map.MapPoint)>($r0);

        if $z0 == 0 goto label1;

        return 16;

     label1:
        return 15;
    }

    private byte getTileFlags()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState $r1;
        boolean $z0;
        byte $b0;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $z0 = virtualinvoke $r1.<com.google.map.MapState: boolean isSatellite()>();

        if $z0 == 0 goto label1;

        $b0 = staticinvoke <com.google.googlenav.map.Tile: byte getSatType()>();

        return $b0;

     label1:
        return 2;
    }

    public static boolean isMapPointInJapanBoundingBox(com.google.map.MapPoint)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.map.MapPoint;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<com.google.map.MapPoint: int getLatitude()>();

        $i1 = virtualinvoke $r0.<com.google.map.MapPoint: int getLongitude()>();

        if $i0 <= 23883332 goto label1;

        if $i0 >= 46072278 goto label1;

        if $i1 <= 123748627 goto label1;

        if $i1 >= 143789063 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isMapPointInKoreaBoundingBox(com.google.map.MapPoint)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.map.MapPoint;

        if $r0 == null goto label5;

        $i0 = virtualinvoke $r0.<com.google.map.MapPoint: int getLatitude()>();

        $i1 = virtualinvoke $r0.<com.google.map.MapPoint: int getLongitude()>();

        if $i0 <= 32989084 goto label1;

        if $i0 >= 38693013 goto label1;

        if $i1 <= 124605560 goto label1;

        if $i1 < 128496094 goto label4;

     label1:
        if $i0 <= 34464674 goto label2;

        if $i0 >= 38693013 goto label2;

        if $i1 <= 128496094 goto label2;

        if $i1 < 128847656 goto label4;

     label2:
        if $i0 <= 35027747 goto label3;

        if $i0 >= 38693013 goto label3;

        if $i1 <= 128847656 goto label3;

        if $i1 < 131053162 goto label4;

     label3:
        if $i0 <= 37027773 goto label5;

        if $i0 >= 38693013 goto label5;

        if $i1 <= 131053162 goto label5;

        if $i1 >= 132003479 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    private void load(com.google.map.MapPoint, com.google.map.Zoom)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1, $r8;
        com.google.map.Zoom $r2;
        com.google.common.Config $r3;
        com.google.common.io.PersistentStore $r4;
        byte[] $r5;
        java.io.DataInputStream $r6;
        java.io.ByteArrayInputStream $r7;
        int $i0, $i1, $i2;
        boolean $z0;
        com.google.map.MapState $r9;
        java.io.IOException $r10, $r11, $r12;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 := @parameter1: com.google.map.Zoom;

        $r3 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r4 = virtualinvoke $r3.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        $r5 = interfaceinvoke $r4.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>("Map info");

        if $r5 == null goto label14;

        $r6 = new java.io.DataInputStream;

        $r7 = new java.io.ByteArrayInputStream;

     label01:
        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r7);

        $i0 = virtualinvoke $r6.<java.io.DataInputStream: int readUnsignedShort()>();

        if $i0 != 2 goto label14;

        $r8 = staticinvoke <com.google.map.MapPoint: com.google.map.MapPoint readPoint(java.io.DataInput)>($r6);

     label02:
        $i0 = virtualinvoke $r6.<java.io.DataInputStream: int readInt()>();

     label03:
        $i1 = $i0;

     label04:
        $i2 = virtualinvoke $r6.<java.io.DataInputStream: int readUnsignedByte()>();

     label05:
        $z0 = 1;

     label06:
        if $z0 == 0 goto label11;

        $i2 = $i2 & 1;

        if $i2 == 0 goto label10;

        $z0 = 1;

     label07:
        $r9 = new com.google.map.MapState;

        $i2 = staticinvoke <com.google.googlenav.map.Map: int getMaxMapInitialZoomForPoint(com.google.map.MapPoint)>($r8);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $r2 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>($i0);

        specialinvoke $r9.<com.google.map.MapState: void <init>(com.google.map.MapPoint,com.google.map.Zoom,boolean)>($r8, $r2, $z0);

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setMapState(com.google.map.MapState)>($r9);

        return;

     label08:
        $r10 := @caughtexception;

        $r8 = null;

        $i1 = 0;

     label09:
        staticinvoke <com.google.common.Log: void logThrowable(java.lang.String,java.lang.Throwable)>("MAP", $r10);

        $r3 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r4 = virtualinvoke $r3.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        interfaceinvoke $r4.<com.google.common.io.PersistentStore: boolean deleteBlock(java.lang.String)>("Map info");

        $i2 = 0;

        $i0 = $i1;

        $z0 = 0;

        goto label06;

     label10:
        $z0 = 0;

        goto label07;

     label11:
        $r9 = new com.google.map.MapState;

        specialinvoke $r9.<com.google.map.MapState: void <init>(com.google.map.MapPoint,com.google.map.Zoom,boolean)>($r1, $r2, 0);

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setMapState(com.google.map.MapState)>($r9);

        return;

     label12:
        $r11 := @caughtexception;

        $r10 = $r11;

        $i1 = 0;

        goto label09;

     label13:
        $r12 := @caughtexception;

        $r10 = $r12;

        goto label09;

     label14:
        $i2 = 0;

        $i0 = 0;

        $r8 = null;

        $z0 = 0;

        goto label06;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label02 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label13;
    }

    private void logIfPreCached(com.google.googlenav.map.MapTile)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.MapTile $r1;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r2;
        long $l1, $l2;
        java.lang.String $r3;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.MapTile;

        $z0 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: boolean getIsPreCached()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: int getCompletePaintCount()>();

        if $i0 != 1 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: long getFirstPaintTime()>();

        $l1 = $l1 - $l2;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>(22, "pc", $r3);

        return;

     label1:
        return;

     label2:
        return;
    }

    private void logPerceivedTileLatency(int)
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i4, $i5;
        long $l1, $l3;
        byte $b2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        $r0 := @this: com.google.googlenav.map.Map;

        $i0 := @parameter0: int;

        $l1 = $r0.<com.google.googlenav.map.Map: long earliestTileNeededTime>;

        $b2 = $l1 cmp 9223372036854775807L;

        if $b2 != 0 goto label01;

        $r0.<com.google.googlenav.map.Map: int completeTilesInViewport> = $i0;

        return;

     label01:
        $b2 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        lookupswitch($b2)
        {
            case 2: goto label09;
            case 3: goto label03;
            case 4: goto label02;
            case 5: goto label02;
            case 6: goto label08;
            default: goto label02;
        };

     label02:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized tile flag: ");

        $b2 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r2);

        return;

     label03:
        $r2 = "s";

     label04:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $r0.<com.google.googlenav.map.Map: long earliestTileNeededTime>;

        $l1 = $l1 - $l3;

        $i4 = $r0.<com.google.googlenav.map.Map: int completeTilesInViewport>;

        if $i4 != 0 goto label05;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tf");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>(22, $r3, $r4);

        $r0.<com.google.googlenav.map.Map: boolean isViewportAllNew> = 1;

     label05:
        $i4 = $r0.<com.google.googlenav.map.Map: int completeTilesInViewport>;

        if $i4 >= $i0 goto label07;

        $i4 = $r0.<com.google.googlenav.map.Map: int xTiles>;

        $i5 = $r0.<com.google.googlenav.map.Map: int yTiles>;

        $i4 = $i4 * $i5;

        if $i0 != $i4 goto label07;

        $z0 = $r0.<com.google.googlenav.map.Map: boolean isViewportAllNew>;

        if $z0 == 0 goto label10;

        $r3 = "tc";

     label06:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>(22, $r2, $r3);

     label07:
        $r0.<com.google.googlenav.map.Map: int completeTilesInViewport> = $i0;

        return;

     label08:
        $r2 = "h";

        goto label04;

     label09:
        $r2 = "m";

        goto label04;

     label10:
        $r3 = "tp";

        goto label06;
    }

    private void precalculateTiles()
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i2, $i3, $i4, $i5, $i6;
        com.google.googlenav.map.Tile $r1, $r3;
        com.google.googlenav.map.Tile[] $r2;
        byte $b1;
        com.google.map.MapState $r4;
        com.google.map.Zoom $r5;

        $r0 := @this: com.google.googlenav.map.Map;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        if $r2 == null goto label4;

        $b1 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        $i2 = 0;

        $i3 = 0;

     label1:
        $i4 = $r0.<com.google.googlenav.map.Map: int xTiles>;

        if $i2 >= $i4 goto label5;

        $i4 = 0;

     label2:
        $i0 = $r0.<com.google.googlenav.map.Map: int yTiles>;

        if $i4 >= $i0 goto label3;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        $r1 = new com.google.googlenav.map.Tile;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile>;

        $i5 = virtualinvoke $r3.<com.google.googlenav.map.Tile: int getXIndex()>();

        $i5 = $i5 + $i2;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile>;

        $i6 = virtualinvoke $r3.<com.google.googlenav.map.Tile: int getYIndex()>();

        $i6 = $i6 + $i4;

        $r4 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r4.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        specialinvoke $r1.<com.google.googlenav.map.Tile: void <init>(byte,int,int,com.google.map.Zoom)>($b1, $i5, $i6, $r5);

        $r2[$i3] = $r1;

        $i4 = $i4 + 1;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return;

     label5:
        return;
    }

    private void updatePerceivedTileLatency(com.google.googlenav.map.MapTile)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.MapTile $r1;
        long $l0, $l2;
        int $i1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.MapTile;

        $i1 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: int getCompletePaintCount()>();

        if $i1 != 1 goto label1;

        $l2 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: long getFirstPaintTime()>();

        $l0 = $r0.<com.google.googlenav.map.Map: long earliestTileNeededTime>;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l0);

        $r0.<com.google.googlenav.map.Map: long earliestTileNeededTime> = $l0;

        return;

     label1:
        return;
    }

    private void updateTopLeftTile(boolean)
    {
        com.google.googlenav.map.Map $r0;
        boolean $z0, $z1;
        com.google.googlenav.map.Tile $r1, $r5;
        com.google.map.MapState $r2;
        com.google.map.MapPoint $r3;
        com.google.map.Zoom $r4;
        int $i0, $i1, $i2, $i4;
        byte $b3;

        $r0 := @this: com.google.googlenav.map.Map;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile>;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r3 = virtualinvoke $r2.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r2.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = staticinvoke <com.google.googlenav.map.Tile: int getXTileIndex(com.google.map.MapPoint,com.google.map.Zoom)>($r3, $r4);

        $i1 = $r0.<com.google.googlenav.map.Map: int xTiles>;

        $i1 = $i1 / 2;

        $i1 = $i0 - $i1;

        $i0 = staticinvoke <com.google.googlenav.map.Tile: int getYTileIndex(com.google.map.MapPoint,com.google.map.Zoom)>($r3, $r4);

        $i2 = $r0.<com.google.googlenav.map.Map: int yTiles>;

        $i2 = $i2 / 2;

        $i0 = $i0 - $i2;

        $r5 = new com.google.googlenav.map.Tile;

        $b3 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        specialinvoke $r5.<com.google.googlenav.map.Tile: void <init>(byte,com.google.map.MapPoint,com.google.map.Zoom)>($b3, $r3, $r4);

        $i2 = $r0.<com.google.googlenav.map.Map: int xTiles>;

        $i2 = $i2 % 2;

        if $i2 != 0 goto label06;

        $z1 = 1;

     label01:
        $i2 = $r0.<com.google.googlenav.map.Map: int centerPixelX>;

        $i4 = virtualinvoke $r5.<com.google.googlenav.map.Tile: int getXPixelTopLeft()>();

        $i2 = $i2 - $i4;

        if $z1 == 0 goto label09;

        if $i2 <= 64 goto label09;

        $i1 = $i1 + 1;

     label02:
        $i2 = $r0.<com.google.googlenav.map.Map: int yTiles>;

        $i2 = $i2 % 2;

        if $i2 != 0 goto label07;

        $z1 = 1;

     label03:
        $i2 = $r0.<com.google.googlenav.map.Map: int centerPixelY>;

        $i4 = virtualinvoke $r5.<com.google.googlenav.map.Tile: int getYPixelTopLeft()>();

        $i2 = $i2 - $i4;

        if $z1 == 0 goto label08;

        if $i2 <= 64 goto label08;

        $i0 = $i0 + 1;

     label04:
        $r5 = new com.google.googlenav.map.Tile;

        $b3 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        specialinvoke $r5.<com.google.googlenav.map.Tile: void <init>(byte,int,int,com.google.map.Zoom)>($b3, $i1, $i0, $r4);

        $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile> = $r5;

        if $z0 != 0 goto label05;

        if $r1 == null goto label05;

        $r5 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile topLeftTile>;

        $z0 = virtualinvoke $r1.<com.google.googlenav.map.Tile: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label10;

     label05:
        specialinvoke $r0.<com.google.googlenav.map.Map: void precalculateTiles()>();

        return;

     label06:
        $z1 = 0;

        goto label01;

     label07:
        $z1 = 0;

        goto label03;

     label08:
        goto label04;

     label09:
        goto label02;

     label10:
        return;
    }

    public void addLayerService(com.google.googlenav.map.LayerService)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.LayerService $r1;
        boolean $z0;
        java.util.Vector $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.LayerService;

        if $r1 == null goto label1;

        $r2 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean canCover(com.google.map.MapPoint, boolean)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        boolean $z0;
        com.google.googlenav.map.MapService $r2;
        com.google.googlenav.map.Tile $r3;
        byte $b0;
        com.google.map.MapState $r4;
        com.google.map.Zoom $r5;
        com.google.googlenav.map.MapTile $r6;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $r3 = new com.google.googlenav.map.Tile;

        $b0 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        $r4 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r4.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        specialinvoke $r3.<com.google.googlenav.map.Tile: void <init>(byte,com.google.map.MapPoint,com.google.map.Zoom)>($b0, $r1, $r5);

        $r6 = virtualinvoke $r2.<com.google.googlenav.map.MapService: com.google.googlenav.map.MapTile getTile(com.google.googlenav.map.Tile,int,boolean,boolean)>($r3, 0, 0, $z0);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r6.<com.google.googlenav.map.MapTile: boolean hasScaledImage()>();

        if $z0 != 0 goto label2;

     label1:
        $z0 = virtualinvoke $r6.<com.google.googlenav.map.MapTile: boolean isComplete()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void close(boolean)
    {
        com.google.googlenav.map.Map $r0;
        boolean $z0;
        com.google.googlenav.map.MapService $r1;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.google.googlenav.map.LayerService $r4;

        $r0 := @this: com.google.googlenav.map.Map;

        $z0 := @parameter0: boolean;

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", "Map Closing");

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.google.googlenav.map.Map: void saveState()>();

     label1:
        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r1.<com.google.googlenav.map.MapService: void close(boolean)>($z0);

        $r2 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (com.google.googlenav.map.LayerService) $r3;

        virtualinvoke $r4.<com.google.googlenav.map.LayerService: void close()>();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r2 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        return;
    }

    public boolean drawMap(com.google.common.graphics.GoogleGraphics, boolean, boolean, boolean, boolean)
    {
        com.google.googlenav.map.Map $r0;
        com.google.common.graphics.GoogleGraphics $r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        java.lang.IllegalStateException $r2;
        com.google.googlenav.map.MapBiller $r3;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.common.graphics.GoogleGraphics;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z3 := @parameter4: boolean;

        $i0 = $r0.<com.google.googlenav.map.Map: int displayHeight>;

        if $i0 == 0 goto label1;

        $i0 = $r0.<com.google.googlenav.map.Map: int displayWidth>;

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Map has zero size");

        throw $r2;

     label2:
        if $r1 == null goto label3;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapBiller biller>;

        virtualinvoke $r3.<com.google.googlenav.map.MapBiller: void doBilling(boolean,boolean,com.google.googlenav.map.Map)>($z1, $z2, $r0);

     label3:
        $z0 = specialinvoke $r0.<com.google.googlenav.map.Map: boolean drawMapBackground(com.google.common.graphics.GoogleGraphics,boolean,boolean)>($r1, $z0, $z3);

        return $z0;
    }

    public void eraseAll()
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.MapService $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r1.<com.google.googlenav.map.MapService: void eraseAll()>();

        return;
    }

    public com.google.map.MapPoint getCenterPoint()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.map.MapState $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r1 = virtualinvoke $r2.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        return $r1;
    }

    public com.google.googlenav.map.Tile[] getCoveringTiles(com.google.map.MapPoint[], boolean)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint[] $r1;
        boolean $z0;
        java.util.Hashtable $r2;
        int $i0, $i1, $i2;
        com.google.googlenav.map.Tile[] $r3;
        com.google.map.MapState $r4;
        com.google.map.MapPoint $r5, $r6;
        com.google.googlenav.map.Tile $r7, $r8;
        java.util.Enumeration $r9;
        java.lang.Object $r10;
        java.lang.Throwable $r11, $r12;
        byte $b3;
        com.google.map.Zoom $r13;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint[];

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label01:
        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        if $r1 == null goto label02;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label04;

     label02:
        $r3 = newarray (com.google.googlenav.map.Tile)[0];

     label03:
        exitmonitor $r0;

        return $r3;

     label04:
        if $z0 == 0 goto label16;

     label05:
        $r4 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r4.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

     label06:
        $i0 = 0;

     label07:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label11;

        $r6 = $r1[$i0];

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r6);

        $i1 = 0;

     label08:
        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label10;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        $r7 = $r3[$i1];

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        $r8 = $r3[$i1];

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label09:
        $i1 = $i1 + 1;

        goto label08;

     label10:
        $i0 = $i0 + 1;

        goto label07;

     label11:
        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r5);

     label12:
        $i0 = virtualinvoke $r2.<java.util.Hashtable: int size()>();

        $r3 = newarray (com.google.googlenav.map.Tile)[$i0];

        $r9 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        $i0 = 0;

     label13:
        $z0 = interfaceinvoke $r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label19;

        $r10 = interfaceinvoke $r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (com.google.googlenav.map.Tile) $r10;

        $r3[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label13;

     label14:
        $r11 := @caughtexception;

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r5);

        throw $r11;

     label15:
        $r12 := @caughtexception;

        exitmonitor $r0;

        throw $r12;

     label16:
        $i0 = 0;

     label17:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label12;

        $r5 = $r1[$i0];

        $z0 = virtualinvoke $r0.<com.google.googlenav.map.Map: boolean canCover(com.google.map.MapPoint,boolean)>($r5, 0);

        if $z0 != 0 goto label18;

        $r7 = new com.google.googlenav.map.Tile;

        $b3 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        $r4 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r13 = virtualinvoke $r4.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        specialinvoke $r7.<com.google.googlenav.map.Tile: void <init>(byte,com.google.map.MapPoint,com.google.map.Zoom)>($b3, $r5, $r13);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r7);

     label18:
        $i0 = $i0 + 1;

        goto label17;

     label19:
        goto label03;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label09 with label14;
        catch java.lang.Throwable from label11 to label15 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }

    public int getFlashCacheSize()
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.MapService $r1;
        com.google.googlenav.map.MapTileStorage $r2;
        int $i0;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $r2 = virtualinvoke $r1.<com.google.googlenav.map.MapService: com.google.googlenav.map.MapTileStorage getMapFlashService()>();

        if $r2 == null goto label1;

        $i0 = interfaceinvoke $r2.<com.google.googlenav.map.MapTileStorage: int getSize()>();

        return $i0;

     label1:
        return 0;
    }

    public int getHeight()
    {
        com.google.googlenav.map.Map $r0;
        int i0;

        $r0 := @this: com.google.googlenav.map.Map;

        i0 = $r0.<com.google.googlenav.map.Map: int displayHeight>;

        return i0;
    }

    public int getLatitudeSpan()
    {
        com.google.googlenav.map.Map $r0;
        int $i0;
        com.google.map.MapState $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $i0 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getLatitudeSpan(com.google.map.MapState)>($r1);

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getLatitudeSpan(com.google.map.MapState)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState $r1;
        com.google.map.MapPoint $r2, $r4;
        com.google.map.Zoom $r3;
        int $i0, $i1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapState;

        $r2 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r3 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $i1 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $r4 = virtualinvoke $r2.<com.google.map.MapPoint: com.google.map.MapPoint pixelOffset(int,int,com.google.map.Zoom)>($i0, $i1, $r3);

        $i0 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $i0 = neg $i0;

        $i1 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $i1 = neg $i1;

        $r2 = virtualinvoke $r2.<com.google.map.MapPoint: com.google.map.MapPoint pixelOffset(int,int,com.google.map.Zoom)>($i0, $i1, $r3);

        $i0 = virtualinvoke $r2.<com.google.map.MapPoint: int getLatitude()>();

        $i1 = virtualinvoke $r4.<com.google.map.MapPoint: int getLatitude()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        return $i0;
    }

    public int getLongitudeSpan()
    {
        com.google.googlenav.map.Map $r0;
        int $i0;
        com.google.map.MapState $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $i0 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getLongitudeSpan(com.google.map.MapState)>($r1);

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getLongitudeSpan(com.google.map.MapState)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState $r1;
        com.google.map.MapPoint $r2, $r4;
        com.google.map.Zoom $r3;
        int $i0, $i1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapState;

        $r2 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r3 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $i1 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $r4 = virtualinvoke $r2.<com.google.map.MapPoint: com.google.map.MapPoint pixelOffset(int,int,com.google.map.Zoom)>($i0, $i1, $r3);

        $i0 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $i0 = neg $i0;

        $i1 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $i1 = neg $i1;

        $r2 = virtualinvoke $r2.<com.google.map.MapPoint: com.google.map.MapPoint pixelOffset(int,int,com.google.map.Zoom)>($i0, $i1, $r3);

        $i0 = virtualinvoke $r4.<com.google.map.MapPoint: int getLongitude()>();

        $i1 = virtualinvoke $r2.<com.google.map.MapPoint: int getLongitude()>();

        $i0 = $i0 - $i1;

        if $i0 >= 0 goto label1;

        $i0 = $i0 + 360000000;

        return $i0;

     label1:
        return $i0;
    }

    public int getManualSelectionAccuracy()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        int $i0, $i1, $i2;
        com.google.map.Zoom $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = virtualinvoke $r0.<com.google.googlenav.map.Map: com.google.map.MapPoint getCenterPoint()>();

        $i0 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getMaxMapZoomForPoint(com.google.map.MapPoint)>($r1);

        $r2 = virtualinvoke $r0.<com.google.googlenav.map.Map: com.google.map.Zoom getZoom()>();

        $i1 = virtualinvoke $r2.<com.google.map.Zoom: int getZoomLevel()>();

        $i2 = 5000 / $i0;

        $i0 = $i0 - $i1;

        $i2 = $i0 * $i2;

        return $i2;
    }

    public com.google.map.MapState getMapState()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState r1;

        $r0 := @this: com.google.googlenav.map.Map;

        r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        return r1;
    }

    public int getMaxMapZoomForPoint(com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        boolean $z0;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $z0 = virtualinvoke $r0.<com.google.googlenav.map.Map: boolean isSatellite()>();

        if $z0 == 0 goto label1;

        return 22;

     label1:
        $z0 = staticinvoke <com.google.common.Config: boolean isChinaVersion()>();

        if $z0 == 0 goto label2;

        return 18;

     label2:
        $z0 = staticinvoke <com.google.googlenav.map.Map: boolean isMapPointInKoreaBoundingBox(com.google.map.MapPoint)>($r1);

        if $z0 == 0 goto label3;

        return 18;

     label3:
        $z0 = staticinvoke <com.google.googlenav.map.Map: boolean isMapPointInJapanBoundingBox(com.google.map.MapPoint)>($r1);

        if $z0 == 0 goto label4;

        return 20;

     label4:
        return 19;
    }

    public com.google.common.geom.Point getPixelOffsetFromCenter(com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.common.geom.Point $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 = new com.google.common.geom.Point;

        specialinvoke $r2.<com.google.common.geom.Point: void <init>()>();

        virtualinvoke $r0.<com.google.googlenav.map.Map: void getPixelOffsetFromCenter(com.google.map.MapPoint,com.google.common.geom.Point)>($r1, $r2);

        return $r2;
    }

    public void getPixelOffsetFromCenter(com.google.map.MapPoint, com.google.common.geom.Point)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.common.geom.Point $r2;
        com.google.map.MapState $r3;
        com.google.map.Zoom $r4;
        int $i0, $i1, $i2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 := @parameter1: com.google.common.geom.Point;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = virtualinvoke $r1.<com.google.map.MapPoint: int getXPixel(com.google.map.Zoom)>($r4);

        $i1 = $r0.<com.google.googlenav.map.Map: int centerPixelX>;

        $i0 = $i0 - $i1;

        $r2.<com.google.common.geom.Point: int x> = $i0;

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = virtualinvoke $r4.<com.google.map.Zoom: int getEquatorPixels()>();

        $i1 = $r2.<com.google.common.geom.Point: int x>;

        $i2 = neg $i0;

        $i2 = $i2 / 2;

        if $i1 >= $i2 goto label2;

        $i1 = $r2.<com.google.common.geom.Point: int x>;

        $i0 = $i0 + $i1;

        $r2.<com.google.common.geom.Point: int x> = $i0;

     label1:
        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = virtualinvoke $r1.<com.google.map.MapPoint: int getYPixel(com.google.map.Zoom)>($r4);

        $i1 = $r0.<com.google.googlenav.map.Map: int centerPixelY>;

        $i0 = $i0 - $i1;

        $r2.<com.google.common.geom.Point: int y> = $i0;

        return;

     label2:
        $i1 = $r2.<com.google.common.geom.Point: int x>;

        $i2 = $i0 / 2;

        if $i1 <= $i2 goto label1;

        $i1 = $r2.<com.google.common.geom.Point: int x>;

        $i0 = $i1 - $i0;

        $r2.<com.google.common.geom.Point: int x> = $i0;

        goto label1;
    }

    public com.google.common.geom.Point getPointXY(com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.common.geom.Point $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 = new com.google.common.geom.Point;

        specialinvoke $r2.<com.google.common.geom.Point: void <init>()>();

        virtualinvoke $r0.<com.google.googlenav.map.Map: void getPointXY(com.google.map.MapPoint,com.google.common.geom.Point)>($r1, $r2);

        return $r2;
    }

    public void getPointXY(com.google.map.MapPoint, com.google.common.geom.Point)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.common.geom.Point $r2;
        int $i0, $i1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 := @parameter1: com.google.common.geom.Point;

        virtualinvoke $r0.<com.google.googlenav.map.Map: void getPixelOffsetFromCenter(com.google.map.MapPoint,com.google.common.geom.Point)>($r1, $r2);

        $i0 = $r2.<com.google.common.geom.Point: int x>;

        $i1 = $r0.<com.google.googlenav.map.Map: int halfWidth>;

        $i0 = $i0 + $i1;

        $r2.<com.google.common.geom.Point: int x> = $i0;

        $i0 = $r2.<com.google.common.geom.Point: int y>;

        $i1 = $r0.<com.google.googlenav.map.Map: int halfHeight>;

        $i0 = $i0 + $i1;

        $r2.<com.google.common.geom.Point: int y> = $i0;

        return;
    }

    public int getRamCacheSize()
    {
        com.google.googlenav.map.Map $r0;
        int $i0;
        com.google.googlenav.map.MapService $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $i0 = virtualinvoke $r1.<com.google.googlenav.map.MapService: int getCacheSize()>();

        return $i0;
    }

    public com.google.googlenav.map.Tile[] getTiles()
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.Tile[] r1;

        $r0 := @this: com.google.googlenav.map.Map;

        r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles>;

        return r1;
    }

    public int getWidth()
    {
        com.google.googlenav.map.Map $r0;
        int i0;

        $r0 := @this: com.google.googlenav.map.Map;

        i0 = $r0.<com.google.googlenav.map.Map: int displayWidth>;

        return i0;
    }

    public com.google.map.Zoom getZoom()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.Zoom $r1;
        com.google.map.MapState $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r1 = virtualinvoke $r2.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        return $r1;
    }

    public com.google.map.Zoom getZoomForViewport(com.google.map.MapPoint[], com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint[] $r1;
        com.google.map.MapPoint $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4;
        com.google.map.MapState $r6;
        com.google.map.Zoom $r7;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint[];

        $r2 := @parameter1: com.google.map.MapPoint;

        entermonitor $r0;

        if $r1 == null goto label02;

     label01:
        $i0 = lengthof $r1;

        if $i0 >= 2 goto label04;

     label02:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label03:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label04:
        $r5 = $r1[0];

        $i0 = virtualinvoke $r5.<com.google.map.MapPoint: int getLatitude()>();

        $r5 = $r1[0];

        $i1 = virtualinvoke $r5.<com.google.map.MapPoint: int getLongitude()>();

        $i2 = $i1;

        $i3 = $i0;

        $i4 = $i0;

        $i0 = 0;

     label05:
        $i5 = lengthof $r1;

        if $i0 >= $i5 goto label10;

        $r5 = $r1[$i0];

        $i5 = virtualinvoke $r5.<com.google.map.MapPoint: int getLatitude()>();

        $r5 = $r1[$i0];

        $i6 = virtualinvoke $r5.<com.google.map.MapPoint: int getLongitude()>();

        if $i5 >= $i4 goto label06;

        $i4 = $i5;

     label06:
        if $i5 <= $i3 goto label07;

        $i3 = $i5;

     label07:
        if $i6 >= $i1 goto label08;

        $i1 = $i6;

     label08:
        if $i6 <= $i2 goto label09;

        $i2 = $i6;

     label09:
        $i0 = $i0 + 1;

        goto label05;

     label10:
        $i5 = $i3 - $i4;

        $i0 = $i2 - $i1;

        if $r2 == null goto label13;

        $i3 = $i3 + $i4;

        $i3 = $i3 / 2;

        $i4 = virtualinvoke $r2.<com.google.map.MapPoint: int getLatitude()>();

        $i3 = $i4 - $i3;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i3 = $i3 * 2;

        $i2 = $i2 + $i1;

        $i2 = $i2 / 2;

        $i1 = virtualinvoke $r2.<com.google.map.MapPoint: int getLongitude()>();

        $i2 = $i1 - $i2;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i2 = $i2 * 2;

        $i0 = $i2 + $i0;

        $r6 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r6 = virtualinvoke $r6.<com.google.map.MapState: com.google.map.MapState newMapState(com.google.map.MapPoint)>($r2);

        $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState> = $r6;

        $i2 = $i5 + $i3;

     label11:
        $r7 = specialinvoke $r0.<com.google.googlenav.map.Map: com.google.map.Zoom findZoom(int,int)>($i2, $i0);

     label12:
        exitmonitor $r0;

        return $r7;

     label13:
        $i2 = $i5;

        goto label11;

        catch java.lang.Throwable from label01 to label03 with label03;
        catch java.lang.Throwable from label04 to label12 with label03;
    }

    public boolean isSatellite()
    {
        com.google.googlenav.map.Map $r0;
        boolean $z0;
        com.google.map.MapState $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $z0 = virtualinvoke $r1.<com.google.map.MapState: boolean isSatellite()>();

        return $z0;
    }

    public boolean loadToCover(com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.googlenav.map.Tile $r2;
        byte $b0;
        com.google.map.MapState $r3;
        com.google.map.Zoom $r4;
        com.google.googlenav.map.MapService $r5;
        boolean $z0;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 = new com.google.googlenav.map.Tile;

        $b0 = specialinvoke $r0.<com.google.googlenav.map.Map: byte getTileFlags()>();

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        specialinvoke $r2.<com.google.googlenav.map.Tile: void <init>(byte,com.google.map.MapPoint,com.google.map.Zoom)>($b0, $r1, $r4);

        $r5 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $z0 = virtualinvoke $r5.<com.google.googlenav.map.MapService: boolean isTileInMemoryOrQueued(com.google.googlenav.map.Tile)>($r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r5.<com.google.googlenav.map.MapService: com.google.googlenav.map.MapTile getTile(com.google.googlenav.map.Tile,int,boolean,boolean)>($r2, 8000000, 1, 1);

        return 1;
    }

    public void move(int, int)
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i1;
        com.google.map.MapState $r1;
        com.google.map.MapPoint $r2;
        com.google.map.Zoom $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.googlenav.map.Map;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r3 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $r2 = virtualinvoke $r2.<com.google.map.MapPoint: com.google.map.MapPoint pixelOffset(int,int,com.google.map.Zoom)>($i0, $i1, $r3);

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notifyUserInput()
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.MapService $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r1.<com.google.googlenav.map.MapService: void notifyUserInput()>();

        return;
    }

    public void pause()
    {
        com.google.googlenav.map.Map $r0;
        boolean $z0;
        com.google.googlenav.map.MapService $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $z0 = $r0.<com.google.googlenav.map.Map: boolean running>;

        if $z0 == 0 goto label1;

        $r0.<com.google.googlenav.map.Map: boolean running> = 0;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r1.<com.google.googlenav.map.MapService: void pause()>();

        staticinvoke <com.google.googlenav.map.MapTile: void stopDecodeThread()>();

        return;

     label1:
        return;
    }

    public int preCache(com.google.googlenav.map.Tile[])
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.Tile[] $r1;
        int $i0, $i1, $i3, $i4, $i5;
        boolean $z0;
        short $s2;
        com.google.googlenav.map.MapService $r2;
        com.google.googlenav.map.Tile $r3;
        com.google.googlenav.map.MapTile $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.Tile[];

        if $r1 == null goto label01;

        $i1 = lengthof $r1;

        if $i1 != 0 goto label02;

     label01:
        return 0;

     label02:
        $z0 = virtualinvoke $r0.<com.google.googlenav.map.Map: boolean isSatellite()>();

        if $z0 == 0 goto label08;

        $s2 = 4177;

     label03:
        $z0 = virtualinvoke $r0.<com.google.googlenav.map.Map: boolean isSatellite()>();

        if $z0 == 0 goto label09;

        $i1 = <com.google.googlenav.map.Map: int MAX_PRELOAD_SAT_TILES>;

     label04:
        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $i3 = virtualinvoke $r2.<com.google.googlenav.map.MapService: int getMaxCacheDataSize()>();

        $i3 = $i3 / $s2;

        $i3 = $i3 / 2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        $i3 = 0;

        $i4 = 8000000;

        $i5 = 0;

     label05:
        $i0 = lengthof $r1;

        if $i5 >= $i0 goto label12;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $r3 = $r1[$i5];

        $z0 = virtualinvoke $r2.<com.google.googlenav.map.MapService: boolean isTileInMemoryOrQueued(com.google.googlenav.map.Tile)>($r3);

        if $z0 != 0 goto label11;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        $r3 = $r1[$i5];

        $i0 = $i4 + 1;

        $r4 = virtualinvoke $r2.<com.google.googlenav.map.MapService: com.google.googlenav.map.MapTile getTile(com.google.googlenav.map.Tile,int,boolean,boolean)>($r3, $i4, 1, 1);

        $i4 = virtualinvoke $r4.<com.google.googlenav.map.MapTile: int getDataSize()>();

        if $i4 != 0 goto label06;

        virtualinvoke $r4.<com.google.googlenav.map.MapTile: void setIsPreCached(boolean)>(1);

        $i3 = $i3 + 1;

     label06:
        if $i3 < $i1 goto label10;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("preCache limit: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r6);

        $i1 = $i3;

     label07:
        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r2.<com.google.googlenav.map.MapService: boolean requestTiles(boolean)>(0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("preCache request: ");

        $i3 = lengthof $r1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; retrieved from server: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r6);

        return $i1;

     label08:
        $s2 = 2637;

        goto label03;

     label09:
        $i1 = <com.google.googlenav.map.Map: int MAX_PRELOAD_MAP_TILES>;

        goto label04;

     label10:
        $i4 = $i0;

     label11:
        $i5 = $i5 + 1;

        goto label05;

     label12:
        $i1 = $i3;

        goto label07;
    }

    public void preLoad(com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1, $r2;
        com.google.map.MapState $r3;
        java.lang.Throwable $r4, $r5;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

     label2:
        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r1);

        specialinvoke $r0.<com.google.googlenav.map.Map: boolean drawMapBackground(com.google.common.graphics.GoogleGraphics,boolean,boolean)>(null, 1, 0);

     label3:
        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r2);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r4 := @caughtexception;

     label6:
        virtualinvoke $r0.<com.google.googlenav.map.Map: void setCenterPoint(com.google.map.MapPoint)>($r2);

        throw $r4;

     label7:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void removeLayerService(com.google.googlenav.map.LayerService)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.LayerService $r1;
        java.util.Vector $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.LayerService;

        $r2 = $r0.<com.google.googlenav.map.Map: java.util.Vector layerServices>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

        return;
    }

    public void resize(int, int)
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i1, $i2;
        com.google.googlenav.map.Tile[] $r1;
        com.google.googlenav.map.MapService $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0.<com.google.googlenav.map.Map: int displayHeight> = $i1;

        $r0.<com.google.googlenav.map.Map: int displayWidth> = $i0;

        $i2 = $i0 / 2;

        $r0.<com.google.googlenav.map.Map: int halfWidth> = $i2;

        $i2 = $i1 / 2;

        $r0.<com.google.googlenav.map.Map: int halfHeight> = $i2;

        $i0 = $i0 + 128;

        $i0 = $i0 - 1;

        $i0 = $i0 / 128;

        $i0 = $i0 + 1;

        $r0.<com.google.googlenav.map.Map: int xTiles> = $i0;

        $i0 = $i1 + 128;

        $i0 = $i0 - 1;

        $i0 = $i0 / 128;

        $i0 = $i0 + 1;

        $r0.<com.google.googlenav.map.Map: int yTiles> = $i0;

        $i1 = $r0.<com.google.googlenav.map.Map: int xTiles>;

        $i0 = $r0.<com.google.googlenav.map.Map: int yTiles>;

        $i0 = $i1 * $i0;

        $r1 = newarray (com.google.googlenav.map.Tile)[$i0];

        $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.Tile[] tiles> = $r1;

        specialinvoke $r0.<com.google.googlenav.map.Map: void updateTopLeftTile(boolean)>(1);

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r2.<com.google.googlenav.map.MapService: void mapChanged()>();

        $r0.<com.google.googlenav.map.Map: int completeTilesInViewport> = 0;

        $r0.<com.google.googlenav.map.Map: boolean isViewportAllNew> = 0;

        return;
    }

    public void resume()
    {
        com.google.googlenav.map.Map $r0;
        boolean $z0;
        com.google.googlenav.map.MapService $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $z0 = $r0.<com.google.googlenav.map.Map: boolean running>;

        if $z0 != 0 goto label1;

        $r0.<com.google.googlenav.map.Map: boolean running> = 1;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r1.<com.google.googlenav.map.MapService: void resume()>();

        return;

     label1:
        return;
    }

    public void saveState()
    {
        com.google.googlenav.map.Map $r0;
        java.io.ByteArrayOutputStream $r1;
        java.io.DataOutputStream $r2;
        com.google.map.MapState $r3;
        com.google.map.MapPoint $r4;
        com.google.map.Zoom $r5;
        int $i0;
        boolean $z0;
        byte $b1;
        byte[] $r6;
        com.google.common.Config $r7;
        com.google.common.io.PersistentStore $r8;
        java.io.IOException $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.google.googlenav.map.Map;

        entermonitor $r0;

     label01:
        $r1 = new java.io.ByteArrayOutputStream;

     label02:
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(14);

        $r2 = new java.io.DataOutputStream;

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>(2);

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r4 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.MapPoint getCenterPoint()>();

        staticinvoke <com.google.map.MapPoint: void writePoint(com.google.map.MapPoint,java.io.DataOutput)>($r4, $r2);

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r5 = virtualinvoke $r3.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i0 = virtualinvoke $r5.<com.google.map.Zoom: int getZoomLevel()>();

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r3 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $z0 = virtualinvoke $r3.<com.google.map.MapState: boolean isSatellite()>();

     label03:
        if $z0 == 0 goto label07;

     label04:
        $b1 = 1;

     label05:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeByte(int)>($b1);

        $r6 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r8 = virtualinvoke $r7.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        interfaceinvoke $r8.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("Map info", $r6);

     label06:
        exitmonitor $r0;

        return;

     label07:
        $b1 = 0;

        goto label05;

     label08:
        $r9 := @caughtexception;

     label09:
        staticinvoke <com.google.common.Log: void logThrowable(java.lang.String,java.lang.Throwable)>("MAP", $r9);

     label10:
        goto label06;

     label11:
        $r10 := @caughtexception;

        exitmonitor $r0;

        throw $r10;

        catch java.io.IOException from label02 to label03 with label08;
        catch java.io.IOException from label04 to label06 with label08;
        catch java.lang.Throwable from label01 to label06 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void setBillingPointListener(com.google.googlenav.map.Map$BillingPointListener)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.Map$BillingPointListener $r1;
        com.google.googlenav.map.MapBiller $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.Map$BillingPointListener;

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapBiller biller>;

        virtualinvoke $r2.<com.google.googlenav.map.MapBiller: void setBillingPointListener(com.google.googlenav.map.Map$BillingPointListener)>($r1);

        return;
    }

    public void setCenterPoint(com.google.map.MapPoint)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapPoint $r1;
        com.google.map.MapState $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapPoint;

        entermonitor $r0;

        if $r1 == null goto label2;

     label1:
        $r2 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r2.<com.google.map.MapState: com.google.map.MapState newMapState(com.google.map.MapPoint)>($r1);

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setMapState(com.google.map.MapState)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setMapState(com.google.map.MapState)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState $r1;
        com.google.map.MapPoint $r2;
        int $i0, $i1;
        com.google.map.Zoom $r3;
        com.google.googlenav.map.MapService $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.MapState;

        entermonitor $r0;

        if $r1 != null goto label2;

     label1:
        exitmonitor $r0;

        return;

     label2:
        $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState> = $r1;

        $r2 = virtualinvoke $r0.<com.google.googlenav.map.Map: com.google.map.MapPoint getCenterPoint()>();

        $i0 = virtualinvoke $r0.<com.google.googlenav.map.Map: int getMaxMapZoomForPoint(com.google.map.MapPoint)>($r2);

        $r3 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.Zoom getZoom()>();

        $i1 = virtualinvoke $r3.<com.google.map.Zoom: int getZoomLevel()>();

        if $i1 <= $i0 goto label3;

        $r3 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>($i0);

        $r1 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapState newMapState(com.google.map.Zoom)>($r3);

        $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState> = $r1;

     label3:
        specialinvoke $r0.<com.google.googlenav.map.Map: void calculateCenterPixel()>();

        specialinvoke $r0.<com.google.googlenav.map.Map: void updateTopLeftTile(boolean)>(0);

        $r4 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r4.<com.google.googlenav.map.MapService: void mapChanged()>();

        $r0.<com.google.googlenav.map.Map: int completeTilesInViewport> = 0;

        $r0.<com.google.googlenav.map.Map: boolean isViewportAllNew> = 0;

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label2 to label4 with label5;
    }

    public void setRepaintListener(com.google.common.ui.RepaintListener)
    {
        com.google.googlenav.map.Map $r0;
        com.google.common.ui.RepaintListener $r1;
        com.google.googlenav.map.MapService $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.common.ui.RepaintListener;

        staticinvoke <com.google.googlenav.map.MapTile: void setRepaintListener(com.google.common.ui.RepaintListener)>($r1);

        $r2 = $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.MapService mapService>;

        virtualinvoke $r2.<com.google.googlenav.map.MapService: void setRepaintListener(com.google.common.ui.RepaintListener)>($r1);

        return;
    }

    public void setTileOverlayRenderer(com.google.googlenav.map.TileOverlayRenderer)
    {
        com.google.googlenav.map.Map $r0;
        com.google.googlenav.map.TileOverlayRenderer $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.googlenav.map.TileOverlayRenderer;

        $r0.<com.google.googlenav.map.Map: com.google.googlenav.map.TileOverlayRenderer tileOverlayRenderer> = $r1;

        return;
    }

    public void setZoom(com.google.map.Zoom)
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.Zoom $r1;
        com.google.map.MapState $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 := @parameter0: com.google.map.Zoom;

        entermonitor $r0;

        if $r1 == null goto label2;

     label1:
        $r2 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r2 = virtualinvoke $r2.<com.google.map.MapState: com.google.map.MapState newMapState(com.google.map.Zoom)>($r1);

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setMapState(com.google.map.MapState)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void toggleSatellite()
    {
        com.google.googlenav.map.Map $r0;
        com.google.map.MapState $r1;

        $r0 := @this: com.google.googlenav.map.Map;

        $r1 = $r0.<com.google.googlenav.map.Map: com.google.map.MapState mapState>;

        $r1 = virtualinvoke $r1.<com.google.map.MapState: com.google.map.MapState toggleTileMode()>();

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setMapState(com.google.map.MapState)>($r1);

        return;
    }

    public void zoomToSpan(int, int)
    {
        com.google.googlenav.map.Map $r0;
        int $i0, $i1;
        com.google.map.Zoom $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.googlenav.map.Map;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r1 = specialinvoke $r0.<com.google.googlenav.map.Map: com.google.map.Zoom findZoom(int,int)>($i0, $i1);

        virtualinvoke $r0.<com.google.googlenav.map.Map: void setZoom(com.google.map.Zoom)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
