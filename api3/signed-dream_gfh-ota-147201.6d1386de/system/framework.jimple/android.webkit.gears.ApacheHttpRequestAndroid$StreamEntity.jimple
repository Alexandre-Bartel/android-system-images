class android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity extends java.lang.Object implements org.apache.http.HttpEntity
{
    private java.io.OutputStream mOutputStream;
    final android.webkit.gears.ApacheHttpRequestAndroid this$0;

    void <init>(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;
        android.webkit.gears.ApacheHttpRequestAndroid $r1;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        $r1 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void write(android.webkit.gears.ApacheHttpRequestAndroid$DataPacket)
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;
        android.webkit.gears.ApacheHttpRequestAndroid$DataPacket $r1;
        java.io.OutputStream $r2;
        byte[] $r3;
        int $i0;
        java.io.IOException $r4;
        android.webkit.gears.ApacheHttpRequestAndroid $r5;
        java.util.concurrent.locks.Lock $r6;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        $r1 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid$DataPacket;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream>;

     label2:
        $r3 = virtualinvoke $r1.<android.webkit.gears.ApacheHttpRequestAndroid$DataPacket: byte[] getBytes()>();

        $i0 = virtualinvoke $r1.<android.webkit.gears.ApacheHttpRequestAndroid$DataPacket: int getLength()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        $r5 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r6 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$400(android.webkit.gears.ApacheHttpRequestAndroid)>($r5);

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>();

        $r5 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: boolean access$502(android.webkit.gears.ApacheHttpRequestAndroid,boolean)>($r5, 1);

        $r5 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r6 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$400(android.webkit.gears.ApacheHttpRequestAndroid)>($r5);

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void consumeContent() throws java.io.IOException
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return;
    }

    public java.io.InputStream getContent() throws java.io.IOException
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return null;
    }

    public org.apache.http.Header getContentEncoding()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return null;
    }

    public long getContentLength()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;
        long $l0;
        android.webkit.gears.ApacheHttpRequestAndroid $r1;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $l0 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: long access$700(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        return $l0;
    }

    public org.apache.http.Header getContentType()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return null;
    }

    public boolean isChunked()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return 0;
    }

    public boolean isReady()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;
        android.webkit.gears.ApacheHttpRequestAndroid $r1;
        java.util.concurrent.locks.Lock $r2;
        java.io.OutputStream $r3;
        java.util.concurrent.locks.Condition $r4;
        java.lang.InterruptedException $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r2 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream>;

        if $r3 != null goto label3;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

     label2:
        $r4 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Condition access$900(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void await()>();

     label3:
        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r2 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

     label4:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream>;

        if $r3 != null goto label7;

        return 0;

     label5:
        $r5 := @caughtexception;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r2 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label4;

     label6:
        $r6 := @caughtexception;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r2 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

     label7:
        return 1;

        catch java.lang.InterruptedException from label2 to label3 with label5;
        catch java.lang.Throwable from label1 to label3 with label6;
    }

    public boolean isRepeatable()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return 0;
    }

    public boolean isStreaming()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        return 1;
    }

    public void signalOutputStream()
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;
        android.webkit.gears.ApacheHttpRequestAndroid $r1;
        java.util.concurrent.locks.Lock $r2;
        java.util.concurrent.locks.Condition $r3;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r2 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r3 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Condition access$900(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r2 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r1);

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r0;
        java.io.OutputStream $r1;
        android.webkit.gears.ApacheHttpRequestAndroid $r2;
        java.util.concurrent.locks.Lock $r3;
        java.util.concurrent.locks.Condition $r4;
        boolean $z0, $z1;
        android.webkit.gears.ApacheHttpRequestAndroid$Buffer $r5;
        android.webkit.gears.ApacheHttpRequestAndroid$DataPacket $r6;
        android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed $r7;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r3 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream> = $r1;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r4 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Condition access$900(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signal()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r3 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        $z0 = 0;

     label1:
        if $z0 != 0 goto label5;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r5 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$Buffer access$1000(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        $r6 = virtualinvoke $r5.<android.webkit.gears.ApacheHttpRequestAndroid$Buffer: android.webkit.gears.ApacheHttpRequestAndroid$DataPacket get()>();

        if $r6 != null goto label4;

        $z0 = 1;

     label2:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r7 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed access$1100(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        virtualinvoke $r7.<android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed: void packetConsumed()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r3 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$400(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $z1 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: boolean access$500(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        if $z1 == 0 goto label3;

        $z0 = 1;

     label3:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: android.webkit.gears.ApacheHttpRequestAndroid this$0>;

        $r3 = staticinvoke <android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock access$400(android.webkit.gears.ApacheHttpRequestAndroid)>($r2);

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label1;

     label4:
        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: void write(android.webkit.gears.ApacheHttpRequestAndroid$DataPacket)>($r6);

        goto label2;

     label5:
        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: java.io.OutputStream mOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }
}
