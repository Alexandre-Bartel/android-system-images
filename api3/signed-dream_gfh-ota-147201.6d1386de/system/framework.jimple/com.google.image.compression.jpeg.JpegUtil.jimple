public class com.google.image.compression.jpeg.JpegUtil extends java.lang.Object
{
    private static final int IMAGE_IO_SCALE;
    private static final byte[][] JPEG_QUANT_TABLES;
    public static final int QUALITY_ALGORITHM_JAVAX_IMAGEIO;
    public static final int QUALITY_ALGORITHM_LIBJPEG;
    public static final int QUANT_TYPE_CHROMINANCE;
    public static final int QUANT_TYPE_LUMINANCE;
    private static final int[] imageIoScaleFactor;

    static void <clinit>()
    {
        byte[][] $r0;
        byte[] $r1;
        int[] $r2;

        <com.google.image.compression.jpeg.JpegUtil: int QUANT_TYPE_CHROMINANCE> = 1;

        <com.google.image.compression.jpeg.JpegUtil: int QUALITY_ALGORITHM_LIBJPEG> = 1;

        <com.google.image.compression.jpeg.JpegUtil: int QUALITY_ALGORITHM_JAVAX_IMAGEIO> = 0;

        <com.google.image.compression.jpeg.JpegUtil: int IMAGE_IO_SCALE> = 16777216;

        $r0 = newarray (byte[])[2];

        $r1 = newarray (byte)[64];

        $r1[0] = 16;

        $r1[1] = 11;

        $r1[2] = 12;

        $r1[3] = 14;

        $r1[4] = 12;

        $r1[5] = 10;

        $r1[6] = 16;

        $r1[7] = 14;

        $r1[8] = 13;

        $r1[9] = 14;

        $r1[10] = 18;

        $r1[11] = 17;

        $r1[12] = 16;

        $r1[13] = 19;

        $r1[14] = 24;

        $r1[15] = 40;

        $r1[16] = 26;

        $r1[17] = 24;

        $r1[18] = 22;

        $r1[19] = 22;

        $r1[20] = 24;

        $r1[21] = 49;

        $r1[22] = 35;

        $r1[23] = 37;

        $r1[24] = 29;

        $r1[25] = 40;

        $r1[26] = 58;

        $r1[27] = 51;

        $r1[28] = 61;

        $r1[29] = 60;

        $r1[30] = 57;

        $r1[31] = 51;

        $r1[32] = 56;

        $r1[33] = 55;

        $r1[34] = 64;

        $r1[35] = 72;

        $r1[36] = 92;

        $r1[37] = 78;

        $r1[38] = 64;

        $r1[39] = 68;

        $r1[40] = 87;

        $r1[41] = 69;

        $r1[42] = 55;

        $r1[43] = 56;

        $r1[44] = 80;

        $r1[45] = 109;

        $r1[46] = 81;

        $r1[47] = 87;

        $r1[48] = 95;

        $r1[49] = 98;

        $r1[50] = 103;

        $r1[51] = 104;

        $r1[52] = 103;

        $r1[53] = 62;

        $r1[54] = 77;

        $r1[55] = 113;

        $r1[56] = 121;

        $r1[57] = 112;

        $r1[58] = 100;

        $r1[59] = 120;

        $r1[60] = 92;

        $r1[61] = 101;

        $r1[62] = 103;

        $r1[63] = 99;

        $r0[0] = $r1;

        $r1 = newarray (byte)[64];

        $r1[0] = 17;

        $r1[1] = 18;

        $r1[2] = 18;

        $r1[3] = 24;

        $r1[4] = 21;

        $r1[5] = 24;

        $r1[6] = 47;

        $r1[7] = 26;

        $r1[8] = 26;

        $r1[9] = 47;

        $r1[10] = 99;

        $r1[11] = 66;

        $r1[12] = 56;

        $r1[13] = 66;

        $r1[14] = 99;

        $r1[15] = 99;

        $r1[16] = 99;

        $r1[17] = 99;

        $r1[18] = 99;

        $r1[19] = 99;

        $r1[20] = 99;

        $r1[21] = 99;

        $r1[22] = 99;

        $r1[23] = 99;

        $r1[24] = 99;

        $r1[25] = 99;

        $r1[26] = 99;

        $r1[27] = 99;

        $r1[28] = 99;

        $r1[29] = 99;

        $r1[30] = 99;

        $r1[31] = 99;

        $r1[32] = 99;

        $r1[33] = 99;

        $r1[34] = 99;

        $r1[35] = 99;

        $r1[36] = 99;

        $r1[37] = 99;

        $r1[38] = 99;

        $r1[39] = 99;

        $r1[40] = 99;

        $r1[41] = 99;

        $r1[42] = 99;

        $r1[43] = 99;

        $r1[44] = 99;

        $r1[45] = 99;

        $r1[46] = 99;

        $r1[47] = 99;

        $r1[48] = 99;

        $r1[49] = 99;

        $r1[50] = 99;

        $r1[51] = 99;

        $r1[52] = 99;

        $r1[53] = 99;

        $r1[54] = 99;

        $r1[55] = 99;

        $r1[56] = 99;

        $r1[57] = 99;

        $r1[58] = 99;

        $r1[59] = 99;

        $r1[60] = 99;

        $r1[61] = 99;

        $r1[62] = 99;

        $r1[63] = 99;

        $r0[1] = $r1;

        <com.google.image.compression.jpeg.JpegUtil: byte[][] JPEG_QUANT_TABLES> = $r0;

        $r2 = newarray (int)[101];

        $r2[0] = -1;

        $r2[1] = 1677721601;

        $r2[2] = 838860801;

        $r2[3] = 559240577;

        $r2[4] = 419430401;

        $r2[5] = 335544321;

        $r2[6] = 279620289;

        $r2[7] = 239674513;

        $r2[8] = 209715201;

        $r2[9] = 186413505;

        $r2[10] = 167772161;

        $r2[11] = 152520145;

        $r2[12] = 139810145;

        $r2[13] = 129055513;

        $r2[14] = 119837257;

        $r2[15] = 111848105;

        $r2[16] = 104857601;

        $r2[17] = 98689505;

        $r2[18] = 93206753;

        $r2[19] = 88301137;

        $r2[20] = 83886081;

        $r2[21] = 79891505;

        $r2[22] = 76260073;

        $r2[23] = 72944417;

        $r2[24] = 69905073;

        $r2[25] = 67108865;

        $r2[26] = 64527757;

        $r2[27] = 62137837;

        $r2[28] = 59918629;

        $r2[29] = 57852473;

        $r2[30] = 55924053;

        $r2[31] = 54120053;

        $r2[32] = 52428801;

        $r2[33] = 50840049;

        $r2[34] = 49344753;

        $r2[35] = 47934905;

        $r2[36] = 46603377;

        $r2[37] = 45343829;

        $r2[38] = 44150569;

        $r2[39] = 43018505;

        $r2[40] = 41943041;

        $r2[41] = 40920041;

        $r2[42] = 39945753;

        $r2[43] = 39016781;

        $r2[44] = 38130037;

        $r2[45] = 37282705;

        $r2[46] = 36472209;

        $r2[47] = 35696205;

        $r2[48] = 34952537;

        $r2[49] = 34239217;

        $r2[50] = 33554433;

        $r2[51] = 32883345;

        $r2[52] = 32212257;

        $r2[53] = 31541169;

        $r2[54] = 30870077;

        $r2[55] = 30198989;

        $r2[56] = 29527901;

        $r2[57] = 28856813;

        $r2[58] = 28185725;

        $r2[59] = 27514637;

        $r2[60] = 26843545;

        $r2[61] = 26172457;

        $r2[62] = 25501369;

        $r2[63] = 24830281;

        $r2[64] = 24159193;

        $r2[65] = 23488105;

        $r2[66] = 22817013;

        $r2[67] = 22145925;

        $r2[68] = 21474837;

        $r2[69] = 20803749;

        $r2[70] = 20132661;

        $r2[71] = 19461573;

        $r2[72] = 18790481;

        $r2[73] = 18119393;

        $r2[74] = 17448305;

        $r2[75] = 16777217;

        $r2[76] = 16106129;

        $r2[77] = 15435041;

        $r2[78] = 14763953;

        $r2[79] = 14092861;

        $r2[80] = 13421773;

        $r2[81] = 12750685;

        $r2[82] = 12079597;

        $r2[83] = 11408509;

        $r2[84] = 10737421;

        $r2[85] = 10066329;

        $r2[86] = 9395241;

        $r2[87] = 8724153;

        $r2[88] = 8053065;

        $r2[89] = 7381977;

        $r2[90] = 6710889;

        $r2[91] = 6039797;

        $r2[92] = 5368709;

        $r2[93] = 4697621;

        $r2[94] = 4026533;

        $r2[95] = 3355445;

        $r2[96] = 2684357;

        $r2[97] = 2013265;

        $r2[98] = 1342177;

        $r2[99] = 671089;

        $r2[100] = 1;

        <com.google.image.compression.jpeg.JpegUtil: int[] imageIoScaleFactor> = $r2;

        return;
    }

    private void <init>()
    {
        com.google.image.compression.jpeg.JpegUtil $r0;

        $r0 := @this: com.google.image.compression.jpeg.JpegUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] compactJpeg(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r0 = staticinvoke <com.google.image.compression.jpeg.JpegUtil: byte[] compactJpeg(byte[],int,int)>($r0, 0, $i0);

        return $r0;
    }

    public static byte[] compactJpeg(byte[], int, int)
    {
        byte[] $r0, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.google.image.compression.jpeg.JpegHeaderParams $r1;
        byte $b6;
        java.lang.IllegalStateException $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $r1 = staticinvoke <com.google.image.compression.jpeg.AnalyzeJpegHeader: com.google.image.compression.jpeg.JpegHeaderParams analyze(byte[],int,int)>($r0, $i0, $i1);

     label2:
        $i2 = virtualinvoke $r1.<com.google.image.compression.jpeg.JpegHeaderParams: int getWidth()>();

        $i3 = virtualinvoke $r1.<com.google.image.compression.jpeg.JpegHeaderParams: int getHeight()>();

        $i4 = virtualinvoke $r1.<com.google.image.compression.jpeg.JpegHeaderParams: int getHeaderLength()>();

        $i5 = $i1 - $i4;

        $i5 = $i5 + 11;

        $r2 = newarray (byte)[$i5];

        $r2[0] = 67;

        $r2[1] = 74;

        $r2[2] = 80;

        $r2[3] = 71;

        $i5 = virtualinvoke $r1.<com.google.image.compression.jpeg.JpegHeaderParams: int getVariant()>();

        $b6 = (byte) $i5;

        $r2[4] = $b6;

        $i5 = $i2 >> 8;

        $b6 = (byte) $i5;

        $r2[5] = $b6;

        $i2 = $i2 & 255;

        $b6 = (byte) $i2;

        $r2[6] = $b6;

        $i2 = $i3 >> 8;

        $b6 = (byte) $i2;

        $r2[7] = $b6;

        $i3 = $i3 & 255;

        $b6 = (byte) $i3;

        $r2[8] = $b6;

        $i3 = virtualinvoke $r1.<com.google.image.compression.jpeg.JpegHeaderParams: int getQuality()>();

        $b6 = (byte) $i3;

        $r2[9] = $b6;

        $i3 = virtualinvoke $r1.<com.google.image.compression.jpeg.JpegHeaderParams: int getQualityAlgorithm()>();

        $b6 = (byte) $i3;

        $r2[10] = $b6;

        $i0 = $i0 + $i4;

        $i1 = $i1 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i0, $r2, 11, $i1);

        return $r2;

     label3:
        $r3 := @caughtexception;

        $r2 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i0, $r2, 0, $i1);

        return $r2;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public static byte[] getQuantTable(int, int, int)
    {
        int $i0, $i1, $i2;
        byte $b3;
        byte[] $r0, $r2;
        byte[][] $r1;
        short $s4;
        java.lang.Throwable $r3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        entermonitor class "com/google/image/compression/jpeg/JpegUtil";

     label1:
        $r0 = newarray (byte)[64];

        $r1 = <com.google.image.compression.jpeg.JpegUtil: byte[][] JPEG_QUANT_TABLES>;

        $r2 = $r1[$i0];

        $i0 = 0;

     label2:
        if $i0 >= 64 goto label4;

        $b3 = $r2[$i0];

        $s4 = $b3 & 255;

        $b3 = staticinvoke <com.google.image.compression.jpeg.JpegUtil: byte getScaledQuantizationFactor(int,int,int)>($s4, $i1, $i2);

        $r0[$i0] = $b3;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        exitmonitor class "com/google/image/compression/jpeg/JpegUtil";

        return $r0;

     label5:
        $r3 := @caughtexception;

        exitmonitor class "com/google/image/compression/jpeg/JpegUtil";

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public static byte getQuantizationTableEntry(int, int)
    {
        int $i0, $i1;
        byte[][] $r0;
        byte[] $r1;
        byte $b2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = <com.google.image.compression.jpeg.JpegUtil: byte[][] JPEG_QUANT_TABLES>;

        $r1 = $r0[$i0];

        $b2 = $r1[$i1];

        return $b2;
    }

    public static byte getScaledQuantizationFactor(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;
        byte $b3;
        long $l4, $l5;
        int[] $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        lookupswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label6;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("qualityAlgorithm");

        throw $r0;

     label2:
        if $i0 != 99 goto label5;

        if $i1 != 36 goto label5;

        $i0 = 138;

     label3:
        if $i0 >= 1 goto label9;

        $i0 = 1;

     label4:
        $b3 = (byte) $i0;

        return $b3;

     label5:
        $l4 = (long) $i0;

        $r1 = <com.google.image.compression.jpeg.JpegUtil: int[] imageIoScaleFactor>;

        $i0 = $r1[$i1];

        $l5 = (long) $i0;

        $l4 = $l4 * $l5;

        $l4 = $l4 / 16777216L;

        $l4 = $l4 + 1L;

        $l4 = $l4 / 2L;

        $i0 = (int) $l4;

        goto label3;

     label6:
        if $i1 >= 50 goto label8;

        $i1 = 5000 / $i1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 5000);

     label7:
        $i0 = $i1 * $i0;

        $i0 = $i0 + 50;

        $i0 = $i0 / 100;

        goto label3;

     label8:
        $i1 = $i1 * 2;

        $i1 = 200 - $i1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        goto label7;

     label9:
        if $i0 <= 255 goto label4;

        $i0 = 255;

        goto label4;
    }

    static void prependStandardHeader(byte[], int, int, byte[], int, com.google.image.compression.jpeg.JpegHeaderParams)
    {
        byte[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.google.image.compression.jpeg.JpegHeaderParams $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $r2 := @parameter5: com.google.image.compression.jpeg.JpegHeaderParams;

        $i3 = virtualinvoke $r2.<com.google.image.compression.jpeg.JpegHeaderParams: int getVariant()>();

        $i4 = virtualinvoke $r2.<com.google.image.compression.jpeg.JpegHeaderParams: int getWidth()>();

        $i5 = virtualinvoke $r2.<com.google.image.compression.jpeg.JpegHeaderParams: int getHeight()>();

        $i6 = virtualinvoke $r2.<com.google.image.compression.jpeg.JpegHeaderParams: int getQuality()>();

        $i7 = virtualinvoke $r2.<com.google.image.compression.jpeg.JpegHeaderParams: int getQualityAlgorithm()>();

        if $i3 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("variant");

        throw $r3;

     label1:
        $i8 = staticinvoke <com.google.image.compression.jpeg.GenerateJpegHeader: int getHeaderLength(int)>($i3);

        $i8 = $i8 + $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i0, $r1, $i8, $i1);

        staticinvoke <com.google.image.compression.jpeg.GenerateJpegHeader: int generate(byte[],int,int,int,int,int,int)>($r1, $i2, $i3, $i4, $i5, $i6, $i7);

        return;
    }

    public static byte[] uncompactJpeg(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r0 = staticinvoke <com.google.image.compression.jpeg.JpegUtil: byte[] uncompactJpeg(byte[],int,int)>($r0, 0, $i0);

        return $r0;
    }

    public static byte[] uncompactJpeg(byte[], int, int)
    {
        byte[] $r0, $r1;
        int $i0, $i1, $i3, $i6, $i7, $i9;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        short $s4, $s5, $s8;
        com.google.image.compression.jpeg.JpegHeaderParams $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $b2 = $r0[$i0];

        if $b2 != -1 goto label1;

        $i3 = $i0 + 1;

        $b2 = $r0[$i3];

        if $b2 != -40 goto label1;

        $r1 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i0, $r1, 0, $i1);

        return $r1;

     label1:
        $b2 = $r0[$i0];

        if $b2 != 67 goto label2;

        $i3 = $i0 + 1;

        $b2 = $r0[$i3];

        if $b2 != 74 goto label2;

        $i3 = $i0 + 2;

        $b2 = $r0[$i3];

        if $b2 != 80 goto label2;

        $i3 = $i0 + 3;

        $b2 = $r0[$i3];

        if $b2 == 71 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input is not in compact JPEG format");

        throw $r2;

     label3:
        $i3 = $i0 + 4;

        $b2 = $r0[$i3];

        $s4 = $b2 & 255;

        $i3 = $i0 + 5;

        $b2 = $r0[$i3];

        $s5 = $b2 & 255;

        $i3 = $s5 << 8;

        $i6 = $i0 + 6;

        $b2 = $r0[$i6];

        $s5 = $b2 & 255;

        $i3 = $s5 | $i3;

        $i6 = $i0 + 7;

        $b2 = $r0[$i6];

        $s5 = $b2 & 255;

        $i6 = $s5 << 8;

        $i7 = $i0 + 8;

        $b2 = $r0[$i7];

        $s5 = $b2 & 255;

        $i6 = $s5 | $i6;

        $i7 = $i0 + 9;

        $b2 = $r0[$i7];

        $s5 = $b2 & 255;

        $i7 = $i0 + 10;

        $b2 = $r0[$i7];

        $s8 = $b2 & 255;

     label4:
        $i7 = staticinvoke <com.google.image.compression.jpeg.GenerateJpegHeader: int getHeaderLength(int)>($s4);

     label5:
        $i9 = $i7 + $i1;

        $i9 = $i9 - 11;

        $r1 = newarray (byte)[$i9];

        $r3 = new com.google.image.compression.jpeg.JpegHeaderParams;

        specialinvoke $r3.<com.google.image.compression.jpeg.JpegHeaderParams: void <init>(int,int,int,int,int,int)>($s4, $i3, $i6, $s5, $s8, $i7);

        $i0 = $i0 + 11;

        $i1 = $i1 - 11;

        staticinvoke <com.google.image.compression.jpeg.JpegUtil: void prependStandardHeader(byte[],int,int,byte[],int,com.google.image.compression.jpeg.JpegHeaderParams)>($r0, $i0, $i1, $r1, 0, $r3);

        return $r1;

     label6:
        $r2 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown variant ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }
}
