public final class org.apache.harmony.luni.lang.reflect.ImplForWildcard extends java.lang.Object implements java.lang.reflect.WildcardType
{
    private final org.apache.harmony.luni.lang.reflect.ListOfTypes extendsBound;
    private final org.apache.harmony.luni.lang.reflect.ListOfTypes superBound;

    public void <init>(org.apache.harmony.luni.lang.reflect.ListOfTypes, org.apache.harmony.luni.lang.reflect.ListOfTypes)
    {
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        $r1 := @parameter0: org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r2 := @parameter1: org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes extendsBound> = $r1;

        $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes superBound> = $r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.reflect.WildcardType $r2;
        java.lang.reflect.Type[] $r3, $r4;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.lang.reflect.WildcardType) $r1;

        $r3 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getLowerBounds()>();

        $r4 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getUpperBounds()>();

        $r4 = interfaceinvoke $r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.reflect.Type[] getLowerBounds() throws java.lang.TypeNotPresentException, java.lang.reflect.MalformedParameterizedTypeException
    {
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1;
        java.lang.reflect.Type[] $r2;
        java.lang.Object $r3;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes superBound>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.reflect.Type[]) $r3;

        return $r2;
    }

    public java.lang.reflect.Type[] getUpperBounds() throws java.lang.TypeNotPresentException, java.lang.reflect.MalformedParameterizedTypeException
    {
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1;
        java.lang.reflect.Type[] $r2;
        java.lang.Object $r3;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes extendsBound>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.reflect.Type[]) $r3;

        return $r2;
    }

    public int hashCode()
    {
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r0;
        java.lang.reflect.Type[] $r1;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getLowerBounds()>();

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $i0 = $i0 * 31;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getUpperBounds()>();

        $i1 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r0;
        java.lang.StringBuffer $r1, $r3;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r2;
        int $i0;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes extendsBound>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.luni.lang.reflect.ListOfTypes: int length()>();

        if $i0 <= 0 goto label2;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes extendsBound>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

     label1:
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label2:
        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes superBound>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.luni.lang.reflect.ListOfTypes: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" super ");

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: org.apache.harmony.luni.lang.reflect.ListOfTypes superBound>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        goto label1;
    }
}
