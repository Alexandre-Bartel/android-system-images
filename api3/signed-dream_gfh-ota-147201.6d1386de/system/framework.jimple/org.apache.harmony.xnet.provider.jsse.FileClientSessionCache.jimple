public class org.apache.harmony.xnet.provider.jsse.FileClientSessionCache extends java.lang.Object
{
    static final int MAX_SIZE;
    static final java.util.Map caches;
    static final java.util.logging.Logger logger;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        java.util.HashMap $r3;

        <org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: int MAX_SIZE> = 12;

        $r0 = class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: java.util.logging.Logger logger> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: java.util.Map caches> = $r3;

        return;
    }

    private void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.FileClientSessionCache $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.FileClientSessionCache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void reset()
    {
        java.util.Map $r0;
        java.lang.Throwable $r1;

        entermonitor class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

     label1:
        $r0 = <org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: java.util.Map caches>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

     label2:
        exitmonitor class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static org.apache.harmony.xnet.provider.jsse.SSLClientSessionCache usingDirectory(java.io.File) throws java.io.IOException
    {
        java.io.File $r0;
        java.lang.Object $r1;
        java.util.Map $r2;
        org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: java.io.File;

        entermonitor class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

     label1:
        $r2 = <org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: java.util.Map caches>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl) $r1;

        if $r3 != null goto label2;

        $r3 = new org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl;

        specialinvoke $r3.<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl: void <init>(java.io.File)>($r0);

        $r2 = <org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: java.util.Map caches>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

     label2:
        exitmonitor class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor class "org/apache/harmony/xnet/provider/jsse/FileClientSessionCache";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
