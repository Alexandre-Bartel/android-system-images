final class com.android.server.PackageManagerService$Settings extends java.lang.Object
{
    private final java.io.File mBackupSettingsFilename;
    final java.util.HashMap mDisabledSysPackages;
    private final android.util.SparseArray mOtherUserIds;
    private final java.util.HashMap mPackages;
    private final java.util.ArrayList mPastSignatures;
    private final java.util.ArrayList mPendingPackages;
    private final java.util.ArrayList mPendingPreferredPackages;
    final java.util.HashMap mPermissionTrees;
    final java.util.HashMap mPermissions;
    private final com.android.server.IntentResolver mPreferredActivities;
    private final java.util.ArrayList mPreferredPackages;
    private final java.lang.StringBuilder mReadMessages;
    private final java.io.File mSettingsFilename;
    private final java.util.HashMap mSharedUsers;
    private final java.util.ArrayList mUserIds;

    void <init>()
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.io.File $r1, $r7;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        com.android.server.PackageManagerService$Settings$1 $r4;
        android.util.SparseArray $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPreferredPackages> = $r3;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages> = $r2;

        $r4 = new com.android.server.PackageManagerService$Settings$1;

        specialinvoke $r4.<com.android.server.PackageManagerService$Settings$1: void <init>(com.android.server.PackageManagerService$Settings)>($r0);

        $r0.<com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver mPreferredActivities> = $r4;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds> = $r3;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: android.util.SparseArray mOtherUserIds> = $r5;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures> = $r3;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPreferredPackages> = $r3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages> = $r6;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPackages> = $r3;

        $r7 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "system");

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        $r8 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r8, 509, -1, -1);

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "packages.xml");

        $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename> = $r7;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "packages-backup.xml");

        $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename> = $r7;

        return;
    }

    static void access$1700(com.android.server.PackageManagerService$Settings, com.android.server.PackageManagerService$PackageSetting)
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.PackageManagerService$PackageSetting $r1;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter1: com.android.server.PackageManagerService$PackageSetting;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void updateSharedUserPerms(com.android.server.PackageManagerService$PackageSetting)>($r1);

        return;
    }

    static int access$200(com.android.server.PackageManagerService$Settings, java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter1: java.lang.String;

        $i0 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: int removePackageLP(java.lang.String)>($r1);

        return $i0;
    }

    static java.util.HashMap access$2100(com.android.server.PackageManagerService$Settings)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.util.HashMap r1;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        return r1;
    }

    static java.lang.StringBuilder access$2200(com.android.server.PackageManagerService$Settings)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.StringBuilder r1;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        r1 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        return r1;
    }

    static java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.util.HashMap r1;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        return r1;
    }

    static com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.IntentResolver r1;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        r1 = $r0.<com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver mPreferredActivities>;

        return r1;
    }

    static void access$800(com.android.server.PackageManagerService$Settings, com.android.server.PackageManagerService$PackageSetting, java.lang.String, com.android.server.PackageManagerService$SharedUserSetting)
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.PackageManagerService$PackageSetting $r1;
        java.lang.String $r2;
        com.android.server.PackageManagerService$SharedUserSetting $r3;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter1: com.android.server.PackageManagerService$PackageSetting;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: com.android.server.PackageManagerService$SharedUserSetting;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void insertPackageSettingLP(com.android.server.PackageManagerService$PackageSetting,java.lang.String,com.android.server.PackageManagerService$SharedUserSetting)>($r1, $r2, $r3);

        return;
    }

    static java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: com.android.server.PackageManagerService$Settings;

        r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPreferredPackages>;

        return r1;
    }

    private boolean addUserIdLP(int, java.lang.Object, java.lang.Object)
    {
        com.android.server.PackageManagerService$Settings $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r2, $r4;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.util.SparseArray $r7;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        if $i0 < 11000 goto label1;

        return 0;

     label1:
        if $i0 < 10000 goto label6;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 10000;

     label2:
        if $i1 < $i2 goto label3;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        if $r4 == null goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared id: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r6);

        return 0;

     label4:
        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r1);

     label5:
        return 1;

     label6:
        $r7 = $r0.<com.android.server.PackageManagerService$Settings: android.util.SparseArray mOtherUserIds>;

        $r4 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r4 == null goto label7;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared id: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r6);

        return 0;

     label7:
        $r7 = $r0.<com.android.server.PackageManagerService$Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r1);

        goto label5;
    }

    private com.android.server.PackageManagerService$PackageSetting getPackageLP(java.lang.String, com.android.server.PackageManagerService$SharedUserSetting, java.io.File, java.io.File, int, boolean, boolean)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1, $r13;
        com.android.server.PackageManagerService$SharedUserSetting $r2, $r14;
        java.io.File $r3, $r4, $r8;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        com.android.server.PackageManagerService$PackageSetting $r7, $r9;
        android.content.pm.PackageParser$Package $r10;
        android.content.pm.ApplicationInfo $r11;
        java.lang.StringBuilder $r12;
        long $l2;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.android.server.PackageManagerService$SharedUserSetting;

        $r3 := @parameter2: java.io.File;

        $r4 := @parameter3: java.io.File;

        $i0 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        if $r7 == null goto label02;

        $r8 = $r7.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $z2 = virtualinvoke $r8.<java.io.File: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label04;

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        if $r9 == null goto label01;

        $i1 = $r9.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label01;

        return $r7;

     label01:
        $r10 = $r7.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r10 == null goto label03;

        $r10 = $r7.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r11 = $r10.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r11 == null goto label03;

        $r10 = $r7.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r11 = $r10.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i1 & 1;

        if $i1 != 0 goto label03;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codePath changed from ");

        $r8 = $r7.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Retaining data and using new code");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r13);

     label02:
        if $r7 != null goto label13;

        if $z0 != 0 goto label09;

        return null;

     label03:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codePath changed from ");

        $r8 = $r7.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; replacing with new");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r13);

        $r7 = null;

        goto label02;

     label04:
        $r14 = $r7.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r14 == $r2 goto label02;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared user changed from ");

        $r14 = $r7.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r14 == null goto label07;

        $r14 = $r7.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r13 = $r14.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

     label05:
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        if $r2 == null goto label08;

        $r13 = $r2.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

     label06:
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; replacing with new");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r13);

        $r7 = null;

        goto label02;

     label07:
        $r13 = "<nothing>";

        goto label05;

     label08:
        $r13 = "<nothing>";

        goto label06;

     label09:
        $r7 = new com.android.server.PackageManagerService$PackageSetting;

        specialinvoke $r7.<com.android.server.PackageManagerService$PackageSetting: void <init>(java.lang.String,java.io.File,java.io.File,int)>($r1, $r3, $r4, $i0);

        $l2 = virtualinvoke $r3.<java.io.File: long lastModified()>();

        virtualinvoke $r7.<com.android.server.PackageManagerService$PackageSettingBase: void setTimeStamp(long)>($l2);

        if $r2 == null goto label11;

        $i0 = $r2.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r7.<com.android.server.PackageManagerService$PackageSetting: int userId> = $i0;

     label10:
        $i0 = $r7.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        if $i0 >= 0 goto label12;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be assigned a valid uid");

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r1);

        return null;

     label11:
        $i0 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: int newUserIdLP(java.lang.Object)>($r7);

        $r7.<com.android.server.PackageManagerService$PackageSetting: int userId> = $i0;

        goto label10;

     label12:
        if $z1 == 0 goto label13;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void insertPackageSettingLP(com.android.server.PackageManagerService$PackageSetting,java.lang.String,com.android.server.PackageManagerService$SharedUserSetting)>($r7, $r1, $r2);

     label13:
        return $r7;
    }

    private void insertPackageSettingLP(com.android.server.PackageManagerService$PackageSetting, java.lang.String, com.android.server.PackageManagerService$SharedUserSetting)
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.PackageManagerService$PackageSetting $r1;
        java.lang.String $r2;
        com.android.server.PackageManagerService$SharedUserSetting $r3, $r5;
        java.util.HashMap $r4;
        java.lang.StringBuilder $r6;
        java.util.HashSet $r7;
        int $i0, $i1;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: com.android.server.PackageManagerService$PackageSetting;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.android.server.PackageManagerService$SharedUserSetting;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $r3 == null goto label3;

        $r5 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 == null goto label2;

        $r5 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 == $r3 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r2 = $r1.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user ");

        $r5 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r2);

        $r5 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r7 = $r5.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        virtualinvoke $r7.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

     label1:
        $r7 = $r3.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser> = $r3;

        $i0 = $r3.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r1.<com.android.server.PackageManagerService$PackageSetting: int userId> = $i0;

        return;

     label2:
        $i0 = $r1.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $i1 = $r3.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        if $i0 == $i1 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r2 = $r1.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user id ");

        $i0 = $r1.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now user ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with id ");

        $i0 = $r3.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r2);

        goto label1;

     label3:
        return;
    }

    private int newUserIdLP(java.lang.Object)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.Object $r1, $r3;
        java.util.ArrayList $r2;
        int $i0, $i1;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        if $r3 != null goto label2;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r1);

        $i0 = $i1 + 10000;

        return $i0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if $i0 < 1000 goto label4;

        return -1;

     label4:
        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i0 = $i0 + 10000;

        return $i0;
    }

    private void readDisabledComponentsLP(com.android.server.PackageManagerService$PackageSettingBase, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.PackageManagerService$PackageSettingBase $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        boolean $z0;
        java.util.HashSet $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: com.android.server.PackageManagerService$PackageSettingBase;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label7;

     label2:
        if $i1 == 3 goto label1;

        if $i1 == 4 goto label1;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if $r3 == null goto label4;

        $r4 = $r1.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet disabledComponents>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r2);

        goto label1;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <disabled-components> has no name at ");

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label3;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <disabled-components>: ");

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label3;

     label6:
        return;

     label7:
        return;
    }

    private void readDisabledSysPackageLP(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        com.android.server.PackageManagerService$PackageSetting $r2;
        java.lang.String $r3, $r4, $r5, $r6;
        byte $b0;
        java.io.File $r7, $r8;
        long $l1;
        int $i2, $i3, $i4;
        boolean $z0;
        java.util.HashSet $r9;
        java.lang.StringBuilder $r10;
        java.util.HashMap $r11;
        java.lang.NumberFormatException $r12;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        $r6 = $r5;

        if $r5 != null goto label01;

        $r6 = $r4;

     label01:
        $b0 = 0 | 1;

        $r2 = new com.android.server.PackageManagerService$PackageSetting;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r4);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r6);

        specialinvoke $r2.<com.android.server.PackageManagerService$PackageSetting: void <init>(java.lang.String,java.io.File,java.io.File,int)>($r3, $r7, $r8, $b0);

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

        if $r4 == null goto label03;

     label02:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        virtualinvoke $r2.<com.android.server.PackageManagerService$PackageSettingBase: void setTimeStamp(long,java.lang.String)>($l1, $r4);

     label03:
        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        if $r4 == null goto label09;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label04:
        $r2.<com.android.server.PackageManagerService$PackageSetting: int userId> = $i2;

        $i2 = $r2.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        if $i2 > 0 goto label06;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        if $r4 == null goto label10;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label05:
        $r2.<com.android.server.PackageManagerService$PackageSetting: int userId> = $i2;

     label06:
        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label07:
        $i3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 1 goto label12;

        if $i3 != 3 goto label08;

        $i4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= $i2 goto label12;

     label08:
        if $i3 == 3 goto label07;

        if $i3 == 4 goto label07;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z0 == 0 goto label11;

        $r9 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readGrantedPermissionsLP(org.xmlpull.v1.XmlPullParser,java.util.HashSet)>($r1, $r9);

        goto label07;

     label09:
        $i2 = 0;

        goto label04;

     label10:
        $i2 = 0;

        goto label05;

     label11:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <updated-package>: ");

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label07;

     label12:
        $r11 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        return;

     label13:
        $r12 := @caughtexception;

        goto label03;

        catch java.lang.NumberFormatException from label02 to label03 with label13;
    }

    private void readEnabledComponentsLP(com.android.server.PackageManagerService$PackageSettingBase, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.PackageManagerService$PackageSettingBase $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        boolean $z0;
        java.util.HashSet $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: com.android.server.PackageManagerService$PackageSettingBase;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label7;

     label2:
        if $i1 == 3 goto label1;

        if $i1 == 4 goto label1;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if $r3 == null goto label4;

        $r4 = $r1.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet enabledComponents>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r2);

        goto label1;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <enabled-components> has no name at ");

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label3;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <enabled-components>: ");

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label3;

     label6:
        return;

     label7:
        return;
    }

    private void readGrantedPermissionsLP(org.xmlpull.v1.XmlPullParser, java.util.HashSet) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.util.HashSet $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: java.util.HashSet;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label7;

     label2:
        if $i1 == 3 goto label1;

        if $i1 == 4 goto label1;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if $r3 == null goto label4;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <perms> has no name at ");

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label3;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <perms>: ");

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label3;

     label6:
        return;

     label7:
        return;
    }

    private int readInt(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String, int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, $r3;
        int $i0;
        java.lang.NumberFormatException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r2, $r3);

        if $r2 != null goto label1;

        return $i0;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: attribute ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad integer value ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void readPackageLP(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        byte $b0;
        long $l1;
        boolean $z0;
        int $i2, $i3, $i4;
        java.lang.StringBuilder $r12, r24;
        com.android.server.PackageManagerService$PackageSettingBase $r13;
        java.io.File $r14, $r15, r25;
        com.android.server.PackageManagerService$PackageSetting $r16;
        java.lang.NumberFormatException $r17, $r22, $r23;
        java.util.ArrayList $r18;
        com.android.server.PackageManagerService$Settings$PendingPackage $r19;
        com.android.server.PackageManagerService$PackageSignatures $r20;
        java.util.HashSet $r21;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = null;

        $r3 = null;

        $b0 = 0;

        $l1 = 0L;

     label01:
        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r2 = $r4;

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        $r3 = $r5;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        $r8 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        $r9 = $r8;

        $r10 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

     label02:
        if $r10 == null goto label18;

     label03:
        $r11 = "true";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label04;

        $b0 = 0 | 1;

     label04:
        $r10 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

     label05:
        if $r10 == null goto label07;

     label06:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

     label07:
        if $r5 == null goto label19;

     label08:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label09:
        if $r8 != null goto label10;

        $r9 = $r7;

     label10:
        if $r4 != null goto label20;

        r24 = new java.lang.StringBuilder;

     label11:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no name at ");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r7);

     label12:
        $r13 = null;

     label13:
        if $r13 == null goto label63;

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabled");

        if $r7 == null goto label57;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label54;

        $r13.<com.android.server.PackageManagerService$PackageSettingBase: int enabled> = 1;

     label14:
        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installStatus");

        if $r2 == null goto label15;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z0 == 0 goto label58;

        $r13.<com.android.server.PackageManagerService$PackageSettingBase: int installStatus> = 0;

     label15:
        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label16:
        $i3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 1 goto label66;

        if $i3 != 3 goto label17;

        $i4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= $i2 goto label67;

     label17:
        if $i3 == 3 goto label16;

        if $i3 == 4 goto label16;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

        if $z0 == 0 goto label59;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readDisabledComponentsLP(com.android.server.PackageManagerService$PackageSettingBase,org.xmlpull.v1.XmlPullParser)>($r13, $r1);

        goto label16;

     label18:
        $b0 = 0 | 1;

        goto label04;

     label19:
        $i2 = 0;

        goto label09;

     label20:
        if $r7 != null goto label23;

        r24 = new java.lang.StringBuilder;

        $r12 = r24;

     label21:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no codePath at ");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r7);

     label22:
        $r13 = null;

        goto label13;

     label23:
        if $i2 <= 0 goto label35;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

     label24:
        $r15 = new java.io.File;

     label25:
        $r14 = $r15;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r7);

     label26:
        r25 = new java.io.File;

     label27:
        specialinvoke r25.<java.io.File: void <init>(java.lang.String)>($r9);

        $r16 = virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting addPackageLP(java.lang.String,java.io.File,java.io.File,int,int)>($r4, $r14, r25, $i2, $b0);

     label28:
        $r13 = $r16;

        if $r16 != null goto label33;

        r24 = new java.lang.StringBuilder;

        $r12 = r24;

     label29:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure adding uid ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while parsing settings at ");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r7);

     label30:
        goto label13;

     label31:
        $r17 := @caughtexception;

     label32:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r7);

        goto label13;

     label33:
        virtualinvoke $r16.<com.android.server.PackageManagerService$PackageSettingBase: void setTimeStamp(long,java.lang.String)>($l1, $r10);

     label34:
        goto label13;

     label35:
        if $r6 == null goto label51;

        if $r6 == null goto label47;

     label36:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label37:
        if $i2 <= 0 goto label48;

        $r19 = new com.android.server.PackageManagerService$Settings$PendingPackage;

     label38:
        $r13 = $r19;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

     label39:
        $r15 = new java.io.File;

     label40:
        $r14 = $r15;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r7);

     label41:
        r25 = new java.io.File;

     label42:
        specialinvoke r25.<java.io.File: void <init>(java.lang.String)>($r9);

        specialinvoke $r19.<com.android.server.PackageManagerService$Settings$PendingPackage: void <init>(java.lang.String,java.io.File,java.io.File,int,int)>($r4, $r14, r25, $i2, $b0);

     label43:
        virtualinvoke $r13.<com.android.server.PackageManagerService$PackageSettingBase: void setTimeStamp(long,java.lang.String)>($l1, $r10);

     label44:
        $r18 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPackages>;

     label45:
        $r19 = (com.android.server.PackageManagerService$Settings$PendingPackage) $r13;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label46:
        goto label13;

     label47:
        $i2 = 0;

        goto label37;

     label48:
        r24 = new java.lang.StringBuilder;

        $r12 = r24;

     label49:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad sharedId ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r7);

     label50:
        $r13 = null;

        goto label13;

     label51:
        r24 = new java.lang.StringBuilder;

     label52:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r7);

     label53:
        $r13 = null;

        goto label13;

     label54:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z0 == 0 goto label55;

        $r13.<com.android.server.PackageManagerService$PackageSettingBase: int enabled> = 2;

        goto label14;

     label55:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("default");

        if $z0 == 0 goto label56;

        $r13.<com.android.server.PackageManagerService$PackageSettingBase: int enabled> = 0;

        goto label14;

     label56:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad enabled value: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        goto label14;

     label57:
        $r13.<com.android.server.PackageManagerService$PackageSettingBase: int enabled> = 0;

        goto label14;

     label58:
        $r13.<com.android.server.PackageManagerService$PackageSettingBase: int installStatus> = 1;

        goto label15;

     label59:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z0 == 0 goto label60;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readEnabledComponentsLP(com.android.server.PackageManagerService$PackageSettingBase,org.xmlpull.v1.XmlPullParser)>($r13, $r1);

        goto label16;

     label60:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z0 == 0 goto label61;

        $r20 = $r13.<com.android.server.PackageManagerService$PackageSettingBase: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r18 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r20.<com.android.server.PackageManagerService$PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>($r1, $r18);

        goto label16;

     label61:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z0 == 0 goto label62;

        $r21 = $r13.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readGrantedPermissionsLP(org.xmlpull.v1.XmlPullParser,java.util.HashSet)>($r1, $r21);

        $r13.<com.android.server.PackageManagerService$PackageSettingBase: boolean permissionsFixed> = 1;

        goto label16;

     label62:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <package>: ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label16;

     label63:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        return;

     label64:
        $r22 := @caughtexception;

        goto label07;

     label65:
        $r23 := @caughtexception;

        $r13 = null;

        goto label32;

     label66:
        return;

     label67:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label65;
        catch java.lang.NumberFormatException from label03 to label05 with label65;
        catch java.lang.NumberFormatException from label06 to label07 with label64;
        catch java.lang.NumberFormatException from label08 to label09 with label65;
        catch java.lang.NumberFormatException from label11 to label12 with label65;
        catch java.lang.NumberFormatException from label21 to label22 with label65;
        catch java.lang.NumberFormatException from label23 to label24 with label65;
        catch java.lang.NumberFormatException from label25 to label26 with label65;
        catch java.lang.NumberFormatException from label27 to label28 with label65;
        catch java.lang.NumberFormatException from label29 to label30 with label31;
        catch java.lang.NumberFormatException from label33 to label34 with label31;
        catch java.lang.NumberFormatException from label36 to label37 with label65;
        catch java.lang.NumberFormatException from label38 to label39 with label65;
        catch java.lang.NumberFormatException from label40 to label41 with label65;
        catch java.lang.NumberFormatException from label42 to label43 with label65;
        catch java.lang.NumberFormatException from label43 to label44 with label31;
        catch java.lang.NumberFormatException from label45 to label46 with label31;
        catch java.lang.NumberFormatException from label49 to label50 with label65;
        catch java.lang.NumberFormatException from label52 to label53 with label65;
    }

    private void readPermissionsLP(java.util.HashMap, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.util.HashMap $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        com.android.server.PackageManagerService$BasePermission $r3;
        android.content.pm.PermissionInfo $r4;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0;
        byte $b3;
        java.lang.StringBuilder $r9;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.util.HashMap;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label09;

        if $i1 != 3 goto label02;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label10;

     label02:
        if $i1 == 3 goto label01;

        if $i1 == 4 goto label01;

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label08;

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r6 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        if $r5 == null goto label07;

        if $r6 == null goto label07;

        $r8 = "dynamic";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        $r3 = new com.android.server.PackageManagerService$BasePermission;

        if $z0 == 0 goto label06;

        $b3 = 2;

     label03:
        specialinvoke $r3.<com.android.server.PackageManagerService$BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r5, $r6, $b3);

        if $z0 == 0 goto label04;

        $r4 = new android.content.pm.PermissionInfo;

        specialinvoke $r4.<android.content.pm.PermissionInfo: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        $r4.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r6;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String intern()>();

        $r4.<android.content.pm.PackageItemInfo: java.lang.String name> = $r5;

        $i1 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>($r2, null, "icon", 0);

        $r4.<android.content.pm.PackageItemInfo: int icon> = $i1;

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r4.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel> = $r5;

        $i1 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>($r2, null, "protection", 0);

        $r4.<android.content.pm.PermissionInfo: int protectionLevel> = $i1;

        $r3.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PermissionInfo pendingInfo> = $r4;

     label04:
        $r5 = $r3.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label05:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r2);

        goto label01;

     label06:
        $b3 = 0;

        goto label03;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: permissions has no name at ");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r5);

        goto label05;

     label08:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element reading permissions: ");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r5);

        goto label05;

     label09:
        return;

     label10:
        return;
    }

    private void readPreferredActivitiesLP(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        com.android.server.PackageManagerService$PreferredActivity $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        boolean $z0;
        com.android.server.IntentResolver $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label5;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label6;

     label2:
        if $i1 == 3 goto label1;

        if $i1 == 4 goto label1;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        $r2 = new com.android.server.PackageManagerService$PreferredActivity;

        specialinvoke $r2.<com.android.server.PackageManagerService$PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>($r1);

        $r3 = $r2.<com.android.server.PackageManagerService$PreferredActivity: java.lang.String mParseError>;

        if $r3 != null goto label3;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver mPreferredActivities>;

        virtualinvoke $r4.<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>($r2);

        goto label1;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r3 = $r2.<com.android.server.PackageManagerService$PreferredActivity: java.lang.String mParseError>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        goto label1;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r3);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label5:
        return;

     label6:
        return;
    }

    private void readPreferredPackagesLP(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        boolean $z0;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label7;

     label2:
        if $i1 == 3 goto label1;

        if $i1 == 4 goto label1;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if $r2 == null goto label4;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPreferredPackages>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-package> has no name at ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        goto label3;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-packages>: ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        goto label3;

     label6:
        return;

     label7:
        return;
    }

    private void readSharedUserLP(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, $r3, $r5, $r6, $r7, $r8;
        byte $b0;
        com.android.server.PackageManagerService$SharedUserSetting $r4, $r13;
        int $i1, $i2, $i3;
        boolean $z0;
        java.lang.StringBuilder $r9;
        com.android.server.PackageManagerService$PackageSignatures $r10;
        java.util.ArrayList $r11;
        java.lang.NumberFormatException $r12;
        java.util.HashSet $r14;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = null;

        $r3 = null;

        $b0 = 0;

        $r4 = null;

     label01:
        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r2 = $r5;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

     label02:
        $r3 = $r6;

     label03:
        if $r6 == null goto label11;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label04:
        $r7 = "true";

        $r8 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label05:
        if $z0 == 0 goto label06;

        $b0 = 0 | 1;

     label06:
        if $r5 != null goto label12;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <shared-user> has no name at ");

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r5);

     label08:
        if $r4 == null goto label22;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label09:
        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 1 goto label23;

        if $i2 != 3 goto label10;

        $i3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= $i1 goto label24;

     label10:
        if $i2 == 3 goto label09;

        if $i2 == 4 goto label09;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z0 == 0 goto label20;

        $r10 = $r4.<com.android.server.PackageManagerService$SharedUserSetting: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r11 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r10.<com.android.server.PackageManagerService$PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>($r1, $r11);

        goto label09;

     label11:
        $i1 = 0;

        goto label04;

     label12:
        if $i1 != 0 goto label16;

        $r9 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: shared-user ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r5);

     label14:
        goto label08;

     label15:
        $r12 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        goto label08;

     label16:
        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String intern()>();

        $r13 = virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$SharedUserSetting addSharedUserLP(java.lang.String,int,int)>($r5, $i1, $b0);

     label17:
        $r4 = $r13;

        if $r13 != null goto label08;

     label18:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Occurred while parsing settings at ");

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r5);

     label19:
        goto label08;

     label20:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z0 == 0 goto label21;

        $r14 = $r4.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readGrantedPermissionsLP(org.xmlpull.v1.XmlPullParser,java.util.HashSet)>($r1, $r14);

        goto label09;

     label21:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <shared-user>: ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(5, $r2);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label09;

     label22:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        return;

     label23:
        return;

     label24:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label15;
        catch java.lang.NumberFormatException from label03 to label04 with label15;
        catch java.lang.NumberFormatException from label04 to label05 with label15;
        catch java.lang.NumberFormatException from label07 to label08 with label15;
        catch java.lang.NumberFormatException from label13 to label14 with label15;
        catch java.lang.NumberFormatException from label16 to label17 with label15;
        catch java.lang.NumberFormatException from label18 to label19 with label15;
    }

    private int removePackageLP(java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4;
        com.android.server.PackageManagerService$SharedUserSetting $r5;
        java.util.HashSet $r6;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r4 == null goto label2;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 == null goto label1;

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r6 = $r5.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        virtualinvoke $r6.<java.util.HashSet: boolean remove(java.lang.Object)>($r4);

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r6 = $r5.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        $i0 = virtualinvoke $r6.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label2;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r1 = $r5.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $i0 = $r5.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void removeUserIdLP(int)>($i0);

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $i0 = $r5.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        return $i0;

     label1:
        $i0 = $r4.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void removeUserIdLP(int)>($i0);

        $i0 = $r4.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        return $i0;

     label2:
        return -1;
    }

    private void removeUserIdLP(int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        android.util.SparseArray $r2;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $i0 := @parameter0: int;

        if $i0 < 10000 goto label1;

        $r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 10000;

        if $i0 >= $i1 goto label2;

        $r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, null);

        return;

     label1:
        $r2 = $r0.<com.android.server.PackageManagerService$Settings: android.util.SparseArray mOtherUserIds>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        return;

     label2:
        return;
    }

    private void updateSharedUserPerms(com.android.server.PackageManagerService$PackageSetting)
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.server.PackageManagerService$PackageSetting $r1;
        com.android.server.PackageManagerService$SharedUserSetting $r2;
        android.content.pm.PackageParser$Package $r3;
        java.util.ArrayList $r4;
        java.util.Iterator $r5, $r9;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.util.HashSet $r8;
        int[] $r10, $r11;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: com.android.server.PackageManagerService$PackageSetting;

        if $r1 == null goto label1;

        $r3 = $r1.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r3 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", "Trying to update info for null package. Just ignoring");

        return;

     label2:
        $r2 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r2 == null goto label9;

        $r2 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r3 = $r1.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r4 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r5 = virtualinvoke $r4.<java.util.AbstractList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $z0 = 0;

        $r8 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z1 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        $r8 = $r2.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        $r9 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        $r8 = $r1.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z1 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $z0 = 1;

     label5:
        if $z0 != 0 goto label3;

        $r8 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r8.<java.util.HashSet: boolean remove(java.lang.Object)>($r7);

        $r8 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions>;

        virtualinvoke $r8.<java.util.HashSet: boolean remove(java.lang.Object)>($r7);

        goto label3;

     label6:
        $r10 = null;

        $r8 = $r2.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        $r5 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        $r11 = $r1.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        $r10 = staticinvoke <com.android.server.PackageManagerService: int[] appendInts(int[],int[])>($r10, $r11);

        goto label7;

     label8:
        $r2.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids> = $r10;

        return;

     label9:
        return;
    }

    com.android.server.PackageManagerService$PackageSetting addPackageLP(java.lang.String, java.io.File, java.io.File, int, int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        int $i0, $i1;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$PackageSetting $r6;
        java.lang.StringBuilder $r7;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.io.File;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        if $r6 == null goto label2;

        $i1 = $r6.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        if $i1 != $i0 goto label1;

        return $r6;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate package, keeping first: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r1);

        return null;

     label2:
        $r6 = new com.android.server.PackageManagerService$PackageSetting;

        specialinvoke $r6.<com.android.server.PackageManagerService$PackageSetting: void <init>(java.lang.String,java.io.File,java.io.File,int)>($r1, $r2, $r3, $i1);

        $r6.<com.android.server.PackageManagerService$PackageSetting: int userId> = $i0;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: boolean addUserIdLP(int,java.lang.Object,java.lang.Object)>($i0, $r6, $r1);

        if $z0 == 0 goto label3;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        return $r6;

     label3:
        return null;
    }

    com.android.server.PackageManagerService$SharedUserSetting addSharedUserLP(java.lang.String, int, int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$SharedUserSetting $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.PackageManagerService$SharedUserSetting) $r3;

        if $r4 == null goto label2;

        $i1 = $r4.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        if $i1 != $i0 goto label1;

        return $r4;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared user, keeping first: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void access$2300(int,java.lang.String)>(6, $r1);

        return null;

     label2:
        $r4 = new com.android.server.PackageManagerService$SharedUserSetting;

        specialinvoke $r4.<com.android.server.PackageManagerService$SharedUserSetting: void <init>(java.lang.String,int)>($r1, $i1);

        $r4.<com.android.server.PackageManagerService$SharedUserSetting: int userId> = $i0;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: boolean addUserIdLP(int,java.lang.Object,java.lang.Object)>($i0, $r4, $r1);

        if $z0 == 0 goto label3;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r4;

     label3:
        return null;
    }

    int disableSystemPackageLP(java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4, $r6;
        java.lang.StringBuilder $r5;
        android.content.pm.PackageParser$Package $r7;
        android.content.pm.ApplicationInfo $r8;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r4 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an installed package");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return -1;

     label1:
        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r6 != null goto label3;

        $r7 = $r4.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 == null goto label2;

        $r7 = $r4.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r8 == null goto label2;

        $r7 = $r4.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 | 128;

        $r8.<android.content.pm.ApplicationInfo: int flags> = $i0;

     label2:
        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label3:
        $i0 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: int removePackageLP(java.lang.String)>($r1);

        return $i0;
    }

    com.android.server.PackageManagerService$PackageSetting enableSystemPackageLP(java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.io.File $r2, $r9;
        int $i0, $i1;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.PackageManagerService$PackageSetting $r5;
        java.lang.StringBuilder $r6;
        android.content.pm.PackageParser$Package $r7;
        android.content.pm.ApplicationInfo $r8;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        if $r5 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not disabled");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return null;

     label1:
        $r7 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 == null goto label2;

        $r7 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r8 == null goto label2;

        $r7 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & -129;

        $r8.<android.content.pm.ApplicationInfo: int flags> = $i0;

     label2:
        $r9 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r2 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File resourcePath>;

        $i0 = $r5.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $i1 = $r5.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $r5 = virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting addPackageLP(java.lang.String,java.io.File,java.io.File,int,int)>($r1, $r9, $r2, $i0, $i1);

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return $r5;
    }

    public com.android.server.PackageManagerService$PackageSetting getDisabledSystemPkg(java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.util.HashMap $r2, $r4;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        exitmonitor $r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    int getInstallStatus(java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<com.android.server.PackageManagerService$PackageSettingBase: int getInstallStatus()>();

        return $i0;

     label1:
        return -1;
    }

    java.util.ArrayList getListOfIncompleteInstallPackages()
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.util.HashSet $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String $r7;
        com.android.server.PackageManagerService$PackageSetting $r8;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 = new java.util.HashSet;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r4);

        $r5 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r8 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        $i0 = virtualinvoke $r8.<com.android.server.PackageManagerService$PackageSettingBase: int getInstallStatus()>();

        if $i0 != 0 goto label1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r2;
    }

    com.android.server.PackageManagerService$PackageSetting getPackageLP(android.content.pm.PackageParser$Package, com.android.server.PackageManagerService$SharedUserSetting, java.io.File, java.io.File, int, boolean, boolean)
    {
        com.android.server.PackageManagerService$Settings $r0;
        android.content.pm.PackageParser$Package $r1;
        com.android.server.PackageManagerService$SharedUserSetting $r2;
        java.io.File $r3, $r4;
        int $i0;
        boolean $z0, $z1;
        java.lang.String $r5;
        com.android.server.PackageManagerService$PackageSetting $r6;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 := @parameter1: com.android.server.PackageManagerService$SharedUserSetting;

        $r3 := @parameter2: java.io.File;

        $r4 := @parameter3: java.io.File;

        $i0 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $r5 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r6 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting getPackageLP(java.lang.String,com.android.server.PackageManagerService$SharedUserSetting,java.io.File,java.io.File,int,boolean,boolean)>($r5, $r2, $r3, $r4, $i0, $z0, $z1);

        if $r6 == null goto label1;

        $r6.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg> = $r1;

        return $r6;

     label1:
        return $r6;
    }

    java.lang.String getReadMessagesLP()
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    com.android.server.PackageManagerService$SharedUserSetting getSharedUserLP(java.lang.String, int, boolean)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1, $r6;
        int $i0;
        boolean $z0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$SharedUserSetting $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.PackageManagerService$SharedUserSetting) $r3;

        if $r4 != null goto label2;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.android.server.PackageManagerService$SharedUserSetting;

        specialinvoke $r4.<com.android.server.PackageManagerService$SharedUserSetting: void <init>(java.lang.String,int)>($r1, $i0);

        $i0 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: int newUserIdLP(java.lang.Object)>($r4);

        $r4.<com.android.server.PackageManagerService$SharedUserSetting: int userId> = $i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New shared user ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": id=");

        $i0 = $r4.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $i0 = $r4.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        if $i0 < 0 goto label2;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label2:
        return $r4;
    }

    public java.lang.Object getUserIdLP(int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $i0 := @parameter0: int;

        if $i0 < 10000 goto label2;

        $r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 10000;

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mUserIds>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        return $r2;

     label1:
        return null;

     label2:
        $r3 = $r0.<com.android.server.PackageManagerService$Settings: android.util.SparseArray mOtherUserIds>;

        $r2 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        return $r2;
    }

    boolean isEnabledLP(android.content.pm.ComponentInfo, int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        android.content.pm.ComponentInfo $r1;
        int $i0;
        java.util.HashMap $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        com.android.server.PackageManagerService$PackageSetting $r5;
        boolean $z0;
        android.content.pm.ApplicationInfo $r6;
        java.util.HashSet $r7;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: android.content.pm.ComponentInfo;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r3 = $r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        $i0 = $i0 & 512;

        if $i0 != 0 goto label3;

        $z0 = $r1.<android.content.pm.ComponentInfo: boolean enabled>;

        if $z0 == 0 goto label2;

        $i0 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: int enabled>;

        if $i0 == 1 goto label1;

        $r6 = $r1.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = $r6.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z0 == 0 goto label2;

        $i0 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: int enabled>;

        if $i0 == 2 goto label2;

     label1:
        $r7 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet disabledComponents>;

        $r3 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $z0 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

     label2:
        $r7 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet enabledComponents>;

        $r3 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $z0 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    com.android.server.PackageManagerService$PackageSetting peekPackageLP(java.lang.String, java.lang.String)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1, $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.PackageManagerService$PackageSetting $r5;
        java.io.File $r6;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        if $r5 == null goto label1;

        $r6 = $r5.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r1 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return $r5;

     label1:
        return null;
    }

    boolean readLP()
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.io.FileInputStream $r1, $r3;
        java.io.File $r2, $r13;
        boolean $z0;
        java.lang.StringBuilder $r4, $r9;
        java.util.ArrayList $r5;
        org.xmlpull.v1.XmlPullParser $r6;
        int $i0, $i1, $i2;
        java.lang.String $r7;
        org.xmlpull.v1.XmlPullParserException $r8;
        java.lang.Object $r10;
        com.android.server.PackageManagerService$Settings$PendingPackage $r11;
        com.android.server.PackageManagerService$SharedUserSetting $r12;
        com.android.server.PackageManagerService$PackageSetting $r14;
        java.util.HashMap $r15;
        java.io.IOException $r16, $r17, $r18;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 = null;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label05;

        $r3 = new java.io.FileInputStream;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename>;

     label01:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label02:
        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

     label03:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup settings file\n");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", "Reading from backup settings file!");

     label04:
        $r1 = $r3;

     label05:
        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        if $r1 != null goto label12;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename>;

     label06:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label07:
        if $z0 != 0 goto label10;

     label08:
        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No settings file found\n");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", "No current settings file!");

     label09:
        return 0;

     label10:
        $r1 = new java.io.FileInputStream;

     label11:
        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename>;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label12:
        $r6 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r1, null);

     label13:
        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int next()>();

     label14:
        if $i0 == 2 goto label16;

     label15:
        if $i0 != 1 goto label13;

     label16:
        if $i0 == 2 goto label18;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in settings file\n");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "No start tag found in package manager settings");

     label17:
        return 0;

     label18:
        $i0 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label19:
        $i1 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label35;

        if $i1 != 3 goto label20;

        $i2 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label35;

     label20:
        if $i1 == 3 goto label19;

        if $i1 == 4 goto label19;

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z0 == 0 goto label26;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readPackageLP(org.xmlpull.v1.XmlPullParser)>($r6);

     label21:
        goto label19;

     label22:
        $r8 := @caughtexception;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r7 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", $r8);

     label23:
        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPackages>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label24:
        if $i1 >= $i0 goto label40;

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPackages>;

        $r10 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r11 = (com.android.server.PackageManagerService$Settings$PendingPackage) $r10;

        $i2 = $r11.<com.android.server.PackageManagerService$Settings$PendingPackage: int sharedId>;

        $r10 = virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: java.lang.Object getUserIdLP(int)>($i2);

        if $r10 == null goto label38;

        $z0 = $r10 instanceof com.android.server.PackageManagerService$SharedUserSetting;

        if $z0 == 0 goto label38;

        $r7 = $r11.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r12 = (com.android.server.PackageManagerService$SharedUserSetting) $r10;

        $r2 = $r11.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r13 = $r11.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File resourcePath>;

        $i2 = $r11.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $r14 = specialinvoke $r0.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting getPackageLP(java.lang.String,com.android.server.PackageManagerService$SharedUserSetting,java.io.File,java.io.File,int,boolean,boolean)>($r7, $r12, $r2, $r13, $i2, 1, 1);

        if $r14 != null goto label37;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application package for ");

        $r7 = $r11.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

     label25:
        $i1 = $i1 + 1;

        goto label24;

     label26:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("permissions");

        if $z0 == 0 goto label29;

        $r15 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readPermissionsLP(java.util.HashMap,org.xmlpull.v1.XmlPullParser)>($r15, $r6);

     label27:
        goto label19;

     label28:
        $r16 := @caughtexception;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r7 = virtualinvoke $r16.<java.lang.Throwable: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", $r16);

        goto label23;

     label29:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("permission-trees");

        if $z0 == 0 goto label30;

        $r15 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readPermissionsLP(java.util.HashMap,org.xmlpull.v1.XmlPullParser)>($r15, $r6);

        goto label19;

     label30:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("shared-user");

        if $z0 == 0 goto label31;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readSharedUserLP(org.xmlpull.v1.XmlPullParser)>($r6);

        goto label19;

     label31:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("preferred-packages");

        if $z0 == 0 goto label32;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readPreferredPackagesLP(org.xmlpull.v1.XmlPullParser)>($r6);

        goto label19;

     label32:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

        if $z0 == 0 goto label33;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readPreferredActivitiesLP(org.xmlpull.v1.XmlPullParser)>($r6);

        goto label19;

     label33:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("updated-package");

        if $z0 == 0 goto label34;

        specialinvoke $r0.<com.android.server.PackageManagerService$Settings: void readDisabledSysPackageLP(org.xmlpull.v1.XmlPullParser)>($r6);

        goto label19;

     label34:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <packages>: ");

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r6);

        goto label19;

     label35:
        virtualinvoke $r1.<java.io.FileInputStream: void close()>();

     label36:
        goto label23;

     label37:
        virtualinvoke $r14.<com.android.server.PackageManagerService$PackageSettingBase: void copyFrom(com.android.server.PackageManagerService$PackageSettingBase)>($r11);

        goto label25;

     label38:
        if $r10 == null goto label39;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r7 = $r11.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        $i2 = $r11.<com.android.server.PackageManagerService$Settings$PendingPackage: int sharedId>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not a shared uid\n");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r7);

        goto label25;

     label39:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r7 = $r11.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        $i2 = $r11.<com.android.server.PackageManagerService$Settings$PendingPackage: int sharedId>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not defined\n");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r7);

        goto label25;

     label40:
        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPreferredPackages>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPreferredPackages>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $i1 = 0;

     label41:
        if $i1 >= $i0 goto label44;

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPreferredPackages>;

        $r10 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (java.lang.String) $r10;

        $r15 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r14 = (com.android.server.PackageManagerService$PackageSetting) $r10;

        if $r14 == null goto label43;

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPreferredPackages>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label42:
        $i1 = $i1 + 1;

        goto label41;

     label43:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown preferred package: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

        goto label42;

     label44:
        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPendingPreferredPackages>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.lang.StringBuilder mReadMessages>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read completed successfully: ");

        $r15 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $i0 = virtualinvoke $r15.<java.util.HashMap: int size()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packages, ");

        $r15 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        $i0 = virtualinvoke $r15.<java.util.HashMap: int size()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared uids\n");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        return 1;

     label45:
        $r17 := @caughtexception;

        goto label05;

     label46:
        $r18 := @caughtexception;

        $r1 = $r3;

        goto label05;

        catch java.io.IOException from label01 to label02 with label45;
        catch java.io.IOException from label03 to label04 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label14 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label17 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label21 with label22;
        catch java.io.IOException from label06 to label07 with label28;
        catch java.io.IOException from label08 to label09 with label28;
        catch java.io.IOException from label11 to label14 with label28;
        catch java.io.IOException from label15 to label17 with label28;
        catch java.io.IOException from label18 to label21 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label22;
        catch java.io.IOException from label26 to label27 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label36 with label22;
        catch java.io.IOException from label29 to label36 with label28;
    }

    void setInstallStatus(java.lang.String, int)
    {
        com.android.server.PackageManagerService$Settings $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r4 == null goto label1;

        $i1 = virtualinvoke $r4.<com.android.server.PackageManagerService$PackageSettingBase: int getInstallStatus()>();

        if $i1 == $i0 goto label2;

        virtualinvoke $r4.<com.android.server.PackageManagerService$PackageSettingBase: void setInstallStatus(int)>($i0);

        return;

     label1:
        return;

     label2:
        return;
    }

    void writeDisabledSysPackage(org.xmlpull.v1.XmlSerializer, com.android.server.PackageManagerService$PackageSetting) throws java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        com.android.server.PackageManagerService$PackageSetting $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        com.android.server.PackageManagerService$SharedUserSetting $r5;
        int $i0;
        java.util.HashSet $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        java.util.HashMap $r9;
        com.android.server.PackageManagerService$BasePermission $r10;
        android.content.pm.PackageParser$Permission $r11;
        android.content.pm.PermissionInfo $r12;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: com.android.server.PackageManagerService$PackageSetting;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "updated-package");

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String codePathString>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r3);

        $r3 = virtualinvoke $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String getTimeStampStr()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ts", $r3);

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String resourcePathString>;

        $r4 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String codePathString>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String resourcePathString>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r3);

     label1:
        $r5 = $r2.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 != null goto label4;

        $i0 = $r2.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r3);

     label2:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        $r5 = $r2.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 != null goto label5;

        $r6 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r7 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r8;

        $r9 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r8 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r10 = (com.android.server.PackageManagerService$BasePermission) $r8;

        if $r10 == null goto label3;

        $r11 = $r10.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r11 == null goto label3;

        $r11 = $r10.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r12 = $r11.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        if $r12 == null goto label3;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label3;

     label4:
        $i0 = $r2.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r3);

        goto label2;

     label5:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "updated-package");

        return;
    }

    void writeLP()
    {
        com.android.server.PackageManagerService$Settings $r0;
        com.android.internal.util.FastXmlSerializer $r1, r24;
        java.io.FileOutputStream $r2, r23;
        java.io.File $r3, $r4;
        boolean $z0;
        java.util.ArrayList $r5;
        java.lang.Boolean $r6;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9, $r22;
        java.lang.Object $r10;
        com.android.server.PackageManagerService$BasePermission $r11;
        org.xmlpull.v1.XmlPullParserException $r12;
        java.io.IOException $r13;
        com.android.server.PackageManagerService$PackageSetting $r14;
        int $i0, $i1;
        java.lang.String $r15;
        com.android.server.IntentResolver $r16;
        java.util.Set $r17;
        com.android.server.PackageManagerService$PreferredActivity $r18;
        com.android.server.PackageManagerService$SharedUserSetting $r19;
        com.android.server.PackageManagerService$PackageSignatures $r20;
        java.util.HashSet $r21;
        org.xmlpull.v1.XmlSerializer r25;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label01:
        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename>;

        $r4 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename>;

        virtualinvoke $r3.<java.io.File: boolean renameTo(java.io.File)>($r4);

     label02:
        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r23 = new java.io.FileOutputStream;

        $r2 = r23;

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename>;

     label03:
        specialinvoke r23.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label04:
        r24 = new com.android.internal.util.FastXmlSerializer;

     label05:
        $r1 = r24;

        specialinvoke r24.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r2, "utf-8");

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "packages");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        $r7 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label07:
        $r11 = (com.android.server.PackageManagerService$BasePermission) $r10;

     label08:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: void writePermission(org.xmlpull.v1.XmlSerializer,com.android.server.PackageManagerService$BasePermission)>(r25, $r11);

     label09:
        goto label06;

     label10:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", $r12);

        return;

     label11:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

     label12:
        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r7 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label14:
        $r11 = (com.android.server.PackageManagerService$BasePermission) $r10;

     label15:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: void writePermission(org.xmlpull.v1.XmlSerializer,com.android.server.PackageManagerService$BasePermission)>(r25, $r11);

     label16:
        goto label13;

     label17:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", $r13);

        return;

     label18:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

     label19:
        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r7 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label21:
        $r14 = (com.android.server.PackageManagerService$PackageSetting) $r10;

     label22:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: void writePackage(org.xmlpull.v1.XmlSerializer,com.android.server.PackageManagerService$PackageSetting)>(r25, $r14);

        goto label20;

     label23:
        $r7 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label24:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label27;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label25:
        $r14 = (com.android.server.PackageManagerService$PackageSetting) $r10;

     label26:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        virtualinvoke $r0.<com.android.server.PackageManagerService$Settings: void writeDisabledSysPackage(org.xmlpull.v1.XmlSerializer,com.android.server.PackageManagerService$PackageSetting)>(r25, $r14);

        goto label24;

     label27:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "preferred-packages");

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPreferredPackages>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label28:
        $i1 = 0;

     label29:
        if $i1 >= $i0 goto label36;

     label30:
        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPreferredPackages>;

        $r10 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

     label31:
        $r14 = (com.android.server.PackageManagerService$PackageSetting) $r10;

     label32:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

     label33:
        $r15 = $r14.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

     label34:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r15);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

     label35:
        $i1 = $i1 + 1;

        goto label29;

     label36:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "preferred-packages");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        $r16 = $r0.<com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver mPreferredActivities>;

        $r17 = virtualinvoke $r16.<com.android.server.IntentResolver: java.util.Set filterSet()>();

        $r9 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label37:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label40;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label38:
        $r18 = (com.android.server.PackageManagerService$PreferredActivity) $r10;

     label39:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        virtualinvoke $r18.<com.android.server.PackageManagerService$PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r25);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label37;

     label40:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        $r7 = $r0.<com.android.server.PackageManagerService$Settings: java.util.HashMap mSharedUsers>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label41:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label52;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label42:
        $r19 = (com.android.server.PackageManagerService$SharedUserSetting) $r10;

     label43:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "shared-user");

     label44:
        $r15 = $r19.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

     label45:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r15);

        $i0 = $r19.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r15);

     label46:
        $r20 = $r19.<com.android.server.PackageManagerService$SharedUserSetting: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r5 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures>;

     label47:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        virtualinvoke $r20.<com.android.server.PackageManagerService$PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(r25, "sigs", $r5);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        $r21 = $r19.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r22 = virtualinvoke $r21.<java.util.HashSet: java.util.Iterator iterator()>();

     label48:
        $z0 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label51;

        $r10 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

     label49:
        $r15 = (java.lang.String) $r10;

     label50:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r15);

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label48;

     label51:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "shared-user");

        goto label41;

     label52:
        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "packages");

        r25 = (org.xmlpull.v1.XmlSerializer) $r1;

        interfaceinvoke r25.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mBackupSettingsFilename>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $r3 = $r0.<com.android.server.PackageManagerService$Settings: java.io.File mSettingsFilename>;

        $r15 = virtualinvoke $r3.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r15, 436, -1, -1);

     label53:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label07 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label10;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label07 with label17;
        catch java.io.IOException from label08 to label09 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label14 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label10;
        catch java.io.IOException from label12 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label21 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label25 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label28 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label30 to label31 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label32 to label33 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label38 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label42 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label45 to label46 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label47 to label49 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label53 with label10;
        catch java.io.IOException from label19 to label21 with label17;
        catch java.io.IOException from label22 to label25 with label17;
        catch java.io.IOException from label26 to label28 with label17;
        catch java.io.IOException from label30 to label31 with label17;
        catch java.io.IOException from label32 to label33 with label17;
        catch java.io.IOException from label34 to label35 with label17;
        catch java.io.IOException from label36 to label38 with label17;
        catch java.io.IOException from label39 to label42 with label17;
        catch java.io.IOException from label43 to label44 with label17;
        catch java.io.IOException from label45 to label46 with label17;
        catch java.io.IOException from label47 to label49 with label17;
        catch java.io.IOException from label50 to label53 with label17;
    }

    void writePackage(org.xmlpull.v1.XmlSerializer, com.android.server.PackageManagerService$PackageSetting) throws java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        com.android.server.PackageManagerService$PackageSetting $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        int $i0;
        com.android.server.PackageManagerService$SharedUserSetting $r5;
        com.android.server.PackageManagerService$PackageSignatures $r6;
        java.util.ArrayList $r7;
        java.util.HashSet $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: com.android.server.PackageManagerService$PackageSetting;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package");

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String codePathString>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r3);

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String resourcePathString>;

        $r4 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String codePathString>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label01;

        $r3 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String resourcePathString>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r3);

     label01:
        $i0 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label08;

        $r3 = "true";

     label02:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "system", $r3);

        $r3 = virtualinvoke $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String getTimeStampStr()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ts", $r3);

        $r5 = $r2.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 != null goto label09;

        $i0 = $r2.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r3);

     label03:
        $i0 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: int enabled>;

        if $i0 == 0 goto label05;

        $i0 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: int enabled>;

        if $i0 != 1 goto label10;

        $r3 = "true";

     label04:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabled", $r3);

     label05:
        $i0 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: int installStatus>;

        if $i0 != 0 goto label06;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installStatus", "false");

     label06:
        $r6 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r7 = $r0.<com.android.server.PackageManagerService$Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r6.<com.android.server.PackageManagerService$PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>($r1, "sigs", $r7);

        $i0 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label12;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        $r5 = $r2.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 != null goto label11;

        $r8 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r9 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r10;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label07;

     label08:
        $r3 = "false";

        goto label02;

     label09:
        $i0 = $r2.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r3);

        goto label03;

     label10:
        $r3 = "false";

        goto label04;

     label11:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

     label12:
        $r8 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet disabledComponents>;

        $i0 = virtualinvoke $r8.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label15;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disabled-components");

        $r8 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet disabledComponents>;

        $r9 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r10;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label13;

     label14:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disabled-components");

     label15:
        $r8 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet enabledComponents>;

        $i0 = virtualinvoke $r8.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label18;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "enabled-components");

        $r8 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet enabledComponents>;

        $r9 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r10;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label16;

     label17:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "enabled-components");

     label18:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package");

        return;
    }

    void writePermission(org.xmlpull.v1.XmlSerializer, com.android.server.PackageManagerService$BasePermission) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.PackageManagerService$Settings $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        com.android.server.PackageManagerService$BasePermission $r2;
        int $i0;
        java.lang.String $r3;
        android.content.pm.PackageParser$Permission $r4;
        android.content.pm.PermissionInfo $r5;
        java.lang.CharSequence $r6;

        $r0 := @this: com.android.server.PackageManagerService$Settings;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: com.android.server.PackageManagerService$BasePermission;

        $i0 = $r2.<com.android.server.PackageManagerService$BasePermission: int type>;

        if $i0 == 1 goto label6;

        $r3 = $r2.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        if $r3 == null goto label7;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r3 = $r2.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        $r3 = $r2.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "package", $r3);

        $i0 = $r2.<com.android.server.PackageManagerService$BasePermission: int type>;

        if $i0 != 2 goto label4;

        $r4 = $r2.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r4 == null goto label5;

        $r4 = $r2.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r5 = $r4.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

     label1:
        if $r5 == null goto label4;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "dynamic");

        $i0 = $r5.<android.content.pm.PackageItemInfo: int icon>;

        if $i0 == 0 goto label2;

        $i0 = $r5.<android.content.pm.PackageItemInfo: int icon>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r3);

     label2:
        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r6 == null goto label3;

        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r3 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r3);

     label3:
        $i0 = $r5.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i0 == 0 goto label4;

        $i0 = $r5.<android.content.pm.PermissionInfo: int protectionLevel>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "protection", $r3);

     label4:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        return;

     label5:
        $r5 = $r2.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        goto label1;

     label6:
        return;

     label7:
        return;
    }
}
