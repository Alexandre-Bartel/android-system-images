public class org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic extends org.apache.harmony.awt.gl.font.TextRunSegment
{
    float fullAdvance;
    java.awt.font.GraphicAttribute ga;
    int length;
    int start;

    void <init>(java.awt.font.GraphicAttribute, int, int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        java.awt.font.GraphicAttribute $r1;
        int $i0, $i1;
        float $f0, $f1;
        org.apache.harmony.awt.gl.font.BasicMetrics $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 := @parameter0: java.awt.font.GraphicAttribute;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start> = $i1;

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length> = $i0;

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga> = $r1;

        $r2 = new org.apache.harmony.awt.gl.font.BasicMetrics;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        specialinvoke $r2.<org.apache.harmony.awt.gl.font.BasicMetrics: void <init>(java.awt.font.GraphicAttribute)>($r1);

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics> = $r2;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: float fullAdvance> = $f0;

        return;
    }

    boolean charHasZeroAdvance(int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $i0 := @parameter0: int;

        return 0;
    }

    public java.lang.Object clone()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0, $r1;
        java.awt.font.GraphicAttribute $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 = new org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        specialinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: void <init>(java.awt.font.GraphicAttribute,int,int)>($r2, $i0, $i1);

        return $r1;
    }

    float doJustification(org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo[])
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo[];

        return 0.0F;
    }

    void draw(java.awt.Graphics2D, float, float)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        java.awt.Graphics2D $r1;
        float $f0, $f1, $f2, $f3, $f4;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r2;
        int $i0, $i1;
        java.awt.font.GraphicAttribute $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 := @parameter0: java.awt.Graphics2D;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        if $r2 == null goto label1;

        staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator: void prepareGraphics(org.apache.harmony.awt.gl.font.TextRunSegment,java.awt.Graphics2D,float,float)>($r0, $r1, $f0, $f1);

     label1:
        $f4 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $f4 = $f4 + $f0;

        $f2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $f2 = $f2 + $f1;

        $i0 = 0;

     label2:
        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        virtualinvoke $r3.<java.awt.font.GraphicAttribute: void draw(java.awt.Graphics2D,float,float)>($r1, $f4, $f2);

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f3 = virtualinvoke $r3.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $f4 = $f4 + $f3;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        if $r2 == null goto label4;

        staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator: void drawTextDecorations(org.apache.harmony.awt.gl.font.TextRunSegment,java.awt.Graphics2D,float,float)>($r0, $r1, $f0, $f1);

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator: void restoreGraphics(org.apache.harmony.awt.gl.font.TextDecorator$Decoration,java.awt.Graphics2D)>($r2, $r1);

        return;

     label4:
        return;
    }

    float getAdvance()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        float f0;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: float fullAdvance>;

        return f0;
    }

    float getAdvanceDelta(int, int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        int $i0, $i1;
        float $f0, $f1;
        java.awt.font.GraphicAttribute $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $i0 = $i1 - $i0;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        return $f0;
    }

    float getCharAdvance(int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        int $i0;
        float $f0;
        java.awt.font.GraphicAttribute $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        return $f0;
    }

    int getCharIndexFromAdvance(float, int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3;
        java.awt.font.GraphicAttribute $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $f0 := @parameter0: float;

        $i0 := @parameter1: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i1 = $i0 - $i1;

        if $i1 >= 0 goto label1;

        $i1 = 0;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f1 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i2 = $i0 + $i1;

        $i3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        if $i2 <= $i3 goto label2;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $i0 + $i1;

        return $i0;

     label2:
        $i0 = $i0 + $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    float getCharPosition(int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        float $f0, $f1;
        int $i0, $i1;
        java.awt.font.GraphicAttribute $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        if $i0 <= $i1 goto label1;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $f0 = $f0 + $f1;

        return $f0;
    }

    java.awt.Shape getCharsBlackBoxBounds(int, int)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        float $f0, $f1;
        int $i0, $i1, $i2;
        java.awt.font.GraphicAttribute $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0, $d1, $d2, $d3;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $i0 - $i2;

        $i2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i1 = $i1 - $i2;

        $i2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        if $i1 <= $i2 goto label1;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $r2 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: java.awt.geom.Rectangle2D getBounds()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getX()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f1 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $f0 = (float) $i0;

        $f0 = $f1 * $f0;

        $d1 = (double) $f0;

        $d0 = $d0 + $d1;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d1 = (double) $f0;

        $d0 = $d0 + $d1;

        $d1 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getY()>();

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $d2 = (double) $f0;

        $d1 = $d1 + $d2;

        $d2 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getWidth()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $i0 = $i1 - $i0;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $d3 = (double) $f0;

        $d2 = $d2 + $d3;

        $d3 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getHeight()>();

        virtualinvoke $r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d0, $d1, $d2, $d3);

        return $r2;
    }

    int getEnd()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    int getLength()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int length>;

        return i0;
    }

    java.awt.geom.Rectangle2D getLogicalBounds()
    {
        float $f0, $f1, $f2, $f3, $f4;
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        java.awt.geom.Rectangle2D $r1;
        java.awt.geom.Rectangle2D$Float $r2;
        org.apache.harmony.awt.gl.font.BasicMetrics $r3;
        java.lang.Object $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D logicalBounds>;

        if $r1 != null goto label1;

        $r2 = new java.awt.geom.Rectangle2D$Float;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f2 = $r3.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent>;

        $f1 = $f1 - $f2;

        $f2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: float getAdvance()>();

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f3 = $r3.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f4 = $r3.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent>;

        $f3 = $f3 + $f4;

        specialinvoke $r2.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D logicalBounds> = $r2;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D logicalBounds>;

        $r4 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r1 = (java.awt.geom.Rectangle2D) $r4;

        return $r1;
    }

    java.awt.Shape getOutline()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r1;
        float $f0;
        double $d0, $d1;
        java.awt.geom.AffineTransform $r2;
        java.awt.geom.Rectangle2D $r3;
        java.awt.Shape $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d0 = (double) $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $d1 = (double) $f0;

        $r2 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1);

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.geom.Rectangle2D getVisualBounds()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator: java.awt.Shape extendOutline(org.apache.harmony.awt.gl.font.TextRunSegment,java.awt.Shape,org.apache.harmony.awt.gl.font.TextDecorator$Decoration)>($r0, $r3, $r1);

        $r4 = virtualinvoke $r2.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r4);

        return $r4;
    }

    int getStart()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        i0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        return i0;
    }

    java.awt.geom.Rectangle2D getVisualBounds()
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        java.awt.geom.Rectangle2D $r1;
        java.awt.font.GraphicAttribute $r2;
        double $d0, $d1, $d2, $d3;
        float $f0;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r3;
        java.lang.Object $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D visualBounds>;

        if $r1 != null goto label1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $r1 = virtualinvoke $r2.<java.awt.font.GraphicAttribute: java.awt.geom.Rectangle2D getBounds()>();

        $d0 = virtualinvoke $r1.<java.awt.geom.RectangularShape: double getMinX()>();

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d1 = (double) $f0;

        $d0 = $d0 + $d1;

        $d1 = virtualinvoke $r1.<java.awt.geom.RectangularShape: double getMinY()>();

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $d2 = (double) $f0;

        $d1 = $d1 + $d2;

        $d2 = virtualinvoke $r1.<java.awt.geom.RectangularShape: double getWidth()>();

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r2.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $d3 = (double) $f0;

        $d2 = $d2 - $d3;

        $f0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: float getAdvance()>();

        $d3 = (double) $f0;

        $d2 = $d2 + $d3;

        $d3 = virtualinvoke $r1.<java.awt.geom.RectangularShape: double getHeight()>();

        virtualinvoke $r1.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d0, $d1, $d2, $d3);

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        $r1 = staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator: java.awt.geom.Rectangle2D extendVisualBounds(org.apache.harmony.awt.gl.font.TextRunSegment,java.awt.geom.Rectangle2D,org.apache.harmony.awt.gl.font.TextDecorator$Decoration)>($r0, $r1, $r3);

        $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D visualBounds> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D visualBounds>;

        $r4 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r1 = (java.awt.geom.Rectangle2D) $r4;

        return $r1;
    }

    java.awt.font.TextHitInfo hitTest(float, float)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        float $f0, $f1;
        java.awt.font.GraphicAttribute $r1;
        int $i0, $i2;
        byte $b1;
        java.awt.font.TextHitInfo $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $f1 = $f1 - $f0;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: java.awt.font.GraphicAttribute ga>;

        $f0 = virtualinvoke $r1.<java.awt.font.GraphicAttribute: float getAdvance()>();

        $f1 = $f1 / $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $f0 = (float) $i0;

        $b1 = $f1 cmpl $f0;

        if $b1 <= 0 goto label1;

        $i2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $i2 + $i0;

        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>($i0);

        return $r2;

     label1:
        $i2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic: int start>;

        $i0 = $i2 + $i0;

        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>($i0);

        return $r2;
    }

    void updateJustificationInfo(org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo)
    {
        org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic $r0;
        org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextRunSegmentImpl$TextRunSegmentGraphic;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.TextRunBreaker$JustificationInfo;

        return;
    }
}
