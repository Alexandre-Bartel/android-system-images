class com.android.server.WindowManagerService$KeyQ extends com.android.server.KeyInputQueue implements com.android.server.KeyInputQueue$FilterCallback
{
    android.os.PowerManager$WakeLock mHoldingScreen;
    final com.android.server.WindowManagerService this$0;

    void <init>(com.android.server.WindowManagerService)
    {
        com.android.server.WindowManagerService$KeyQ $r0;
        com.android.server.WindowManagerService $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.os.PowerManager $r4;
        android.os.PowerManager$WakeLock $r5;

        $r0 := @this: com.android.server.WindowManagerService$KeyQ;

        $r1 := @parameter0: com.android.server.WindowManagerService;

        $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0> = $r1;

        $r2 = $r1.<com.android.server.WindowManagerService: android.content.Context mContext>;

        specialinvoke $r0.<com.android.server.KeyInputQueue: void <init>(android.content.Context)>($r2);

        $r2 = $r1.<com.android.server.WindowManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r4 = (android.os.PowerManager) $r3;

        $r5 = virtualinvoke $r4.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(10, "KEEP_SCREEN_ON_FLAG");

        $r0.<com.android.server.WindowManagerService$KeyQ: android.os.PowerManager$WakeLock mHoldingScreen> = $r5;

        $r5 = $r0.<com.android.server.WindowManagerService$KeyQ: android.os.PowerManager$WakeLock mHoldingScreen>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        return;
    }

    public int filterEvent(com.android.server.KeyInputQueue$QueuedEvent)
    {
        com.android.server.WindowManagerService$KeyQ $r0;
        com.android.server.KeyInputQueue$QueuedEvent $r1;
        int $i0;
        java.lang.Object $r2;
        android.view.KeyEvent $r3;
        com.android.server.WindowManagerService $r4;
        android.view.WindowManagerPolicy $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: com.android.server.WindowManagerService$KeyQ;

        $r1 := @parameter0: com.android.server.KeyInputQueue$QueuedEvent;

        $i0 = $r1.<com.android.server.KeyInputQueue$QueuedEvent: int classType>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $r2 = $r1.<com.android.server.KeyInputQueue$QueuedEvent: java.lang.Object event>;

        $r3 = (android.view.KeyEvent) $r2;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r4.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = virtualinvoke $r3.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = interfaceinvoke $r5.<android.view.WindowManagerPolicy: boolean isMovementKeyTi(int)>($i0);

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping movement key during app switch: ");

        $i0 = virtualinvoke $r3.<android.view.KeyEvent: int getKeyCode()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", action=");

        $i0 = virtualinvoke $r3.<android.view.KeyEvent: int getAction()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("KeyInputQueue", $r7);

        return 0;

     label3:
        return -1;
    }

    boolean preprocessEvent(com.android.server.InputDevice, android.view.RawInputEvent)
    {
        com.android.server.WindowManagerService$KeyQ $r0;
        com.android.server.InputDevice $r1;
        android.view.RawInputEvent $r2;
        com.android.server.WindowManagerService $r3;
        android.view.WindowManagerPolicy $r4;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        com.android.server.PowerManagerService $r5;
        long $l2;
        com.android.server.WindowManagerService$KeyWaiter $r6;

        $r0 := @this: com.android.server.WindowManagerService$KeyQ;

        $r1 := @parameter0: com.android.server.InputDevice;

        $r2 := @parameter1: android.view.RawInputEvent;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $z0 = interfaceinvoke $r4.<android.view.WindowManagerPolicy: boolean preprocessInputEventTq(android.view.RawInputEvent)>($r2);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $i0 = $r2.<android.view.RawInputEvent: int type>;

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label16;
            case 3: goto label24;
            default: goto label02;
        };

     label02:
        return 1;

     label03:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $z0 = virtualinvoke $r5.<com.android.server.PowerManagerService: boolean screenIsOn()>();

        if $z0 != 0 goto label12;

        $z0 = 1;

     label04:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $z1 = virtualinvoke $r5.<com.android.server.PowerManagerService: boolean screenIsBright()>();

        if $z1 != 0 goto label13;

        $z1 = 1;

     label05:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        if $z0 != 0 goto label14;

        $z2 = 1;

     label06:
        $i0 = interfaceinvoke $r4.<android.view.WindowManagerPolicy: int interceptKeyTq(android.view.RawInputEvent,boolean)>($r2, $z2);

        $i1 = $i0 & 4;

        if $i1 == 0 goto label07;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $l2 = $r2.<android.view.RawInputEvent: long when>;

        virtualinvoke $r5.<com.android.server.PowerManagerService: void goToSleep(long)>($l2);

     label07:
        if $z0 == 0 goto label08;

        $i1 = $r2.<android.view.RawInputEvent: int flags>;

        $i1 = $i1 | 268435456;

        $r2.<android.view.RawInputEvent: int flags> = $i1;

     label08:
        if $z1 == 0 goto label09;

        $i1 = $r2.<android.view.RawInputEvent: int flags>;

        $i1 = $i1 | 536870912;

        $r2.<android.view.RawInputEvent: int flags> = $i1;

     label09:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label10;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $l2 = $r2.<android.view.RawInputEvent: long when>;

        virtualinvoke $r5.<com.android.server.PowerManagerService: void userActivity(long,boolean,int)>($l2, 0, 5);

     label10:
        $i0 = $i0 & 1;

        if $i0 == 0 goto label15;

        $i0 = $r2.<android.view.RawInputEvent: int value>;

        if $i0 == 0 goto label11;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = $r2.<android.view.RawInputEvent: int keycode>;

        $z0 = interfaceinvoke $r4.<android.view.WindowManagerPolicy: boolean isAppSwitchKeyTqTiLwLi(int)>($i0);

        if $z0 == 0 goto label11;

        virtualinvoke $r0.<com.android.server.KeyInputQueue: void filterQueue(com.android.server.KeyInputQueue$FilterCallback)>($r0);

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r6 = $r3.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        virtualinvoke $r6.<com.android.server.WindowManagerService$KeyWaiter: void appSwitchComing()>();

     label11:
        return 1;

     label12:
        $z0 = 0;

        goto label04;

     label13:
        $z1 = 0;

        goto label05;

     label14:
        $z2 = 0;

        goto label06;

     label15:
        return 0;

     label16:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $z0 = virtualinvoke $r5.<com.android.server.PowerManagerService: boolean screenIsOn()>();

        if $z0 != 0 goto label19;

        $z0 = 1;

     label17:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $z1 = virtualinvoke $r5.<com.android.server.PowerManagerService: boolean screenIsBright()>();

        if $z1 != 0 goto label20;

        $z1 = 1;

     label18:
        if $z0 == 0 goto label22;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = $r2.<android.view.RawInputEvent: int deviceId>;

        $i1 = $r1.<com.android.server.InputDevice: int classes>;

        $z0 = interfaceinvoke $r4.<android.view.WindowManagerPolicy: boolean isWakeRelMovementTq(int,int,android.view.RawInputEvent)>($i0, $i1, $r2);

        if $z0 != 0 goto label21;

        return 0;

     label19:
        $z0 = 0;

        goto label17;

     label20:
        $z1 = 0;

        goto label18;

     label21:
        $i0 = $r2.<android.view.RawInputEvent: int flags>;

        $i0 = $i0 | 268435456;

        $r2.<android.view.RawInputEvent: int flags> = $i0;

     label22:
        if $z1 == 0 goto label23;

        $i0 = $r2.<android.view.RawInputEvent: int flags>;

        $i0 = $i0 | 536870912;

        $r2.<android.view.RawInputEvent: int flags> = $i0;

     label23:
        return 1;

     label24:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $z0 = virtualinvoke $r5.<com.android.server.PowerManagerService: boolean screenIsOn()>();

        if $z0 != 0 goto label27;

        $z0 = 1;

     label25:
        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r5 = $r3.<com.android.server.WindowManagerService: com.android.server.PowerManagerService mPowerManager>;

        $z1 = virtualinvoke $r5.<com.android.server.PowerManagerService: boolean screenIsBright()>();

        if $z1 != 0 goto label28;

        $z1 = 1;

     label26:
        if $z0 == 0 goto label30;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i0 = $r2.<android.view.RawInputEvent: int deviceId>;

        $i1 = $r1.<com.android.server.InputDevice: int classes>;

        $z0 = interfaceinvoke $r4.<android.view.WindowManagerPolicy: boolean isWakeAbsMovementTq(int,int,android.view.RawInputEvent)>($i0, $i1, $r2);

        if $z0 != 0 goto label29;

        return 0;

     label27:
        $z0 = 0;

        goto label25;

     label28:
        $z1 = 0;

        goto label26;

     label29:
        $i0 = $r2.<android.view.RawInputEvent: int flags>;

        $i0 = $i0 | 268435456;

        $r2.<android.view.RawInputEvent: int flags> = $i0;

     label30:
        if $z1 == 0 goto label31;

        $i0 = $r2.<android.view.RawInputEvent: int flags>;

        $i0 = $i0 | 536870912;

        $r2.<android.view.RawInputEvent: int flags> = $i0;

     label31:
        return 1;
    }

    void setHoldScreenLocked(boolean)
    {
        com.android.server.WindowManagerService$KeyQ $r0;
        boolean $z0, $z1;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.WindowManagerService $r2;
        android.view.WindowManagerPolicy $r3;

        $r0 := @this: com.android.server.WindowManagerService$KeyQ;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyQ: android.os.PowerManager$WakeLock mHoldingScreen>;

        $z1 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == $z1 goto label2;

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyQ: android.os.PowerManager$WakeLock mHoldingScreen>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        return;

     label1:
        $r2 = $r0.<com.android.server.WindowManagerService$KeyQ: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r3.<android.view.WindowManagerPolicy: void screenOnStoppedLw()>();

        $r1 = $r0.<com.android.server.WindowManagerService$KeyQ: android.os.PowerManager$WakeLock mHoldingScreen>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label2:
        return;
    }
}
