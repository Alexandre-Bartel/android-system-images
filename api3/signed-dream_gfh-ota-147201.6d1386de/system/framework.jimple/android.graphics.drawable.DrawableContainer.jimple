public class android.graphics.drawable.DrawableContainer extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private int mAlpha;
    private android.graphics.ColorFilter mColorFilter;
    private int mCurIndex;
    private android.graphics.drawable.Drawable mCurrDrawable;
    private boolean mDither;
    private android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.DrawableContainer $r0;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r0.<android.graphics.drawable.DrawableContainer: int mAlpha> = 255;

        $r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label1:
        return;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        return r1;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>();

        return $i0;

     label1:
        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;

     label2:
        return -1;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>();

        return $i0;

     label1:
        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;

     label2:
        return -1;
    }

    public int getMinimumHeight()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>();

        return $i0;

     label1:
        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;

     label2:
        return 0;
    }

    public int getMinimumWidth()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>();

        return $i0;

     label1:
        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;

     label2:
        return 0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.DrawableContainer $r0;
        int $i0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.Rect $r1, $r3;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        android.graphics.drawable.Drawable $r4;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>();

        if $r3 == null goto label1;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return 1;

     label1:
        $r4 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r4 == null goto label2;

        $r4 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;

     label2:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 != $r2 goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>($r0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.DrawableContainer $r0;
        boolean $z0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>();

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable[] $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;
        boolean $z0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r3;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer: boolean mMutated>;

        if $z0 != 0 goto label3;

        $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != $r0 goto label4;

        $r3 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1 = $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r0.<android.graphics.drawable.DrawableContainer: boolean mMutated> = 1;

        return $r0;

     label3:
        return $r0;

     label4:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

        return;

     label1:
        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.DrawableContainer $r0;
        int $i0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        return $z0;

     label1:
        return 0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.DrawableContainer $r0;
        int[] $r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: int[];

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        return $z0;

     label1:
        return 0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1, $r3;
        java.lang.Runnable $r2;
        long $l0;
        android.graphics.drawable.Drawable$Callback $r4;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r3 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 != $r3 goto label1;

        $r4 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r4 == null goto label2;

        $r4 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>($r0, $r2, $l0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean selectDrawable(int)
    {
        android.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1, $r4;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        android.graphics.drawable.Drawable[] $r3;
        boolean $z0;
        android.graphics.ColorFilter $r5;
        int[] $r6;
        android.graphics.Rect $r7;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.graphics.drawable.DrawableContainer: int mCurIndex>;

        if $i0 != $i1 goto label1;

        return 0;

     label1:
        if $i0 < 0 goto label4;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r1 = $r3[$i0];

        $r4 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r4 == null goto label2;

        $r4 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label2:
        $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = $r1;

        $r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = $i0;

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean isVisible()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1);

        $i0 = $r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        $z0 = $r0.<android.graphics.drawable.DrawableContainer: boolean mDither>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0);

        $r5 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5);

        $r6 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r6);

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        $r7 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r7);

     label3:
        virtualinvoke $r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return 1;

     label4:
        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label5;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label5:
        $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = null;

        $r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        goto label3;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        if $i1 == $i0 goto label1;

        $r0.<android.graphics.drawable.DrawableContainer: int mAlpha> = $i0;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.ColorFilter $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.ColorFilter mColorFilter>;

        if $r2 == $r1 goto label1;

        $r0.<android.graphics.drawable.DrawableContainer: android.graphics.ColorFilter mColorFilter> = $r1;

        $r3 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        return;

     label1:
        return;

     label2:
        return;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState> = $r1;

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.DrawableContainer $r0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.graphics.drawable.DrawableContainer: boolean mDither>;

        if $z1 == $z0 goto label1;

        $r0.<android.graphics.drawable.DrawableContainer: boolean mDither> = $z0;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer: boolean mDither>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.DrawableContainer $r0;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        return $z2;

     label1:
        return $z2;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1, $r3;
        java.lang.Runnable $r2;
        android.graphics.drawable.Drawable$Callback $r4;

        $r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 != $r3 goto label1;

        $r4 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r4 == null goto label2;

        $r4 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>($r0, $r2);

        return;

     label1:
        return;

     label2:
        return;
    }
}
