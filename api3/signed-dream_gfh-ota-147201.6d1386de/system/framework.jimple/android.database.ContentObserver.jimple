public abstract class android.database.ContentObserver extends java.lang.Object
{
    private java.lang.Object lock;
    android.os.Handler mHandler;
    private android.database.ContentObserver$Transport mTransport;

    public void <init>(android.os.Handler)
    {
        android.database.ContentObserver $r0;
        android.os.Handler $r1;
        java.lang.Object $r2;

        $r0 := @this: android.database.ContentObserver;

        $r1 := @parameter0: android.os.Handler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<android.database.ContentObserver: java.lang.Object lock> = $r2;

        $r0.<android.database.ContentObserver: android.os.Handler mHandler> = $r1;

        return;
    }

    public boolean deliverSelfNotifications()
    {
        android.database.ContentObserver $r0;

        $r0 := @this: android.database.ContentObserver;

        return 0;
    }

    public final void dispatchChange(boolean)
    {
        android.database.ContentObserver $r0;
        boolean $z0;
        android.database.ContentObserver$NotificationRunnable $r1;
        android.os.Handler $r2;

        $r0 := @this: android.database.ContentObserver;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<android.database.ContentObserver: android.os.Handler mHandler>;

        if $r2 != null goto label1;

        virtualinvoke $r0.<android.database.ContentObserver: void onChange(boolean)>($z0);

        return;

     label1:
        $r2 = $r0.<android.database.ContentObserver: android.os.Handler mHandler>;

        $r1 = new android.database.ContentObserver$NotificationRunnable;

        specialinvoke $r1.<android.database.ContentObserver$NotificationRunnable: void <init>(android.database.ContentObserver,boolean)>($r0, $z0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public android.database.IContentObserver getContentObserver()
    {
        android.database.ContentObserver $r0;
        java.lang.Object $r1;
        android.database.ContentObserver$Transport $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.database.ContentObserver;

        $r1 = $r0.<android.database.ContentObserver: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport>;

        if $r2 != null goto label2;

        $r2 = new android.database.ContentObserver$Transport;

        specialinvoke $r2.<android.database.ContentObserver$Transport: void <init>(android.database.ContentObserver)>($r0);

        $r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport> = $r2;

     label2:
        $r2 = $r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport>;

        exitmonitor $r1;

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onChange(boolean)
    {
        android.database.ContentObserver $r0;
        boolean $z0;

        $r0 := @this: android.database.ContentObserver;

        $z0 := @parameter0: boolean;

        return;
    }

    public android.database.IContentObserver releaseContentObserver()
    {
        android.database.ContentObserver $r0;
        android.database.ContentObserver$Transport $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.database.ContentObserver;

        $r2 = $r0.<android.database.ContentObserver: java.lang.Object lock>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.database.ContentObserver$Transport: void releaseContentObserver()>();

        $r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport> = null;

     label2:
        exitmonitor $r2;

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
