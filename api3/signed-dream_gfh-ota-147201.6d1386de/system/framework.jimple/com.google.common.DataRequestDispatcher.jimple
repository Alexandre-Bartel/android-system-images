public class com.google.common.DataRequestDispatcher extends java.lang.Object implements com.google.common.DataRequest
{
    protected static final int CONNECTION_SPEED_DENOMINATOR;
    protected static final int CONNECTION_SPEED_NUMERATOR;
    protected static final java.lang.String CONTENT_TYPE;
    private static final int COOKIE_DATA_REQUEST_ID;
    private static final java.lang.String EVENT_DATA_FIRST_BYTE;
    private static final java.lang.String EVENT_DATA_LAST_BYTE;
    public static final short EVENT_TYPE_TIMING_REPORT;
    public static final byte HEADER_FULL;
    public static final byte HEADER_NONE;
    public static final byte HEADER_SIMPLE;
    public static final long IMMEDIATE_DELAY;
    protected static final long INITIAL_NETWORK_ERROR_RETRY_TIMEOUT;
    private static final int MAX_MSEC_TO_UPDATE_BPS;
    protected static final long MAX_NETWORK_ERROR_RETRY_TIMEOUT;
    public static final int MAX_WORKER_THREAD_COUNT;
    private static final int MIN_DATA_LENGTH_TO_UPDATE_BPS;
    protected static final long MIN_NETWORK_ERROR_RETRY_TIMEOUT;
    protected static final long NETWORK_FAILED_TIME;
    public static final int PROTOCOL_VERSION;
    private static final java.lang.String SESSION_ID_PREFERENCE;
    private static volatile com.google.common.DataRequestDispatcher instance;
    protected volatile boolean active;
    protected int bytesReceived;
    protected int bytesSent;
    protected com.google.common.io.HttpConnectionFactory connectionFactory;
    protected long cookie;
    protected final com.google.common.DataRequestDispatcher$DispatcherServer defaultServer;
    protected final java.lang.String distributionChannel;
    private long errorRetryTime;
    private long firstConnectionErrorTime;
    private volatile long lastActiveTime;
    private com.google.common.DataRequestListener listenerData;
    private volatile boolean networkErrorMode;
    private volatile int networkSpeedBytesPerSecond;
    protected final java.lang.String platformID;
    private final java.util.Hashtable properties;
    protected final java.lang.String serverAddress;
    protected final java.lang.String softwareVersion;
    private volatile int suspendCount;
    protected java.util.Vector thirdPartyServers;
    private final java.lang.Object threadDispatchLock;
    private volatile int workerForegroundThreadCount;
    private volatile int workerSubmissionThreadCount;
    private volatile int workerThreadCount;

    static void <clinit>()
    {
        <com.google.common.DataRequestDispatcher: java.lang.String SESSION_ID_PREFERENCE> = "SessionID";

        <com.google.common.DataRequestDispatcher: int PROTOCOL_VERSION> = 23;

        <com.google.common.DataRequestDispatcher: long NETWORK_FAILED_TIME> = 15000L;

        <com.google.common.DataRequestDispatcher: long MIN_NETWORK_ERROR_RETRY_TIMEOUT> = 2000L;

        <com.google.common.DataRequestDispatcher: int MIN_DATA_LENGTH_TO_UPDATE_BPS> = 8192;

        <com.google.common.DataRequestDispatcher: long MAX_NETWORK_ERROR_RETRY_TIMEOUT> = 300000L;

        <com.google.common.DataRequestDispatcher: int MAX_MSEC_TO_UPDATE_BPS> = 60000;

        <com.google.common.DataRequestDispatcher: long IMMEDIATE_DELAY> = 200L;

        <com.google.common.DataRequestDispatcher: byte HEADER_SIMPLE> = 1;

        <com.google.common.DataRequestDispatcher: byte HEADER_NONE> = 2;

        <com.google.common.DataRequestDispatcher: byte HEADER_FULL> = 0;

        <com.google.common.DataRequestDispatcher: short EVENT_TYPE_TIMING_REPORT> = 22;

        <com.google.common.DataRequestDispatcher: java.lang.String EVENT_DATA_LAST_BYTE> = "lb";

        <com.google.common.DataRequestDispatcher: java.lang.String EVENT_DATA_FIRST_BYTE> = "fb";

        <com.google.common.DataRequestDispatcher: int COOKIE_DATA_REQUEST_ID> = 15;

        <com.google.common.DataRequestDispatcher: java.lang.String CONTENT_TYPE> = "application/binary";

        <com.google.common.DataRequestDispatcher: int CONNECTION_SPEED_NUMERATOR> = 5;

        <com.google.common.DataRequestDispatcher: int CONNECTION_SPEED_DENOMINATOR> = 4;

        <com.google.common.DataRequestDispatcher: long INITIAL_NETWORK_ERROR_RETRY_TIMEOUT> = 200L;

        <com.google.common.DataRequestDispatcher: int MAX_WORKER_THREAD_COUNT> = 4;

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.util.Vector $r5;
        java.lang.Object $r6;
        int $i0;
        java.lang.IllegalArgumentException $r7;
        com.google.common.Config $r8;
        com.google.common.io.HttpConnectionFactory $r9;
        com.google.common.DataRequestDispatcher$DispatcherServer $r10;
        long $l1;
        java.util.Hashtable $r11;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers> = $r5;

        $r0.<com.google.common.DataRequestDispatcher: boolean active> = 0;

        $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime> = 0L;

        $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime> = 0L;

        $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount> = 0;

        $r0.<com.google.common.DataRequestDispatcher: int workerForegroundThreadCount> = 0;

        $r0.<com.google.common.DataRequestDispatcher: int workerSubmissionThreadCount> = 0;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.DataRequestDispatcher: java.lang.Object threadDispatchLock> = $r6;

        $r0.<com.google.common.DataRequestDispatcher: int networkSpeedBytesPerSecond> = -1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label2:
        $r0.<com.google.common.DataRequestDispatcher: java.lang.String serverAddress> = $r1;

        $r0.<com.google.common.DataRequestDispatcher: java.lang.String softwareVersion> = $r3;

        $r0.<com.google.common.DataRequestDispatcher: java.lang.String platformID> = $r2;

        $r0.<com.google.common.DataRequestDispatcher: java.lang.String distributionChannel> = $r4;

        $r8 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r9 = virtualinvoke $r8.<com.google.common.Config: com.google.common.io.HttpConnectionFactory getConnectionFactory()>();

        $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory> = $r9;

        $r0.<com.google.common.DataRequestDispatcher: int bytesSent> = 0;

        $r0.<com.google.common.DataRequestDispatcher: int bytesReceived> = 0;

        $r10 = new com.google.common.DataRequestDispatcher$DispatcherServer;

        $r1 = $r0.<com.google.common.DataRequestDispatcher: java.lang.String serverAddress>;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        specialinvoke $r10.<com.google.common.DataRequestDispatcher$DispatcherServer: void <init>(com.google.common.DataRequestDispatcher,java.lang.String,java.util.Vector,byte)>($r0, $r1, $r5, 0);

        $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher$DispatcherServer defaultServer> = $r10;

        $l1 = virtualinvoke $r0.<com.google.common.DataRequestDispatcher: long loadOrRequestCookie()>();

        $r0.<com.google.common.DataRequestDispatcher: long cookie> = $l1;

        $r11 = new java.util.Hashtable;

        specialinvoke $r11.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.common.DataRequestDispatcher: java.util.Hashtable properties> = $r11;

        return;
    }

    static java.lang.Object access$000(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        r1 = $r0.<com.google.common.DataRequestDispatcher: java.lang.Object threadDispatchLock>;

        return r1;
    }

    static int access$108(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount>;

        $i1 = $i0 + 1;

        $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount> = $i1;

        return $i0;
    }

    static int access$110(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount>;

        $i1 = $i0 - 1;

        $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount> = $i1;

        return $i0;
    }

    static int access$208(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerForegroundThreadCount>;

        $i1 = $i0 + 1;

        $r0.<com.google.common.DataRequestDispatcher: int workerForegroundThreadCount> = $i1;

        return $i0;
    }

    static int access$210(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerForegroundThreadCount>;

        $i1 = $i0 - 1;

        $r0.<com.google.common.DataRequestDispatcher: int workerForegroundThreadCount> = $i1;

        return $i0;
    }

    static int access$308(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerSubmissionThreadCount>;

        $i1 = $i0 + 1;

        $r0.<com.google.common.DataRequestDispatcher: int workerSubmissionThreadCount> = $i1;

        return $i0;
    }

    static int access$310(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerSubmissionThreadCount>;

        $i1 = $i0 - 1;

        $r0.<com.google.common.DataRequestDispatcher: int workerSubmissionThreadCount> = $i1;

        return $i0;
    }

    static long access$402(com.google.common.DataRequestDispatcher, long)
    {
        com.google.common.DataRequestDispatcher $r0;
        long $l0;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $l0 := @parameter1: long;

        $r0.<com.google.common.DataRequestDispatcher: long lastActiveTime> = $l0;

        return $l0;
    }

    static long access$500(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;
        long l0;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        l0 = $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime>;

        return l0;
    }

    static void access$600(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        specialinvoke $r0.<com.google.common.DataRequestDispatcher: void clearNetworkError()>();

        return;
    }

    static void access$700(com.google.common.DataRequestDispatcher, int)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.common.DataRequestDispatcher: void handleError(int)>($i0);

        return;
    }

    private void addClientPropertiesRequest(java.util.Vector, com.google.common.DataRequestDispatcher$DispatcherServer)
    {
        java.util.Vector $r0;
        com.google.common.DataRequestDispatcher$DispatcherServer $r1;
        com.google.common.DataRequestDispatcher $r2;
        java.util.Hashtable $r3;
        int $i0;
        boolean $z0;
        com.google.common.ClientPropertiesRequest $r4;
        java.lang.Object $r5;
        com.google.common.DataRequest $r6;

        $r2 := @this: com.google.common.DataRequestDispatcher;

        $r0 := @parameter0: java.util.Vector;

        $r1 := @parameter1: com.google.common.DataRequestDispatcher$DispatcherServer;

        $r3 = $r2.<com.google.common.DataRequestDispatcher: java.util.Hashtable properties>;

        $i0 = virtualinvoke $r3.<java.util.Hashtable: int size()>();

        if $i0 <= 0 goto label3;

        $z0 = virtualinvoke $r1.<com.google.common.DataRequestDispatcher$DispatcherServer: boolean canHandle(int)>(25);

        if $z0 == 0 goto label4;

        $r4 = new com.google.common.ClientPropertiesRequest;

        $r3 = $r2.<com.google.common.DataRequestDispatcher: java.util.Hashtable properties>;

        specialinvoke $r4.<com.google.common.ClientPropertiesRequest: void <init>(java.util.Hashtable)>($r3);

        $i0 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        $r6 = (com.google.common.DataRequest) $r5;

        $z0 = $r6 instanceof com.google.common.ClientPropertiesRequest;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r4, 0);

        return;

     label1:
        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r4, 0);

        return;

     label2:
        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r4, 0);

        return;

     label3:
        return;

     label4:
        return;
    }

    public static void clearInstance()
    {
        <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher instance> = null;

        return;
    }

    private void clearNetworkError()
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime> = 0L;

        $r0.<com.google.common.DataRequestDispatcher: boolean networkErrorMode> = 0;

        $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime> = 0L;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected static boolean containsForegroundRequest(java.util.Vector)
    {
        java.util.Vector $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.DataRequest $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Vector;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r2 = (com.google.common.DataRequest) $r1;

        $z0 = interfaceinvoke $r2.<com.google.common.DataRequest: boolean isForeground()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected static boolean containsSubmissionRequest(java.util.Vector)
    {
        java.util.Vector $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        com.google.common.DataRequest $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Vector;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r2 = (com.google.common.DataRequest) $r1;

        $z0 = interfaceinvoke $r2.<com.google.common.DataRequest: boolean isSubmission()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static com.google.common.DataRequestDispatcher createInstance(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3;
        com.google.common.DataRequestDispatcher $r4;
        java.lang.RuntimeException $r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        entermonitor class "com/google/common/DataRequestDispatcher";

     label1:
        $r4 = <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher instance>;

        if $r4 == null goto label3;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Attempting to create multiple DataRequestDispatchers");

        throw $r5;

     label2:
        $r6 := @caughtexception;

        exitmonitor class "com/google/common/DataRequestDispatcher";

        throw $r6;

     label3:
        $r4 = new com.google.common.DataRequestDispatcher;

        specialinvoke $r4.<com.google.common.DataRequestDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r2, $r3);

        <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher instance> = $r4;

        $r4 = <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher instance>;

     label4:
        exitmonitor class "com/google/common/DataRequestDispatcher";

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public static java.lang.String formatKb(long)
    {
        long $l0;
        java.lang.String $r0;

        $l0 := @parameter0: long;

        $l0 = 512L + $l0;

        $l0 = $l0 / 1024L;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r0 = staticinvoke <com.google.common.util.text.TextUtil: java.lang.String formatMessage(java.lang.String,java.lang.String)>("{0}KB", $r0);

        return $r0;
    }

    public static com.google.common.DataRequestDispatcher getInstance()
    {
        com.google.common.DataRequestDispatcher r0;

        r0 = <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher instance>;

        return r0;
    }

    private void handleError(int)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i4;
        boolean $z0, $z1;
        com.google.common.io.HttpConnectionFactory $r1;
        long $l1, $l3;
        byte $b2;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $i0 := @parameter0: int;

        $z0 = 0;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory>;

        interfaceinvoke $r1.<com.google.common.io.HttpConnectionFactory: void notifyFailure()>();

        $z1 = $r0.<com.google.common.DataRequestDispatcher: boolean networkErrorMode>;

        if $z1 != 0 goto label06;

        $l1 = <com.google.common.DataRequestDispatcher: long INITIAL_NETWORK_ERROR_RETRY_TIMEOUT>;

        $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime> = $l1;

        $l1 = $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label05;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime> = $l1;

     label02:
        exitmonitor $r0;

     label03:
        if $z0 == 0 goto label13;

        if $i0 != 3 goto label12;

        $r1 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory>;

        $z0 = interfaceinvoke $r1.<com.google.common.io.HttpConnectionFactory: boolean usingMDS()>();

        if $z0 == 0 goto label12;

        $r1 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory>;

        $z0 = interfaceinvoke $r1.<com.google.common.io.HttpConnectionFactory: boolean getNetworkWorked()>();

        if $z0 != 0 goto label12;

        $i0 = 4;

     label04:
        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void notifyNetworkError(int)>($i0);

        return;

     label05:
        $l1 = $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime>;

        $l1 = $l1 + 15000L;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = $l1 cmp $l3;

        if $b2 >= 0 goto label02;

        $z0 = 1;

        goto label02;

     label06:
        $l1 = $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime>;

        $b2 = $l1 cmp 2000L;

        if $b2 >= 0 goto label10;

        $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime> = 2000L;

     label07:
        $l1 = $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime>;

        $b2 = $l1 cmp 300000L;

        if $b2 <= 0 goto label02;

        $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime> = 300000L;

        goto label02;

     label08:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r2;

     label10:
        $l1 = $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime>;

        $i4 = <com.google.common.DataRequestDispatcher: int CONNECTION_SPEED_NUMERATOR>;

        $l3 = (long) $i4;

        $l1 = $l1 * $l3;

        $i4 = <com.google.common.DataRequestDispatcher: int CONNECTION_SPEED_DENOMINATOR>;

        $l3 = (long) $i4;

        $l1 = $l1 / $l3;

        $r0.<com.google.common.DataRequestDispatcher: long errorRetryTime> = $l1;

     label11:
        goto label07;

     label12:
        goto label04;

     label13:
        return;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label05 to label09 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    protected static boolean isSprintNetworkAccessDenied(java.io.IOException)
    {
        java.io.IOException $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.io.IOException;

        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Network can\'t access");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Network unavailable due to Network Guard setting");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Network unavailable due to Data Roam Guard setting");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    static void saveCookie(long)
    {
        long $l0;
        java.io.ByteArrayOutputStream $r0;
        java.io.DataOutputStream $r1;
        com.google.common.Config $r2;
        com.google.common.io.PersistentStore $r3;
        byte[] $r4;
        java.io.IOException $r5;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        $l0 := @parameter0: long;

        $r0 = new java.io.ByteArrayOutputStream;

     label1:
        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r0);

        interfaceinvoke $r1.<java.io.DataOutput: void writeLong(long)>($l0);

        $r2 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r3 = virtualinvoke $r2.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r3.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("SessionID", $r4);

        interfaceinvoke $r3.<com.google.common.io.PersistentStore: void savePreferences()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void setInstance(com.google.common.DataRequestDispatcher)
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @parameter0: com.google.common.DataRequestDispatcher;

        <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher instance> = $r0;

        return;
    }

    public void addDataRequest(com.google.common.DataRequest)
    {
        com.google.common.DataRequestDispatcher $r0;
        com.google.common.DataRequest $r1;
        int $i0, $i1;
        java.util.Vector $r2;
        java.lang.Object $r3;
        com.google.common.DataRequestDispatcher$DispatcherServer $r4;
        boolean $z0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: com.google.common.DataRequest;

        $i0 = 0;

     label1:
        $r2 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (com.google.common.DataRequestDispatcher$DispatcherServer) $r3;

        $i1 = interfaceinvoke $r1.<com.google.common.DataRequest: int getRequestType()>();

        $z0 = virtualinvoke $r4.<com.google.common.DataRequestDispatcher$DispatcherServer: boolean canHandle(int)>($i1);

        if $z0 == 0 goto label2;

        virtualinvoke $r4.<com.google.common.DataRequestDispatcher$DispatcherServer: void addDataRequest(com.google.common.DataRequest)>($r1);

        return;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r4 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher$DispatcherServer defaultServer>;

        virtualinvoke $r4.<com.google.common.DataRequestDispatcher$DispatcherServer: void addDataRequest(com.google.common.DataRequest)>($r1);

        return;
    }

    protected final void addDataRequests(java.util.Vector, int)
    {
        com.google.common.DataRequestDispatcher $r0;
        java.util.Vector $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.common.DataRequest $r3;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.util.Vector;

        $i0 := @parameter1: int;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (com.google.common.DataRequest) $r2;

        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void addDataRequest(com.google.common.DataRequest)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public final void addSimpleRequest(int, byte[], boolean, boolean)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        byte[] $r1;
        boolean $z0, $z1;
        com.google.common.SimpleDataRequest $r2;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r2 = new com.google.common.SimpleDataRequest;

        specialinvoke $r2.<com.google.common.SimpleDataRequest: void <init>(int,byte[],boolean,boolean)>($i0, $r1, $z0, $z1);

        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void addDataRequest(com.google.common.DataRequest)>($r2);

        return;
    }

    public void addThirdPartyServer(java.lang.String, int[], byte)
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.String $r1;
        int[] $r2;
        byte $b0;
        int $i1, $i2;
        java.util.Vector $r3;
        java.lang.Integer $r4;
        com.google.common.DataRequestDispatcher$DispatcherServer $r5;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: int[];

        $b0 := @parameter2: byte;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        $i2 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i2 >= $i1 goto label2;

        $r4 = new java.lang.Integer;

        $i1 = $r2[$i2];

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r5 = new com.google.common.DataRequestDispatcher$DispatcherServer;

        specialinvoke $r5.<com.google.common.DataRequestDispatcher$DispatcherServer: void <init>(com.google.common.DataRequestDispatcher,java.lang.String,java.util.Vector,byte)>($r0, $r1, $r3, $b0);

        $r3 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        return;
    }

    public void ageFirstConnectionErrorTimeForTest()
    {
        com.google.common.DataRequestDispatcher $r0;
        long $l0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 - 30000L;

        $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime> = $l0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean canDispatchNow()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;
        boolean $z0;
        com.google.common.io.HttpConnectionFactory $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.google.common.DataRequestDispatcher: boolean active>;

        if $z0 == 0 goto label5;

        $i1 = $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount>;

        $i0 = <com.google.common.DataRequestDispatcher: int MAX_WORKER_THREAD_COUNT>;

        if $i1 >= $i0 goto label5;

        $r1 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory>;

        $z0 = interfaceinvoke $r1.<com.google.common.io.HttpConnectionFactory: boolean getNetworkWorkedThisSession()>();

        if $z0 != 0 goto label3;

        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount>;

     label2:
        if $i0 != 0 goto label5;

     label3:
        $z0 = 1;

     label4:
        exitmonitor $r0;

        return $z0;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
    }

    public void generateRequest(java.util.Vector, java.io.OutputStream, com.google.common.DataRequestDispatcher$DispatcherServer) throws java.io.IOException
    {
        java.util.Vector $r0;
        java.io.OutputStream $r1;
        com.google.common.DataRequestDispatcher$DispatcherServer $r2;
        java.io.DataOutputStream $r3;
        com.google.common.DataRequestDispatcher $r4;
        byte $b0;
        long $l1;
        java.lang.String $r5;
        int $i2, $i3;
        java.lang.Object $r6;
        com.google.common.DataRequest $r7;

        $r4 := @this: com.google.common.DataRequestDispatcher;

        $r0 := @parameter0: java.util.Vector;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 := @parameter2: com.google.common.DataRequestDispatcher$DispatcherServer;

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

        specialinvoke $r4.<com.google.common.DataRequestDispatcher: void addClientPropertiesRequest(java.util.Vector,com.google.common.DataRequestDispatcher$DispatcherServer)>($r0, $r2);

        $b0 = $r2.<com.google.common.DataRequestDispatcher$DispatcherServer: byte headerFlag>;

        if $b0 != 0 goto label3;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeShort(int)>(23);

        $l1 = $r4.<com.google.common.DataRequestDispatcher: long cookie>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeLong(long)>($l1);

        $r5 = staticinvoke <com.google.common.Config: java.lang.String getLocale()>();

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r5 = $r4.<com.google.common.DataRequestDispatcher: java.lang.String platformID>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r5 = $r4.<com.google.common.DataRequestDispatcher: java.lang.String softwareVersion>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r5 = $r4.<com.google.common.DataRequestDispatcher: java.lang.String distributionChannel>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

     label1:
        $i2 = 0;

     label2:
        $i3 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i2 >= $i3 goto label4;

        $r6 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r7 = (com.google.common.DataRequest) $r6;

        $i3 = interfaceinvoke $r7.<com.google.common.DataRequest: int getRequestType()>();

        virtualinvoke $r3.<java.io.DataOutputStream: void writeByte(int)>($i3);

        interfaceinvoke $r7.<com.google.common.DataRequest: void writeRequestData(java.io.DataOutput)>($r3);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $b0 = $r2.<com.google.common.DataRequestDispatcher$DispatcherServer: byte headerFlag>;

        if $b0 != 1 goto label1;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeShort(int)>(23);

        $l1 = $r4.<com.google.common.DataRequestDispatcher: long cookie>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeLong(long)>($l1);

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

        virtualinvoke $r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

        goto label1;

     label4:
        virtualinvoke $r3.<java.io.DataOutputStream: void flush()>();

        return;
    }

    public final int getBytesReceived()
    {
        com.google.common.DataRequestDispatcher $r0;
        int i0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        i0 = $r0.<com.google.common.DataRequestDispatcher: int bytesReceived>;

        return i0;
    }

    public final int getBytesSent()
    {
        com.google.common.DataRequestDispatcher $r0;
        int i0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        i0 = $r0.<com.google.common.DataRequestDispatcher: int bytesSent>;

        return i0;
    }

    public long getCookie()
    {
        com.google.common.DataRequestDispatcher $r0;
        long l0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        l0 = $r0.<com.google.common.DataRequestDispatcher: long cookie>;

        return l0;
    }

    protected com.google.common.DataRequestListener getDataRequestListener()
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.Throwable $r1;
        com.google.common.DataRequestListener r2;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestListener listenerData>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getLastActiveTime()
    {
        com.google.common.DataRequestDispatcher $r0;
        long l0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        l0 = $r0.<com.google.common.DataRequestDispatcher: long lastActiveTime>;

        return l0;
    }

    public int getNetworkSpeedBytesPerSecond()
    {
        com.google.common.DataRequestDispatcher $r0;
        int i0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        i0 = $r0.<com.google.common.DataRequestDispatcher: int networkSpeedBytesPerSecond>;

        return i0;
    }

    public int getRequestType()
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        return 15;
    }

    public java.lang.String getServerAddress()
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.String r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        r1 = $r0.<com.google.common.DataRequestDispatcher: java.lang.String serverAddress>;

        return r1;
    }

    public boolean isForeground()
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        return 1;
    }

    public boolean isForegroundRequestActive()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerForegroundThreadCount>;

     label2:
        if $i0 <= 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean isNetworkErrorMode()
    {
        com.google.common.DataRequestDispatcher $r0;
        java.lang.Throwable $r1;
        boolean z0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        z0 = $r0.<com.google.common.DataRequestDispatcher: boolean networkErrorMode>;

     label2:
        exitmonitor $r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isRequestActive()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerThreadCount>;

     label2:
        if $i0 <= 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean isSubmission()
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        return 0;
    }

    public boolean isSubmissionRequestActive()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.DataRequestDispatcher: int workerSubmissionThreadCount>;

     label2:
        if $i0 <= 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean isSuspended()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.DataRequestDispatcher: int suspendCount>;

     label2:
        if $i0 <= 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    protected long loadOrRequestCookie()
    {
        com.google.common.DataRequestDispatcher $r0;
        java.io.DataInput $r1;
        long $l0;
        java.io.IOException $r2;
        com.google.common.Config $r3;
        com.google.common.io.PersistentStore $r4;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 = staticinvoke <com.google.common.StaticUtil: java.io.DataInput readPreferenceAsDataInput(java.lang.String)>("SessionID");

        if $r1 == null goto label4;

     label1:
        $l0 = interfaceinvoke $r1.<java.io.DataInput: long readLong()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r4 = virtualinvoke $r3.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        interfaceinvoke $r4.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("SessionID", null);

     label4:
        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void addDataRequest(com.google.common.DataRequest)>($r0);

        return 0L;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected final void notifyNetworkError(int)
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        com.google.common.DataRequestListener $r1;
        boolean $z0, $z1, $z2;
        com.google.common.io.HttpConnectionFactory $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestListener getDataRequestListener()>();

        entermonitor $r0;

     label01:
        $z0 = $r0.<com.google.common.DataRequestDispatcher: boolean networkErrorMode>;

        if $z0 != 0 goto label09;

        $r0.<com.google.common.DataRequestDispatcher: boolean networkErrorMode> = 1;

        $r0.<com.google.common.DataRequestDispatcher: long firstConnectionErrorTime> = 0L;

        $z0 = 1;

     label02:
        exitmonitor $r0;

     label03:
        $r2 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory>;

        $z1 = interfaceinvoke $r2.<com.google.common.io.HttpConnectionFactory: boolean getNetworkWorked()>();

        if $i0 != 3 goto label08;

        if $z1 == 0 goto label08;

        $z2 = 1;

     label04:
        if $z2 != 0 goto label10;

        if $z0 == 0 goto label11;

        if $r1 == null goto label12;

        interfaceinvoke $r1.<com.google.common.DataRequestListener: void onNetworkError(int,boolean)>($i0, $z1);

        return;

     label05:
        $r3 := @caughtexception;

     label06:
        exitmonitor $r0;

     label07:
        throw $r3;

     label08:
        $z2 = 0;

        goto label04;

     label09:
        $z0 = 0;

        goto label02;

     label10:
        return;

     label11:
        return;

     label12:
        return;

        catch java.lang.Throwable from label01 to label03 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
    }

    protected void processDataRequest(java.io.DataInput, com.google.common.DataRequest, com.google.common.DataRequestDispatcher$DispatcherServer) throws java.io.IOException
    {
        com.google.common.DataRequestDispatcher $r0;
        java.io.DataInput $r1;
        com.google.common.DataRequest $r2;
        com.google.common.DataRequestDispatcher$DispatcherServer $r3;
        int $i0, $i1;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.google.common.DataRequestListener $r7;
        boolean $z0;
        java.util.Vector $r8;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.io.DataInput;

        $r2 := @parameter1: com.google.common.DataRequest;

        $r3 := @parameter2: com.google.common.DataRequestDispatcher$DispatcherServer;

        $i0 = interfaceinvoke $r1.<java.io.DataInput: int readUnsignedByte()>();

        $i1 = interfaceinvoke $r2.<com.google.common.DataRequest: int getRequestType()>();

        if $i0 == $i1 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RT: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i0 = interfaceinvoke $r2.<com.google.common.DataRequest: int getRequestType()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r7 = virtualinvoke $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestListener getDataRequestListener()>();

        $z0 = interfaceinvoke $r2.<com.google.common.DataRequest: boolean readResponseData(java.io.DataInput)>($r1);

        if $z0 == 0 goto label2;

        if $r7 == null goto label3;

        if $r2 == $r0 goto label4;

        interfaceinvoke $r7.<com.google.common.DataRequestListener: void onComplete(com.google.common.DataRequest)>($r2);

        return;

     label2:
        $r8 = $r3.<com.google.common.DataRequestDispatcher$DispatcherServer: java.util.Vector serverRequests>;

        virtualinvoke $r8.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r2, 0);

        return;

     label3:
        return;

     label4:
        return;
    }

    public boolean readResponseData(java.io.DataInput) throws java.io.IOException
    {
        com.google.common.DataRequestDispatcher $r0;
        java.io.DataInput $r1;
        long $l0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.io.DataInput;

        $l0 = interfaceinvoke $r1.<java.io.DataInput: long readLong()>();

        $r0.<com.google.common.DataRequestDispatcher: long cookie> = $l0;

        $l0 = $r0.<com.google.common.DataRequestDispatcher: long cookie>;

        staticinvoke <com.google.common.DataRequestDispatcher: void saveCookie(long)>($l0);

        return 1;
    }

    public boolean requestImmediately()
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        return 0;
    }

    public void resetConnectionFactory()
    {
        com.google.common.DataRequestDispatcher $r0;
        com.google.common.Config $r1;
        com.google.common.io.HttpConnectionFactory $r2;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r2 = virtualinvoke $r1.<com.google.common.Config: com.google.common.io.HttpConnectionFactory getConnectionFactory()>();

        $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory> = $r2;

        return;
    }

    protected void serviceRequests(java.util.Vector, com.google.common.DataRequestDispatcher$DispatcherServer) throws java.io.IOException, java.lang.SecurityException
    {
        com.google.common.DataRequestDispatcher $r0;
        java.util.Vector $r1;
        com.google.common.DataRequestDispatcher$DispatcherServer $r2;
        java.io.ByteArrayOutputStream $r3;
        java.lang.String $r4, $r8;
        byte[] $r5;
        long $l0, $l3, $l4;
        com.google.common.io.HttpConnectionFactory $r6;
        java.lang.StringBuilder $r7;
        com.google.common.io.GoogleHttpConnection $r9, $r15;
        int $i1, $i2, $i5;
        java.io.DataOutputStream $r10, $r16;
        java.io.DataInputStream $r11, $r13;
        java.io.IOException $r12, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        boolean $z0;
        java.lang.Throwable $r14;
        java.lang.SecurityException $r17;
        java.lang.Object $r20;
        com.google.common.DataRequest $r21;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: com.google.common.DataRequestDispatcher$DispatcherServer;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = virtualinvoke $r0.<com.google.common.DataRequestDispatcher: java.lang.String urlArguments(java.util.Vector)>($r1);

        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void generateRequest(java.util.Vector,java.io.OutputStream,com.google.common.DataRequestDispatcher$DispatcherServer)>($r1, $r3, $r2);

        $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label02:
        $r6 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.io.HttpConnectionFactory connectionFactory>;

     label03:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = $r2.<com.google.common.DataRequestDispatcher$DispatcherServer: java.lang.String serverAddress>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = interfaceinvoke $r6.<com.google.common.io.HttpConnectionFactory: com.google.common.io.GoogleHttpConnection createConnection(java.lang.String,boolean)>($r4, 1);

     label04:
        interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: void setConnectionProperty(java.lang.String,java.lang.String)>("Content-Type", "application/binary");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i1 = lengthof $r5;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: void setConnectionProperty(java.lang.String,java.lang.String)>("Content-Length", $r4);

        $r10 = interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: java.io.DataOutputStream openDataOutputStream()>();

     label05:
        virtualinvoke $r10.<java.io.FilterOutputStream: void write(byte[])>($r5);

     label06:
        $i1 = $r0.<com.google.common.DataRequestDispatcher: int bytesSent>;

        $i2 = lengthof $r5;

        $i1 = $i2 + $i1;

     label07:
        $r0.<com.google.common.DataRequestDispatcher: int bytesSent> = $i1;

        $r11 = interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: java.io.DataInputStream openDataInputStream()>();

     label08:
        $i1 = interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: int getResponseCode()>();

        $r4 = interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: java.lang.String getContentType()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label09:
        $l3 = $l3 - $l0;

        if $i1 != 501 goto label33;

     label10:
        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void notifyNetworkError(int)>(2);

     label11:
        if $r11 == null goto label13;

     label12:
        virtualinvoke $r11.<java.io.FilterInputStream: void close()>();

     label13:
        if $r10 == null goto label15;

     label14:
        virtualinvoke $r10.<java.io.FilterOutputStream: void close()>();

     label15:
        if $r9 == null goto label86;

     label16:
        interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: void close()>();

     label17:
        return;

     label18:
        $r12 := @caughtexception;

        $r13 = null;

        $r10 = null;

        $r9 = null;

     label19:
        $z0 = staticinvoke <com.google.common.DataRequestDispatcher: boolean isSprintNetworkAccessDenied(java.io.IOException)>($r12);

     label20:
        if $z0 == 0 goto label85;

        $z0 = 1;

     label21:
        throw $r12;

     label22:
        $r14 := @caughtexception;

        $r15 = $r9;

        $r16 = $r10;

     label23:
        if $r13 == null goto label25;

     label24:
        virtualinvoke $r13.<java.io.FilterInputStream: void close()>();

     label25:
        if $r16 == null goto label27;

        if $z0 != 0 goto label27;

     label26:
        virtualinvoke $r16.<java.io.FilterOutputStream: void close()>();

     label27:
        if $r15 == null goto label29;

     label28:
        interfaceinvoke $r15.<com.google.common.io.GoogleHttpConnection: void close()>();

     label29:
        throw $r14;

     label30:
        $r17 := @caughtexception;

        $r13 = null;

        $r10 = null;

        $r9 = null;

     label31:
        throw $r17;

     label32:
        $r14 := @caughtexception;

        $r15 = $r9;

        $r16 = $r10;

        $z0 = 0;

        goto label23;

     label33:
        if $i1 == 200 goto label36;

     label34:
        $r18 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad HTTP response code: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r18;

     label35:
        $r14 := @caughtexception;

        $z0 = 0;

        $r16 = $r10;

        $r15 = $r9;

        $r13 = $r11;

        goto label23;

     label36:
        $r8 = "application/binary";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label37;

        $r18 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad HTTP content type: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r18;

     label37:
        $l4 = interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: long getLength()>();

        $i1 = (int) $l4;

        $i2 = $r0.<com.google.common.DataRequestDispatcher: int bytesReceived>;

        $i2 = $i2 + $i1;

        $r0.<com.google.common.DataRequestDispatcher: int bytesReceived> = $i2;

        $i2 = virtualinvoke $r11.<java.io.DataInputStream: int readUnsignedShort()>();

        if $i2 == 23 goto label46;

        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void notifyNetworkError(int)>(1);

     label38:
        if $r11 == null goto label40;

     label39:
        virtualinvoke $r11.<java.io.FilterInputStream: void close()>();

     label40:
        if $r10 == null goto label42;

     label41:
        virtualinvoke $r10.<java.io.FilterOutputStream: void close()>();

     label42:
        if $r9 == null goto label87;

     label43:
        interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: void close()>();

     label44:
        return;

     label45:
        $r19 := @caughtexception;

        return;

     label46:
        $i2 = 0;

     label47:
        $i5 = virtualinvoke $r1.<java.util.Vector: int size()>();

     label48:
        if $i2 >= $i5 goto label56;

     label49:
        $r20 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r21 = (com.google.common.DataRequest) $r20;

        virtualinvoke $r0.<com.google.common.DataRequestDispatcher: void processDataRequest(java.io.DataInput,com.google.common.DataRequest,com.google.common.DataRequestDispatcher$DispatcherServer)>($r11, $r21, $r2);

     label50:
        $i2 = $i2 + 1;

        goto label47;

     label51:
        $r22 := @caughtexception;

        $i1 = 0;

     label52:
        if $i1 >= $i2 goto label55;

     label53:
        virtualinvoke $r1.<java.util.Vector: void removeElementAt(int)>(0);

     label54:
        $i1 = $i1 + 1;

        goto label52;

     label55:
        throw $r22;

     label56:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l4 - $l0;

        $i2 = (int) $l0;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>(22, "fb", $r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>(22, "lb", $r4);

        if $i1 < 8192 goto label57;

        if $i2 > 60000 goto label57;

        $i1 = $i1 * 1000;

        $i1 = $i1 / $i2;

        $r0.<com.google.common.DataRequestDispatcher: int networkSpeedBytesPerSecond> = $i1;

     label57:
        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

     label58:
        if $r11 == null goto label60;

     label59:
        virtualinvoke $r11.<java.io.FilterInputStream: void close()>();

     label60:
        if $r10 == null goto label62;

     label61:
        virtualinvoke $r10.<java.io.FilterOutputStream: void close()>();

     label62:
        if $r9 == null goto label88;

     label63:
        interfaceinvoke $r9.<com.google.common.io.GoogleHttpConnection: void close()>();

     label64:
        return;

     label65:
        $r23 := @caughtexception;

        return;

     label66:
        $r24 := @caughtexception;

        goto label13;

     label67:
        $r25 := @caughtexception;

        goto label15;

     label68:
        $r26 := @caughtexception;

        return;

     label69:
        $r27 := @caughtexception;

        goto label40;

     label70:
        $r28 := @caughtexception;

        goto label42;

     label71:
        $r29 := @caughtexception;

        goto label60;

     label72:
        $r30 := @caughtexception;

        goto label62;

     label73:
        $r31 := @caughtexception;

        goto label25;

     label74:
        $r32 := @caughtexception;

        goto label27;

     label75:
        $r33 := @caughtexception;

        goto label29;

     label76:
        $r14 := @caughtexception;

        $r13 = null;

        $z0 = 0;

        $r16 = null;

        $r15 = null;

        goto label23;

     label77:
        $r14 := @caughtexception;

        $z0 = 0;

        $r16 = null;

        $r15 = $r9;

        $r13 = null;

        goto label23;

     label78:
        $r14 := @caughtexception;

        $z0 = 0;

        $r16 = $r10;

        $r15 = $r9;

        $r13 = null;

        goto label23;

     label79:
        $r17 := @caughtexception;

        $r10 = null;

        $r13 = null;

        goto label31;

     label80:
        $r17 := @caughtexception;

        $r13 = null;

        goto label31;

     label81:
        $r17 := @caughtexception;

        $r13 = $r11;

        goto label31;

     label82:
        $r12 := @caughtexception;

        $r10 = null;

        $r13 = null;

        goto label19;

     label83:
        $r12 := @caughtexception;

        $r13 = null;

        goto label19;

     label84:
        $r12 := @caughtexception;

        $r13 = $r11;

        goto label19;

     label85:
        $z0 = 0;

        goto label21;

     label86:
        return;

     label87:
        return;

     label88:
        return;

        catch java.io.IOException from label01 to label02 with label18;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.lang.SecurityException from label01 to label02 with label30;
        catch java.lang.SecurityException from label03 to label04 with label30;
        catch java.lang.Throwable from label01 to label04 with label76;
        catch java.io.IOException from label04 to label05 with label82;
        catch java.lang.SecurityException from label04 to label05 with label79;
        catch java.lang.Throwable from label04 to label05 with label77;
        catch java.io.IOException from label05 to label06 with label83;
        catch java.io.IOException from label07 to label08 with label83;
        catch java.lang.SecurityException from label05 to label06 with label80;
        catch java.lang.SecurityException from label07 to label08 with label80;
        catch java.lang.Throwable from label05 to label08 with label78;
        catch java.io.IOException from label08 to label09 with label84;
        catch java.lang.SecurityException from label08 to label09 with label81;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch java.lang.Throwable from label10 to label11 with label35;
        catch java.io.IOException from label12 to label13 with label66;
        catch java.io.IOException from label14 to label15 with label67;
        catch java.io.IOException from label16 to label17 with label68;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label21 to label22 with label22;
        catch java.io.IOException from label24 to label25 with label73;
        catch java.io.IOException from label26 to label27 with label74;
        catch java.io.IOException from label28 to label29 with label75;
        catch java.lang.Throwable from label31 to label32 with label32;
        catch java.lang.Throwable from label34 to label35 with label35;
        catch java.lang.Throwable from label36 to label38 with label35;
        catch java.io.IOException from label39 to label40 with label69;
        catch java.io.IOException from label41 to label42 with label70;
        catch java.io.IOException from label43 to label44 with label45;
        catch java.lang.Throwable from label47 to label48 with label35;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.lang.Throwable from label49 to label50 with label35;
        catch java.lang.Throwable from label53 to label54 with label35;
        catch java.lang.Throwable from label55 to label58 with label35;
        catch java.io.IOException from label59 to label60 with label71;
        catch java.io.IOException from label61 to label62 with label72;
        catch java.io.IOException from label63 to label64 with label65;
    }

    public final void setDataRequestListener(com.google.common.DataRequestListener)
    {
        com.google.common.DataRequestDispatcher $r0;
        com.google.common.DataRequestListener $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: com.google.common.DataRequestListener;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestListener listenerData> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String setProperty(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        com.google.common.DataRequestDispatcher $r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;

        $r2 := @this: com.google.common.DataRequestDispatcher;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = $r2.<com.google.common.DataRequestDispatcher: java.util.Hashtable properties>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r4;

        return $r0;

     label1:
        $r3 = $r2.<com.google.common.DataRequestDispatcher: java.util.Hashtable properties>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        $r0 = (java.lang.String) $r4;

        return $r0;
    }

    public void start()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;
        java.util.Vector $r1;
        java.lang.Object $r2;
        com.google.common.DataRequestDispatcher$DispatcherServer $r3;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r0.<com.google.common.DataRequestDispatcher: boolean active> = 1;

        $i0 = 0;

     label1:
        $r1 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (com.google.common.DataRequestDispatcher$DispatcherServer) $r2;

        virtualinvoke $r3.<com.google.common.DataRequestDispatcher$DispatcherServer: void start()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r3 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher$DispatcherServer defaultServer>;

        virtualinvoke $r3.<com.google.common.DataRequestDispatcher$DispatcherServer: void start()>();

        return;
    }

    public void stop()
    {
        com.google.common.DataRequestDispatcher $r0;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r0.<com.google.common.DataRequestDispatcher: boolean active> = 0;

        return;
    }

    public void suspend()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.DataRequestDispatcher: int suspendCount>;

        $i0 = $i0 + 1;

        $r0.<com.google.common.DataRequestDispatcher: int suspendCount> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unsuspend()
    {
        com.google.common.DataRequestDispatcher $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.Vector $r1;
        java.lang.Object $r2;
        com.google.common.DataRequestDispatcher$DispatcherServer $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.DataRequestDispatcher: int suspendCount>;

        $i0 = $i0 - 1;

        $r0.<com.google.common.DataRequestDispatcher: int suspendCount> = $i0;

        $z0 = virtualinvoke $r0.<com.google.common.DataRequestDispatcher: boolean isSuspended()>();

        if $z0 == 0 goto label3;

        exitmonitor $r0;

     label2:
        return;

     label3:
        exitmonitor $r0;

     label4:
        $i0 = 0;

     label5:
        $r1 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label9;

        $r1 = $r0.<com.google.common.DataRequestDispatcher: java.util.Vector thirdPartyServers>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (com.google.common.DataRequestDispatcher$DispatcherServer) $r2;

        virtualinvoke $r3.<com.google.common.DataRequestDispatcher$DispatcherServer: void activateIfNeeded()>();

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor $r0;

     label8:
        throw $r4;

     label9:
        $r3 = $r0.<com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher$DispatcherServer defaultServer>;

        virtualinvoke $r3.<com.google.common.DataRequestDispatcher$DispatcherServer: void activateIfNeeded()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected java.lang.String urlArguments(java.util.Vector)
    {
        java.util.Vector $r0;
        com.google.common.DataRequestDispatcher $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3, $r7;
        int $i0, $i1;
        java.lang.Object $r4;
        com.google.common.DataRequest $r5;
        boolean $z0;
        com.google.common.NeedsSpecialUrl $r6;

        $r1 := @this: com.google.common.DataRequestDispatcher;

        $r0 := @parameter0: java.util.Vector;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = "?";

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r4 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r5 = (com.google.common.DataRequest) $r4;

        $z0 = $r5 instanceof com.google.common.NeedsSpecialUrl;

        if $z0 == 0 goto label2;

        $r6 = (com.google.common.NeedsSpecialUrl) $r5;

        $r7 = interfaceinvoke $r6.<com.google.common.NeedsSpecialUrl: java.lang.String getParams()>();

        $z0 = staticinvoke <com.google.common.util.text.TextUtil: boolean isEmpty(java.lang.String)>($r7);

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r3 = "&";

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = staticinvoke <com.google.common.util.text.TextUtil: boolean isEmpty(java.lang.String)>($r3);

        if $z0 != 0 goto label4;

        return $r3;

     label4:
        return $r3;
    }

    public void writeRequestData(java.io.DataOutput) throws java.io.IOException
    {
        com.google.common.DataRequestDispatcher $r0;
        java.io.DataOutput $r1;

        $r0 := @this: com.google.common.DataRequestDispatcher;

        $r1 := @parameter0: java.io.DataOutput;

        return;
    }
}
