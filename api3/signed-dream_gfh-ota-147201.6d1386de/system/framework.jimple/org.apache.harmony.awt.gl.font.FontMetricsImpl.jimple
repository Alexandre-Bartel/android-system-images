public class org.apache.harmony.awt.gl.font.FontMetricsImpl extends java.awt.FontMetrics
{
    private static final long serialVersionUID;
    private int ascent;
    private int descent;
    private int leading;
    private java.awt.Font mFn;
    public com.android.internal.awt.AndroidGraphics2D mSg;
    private int maxAdvance;
    private int maxAscent;
    private int maxDescent;
    private transient org.apache.harmony.awt.gl.font.FontPeerImpl peer;
    private float scaleX;
    private float scaleY;
    private int[] widths;

    public void <init>(java.awt.Font)
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        java.awt.Font $r1;
        int[] $r2;
        com.android.internal.awt.AndroidGraphics2D $r3;
        android.graphics.Paint $r4;
        float $f0;
        int $i0;
        android.graphics.Paint$FontMetricsInt $r5;
        java.awt.geom.AffineTransform $r6;
        boolean $z0;
        double $d0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        $r1 := @parameter0: java.awt.Font;

        specialinvoke $r0.<java.awt.FontMetrics: void <init>(java.awt.Font)>($r1);

        $r2 = newarray (int)[256];

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] widths> = $r2;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: float scaleX> = 1.0F;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: float scaleY> = 1.0F;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: java.awt.Font mFn> = $r1;

        $r3 = staticinvoke <com.android.internal.awt.AndroidGraphics2D: com.android.internal.awt.AndroidGraphics2D getInstance()>();

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: com.android.internal.awt.AndroidGraphics2D mSg> = $r3;

        $r4 = staticinvoke <com.android.internal.awt.AndroidGraphics2D: android.graphics.Paint getAndroidPaint()>();

        $f0 = virtualinvoke $r4.<android.graphics.Paint: float ascent()>();

        $f0 = neg $f0;

        $i0 = (int) $f0;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int ascent> = $i0;

        $f0 = virtualinvoke $r4.<android.graphics.Paint: float descent()>();

        $i0 = (int) $f0;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int descent> = $i0;

        $r5 = virtualinvoke $r4.<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i0 = $r5.<android.graphics.Paint$FontMetricsInt: int leading>;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int leading> = $i0;

        $r6 = virtualinvoke $r1.<java.awt.Font: java.awt.geom.AffineTransform getTransform()>();

        $z0 = virtualinvoke $r6.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z0 != 0 goto label1;

        $d0 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getScaleX()>();

        $f0 = (float) $d0;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: float scaleX> = $f0;

        $d0 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getScaleY()>();

        $f0 = (float) $d0;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: float scaleY> = $f0;

        return;

     label1:
        return;
    }

    private void initWidths()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int[] $r1;
        int $i0, $i2;
        org.apache.harmony.awt.gl.font.FontPeerImpl $r2;
        char $c1;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        $r1 = newarray (int)[256];

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] widths> = $r1;

        $i0 = 0;

     label1:
        if $i0 >= 256 goto label2;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] widths>;

        $r2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl getFontPeer()>();

        $c1 = (char) $i0;

        $i2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.FontPeerImpl: int charWidth(char)>($c1);

        $f0 = (float) $i2;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: float scaleX>;

        $f0 = $f0 * $f1;

        $i2 = (int) $f0;

        $r1[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public int charWidth(char)
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        char $c0;
        float $f0, $f1;
        int[] $r1;
        int $i1;
        org.apache.harmony.awt.gl.font.FontPeerImpl $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        $c0 := @parameter0: char;

        if $c0 >= 256 goto label1;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] widths>;

        $i1 = $r1[$c0];

        return $i1;

     label1:
        $r2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl getFontPeer()>();

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.FontPeerImpl: int charWidth(char)>($c0);

        $f1 = (float) $i1;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: float scaleX>;

        $f0 = $f1 * $f0;

        $i1 = (int) $f0;

        return $i1;
    }

    public int charWidth(int)
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int $i0;
        char $c1;
        int[] $r1;
        org.apache.harmony.awt.gl.font.FontPeerImpl $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        $i0 := @parameter0: int;

        if $i0 >= 256 goto label1;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] widths>;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl getFontPeer()>();

        $c1 = (char) $i0;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.FontPeerImpl: int charWidth(char)>($c1);

        return $i0;
    }

    public int getAscent()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int ascent>;

        return i0;
    }

    public int getDescent()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int descent>;

        return i0;
    }

    public org.apache.harmony.awt.gl.font.FontPeerImpl getFontPeer()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        java.awt.peer.FontPeer $r1;
        org.apache.harmony.awt.gl.font.FontPeerImpl $r2;
        java.awt.Font $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl peer>;

        if $r2 != null goto label1;

        $r3 = $r0.<java.awt.FontMetrics: java.awt.Font font>;

        $r1 = virtualinvoke $r3.<java.awt.Font: java.awt.peer.FontPeer getPeer()>();

        $r2 = (org.apache.harmony.awt.gl.font.FontPeerImpl) $r1;

        $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl peer> = $r2;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl peer>;

        return $r2;
    }

    public int getLeading()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int leading>;

        return i0;
    }

    public int getMaxAdvance()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int maxAdvance>;

        return i0;
    }

    public int getMaxAscent()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int maxAscent>;

        return i0;
    }

    public int getMaxDecent()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int maxDescent>;

        return i0;
    }

    public int getMaxDescent()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int maxDescent>;

        return i0;
    }

    public int[] getWidths()
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        int[] r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        r1 = $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] widths>;

        return r1;
    }

    public int stringWidth(java.lang.String)
    {
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        char $c3;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontMetricsImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

        $i1 = 0;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label2;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.FontMetricsImpl: int charWidth(char)>($c3);

        $i0 = $i0 + $i2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.awt.gl.font.FontMetricsImpl: long serialVersionUID> = 844695615201925138L;

        return;
    }
}
