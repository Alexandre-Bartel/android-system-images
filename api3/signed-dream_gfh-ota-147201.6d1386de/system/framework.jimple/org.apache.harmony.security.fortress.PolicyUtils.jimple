public class org.apache.harmony.security.fortress.PolicyUtils extends java.lang.Object
{
    public static final java.lang.String FALSE;
    private static final java.lang.Class[] NO_ARGS;
    private static final java.lang.Class[] ONE_ARGS;
    public static final java.lang.String POLICY_ALLOW_DYNAMIC;
    public static final java.lang.String POLICY_EXPAND;
    public static final java.lang.String TRUE;
    private static final java.lang.Class[] TWO_ARGS;

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String TRUE> = "true";

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String POLICY_EXPAND> = "policy.expandProperties";

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String POLICY_ALLOW_DYNAMIC> = "policy.allowSystemProperty";

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String FALSE> = "false";

        $r0 = newarray (java.lang.Class)[0];

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] NO_ARGS> = $r0;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "java/lang/String";

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] ONE_ARGS> = $r0;

        $r0 = newarray (java.lang.Class)[2];

        $r0[0] = class "java/lang/String";

        $r0[1] = class "java/lang/String";

        <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] TWO_ARGS> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.harmony.security.fortress.PolicyUtils $r0;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean canExpandProperties()
    {
        java.lang.String $r0, $r3;
        org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor $r1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 = "false";

        $r1 = new org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor;

        specialinvoke $r1.<org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor: void <init>(java.lang.String)>("policy.expandProperties");

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String expand(java.lang.String, java.util.Properties) throws org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException
    {
        java.lang.String $r0, $r3, $r4;
        java.util.Properties $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Properties;

        $r3 = "}";

        $r4 = "${";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int indexOf(java.lang.String)>("${");

     label1:
        if $i2 < 0 goto label4;

        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("}", $i2);

        if $i3 < 0 goto label2;

        $i4 = $i2 + $i0;

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int,int)>($i4, $i3);

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r0);

        if $r3 == null goto label3;

        $i3 = $i3 + $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i2, $i3, $r3);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i2 + $i3;

     label2:
        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("${", $i2);

        goto label1;

     label3:
        $r5 = new org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException;

        $r0 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.14F", $r0);

        specialinvoke $r5.<org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException: void <init>(java.lang.String)>($r0);

        throw $r5;

     label4:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String expandGeneral(java.lang.String, org.apache.harmony.security.fortress.PolicyUtils$GeneralExpansionHandler) throws org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException
    {
        org.apache.harmony.security.fortress.PolicyUtils$GeneralExpansionHandler $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: org.apache.harmony.security.fortress.PolicyUtils$GeneralExpansionHandler;

        $r3 = "${{";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r3 = "}}";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke $r1.<java.lang.StringBuilder: int indexOf(java.lang.String)>("${{");

     label1:
        if $i2 < 0 goto label7;

        $i3 = virtualinvoke $r1.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("}}", $i2);

        if $i3 < 0 goto label8;

        $i4 = $i2 + $i0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String substring(int,int)>($i4, $i3);

        $i4 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(58);

        if $i4 < 0 goto label5;

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label2:
        if $i4 < 0 goto label6;

        $i4 = $i4 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i4);

     label3:
        $r2 = interfaceinvoke $r0.<org.apache.harmony.security.fortress.PolicyUtils$GeneralExpansionHandler: java.lang.String resolve(java.lang.String,java.lang.String)>($r2, $r3);

        $i3 = $i3 + $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i2, $i3, $r2);

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = $i3 + $i2;

     label4:
        $i2 = virtualinvoke $r1.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("${{", $i2);

        goto label1;

     label5:
        $r2 = $r3;

        goto label2;

     label6:
        $r3 = null;

        goto label3;

     label7:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label8:
        goto label4;
    }

    public static java.lang.String expandURL(java.lang.String, java.util.Properties) throws org.apache.harmony.security.fortress.PolicyUtils$ExpansionFailedException
    {
        java.lang.String $r0;
        java.util.Properties $r1;
        char $c0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Properties;

        $r0 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expand(java.lang.String,java.util.Properties)>($r0, $r1);

        $c0 = <java.io.File: char separatorChar>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>($c0, 47);

        return $r0;
    }

    public static java.net.URL[] getPolicyURLs(java.util.Properties, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r6, $r11;
        java.net.URL $r2, $r8;
        java.io.File $r3;
        int $i0, $i1;
        org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor $r4;
        java.util.ArrayList $r5;
        java.util.Properties $r7;
        boolean $z0, $z1;
        java.security.PrivilegedAction $r9;
        java.lang.Object $r10;
        org.apache.harmony.security.fortress.PolicyUtils$1 $r12;
        java.lang.StringBuilder $r13;
        java.net.URL[] $r14;
        java.lang.Object[] $r15;
        java.lang.Exception $r16, $r17;

        $r7 := @parameter0: java.util.Properties;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r4 = new org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor;

        specialinvoke $r4.<org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor: void <init>(java.lang.String)>(null);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $z0 = 0;

        $r8 = null;

        $r6 = "false";

        $r9 = virtualinvoke $r4.<org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor: java.security.PrivilegedAction key(java.lang.String)>("policy.allowSystemProperty");

        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);

        $r11 = (java.lang.String) $r10;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z1 != 0 goto label05;

        $r0 = virtualinvoke $r7.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r0);

        $r6 = $r0;

        if $r0 == null goto label05;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("=");

        if $z1 == 0 goto label01;

        $z0 = 1;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

     label01:
        $r0 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expandURL(java.lang.String,java.util.Properties)>($r6, $r7);

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

        $r12 = new org.apache.harmony.security.fortress.PolicyUtils$1;

        specialinvoke $r12.<org.apache.harmony.security.fortress.PolicyUtils$1: void <init>(java.io.File)>($r3);

        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r12);

        $r2 = (java.net.URL) $r10;

     label02:
        $r8 = $r2;

        if $r2 != null goto label05;

     label03:
        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0);

     label04:
        $r8 = $r2;

     label05:
        if $z0 != 0 goto label07;

        $i1 = 1;

     label06:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $i0 = $i1 + 1;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r4.<org.apache.harmony.security.fortress.PolicyUtils$SecurityPropertyAccessor: java.security.PrivilegedAction key(java.lang.String)>($r0);

        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);

        $r0 = (java.lang.String) $r10;

        if $r0 != null goto label09;

     label07:
        if $r8 == null goto label08;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label08:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r14 = newarray (java.net.URL)[$i0];

        $r15 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r14 = (java.net.URL[]) $r15;

        return $r14;

     label09:
        $r0 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.lang.String expandURL(java.lang.String,java.util.Properties)>($r0, $r7);

        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        if $r2 == null goto label10;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

     label10:
        $i1 = $i0;

        goto label06;

     label11:
        $r16 := @caughtexception;

        goto label10;

     label12:
        $r17 := @caughtexception;

        goto label05;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static java.security.Permission instantiatePermission(java.lang.Class, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        java.lang.Class $r2;
        java.lang.Class[][] $r3;
        java.lang.Class[] $r4;
        java.lang.Object[][] $r5;
        java.lang.Object[] $r6;
        int $i0, $i1;
        java.lang.reflect.Constructor $r7;
        java.lang.Object $r8;
        java.security.Permission $r9;
        java.lang.NoSuchMethodException $r10;
        java.lang.IllegalArgumentException $r11;

        $r2 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        if $r1 == null goto label5;

        $r3 = newarray (java.lang.Class[])[3];

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] TWO_ARGS>;

        $r3[0] = $r4;

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] ONE_ARGS>;

        $r3[1] = $r4;

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] NO_ARGS>;

        $r3[2] = $r4;

        $r5 = newarray (java.lang.Object[])[3];

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r0;

        $r6[1] = $r1;

        $r5[0] = $r6;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r0;

        $r5[1] = $r6;

        $r6 = newarray (java.lang.Object)[0];

        $r5[2] = $r6;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label8;

        $r4 = $r3[$i0];

     label3:
        $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r4);

        $r6 = $r5[$i0];

        $r8 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label4:
        $r9 = (java.security.Permission) $r8;

        return $r9;

     label5:
        if $r0 == null goto label6;

        $r3 = newarray (java.lang.Class[])[3];

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] ONE_ARGS>;

        $r3[0] = $r4;

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] TWO_ARGS>;

        $r3[1] = $r4;

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] NO_ARGS>;

        $r3[2] = $r4;

        $r5 = newarray (java.lang.Object[])[3];

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r0;

        $r5[0] = $r6;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r0;

        $r6[1] = $r1;

        $r5[1] = $r6;

        $r6 = newarray (java.lang.Object)[0];

        $r5[2] = $r6;

        goto label1;

     label6:
        $r3 = newarray (java.lang.Class[])[3];

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] NO_ARGS>;

        $r3[0] = $r4;

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] ONE_ARGS>;

        $r3[1] = $r4;

        $r4 = <org.apache.harmony.security.fortress.PolicyUtils: java.lang.Class[] TWO_ARGS>;

        $r3[2] = $r4;

        $r5 = newarray (java.lang.Object[])[3];

        $r6 = newarray (java.lang.Object)[0];

        $r5[0] = $r6;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r0;

        $r5[1] = $r6;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r0;

        $r6[1] = $r1;

        $r5[2] = $r6;

        goto label1;

     label7:
        $r10 := @caughtexception;

        $i0 = $i0 + 1;

        goto label2;

     label8:
        $r11 = new java.lang.IllegalArgumentException;

        $r0 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.150", $r2);

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r11;

        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
    }

    public static boolean matchSubset(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        if $r0 != null goto label1;

        return 1;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label8;

        $r2 = $r0[$i0];

        if $r2 == null goto label7;

        if $r1 != null goto label3;

        return 0;

     label3:
        $z1 = 0;

        $i1 = 0;

     label4:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label5;

        $r3 = $r0[$i0];

        $r2 = $r1[$i1];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        $z1 = 1;

     label5:
        if $z1 != 0 goto label7;

        return 0;

     label6:
        $i1 = $i1 + 1;

        goto label4;

     label7:
        $i0 = $i0 + 1;

        goto label2;

     label8:
        return 1;
    }

    public static java.security.PermissionCollection toPermissionCollection(java.util.Collection)
    {
        java.util.Collection $r0;
        java.security.Permissions $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.Permission $r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 = new java.security.Permissions;

        specialinvoke $r1.<java.security.Permissions: void <init>()>();

        if $r0 == null goto label2;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.security.Permission) $r3;

        virtualinvoke $r1.<java.security.Permissions: void add(java.security.Permission)>($r4);

        goto label1;

     label2:
        return $r1;

     label3:
        return $r1;
    }
}
