public class android.util.TimeUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.util.TimeUtils $r0;

        $r0 := @this: android.util.TimeUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.TimeZone getTimeZone(int, boolean, long, java.lang.String)
    {
        java.lang.String $r0, $r6, $r7;
        java.util.Date $r1;
        int $i0, $i2, $i3;
        boolean $z0, $z1, $z2;
        long $l1;
        java.util.TimeZone $r2, $r5, $r8;
        android.content.res.Resources $r3;
        android.content.res.XmlResourceParser $r4;
        org.xmlpull.v1.XmlPullParserException $r9;
        java.io.IOException $r10;
        java.lang.Throwable $r11, $r12;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $l1 := @parameter2: long;

        $r0 := @parameter3: java.lang.String;

        if $r0 != null goto label01;

        return null;

     label01:
        $r2 = null;

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(17498115);

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l1);

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r6 = virtualinvoke $r5.<java.util.TimeZone: java.lang.String getID()>();

        $i2 = virtualinvoke $r5.<java.util.TimeZone: int getOffset(long)>($l1);

        $z1 = virtualinvoke $r5.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r1);

     label02:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r4, "timezones");

     label03:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>($r4);

        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        if $r7 == null goto label05;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("timezone");

     label04:
        if $z2 != 0 goto label06;

     label05:
        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        return $r2;

     label06:
        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "code");

        $z2 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label03;

        $i3 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: int next()>();

        if $i3 != 4 goto label03;

        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getText()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label07:
        if $z2 == 0 goto label08;

        if $i2 != $i0 goto label08;

        if $z1 != $z0 goto label08;

        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        return $r5;

     label08:
        if $r2 != null goto label03;

     label09:
        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r7);

        $i3 = virtualinvoke $r8.<java.util.TimeZone: int getOffset(long)>($l1);

        if $i3 != $i0 goto label03;

        $z2 = virtualinvoke $r8.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r1);

     label10:
        if $z2 != $z0 goto label03;

        $r2 = $r8;

        goto label03;

     label11:
        $r9 := @caughtexception;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TimeUtils", "Got exception while getting preferred time zone.", $r9);

     label13:
        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        return $r2;

     label14:
        $r10 := @caughtexception;

     label15:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TimeUtils", "Got exception while getting preferred time zone.", $r10);

     label16:
        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        return $r2;

     label17:
        $r11 := @caughtexception;

        $r12 = $r11;

     label18:
        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        throw $r12;

     label19:
        $r12 := @caughtexception;

        goto label18;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label04 with label11;
        catch java.io.IOException from label02 to label04 with label14;
        catch java.lang.Throwable from label02 to label04 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label11;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
    }

    public static java.lang.String getTimeZoneDatabaseVersion()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <org.apache.harmony.luni.internal.util.ZoneInfoDB: java.lang.String getVersion()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <android.util.TimeUtils: java.lang.String TAG> = "TimeUtils";

        return;
    }
}
