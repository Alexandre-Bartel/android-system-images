class com.android.server.am.UriPermission extends java.lang.Object
{
    int globalModeFlags;
    int modeFlags;
    final java.util.HashSet readActivities;
    final int uid;
    final android.net.Uri uri;
    final java.util.HashSet writeActivities;

    void <init>(int, android.net.Uri)
    {
        com.android.server.am.UriPermission $r0;
        int $i0;
        android.net.Uri $r1;
        java.util.HashSet $r2;

        $r0 := @this: com.android.server.am.UriPermission;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.net.Uri;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.am.UriPermission: int modeFlags> = 0;

        $r0.<com.android.server.am.UriPermission: int globalModeFlags> = 0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities> = $r2;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<com.android.server.am.UriPermission: java.util.HashSet writeActivities> = $r2;

        $r0.<com.android.server.am.UriPermission: int uid> = $i0;

        $r0.<com.android.server.am.UriPermission: android.net.Uri uri> = $r1;

        return;
    }

    void clearModes(int)
    {
        com.android.server.am.UriPermission $r0;
        int $i0, $i1;
        java.util.HashSet $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;

        $r0 := @this: com.android.server.am.UriPermission;

        $i0 := @parameter0: int;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label3;

        $i1 = $r0.<com.android.server.am.UriPermission: int globalModeFlags>;

        $i1 = $i1 & -2;

        $r0.<com.android.server.am.UriPermission: int globalModeFlags> = $i1;

        $i0 = $i0 & -2;

        $r1 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        $i1 = virtualinvoke $r1.<java.util.HashSet: int size()>();

        if $i1 <= 0 goto label3;

        $r1 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        $r2 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r1 = $r4.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r0);

        $r1 = $r4.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        $i1 = virtualinvoke $r1.<java.util.HashSet: int size()>();

        if $i1 != 0 goto label1;

        $r4.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions> = null;

        goto label1;

     label2:
        $r1 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        virtualinvoke $r1.<java.util.HashSet: void clear()>();

     label3:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label6;

        $i0 = $r0.<com.android.server.am.UriPermission: int globalModeFlags>;

        $i0 = $i0 & -3;

        $r0.<com.android.server.am.UriPermission: int globalModeFlags> = $i0;

        $r1 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        $i0 = virtualinvoke $r1.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label7;

        $r1 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        $r2 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r1 = $r4.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r0);

        $r1 = $r4.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        $i0 = virtualinvoke $r1.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label4;

        $r4.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions> = null;

        goto label4;

     label5:
        $r1 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        virtualinvoke $r1.<java.util.HashSet: void clear()>();

        return;

     label6:
        return;

     label7:
        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.UriPermission $r0;
        java.io.PrintWriter $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0;
        java.util.HashSet $r5;

        $r0 := @this: com.android.server.am.UriPermission;

        $r1 := @parameter0: java.io.PrintWriter;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  modeFlags=0x");

        $i0 = $r0.<com.android.server.am.UriPermission: int modeFlags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i0 = $r0.<com.android.server.am.UriPermission: int uid>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" globalModeFlags=0x");

        $i0 = $r0.<com.android.server.am.UriPermission: int globalModeFlags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  readActivities=");

        $r5 = $r0.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  writeActivities=");

        $r5 = $r0.<com.android.server.am.UriPermission: java.util.HashSet writeActivities>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.am.UriPermission $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        android.net.Uri $r3;

        $r0 := @this: com.android.server.am.UriPermission;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UriPermission{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = $r0.<com.android.server.am.UriPermission: android.net.Uri uri>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
