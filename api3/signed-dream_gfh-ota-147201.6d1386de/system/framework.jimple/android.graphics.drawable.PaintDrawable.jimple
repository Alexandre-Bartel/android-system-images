public class android.graphics.drawable.PaintDrawable extends android.graphics.drawable.ShapeDrawable
{

    public void <init>()
    {
        android.graphics.drawable.PaintDrawable $r0;

        $r0 := @this: android.graphics.drawable.PaintDrawable;

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        android.graphics.drawable.PaintDrawable $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: android.graphics.drawable.PaintDrawable;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void <init>()>();

        $r1 = virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }

    protected boolean inflateTag(java.lang.String, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)
    {
        android.graphics.drawable.PaintDrawable $r0;
        java.lang.String $r1;
        android.content.res.Resources $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.util.AttributeSet $r4;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0;
        float[] $r7;

        $r0 := @this: android.graphics.drawable.PaintDrawable;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.res.Resources;

        $r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter3: android.util.AttributeSet;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("corners");

        if $z0 == 0 goto label3;

        $r5 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        $r6 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r4, $r5);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        $f0 = (float) $i0;

        virtualinvoke $r0.<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>($f0);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, $i0);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, $i0);

        $i4 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, $i0);

        if $i1 != $i0 goto label1;

        if $i2 != $i0 goto label1;

        if $i3 != $i0 goto label1;

        if $i4 == $i0 goto label2;

     label1:
        $r7 = newarray (float)[8];

        $f0 = (float) $i1;

        $r7[0] = $f0;

        $f0 = (float) $i1;

        $r7[1] = $f0;

        $f0 = (float) $i2;

        $r7[2] = $f0;

        $f0 = (float) $i2;

        $r7[3] = $f0;

        $f0 = (float) $i3;

        $r7[4] = $f0;

        $f0 = (float) $i3;

        $r7[5] = $f0;

        $f0 = (float) $i4;

        $r7[6] = $f0;

        $f0 = (float) $i4;

        $r7[7] = $f0;

        virtualinvoke $r0.<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>($r7);

     label2:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return 1;

     label3:
        $z0 = specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3, $r4);

        return $z0;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.PaintDrawable $r0;
        float[] $r1;
        android.graphics.drawable.shapes.Shape $r2;
        android.graphics.drawable.shapes.RoundRectShape $r3;

        $r0 := @this: android.graphics.drawable.PaintDrawable;

        $r1 := @parameter0: float[];

        if $r1 != null goto label1;

        $r2 = virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>();

        if $r2 == null goto label2;

        virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>(null);

        return;

     label1:
        $r3 = new android.graphics.drawable.shapes.RoundRectShape;

        specialinvoke $r3.<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>($r1, null, null);

        virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>($r3);

        return;

     label2:
        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.PaintDrawable $r0;
        float $f0;
        float[] $r1;
        byte $b0;
        int $i1;

        $r0 := @this: android.graphics.drawable.PaintDrawable;

        $f0 := @parameter0: float;

        $r1 = null;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $r1 = newarray (float)[8];

        $i1 = 0;

     label1:
        if $i1 >= 8 goto label2;

        $r1[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>($r1);

        return;
    }
}
