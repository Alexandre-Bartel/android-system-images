public class android.app.ActivityManager extends java.lang.Object
{
    private static boolean DEBUG;
    public static final int RECENT_WITH_EXCLUDED;
    private static java.lang.String TAG;
    private static boolean localLOGV;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;

    static void <clinit>()
    {
        boolean $z0;

        <android.app.ActivityManager: int RECENT_WITH_EXCLUDED> = 1;

        <android.app.ActivityManager: java.lang.String TAG> = "ActivityManager";

        <android.app.ActivityManager: boolean DEBUG> = 0;

        $z0 = <android.app.ActivityManager: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z0 = 0;

     label1:
        <android.app.ActivityManager: boolean localLOGV> = $z0;

        return;

     label2:
        $z0 = 1;

        goto label1;

        return;
    }

    void <init>(android.content.Context, android.os.Handler)
    {
        android.app.ActivityManager $r0;
        android.content.Context $r1;
        android.os.Handler $r2;

        $r0 := @this: android.app.ActivityManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.Handler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.app.ActivityManager: android.content.Context mContext> = $r1;

        $r0.<android.app.ActivityManager: android.os.Handler mHandler> = $r2;

        return;
    }

    public boolean clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ActivityManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDataObserver $r2;
        android.app.IActivityManager $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ActivityManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $z0 = interfaceinvoke $r3.<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>($r1, $r2);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()
    {
        android.app.ActivityManager $r0;
        android.app.IActivityManager $r1;
        android.content.pm.ConfigurationInfo $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r2 = interfaceinvoke $r1.<android.app.IActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getMemoryInfo(android.app.ActivityManager$MemoryInfo)
    {
        android.app.ActivityManager $r0;
        android.app.ActivityManager$MemoryInfo $r1;
        android.app.IActivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

        $r1 := @parameter0: android.app.ActivityManager$MemoryInfo;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r2.<android.app.IActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getProcessesInErrorState()
    {
        android.app.ActivityManager $r0;
        android.app.IActivityManager $r1;
        java.util.List $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r2 = interfaceinvoke $r1.<android.app.IActivityManager: java.util.List getProcessesInErrorState()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getRecentTasks(int, int) throws java.lang.SecurityException
    {
        android.app.ActivityManager $r0;
        int $i0, $i1;
        android.app.IActivityManager $r1;
        java.util.List $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r2 = interfaceinvoke $r1.<android.app.IActivityManager: java.util.List getRecentTasks(int,int)>($i0, $i1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getRunningAppProcesses()
    {
        android.app.ActivityManager $r0;
        android.app.IActivityManager $r1;
        java.util.List $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r2 = interfaceinvoke $r1.<android.app.IActivityManager: java.util.List getRunningAppProcesses()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getRunningServices(int) throws java.lang.SecurityException
    {
        android.app.ActivityManager $r0;
        int $i0;
        android.app.IActivityManager $r1;
        java.util.List $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

        $i0 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r2 = interfaceinvoke $r1.<android.app.IActivityManager: java.util.List getServices(int,int)>($i0, 0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getRunningTasks(int) throws java.lang.SecurityException
    {
        android.app.ActivityManager $r0;
        int $i0;
        android.app.IActivityManager $r1;
        java.util.List $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

        $i0 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r2 = interfaceinvoke $r1.<android.app.IActivityManager: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>($i0, 0, null);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void restartPackage(java.lang.String)
    {
        android.app.ActivityManager $r0;
        java.lang.String $r1;
        android.app.IActivityManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ActivityManager;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r2.<android.app.IActivityManager: void restartPackage(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
