final class org.apache.http.impl.cookie.DateUtils$DateFormatHolder extends java.lang.Object
{
    private static final java.lang.ThreadLocal THREADLOCAL_FORMATS;

    static void <clinit>()
    {
        org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 $r0;

        $r0 = new org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1;

        specialinvoke $r0.<org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1: void <init>()>();

        <org.apache.http.impl.cookie.DateUtils$DateFormatHolder: java.lang.ThreadLocal THREADLOCAL_FORMATS> = $r0;

        return;
    }

    void <init>()
    {
        org.apache.http.impl.cookie.DateUtils$DateFormatHolder $r0;

        $r0 := @this: org.apache.http.impl.cookie.DateUtils$DateFormatHolder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.text.SimpleDateFormat formatFor(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ref.SoftReference $r1, r9;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.text.SimpleDateFormat $r5, r10;
        java.util.Locale $r6;
        java.util.TimeZone $r7;
        java.util.HashMap r8;

        $r0 := @parameter0: java.lang.String;

        $r2 = <org.apache.http.impl.cookie.DateUtils$DateFormatHolder: java.lang.ThreadLocal THREADLOCAL_FORMATS>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r1 = (java.lang.ref.SoftReference) $r3;

        $r3 = virtualinvoke $r1.<java.lang.ref.Reference: java.lang.Object get()>();

        $r4 = (java.util.Map) $r3;

        if $r4 != null goto label1;

        r8 = new java.util.HashMap;

        $r4 = r8;

        specialinvoke r8.<java.util.HashMap: void <init>()>();

        $r2 = <org.apache.http.impl.cookie.DateUtils$DateFormatHolder: java.lang.ThreadLocal THREADLOCAL_FORMATS>;

        r9 = new java.lang.ref.SoftReference;

        specialinvoke r9.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(r9);

     label1:
        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r5 = (java.text.SimpleDateFormat) $r3;

        if $r5 != null goto label2;

        r10 = new java.text.SimpleDateFormat;

        $r5 = r10;

        $r6 = <java.util.Locale: java.util.Locale US>;

        specialinvoke r10.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r0, $r6);

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r7);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r5);

        return $r5;

     label2:
        return $r5;
    }
}
