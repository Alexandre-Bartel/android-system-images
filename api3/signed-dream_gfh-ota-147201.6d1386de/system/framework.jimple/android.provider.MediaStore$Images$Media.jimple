public final class android.provider.MediaStore$Images$Media extends java.lang.Object implements android.provider.MediaStore$Images$ImageColumns
{
    public static final java.lang.String CONTENT_TYPE;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final android.net.Uri EXTERNAL_CONTENT_URI;
    public static final android.net.Uri INTERNAL_CONTENT_URI;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <android.provider.MediaStore$Images$Media: java.lang.String DEFAULT_SORT_ORDER> = "bucket_display_name";

        <android.provider.MediaStore$Images$Media: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/image";

        $r0 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>("internal");

        <android.provider.MediaStore$Images$Media: android.net.Uri INTERNAL_CONTENT_URI> = $r0;

        $r0 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>("external");

        <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI> = $r0;

        return;
    }

    public void <init>()
    {
        android.provider.MediaStore$Images$Media $r0;

        $r0 := @this: android.provider.MediaStore$Images$Media;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final android.graphics.Bitmap StoreThumbnail(android.content.ContentResolver, android.graphics.Bitmap, long, float, float, int)
    {
        android.graphics.Matrix $r0;
        android.content.ContentResolver $r1;
        android.graphics.Bitmap $r2;
        long $l0;
        float $f0, $f1, $f2;
        int $i1, $i2, $i3;
        android.content.ContentValues $r3;
        java.lang.Integer $r4;
        android.net.Uri $r5;
        java.io.OutputStream $r6;
        android.graphics.Bitmap$CompressFormat $r7;
        java.io.FileNotFoundException $r8;
        java.io.IOException $r9;

        $r1 := @parameter0: android.content.ContentResolver;

        $r2 := @parameter1: android.graphics.Bitmap;

        $l0 := @parameter2: long;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $i1 := @parameter5: int;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<android.graphics.Matrix: void <init>()>();

        $i2 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i2;

        $f0 = $f0 / $f2;

        $i2 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i2;

        $f1 = $f1 / $f2;

        virtualinvoke $r0.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

        $i2 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r2, 0, 0, $i2, $i3, $r0, 1);

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>(int)>(4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("kind", $r4);

        $i1 = (int) $l0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("image_id", $r4);

        $i1 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("height", $r4);

        $i1 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("width", $r4);

        $r5 = <android.provider.MediaStore$Images$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r5 = virtualinvoke $r1.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, $r3);

     label1:
        $r6 = virtualinvoke $r1.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>($r5);

        $r7 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r7, 100, $r6);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label2:
        return $r2;

     label3:
        $r8 := @caughtexception;

        return null;

     label4:
        $r9 := @caughtexception;

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static final android.graphics.Bitmap getBitmap(android.content.ContentResolver, android.net.Uri) throws java.io.FileNotFoundException, java.io.IOException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.io.InputStream $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke $r0.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r1);

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return $r3;
    }

    public static android.net.Uri getContentUri(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        android.net.Uri $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://media/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/images/media");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r0);

        return $r2;
    }

    public static final java.lang.String insertImage(android.content.ContentResolver, android.graphics.Bitmap, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver $r0;
        android.graphics.Bitmap $r1;
        java.lang.String $r2, $r3;
        android.content.ContentValues $r4;
        android.net.Uri $r5, $r6;
        java.io.OutputStream $r7;
        android.graphics.Bitmap$CompressFormat $r8;
        long $l0;
        java.lang.Throwable $r9;
        java.lang.Exception $r10;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r2);

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r3);

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", "image/jpeg");

        $r5 = null;

        $r6 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

     label01:
        $r5 = virtualinvoke $r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r6, $r4);

     label02:
        if $r1 == null goto label11;

     label03:
        $r7 = virtualinvoke $r0.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>($r5);

     label04:
        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, 50, $r7);

     label05:
        virtualinvoke $r7.<java.io.OutputStream: void close()>();

        $l0 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r5);

        $r1 = staticinvoke <android.provider.MediaStore$Images$Media: android.graphics.Bitmap StoreThumbnail(android.content.ContentResolver,android.graphics.Bitmap,long,float,float,int)>($r0, $r1, $l0, 320.0F, 240.0F, 1);

        staticinvoke <android.provider.MediaStore$Images$Media: android.graphics.Bitmap StoreThumbnail(android.content.ContentResolver,android.graphics.Bitmap,long,float,float,int)>($r0, $r1, $l0, 50.0F, 50.0F, 3);

     label06:
        if $r5 == null goto label14;

        $r2 = virtualinvoke $r5.<android.net.Uri: java.lang.String toString()>();

        return $r2;

     label07:
        $r9 := @caughtexception;

     label08:
        virtualinvoke $r7.<java.io.OutputStream: void close()>();

        throw $r9;

     label09:
        $r10 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaStore", "Failed to insert image", $r10);

        if $r5 == null goto label15;

        virtualinvoke $r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r5, null, null);

        $r5 = null;

        goto label06;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaStore", "Failed to create thumbnail, removing original");

        virtualinvoke $r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r5, null, null);

     label12:
        $r5 = null;

        goto label06;

     label13:
        $r10 := @caughtexception;

        goto label10;

     label14:
        return null;

     label15:
        goto label06;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label08 to label09 with label09;
        catch java.lang.Exception from label11 to label12 with label09;
    }

    public static final java.lang.String insertImage(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2, $r3;
        java.io.FileInputStream $r4;
        android.graphics.Bitmap $r5;
        java.lang.Throwable $r6;
        java.io.IOException $r7, $r8;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

     label1:
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r1);

        $r1 = staticinvoke <android.provider.MediaStore$Images$Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>($r0, $r5, $r2, $r3);

     label2:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

     label3:
        return $r1;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

     label6:
        throw $r6;

     label7:
        $r7 := @caughtexception;

        return $r1;

     label8:
        $r8 := @caughtexception;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label5 to label6 with label8;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[])
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        android.database.Cursor $r3;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String[];

        $r3 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, "bucket_display_name");

        return $r3;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        java.lang.String $r3, $r4;
        android.database.Cursor $r5;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String[];

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        if $r4 != null goto label2;

        $r4 = "bucket_display_name";

     label1:
        $r5 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, null, $r4);

        return $r5;

     label2:
        goto label1;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        android.database.Cursor $r6;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String[];

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String[];

        $r5 := @parameter5: java.lang.String;

        if $r5 != null goto label2;

        $r5 = "bucket_display_name";

     label1:
        $r6 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        return $r6;

     label2:
        goto label1;
    }
}
