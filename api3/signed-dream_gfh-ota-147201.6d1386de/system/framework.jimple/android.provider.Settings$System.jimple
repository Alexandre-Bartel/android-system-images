public final class android.provider.Settings$System extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ACCELEROMETER_ROTATION;
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String AIRPLANE_MODE_ON;
    public static final java.lang.String AIRPLANE_MODE_RADIOS;
    public static final java.lang.String ALWAYS_FINISH_ACTIVITIES;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String APPEND_FOR_LAST_AUDIBLE;
    public static final java.lang.String AUTO_TIME;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT;
    public static final java.lang.String BLUETOOTH_ON;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DATE_FORMAT;
    public static final java.lang.String DEBUG_APP;
    public static final android.net.Uri DEFAULT_NOTIFICATION_URI;
    public static final android.net.Uri DEFAULT_RINGTONE_URI;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String DIM_SCREEN;
    public static final java.lang.String DTMF_TONE_WHEN_DIALING;
    public static final java.lang.String END_BUTTON_BEHAVIOR;
    public static final java.lang.String FANCY_IME_ANIMATIONS;
    public static final java.lang.String FONT_SCALE;
    public static final java.lang.String HAPTIC_FEEDBACK_ENABLED;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOCK_PATTERN_ENABLED;
    public static final java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED;
    public static final java.lang.String LOCK_PATTERN_VISIBLE;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String MODE_RINGER;
    public static final java.lang.String MODE_RINGER_STREAMS_AFFECTED;
    private static final java.util.HashSet MOVED_TO_SECURE;
    public static final java.lang.String MUTE_STREAMS_AFFECTED;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String NEXT_ALARM_FORMATTED;
    public static final java.lang.String NOTIFICATIONS_USE_RING_VOLUME;
    public static final java.lang.String NOTIFICATION_SOUND;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String RADIO_BLUETOOTH;
    public static final java.lang.String RADIO_CELL;
    public static final java.lang.String RADIO_WIFI;
    public static final java.lang.String RINGTONE;
    public static final java.lang.String SCREEN_BRIGHTNESS;
    public static final java.lang.String SCREEN_OFF_TIMEOUT;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String SETUP_WIZARD_HAS_RUN;
    public static final java.lang.String SHOW_GTALK_SERVICE_STATUS;
    public static final java.lang.String SHOW_PROCESSES;
    public static final java.lang.String SOUND_EFFECTS_ENABLED;
    public static final java.lang.String STAY_ON_WHILE_PLUGGED_IN;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String TEXT_AUTO_CAPS;
    public static final java.lang.String TEXT_AUTO_PUNCTUATE;
    public static final java.lang.String TEXT_AUTO_REPLACE;
    public static final java.lang.String TEXT_SHOW_PASSWORD;
    public static final java.lang.String TIME_12_24;
    public static final java.lang.String TRANSITION_ANIMATION_SCALE;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String VIBRATE_ON;
    public static final java.lang.String VOLUME_ALARM;
    public static final java.lang.String VOLUME_MUSIC;
    public static final java.lang.String VOLUME_NOTIFICATION;
    public static final java.lang.String VOLUME_RING;
    public static final java.lang.String[] VOLUME_SETTINGS;
    public static final java.lang.String VOLUME_SYSTEM;
    public static final java.lang.String VOLUME_VOICE;
    public static final java.lang.String WAIT_FOR_DEBUGGER;
    public static final java.lang.String WALLPAPER_ACTIVITY;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_ALLOWED_CHANNELS;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_SLEEP_POLICY;
    public static final int WIFI_SLEEP_POLICY_DEFAULT;
    public static final int WIFI_SLEEP_POLICY_NEVER;
    public static final int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED;
    public static final java.lang.String WIFI_STATIC_DNS1;
    public static final java.lang.String WIFI_STATIC_DNS2;
    public static final java.lang.String WIFI_STATIC_GATEWAY;
    public static final java.lang.String WIFI_STATIC_IP;
    public static final java.lang.String WIFI_STATIC_NETMASK;
    public static final java.lang.String WIFI_USE_STATIC_IP;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WINDOW_ANIMATION_SCALE;
    private static volatile android.provider.Settings$NameValueCache mNameValueCache;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;

        <android.provider.Settings$System: java.lang.String WINDOW_ANIMATION_SCALE> = "window_animation_scale";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS> = "wifi_watchdog_ping_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_DELAY_MS> = "wifi_watchdog_ping_delay_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_COUNT> = "wifi_watchdog_ping_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_ON> = "wifi_watchdog_on";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS> = "wifi_watchdog_max_ap_checks";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT> = "wifi_watchdog_initial_ignored_ping_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS> = "wifi_watchdog_background_check_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED> = "wifi_watchdog_background_check_enabled";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS> = "wifi_watchdog_background_check_delay_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_AP_COUNT> = "wifi_watchdog_ap_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE> = "wifi_watchdog_acceptable_packet_loss_percentage";

        <android.provider.Settings$System: java.lang.String WIFI_USE_STATIC_IP> = "wifi_use_static_ip";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_NETMASK> = "wifi_static_netmask";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_IP> = "wifi_static_ip";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_GATEWAY> = "wifi_static_gateway";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_DNS2> = "wifi_static_dns2";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_DNS1> = "wifi_static_dns1";

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED> = 1;

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_NEVER> = 2;

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_DEFAULT> = 0;

        <android.provider.Settings$System: java.lang.String WIFI_SLEEP_POLICY> = "wifi_sleep_policy";

        <android.provider.Settings$System: java.lang.String WIFI_ON> = "wifi_on";

        <android.provider.Settings$System: java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT> = "wifi_num_open_networks_kept";

        <android.provider.Settings$System: java.lang.String WIFI_NUM_ALLOWED_CHANNELS> = "wifi_num_allowed_channels";

        <android.provider.Settings$System: java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY> = "wifi_networks_available_repeat_delay";

        <android.provider.Settings$System: java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wifi_networks_available_notification_on";

        <android.provider.Settings$System: java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS> = "wifi_mobile_data_transition_wakelock_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_MAX_DHCP_RETRY_COUNT> = "wifi_max_dhcp_retry_count";

        <android.provider.Settings$System: java.lang.String WALLPAPER_ACTIVITY> = "wallpaper_activity";

        <android.provider.Settings$System: java.lang.String WAIT_FOR_DEBUGGER> = "wait_for_debugger";

        <android.provider.Settings$System: java.lang.String VOLUME_VOICE> = "volume_voice";

        <android.provider.Settings$System: java.lang.String VOLUME_SYSTEM> = "volume_system";

        <android.provider.Settings$System: java.lang.String VOLUME_RING> = "volume_ring";

        <android.provider.Settings$System: java.lang.String VOLUME_NOTIFICATION> = "volume_notification";

        <android.provider.Settings$System: java.lang.String VOLUME_MUSIC> = "volume_music";

        <android.provider.Settings$System: java.lang.String VOLUME_ALARM> = "volume_alarm";

        <android.provider.Settings$System: java.lang.String VIBRATE_ON> = "vibrate_on";

        <android.provider.Settings$System: java.lang.String USE_GOOGLE_MAIL> = "use_google_mail";

        <android.provider.Settings$System: java.lang.String USB_MASS_STORAGE_ENABLED> = "usb_mass_storage_enabled";

        <android.provider.Settings$System: java.lang.String TRANSITION_ANIMATION_SCALE> = "transition_animation_scale";

        <android.provider.Settings$System: java.lang.String TIME_12_24> = "time_12_24";

        <android.provider.Settings$System: java.lang.String TEXT_SHOW_PASSWORD> = "show_password";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_REPLACE> = "auto_replace";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_PUNCTUATE> = "auto_punctuate";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_CAPS> = "auto_caps";

        <android.provider.Settings$System: java.lang.String SYS_PROP_SETTING_VERSION> = "sys.settings_system_version";

        <android.provider.Settings$System: java.lang.String STAY_ON_WHILE_PLUGGED_IN> = "stay_on_while_plugged_in";

        <android.provider.Settings$System: java.lang.String SOUND_EFFECTS_ENABLED> = "sound_effects_enabled";

        <android.provider.Settings$System: java.lang.String SHOW_PROCESSES> = "show_processes";

        <android.provider.Settings$System: java.lang.String SHOW_GTALK_SERVICE_STATUS> = "SHOW_GTALK_SERVICE_STATUS";

        <android.provider.Settings$System: java.lang.String SETUP_WIZARD_HAS_RUN> = "setup_wizard_has_run";

        <android.provider.Settings$System: java.lang.String SETTINGS_CLASSNAME> = "settings_classname";

        <android.provider.Settings$System: java.lang.String SCREEN_OFF_TIMEOUT> = "screen_off_timeout";

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS> = "screen_brightness";

        <android.provider.Settings$System: java.lang.String RINGTONE> = "ringtone";

        <android.provider.Settings$System: java.lang.String RADIO_WIFI> = "wifi";

        <android.provider.Settings$System: java.lang.String RADIO_CELL> = "cell";

        <android.provider.Settings$System: java.lang.String RADIO_BLUETOOTH> = "bluetooth";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_REDIRECT_URL> = "parental_control_redirect_url";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_LAST_UPDATE> = "parental_control_last_update";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_ENABLED> = "parental_control_enabled";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_SOUND> = "notification_sound";

        <android.provider.Settings$System: java.lang.String NOTIFICATIONS_USE_RING_VOLUME> = "notifications_use_ring_volume";

        <android.provider.Settings$System: java.lang.String NEXT_ALARM_FORMATTED> = "next_alarm_formatted";

        <android.provider.Settings$System: java.lang.String NETWORK_PREFERENCE> = "network_preference";

        <android.provider.Settings$System: java.lang.String MUTE_STREAMS_AFFECTED> = "mute_streams_affected";

        <android.provider.Settings$System: java.lang.String MODE_RINGER_STREAMS_AFFECTED> = "mode_ringer_streams_affected";

        <android.provider.Settings$System: java.lang.String MODE_RINGER> = "mode_ringer";

        <android.provider.Settings$System: java.lang.String LOGGING_ID> = "logging_id";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_VISIBLE> = "lock_pattern_visible_pattern";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED> = "lock_pattern_tactile_feedback_enabled";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_ENABLED> = "lock_pattern_autolock";

        <android.provider.Settings$System: java.lang.String LOCATION_PROVIDERS_ALLOWED> = "location_providers_allowed";

        <android.provider.Settings$System: java.lang.String INSTALL_NON_MARKET_APPS> = "install_non_market_apps";

        <android.provider.Settings$System: java.lang.String HTTP_PROXY> = "http_proxy";

        <android.provider.Settings$System: java.lang.String HAPTIC_FEEDBACK_ENABLED> = "haptic_feedback_enabled";

        <android.provider.Settings$System: java.lang.String FONT_SCALE> = "font_scale";

        <android.provider.Settings$System: java.lang.String FANCY_IME_ANIMATIONS> = "fancy_ime_animations";

        <android.provider.Settings$System: java.lang.String END_BUTTON_BEHAVIOR> = "end_button_behavior";

        <android.provider.Settings$System: java.lang.String DTMF_TONE_WHEN_DIALING> = "dtmf_tone";

        <android.provider.Settings$System: java.lang.String DIM_SCREEN> = "dim_screen";

        <android.provider.Settings$System: java.lang.String DEVICE_PROVISIONED> = "device_provisioned";

        <android.provider.Settings$System: java.lang.String DEBUG_APP> = "debug_app";

        <android.provider.Settings$System: java.lang.String DATE_FORMAT> = "date_format";

        <android.provider.Settings$System: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_ON> = "bluetooth_on";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT> = "bluetooth_discoverability_timeout";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_DISCOVERABILITY> = "bluetooth_discoverability";

        <android.provider.Settings$System: java.lang.String AUTO_TIME> = "auto_time";

        <android.provider.Settings$System: java.lang.String APPEND_FOR_LAST_AUDIBLE> = "_last_audible";

        <android.provider.Settings$System: java.lang.String ANDROID_ID> = "android_id";

        <android.provider.Settings$System: java.lang.String ALWAYS_FINISH_ACTIVITIES> = "always_finish_activities";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_RADIOS> = "airplane_mode_radios";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_ON> = "airplane_mode_on";

        <android.provider.Settings$System: java.lang.String ADB_ENABLED> = "adb_enabled";

        <android.provider.Settings$System: java.lang.String ACCELEROMETER_ROTATION> = "accelerometer_rotation";

        <android.provider.Settings$System: android.provider.Settings$NameValueCache mNameValueCache> = null;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>(int)>(30);

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE> = $r0;

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("adb_enabled");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("android_id");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("bluetooth_on");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("data_roaming");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("device_provisioned");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("http_proxy");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("install_non_market_apps");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("location_providers_allowed");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("logging_id");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_enabled");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_last_update");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_redirect_url");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("settings_classname");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("usb_mass_storage_enabled");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("use_google_mail");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_notification_on");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_repeat_delay");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_num_open_networks_kept");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_on");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_acceptable_packet_loss_percentage");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ap_count");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_delay_ms");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_enabled");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_timeout_ms");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_initial_ignored_ping_count");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_max_ap_checks");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_on");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_count");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_delay_ms");

        $r0 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_timeout_ms");

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/system");

        <android.provider.Settings$System: android.net.Uri CONTENT_URI> = $r1;

        $r2 = newarray (java.lang.String)[6];

        $r2[0] = "volume_voice";

        $r2[1] = "volume_system";

        $r2[2] = "volume_ring";

        $r2[3] = "volume_music";

        $r2[4] = "volume_alarm";

        $r2[5] = "volume_notification";

        <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS> = $r2;

        $r1 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("ringtone");

        <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI> = $r1;

        $r1 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("notification_sound");

        <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI> = $r1;

        return;
    }

    public void <init>()
    {
        android.provider.Settings$System $r0;

        $r0 := @this: android.provider.Settings$System;

        specialinvoke $r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static void getConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver $r0;
        android.content.res.Configuration $r1;
        float $f0;
        byte $b0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.content.res.Configuration;

        $f0 = $r1.<android.content.res.Configuration: float fontScale>;

        $f0 = staticinvoke <android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r0, "font_scale", $f0);

        $r1.<android.content.res.Configuration: float fontScale> = $f0;

        $f0 = $r1.<android.content.res.Configuration: float fontScale>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r1.<android.content.res.Configuration: float fontScale> = 1.0F;

        return;

     label1:
        return;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r3;
        java.lang.NumberFormatException $r2;
        float $f0;
        android.provider.Settings$SettingNotFoundException $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

     label2:
        return $f0;

     label3:
        $r2 := @caughtexception;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        float $f0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

        $r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

     label2:
        return $f0;

     label3:
        return $f0;

     label4:
        $r2 := @caughtexception;

        return $f0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r3;
        java.lang.NumberFormatException $r2;
        int $i0;
        android.provider.Settings$SettingNotFoundException $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        return $i0;

     label4:
        $r2 := @caughtexception;

        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r3;
        java.lang.NumberFormatException $r2;
        long $l0;
        android.provider.Settings$SettingNotFoundException $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        long $l0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l0;

     label3:
        return $l0;

     label4:
        $r2 := @caughtexception;

        return $l0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static boolean getShowGTalkServiceStatus(android.content.ContentResolver)
    {
        android.content.ContentResolver $r0;
        int $i0;

        $r0 := @parameter0: android.content.ContentResolver;

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r0, "SHOW_GTALK_SERVICE_STATUS", 0);

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r4;
        java.util.HashSet $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        android.provider.Settings$NameValueCache $r5;
        android.net.Uri $r6;
        java.lang.Throwable $r7;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "android/provider/Settings$System";

     label1:
        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Secure, returning read-only value.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r4);

        $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label2:
        exitmonitor class "android/provider/Settings$System";

        return $r1;

     label3:
        $r5 = <android.provider.Settings$System: android.provider.Settings$NameValueCache mNameValueCache>;

        if $r5 != null goto label4;

        $r5 = new android.provider.Settings$NameValueCache;

        $r6 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        specialinvoke $r5.<android.provider.Settings$NameValueCache: void <init>(java.lang.String,android.net.Uri)>("sys.settings_system_version", $r6);

        <android.provider.Settings$System: android.provider.Settings$NameValueCache mNameValueCache> = $r5;

     label4:
        $r5 = <android.provider.Settings$System: android.provider.Settings$NameValueCache mNameValueCache>;

        $r1 = virtualinvoke $r5.<android.provider.Settings$NameValueCache: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        exitmonitor class "android/provider/Settings$System";

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.util.HashSet $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        android.net.Uri $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Secure, returning Secure URI.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r3);

        $r4 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r4, $r0);

        return $r4;

     label1:
        $r4 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        $r4 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r4, $r0);

        return $r4;
    }

    public static boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver $r0;
        android.content.res.Configuration $r1;
        float $f0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.content.res.Configuration;

        $f0 = $r1.<android.content.res.Configuration: float fontScale>;

        $z0 = staticinvoke <android.provider.Settings$System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r0, "font_scale", $f0);

        return $z0;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        float $f0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        java.util.HashSet $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        android.net.Uri $r5;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Secure, value is unchanged.");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r1);

        return 0;

     label1:
        $r5 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        $z0 = staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r5, $r1, $r2);

        return $z0;
    }

    public static void setShowGTalkServiceStatus(android.content.ContentResolver, boolean)
    {
        android.content.ContentResolver $r0;
        boolean $z0;
        byte $b0;

        $r0 := @parameter0: android.content.ContentResolver;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r0, "SHOW_GTALK_SERVICE_STATUS", $b0);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }
}
