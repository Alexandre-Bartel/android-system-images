public class org.apache.http.message.HeaderGroup extends java.lang.Object implements java.lang.Cloneable
{
    private java.util.List headers;

    public void <init>()
    {
        org.apache.http.message.HeaderGroup $r0;
        java.util.ArrayList $r1;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(16);

        $r0.<org.apache.http.message.HeaderGroup: java.util.List headers> = $r1;

        return;
    }

    public void addHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup $r0;
        org.apache.http.Header $r1;
        java.util.List $r2;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: org.apache.http.Header;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void clear()
    {
        org.apache.http.message.HeaderGroup $r0;
        java.util.List $r1;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.message.HeaderGroup $r0, $r4;
        java.util.ArrayList $r1;
        java.util.List $r2;
        java.lang.Object $r3;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r3 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (org.apache.http.message.HeaderGroup) $r3;

        $r1 = new java.util.ArrayList;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r4.<org.apache.http.message.HeaderGroup: java.util.List headers> = $r1;

        return $r4;
    }

    public boolean containsHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup $r0;
        java.lang.String $r1, $r5;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.http.Header $r4;
        boolean $z0;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public org.apache.http.message.HeaderGroup copy()
    {
        org.apache.http.message.HeaderGroup $r0, $r1;
        java.util.List $r2, $r3;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = new org.apache.http.message.HeaderGroup;

        specialinvoke $r1.<org.apache.http.message.HeaderGroup: void <init>()>();

        $r2 = $r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        return $r1;
    }

    public org.apache.http.Header[] getAllHeaders()
    {
        java.util.List $r0, $r2;
        org.apache.http.message.HeaderGroup $r1;
        int $i0;
        org.apache.http.Header[] $r3;
        java.lang.Object[] $r4;

        $r1 := @this: org.apache.http.message.HeaderGroup;

        $r0 = $r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r2 = $r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (org.apache.http.Header)[$i0];

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (org.apache.http.Header[]) $r4;

        $r3 = (org.apache.http.Header[]) $r3;

        return $r3;
    }

    public org.apache.http.Header getCondensedHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup $r0;
        java.lang.String $r1, $r5;
        org.apache.http.util.CharArrayBuffer $r2, r7;
        org.apache.http.Header[] $r3;
        int $i0, $i1;
        org.apache.http.Header $r4;
        java.util.Locale $r6;
        org.apache.http.message.BasicHeader r8;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke $r0.<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>($r1);

        $i0 = lengthof $r3;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i0 = lengthof $r3;

        if $i0 != 1 goto label2;

        $r4 = $r3[0];

        return $r4;

     label2:
        r7 = new org.apache.http.util.CharArrayBuffer;

        $r2 = r7;

        specialinvoke r7.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        $r4 = $r3[0];

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        $i0 = 1;

     label3:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label4;

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(", ");

        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        r8 = new org.apache.http.message.BasicHeader;

        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r5 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        specialinvoke r8.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>($r1, $r5);

        return r8;
    }

    public org.apache.http.Header getFirstHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup $r0;
        java.lang.String $r1, $r5;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.apache.http.Header $r4;
        boolean $z0;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.http.Header[] getHeaders(java.lang.String)
    {
        java.lang.String $r0, $r6;
        java.util.ArrayList $r1;
        org.apache.http.message.HeaderGroup $r2;
        int $i0, $i1;
        java.util.List $r3;
        java.lang.Object $r4;
        org.apache.http.Header $r5;
        boolean $z0;
        org.apache.http.Header[] $r7;
        java.lang.Object[] $r8;

        $r2 := @this: org.apache.http.message.HeaderGroup;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $r3 = $r2.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r3 = $r2.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (org.apache.http.Header) $r4;

        $r6 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r7 = newarray (org.apache.http.Header)[$i0];

        $r8 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (org.apache.http.Header[]) $r8;

        $r7 = (org.apache.http.Header[]) $r7;

        return $r7;
    }

    public org.apache.http.Header getLastHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup $r0;
        java.lang.String $r1, $r5;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        org.apache.http.Header $r4;
        boolean $z0;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.http.HeaderIterator iterator()
    {
        org.apache.http.message.HeaderGroup $r0;
        org.apache.http.message.BasicListHeaderIterator $r1;
        java.util.List $r2;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = new org.apache.http.message.BasicListHeaderIterator;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r1.<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>($r2, null);

        return $r1;
    }

    public org.apache.http.HeaderIterator iterator(java.lang.String)
    {
        org.apache.http.message.HeaderGroup $r0;
        java.lang.String $r1;
        org.apache.http.message.BasicListHeaderIterator $r2;
        java.util.List $r3;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.http.message.BasicListHeaderIterator;

        $r3 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r2.<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>($r3, $r1);

        return $r2;
    }

    public void removeHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup $r0;
        org.apache.http.Header $r1;
        java.util.List $r2;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: org.apache.http.Header;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void setHeaders(org.apache.http.Header[])
    {
        org.apache.http.message.HeaderGroup $r0;
        org.apache.http.Header[] $r1;
        org.apache.http.Header $r2;
        int $i0, $i1;
        java.util.List $r3;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: org.apache.http.Header[];

        virtualinvoke $r0.<org.apache.http.message.HeaderGroup: void clear()>();

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r2 = $r1[$i0];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void updateHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup $r0;
        org.apache.http.Header $r1, $r4;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        $r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 := @parameter0: org.apache.http.Header;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getName()>();

        $r6 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label3;

        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        return;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r2 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
}
