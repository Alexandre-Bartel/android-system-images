public final class org.apache.harmony.luni.util.Util extends java.lang.Object
{
    private static java.lang.String[] MONTHS;
    private static java.lang.String[] WEEKDAYS;
    private static final java.lang.String defaultEncoding;

    static void <clinit>()
    {
        java.lang.String $r0, $r2, $r3;
        java.lang.String[] $r1;
        java.io.UnsupportedEncodingException $r4;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "";

        $r1[1] = "Sunday";

        $r1[2] = "Monday";

        $r1[3] = "Tuesday";

        $r1[4] = "Wednesday";

        $r1[5] = "Thursday";

        $r1[6] = "Friday";

        $r1[7] = "Saturday";

        <org.apache.harmony.luni.util.Util: java.lang.String[] WEEKDAYS> = $r1;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = "January";

        $r1[1] = "February";

        $r1[2] = "March";

        $r1[3] = "April";

        $r1[4] = "May";

        $r1[5] = "June";

        $r1[6] = "July";

        $r1[7] = "August";

        $r1[8] = "September";

        $r1[9] = "October";

        $r1[10] = "November";

        $r1[11] = "December";

        <org.apache.harmony.luni.util.Util: java.lang.String[] MONTHS> = $r1;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

        $r2 = $r0;

        if $r0 == null goto label2;

        $r3 = "";

     label1:
        virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>($r0);

     label2:
        <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding> = $r2;

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = null;

        goto label2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void <init>()
    {
        org.apache.harmony.luni.util.Util $r0;

        $r0 := @this: org.apache.harmony.luni.util.Util;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String convertFromUTF8(byte[], int, int) throws java.io.UTFDataFormatException
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.String $r1;
        char[] $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = newarray (char)[$i1];

        $r1 = staticinvoke <org.apache.harmony.luni.util.Util: java.lang.String convertUTF8WithBuf(byte[],char[],int,int)>($r0, $r2, $i0, $i1);

        return $r1;
    }

    public static java.lang.String convertUTF8WithBuf(byte[], char[], int, int) throws java.io.UTFDataFormatException
    {
        byte[] $r0;
        char[] $r1;
        int $i0, $i1, $i4, $i5, $i6, $i9, $i11;
        char $c2, $c7;
        byte $b3, $b10;
        java.io.UTFDataFormatException $r2;
        java.lang.String $r3;
        short $s8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: char[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i4 = 0;

        $i5 = 0;

     label01:
        if $i5 >= $i1 goto label10;

        $i6 = $i5 + 1;

        $i5 = $i0 + $i5;

        $b3 = $r0[$i5];

        $c2 = (char) $b3;

        $r1[$i4] = $c2;

        if $c2 >= 128 goto label02;

        $i4 = $i4 + 1;

        $i5 = $i6;

        goto label01;

     label02:
        $c2 = $r1[$i4];

        $c7 = $c2 & 224;

        if $c7 != 192 goto label05;

        if $i6 < $i1 goto label03;

        $r2 = new java.io.UTFDataFormatException;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,int)>("K0062", $i6);

        specialinvoke $r2.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label03:
        $i5 = $i6 + 1;

        $i6 = $i0 + $i6;

        $b3 = $r0[$i6];

        $s8 = $b3 & 192;

        if $s8 == 128 goto label04;

        $r2 = new java.io.UTFDataFormatException;

        $i0 = $i5 - 1;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,int)>("K0062", $i0);

        specialinvoke $r2.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label04:
        $c2 = $c2 & 31;

        $i9 = $c2 << 6;

        $b3 = $b3 & 63;

        $i9 = $i9 | $b3;

        $c2 = (char) $i9;

        $r1[$i4] = $c2;

        $i4 = $i4 + 1;

        goto label01;

     label05:
        $c7 = $c2 & 240;

        if $c7 != 224 goto label09;

        $i5 = $i6 + 1;

        if $i5 < $i1 goto label06;

        $r2 = new java.io.UTFDataFormatException;

        $i0 = $i6 + 1;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,int)>("K0063", $i0);

        specialinvoke $r2.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label06:
        $i9 = $i6 + 1;

        $i5 = $i0 + $i6;

        $b10 = $r0[$i5];

        $i5 = $i9 + 1;

        $i6 = $i0 + $i9;

        $b3 = $r0[$i6];

        $s8 = $b10 & 192;

        if $s8 != 128 goto label07;

        $s8 = $b3 & 192;

        if $s8 == 128 goto label08;

     label07:
        $r2 = new java.io.UTFDataFormatException;

        $i0 = $i5 - 2;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,int)>("K0064", $i0);

        specialinvoke $r2.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label08:
        $c2 = $c2 & 15;

        $i9 = $c2 << 12;

        $b10 = $b10 & 63;

        $i11 = $b10 << 6;

        $i9 = $i9 | $i11;

        $b3 = $b3 & 63;

        $i9 = $i9 | $b3;

        $c2 = (char) $i9;

        $r1[$i4] = $c2;

        $i4 = $i4 + 1;

        goto label01;

     label09:
        $r2 = new java.io.UTFDataFormatException;

        $i0 = $i6 - 1;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,int)>("K0065", $i0);

        specialinvoke $r2.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label10:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i4);

        return $r3;
    }

    public static java.lang.String decode(java.lang.String, boolean)
    {
        java.lang.String $r0, $r4;
        boolean $z0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i3;
        char $c2;
        java.lang.IllegalArgumentException $r3;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label01;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(37);

        if $i0 != -1 goto label01;

        return $r0;

     label01:
        $r2 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $i0 = 0;

     label02:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label11;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $z0 == 0 goto label04;

        if $c2 != 43 goto label04;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label03:
        $i0 = $i0 + 1;

        goto label02;

     label04:
        if $c2 != 37 goto label10;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void reset()>();

     label05:
        $i1 = $i0 + 2;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 < $i3 goto label06;

        $r3 = new java.lang.IllegalArgumentException;

        $r0 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,int)>("K01fe", $i0);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label06:
        $i1 = $i0 + 1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = staticinvoke <java.lang.Character: int digit(char,int)>($c2, 16);

        $i3 = $i0 + 2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = staticinvoke <java.lang.Character: int digit(char,int)>($c2, 16);

        if $i1 == -1 goto label07;

        if $i3 != -1 goto label08;

     label07:
        $r3 = new java.lang.IllegalArgumentException;

        $i1 = $i0 + 3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r0 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("K01ff", $r0, $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label08:
        $i1 = $i1 << 4;

        $i1 = $i1 + $i3;

        $b4 = (byte) $i1;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($b4);

        $i0 = $i0 + 3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label09;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 == 37 goto label05;

     label09:
        $r4 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label02;

     label10:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label03;

     label11:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static byte[] getBytes(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;
        java.io.UnsupportedEncodingException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding>;

        if $r1 == null goto label4;

        $r1 = <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding>;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        return $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private static int parse(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, $r2;
        java.lang.String[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        $r2 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, $r2, 0, $i0);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static long parseDate(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i11, $i12;
        java.lang.StringBuffer $r1;
        byte $b4, $b10;
        char $c9;
        java.lang.IllegalArgumentException $r3;
        java.lang.String[] $r4;
        boolean $z0;
        java.util.TimeZone $r5;
        java.util.Calendar $r6;
        java.util.Date $r7;
        long $l13;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = -1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i2 = -1;

        $i3 = -1;

        $b4 = 0;

        $i5 = -1;

        $i6 = -1;

        $i7 = 0;

        $i8 = -1;

     label01:
        if $i7 > $i0 goto label33;

        if $i7 >= $i0 goto label07;

        $c9 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i7);

     label02:
        $i7 = $i7 + 1;

        if $c9 < 97 goto label03;

        if $c9 <= 122 goto label04;

     label03:
        if $c9 < 65 goto label08;

        if $c9 > 90 goto label08;

     label04:
        $b10 = 1;

     label05:
        if $b4 != 2 goto label27;

        if $b10 == 2 goto label27;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        if $i11 < 70 goto label16;

        if $i3 != -1 goto label06;

        if $c9 == 32 goto label11;

        if $c9 == 44 goto label11;

        if $c9 == 13 goto label11;

     label06:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label07:
        $c9 = 13;

        goto label02;

     label08:
        if $c9 < 48 goto label09;

        if $c9 > 57 goto label09;

        $b10 = 2;

        goto label05;

     label09:
        $r2 = " ,-:\r\t";

        $i11 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c9);

        if $i11 != -1 goto label10;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label10:
        $b10 = 0;

        goto label05;

     label11:
        $i3 = $i11;

     label12:
        $i11 = $i8;

        $i8 = $i2;

     label13:
        if $b10 == 1 goto label14;

        if $b10 != 2 goto label15;

     label14:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

     label15:
        $b4 = $b10;

        $i2 = $i8;

        $i8 = $i11;

        goto label01;

     label16:
        if $c9 != 58 goto label19;

        if $i6 != -1 goto label17;

        $i6 = $i11;

        goto label12;

     label17:
        if $i5 != -1 goto label18;

        $i5 = $i11;

        goto label12;

     label18:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label19:
        if $c9 == 32 goto label20;

        if $c9 == 44 goto label20;

        if $c9 == 45 goto label20;

        if $c9 != 13 goto label25;

     label20:
        if $i6 == -1 goto label21;

        if $i5 != -1 goto label21;

        $i5 = $i11;

        goto label12;

     label21:
        if $i5 == -1 goto label22;

        if $i2 != -1 goto label22;

        $i2 = $i11;

        goto label12;

     label22:
        if $i1 != -1 goto label23;

        $i1 = $i11;

        goto label12;

     label23:
        if $i3 != -1 goto label24;

        $i3 = $i11;

        goto label12;

     label24:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label25:
        if $i3 != -1 goto label26;

        if $i8 == -1 goto label26;

        if $i1 == -1 goto label26;

        $i3 = $i11;

        goto label12;

     label26:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label27:
        if $b4 != 1 goto label44;

        if $b10 == 1 goto label44;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $i11 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i11 >= 3 goto label28;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label28:
        $r4 = <org.apache.harmony.luni.util.Util: java.lang.String[] WEEKDAYS>;

        $i11 = staticinvoke <org.apache.harmony.luni.util.Util: int parse(java.lang.String,java.lang.String[])>($r2, $r4);

        if $i11 == -1 goto label29;

        $i11 = $i8;

        $i8 = $i2;

        goto label13;

     label29:
        if $i8 != -1 goto label30;

        $r4 = <org.apache.harmony.luni.util.Util: java.lang.String[] MONTHS>;

        $i11 = staticinvoke <org.apache.harmony.luni.util.Util: int parse(java.lang.String,java.lang.String[])>($r2, $r4);

        $i12 = $i11;

        if $i11 == -1 goto label31;

        $i8 = $i2;

        goto label13;

     label30:
        $i12 = $i8;

     label31:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("GMT");

        if $z0 == 0 goto label32;

        $i8 = $i2;

        $i11 = $i12;

        goto label13;

     label32:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label33:
        if $i3 == -1 goto label38;

        if $i8 == -1 goto label38;

        if $i1 == -1 goto label38;

        if $i6 != -1 goto label43;

        $i0 = 0;

     label34:
        if $i5 != -1 goto label42;

        $i5 = 0;

     label35:
        if $i2 != -1 goto label41;

        $i2 = 0;

     label36:
        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        $r6 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r5);

        $i6 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(1);

        $i6 = $i6 - 80;

        if $i3 >= 100 goto label40;

        $i7 = $i6 / 100;

        $i7 = $i7 * 100;

        $i3 = $i7 + $i3;

        if $i3 >= $i6 goto label39;

        $i3 = $i3 + 100;

     label37:
        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(1, $i3);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(2, $i8);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(5, $i1);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(11, $i0);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(12, $i5);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(13, $i2);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(14, 0);

        $r7 = virtualinvoke $r6.<java.util.Calendar: java.util.Date getTime()>();

        $l13 = virtualinvoke $r7.<java.util.Date: long getTime()>();

        return $l13;

     label38:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label39:
        goto label37;

     label40:
        goto label37;

     label41:
        goto label36;

     label42:
        goto label35;

     label43:
        $i0 = $i6;

        goto label34;

     label44:
        $i11 = $i8;

        $i8 = $i2;

        goto label13;
    }

    public static java.lang.String toASCIILowerCase(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if 65 > $c2 goto label3;

        if $c2 > 90 goto label3;

        $i3 = $c2 + 32;

        $c2 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String toASCIIUpperCase(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if 97 > $c2 goto label3;

        if $c2 > 122 goto label3;

        $i3 = $c2 - 32;

        $c2 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String toString(byte[])
    {
        byte[] $r0;
        int $i0;
        java.lang.String $r1, $r2;
        java.io.UnsupportedEncodingException $r3;

        $r0 := @parameter0: byte[];

        $r1 = <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding>;

        if $r1 == null goto label4;

        $r2 = new java.lang.String;

        $i0 = lengthof $r0;

        $r1 = <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding>;

     label1:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, 0, $i0, $r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        $r2 = new java.lang.String;

        $i0 = lengthof $r0;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int)>($r0, 0, $i0);

        return $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String toString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        java.io.UnsupportedEncodingException $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding>;

        if $r1 == null goto label4;

        $r2 = new java.lang.String;

        $r1 = <org.apache.harmony.luni.util.Util: java.lang.String defaultEncoding>;

     label1:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, $i0, $i1, $r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
