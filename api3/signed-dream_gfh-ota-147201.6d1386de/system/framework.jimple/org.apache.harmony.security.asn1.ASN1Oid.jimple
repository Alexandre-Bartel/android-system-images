public class org.apache.harmony.security.asn1.ASN1Oid extends org.apache.harmony.security.asn1.ASN1Primitive
{
    private static final org.apache.harmony.security.asn1.ASN1Oid ASN1;
    private static final org.apache.harmony.security.asn1.ASN1Oid STRING_OID;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Oid $r0;
        org.apache.harmony.security.asn1.ASN1Oid$1 $r1;

        $r0 = new org.apache.harmony.security.asn1.ASN1Oid;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1Oid: void <init>()>();

        <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid ASN1> = $r0;

        $r1 = new org.apache.harmony.security.asn1.ASN1Oid$1;

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Oid$1: void <init>()>();

        <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid STRING_OID> = $r1;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.security.asn1.ASN1Oid $r0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Oid;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1Primitive: void <init>(int)>(6);

        return;
    }

    public static org.apache.harmony.security.asn1.ASN1Oid getInstance()
    {
        org.apache.harmony.security.asn1.ASN1Oid r0;

        r0 = <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid ASN1>;

        return r0;
    }

    public static org.apache.harmony.security.asn1.ASN1Oid getInstanceForString()
    {
        org.apache.harmony.security.asn1.ASN1Oid r0;

        r0 = <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid STRING_OID>;

        return r0;
    }

    public java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Oid $r0;
        org.apache.harmony.security.asn1.BerInputStream $r1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Oid;

        $r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        virtualinvoke $r1.<org.apache.harmony.security.asn1.BerInputStream: void readOID()>();

        $z0 = $r1.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>($r1);

        return $r2;
    }

    public void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Oid $r0;
        org.apache.harmony.security.asn1.BerOutputStream $r1;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Oid;

        $r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        virtualinvoke $r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeOID()>();

        return;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Oid $r0;
        org.apache.harmony.security.asn1.BerInputStream $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i5;
        byte[] $r3;
        byte $b3, $b6;
        short $s4;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Oid;

        $r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int oidElement>;

        $r2 = newarray (int)[$i0];

        $i0 = 1;

        $i1 = 0;

     label1:
        $i2 = lengthof $r2;

        if $i0 >= $i2 goto label4;

        $r3 = $r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i2 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i2 = $i2 + $i1;

        $b3 = $r3[$i2];

        $i2 = $b3 & 127;

     label2:
        $s4 = $b3 & 128;

        if $s4 == 0 goto label3;

        $i1 = $i1 + 1;

        $r3 = $r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i5 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i5 = $i5 + $i1;

        $b3 = $r3[$i5];

        $i2 = $i2 << 7;

        $b6 = $b3 & 127;

        $i2 = $i2 | $b6;

        goto label2;

     label3:
        $r2[$i0] = $i2;

        $i0 = $i0 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label4:
        $i0 = $r2[1];

        if $i0 <= 79 goto label5;

        $r2[0] = 2;

        $i0 = $r2[1];

        $i0 = $i0 - 80;

        $r2[1] = $i0;

        return $r2;

     label5:
        $i0 = $r2[1];

        $i0 = $i0 / 40;

        $r2[0] = $i0;

        $i0 = $r2[1];

        $i0 = $i0 % 40;

        $r2[1] = $i0;

        return $r2;
    }

    public void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Oid $r1;
        java.lang.Object $r2;
        int[] $r3;
        int $i0, $i1, $i2;

        $r1 := @this: org.apache.harmony.security.asn1.ASN1Oid;

        $r0 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r3 = (int[]) $r2;

        $r3 = (int[]) $r3;

        $i0 = 0;

        $i1 = $r3[0];

        $i1 = $i1 * 40;

        $i2 = $r3[1];

        $i1 = $i1 + $i2;

        if $i1 != 0 goto label4;

        $i0 = 1;

     label1:
        $i1 = 2;

     label2:
        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label7;

        $i2 = $r3[$i1];

        if $i2 != 0 goto label5;

        $i0 = $i0 + 1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        if $i1 <= 0 goto label1;

        $i0 = $i0 + 1;

        $i1 = $i1 >> 7;

        goto label4;

     label5:
        $i2 = $r3[$i1];

     label6:
        if $i2 <= 0 goto label3;

        $i0 = $i0 + 1;

        $i2 = $i2 >> 7;

        goto label6;

     label7:
        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length> = $i0;

        return;
    }
}
