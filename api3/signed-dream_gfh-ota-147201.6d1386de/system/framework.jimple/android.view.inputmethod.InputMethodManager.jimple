public final class android.view.inputmethod.InputMethodManager extends java.lang.Object
{
    static final boolean DEBUG;
    public static final int HIDE_IMPLICIT_ONLY;
    public static final int HIDE_NOT_ALWAYS;
    static final int MSG_BIND;
    static final int MSG_DUMP;
    static final int MSG_SET_ACTIVE;
    static final int MSG_UNBIND;
    public static final int RESULT_HIDDEN;
    public static final int RESULT_SHOWN;
    public static final int RESULT_UNCHANGED_HIDDEN;
    public static final int RESULT_UNCHANGED_SHOWN;
    public static final int SHOW_FORCED;
    public static final int SHOW_IMPLICIT;
    static final java.lang.String TAG;
    static android.view.inputmethod.InputMethodManager mInstance;
    static final java.lang.Object mInstanceSync;
    boolean mActive;
    int mBindSequence;
    final com.android.internal.view.IInputMethodClient$Stub mClient;
    android.view.inputmethod.CompletionInfo[] mCompletions;
    java.lang.String mCurId;
    com.android.internal.view.IInputMethodSession mCurMethod;
    android.view.View mCurRootView;
    android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute;
    int mCursorCandEnd;
    int mCursorCandStart;
    android.graphics.Rect mCursorRect;
    int mCursorSelEnd;
    int mCursorSelStart;
    final android.view.inputmethod.InputConnection mDummyInputConnection;
    boolean mFullscreenMode;
    final android.view.inputmethod.InputMethodManager$H mH;
    boolean mHasBeenInactive;
    final com.android.internal.view.IInputContext mIInputContext;
    final android.os.Looper mMainLooper;
    boolean mNextServedNeedsStart;
    android.view.View mNextServedView;
    boolean mServedConnecting;
    android.view.inputmethod.InputConnection mServedInputConnection;
    android.view.View mServedView;
    final com.android.internal.view.IInputMethodManager mService;
    android.graphics.Rect mTmpCursorRect;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.view.inputmethod.InputMethodManager: java.lang.String TAG> = "InputMethodManager";

        <android.view.inputmethod.InputMethodManager: int SHOW_IMPLICIT> = 1;

        <android.view.inputmethod.InputMethodManager: int SHOW_FORCED> = 2;

        <android.view.inputmethod.InputMethodManager: int RESULT_UNCHANGED_SHOWN> = 0;

        <android.view.inputmethod.InputMethodManager: int RESULT_UNCHANGED_HIDDEN> = 1;

        <android.view.inputmethod.InputMethodManager: int RESULT_SHOWN> = 2;

        <android.view.inputmethod.InputMethodManager: int RESULT_HIDDEN> = 3;

        <android.view.inputmethod.InputMethodManager: int MSG_UNBIND> = 3;

        <android.view.inputmethod.InputMethodManager: int MSG_SET_ACTIVE> = 4;

        <android.view.inputmethod.InputMethodManager: int MSG_DUMP> = 1;

        <android.view.inputmethod.InputMethodManager: int MSG_BIND> = 2;

        <android.view.inputmethod.InputMethodManager: int HIDE_NOT_ALWAYS> = 2;

        <android.view.inputmethod.InputMethodManager: int HIDE_IMPLICIT_ONLY> = 1;

        <android.view.inputmethod.InputMethodManager: boolean DEBUG> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.view.inputmethod.InputMethodManager: java.lang.Object mInstanceSync> = $r0;

        return;
    }

    void <init>(com.android.internal.view.IInputMethodManager, android.os.Looper)
    {
        android.view.inputmethod.InputMethodManager $r0, $r9;
        com.android.internal.view.IInputMethodManager $r1;
        android.os.Looper $r2;
        android.graphics.Rect $r3;
        android.view.inputmethod.InputMethodManager$1 $r4;
        android.view.inputmethod.BaseInputConnection $r5;
        android.view.inputmethod.InputMethodManager$H $r6;
        android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper $r7;
        android.view.inputmethod.InputConnection $r8;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: com.android.internal.view.IInputMethodManager;

        $r2 := @parameter1: android.os.Looper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.inputmethod.InputMethodManager: boolean mActive> = 0;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive> = 1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect> = $r3;

        $r0.<android.view.inputmethod.InputMethodManager: int mBindSequence> = -1;

        $r4 = new android.view.inputmethod.InputMethodManager$1;

        specialinvoke $r4.<android.view.inputmethod.InputMethodManager$1: void <init>(android.view.inputmethod.InputMethodManager)>($r0);

        $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient> = $r4;

        $r5 = new android.view.inputmethod.BaseInputConnection;

        specialinvoke $r5.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.inputmethod.InputMethodManager,boolean)>($r0, 0);

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mDummyInputConnection> = $r5;

        $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService> = $r1;

        $r0.<android.view.inputmethod.InputMethodManager: android.os.Looper mMainLooper> = $r2;

        $r6 = new android.view.inputmethod.InputMethodManager$H;

        specialinvoke $r6.<android.view.inputmethod.InputMethodManager$H: void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper)>($r0, $r2);

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH> = $r6;

        $r7 = new android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper;

        $r8 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mDummyInputConnection>;

        specialinvoke $r7.<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper,android.view.inputmethod.InputConnection)>($r0, $r2, $r8);

        $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext mIInputContext> = $r7;

        $r9 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance>;

        if $r9 != null goto label1;

        <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance> = $r0;

        return;

     label1:
        return;
    }

    public static android.view.inputmethod.InputMethodManager getInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodManager $r4;
        android.os.Looper $r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 = <android.view.inputmethod.InputMethodManager: java.lang.Object mInstanceSync>;

        entermonitor $r1;

     label1:
        $r2 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance>;

        if $r2 == null goto label3;

        $r2 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance>;

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("input_method");

        $r4 = staticinvoke <com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>($r3);

        $r2 = new android.view.inputmethod.InputMethodManager;

        $r5 = virtualinvoke $r0.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.view.inputmethod.InputMethodManager: void <init>(com.android.internal.view.IInputMethodManager,android.os.Looper)>($r4, $r5);

        <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance> = $r2;

        exitmonitor $r1;

     label4:
        $r2 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance>;

        return $r2;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static android.view.inputmethod.InputMethodManager peekInstance()
    {
        android.view.inputmethod.InputMethodManager r0;

        r0 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager mInstance>;

        return r0;
    }

    public void checkFocus()
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r2;
        boolean $z0;
        android.view.inputmethod.InputMethodManager$H $r3;
        java.lang.Throwable $r4;
        android.view.inputmethod.InputConnection $r5;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r1 != $r2 goto label01;

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mNextServedNeedsStart>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label02:
        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r2 != $r1 goto label06;

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mNextServedNeedsStart>;

        if $z0 != 0 goto label06;

        exitmonitor $r3;

     label03:
        return;

     label04:
        $r4 := @caughtexception;

        exitmonitor $r3;

     label05:
        throw $r4;

     label06:
        $r0.<android.view.inputmethod.InputMethodManager: boolean mNextServedNeedsStart> = 0;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r1 != null goto label08;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void finishInputLocked()>();

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void closeCurrentInput()>();

        exitmonitor $r3;

     label07:
        return;

     label08:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView> = $r1;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute> = null;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions> = null;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 1;

        exitmonitor $r3;

     label09:
        if $r5 == null goto label10;

        interfaceinvoke $r5.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label10:
        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void startInputInner()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
    }

    void clearBindingLocked()
    {
        android.view.inputmethod.InputMethodManager $r0;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void clearConnectionLocked()>();

        $r0.<android.view.inputmethod.InputMethodManager: int mBindSequence> = -1;

        $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId> = null;

        $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod> = null;

        return;
    }

    void clearConnectionLocked()
    {
        android.view.inputmethod.InputMethodManager $r0;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute> = null;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection> = null;

        return;
    }

    void closeCurrentInput()
    {
        android.view.inputmethod.InputMethodManager $r0;
        com.android.internal.view.IInputMethodClient$Stub $r1;
        com.android.internal.view.IInputMethodManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r1, 2, null);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchKeyEvent(android.content.Context, int, android.view.KeyEvent, com.android.internal.view.IInputMethodCallback)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.content.Context $r1;
        int $i0, $i1;
        android.view.KeyEvent $r2;
        com.android.internal.view.IInputMethodCallback $r3;
        android.view.inputmethod.InputMethodManager$H $r4;
        com.android.internal.view.IInputMethodSession $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7, $r10, $r11, $r12;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.KeyEvent;

        $r3 := @parameter3: com.android.internal.view.IInputMethodCallback;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label02:
        if $r5 != null goto label06;

     label03:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodCallback: void finishedEvent(int,boolean)>($i0, 0);

     label04:
        exitmonitor $r4;

     label05:
        return;

     label06:
        $i1 = virtualinvoke $r2.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label12;

        $i1 = virtualinvoke $r2.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 63 goto label12;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>();

     label07:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodCallback: void finishedEvent(int,boolean)>($i0, 1);

     label08:
        exitmonitor $r4;

     label09:
        return;

     label10:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r6;

     label12:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label13:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)>($i0, $r2, $r3);

     label14:
        exitmonitor $r4;

     label15:
        return;

     label16:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r9 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dropping: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r9, $r7);

     label17:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodCallback: void finishedEvent(int,boolean)>($i0, 0);

     label18:
        goto label14;

     label19:
        $r10 := @caughtexception;

        goto label14;

     label20:
        $r11 := @caughtexception;

        goto label04;

     label21:
        $r12 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label20;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch android.os.RemoteException from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label16;
        catch java.lang.Throwable from label12 to label14 with label10;
        catch java.lang.Throwable from label14 to label15 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label10;
    }

    void dispatchTrackballEvent(android.content.Context, int, android.view.MotionEvent, com.android.internal.view.IInputMethodCallback)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.content.Context $r1;
        int $i0;
        android.view.MotionEvent $r2;
        com.android.internal.view.IInputMethodCallback $r3;
        android.view.inputmethod.InputMethodManager$H $r4;
        com.android.internal.view.IInputMethodSession $r5;
        android.view.inputmethod.EditorInfo $r6;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8, $r11, $r12;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.MotionEvent;

        $r3 := @parameter3: com.android.internal.view.IInputMethodCallback;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r5 == null goto label03;

        $r6 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

     label02:
        if $r6 != null goto label06;

     label03:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodCallback: void finishedEvent(int,boolean)>($i0, 0);

     label04:
        exitmonitor $r4;

     label05:
        return;

     label06:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label07:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)>($i0, $r2, $r3);

     label08:
        exitmonitor $r4;

     label09:
        return;

     label10:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r7;

     label12:
        $r8 := @caughtexception;

     label13:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dropping trackball: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r10, $r8);

     label14:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodCallback: void finishedEvent(int,boolean)>($i0, 0);

     label15:
        goto label08;

     label16:
        $r11 := @caughtexception;

        goto label08;

     label17:
        $r12 := @caughtexception;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label10;
    }

    public void displayCompletions(android.view.View, android.view.inputmethod.CompletionInfo[])
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r4;
        android.view.inputmethod.CompletionInfo[] $r2;
        android.view.inputmethod.InputMethodManager$H $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.inputmethod.CompletionInfo[];

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label01:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == $r1 goto label04;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == null goto label02;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r4.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 != 0 goto label04;

     label02:
        exitmonitor $r3;

     label03:
        return;

     label04:
        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions> = $r2;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label05:
        if $r5 == null goto label08;

     label06:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

     label07:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>($r2);

     label08:
        exitmonitor $r3;

     label09:
        return;

     label10:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void doDump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.view.inputmethod.InputMethodManager $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3;
        android.util.PrintWriterPrinter $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.android.internal.view.IInputMethodManager $r7;
        android.os.Looper $r8;
        com.android.internal.view.IInputContext $r9;
        boolean $z0;
        int $i0;
        com.android.internal.view.IInputMethodSession $r10;
        android.view.View $r11;
        android.view.inputmethod.EditorInfo $r12;
        android.view.inputmethod.InputConnection $r13;
        android.view.inputmethod.CompletionInfo[] $r14;
        android.graphics.Rect $r15;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        $r4 = new android.util.PrintWriterPrinter;

        specialinvoke $r4.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>($r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method client state for ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mService=");

        $r7 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMainLooper=");

        $r8 = $r0.<android.view.inputmethod.InputMethodManager: android.os.Looper mMainLooper>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mIInputContext=");

        $r9 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext mIInputContext>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActive=");

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mActive>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHasBeenInactive=");

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBindSequence=");

        $i0 = $r0.<android.view.inputmethod.InputMethodManager: int mBindSequence>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurId=");

        $r6 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurMethod=");

        $r10 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurRootView=");

        $r11 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServedView=");

        $r11 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNextServedNeedsStart=");

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mNextServedNeedsStart>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNextServedView=");

        $r11 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServedConnecting=");

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r12 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r12 == null goto label2;

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  mCurrentTextBoxAttribute:");

        $r12 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        virtualinvoke $r12.<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>($r4, "    ");

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServedInputConnection=");

        $r13 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCompletions=");

        $r14 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCursorRect=");

        $r15 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCursorSelStart=");

        $i0 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCursorSelEnd=");

        $i0 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCursorCandStart=");

        $i0 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCursorCandEnd=");

        $i0 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>($r6);

        return;

     label2:
        interfaceinvoke $r4.<android.util.Printer: void println(java.lang.String)>("  mCurrentTextBoxAttribute: null");

        goto label1;
    }

    void finishInputLocked()
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1;
        android.view.inputmethod.EditorInfo $r2;
        com.android.internal.view.IInputMethodManager $r3;
        com.android.internal.view.IInputMethodClient$Stub $r4;
        android.view.inputmethod.InputConnection $r5;
        android.os.Handler $r6;
        android.os.Message $r7;
        android.os.RemoteException $r8;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView> = null;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r1 == null goto label5;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r2 == null goto label2;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

     label1:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void finishInput(com.android.internal.view.IInputMethodClient)>($r4);

     label2:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        if $r5 == null goto label3;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r6 = virtualinvoke $r1.<android.view.View: android.os.Handler getHandler()>();

        if $r6 == null goto label3;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1012, $r5);

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7);

     label3:
        $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView> = null;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions> = null;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 0;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void clearConnectionLocked()>();

        return;

     label4:
        $r8 := @caughtexception;

        goto label2;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void focusIn(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1;
        android.view.inputmethod.InputMethodManager$H $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label1:
        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void focusInLocked(android.view.View)>($r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void focusInLocked(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r2, $r3;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View getRootView()>();

        if $r2 == $r3 goto label1;

        return;

     label1:
        $r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView> = $r1;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void scheduleCheckFocusLocked(android.view.View)>($r1);

        return;
    }

    public void focusOut(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r3;
        android.view.inputmethod.InputMethodManager$H $r2;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == $r1 goto label2;

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.android.internal.view.IInputMethodClient getClient()
    {
        android.view.inputmethod.InputMethodManager $r0;
        com.android.internal.view.IInputMethodClient$Stub r1;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        return r1;
    }

    public java.util.List getEnabledInputMethodList()
    {
        android.view.inputmethod.InputMethodManager $r0;
        java.util.List $r1;
        com.android.internal.view.IInputMethodManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodList()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public com.android.internal.view.IInputContext getInputContext()
    {
        android.view.inputmethod.InputMethodManager $r0;
        com.android.internal.view.IInputContext r1;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext mIInputContext>;

        return r1;
    }

    public java.util.List getInputMethodList()
    {
        android.view.inputmethod.InputMethodManager $r0;
        java.util.List $r1;
        com.android.internal.view.IInputMethodManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: java.util.List getInputMethodList()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void hideSoftInputFromInputMethod(android.os.IBinder, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1;
        int $i0;
        com.android.internal.view.IInputMethodManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: void hideMySoftInput(android.os.IBinder,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hideSoftInputFromWindow(android.os.IBinder, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>($r1, $i0, null);

        return $z0;
    }

    public boolean hideSoftInputFromWindow(android.os.IBinder, int, android.os.ResultReceiver)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1, $r6;
        int $i0;
        android.os.ResultReceiver $r2;
        com.android.internal.view.IInputMethodClient$Stub $r3;
        android.view.inputmethod.InputMethodManager$H $r4;
        android.view.View $r5;
        com.android.internal.view.IInputMethodManager $r7;
        boolean $z0;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.ResultReceiver;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == null goto label02;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r6 == $r1 goto label04;

     label02:
        exitmonitor $r4;

     label03:
        return 0;

     label04:
        $r7 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

     label05:
        $z0 = interfaceinvoke $r7.<com.android.internal.view.IInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r3, $i0, $r2);

     label06:
        exitmonitor $r4;

     label07:
        return $z0;

     label08:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label09:
        return 0;

     label10:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void hideStatusIcon(android.os.IBinder)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1;
        com.android.internal.view.IInputMethodManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>($r1, null, 0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAcceptingText()
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.inputmethod.InputConnection $r1;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isActive()
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.inputmethod.InputMethodManager$H $r1;
        android.view.View $r2;
        android.view.inputmethod.EditorInfo $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r2 == null goto label4;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r3 == null goto label4;

        $z0 = 1;

     label2:
        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public boolean isActive(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r3;
        android.view.inputmethod.InputMethodManager$H $r2;
        boolean $z0;
        android.view.inputmethod.EditorInfo $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == $r1 goto label2;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == null goto label5;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 == 0 goto label5;

     label2:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r4 == null goto label5;

        $z0 = 1;

     label3:
        exitmonitor $r2;

     label4:
        return $z0;

     label5:
        $z0 = 0;

        goto label3;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public boolean isFullscreenMode()
    {
        android.view.inputmethod.InputMethodManager $r0;
        boolean z0;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mFullscreenMode>;

        return z0;
    }

    public boolean isWatchingCursor(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public void onWindowFocus(android.view.View, android.view.View, int, boolean, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r2, $r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        android.view.inputmethod.InputMethodManager$H $r3;
        com.android.internal.view.IInputMethodManager $r5;
        com.android.internal.view.IInputMethodClient$Stub $r6;
        android.os.IBinder $r7;
        java.lang.Throwable $r8, $r9;
        android.os.RemoteException $r10;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i1 := @parameter4: int;

        $z1 = 0;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label01:
        $z2 = $r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive>;

        if $z2 == 0 goto label02;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive> = 0;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mNextServedNeedsStart> = 1;

     label02:
        if $r2 == null goto label12;

        $r4 = $r2;

     label03:
        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void focusInLocked(android.view.View)>($r4);

        exitmonitor $r3;

     label04:
        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

        if $r2 == null goto label16;

     label05:
        $z2 = virtualinvoke $r2.<android.view.View: boolean onCheckIsTextEditor()>();

     label06:
        if $z2 == 0 goto label16;

        $z2 = 1;

     label07:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label08:
        $r6 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        $r7 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r2 == null goto label09;

        $z1 = 1;

     label09:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: void windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,boolean,boolean,int,boolean,int)>($r6, $r7, $z1, $z2, $i0, $z0, $i1);

     label10:
        exitmonitor $r3;

     label11:
        return;

     label12:
        $r4 = $r1;

        goto label03;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor $r3;

     label15:
        throw $r8;

     label16:
        $z2 = 0;

        goto label07;

     label17:
        $r9 := @caughtexception;

     label18:
        exitmonitor $r3;

     label19:
        throw $r9;

     label20:
        $r10 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label04 with label13;
        catch android.os.RemoteException from label05 to label06 with label20;
        catch android.os.RemoteException from label08 to label10 with label20;
        catch java.lang.Throwable from label05 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void reportFinishInputConnection(android.view.inputmethod.InputConnection)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.inputmethod.InputConnection $r1, $r2;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.inputmethod.InputConnection;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        if $r2 == $r1 goto label1;

        interfaceinvoke $r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

        return;

     label1:
        return;
    }

    public void restartInput(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r3;
        android.view.inputmethod.InputMethodManager$H $r2;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == $r1 goto label4;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 != 0 goto label4;

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 1;

        exitmonitor $r2;

     label5:
        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void startInputInner()>();

        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor $r2;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void scheduleCheckFocusLocked(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1;
        android.os.Handler $r2;
        boolean $z0;
        android.os.Message $r3;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.os.Handler getHandler()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean hasMessages(int)>(1013);

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(1013);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void sendAppPrivateCommand(android.view.View, java.lang.String, android.os.Bundle)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r5;
        java.lang.String $r2;
        android.os.Bundle $r3;
        android.view.inputmethod.InputMethodManager$H $r4;
        boolean $z0;
        android.view.inputmethod.EditorInfo $r6;
        com.android.internal.view.IInputMethodSession $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Bundle;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == $r1 goto label02;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == null goto label03;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r5.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 == 0 goto label03;

     label02:
        $r6 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r6 == null goto label03;

        $r7 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r7 != null goto label05;

     label03:
        exitmonitor $r4;

     label04:
        return;

     label05:
        $r7 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label06:
        interfaceinvoke $r7.<com.android.internal.view.IInputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>($r2, $r3);

     label07:
        exitmonitor $r4;

     label08:
        return;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label10:
        throw $r8;

     label11:
        $r9 := @caughtexception;

     label12:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r2, $r9);

     label13:
        goto label07;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public void setFullscreenMode(boolean)
    {
        android.view.inputmethod.InputMethodManager $r0;
        boolean $z0;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $z0 := @parameter0: boolean;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mFullscreenMode> = $z0;

        return;
    }

    public void setInputMethod(android.os.IBinder, java.lang.String)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        com.android.internal.view.IInputMethodManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showInputMethodPicker()
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.inputmethod.InputMethodManager$H $r1;
        com.android.internal.view.IInputMethodManager $r2;
        com.android.internal.view.IInputMethodClient$Stub $r3;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

     label2:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>($r3);

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r6 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r6, $r4);

        goto label3;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public boolean showSoftInput(android.view.View, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>($r1, $i0, null);

        return $z0;
    }

    public boolean showSoftInput(android.view.View, int, android.os.ResultReceiver)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r5;
        int $i0;
        android.os.ResultReceiver $r2;
        com.android.internal.view.IInputMethodClient$Stub $r3;
        android.view.inputmethod.InputMethodManager$H $r4;
        boolean $z0;
        com.android.internal.view.IInputMethodManager $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.ResultReceiver;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == $r1 goto label04;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == null goto label02;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r5.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 != 0 goto label04;

     label02:
        exitmonitor $r4;

     label03:
        return 0;

     label04:
        $r6 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

     label05:
        $z0 = interfaceinvoke $r6.<com.android.internal.view.IInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r3, $i0, $r2);

     label06:
        exitmonitor $r4;

     label07:
        return $z0;

     label08:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label09:
        return 0;

     label10:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void showSoftInputFromInputMethod(android.os.IBinder, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1;
        int $i0;
        com.android.internal.view.IInputMethodManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: void showMySoftInput(android.os.IBinder,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showSoftInputUnchecked(int, android.os.ResultReceiver)
    {
        android.view.inputmethod.InputMethodManager $r0;
        int $i0;
        android.os.ResultReceiver $r1;
        com.android.internal.view.IInputMethodClient$Stub $r2;
        com.android.internal.view.IInputMethodManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.ResultReceiver;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

     label1:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r2, $i0, $r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showStatusIcon(android.os.IBinder, java.lang.String, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        int $i0;
        com.android.internal.view.IInputMethodManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

     label1:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>($r1, $r2, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startGettingWindowFocus(android.view.View)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1;
        android.view.inputmethod.InputMethodManager$H $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label1:
        $r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView> = $r1;

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void startInputInner()
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.inputmethod.EditorInfo $r1, $r14;
        android.view.View $r2, $r12;
        android.view.inputmethod.InputMethodManager$H $r3;
        android.os.Handler $r4;
        android.os.Looper $r5, $r6;
        android.view.inputmethod.InputMethodManager$2 $r7;
        java.lang.Throwable $r8, $r13;
        android.content.Context $r9;
        java.lang.String $r10;
        int $i0;
        android.view.inputmethod.InputConnection $r11;
        boolean $z0, $z1;
        android.graphics.Rect $r15;
        android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper $r16;
        com.android.internal.view.IInputMethodManager $r17;
        com.android.internal.view.IInputMethodClient$Stub $r18;
        com.android.internal.view.IInputMethodSession $r19;
        com.android.internal.view.InputBindResult $r20;
        android.view.inputmethod.CompletionInfo[] $r21;
        android.os.RemoteException $r22, $r24;
        java.lang.StringBuilder $r23;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label01:
        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r2 != null goto label03;

        exitmonitor $r3;

     label02:
        return;

     label03:
        exitmonitor $r3;

     label04:
        $r4 = virtualinvoke $r2.<android.view.View: android.os.Handler getHandler()>();

        if $r4 == null goto label33;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r5 == $r6 goto label08;

        $r7 = new android.view.inputmethod.InputMethodManager$2;

        specialinvoke $r7.<android.view.inputmethod.InputMethodManager$2: void <init>(android.view.inputmethod.InputMethodManager)>($r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        return;

     label05:
        $r8 := @caughtexception;

     label06:
        exitmonitor $r3;

     label07:
        throw $r8;

     label08:
        $r1 = new android.view.inputmethod.EditorInfo;

        specialinvoke $r1.<android.view.inputmethod.EditorInfo: void <init>()>();

        $r9 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        $r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName> = $r10;

        $i0 = virtualinvoke $r2.<android.view.View: int getId()>();

        $r1.<android.view.inputmethod.EditorInfo: int fieldId> = $i0;

        $r11 = virtualinvoke $r2.<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>($r1);

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label09:
        $r12 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r12 != $r2 goto label10;

        $z0 = $r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting>;

        if $z0 != 0 goto label14;

     label10:
        exitmonitor $r3;

     label11:
        return;

     label12:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label13:
        throw $r13;

     label14:
        $r14 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r14 != null goto label25;

        $z0 = 1;

     label15:
        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute> = $r1;

        $r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 0;

        $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection> = $r11;

        if $r11 == null goto label26;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int initialSelStart>;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart> = $i0;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int initialSelEnd>;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd> = $i0;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart> = -1;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd> = -1;

        $r15 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        virtualinvoke $r15.<android.graphics.Rect: void setEmpty()>();

        $r16 = new android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r16.<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper,android.view.inputmethod.InputConnection)>($r0, $r5, $r11);

     label16:
        $r17 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r18 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        $r19 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r19 != null goto label27;

        $z1 = 1;

     label17:
        $r20 = interfaceinvoke $r17.<com.android.internal.view.IInputMethodManager: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,boolean,boolean)>($r18, $r16, $r1, $z0, $z1);

     label18:
        if $r20 == null goto label19;

        $r10 = $r20.<com.android.internal.view.InputBindResult: java.lang.String id>;

        if $r10 == null goto label28;

        $i0 = $r20.<com.android.internal.view.InputBindResult: int sequence>;

        $r0.<android.view.inputmethod.InputMethodManager: int mBindSequence> = $i0;

        $r19 = $r20.<com.android.internal.view.InputBindResult: com.android.internal.view.IInputMethodSession method>;

        $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod> = $r19;

     label19:
        $r19 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r19 == null goto label23;

        $r21 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

     label20:
        if $r21 == null goto label23;

     label21:
        $r19 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r21 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

     label22:
        interfaceinvoke $r19.<com.android.internal.view.IInputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>($r21);

     label23:
        exitmonitor $r3;

     label24:
        return;

     label25:
        $z0 = 0;

        goto label15;

     label26:
        $r16 = null;

        goto label16;

     label27:
        $z1 = 0;

        goto label17;

     label28:
        exitmonitor $r3;

     label29:
        return;

     label30:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r10, $r22);

     label31:
        goto label23;

     label32:
        $r24 := @caughtexception;

        goto label23;

     label33:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label14 to label16 with label12;
        catch android.os.RemoteException from label17 to label18 with label30;
        catch java.lang.Throwable from label16 to label20 with label12;
        catch android.os.RemoteException from label22 to label23 with label32;
        catch java.lang.Throwable from label21 to label23 with label12;
        catch java.lang.Throwable from label23 to label24 with label12;
        catch java.lang.Throwable from label25 to label29 with label12;
        catch java.lang.Throwable from label30 to label31 with label12;
    }

    public void toggleSoftInput(int, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        int $i0, $i1;
        com.android.internal.view.IInputMethodSession $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r1 == null goto label4;

        $r1 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputMethodSession: void toggleSoftInput(int,int)>($i0, $i1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void toggleSoftInputFromWindow(android.os.IBinder, int, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1, $r3;
        int $i0, $i1;
        android.view.inputmethod.InputMethodManager$H $r2;
        android.view.View $r4;
        com.android.internal.view.IInputMethodSession $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label01:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == null goto label02;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r3 = virtualinvoke $r4.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r3 == $r1 goto label04;

     label02:
        exitmonitor $r2;

     label03:
        return;

     label04:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label05:
        if $r5 == null goto label08;

     label06:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label07:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void toggleSoftInput(int,int)>($i0, $i1);

     label08:
        exitmonitor $r2;

     label09:
        return;

     label10:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void updateCursor(android.view.View, int, int, int, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r3;
        int $i0, $i1, $i2, $i3;
        android.view.inputmethod.InputMethodManager$H $r2;
        boolean $z0;
        android.view.inputmethod.EditorInfo $r4;
        com.android.internal.view.IInputMethodSession $r5;
        android.graphics.Rect $r6, $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == $r1 goto label02;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == null goto label03;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 == 0 goto label03;

     label02:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r4 == null goto label03;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r5 != null goto label05;

     label03:
        exitmonitor $r2;

     label04:
        return;

     label05:
        $r6 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r6 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        $r7 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        $z0 = virtualinvoke $r6.<android.graphics.Rect: boolean equals(java.lang.Object)>($r7);

     label06:
        if $z0 != 0 goto label11;

     label07:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r6 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

     label08:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void updateCursor(android.graphics.Rect)>($r6);

     label09:
        $r6 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

     label10:
        $r7 = $r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r7);

     label11:
        exitmonitor $r2;

     label12:
        return;

     label13:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label14:
        throw $r8;

     label15:
        $r9 := @caughtexception;

     label16:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r11 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r11, $r9);

     label17:
        goto label11;

        catch java.lang.Throwable from label01 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch android.os.RemoteException from label08 to label09 with label15;
        catch android.os.RemoteException from label10 to label11 with label15;
        catch java.lang.Throwable from label07 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label16 to label17 with label13;
    }

    public void updateExtractedText(android.view.View, int, android.view.inputmethod.ExtractedText)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r4;
        int $i0;
        android.view.inputmethod.ExtractedText $r2;
        android.view.inputmethod.InputMethodManager$H $r3;
        boolean $z0;
        com.android.internal.view.IInputMethodSession $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.inputmethod.ExtractedText;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label01:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == $r1 goto label04;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == null goto label02;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r4.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 != 0 goto label04;

     label02:
        exitmonitor $r3;

     label03:
        return;

     label04:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label05:
        if $r5 == null goto label08;

     label06:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

     label07:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>($i0, $r2);

     label08:
        exitmonitor $r3;

     label09:
        return;

     label10:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void updateSelection(android.view.View, int, int, int, int)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.view.View $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.inputmethod.InputMethodManager$H $r2;
        boolean $z0;
        android.view.inputmethod.EditorInfo $r4;
        com.android.internal.view.IInputMethodSession $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == $r1 goto label02;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r3 == null goto label03;

        $r3 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>($r1);

        if $z0 == 0 goto label03;

     label02:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r4 == null goto label03;

        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r5 != null goto label05;

     label03:
        exitmonitor $r2;

     label04:
        return;

     label05:
        $i4 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart>;

        if $i4 != $i0 goto label07;

        $i4 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd>;

        if $i4 != $i1 goto label07;

        $i4 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart>;

        if $i4 != $i2 goto label07;

        $i4 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd>;

     label06:
        if $i4 == $i3 goto label10;

     label07:
        $r5 = $r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $i4 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart>;

        $i5 = $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd>;

     label08:
        interfaceinvoke $r5.<com.android.internal.view.IInputMethodSession: void updateSelection(int,int,int,int,int,int)>($i4, $i5, $i0, $i1, $i2, $i3);

     label09:
        $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart> = $i0;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd> = $i1;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart> = $i2;

        $r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd> = $i3;

     label10:
        exitmonitor $r2;

     label11:
        return;

     label12:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r6;

     label14:
        $r7 := @caughtexception;

     label15:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r9 = $r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r9, $r7);

     label16:
        goto label10;

        catch java.lang.Throwable from label01 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch android.os.RemoteException from label08 to label09 with label14;
        catch java.lang.Throwable from label07 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    public void windowDismissed(android.os.IBinder)
    {
        android.view.inputmethod.InputMethodManager $r0;
        android.os.IBinder $r1, $r3;
        android.view.inputmethod.InputMethodManager$H $r2;
        android.view.View $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 := @parameter0: android.os.IBinder;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r2 = $r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == null goto label2;

        $r4 = $r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r3 = virtualinvoke $r4.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r3 != $r1 goto label2;

        virtualinvoke $r0.<android.view.inputmethod.InputMethodManager: void finishInputLocked()>();

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
