public abstract class android.location.LocationProviderImpl extends android.location.LocationProvider
{
    private static final java.lang.String TAG;
    private static java.util.ArrayList sProviders;
    private static java.util.HashMap sProvidersByName;
    private boolean mLocationTracking;
    private long mMinTime;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.HashMap $r1;

        <android.location.LocationProviderImpl: java.lang.String TAG> = "LocationProviderImpl";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <android.location.LocationProviderImpl: java.util.ArrayList sProviders> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.location.LocationProviderImpl: java.util.HashMap sProvidersByName> = $r1;

        return;
    }

    protected void <init>(java.lang.String)
    {
        android.location.LocationProviderImpl $r0;
        java.lang.String $r1;

        $r0 := @this: android.location.LocationProviderImpl;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<android.location.LocationProvider: void <init>(java.lang.String)>($r1);

        $r0.<android.location.LocationProviderImpl: boolean mLocationTracking> = 0;

        $r0.<android.location.LocationProviderImpl: long mMinTime> = 0L;

        return;
    }

    public static void addProvider(android.location.LocationProviderImpl)
    {
        android.location.LocationProviderImpl $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: android.location.LocationProviderImpl;

        $r2 = <android.location.LocationProviderImpl: java.util.ArrayList sProviders>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $r3 = <android.location.LocationProviderImpl: java.util.HashMap sProvidersByName>;

        $r1 = virtualinvoke $r0.<android.location.LocationProvider: java.lang.String getName()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);

        return;
    }

    public static android.location.LocationProviderImpl getProvider(java.lang.String)
    {
        java.util.HashMap $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        android.location.LocationProviderImpl $r3;

        $r2 := @parameter0: java.lang.String;

        $r0 = <android.location.LocationProviderImpl: java.util.HashMap sProvidersByName>;

        $r1 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r3 = (android.location.LocationProviderImpl) $r1;

        return $r3;
    }

    public static java.util.List getProviders()
    {
        java.util.ArrayList $r0, $r1;

        $r0 = new java.util.ArrayList;

        $r1 = <android.location.LocationProviderImpl: java.util.ArrayList sProviders>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        return $r0;
    }

    public static android.location.LocationProviderImpl loadFromClass(java.io.File)
    {
        java.io.File $r0;
        java.io.BufferedReader $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r5;
        java.io.FileReader $r4;
        java.lang.Class $r6;
        java.lang.Object $r7;
        android.location.LocationProviderImpl $r8;
        java.io.IOException $r9;
        java.lang.IllegalAccessException $r10;
        java.lang.InstantiationException $r11;
        java.lang.ClassNotFoundException $r12;
        java.lang.ClassCastException $r13;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading class specifier file ");

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationProviderImpl", $r3);

        $r3 = null;

        $r1 = new java.io.BufferedReader;

        $r4 = new java.io.FileReader;

     label02:
        specialinvoke $r4.<java.io.FileReader: void <init>(java.io.File)>($r0);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r4, 8192);

        $r5 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = $r5;

        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading provider class ");

        $r5 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationProviderImpl", $r5);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

     label03:
        $r8 = (android.location.LocationProviderImpl) $r7;

     label04:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got provider instance ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationProviderImpl", $r5);

     label05:
        return $r8;

     label06:
        $r9 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException loading config file ");

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderImpl", $r3, $r9);

     label07:
        return null;

     label08:
        $r10 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException loading class ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderImpl", $r3, $r10);

        goto label07;

     label09:
        $r11 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstantiationException loading class ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderImpl", $r3, $r11);

        goto label07;

     label10:
        $r12 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassNotFoundException loading class ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderImpl", $r3, $r12);

        goto label07;

     label11:
        $r13 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassCastException loading class ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderImpl", $r3, $r13);

        goto label07;

        catch java.io.IOException from label02 to label03 with label06;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.IllegalAccessException from label02 to label03 with label08;
        catch java.lang.IllegalAccessException from label04 to label05 with label08;
        catch java.lang.InstantiationException from label02 to label03 with label09;
        catch java.lang.InstantiationException from label04 to label05 with label09;
        catch java.lang.ClassNotFoundException from label02 to label03 with label10;
        catch java.lang.ClassNotFoundException from label04 to label05 with label10;
        catch java.lang.ClassCastException from label02 to label05 with label11;
    }

    public static void removeProvider(android.location.LocationProviderImpl)
    {
        android.location.LocationProviderImpl $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: android.location.LocationProviderImpl;

        $r2 = <android.location.LocationProviderImpl: java.util.ArrayList sProviders>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r0);

        $r3 = <android.location.LocationProviderImpl: java.util.HashMap sProvidersByName>;

        $r1 = virtualinvoke $r0.<android.location.LocationProvider: java.lang.String getName()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public abstract void disable();

    public abstract void enable();

    public void enableLocationTracking(boolean)
    {
        android.location.LocationProviderImpl $r0;
        boolean $z0;

        $r0 := @this: android.location.LocationProviderImpl;

        $z0 := @parameter0: boolean;

        $r0.<android.location.LocationProviderImpl: boolean mLocationTracking> = $z0;

        return;
    }

    public abstract boolean getLocation(android.location.Location);

    public long getMinTime()
    {
        android.location.LocationProviderImpl $r0;
        long l0;

        $r0 := @this: android.location.LocationProviderImpl;

        l0 = $r0.<android.location.LocationProviderImpl: long mMinTime>;

        return l0;
    }

    public int getStatus()
    {
        android.location.LocationProviderImpl $r0;
        int $i0;

        $r0 := @this: android.location.LocationProviderImpl;

        $i0 = virtualinvoke $r0.<android.location.LocationProviderImpl: int getStatus(android.os.Bundle)>(null);

        return $i0;
    }

    public abstract int getStatus(android.os.Bundle);

    public long getStatusUpdateTime()
    {
        android.location.LocationProviderImpl $r0;

        $r0 := @this: android.location.LocationProviderImpl;

        return 0L;
    }

    public abstract boolean isEnabled();

    public boolean isLocationTracking()
    {
        android.location.LocationProviderImpl $r0;
        boolean z0;

        $r0 := @this: android.location.LocationProviderImpl;

        z0 = $r0.<android.location.LocationProviderImpl: boolean mLocationTracking>;

        return z0;
    }

    public boolean sendExtraCommand(java.lang.String, android.os.Bundle)
    {
        android.location.LocationProviderImpl $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.location.LocationProviderImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public void setMinTime(long)
    {
        android.location.LocationProviderImpl $r0;
        long $l0;

        $r0 := @this: android.location.LocationProviderImpl;

        $l0 := @parameter0: long;

        $r0.<android.location.LocationProviderImpl: long mMinTime> = $l0;

        return;
    }

    public void updateCellState(com.android.internal.location.CellState)
    {
        android.location.LocationProviderImpl $r0;
        com.android.internal.location.CellState $r1;

        $r0 := @this: android.location.LocationProviderImpl;

        $r1 := @parameter0: com.android.internal.location.CellState;

        return;
    }

    public void updateNetworkState(int)
    {
        android.location.LocationProviderImpl $r0;
        int $i0;

        $r0 := @this: android.location.LocationProviderImpl;

        $i0 := @parameter0: int;

        return;
    }
}
