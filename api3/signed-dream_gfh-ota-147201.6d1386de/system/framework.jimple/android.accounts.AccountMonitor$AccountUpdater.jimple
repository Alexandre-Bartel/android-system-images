class android.accounts.AccountMonitor$AccountUpdater extends java.lang.Thread
{
    private android.os.IBinder mService;
    final android.accounts.AccountMonitor this$0;

    public void <init>(android.accounts.AccountMonitor, android.os.IBinder)
    {
        android.accounts.AccountMonitor$AccountUpdater $r0;
        android.accounts.AccountMonitor $r1;
        android.os.IBinder $r2;

        $r0 := @this: android.accounts.AccountMonitor$AccountUpdater;

        $r1 := @parameter0: android.accounts.AccountMonitor;

        $r2 := @parameter1: android.os.IBinder;

        $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<android.accounts.AccountMonitor$AccountUpdater: android.os.IBinder mService> = $r2;

        return;
    }

    public void run()
    {
        android.accounts.AccountMonitor$AccountUpdater $r0;
        android.os.IBinder $r1;
        android.accounts.IAccountsService $r2;
        java.lang.String[] $r3;
        android.accounts.AccountMonitor $r4, $r5;
        int $i0;
        android.content.Context $r6;
        android.accounts.AccountMonitorListener $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.database.SQLException $r10;

        $r0 := @this: android.accounts.AccountMonitor$AccountUpdater;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $r1 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.os.IBinder mService>;

        $r2 = staticinvoke <android.accounts.IAccountsService$Stub: android.accounts.IAccountsService asInterface(android.os.IBinder)>($r1);

     label01:
        $r3 = interfaceinvoke $r2.<android.accounts.IAccountsService: java.lang.String[] getAccounts()>();

     label02:
        $r4 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0>;

        entermonitor $r4;

     label03:
        $r5 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0>;

        staticinvoke <android.accounts.AccountMonitor: int access$006(android.accounts.AccountMonitor)>($r5);

        $r5 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0>;

        $i0 = staticinvoke <android.accounts.AccountMonitor: int access$000(android.accounts.AccountMonitor)>($r5);

        if $i0 != 0 goto label08;

        exitmonitor $r4;

     label04:
        $r4 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0>;

        $r6 = staticinvoke <android.accounts.AccountMonitor: android.content.Context access$100(android.accounts.AccountMonitor)>($r4);

        $r4 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0>;

        virtualinvoke $r6.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

        $r4 = $r0.<android.accounts.AccountMonitor$AccountUpdater: android.accounts.AccountMonitor this$0>;

     label05:
        $r7 = staticinvoke <android.accounts.AccountMonitor: android.accounts.AccountMonitorListener access$200(android.accounts.AccountMonitor)>($r4);

        interfaceinvoke $r7.<android.accounts.AccountMonitorListener: void onAccountsUpdated(java.lang.String[])>($r3);

     label06:
        return;

     label07:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountMonitor", "Remote exception when getting accounts", $r8);

        return;

     label08:
        exitmonitor $r4;

     label09:
        goto label01;

     label10:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r9;

     label12:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountMonitor", "Can\'t update accounts", $r10);

        return;

        catch android.os.RemoteException from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.database.SQLException from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }
}
