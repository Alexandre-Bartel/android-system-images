public class org.apache.harmony.security.utils.JarUtils extends java.lang.Object
{
    private static final int[] MESSAGE_DIGEST_OID;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[7];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 840;

        $r0[3] = 113549;

        $r0[4] = 1;

        $r0[5] = 9;

        $r0[6] = 4;

        <org.apache.harmony.security.utils.JarUtils: int[] MESSAGE_DIGEST_OID> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.security.utils.JarUtils $r0;

        $r0 := @this: org.apache.harmony.security.utils.JarUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate, java.security.cert.X509Certificate[])
    {
        java.security.cert.X509Certificate[] $r0;
        java.util.LinkedList $r1;
        java.security.cert.X509Certificate $r2;
        java.security.Principal $r3, $r4;
        boolean $z0;
        java.lang.Object[] $r5;
        int $i0;

        $r2 := @parameter0: java.security.cert.X509Certificate;

        $r0 := @parameter1: java.security.cert.X509Certificate[];

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r1.<java.util.LinkedList: void add(int,java.lang.Object)>(0, $r2);

        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r4 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r0 = newarray (java.security.cert.X509Certificate)[1];

        $r5 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r0);

        $r0 = (java.security.cert.X509Certificate[]) $r5;

        $r0 = (java.security.cert.X509Certificate[]) $r0;

        return $r0;

     label1:
        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $i0 = 1;

     label2:
        $r2 = staticinvoke <org.apache.harmony.security.utils.JarUtils: java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[])>($r3, $r0);

        if $r2 != null goto label4;

     label3:
        $r0 = newarray (java.security.cert.X509Certificate)[$i0];

        $r5 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r0);

        $r0 = (java.security.cert.X509Certificate[]) $r5;

        $r0 = (java.security.cert.X509Certificate[]) $r0;

        return $r0;

     label4:
        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r4 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        goto label2;
    }

    private static java.security.cert.X509Certificate findCert(java.security.Principal, java.security.cert.X509Certificate[])
    {
        java.security.Principal $r0, $r3;
        java.security.cert.X509Certificate[] $r1;
        int $i0, $i1;
        java.security.cert.X509Certificate $r2;
        boolean $z0;

        $r0 := @parameter0: java.security.Principal;

        $r1 := @parameter1: java.security.cert.X509Certificate[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r2 = $r1[$i0];

        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r2 = $r1[$i0];

        return $r2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public static java.security.cert.Certificate[] verifySignature(java.io.InputStream, java.io.InputStream) throws java.io.IOException, java.security.GeneralSecurityException
    {
        java.io.InputStream $r0, $r1;
        org.apache.harmony.security.asn1.BerInputStream $r2;
        org.apache.harmony.security.asn1.ASN1Sequence $r3;
        java.lang.Object $r4;
        org.apache.harmony.security.pkcs7.ContentInfo $r5;
        org.apache.harmony.security.pkcs7.SignedData $r6;
        java.io.IOException $r7;
        java.lang.String $r8, $r21;
        java.util.List $r9;
        boolean $z0;
        int $i0, $i1, $i2;
        java.security.cert.X509Certificate[] $r10;
        java.util.Iterator $r11;
        org.apache.harmony.security.provider.cert.X509CertImpl $r12;
        org.apache.harmony.security.x509.Certificate $r13;
        org.apache.harmony.security.pkcs7.SignerInfo $r14;
        javax.security.auth.x500.X500Principal $r15;
        java.math.BigInteger $r16, $r19;
        java.security.cert.X509Certificate $r17;
        java.security.Principal $r18;
        java.lang.SecurityException $r20;
        java.lang.StringBuilder $r22;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSignature $r23;
        java.security.NoSuchAlgorithmException $r24, $r26;
        byte[] $r25, $r27;
        org.apache.harmony.security.x501.AttributeTypeAndValue $r28;
        org.apache.harmony.security.utils.ObjectIdentifier $r29;
        int[] $r30, $r31;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.InputStream;

        $r2 = new org.apache.harmony.security.asn1.BerInputStream;

        specialinvoke $r2.<org.apache.harmony.security.asn1.BerInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r2);

        $r5 = (org.apache.harmony.security.pkcs7.ContentInfo) $r4;

        $r6 = virtualinvoke $r5.<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()>();

        if $r6 != null goto label01;

        $r7 = new java.io.IOException;

        $r8 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.173");

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label01:
        $r9 = virtualinvoke $r6.<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()>();

        $z0 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        return null;

     label02:
        $i0 = interfaceinvoke $r9.<java.util.Collection: int size()>();

        $r10 = newarray (java.security.cert.X509Certificate)[$i0];

        $r11 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label03:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r12 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        $r4 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.apache.harmony.security.x509.Certificate) $r4;

        specialinvoke $r12.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(org.apache.harmony.security.x509.Certificate)>($r13);

        $r10[$i0] = $r12;

        $i0 = $i0 + 1;

        goto label03;

     label04:
        $r9 = virtualinvoke $r6.<org.apache.harmony.security.pkcs7.SignedData: java.util.List getSignerInfos()>();

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label07;

        $r4 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (org.apache.harmony.security.pkcs7.SignerInfo) $r4;

        $r15 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: javax.security.auth.x500.X500Principal getIssuer()>();

        $r16 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: java.math.BigInteger getSerialNumber()>();

        $i0 = 0;

     label05:
        $i1 = lengthof $r10;

        if $i0 >= $i1 goto label24;

        $r17 = $r10[$i0];

        $r18 = virtualinvoke $r17.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r15.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r18);

        if $z0 == 0 goto label08;

        $r17 = $r10[$i0];

        $r19 = virtualinvoke $r17.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $z0 = virtualinvoke $r16.<java.math.BigInteger: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label08;

        $i1 = $i0;

     label06:
        $i2 = lengthof $r10;

        if $i0 != $i2 goto label09;

        return null;

     label07:
        return null;

     label08:
        $i0 = $i0 + 1;

        goto label05;

     label09:
        $r17 = $r10[$i1];

        $z0 = virtualinvoke $r17.<java.security.cert.X509Certificate: boolean hasUnsupportedCriticalExtension()>();

        if $z0 == 0 goto label10;

        $r20 = new java.lang.SecurityException;

        $r8 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.174");

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r20;

     label10:
        $r8 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getdigestAlgorithm()>();

        $r21 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithm()>();

        if $r8 == null goto label23;

        if $r21 == null goto label23;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with");

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r23 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLSignature: org.apache.harmony.xnet.provider.jsse.OpenSSLSignature getInstance(java.lang.String)>($r21);

     label12:
        if $r23 != null goto label22;

        if $r8 != null goto label14;

        return null;

     label13:
        $r24 := @caughtexception;

        $r23 = null;

        goto label12;

     label14:
        $r23 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLSignature: org.apache.harmony.xnet.provider.jsse.OpenSSLSignature getInstance(java.lang.String)>($r8);

     label15:
        $r17 = $r10[$i1];

        virtualinvoke $r23.<java.security.Signature: void initVerify(java.security.cert.Certificate)>($r17);

        $r9 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()>();

        $i0 = virtualinvoke $r0.<java.io.InputStream: int available()>();

        $r25 = newarray (byte)[$i0];

        virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r25);

        if $r9 != null goto label18;

        virtualinvoke $r23.<java.security.Signature: void update(byte[])>($r25);

     label16:
        $r25 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncryptedDigest()>();

        $z0 = virtualinvoke $r23.<java.security.Signature: boolean verify(byte[])>($r25);

        if $z0 != 0 goto label21;

        $r20 = new java.lang.SecurityException;

        $r8 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.176");

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r20;

     label17:
        $r26 := @caughtexception;

        return null;

     label18:
        $r27 = virtualinvoke $r14.<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()>();

        virtualinvoke $r23.<java.security.Signature: void update(byte[])>($r27);

        $r11 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r4 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (org.apache.harmony.security.x501.AttributeTypeAndValue) $r4;

        $r29 = virtualinvoke $r28.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>();

        $r30 = virtualinvoke $r29.<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()>();

        $r31 = <org.apache.harmony.security.utils.JarUtils: int[] MESSAGE_DIGEST_OID>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r30, $r31);

        if $z0 == 0 goto label19;

        goto label19;

     label20:
        goto label16;

     label21:
        $r17 = $r10[$i1];

        $r10 = staticinvoke <org.apache.harmony.security.utils.JarUtils: java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[])>($r17, $r10);

        return $r10;

     label22:
        goto label15;

     label23:
        $r23 = null;

        goto label12;

     label24:
        $i1 = 0;

        goto label06;

        catch java.security.NoSuchAlgorithmException from label11 to label12 with label13;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label17;
    }
}
