public class org.bouncycastle.crypto.generators.BaseKDFBytesGenerator extends java.lang.Object implements org.bouncycastle.crypto.DerivationFunction
{
    private int counterStart;
    private org.bouncycastle.crypto.Digest digest;
    private byte[] iv;
    private byte[] shared;

    protected void <init>(int, org.bouncycastle.crypto.Digest)
    {
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator $r0;
        int $i0;
        org.bouncycastle.crypto.Digest $r1;

        $r0 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.bouncycastle.crypto.Digest;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: int counterStart> = $i0;

        $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest> = $r1;

        return;
    }

    public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator $r0;
        byte[] $r1, $r5, $r6, $r7;
        int $i0, $i2, $i3, $i4, $i7, $i8, $i9;
        long $l1, $l6;
        org.bouncycastle.crypto.DataLengthException $r2;
        org.bouncycastle.crypto.Digest $r3;
        byte $b5;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        $r1 := @parameter0: byte[];

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i0 = lengthof $r1;

        $i0 = $i0 - $i3;

        if $i0 >= $i2 goto label1;

        $r2 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r2.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too small");

        throw $r2;

     label1:
        $l1 = (long) $i3;

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i4 = interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $b5 = $l1 cmp 8589934591L;

        if $b5 <= 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output length too large");

        throw $r4;

     label2:
        $l6 = (long) $i4;

        $l1 = $l6 + $l1;

        $l1 = $l1 - 1L;

        $l6 = (long) $i4;

        $l1 = $l1 / $l6;

        $i0 = (int) $l1;

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i7 = interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r5 = newarray (byte)[$i7];

        $i7 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: int counterStart>;

        $i8 = 0;

     label3:
        if $i8 >= $i0 goto label7;

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $r6 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared>;

        $r7 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared>;

        $i9 = lengthof $r7;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r6, 0, $i9);

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i9 = $i7 >> 24;

        $b5 = (byte) $i9;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte)>($b5);

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i9 = $i7 >> 16;

        $b5 = (byte) $i9;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte)>($b5);

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i9 = $i7 >> 8;

        $b5 = (byte) $i9;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte)>($b5);

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $b5 = (byte) $i7;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte)>($b5);

        $r6 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv>;

        if $r6 == null goto label4;

        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $r6 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv>;

        $r7 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv>;

        $i9 = lengthof $r7;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r6, 0, $i9);

     label4:
        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r5, 0);

        if $i3 <= $i4 goto label6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r1, $i2, $i4);

        $i2 = $i2 + $i4;

        $i3 = $i3 - $i4;

     label5:
        $i7 = $i7 + 1;

        $i8 = $i8 + 1;

        goto label3;

     label6:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r1, $i2, $i3);

        goto label5;

     label7:
        $r3 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void reset()>();

        return $i3;
    }

    public org.bouncycastle.crypto.Digest getDigest()
    {
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator $r0;
        org.bouncycastle.crypto.Digest r1;

        $r0 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        r1 = $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: org.bouncycastle.crypto.Digest digest>;

        return r1;
    }

    public void init(org.bouncycastle.crypto.DerivationParameters)
    {
        org.bouncycastle.crypto.generators.BaseKDFBytesGenerator $r0;
        org.bouncycastle.crypto.DerivationParameters $r1;
        boolean $z0;
        org.bouncycastle.crypto.params.KDFParameters $r2;
        byte[] $r3;
        org.bouncycastle.crypto.params.ISO18033KDFParameters $r4;
        java.lang.IllegalArgumentException $r5;

        $r0 := @this: org.bouncycastle.crypto.generators.BaseKDFBytesGenerator;

        $r1 := @parameter0: org.bouncycastle.crypto.DerivationParameters;

        $z0 = $r1 instanceof org.bouncycastle.crypto.params.KDFParameters;

        if $z0 == 0 goto label1;

        $r2 = (org.bouncycastle.crypto.params.KDFParameters) $r1;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.KDFParameters: byte[] getSharedSecret()>();

        $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared> = $r3;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.KDFParameters: byte[] getIV()>();

        $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv> = $r3;

        return;

     label1:
        $z0 = $r1 instanceof org.bouncycastle.crypto.params.ISO18033KDFParameters;

        if $z0 == 0 goto label2;

        $r4 = (org.bouncycastle.crypto.params.ISO18033KDFParameters) $r1;

        $r3 = virtualinvoke $r4.<org.bouncycastle.crypto.params.ISO18033KDFParameters: byte[] getSeed()>();

        $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] shared> = $r3;

        $r0.<org.bouncycastle.crypto.generators.BaseKDFBytesGenerator: byte[] iv> = null;

        return;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("KDF parameters required for KDF2Generator");

        throw $r5;
    }
}
