class org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3 extends java.lang.Object implements java.security.PrivilegedAction
{
    final org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection this$0;
    final java.lang.String val$externalForm;
    final java.io.InputStream val$is;

    void <init>(org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection, java.io.InputStream, java.lang.String)
    {
        org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3 $r0;
        org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection $r1;
        java.io.InputStream $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3;

        $r1 := @parameter0: org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.lang.String;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection this$0> = $r1;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: java.io.InputStream val$is> = $r2;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: java.lang.String val$externalForm> = $r3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object run()
    {
        org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3 $r0;
        java.util.jar.JarFile $r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: java.util.jar.JarFile run()>();

        return $r1;
    }

    public java.util.jar.JarFile run()
    {
        org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3 $r0;
        byte[] $r1;
        java.io.FileOutputStream $r2;
        java.io.File $r3;
        java.io.InputStream $r4;
        int $i0;
        java.io.IOException $r5;
        java.lang.String $r6, $r8;
        org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection $r7;
        java.util.jar.JarFile $r9;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3;

     label1:
        $r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("hyjar_", ".tmp", null);

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label2:
        $r1 = newarray (byte)[4096];

     label3:
        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: java.io.InputStream val$is>;

        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r1);

        if $i0 <= -1 goto label6;

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label4:
        goto label3;

     label5:
        $r5 := @caughtexception;

        return null;

     label6:
        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        $r6 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

     label7:
        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection this$0>;

     label8:
        $r8 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection$3: java.lang.String val$externalForm>;

        $r9 = virtualinvoke $r7.<org.apache.harmony.luni.internal.net.www.protocol.jar.JarURLConnection: java.util.jar.JarFile openJarFile(java.lang.String,java.lang.String,boolean)>($r6, $r8, 1);

     label9:
        return $r9;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.io.IOException from label6 to label7 with label5;
        catch java.io.IOException from label8 to label9 with label5;
    }
}
