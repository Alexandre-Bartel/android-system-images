class org.apache.harmony.xml.parsers.SAXParserImpl extends javax.xml.parsers.SAXParser
{
    private org.xml.sax.Parser parser;
    private org.xml.sax.XMLReader reader;

    void <init>(java.util.Map) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;
        java.util.Map $r1;
        org.xml.sax.XMLReader $r2;
        org.apache.harmony.xml.ExpatReader $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        java.lang.String $r8;
        java.lang.Boolean $r9;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r1 := @parameter0: java.util.Map;

        specialinvoke $r0.<javax.xml.parsers.SAXParser: void <init>()>();

        $r3 = new org.apache.harmony.xml.ExpatReader;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader> = $r3;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r2 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>($r8, $z0);

        goto label1;

     label2:
        return;
    }

    public org.xml.sax.Parser getParser()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;
        org.xml.sax.XMLReader $r1;
        org.xml.sax.Parser $r2;
        org.xml.sax.helpers.XMLReaderAdapter $r3;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r2 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser parser>;

        if $r2 != null goto label1;

        $r3 = new org.xml.sax.helpers.XMLReaderAdapter;

        $r1 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        specialinvoke $r3.<org.xml.sax.helpers.XMLReaderAdapter: void <init>(org.xml.sax.XMLReader)>($r1);

        $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser parser> = $r3;

     label1:
        $r2 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser parser>;

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.xml.sax.XMLReader $r3;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        $r2 = interfaceinvoke $r3.<org.xml.sax.XMLReader: java.lang.Object getProperty(java.lang.String)>($r1);

        return $r2;
    }

    public org.xml.sax.XMLReader getXMLReader()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;
        org.xml.sax.XMLReader r1;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        r1 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        return r1;
    }

    public boolean isNamespaceAware()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;
        boolean $z0;
        org.xml.sax.XMLReader $r1;
        org.xml.sax.SAXException $r2;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r1 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

     label1:
        $z0 = interfaceinvoke $r1.<org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/namespaces");

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public boolean isValidating()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        return 0;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.xml.sax.XMLReader $r3;

        $r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }
}
