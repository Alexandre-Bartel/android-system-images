class com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    int featureId;
    boolean isInExpandedMode;
    boolean isOpen;
    android.os.Bundle menuState;

    static void <clinit>()
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState$1 $r0;

        $r0 = new com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState$1;

        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState$1: void <init>()>();

        <com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.policy.impl.PhoneWindow$1)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r0;
        com.android.internal.policy.impl.PhoneWindow$1 $r1;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState;

        $r1 := @parameter0: com.android.internal.policy.impl.PhoneWindow$1;

        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: void <init>()>();

        return;
    }

    static com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState access$1700(android.os.Parcel)
    {
        android.os.Parcel $r0;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r1;

        $r0 := @parameter0: android.os.Parcel;

        $r1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState readFromParcel(android.os.Parcel)>($r0);

        return $r1;
    }

    private static com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState readFromParcel(android.os.Parcel)
    {
        android.os.Parcel $r0;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r1;
        int $i0;
        boolean $z0;
        android.os.Bundle $r2;

        $r0 := @parameter0: android.os.Parcel;

        $r1 = new com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState;

        specialinvoke $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: void <init>()>();

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: int featureId> = $i0;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label3;

        $z0 = 1;

     label1:
        $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isOpen> = $z0;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label4;

        $z0 = 1;

     label2:
        $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isInExpandedMode> = $z0;

        $z0 = $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isOpen>;

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke $r0.<android.os.Parcel: android.os.Bundle readBundle()>();

        $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: android.os.Bundle menuState> = $r2;

        return $r1;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        return $r1;
    }

    public int describeContents()
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r0;
        android.os.Parcel $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        android.os.Bundle $r2;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: int featureId>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $z0 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isOpen>;

        if $z0 == 0 goto label3;

        $b1 = 1;

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

        $z0 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isInExpandedMode>;

        if $z0 == 0 goto label4;

        $b1 = 1;

     label2:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

        $z0 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isOpen>;

        if $z0 == 0 goto label5;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: android.os.Bundle menuState>;

        virtualinvoke $r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r2);

        return;

     label3:
        $b1 = 0;

        goto label1;

     label4:
        $b1 = 0;

        goto label2;

     label5:
        return;
    }
}
