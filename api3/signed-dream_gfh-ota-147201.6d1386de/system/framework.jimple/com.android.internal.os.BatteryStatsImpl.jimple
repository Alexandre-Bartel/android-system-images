public final class com.android.internal.os.BatteryStatsImpl extends android.os.BatteryStats
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final int MAGIC;
    private static final java.lang.String TAG;
    private static final int VERSION;
    private final java.io.File mBackupFile;
    long mBatteryLastRealtime;
    long mBatteryLastUptime;
    long mBatteryRealtime;
    long mBatteryUptime;
    boolean mBluetoothOn;
    com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer;
    private final java.io.File mFile;
    final java.util.ArrayList mFullTimers;
    com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter;
    long mLastRealtime;
    long mLastUptime;
    long mLastWriteTime;
    boolean mOnBattery;
    boolean mOnBatteryInternal;
    final java.util.ArrayList mPartialTimers;
    int mPhoneDataConnectionType;
    final com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer;
    boolean mPhoneOn;
    com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer;
    int mPhoneSignalStrengthBin;
    final com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer;
    int mPluggedStartLevel;
    long mRealtime;
    long mRealtimeStart;
    int mScreenBrightnessBin;
    final com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer;
    boolean mScreenOn;
    com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer;
    final android.util.SparseArray mSensorTimers;
    int mStartCount;
    long mTrackBatteryPastRealtime;
    long mTrackBatteryPastUptime;
    long mTrackBatteryRealtimeStart;
    long mTrackBatteryUptimeStart;
    final android.util.SparseArray mUidStats;
    final java.util.ArrayList mUnpluggables;
    long mUnpluggedBatteryRealtime;
    long mUnpluggedBatteryUptime;
    int mUnpluggedStartLevel;
    long mUptime;
    long mUptimeStart;
    boolean mWifiOn;
    com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer;
    int mWifiOnUid;
    boolean mWifiRunning;
    com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer;
    final java.util.ArrayList mWindowTimers;

    static void <clinit>()
    {
        com.android.internal.os.BatteryStatsImpl$1 $r0;

        <com.android.internal.os.BatteryStatsImpl: int VERSION> = 32;

        <com.android.internal.os.BatteryStatsImpl: java.lang.String TAG> = "BatteryStatsImpl";

        <com.android.internal.os.BatteryStatsImpl: int MAGIC> = -1166707595;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG> = 0;

        $r0 = new com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$1: void <init>()>();

        <com.android.internal.os.BatteryStatsImpl: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.util.SparseArray $r1;
        java.util.ArrayList $r2;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        specialinvoke $r0.<android.os.BatteryStats: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r2;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables> = $r2;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r3 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer> = $r3;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        $r3 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer> = $r3;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r3 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer> = $r3;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile> = null;

        $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile> = null;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;
        android.util.SparseArray $r2;
        java.util.ArrayList $r3;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<android.os.BatteryStats: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r3;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables> = $r3;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile> = null;

        $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile> = null;

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        java.lang.String $r1;
        android.util.SparseArray $r2;
        java.util.ArrayList $r3;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r4;
        java.io.File $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r7;
        com.android.internal.os.BatteryStatsImpl$Counter $r8;
        long $l2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<android.os.BatteryStats: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r3;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables> = $r3;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$Timer)[5];

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile> = $r5;

        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile> = $r5;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i0;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(-1, null, $r3);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer> = $r7;

        $i0 = 0;

     label1:
        if $i0 >= 5 goto label2;

        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $i1 = -100 - $i0;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>($i1, null, $r3);

        $r4[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r8 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList)>($r3);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter> = $r8;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(-2, null, $r3);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer> = $r7;

        $i0 = 0;

     label3:
        if $i0 >= 5 goto label4;

        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $i1 = -200 - $i0;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>($i1, null, $r3);

        $r4[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = 0;

     label5:
        if $i0 >= 5 goto label6;

        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $i1 = -300 - $i0;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>($i1, null, $r3);

        $r4[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(-3, null, $r3);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer> = $r7;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(-4, null, $r3);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer> = $r7;

        $r7 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList)>(-5, null, $r3);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer> = $r7;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = 0;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = 0L;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = 0L;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l2 * 1000L;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = $l2;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = $l2;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l2 * 1000L;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = $l2;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = $l2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l2);

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l2);

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l2;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel> = 0;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel> = 0;

        return;
    }

    static byte[] readFully(java.io.FileInputStream) throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.io.FileInputStream;

        $i0 = 0;

        $i1 = virtualinvoke $r0.<java.io.FileInputStream: int available()>();

        $r2 = newarray (byte)[$i1];

     label1:
        $i1 = lengthof $r2;

        $i1 = $i1 - $i0;

        $i1 = virtualinvoke $r0.<java.io.FileInputStream: int read(byte[],int,int)>($r2, $i0, $i1);

        if $i1 > 0 goto label2;

        return $r2;

     label2:
        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r0.<java.io.FileInputStream: int available()>();

        $i2 = lengthof $r2;

        $i2 = $i2 - $i0;

        if $i1 <= $i2 goto label1;

        $i1 = $i0 + $i1;

        $r1 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r2 = $r1;

        goto label1;
    }

    private void readSummaryFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r12;
        long $l1;
        com.android.internal.os.BatteryStatsImpl$Timer $r5;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r6;
        com.android.internal.os.BatteryStatsImpl$Counter $r7;
        android.util.SparseArray $r8;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r9;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r10;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r11;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r13;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i0 == 32 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readFromParcel: version got ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(32);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; erasing old stats");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStats", $r4);

        return;

     label01:
        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i0;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastRealtime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastRealtime> = $l1;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel> = $i0;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i0;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i0 = 0;

     label02:
        if $i0 >= 5 goto label03;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r5 = $r6[$i0];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i0 = $i0 + 1;

        goto label02;

     label03:
        $r7 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i0 = 0;

     label04:
        if $i0 >= 5 goto label05;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r5 = $r6[$i0];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i0 = $i0 + 1;

        goto label04;

     label05:
        $i0 = 0;

     label06:
        if $i0 >= 5 goto label07;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r5 = $r6[$i0];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiRunning> = 0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i2 = 0;

     label08:
        if $i2 >= $i0 goto label26;

        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r2 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>($r0, $i3);

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, $r2);

        $r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiTurnedOn> = 0;

        $r5 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 0;

        $r5 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mScanWifiLockOut> = 0;

        $r5 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label11;

        $r9 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r9 != null goto label09;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void initUserActivityLocked()>();

     label09:
        $i3 = 0;

     label10:
        if $i3 >= 7 goto label11;

        $r9 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r7 = $r9[$i3];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i3 = $i3 + 1;

        goto label10;

     label11:
        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i4 = 0;

     label12:
        if $i4 >= $i3 goto label16;

        $r4 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label13;

        $r5 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getWakeTimerLocked(java.lang.String,int)>($r4, 1);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

     label13:
        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label14;

        $r5 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getWakeTimerLocked(java.lang.String,int)>($r4, 0);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

     label14:
        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label15;

        $r5 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getWakeTimerLocked(java.lang.String,int)>($r4, 2);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

     label15:
        $i4 = $i4 + 1;

        goto label12;

     label16:
        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i4 = 0;

     label17:
        if $i4 >= $i3 goto label19;

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label18;

        $r5 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer getSensorTimerLocked(int,boolean)>($i5, 1);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>($r1);

     label18:
        $i4 = $i4 + 1;

        goto label17;

     label19:
        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i4 = 0;

     label20:
        if $i4 >= $i3 goto label21;

        $r4 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r10 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>($r4);

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime> = $l1;

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastUserTime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime> = $l1;

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastSystemTime> = $l1;

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts> = $i5;

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i5;

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLastStarts> = $i5;

        $i4 = $i4 + 1;

        goto label20;

     label21:
        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i4 = 0;

     label22:
        if $i4 >= $i3 goto label25;

        $r4 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r11 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>($r4);

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r11.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mLoadedWakeups> = $i5;

        $r11.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups> = $i5;

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r11.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mLastWakeups> = $i5;

        $i5 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $i6 = 0;

     label23:
        if $i6 >= $i5 goto label24;

        $r12 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r13 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>($r4, $r12);

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mLoadedStartTime> = $l1;

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mStartTime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mLastStartTime> = $l1;

        $i7 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedStarts> = $i7;

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts> = $i7;

        $i7 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLastStarts> = $i7;

        $i7 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedLaunches> = $i7;

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches> = $i7;

        $i7 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLastLaunches> = $i7;

        $i6 = $i6 + 1;

        goto label23;

     label24:
        $i4 = $i4 + 1;

        goto label22;

     label25:
        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r2.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesReceived> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r2.<com.android.internal.os.BatteryStatsImpl$Uid: long mLoadedTcpBytesSent> = $l1;

        $i2 = $i2 + 1;

        goto label08;

     label26:
        return;
    }

    public long computeBatteryRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l2;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime>;

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l0);

        $l0 = $l2 + $l0;

        return $l0;

     label3:
        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastRealtime>;

        return $l0;

     label4:
        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l0);

        return $l0;

     label5:
        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l0);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime>;

        $l0 = $l0 - $l2;

        return $l0;
    }

    public long computeBatteryUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l2;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime>;

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>($l0);

        $l0 = $l2 + $l0;

        return $l0;

     label3:
        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastUptime>;

        return $l0;

     label4:
        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>($l0);

        return $l0;

     label5:
        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l0);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime>;

        $l0 = $l0 - $l2;

        return $l0;
    }

    public long computeRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l2, $l3;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l0 = $l0 - $l3;

        $l0 = $l2 + $l0;

        return $l0;

     label3:
        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl: long mLastRealtime>;

        return $l0;

     label4:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l0 = $l0 - $l2;

        return $l0;

     label5:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        $l0 = $l0 - $l2;

        return $l0;
    }

    public long computeUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l2, $l3;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l0 = $l0 - $l3;

        $l0 = $l2 + $l0;

        return $l0;

     label3:
        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl: long mLastUptime>;

        return $l0;

     label4:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l0 = $l0 - $l2;

        return $l0;

     label5:
        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        $l0 = $l0 - $l2;

        return $l0;
    }

    public int describeContents()
    {
        com.android.internal.os.BatteryStatsImpl $r0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 0;
    }

    public void doPlug(long, long)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l1, $l3;
        android.util.SparseArray $r1;
        int $i2;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        byte $b4;
        java.util.ArrayList $r4;
        com.android.internal.os.BatteryStatsImpl$Unpluggable $r5;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i2 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        $i2 = $i2 - 1;

     label1:
        if $i2 < 0 goto label4;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        $l3 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesReceived>;

        $b4 = $l3 cmp 0L;

        if $b4 < 0 goto label2;

        $l3 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesReceived()>();

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesReceived> = $l3;

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesReceived> = -1L;

     label2:
        $l3 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesSent>;

        $b4 = $l3 cmp 0L;

        if $b4 < 0 goto label3;

        $l3 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesSent()>();

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesSent> = $l3;

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesSent> = -1L;

     label3:
        $i2 = $i2 + -1;

        goto label1;

     label4:
        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

     label5:
        if $i2 < 0 goto label6;

        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $r2 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (com.android.internal.os.BatteryStatsImpl$Unpluggable) $r2;

        interfaceinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Unpluggable: void plug(long,long)>($l0, $l1);

        $i2 = $i2 + -1;

        goto label5;

     label6:
        return;
    }

    public void doUnplug(long, long)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l1, $l4;
        android.util.SparseArray $r1;
        int $i2, $i3;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        java.util.ArrayList $r4;
        com.android.internal.os.BatteryStatsImpl$Unpluggable $r5;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i2 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        $i2 = $i2 - 1;

     label1:
        if $i2 < 0 goto label2;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        $i3 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        $l4 = staticinvoke <android.os.NetStat: long getUidRxBytes(int)>($i3);

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesReceived> = $l4;

        $i3 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        $l4 = staticinvoke <android.os.NetStat: long getUidTxBytes(int)>($i3);

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mStartedTcpBytesSent> = $l4;

        $l4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesReceived>;

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesReceivedAtLastUnplug> = $l4;

        $l4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurrentTcpBytesSent>;

        $r3.<com.android.internal.os.BatteryStatsImpl$Uid: long mTcpBytesSentAtLastUnplug> = $l4;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

     label3:
        if $i2 < 0 goto label4;

        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $r2 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (com.android.internal.os.BatteryStatsImpl$Unpluggable) $r2;

        interfaceinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Unpluggable: void unplug(long,long)>($l0, $l1);

        $i2 = $i2 + -1;

        goto label3;

     label4:
        return;
    }

    public void dumpLocked(android.util.Printer)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.util.Printer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.util.Printer;

        specialinvoke $r0.<android.os.BatteryStats: void dumpLocked(android.util.Printer)>($r1);

        return;
    }

    public long getAwakeTimeBattery()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>();

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>($l0, 2);

        return $l0;
    }

    public long getAwakeTimePlugged()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l0 * 1000L;

        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        $l0 = $l0 - $l1;

        return $l0;
    }

    public long getBatteryRealtime(long)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l0);

        return $l0;
    }

    long getBatteryRealtimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l1, $l2;
        boolean $z0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime>;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        $l0 = $l0 - $l2;

        $l1 = $l1 + $l0;

        return $l1;

     label1:
        return $l1;
    }

    public long getBatteryUptime(long)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l0);

        return $l0;
    }

    long getBatteryUptimeLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l0 * 1000L;

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>($l0);

        return $l0;
    }

    long getBatteryUptimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0, $l1, $l2;
        boolean $z0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime>;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        $l0 = $l0 - $l2;

        $l1 = $l1 + $l0;

        return $l1;

     label1:
        return $l1;
    }

    public long getBluetoothOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public int getInputEventCount(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Counter $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        $i0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Counter: int getCount(int)>($i0);

        return $i0;
    }

    public boolean getIsOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean z0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return z0;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.String $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>($r1);

        return $r3;
    }

    public int getPhoneDataConnectionCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[$i0];

        $i0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: int getCount(int)>($i1);

        return $i0;
    }

    public long getPhoneDataConnectionTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i2;
        long $l1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[$i0];

        $l1 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l1, $i2);

        return $l1;
    }

    public long getPhoneOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public int getPhoneSignalStrengthCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[$i0];

        $i0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: int getCount(int)>($i1);

        return $i0;
    }

    public long getPhoneSignalStrengthTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i2;
        long $l1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[$i0];

        $l1 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l1, $i2);

        return $l1;
    }

    public int getPluggedStartLevel()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor $r0;

     label1:
        $i0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: int getPluggedStartLevelLocked()>();

        exitmonitor $r0;

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getPluggedStartLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int i0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel>;

        return i0;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.String $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>($r1);

        return $r3;
    }

    public long getScreenBrightnessTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i2;
        long $l1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r2 = $r1[$i0];

        $l1 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l1, $i2);

        return $l1;
    }

    public long getScreenOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int, java.lang.String, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.String $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        $r4 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>($r1, $r2);

        return $r4;
    }

    public int getStartCount()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int i0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        return i0;
    }

    public android.util.SparseArray getUidStats()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.util.SparseArray r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        return r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.Object $r1;
        android.util.SparseArray $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r1 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r1;

        if $r3 != null goto label1;

        $r3 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>($r0, $i0);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r3);

        return $r3;

     label1:
        return $r3;
    }

    public int getUnluggedStartLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int i0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel>;

        return i0;
    }

    public int getUnpluggedStartLevel()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor $r0;

     label1:
        $i0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: int getUnluggedStartLevelLocked()>();

        exitmonitor $r0;

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getWifiOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public long getWifiRunningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        long $l0;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer>;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTime(long,int)>($l0, $i1);

        return $l0;
    }

    public boolean isOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean z0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return z0;
    }

    public void noteBluetoothOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;
    }

    public void noteBluetoothOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;
    }

    public void noteFullWifiLockAcquiredLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockAcquiredLocked()>();

        return;

     label1:
        return;
    }

    public void noteFullWifiLockReleasedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockReleasedLocked()>();

        return;

     label1:
        return;
    }

    public void noteInputEventLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        com.android.internal.os.BatteryStatsImpl$Counter $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Counter: void stepLocked()>();

        return;
    }

    public void notePhoneDataConnectionStateLocked(int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        boolean $z0;
        byte $b1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $b1 = 0;

        if $z0 == 0 goto label2;

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label6;
            default: goto label1;
        };

     label1:
        $b1 = 4;

     label2:
        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i0 == $b1 goto label7;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i0 < 0 goto label3;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        $r2 = $r1[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

     label3:
        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = $b1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[$b1];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label4:
        $b1 = 2;

        goto label2;

     label5:
        $b1 = 1;

        goto label2;

     label6:
        $b1 = 3;

        goto label2;

     label7:
        return;
    }

    public void notePhoneOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;
    }

    public void notePhoneOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;
    }

    public void notePhoneSignalStrengthLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        byte $b1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        if $i0 < 99 goto label4;

     label1:
        $b1 = 0;

     label2:
        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        if $i0 == $b1 goto label8;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        if $i0 < 0 goto label3;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        $r2 = $r1[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

     label3:
        $r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = $b1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[$b1];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label4:
        if $i0 < 16 goto label5;

        $b1 = 4;

        goto label2;

     label5:
        if $i0 < 8 goto label6;

        $b1 = 3;

        goto label2;

     label6:
        if $i0 < 4 goto label7;

        $b1 = 2;

        goto label2;

     label7:
        $b1 = 1;

        goto label2;

     label8:
        return;
    }

    public void noteScanWifiLockAcquiredLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteScanWifiLockAcquiredLocked()>();

        return;

     label1:
        return;
    }

    public void noteScanWifiLockReleasedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteScanWifiLockReleasedLocked()>();

        return;

     label1:
        return;
    }

    public void noteScreenBrightnessLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r1;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $i0 = $i0 / 51;

        if $i0 >= 0 goto label4;

        $i0 = 0;

     label1:
        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i1 == $i0 goto label5;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 == 0 goto label3;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i1 < 0 goto label2;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

     label2:
        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r2 = $r1[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

     label3:
        $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = $i0;

        return;

     label4:
        if $i0 < 5 goto label1;

        $i0 = 4;

        goto label1;

     label5:
        return;
    }

    public void noteScreenOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 0;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i0 < 0 goto label2;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r1 = $r2[$i0];

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void noteScreenOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i0 < 0 goto label2;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r1 = $r2[$i0];

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void noteStartGps(int)
    {
        int $i0;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r2 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r0 = $r2.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartGps()>();

        return;
    }

    public void noteStopGps(int)
    {
        int $i0;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r2 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r0 = $r2.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopGps()>();

        return;
    }

    public void noteUserActivityLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i1;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        if $r3 == null goto label1;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteUserActivityLocked(int)>($i1);

        return;

     label1:
        return;
    }

    public void noteWifiOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.lang.Object $r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;
        android.util.SparseArray $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

     label1:
        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        if $i0 < 0 goto label3;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        $r1 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid) $r1;

        if $r4 == null goto label2;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiTurnedOffLocked()>();

     label2:
        $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        return;

     label3:
        return;
    }

    public void noteWifiOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0, $i1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

     label1:
        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        if $i1 == $i0 goto label3;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        if $i1 < 0 goto label2;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if $r4 == null goto label2;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiTurnedOffLocked()>();

     label2:
        $r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = $i0;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if $r4 == null goto label4;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiTurnedOnLocked()>();

        return;

     label3:
        return;

     label4:
        return;
    }

    public void noteWifiRunningLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiRunning>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiRunning> = 1;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;
    }

    public void noteWifiStoppedLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiRunning>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiRunning> = 0;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>($r0);

        return;

     label1:
        return;
    }

    public void readFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcelLocked(android.os.Parcel)>($r1);

        return;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        int $i0, $i2, $i3;
        android.os.ParcelFormatException $r3;
        long $l1;
        com.android.internal.os.BatteryStatsImpl$Timer $r4;
        java.util.ArrayList $r5;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r6;
        com.android.internal.os.BatteryStatsImpl$Counter $r7;
        boolean $z0;
        android.util.SparseArray $r8;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i0 == -1166707595 goto label01;

        $r3 = new android.os.ParcelFormatException;

        specialinvoke $r3.<android.os.ParcelFormatException: void <init>(java.lang.String)>("Bad magic number");

        throw $r3;

     label01:
        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i0;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastRealtime> = $l1;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 0;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(-1, null, $r5, $r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer> = $r4;

        $i0 = 0;

     label02:
        if $i0 >= 5 goto label03;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $i2 = -100 - $i0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>($i2, null, $r5, $r1);

        $r6[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label02;

     label03:
        $r7 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList,android.os.Parcel)>($r5, $r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter> = $r7;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(-2, null, $r5, $r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer> = $r4;

        $i0 = 0;

     label04:
        if $i0 >= 5 goto label05;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $i2 = -200 - $i0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>($i2, null, $r5, $r1);

        $r6[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label04;

     label05:
        $i0 = 0;

     label06:
        if $i0 >= 5 goto label07;

        $r6 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $i2 = -300 - $i0;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>($i2, null, $r5, $r1);

        $r6[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(-2, null, $r5, $r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiRunning> = 0;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(-2, null, $r5, $r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer> = $r4;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(-2, null, $r5, $r1);

        $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer> = $r4;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastRealtime> = $l1;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $z0 = 1;

     label08:
        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = $z0;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l1;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l1;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel> = $i0;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l1;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r8.<android.util.SparseArray: void clear()>();

        $i2 = 0;

     label09:
        if $i2 >= $i0 goto label11;

        $i3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r2 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>($r0, $i3);

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>($r5, $r1);

        $r8 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r8.<android.util.SparseArray: void append(int,java.lang.Object)>($i3, $r2);

        $i2 = $i2 + 1;

        goto label09;

     label10:
        $z0 = 0;

        goto label08;

     label11:
        return;
    }

    public void readLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        java.io.File $r1;
        android.util.SparseArray $r2;
        boolean $z0;
        java.io.FileInputStream $r3;
        byte[] $r4;
        android.os.Parcel $r5;
        java.io.IOException $r6, $r7, $r8;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

        if $r1 == null goto label01;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        if $r1 != null goto label02;

     label01:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStats", "readLocked: no file associated with this instance");

        return;

     label02:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label15;

        $r3 = new java.io.FileInputStream;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

     label03:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label04:
        if $r3 != null goto label14;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

     label05:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label06:
        if $z0 == 0 goto label16;

        $r3 = new java.io.FileInputStream;

     label07:
        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label08:
        $r4 = staticinvoke <com.android.internal.os.BatteryStatsImpl: byte[] readFully(java.io.FileInputStream)>($r3);

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof $r4;

        virtualinvoke $r5.<android.os.Parcel: void unmarshall(byte[],int,int)>($r4, 0, $i0);

        virtualinvoke $r5.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

        specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>($r5);

     label09:
        return;

     label10:
        $r6 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStats", "Error reading battery statistics", $r6);

        return;

     label12:
        $r7 := @caughtexception;

        $r3 = null;

        goto label04;

     label13:
        $r8 := @caughtexception;

        $r6 = $r8;

        goto label11;

     label14:
        goto label08;

     label15:
        $r3 = null;

        goto label04;

     label16:
        return;

        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public void removeUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        int $i0;
        android.util.SparseArray $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>($i0);

        return;
    }

    public void setOnBattery(boolean, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        boolean $z0, $z1;
        int $i0;
        long $l1, $l2, $l3, $l5, $l6;
        byte $b4;
        java.io.File $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $z1 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z1 == $z0 goto label3;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = $z0;

        $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = $z0;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l3 * 1000L;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $l3 * 1000L;

        if $z0 == 0 goto label5;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = $l2;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = $l1;

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l2);

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l2;

        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l1);

        $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l1;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel> = $i0;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime>;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime>;

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void doUnplug(long,long)>($l1, $l2);

     label2:
        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        $l1 = $l1 + 60000L;

        $b4 = $l1 cmp $l3;

        if $b4 >= 0 goto label3;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

        if $r1 == null goto label3;

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void writeLocked()>();

     label3:
        exitmonitor $r0;

     label4:
        return;

     label5:
        $l5 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime>;

        $l6 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        $l6 = $l2 - $l6;

        $l5 = $l5 + $l6;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = $l5;

        $l5 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime>;

        $l6 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        $l6 = $l1 - $l6;

        $l5 = $l5 + $l6;

        $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = $l5;

        $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel> = $i0;

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l2);

        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l1);

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void doPlug(long,long)>($l2, $l1);

        goto label2;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public void writeLocked()
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        java.io.FileOutputStream $r1;
        java.io.File $r2, $r3;
        boolean $z0;
        android.os.Parcel $r4;
        byte[] $r5;
        long $l0;
        java.io.IOException $r6;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        if $r2 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStats", "writeLocked: no file associated with this instance");

        return;

     label2:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label3:
        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        virtualinvoke $r3.<java.io.File: boolean renameTo(java.io.File)>($r2);

     label4:
        $r1 = new java.io.FileOutputStream;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mFile>;

     label5:
        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel)>($r4);

        $r5 = virtualinvoke $r4.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r5);

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        virtualinvoke $r1.<java.io.FileOutputStream: void close()>();

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: java.io.File mBackupFile>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label6:
        $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l0;

        return;

     label7:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStats", "Error writing battery statistics", $r6);

        return;

        catch java.io.IOException from label5 to label6 with label7;
    }

    public void writeSummaryToParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;
        long $l0, $l1, $l2, $l3, $l5;
        int $i4, $i6, $i7, $i8;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r3;
        com.android.internal.os.BatteryStatsImpl$Counter $r4;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        com.android.internal.os.BatteryStatsImpl$Uid $r7;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r8;
        java.util.HashMap $r9;
        java.util.Set $r10;
        java.util.Iterator $r11, $r19;
        boolean $z0;
        java.util.Map$Entry $r12;
        java.lang.String $r13;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r14;
        java.lang.Integer $r15;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor $r16;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r17;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r18;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r20;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l1 * 1000L;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 * 1000L;

        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l0);

        $l3 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l2);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(32);

        $i4 = $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i4);

        $l5 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>($l0, 0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l5 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>($l0, 2);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l5 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>($l2, 0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l5 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>($l2, 2);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l5 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>($l0, 0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>($l0, 2);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>($l2, 0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>($l2, 2);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i4 = $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i4 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $i4 = 0;

     label01:
        if $i4 >= 5 goto label02;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r2 = $r3[$i4];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $i4 = $i4 + 1;

        goto label01;

     label02:
        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $i4 = 0;

     label03:
        if $i4 >= 5 goto label04;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r3[$i4];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $i4 = $i4 + 1;

        goto label03;

     label04:
        $i4 = 0;

     label05:
        if $i4 >= 5 goto label06;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r2 = $r3[$i4];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $i4 = $i4 + 1;

        goto label05;

     label06:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i4 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i6 = 0;

     label07:
        if $i6 >= $i4 goto label26;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i7 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>($i6);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>($i6);

        $r7 = (com.android.internal.os.BatteryStatsImpl$Uid) $r6;

        $r2 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mWifiTurnedOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $r2 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mFullWifiLockTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $r2 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Timer mScanWifiLockTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        $r8 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r8 != null goto label12;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        $i7 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        if $i7 <= 0 goto label17;

        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r6;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r13);

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (com.android.internal.os.BatteryStatsImpl$Uid$Wakelock) $r6;

        $r2 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull>;

        if $r2 == null goto label14;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $r2 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

     label10:
        $r2 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial>;

        if $r2 == null goto label15;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $r2 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

     label11:
        $r2 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow>;

        if $r2 == null goto label16;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $r2 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        goto label09;

     label12:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $i7 = 0;

     label13:
        if $i7 >= 7 goto label08;

        $r8 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r4 = $r8[$i7];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>($r1);

        $i7 = $i7 + 1;

        goto label13;

     label14:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label10;

     label15:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label11;

     label16:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label09;

     label17:
        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $i7 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        if $i7 <= 0 goto label20;

        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.Integer) $r6;

        $i7 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (com.android.internal.os.BatteryStatsImpl$Uid$Sensor) $r6;

        $r2 = $r16.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer mTimer>;

        if $r2 == null goto label19;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(1);

        $r2 = $r16.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer mTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>($r1, $l3);

        goto label18;

     label19:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label18;

     label20:
        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $i7 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        if $i7 <= 0 goto label22;

        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r6;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r13);

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r6;

        $l2 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l0 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime>;

        $l2 = $l2 - $l0;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l0 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime>;

        $l2 = $l2 - $l0;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i7 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i7 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        $i8 = $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts>;

        $i7 = $i7 - $i8;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        goto label21;

     label22:
        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        $i7 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        if $i7 <= 0 goto label25;

        $r9 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label25;

        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r6;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r13);

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r6;

        $i7 = $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i7 = $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups>;

        $i8 = $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mLoadedWakeups>;

        $i7 = $i7 - $i8;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r9 = $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        $i7 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        if $i7 <= 0 goto label23;

        $r9 = $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r6 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r6;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r13);

        $r6 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv) $r6;

        $l2 = virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>($l1);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l0 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mLoadedStartTime>;

        $l2 = $l2 - $l0;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i7 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i7 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts>;

        $i8 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedStarts>;

        $i7 = $i7 - $i8;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i7 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i7 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches>;

        $i8 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedLaunches>;

        $i7 = $i7 - $i8;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i7);

        goto label24;

     label25:
        $l2 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesReceived(int)>(0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesSent(int)>(0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i6 = $i6 + 1;

        goto label07;

     label26:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;
        int $i0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,int)>($r1, $i0);

        return;
    }

    void writeToParcelLocked(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        android.os.Parcel $r1;
        int $i0, $i5, $i6;
        long $l1, $l2, $l3;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;
        com.android.internal.os.BatteryStatsImpl$Timer[] $r3;
        com.android.internal.os.BatteryStatsImpl$Counter $r4;
        boolean $z0;
        byte $b4;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        com.android.internal.os.BatteryStatsImpl$Uid $r7;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 * 1000L;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $l1 * 1000L;

        $l2 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l2);

        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l1);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(-1166707595);

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastUptime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastRealtime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mScreenOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $i0 = 0;

     label01:
        if $i0 >= 5 goto label02;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mScreenBrightnessTimer>;

        $r2 = $r3[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $i0 = $i0 + 1;

        goto label01;

     label02:
        $r4 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Counter: void writeToParcel(android.os.Parcel)>($r1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mPhoneOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $i0 = 0;

     label03:
        if $i0 >= 5 goto label04;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r3[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $i0 = $i0 + 1;

        goto label03;

     label04:
        $i0 = 0;

     label05:
        if $i0 >= 5 goto label06;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer[] mPhoneDataConnectionsTimer>;

        $r2 = $r3[$i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $i0 = $i0 + 1;

        goto label05;

     label06:
        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mWifiRunningTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer mBluetoothOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r1, $l1);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mLastUptime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl: long mLastRealtime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l3);

        $z0 = $r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label09;

        $b4 = 1;

     label07:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b4);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mUnpluggedStartLevel>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl: int mPluggedStartLevel>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i5 = 0;

     label08:
        if $i5 >= $i0 goto label10;

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i6 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>($i5);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r5 = $r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>($i5);

        $r7 = (com.android.internal.os.BatteryStatsImpl$Uid) $r6;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: void writeToParcelLocked(android.os.Parcel,long)>($r1, $l1);

        $i5 = $i5 + 1;

        goto label08;

     label09:
        $b4 = 0;

        goto label07;

     label10:
        return;
    }
}
