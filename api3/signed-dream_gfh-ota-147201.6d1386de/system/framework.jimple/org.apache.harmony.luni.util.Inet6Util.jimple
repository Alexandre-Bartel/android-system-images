public class org.apache.harmony.luni.util.Inet6Util extends java.lang.Object
{
    static char[] hexCharacters;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.apache.harmony.luni.util.Inet6Util: char[] hexCharacters> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.luni.util.Inet6Util $r0;

        $r0 := @this: org.apache.harmony.luni.util.Inet6Util;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String addressToString(int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i1 = $i0 >> 24;

        $i1 = $i1 & 255;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i1 = $i0 >> 16;

        $i1 = $i1 & 255;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i1 = $i0 >> 8;

        $i1 = $i1 & 255;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i0 = $i0 & 255;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static int bytesToInt(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1, $i5;
        byte $b2;
        short $s3, $s4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 + 3;

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        $i1 = $i0 + 2;

        $b2 = $r0[$i1];

        $s4 = $b2 & 255;

        $i1 = $s4 << 8;

        $i1 = $s3 | $i1;

        $i5 = $i0 + 1;

        $b2 = $r0[$i5];

        $s3 = $b2 & 255;

        $i5 = $s3 << 16;

        $i1 = $i1 | $i5;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $i0 = $s3 << 24;

        $i0 = $i1 | $i0;

        return $i0;
    }

    public static void convertToBytes(java.lang.String, byte[], int)
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        char $c3;
        byte $b5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1[$i0] = 0;

        $i2 = $i0 + 1;

        $r1[$i2] = 0;

        if $i1 <= 3 goto label5;

        $i2 = 0 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i4 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: int getIntValue(char)>($c3);

        $b5 = $r1[$i0];

        $i4 = $i4 << 4;

        $i4 = $b5 | $i4;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

     label1:
        if $i1 <= 2 goto label2;

        $i4 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: int getIntValue(char)>($c3);

        $b5 = $r1[$i0];

        $i2 = $b5 | $i2;

        $b5 = (byte) $i2;

        $r1[$i0] = $b5;

        $i2 = $i4;

     label2:
        if $i1 <= 1 goto label4;

        $i1 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: int getIntValue(char)>($c3);

        $i2 = $i0 + 1;

        $i6 = $i0 + 1;

        $b5 = $r1[$i6];

        $i4 = $i4 << 4;

        $i4 = $b5 | $i4;

        $b5 = (byte) $i4;

        $r1[$i2] = $b5;

     label3:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i2 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: int getIntValue(char)>($c3);

        $i1 = $i0 + 1;

        $i0 = $i0 + 1;

        $b5 = $r1[$i0];

        $i0 = $i2 & 15;

        $i0 = $b5 | $i0;

        $b5 = (byte) $i0;

        $r1[$i1] = $b5;

        return;

     label4:
        $i1 = $i2;

        goto label3;

     label5:
        $i2 = 0;

        goto label1;
    }

    public static byte[] createByteArrayFromIPAddressString(java.lang.String)
    {
        java.lang.String $r0, $r5, $r6;
        boolean $z0;
        java.util.StringTokenizer $r1;
        byte[] $r2, $r7;
        int $i0, $i1, $i4;
        byte $b2;
        char $c3;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r8;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: boolean isValidIPV4Address(java.lang.String)>($r0);

        if $z0 == 0 goto label03;

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r0, ".");

        $r2 = newarray (byte)[4];

        $i0 = 0;

     label01:
        if $i0 >= 4 goto label02;

        $r0 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $b2 = (byte) $i1;

        $r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label01;

     label02:
        return $r2;

     label03:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c3 != 91 goto label04;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label04:
        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r0, ":.", 1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0 = "";

        $r5 = "";

        $i0 = -1;

     label05:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label08;

        $r5 = $r0;

        $r6 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r0 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(":");

        if $z0 == 0 goto label07;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(":");

        if $z0 == 0 goto label06;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        goto label05;

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label05;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label05;

     label07:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z0 == 0 goto label05;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label05;

     label08:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(":");

        if $z0 == 0 goto label13;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(":");

        if $z0 == 0 goto label12;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label09:
        $i1 = 8;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label10;

        $i1 = 8 + -2;

     label10:
        if $i0 == -1 goto label14;

        $i4 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i1 - $i4;

        $i4 = 0;

     label11:
        if $i4 >= $i1 goto label14;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, "0");

        $i4 = $i4 + 1;

        goto label11;

     label12:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        goto label09;

     label13:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z0 == 0 goto label09;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        goto label09;

     label14:
        $r7 = newarray (byte)[16];

        $i0 = 0;

     label15:
        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label16;

        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r0 = (java.lang.String) $r8;

        $i1 = $i0 * 2;

        staticinvoke <org.apache.harmony.luni.util.Inet6Util: void convertToBytes(java.lang.String,byte[],int)>($r0, $r7, $i1);

        $i0 = $i0 + 1;

        goto label15;

     label16:
        $i0 = 0;

     label17:
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label18;

        $i1 = $i0 + 12;

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r0 = (java.lang.String) $r8;

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $i4 = $i4 & 255;

        $b2 = (byte) $i4;

        $r7[$i1] = $b2;

        $i0 = $i0 + 1;

        goto label17;

     label18:
        $i0 = 0;

     label19:
        if $i0 >= 10 goto label27;

        $b2 = $r7[$i0];

        if $b2 == 0 goto label24;

        $z0 = 0;

     label20:
        $b2 = $r7[10];

        if $b2 != -1 goto label21;

        $b2 = $r7[11];

        if $b2 == -1 goto label22;

     label21:
        $z0 = 0;

     label22:
        if $z0 == 0 goto label26;

        $r2 = newarray (byte)[4];

        $i0 = 0;

     label23:
        if $i0 >= 4 goto label25;

        $i1 = $i0 + 12;

        $b2 = $r7[$i1];

        $r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label23;

     label24:
        $i0 = $i0 + 1;

        goto label19;

     label25:
        return $r2;

     label26:
        return $r7;

     label27:
        $z0 = 1;

        goto label20;
    }

    public static java.lang.String createIPAddrStringFromByteArray(byte[])
    {
        byte[] $r0, $r3;
        char[] $r1, $r5;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i5;
        java.lang.String $r4;
        boolean $z0;
        byte $b3;
        short $s4;
        char $c6;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        if $i1 != 4 goto label01;

        $i1 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: int bytesToInt(byte[],int)>($r0, 0);

        $r4 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: java.lang.String addressToString(int)>($i1);

        return $r4;

     label01:
        $i1 = lengthof $r0;

        if $i1 != 16 goto label11;

        $z0 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: boolean isIPv4MappedAddress(byte[])>($r0);

        if $z0 == 0 goto label04;

        $r3 = newarray (byte)[4];

        $i1 = 0;

     label02:
        if $i1 >= 4 goto label03;

        $i2 = $i1 + 12;

        $b3 = $r0[$i2];

        $r3[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label02;

     label03:
        $i1 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: int bytesToInt(byte[],int)>($r3, 0);

        $r4 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: java.lang.String addressToString(int)>($i1);

        return $r4;

     label04:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = 0;

     label05:
        if $i1 >= 8 goto label10;

        $i2 = $i1 * 2;

        $b3 = $r0[$i2];

        $s4 = $b3 & 255;

        $i2 = $s4 << 8;

        $i5 = $i1 * 2;

        $i5 = $i5 + 1;

        $b3 = $r0[$i5];

        $s4 = $b3 & 255;

        $i2 = $i2 ^ $s4;

        $i5 = 1;

        $i0 = $i2;

     label06:
        $i0 = $i0 >>> 4;

        if $i0 == 0 goto label07;

        $i5 = $i5 + 1;

        goto label06;

     label07:
        $r1 = newarray (char)[$i5];

     label08:
        $i0 = $i2 & 15;

        $i5 = $i5 + -1;

        $r5 = <org.apache.harmony.luni.util.Inet6Util: char[] hexCharacters>;

        $c6 = $r5[$i0];

        $r1[$i5] = $c6;

        $i2 = $i2 >>> 4;

        if $i5 > 0 goto label08;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r1);

        $i2 = $i1 + 1;

        if $i2 >= 8 goto label09;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label11:
        return null;
    }

    static int getIntValue(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 48: goto label02;
            case 49: goto label03;
            case 50: goto label04;
            case 51: goto label05;
            case 52: goto label06;
            case 53: goto label07;
            case 54: goto label08;
            case 55: goto label09;
            case 56: goto label10;
            case 57: goto label11;
            default: goto label01;
        };

     label01:
        $c0 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);

        lookupswitch($c0)
        {
            case 97: goto label12;
            case 98: goto label13;
            case 99: goto label14;
            case 100: goto label15;
            case 101: goto label16;
            case 102: goto label17;
            default: goto label02;
        };

     label02:
        return 0;

     label03:
        return 1;

     label04:
        return 2;

     label05:
        return 3;

     label06:
        return 4;

     label07:
        return 5;

     label08:
        return 6;

     label09:
        return 7;

     label10:
        return 8;

     label11:
        return 9;

     label12:
        return 10;

     label13:
        return 11;

     label14:
        return 12;

     label15:
        return 13;

     label16:
        return 14;

     label17:
        return 15;
    }

    public static boolean isIP6AddressInFullForm(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: boolean isValidIP6Address(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("::");

        if $i0 < 0 goto label1;

        return 0;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isIPv4MappedAddress(byte[])
    {
        byte[] $r0;
        int $i0;
        byte $b1;

        $r0 := @parameter0: byte[];

        $i0 = 0;

     label1:
        if $i0 >= 10 goto label3;

        $b1 = $r0[$i0];

        if $b1 == 0 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $b1 = $r0[10];

        if $b1 != -1 goto label4;

        $b1 = $r0[11];

        if $b1 == -1 goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    static boolean isValidHexChar(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 <= 57 goto label3;

     label1:
        if $c0 < 65 goto label2;

        if $c0 <= 70 goto label3;

     label2:
        if $c0 < 97 goto label4;

        if $c0 > 102 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    public static boolean isValidIP4Word(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 1 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 3 goto label2;

     label1:
        return 0;

     label2:
        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label6;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 < 48 goto label4;

        if $c2 <= 57 goto label5;

     label4:
        return 0;

     label5:
        $i0 = $i0 + 1;

        goto label3;

     label6:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        if $i0 <= 255 goto label7;

        return 0;

     label7:
        return 1;
    }

    public static boolean isValidIP6Address(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i7, $i9;
        boolean $z0, $z1;
        char $c4, $c5, $c8;
        byte $b6;
        java.lang.NumberFormatException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $z0 = 0;

        $i1 = 0;

        $i2 = 0;

        $i3 = 0;

        $r1 = "";

        $c4 = 0;

        $b6 = 0;

        if $i0 >= 2 goto label01;

        return 0;

     label01:
        $i7 = 0;

     label02:
        if $i7 >= $i0 goto label28;

        $c5 = $c4;

        $c8 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i7);

        $c4 = $c8;

        lookupswitch($c8)
        {
            case 37: goto label20;
            case 46: goto label09;
            case 58: goto label15;
            case 91: goto label04;
            case 93: goto label07;
            default: goto label03;
        };

     label03:
        if $i3 != 0 goto label27;

        $i9 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i9 <= 3 goto label26;

        return 0;

     label04:
        if $i7 == 0 goto label05;

        return 0;

     label05:
        $i9 = $i0 - 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i9);

        if $c5 == 93 goto label06;

        return 0;

     label06:
        $b6 = 1;

        if $i0 >= 4 goto label14;

        return 0;

     label07:
        $i9 = $i0 - 1;

        if $i7 == $i9 goto label08;

        return 0;

     label08:
        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c5 == 91 goto label14;

        return 0;

     label09:
        $i2 = $i2 + 1;

        if $i2 <= 3 goto label10;

        return 0;

     label10:
        $z1 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: boolean isValidIP4Word(java.lang.String)>($r1);

        if $z1 != 0 goto label11;

        return 0;

     label11:
        if $i1 == 6 goto label12;

        if $z0 != 0 goto label12;

        return 0;

     label12:
        if $i1 != 7 goto label13;

        $i9 = $b6 + 0;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i9);

        if $c5 == 58 goto label13;

        $i9 = $b6 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i9);

        if $c5 == 58 goto label13;

        return 0;

     label13:
        $r1 = "";

     label14:
        $i7 = $i7 + 1;

        goto label02;

     label15:
        $i1 = $i1 + 1;

        if $i1 <= 7 goto label16;

        return 0;

     label16:
        if $i2 <= 0 goto label17;

        return 0;

     label17:
        if $c5 != 58 goto label19;

        if $z0 == 0 goto label18;

        return 0;

     label18:
        $z0 = 1;

     label19:
        $r1 = "";

        goto label14;

     label20:
        if $i1 != 0 goto label21;

        return 0;

     label21:
        $i3 = $i3 + 1;

        $i9 = $i7 + 1;

        if $i9 < $i0 goto label22;

        return 0;

     label22:
        $i9 = $i7 + 1;

     label23:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i9);

        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label24:
        goto label14;

     label25:
        $r3 := @caughtexception;

        return 0;

     label26:
        $z1 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: boolean isValidHexChar(char)>($c8);

        if $z1 != 0 goto label27;

        return 0;

     label27:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label28:
        if $i2 <= 0 goto label30;

        if $i2 != 3 goto label29;

        $z0 = staticinvoke <org.apache.harmony.luni.util.Inet6Util: boolean isValidIP4Word(java.lang.String)>($r1);

        if $z0 != 0 goto label32;

     label29:
        return 0;

     label30:
        if $i1 == 7 goto label31;

        if $z0 != 0 goto label31;

        return 0;

     label31:
        if $i3 != 0 goto label32;

        if $r1 != "" goto label32;

        $i1 = $i0 - 1;

        $i1 = $i1 - $b6;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c4 != 58 goto label32;

        $i0 = $i0 - 2;

        $i0 = $i0 - $b6;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c4 == 58 goto label32;

        return 0;

     label32:
        return 1;

        catch java.lang.NumberFormatException from label23 to label24 with label25;
    }

    public static boolean isValidIPV4Address(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i3, $i4, $i5;
        boolean $z0;
        java.lang.String[] $r1;
        long $l1;
        byte $b2;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("\\p{Digit}+(\\.\\p{Digit}+)*");

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = lengthof $r1;

        if $i0 < 1 goto label02;

        if $i0 <= 4 goto label03;

     label02:
        return 0;

     label03:
        if $i0 != 1 goto label05;

        $r0 = $r1[0];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $b2 = $l1 cmp 4294967295L;

        if $b2 > 0 goto label04;

        return 1;

     label04:
        return 0;

     label05:
        $i3 = 0;

     label06:
        if $i3 >= $i0 goto label10;

        $i4 = 255;

        if $i0 != 2 goto label08;

        if $i3 != 1 goto label08;

        $i4 = 16777215;

     label07:
        $r0 = $r1[$i3];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        if $i5 <= $i4 goto label09;

        return 0;

     label08:
        if $i0 != 3 goto label07;

        if $i3 != 2 goto label07;

        $i4 = 65535;

        goto label07;

     label09:
        $i3 = $i3 + 1;

        goto label06;

     label10:
        return 1;
    }
}
