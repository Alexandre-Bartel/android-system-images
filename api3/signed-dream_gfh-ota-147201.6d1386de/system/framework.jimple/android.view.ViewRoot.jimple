public final class android.view.ViewRoot extends android.os.Handler implements android.view.View$AttachInfo$Callbacks, android.view.ViewParent
{
    public static final int CHECK_FOCUS;
    private static final boolean DBG;
    private static final boolean DEBUG_DRAW;
    private static final boolean DEBUG_IMF;
    private static final boolean DEBUG_INPUT_RESIZE;
    private static final boolean DEBUG_LAYOUT;
    private static final boolean DEBUG_ORIENTATION;
    private static final boolean DEBUG_TRACKBALL;
    public static final int DIE;
    public static final int DISPATCH_APP_VISIBILITY;
    public static final int DISPATCH_GET_NEW_SURFACE;
    public static final int DISPATCH_KEY;
    public static final int DISPATCH_KEY_FROM_IME;
    public static final int DISPATCH_POINTER;
    public static final int DISPATCH_TRACKBALL;
    public static final int DO_TRAVERSAL;
    public static final int FINISHED_EVENT;
    public static final int FINISH_INPUT_CONNECTION;
    private static final boolean LOCAL_LOGV;
    static final int MAX_TRACKBALL_DELAY;
    static final boolean PROFILE_DRAWING;
    private static final boolean PROFILE_LAYOUT;
    public static final int RESIZED;
    public static final int RESIZED_REPORT;
    private static final boolean SHOW_FPS;
    private static final java.lang.String TAG;
    private static final boolean WATCH_POINTER;
    public static final int WINDOW_FOCUS_CHANGED;
    static boolean mInitialized;
    static final java.lang.Object mStaticInit;
    private static int sDrawTime;
    static long sInstanceCount;
    static final java.lang.ThreadLocal sRunQueues;
    static android.view.IWindowSession sWindowSession;
    int mAddNesting;
    boolean mAdded;
    boolean mAddedTouchMode;
    boolean mAppVisible;
    final android.view.View$AttachInfo mAttachInfo;
    android.media.AudioManager mAudioManager;
    int mCurScrollY;
    private final float mDensity;
    android.graphics.Rect mDirty;
    javax.microedition.khronos.egl.EGL10 mEgl;
    javax.microedition.khronos.egl.EGLContext mEglContext;
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay;
    javax.microedition.khronos.egl.EGLSurface mEglSurface;
    boolean mFirst;
    android.view.View mFocusedView;
    boolean mFullRedrawNeeded;
    javax.microedition.khronos.opengles.GL11 mGL;
    android.graphics.Canvas mGlCanvas;
    boolean mGlWanted;
    boolean mHasHadWindowFocus;
    int mHeight;
    private android.view.SurfaceHolder mHolder;
    final android.view.ViewRoot$InputMethodCallback mInputMethodCallback;
    boolean mIsAnimating;
    final android.view.ViewTreeObserver$InternalInsetsInfo mLastGivenInsets;
    android.view.View mLastScrolledFocus;
    long mLastTrackballTime;
    boolean mLastWasImTarget;
    boolean mLayoutRequested;
    final android.view.WindowLeaked mLocation;
    boolean mNewSurfaceNeeded;
    final android.graphics.Rect mPendingContentInsets;
    int mPendingEventSeq;
    final android.util.SparseArray mPendingEvents;
    final android.graphics.Rect mPendingVisibleInsets;
    final android.graphics.Region mPreviousTransparentRegion;
    private boolean mProfile;
    android.view.View mRealFocusedView;
    boolean mReportNextDraw;
    boolean mScrollMayChange;
    int mScrollY;
    android.widget.Scroller mScroller;
    int mSoftInputMode;
    android.view.Surface mSurface;
    final android.graphics.Rect mTempRect;
    final java.lang.Thread mThread;
    final int[] mTmpLocation;
    final android.view.ViewRoot$TrackballAxis mTrackballAxisX;
    final android.view.ViewRoot$TrackballAxis mTrackballAxisY;
    final android.graphics.Region mTransparentRegion;
    boolean mTraversalScheduled;
    boolean mUseGL;
    android.view.View mView;
    final android.view.ViewConfiguration mViewConfiguration;
    int mViewVisibility;
    final android.graphics.Point mVisPoint;
    final android.graphics.Rect mVisRect;
    int mWidth;
    boolean mWillDrawSoon;
    final android.graphics.Rect mWinFrame;
    final android.view.ViewRoot$W mWindow;
    final android.view.WindowManager$LayoutParams mWindowAttributes;
    boolean mWindowAttributesChanged;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.lang.ThreadLocal $r1;

        <android.view.ViewRoot: int WINDOW_FOCUS_CHANGED> = 1004;

        <android.view.ViewRoot: boolean WATCH_POINTER> = 0;

        <android.view.ViewRoot: java.lang.String TAG> = "ViewRoot";

        <android.view.ViewRoot: boolean SHOW_FPS> = 0;

        <android.view.ViewRoot: int RESIZED_REPORT> = 1003;

        <android.view.ViewRoot: int RESIZED> = 1002;

        <android.view.ViewRoot: boolean PROFILE_LAYOUT> = 0;

        <android.view.ViewRoot: boolean PROFILE_DRAWING> = 0;

        <android.view.ViewRoot: int MAX_TRACKBALL_DELAY> = 250;

        <android.view.ViewRoot: boolean LOCAL_LOGV> = 0;

        <android.view.ViewRoot: int FINISH_INPUT_CONNECTION> = 1012;

        <android.view.ViewRoot: int FINISHED_EVENT> = 1010;

        <android.view.ViewRoot: int DO_TRAVERSAL> = 1000;

        <android.view.ViewRoot: int DISPATCH_TRACKBALL> = 1007;

        <android.view.ViewRoot: int DISPATCH_POINTER> = 1006;

        <android.view.ViewRoot: int DISPATCH_KEY_FROM_IME> = 1011;

        <android.view.ViewRoot: int DISPATCH_KEY> = 1005;

        <android.view.ViewRoot: int DISPATCH_GET_NEW_SURFACE> = 1009;

        <android.view.ViewRoot: int DISPATCH_APP_VISIBILITY> = 1008;

        <android.view.ViewRoot: int DIE> = 1001;

        <android.view.ViewRoot: boolean DEBUG_TRACKBALL> = 0;

        <android.view.ViewRoot: boolean DEBUG_ORIENTATION> = 0;

        <android.view.ViewRoot: boolean DEBUG_LAYOUT> = 0;

        <android.view.ViewRoot: boolean DEBUG_INPUT_RESIZE> = 0;

        <android.view.ViewRoot: boolean DEBUG_IMF> = 0;

        <android.view.ViewRoot: boolean DEBUG_DRAW> = 0;

        <android.view.ViewRoot: boolean DBG> = 0;

        <android.view.ViewRoot: int CHECK_FOCUS> = 1013;

        <android.view.ViewRoot: long sInstanceCount> = 0L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.view.ViewRoot: java.lang.Object mStaticInit> = $r0;

        <android.view.ViewRoot: boolean mInitialized> = 0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <android.view.ViewRoot: java.lang.ThreadLocal sRunQueues> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.view.ViewRoot $r0;
        android.content.Context $r1;
        android.view.ViewRoot$TrackballAxis $r2;
        int[] $r3;
        android.util.SparseArray $r4;
        android.view.WindowManager$LayoutParams $r5;
        android.graphics.Rect $r6;
        android.view.ViewTreeObserver$InternalInsetsInfo $r7;
        android.view.ViewRoot$1 $r8;
        long $l0;
        java.lang.Object $r9;
        boolean $z0;
        android.view.inputmethod.InputMethodManager $r10;
        android.os.IBinder $r11;
        android.view.IWindowManager $r12;
        com.android.internal.view.IInputMethodClient $r13;
        com.android.internal.view.IInputContext $r14;
        android.view.IWindowSession $r15;
        java.lang.Thread $r16;
        android.view.WindowLeaked $r17;
        android.graphics.Point $r18;
        android.view.ViewRoot$W $r19;
        android.view.ViewRoot$InputMethodCallback $r20;
        android.graphics.Region $r21;
        android.view.Surface $r22;
        android.view.View$AttachInfo $r23;
        android.view.ViewConfiguration $r24;
        android.content.res.Resources $r25;
        android.util.DisplayMetrics $r26;
        float $f0;
        java.lang.Throwable $r27;
        android.os.RemoteException $r28;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.os.Handler: void <init>()>();

        $r0.<android.view.ViewRoot: long mLastTrackballTime> = 0L;

        $r2 = new android.view.ViewRoot$TrackballAxis;

        specialinvoke $r2.<android.view.ViewRoot$TrackballAxis: void <init>()>();

        $r0.<android.view.ViewRoot: android.view.ViewRoot$TrackballAxis mTrackballAxisX> = $r2;

        $r2 = new android.view.ViewRoot$TrackballAxis;

        specialinvoke $r2.<android.view.ViewRoot$TrackballAxis: void <init>()>();

        $r0.<android.view.ViewRoot: android.view.ViewRoot$TrackballAxis mTrackballAxisY> = $r2;

        $r3 = newarray (int)[2];

        $r0.<android.view.ViewRoot: int[] mTmpLocation> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r0.<android.view.ViewRoot: android.util.SparseArray mPendingEvents> = $r4;

        $r0.<android.view.ViewRoot: int mPendingEventSeq> = 0;

        $r5 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r5.<android.view.WindowManager$LayoutParams: void <init>()>();

        $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes> = $r5;

        $r0.<android.view.ViewRoot: boolean mAppVisible> = 1;

        $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged> = 0;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets> = $r6;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets> = $r6;

        $r7 = new android.view.ViewTreeObserver$InternalInsetsInfo;

        specialinvoke $r7.<android.view.ViewTreeObserver$InternalInsetsInfo: void <init>()>();

        $r0.<android.view.ViewRoot: android.view.ViewTreeObserver$InternalInsetsInfo mLastGivenInsets> = $r7;

        $r0.<android.view.ViewRoot: boolean mProfile> = 0;

        $r8 = new android.view.ViewRoot$1;

        specialinvoke $r8.<android.view.ViewRoot$1: void <init>(android.view.ViewRoot)>($r0);

        $r0.<android.view.ViewRoot: android.view.SurfaceHolder mHolder> = $r8;

        $l0 = <android.view.ViewRoot: long sInstanceCount>;

        $l0 = $l0 + 1L;

        <android.view.ViewRoot: long sInstanceCount> = $l0;

        $r9 = <android.view.ViewRoot: java.lang.Object mStaticInit>;

        entermonitor $r9;

     label01:
        $z0 = <android.view.ViewRoot: boolean mInitialized>;

     label02:
        if $z0 != 0 goto label05;

     label03:
        $r10 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)>($r1);

        $r11 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r12 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r11);

        $r13 = virtualinvoke $r10.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>();

        $r14 = virtualinvoke $r10.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>();

        $r15 = interfaceinvoke $r12.<android.view.IWindowManager: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>($r13, $r14);

     label04:
        <android.view.ViewRoot: android.view.IWindowSession sWindowSession> = $r15;

        <android.view.ViewRoot: boolean mInitialized> = 1;

     label05:
        exitmonitor $r9;

     label06:
        $r16 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r0.<android.view.ViewRoot: java.lang.Thread mThread> = $r16;

        $r17 = new android.view.WindowLeaked;

        specialinvoke $r17.<android.view.WindowLeaked: void <init>(java.lang.String)>(null);

        $r0.<android.view.ViewRoot: android.view.WindowLeaked mLocation> = $r17;

        $r17 = $r0.<android.view.ViewRoot: android.view.WindowLeaked mLocation>;

        virtualinvoke $r17.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        $r0.<android.view.ViewRoot: int mWidth> = -1;

        $r0.<android.view.ViewRoot: int mHeight> = -1;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Rect mDirty> = $r6;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect> = $r6;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Rect mVisRect> = $r6;

        $r18 = new android.graphics.Point;

        specialinvoke $r18.<android.graphics.Point: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Point mVisPoint> = $r18;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Rect mWinFrame> = $r6;

        $r19 = new android.view.ViewRoot$W;

        specialinvoke $r19.<android.view.ViewRoot$W: void <init>(android.view.ViewRoot,android.content.Context)>($r0, $r1);

        $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow> = $r19;

        $r20 = new android.view.ViewRoot$InputMethodCallback;

        specialinvoke $r20.<android.view.ViewRoot$InputMethodCallback: void <init>(android.view.ViewRoot)>($r0);

        $r0.<android.view.ViewRoot: android.view.ViewRoot$InputMethodCallback mInputMethodCallback> = $r20;

        $r0.<android.view.ViewRoot: int mViewVisibility> = 8;

        $r21 = new android.graphics.Region;

        specialinvoke $r21.<android.graphics.Region: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Region mTransparentRegion> = $r21;

        $r21 = new android.graphics.Region;

        specialinvoke $r21.<android.graphics.Region: void <init>()>();

        $r0.<android.view.ViewRoot: android.graphics.Region mPreviousTransparentRegion> = $r21;

        $r0.<android.view.ViewRoot: boolean mFirst> = 1;

        $r22 = new android.view.Surface;

        specialinvoke $r22.<android.view.Surface: void <init>()>();

        $r0.<android.view.ViewRoot: android.view.Surface mSurface> = $r22;

        $r0.<android.view.ViewRoot: boolean mAdded> = 0;

        $r23 = new android.view.View$AttachInfo;

        $r15 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r19 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        specialinvoke $r23.<android.view.View$AttachInfo: void <init>(android.view.IWindowSession,android.view.IWindow,android.os.Handler,android.view.View$AttachInfo$Callbacks)>($r15, $r19, $r0, $r0);

        $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo> = $r23;

        $r24 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $r0.<android.view.ViewRoot: android.view.ViewConfiguration mViewConfiguration> = $r24;

        $r25 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r26 = virtualinvoke $r25.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r26.<android.util.DisplayMetrics: float density>;

        $r0.<android.view.ViewRoot: float mDensity> = $f0;

        return;

     label07:
        $r27 := @caughtexception;

     label08:
        exitmonitor $r9;

     label09:
        throw $r27;

     label10:
        $r28 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private static void captureKeyLog(java.lang.String, android.view.KeyEvent)
    {
        java.lang.String $r0;
        android.view.KeyEvent $r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.view.KeyEvent;

        if $r1 == null goto label2;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.captureevent", 0);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $l1 = virtualinvoke $r1.<android.view.KeyEvent: long getDownTime()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l1 = virtualinvoke $r1.<android.view.KeyEvent: long getEventTime()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getMetaState()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getDeviceId()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getScanCode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewRoot", $r0);

        return;

     label2:
        return;
    }

    private static void captureMotionLog(java.lang.String, android.view.MotionEvent)
    {
        java.lang.String $r0;
        android.view.MotionEvent $r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0;
        long $l1;
        float $f0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.view.MotionEvent;

        if $r1 == null goto label2;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.captureevent", 0);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $l1 = virtualinvoke $r1.<android.view.MotionEvent: long getDownTime()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l1 = virtualinvoke $r1.<android.view.MotionEvent: long getEventTime()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getPressure()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getSize()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getMetaState()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getXPrecision()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getYPrecision()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getDeviceId()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getEdgeFlags()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewRoot", $r0);

        return;

     label2:
        return;
    }

    private void checkEglErrors()
    {
        android.view.ViewRoot $r0;
        int $i0;
        boolean $z0;
        javax.microedition.khronos.egl.EGL10 $r1;

        $r0 := @this: android.view.ViewRoot;

        $z0 = $r0.<android.view.ViewRoot: boolean mUseGL>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $i0 = interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: int eglGetError()>();

        if $i0 == 12288 goto label2;

        specialinvoke $r0.<android.view.ViewRoot: void destroyGL()>();

        if $i0 == 12302 goto label3;

        $r0.<android.view.ViewRoot: boolean mGlWanted> = 0;

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    private boolean checkForLeavingTouchModeAndConsume(android.view.KeyEvent)
    {
        android.view.ViewRoot $r0;
        android.view.KeyEvent $r1;
        int $i0;
        android.view.View$AttachInfo $r2;
        boolean $z0;
        android.view.View $r3;
        android.view.ViewGroup $r4;
        java.lang.IllegalStateException $r5;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getFlags()>();

        $i0 = $i0 & 4;

        if $i0 == 0 goto label2;

        return 0;

     label2:
        $r2 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r2.<android.view.View$AttachInfo: boolean mInTouchMode>;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $z0 = staticinvoke <android.view.ViewRoot: boolean isKeyboardKey(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label6;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r3 == null goto label6;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label6;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r3 = virtualinvoke $r3.<android.view.View: android.view.View findFocus()>();

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = $r3;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $z0 = $r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $r4 = (android.view.ViewGroup) $r3;

        $i0 = virtualinvoke $r4.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 262144 goto label4;

        return 0;

     label4:
        $z0 = virtualinvoke $r0.<android.view.ViewRoot: boolean ensureTouchMode(boolean)>(0);

        if $z0 == 0 goto label5;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("should not have changed focus when leaving touch mode while a view has focus.");

        throw $r5;

     label5:
        return 0;

     label6:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = staticinvoke <android.view.ViewRoot: boolean isDirectional(int)>($i0);

        if $z0 == 0 goto label7;

        $z0 = virtualinvoke $r0.<android.view.ViewRoot: boolean ensureTouchMode(boolean)>(0);

        return $z0;

     label7:
        return 0;
    }

    private void deliverKeyEvent(android.view.KeyEvent, boolean)
    {
        android.view.ViewRoot $r0;
        android.view.KeyEvent $r1;
        boolean $z0, $z1;
        android.view.View $r2;
        android.view.IWindowSession $r3;
        android.view.ViewRoot$W $r4;
        android.view.inputmethod.InputMethodManager $r5;
        int $i0;
        android.content.Context $r6;
        android.view.ViewRoot$InputMethodCallback $r7;
        android.os.RemoteException $r8;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r2 == null goto label4;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z1 = virtualinvoke $r2.<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>($r1);

     label1:
        if $z1 == 0 goto label5;

        if $z0 == 0 goto label8;

        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label2:
        interfaceinvoke $r3.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r4);

     label3:
        return;

     label4:
        $z1 = 1;

        goto label1;

     label5:
        $z1 = $r0.<android.view.ViewRoot: boolean mLastWasImTarget>;

        if $z1 == 0 goto label6;

        $r5 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r5 == null goto label6;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r2 == null goto label6;

        $i0 = virtualinvoke $r0.<android.view.ViewRoot: int enqueuePendingEvent(java.lang.Object,boolean)>($r1, $z0);

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r6 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>();

        $r7 = $r0.<android.view.ViewRoot: android.view.ViewRoot$InputMethodCallback mInputMethodCallback>;

        virtualinvoke $r5.<android.view.inputmethod.InputMethodManager: void dispatchKeyEvent(android.content.Context,int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)>($r6, $i0, $r1, $r7);

        return;

     label6:
        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEventToViewHierarchy(android.view.KeyEvent,boolean)>($r1, $z0);

        return;

     label7:
        $r8 := @caughtexception;

        return;

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label7;
    }

    private void deliverKeyEventToViewHierarchy(android.view.KeyEvent, boolean)
    {
        android.view.ViewRoot $r0;
        android.view.KeyEvent $r1;
        boolean $z0, $z1, $z2;
        android.view.ViewRoot$W $r2;
        android.view.View $r3, $r5, $r7;
        int $i0;
        android.view.IWindowSession $r4;
        short $s1;
        android.graphics.Rect $r6;
        android.view.ViewGroup $r8;
        android.os.RemoteException $r9, $r11, $r12;
        java.lang.Throwable $r10;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 := @parameter1: boolean;

     label01:
        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r3 == null goto label18;

        $z1 = $r0.<android.view.ViewRoot: boolean mAdded>;

        if $z1 == 0 goto label18;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

     label02:
        if $i0 != 0 goto label08;

     label03:
        $z1 = 1;

     label04:
        $z2 = specialinvoke $r0.<android.view.ViewRoot: boolean checkForLeavingTouchModeAndConsume(android.view.KeyEvent)>($r1);

     label05:
        if $z2 == 0 goto label09;

        if $z0 == 0 goto label34;

        $r4 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r2 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label06:
        interfaceinvoke $r4.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r2);

     label07:
        return;

     label08:
        $z1 = 0;

        goto label04;

     label09:
        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z2 = virtualinvoke $r3.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

     label10:
        if $z2 != 0 goto label18;

        if $z1 == 0 goto label18;

     label11:
        $s1 = 0;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

     label12:
        lookupswitch($i0)
        {
            case 19: goto label24;
            case 20: goto label25;
            case 21: goto label22;
            case 22: goto label23;
            default: goto label13;
        };

     label13:
        if $s1 == 0 goto label18;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r3 == null goto label26;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r3 = virtualinvoke $r3.<android.view.View: android.view.View findFocus()>();

     label14:
        if $r3 == null goto label18;

        $r5 = virtualinvoke $r3.<android.view.View: android.view.View focusSearch(int)>($s1);

     label15:
        $z1 = 0;

        if $r5 == null goto label17;

     label16:
        if $r5 == $r3 goto label17;

        $r6 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r6);

        $r7 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r8 = (android.view.ViewGroup) $r7;

        $r6 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r8.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r3, $r6);

        $r7 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r8 = (android.view.ViewGroup) $r7;

        $r6 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r8.<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>($r5, $r6);

        $r6 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $z1 = virtualinvoke $r5.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($s1, $r6);

     label17:
        if $z1 != 0 goto label27;

        $r5 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r5.<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>($r3, $s1);

     label18:
        if $z0 == 0 goto label35;

        $r4 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r2 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label19:
        interfaceinvoke $r4.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r2);

     label20:
        return;

     label21:
        $r9 := @caughtexception;

        return;

     label22:
        $s1 = 17;

        goto label13;

     label23:
        $s1 = 66;

        goto label13;

     label24:
        $s1 = 33;

        goto label13;

     label25:
        $s1 = 130;

        goto label13;

     label26:
        $r3 = null;

        goto label14;

     label27:
        $i0 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>($s1);

        virtualinvoke $r0.<android.view.ViewRoot: void playSoundEffect(int)>($i0);

     label28:
        goto label18;

     label29:
        $r10 := @caughtexception;

        if $z0 == 0 goto label31;

        $r4 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r2 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label30:
        interfaceinvoke $r4.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r2);

     label31:
        throw $r10;

     label32:
        $r11 := @caughtexception;

        goto label31;

     label33:
        $r12 := @caughtexception;

        return;

     label34:
        return;

     label35:
        return;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label03 to label05 with label29;
        catch android.os.RemoteException from label06 to label07 with label33;
        catch java.lang.Throwable from label09 to label10 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch android.os.RemoteException from label30 to label31 with label32;
    }

    private void deliverTrackballEvent(android.view.MotionEvent)
    {
        android.view.ViewRoot $r0;
        android.view.KeyEvent $r1;
        android.view.MotionEvent $r2;
        android.view.IWindowSession $r3;
        android.view.ViewRoot$W $r4;
        boolean $z0, $z1, $z2;
        android.view.View $r5;
        java.lang.Throwable $r6, $r9;
        android.view.ViewRoot$TrackballAxis $r7, $r8;
        long $l0, $l1, $l2;
        byte $b3, $b6;
        int $i4, $i5, $i7;
        float $f0, $f1, $f2;
        android.os.RemoteException $r10, $r11, $r13, $r14;

        $r0 := @this: android.view.ViewRoot;

        $r2 := @parameter0: android.view.MotionEvent;

        if $r2 != null goto label08;

        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label01:
        $r2 = interfaceinvoke $r3.<android.view.IWindowSession: android.view.MotionEvent getPendingTrackballMove(android.view.IWindow)>($r4);

     label02:
        $z0 = 1;

     label03:
        $z1 = 0;

        if $r2 != null goto label09;

        $z1 = 1;

     label04:
        if $z1 == 0 goto label13;

        if $z0 != 0 goto label06;

        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label05:
        interfaceinvoke $r3.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r4);

     label06:
        if $r2 == null goto label07;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

     label07:
        virtualinvoke $r0.<android.view.ViewRoot: boolean ensureTouchMode(boolean)>(0);

        return;

     label08:
        $z0 = 0;

        goto label03;

     label09:
        $r5 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r5 == null goto label04;

        $z2 = $r0.<android.view.ViewRoot: boolean mAdded>;

        if $z2 == 0 goto label04;

        $r5 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z2 = virtualinvoke $r5.<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>($r2);

     label10:
        $z1 = $z2;

        if $z2 != 0 goto label04;

        goto label04;

     label11:
        $r6 := @caughtexception;

        goto label12;

     label12:
        throw $r6;

     label13:
        $r7 = $r0.<android.view.ViewRoot: android.view.ViewRoot$TrackballAxis mTrackballAxisX>;

        $r8 = $r0.<android.view.ViewRoot: android.view.ViewRoot$TrackballAxis mTrackballAxisY>;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $l0;

        $l2 = $r0.<android.view.ViewRoot: long mLastTrackballTime>;

        $l2 = $l2 + 250L;

        $b3 = $l2 cmp $l0;

        if $b3 >= 0 goto label14;

        virtualinvoke $r7.<android.view.ViewRoot$TrackballAxis: void reset(int)>(0);

        virtualinvoke $r8.<android.view.ViewRoot$TrackballAxis: void reset(int)>(0);

        $r0.<android.view.ViewRoot: long mLastTrackballTime> = $l0;

     label14:
        $i4 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        $i5 = virtualinvoke $r2.<android.view.MotionEvent: int getMetaState()>();

        lookupswitch($i4)
        {
            case 0: goto label33;
            case 1: goto label34;
            default: goto label15;
        };

     label15:
        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $l2 = virtualinvoke $r2.<android.view.MotionEvent: long getEventTime()>();

        $f1 = virtualinvoke $r7.<android.view.ViewRoot$TrackballAxis: float collect(float,long,java.lang.String)>($f0, $l2, "X");

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $l2 = virtualinvoke $r2.<android.view.MotionEvent: long getEventTime()>();

        $f2 = virtualinvoke $r8.<android.view.ViewRoot$TrackballAxis: float collect(float,long,java.lang.String)>($f0, $l2, "Y");

     label16:
        $b3 = 0;

        $i4 = 0;

        $f0 = 1.0F;

        $b6 = $f1 cmpl $f2;

     label17:
        if $b6 <= 0 goto label37;

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getXPrecision()>();

        $f1 = 2.0F / $f1;

        $i7 = virtualinvoke $r7.<android.view.ViewRoot$TrackballAxis: int generate(float)>($f1);

     label18:
        $i4 = $i7;

        if $i7 == 0 goto label21;

        if $i7 <= 0 goto label35;

     label19:
        $b3 = 22;

     label20:
        $f0 = $r7.<android.view.ViewRoot$TrackballAxis: float acceleration>;

        virtualinvoke $r8.<android.view.ViewRoot$TrackballAxis: void reset(int)>(2);

     label21:
        if $b3 == 0 goto label46;

     label22:
        if $i4 >= 0 goto label24;

     label23:
        $i4 = neg $i4;

     label24:
        $f1 = (float) $i4;

        $f0 = $f1 * $f0;

        $i7 = (int) $f0;

     label25:
        if $i7 <= $i4 goto label27;

     label26:
        $i4 = $i4 + -1;

        $r1 = new android.view.KeyEvent;

        $i7 = $i7 - $i4;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>($l0, $l0, 2, $b3, $i7, $i5);

        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEvent(android.view.KeyEvent,boolean)>($r1, 0);

     label27:
        if $i4 <= 0 goto label45;

        $i4 = $i4 + -1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $l0;

        $r1 = new android.view.KeyEvent;

        $i7 = virtualinvoke $r2.<android.view.MotionEvent: int getMetaState()>();

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>($l0, $l0, 0, $b3, 0, $i7);

        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEvent(android.view.KeyEvent,boolean)>($r1, 0);

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>($l0, $l0, 1, $b3, 0, $i5);

        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEvent(android.view.KeyEvent,boolean)>($r1, 0);

     label28:
        goto label27;

     label29:
        $r9 := @caughtexception;

        if $z0 != 0 goto label32;

        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label30:
        interfaceinvoke $r3.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r4);

     label31:
        if $r2 == null goto label32;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

     label32:
        throw $r9;

     label33:
        virtualinvoke $r7.<android.view.ViewRoot$TrackballAxis: void reset(int)>(2);

        virtualinvoke $r8.<android.view.ViewRoot$TrackballAxis: void reset(int)>(2);

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>($l0, $l0, 0, 23, 0, $i5);

        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEvent(android.view.KeyEvent,boolean)>($r1, 0);

        goto label15;

     label34:
        virtualinvoke $r7.<android.view.ViewRoot$TrackballAxis: void reset(int)>(2);

        virtualinvoke $r8.<android.view.ViewRoot$TrackballAxis: void reset(int)>(2);

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>($l0, $l0, 1, 23, 0, $i5);

        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEvent(android.view.KeyEvent,boolean)>($r1, 0);

        goto label15;

     label35:
        $b3 = 21;

     label36:
        goto label20;

     label37:
        $b6 = $f2 cmpl 0.0F;

     label38:
        if $b6 <= 0 goto label21;

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getYPrecision()>();

        $f1 = 2.0F / $f1;

        $i7 = virtualinvoke $r8.<android.view.ViewRoot$TrackballAxis: int generate(float)>($f1);

     label39:
        $i4 = $i7;

        if $i7 == 0 goto label21;

        if $i7 <= 0 goto label43;

     label40:
        $b3 = 20;

     label41:
        $f0 = $r8.<android.view.ViewRoot$TrackballAxis: float acceleration>;

        virtualinvoke $r7.<android.view.ViewRoot$TrackballAxis: void reset(int)>(2);

     label42:
        goto label21;

     label43:
        $b3 = 19;

     label44:
        goto label41;

     label45:
        $r0.<android.view.ViewRoot: long mLastTrackballTime> = $l1;

     label46:
        if $z0 != 0 goto label53;

        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label47:
        interfaceinvoke $r3.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r4);

     label48:
        if $r2 == null goto label54;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        return;

     label49:
        $r10 := @caughtexception;

        goto label31;

     label50:
        $r11 := @caughtexception;

        goto label48;

     label51:
        $r13 := @caughtexception;

        goto label06;

     label52:
        $r14 := @caughtexception;

        goto label02;

     label53:
        return;

     label54:
        return;

        catch android.os.RemoteException from label01 to label02 with label52;
        catch android.os.RemoteException from label05 to label06 with label51;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label14 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label19 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label26 to label28 with label29;
        catch android.os.RemoteException from label30 to label31 with label49;
        catch java.lang.Throwable from label33 to label35 with label29;
        catch java.lang.Throwable from label36 to label37 with label29;
        catch java.lang.Throwable from label38 to label39 with label29;
        catch java.lang.Throwable from label40 to label42 with label29;
        catch java.lang.Throwable from label44 to label46 with label29;
        catch android.os.RemoteException from label47 to label48 with label50;
    }

    private void destroyGL()
    {
        android.view.ViewRoot $r0;
        javax.microedition.khronos.egl.EGLSurface $r1, $r5;
        javax.microedition.khronos.egl.EGLContext $r2;
        javax.microedition.khronos.egl.EGL10 $r3;
        javax.microedition.khronos.egl.EGLDisplay $r4;

        $r0 := @this: android.view.ViewRoot;

        staticinvoke <android.view.ViewRoot: void nativeAbandonGlCaches()>();

        $r3 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $r4 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay>;

        $r5 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        $r1 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        $r2 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

        interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>($r4, $r5, $r1, $r2);

        $r3 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $r4 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay>;

        $r2 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLContext mEglContext>;

        interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>($r4, $r2);

        $r3 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $r4 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay>;

        $r1 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLSurface mEglSurface>;

        interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>($r4, $r1);

        $r3 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $r4 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay>;

        interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>($r4);

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLContext mEglContext> = null;

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLSurface mEglSurface> = null;

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay> = null;

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl> = null;

        $r0.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas> = null;

        $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL> = null;

        $r0.<android.view.ViewRoot: boolean mUseGL> = 0;

        return;
    }

    private void draw(boolean)
    {
        android.view.ViewRoot $r0;
        android.graphics.Rect $r1;
        android.view.Surface $r2;
        boolean $z0, $z1, $z2;
        android.view.View$AttachInfo $r3;
        android.view.ViewTreeObserver $r4;
        android.widget.Scroller $r5;
        int $i0, $i1, $i3;
        android.graphics.Canvas $r6;
        javax.microedition.khronos.opengles.GL11 $r7;
        long $l2;
        float $f0;
        android.view.View $r8;
        javax.microedition.khronos.egl.EGL10 $r9;
        javax.microedition.khronos.egl.EGLDisplay $r10;
        javax.microedition.khronos.egl.EGLSurface $r11;
        android.graphics.PorterDuff$Mode $r12;
        android.view.Surface$OutOfResourcesException $r13;
        java.lang.Throwable $r14;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

        if $r2 == null goto label20;

        $z1 = virtualinvoke $r2.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        virtualinvoke $r0.<android.view.ViewRoot: boolean scrollToRectOrFocus(android.graphics.Rect,boolean)>(null, 0);

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $z1 = $r3.<android.view.View$AttachInfo: boolean mViewScrollChanged>;

        if $z1 == 0 goto label02;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r3.<android.view.View$AttachInfo: boolean mViewScrollChanged> = 0;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void dispatchOnScrollChanged()>();

     label02:
        $r5 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        if $r5 == null goto label07;

        $r5 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        $z1 = virtualinvoke $r5.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z1 == 0 goto label07;

        $z1 = 1;

     label03:
        if $z1 == 0 goto label08;

        $r5 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r5.<android.widget.Scroller: int getCurrY()>();

     label04:
        $i1 = $r0.<android.view.ViewRoot: int mCurScrollY>;

        if $i1 == $i0 goto label05;

        $r0.<android.view.ViewRoot: int mCurScrollY> = $i0;

        $z0 = 1;

     label05:
        $r1 = $r0.<android.view.ViewRoot: android.graphics.Rect mDirty>;

        $z2 = $r0.<android.view.ViewRoot: boolean mUseGL>;

        if $z2 == 0 goto label09;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r6 = $r0.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas>;

        $r7 = $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL>;

        if $r7 == null goto label06;

        if $r6 == null goto label06;

        $r7 = $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL>;

        interfaceinvoke $r7.<javax.microedition.khronos.opengles.GL11: void glDisable(int)>(3089);

        $r7 = $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL>;

        interfaceinvoke $r7.<javax.microedition.khronos.opengles.GL11: void glClearColor(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F);

        $r7 = $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL>;

        interfaceinvoke $r7.<javax.microedition.khronos.opengles.GL11: void glClear(int)>(16384);

        $r7 = $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL>;

        interfaceinvoke $r7.<javax.microedition.khronos.opengles.GL11: void glEnable(int)>(3089);

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3.<android.view.View$AttachInfo: long mDrawingTime> = $l2;

        $i1 = neg $i0;

        $f0 = (float) $i1;

        virtualinvoke $r6.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        $r8 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i1 = $r8.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 | 32;

        $r8.<android.view.View: int mPrivateFlags> = $i1;

        $r8 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r8.<android.view.View: void draw(android.graphics.Canvas)>($r6);

        $f0 = (float) $i0;

        virtualinvoke $r6.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        $r9 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $r10 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay>;

        $r11 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLSurface mEglSurface>;

        interfaceinvoke $r9.<javax.microedition.khronos.egl.EGL10: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>($r10, $r11);

        specialinvoke $r0.<android.view.ViewRoot: void checkEglErrors()>();

     label06:
        if $z1 == 0 goto label21;

        $r0.<android.view.ViewRoot: boolean mFullRedrawNeeded> = 1;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;

     label07:
        $z1 = 0;

        goto label03;

     label08:
        $i0 = $r0.<android.view.ViewRoot: int mScrollY>;

        goto label04;

     label09:
        if $z0 == 0 goto label10;

        $i1 = $r0.<android.view.ViewRoot: int mWidth>;

        $i3 = $r0.<android.view.ViewRoot: int mHeight>;

        virtualinvoke $r1.<android.graphics.Rect: void union(int,int,int,int)>(0, 0, $i1, $i3);

     label10:
        $r6 = virtualinvoke $r2.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>($r1);

        $f0 = $r0.<android.view.ViewRoot: float mDensity>;

        virtualinvoke $r6.<android.graphics.Canvas: void setDensityScale(float)>($f0);

     label11:
        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label12;

        $z0 = $r0.<android.view.ViewRoot: boolean mIsAnimating>;

        if $z0 == 0 goto label14;

     label12:
        $z0 = virtualinvoke $r6.<android.graphics.Canvas: boolean isOpaque()>();

        if $z0 != 0 goto label16;

        $r12 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke $r6.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r12);

     label13:
        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        $r0.<android.view.ViewRoot: boolean mIsAnimating> = 0;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3.<android.view.View$AttachInfo: long mDrawingTime> = $l2;

        $i1 = neg $i0;

        $f0 = (float) $i1;

        virtualinvoke $r6.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        $r8 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i1 = $r8.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 | 32;

        $r8.<android.view.View: int mPrivateFlags> = $i1;

        $r8 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r8.<android.view.View: void draw(android.graphics.Canvas)>($r6);

        $f0 = (float) $i0;

        virtualinvoke $r6.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

     label14:
        virtualinvoke $r2.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>($r6);

        if $z1 == 0 goto label22;

        $r0.<android.view.ViewRoot: boolean mFullRedrawNeeded> = 1;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;

     label15:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewRoot", "OutOfResourcesException locking surface", $r13);

        return;

     label16:
        if $i0 == 0 goto label13;

     label17:
        $r12 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke $r6.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r12);

     label18:
        goto label13;

     label19:
        $r14 := @caughtexception;

        virtualinvoke $r2.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>($r6);

        throw $r14;

     label20:
        return;

     label21:
        return;

     label22:
        return;

        catch android.view.Surface$OutOfResourcesException from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label14 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    private boolean ensureTouchModeLocally(boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0, $z1;
        android.view.View$AttachInfo $r1;
        android.view.ViewTreeObserver $r2;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $z1 = $r1.<android.view.View$AttachInfo: boolean mInTouchMode>;

        if $z1 != $z0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r1.<android.view.View$AttachInfo: boolean mInTouchMode> = $z0;

        $r1 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r2 = $r1.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void dispatchOnTouchModeChanged(boolean)>($z0);

        if $z0 == 0 goto label2;

        $z0 = specialinvoke $r0.<android.view.ViewRoot: boolean enterTouchMode()>();

        return $z0;

     label2:
        $z0 = specialinvoke $r0.<android.view.ViewRoot: boolean leaveTouchMode()>();

        return $z0;
    }

    private boolean enterTouchMode()
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r3;
        boolean $z0;
        android.view.ViewGroup $r2;
        android.view.View$AttachInfo $r4;
        android.view.ViewTreeObserver $r5;

        $r0 := @this: android.view.ViewRoot;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocusableInTouchMode()>();

        if $z0 != 0 goto label2;

        $r2 = specialinvoke $r0.<android.view.ViewRoot: android.view.ViewGroup findAncestorToTakeFocusInTouchMode(android.view.View)>($r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus()>();

        return $z0;

     label1:
        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void unFocus()>();

        $r4 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r5 = $r4.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r5.<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>($r1, null);

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = null;

        return 1;

     label2:
        return 0;
    }

    private android.view.ViewGroup findAncestorToTakeFocusInTouchMode(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        boolean $z0;
        android.view.ViewGroup $r3;
        int $i0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        $r3 = (android.view.ViewGroup) $r2;

        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 262144 goto label2;

        $z0 = virtualinvoke $r3.<android.view.View: boolean isFocusableInTouchMode()>();

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        $z0 = virtualinvoke $r3.<android.view.View: boolean isRootNamespace()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label4:
        return null;
    }

    private android.media.AudioManager getAudioManager()
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;
        java.lang.IllegalStateException $r2;
        android.media.AudioManager $r3;
        android.content.Context $r4;
        java.lang.Object $r5;

        $r0 := @this: android.view.ViewRoot;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getAudioManager called when there is no mView");

        throw $r2;

     label1:
        $r3 = $r0.<android.view.ViewRoot: android.media.AudioManager mAudioManager>;

        if $r3 != null goto label2;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r4 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r3 = (android.media.AudioManager) $r5;

        $r0.<android.view.ViewRoot: android.media.AudioManager mAudioManager> = $r3;

     label2:
        $r3 = $r0.<android.view.ViewRoot: android.media.AudioManager mAudioManager>;

        return $r3;
    }

    public static long getInstanceCount()
    {
        long l0;

        l0 = <android.view.ViewRoot: long sInstanceCount>;

        return l0;
    }

    private int getRootMeasureSpec(int, int)
    {
        android.view.ViewRoot $r0;
        int $i0, $i1;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        lookupswitch($i1)
        {
            case -2: goto label3;
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        return $i0;

     label2:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        return $i0;

     label3:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, -2147483648);

        return $i0;
    }

    static android.view.ViewRoot$RunQueue getRunQueue()
    {
        java.lang.Object $r0;
        java.lang.ThreadLocal $r1;
        android.view.ViewRoot$RunQueue $r2;

        $r1 = <android.view.ViewRoot: java.lang.ThreadLocal sRunQueues>;

        $r0 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.view.ViewRoot$RunQueue) $r0;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r2 = new android.view.ViewRoot$RunQueue;

        specialinvoke $r2.<android.view.ViewRoot$RunQueue: void <init>()>();

        $r1 = <android.view.ViewRoot: java.lang.ThreadLocal sRunQueues>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

        return $r2;
    }

    private void initializeGL()
    {
        android.view.ViewRoot $r0;
        int $i0;
        javax.microedition.khronos.egl.EGL10 $r1;

        $r0 := @this: android.view.ViewRoot;

        specialinvoke $r0.<android.view.ViewRoot: void initializeGLInner()>();

        $r1 = $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl>;

        $i0 = interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: int eglGetError()>();

        if $i0 == 12288 goto label1;

        specialinvoke $r0.<android.view.ViewRoot: void destroyGL()>();

        $r0.<android.view.ViewRoot: boolean mGlWanted> = 0;

        return;

     label1:
        return;
    }

    private void initializeGLInner()
    {
        android.view.ViewRoot $r0;
        int[] $r1, $r3;
        javax.microedition.khronos.egl.EGLConfig[] $r2;
        javax.microedition.khronos.egl.EGLConfig $r4;
        javax.microedition.khronos.egl.EGL $r5;
        javax.microedition.khronos.egl.EGL10 $r6;
        java.lang.Object $r7;
        javax.microedition.khronos.egl.EGLDisplay $r8;
        javax.microedition.khronos.egl.EGLContext $r9;
        android.view.SurfaceHolder $r10;
        javax.microedition.khronos.egl.EGLSurface $r11;
        javax.microedition.khronos.opengles.GL $r12;
        javax.microedition.khronos.opengles.GL11 $r13;
        android.graphics.Canvas $r14;

        $r0 := @this: android.view.ViewRoot;

        $r5 = staticinvoke <javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>();

        $r6 = (javax.microedition.khronos.egl.EGL10) $r5;

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGL10 mEgl> = $r6;

        $r7 = <javax.microedition.khronos.egl.EGL10: java.lang.Object EGL_DEFAULT_DISPLAY>;

        $r8 = interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>($r7);

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLDisplay mEglDisplay> = $r8;

        $r1 = newarray (int)[2];

        interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>($r8, $r1);

        $r1 = newarray (int)[9];

        $r1[0] = 12324;

        $r1[1] = 5;

        $r1[2] = 12323;

        $r1[3] = 6;

        $r1[4] = 12322;

        $r1[5] = 5;

        $r1[6] = 12325;

        $r1[7] = 0;

        $r1[8] = 12344;

        $r2 = newarray (javax.microedition.khronos.egl.EGLConfig)[1];

        $r3 = newarray (int)[1];

        interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>($r8, $r1, $r2, 1, $r3);

        $r4 = $r2[0];

        $r9 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

        $r9 = interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>($r8, $r4, $r9, null);

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLContext mEglContext> = $r9;

        $r10 = $r0.<android.view.ViewRoot: android.view.SurfaceHolder mHolder>;

        $r11 = interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>($r8, $r4, $r10, null);

        $r0.<android.view.ViewRoot: javax.microedition.khronos.egl.EGLSurface mEglSurface> = $r11;

        interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>($r8, $r11, $r11, $r9);

        $r12 = virtualinvoke $r9.<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.opengles.GL getGL()>();

        $r13 = (javax.microedition.khronos.opengles.GL11) $r12;

        $r0.<android.view.ViewRoot: javax.microedition.khronos.opengles.GL11 mGL> = $r13;

        $r14 = new android.graphics.Canvas;

        specialinvoke $r14.<android.graphics.Canvas: void <init>(javax.microedition.khronos.opengles.GL)>($r13);

        $r0.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas> = $r14;

        $r0.<android.view.ViewRoot: boolean mUseGL> = 1;

        return;
    }

    static boolean isDirectional(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    static boolean isInTouchMode()
    {
        boolean $z0;
        android.view.IWindowSession $r0;
        android.os.RemoteException $r1;

        $z0 = <android.view.ViewRoot: boolean mInitialized>;

        if $z0 == 0 goto label4;

        $r0 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

     label1:
        $z0 = interfaceinvoke $r0.<android.view.IWindowSession: boolean getInTouchMode()>();

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static boolean isKeyboardKey(android.view.KeyEvent)
    {
        android.view.KeyEvent $r0;
        int $i0;

        $r0 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r0.<android.view.KeyEvent: int getUnicodeChar()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.view.View $r0, $r1;
        android.view.ViewParent $r2;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke $r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r0 = (android.view.View) $r2;

        $z0 = staticinvoke <android.view.ViewRoot: boolean isViewDescendantOf(android.view.View,android.view.View)>($r0, $r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean leaveTouchMode()
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;
        boolean $z0;
        android.view.ViewGroup $r2;
        int $i0;

        $r0 := @this: android.view.ViewRoot;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = $r1;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $z0 = $r1 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $r2 = (android.view.ViewGroup) $r1;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 == 262144 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke $r0.<android.view.ViewRoot: android.view.View focusSearch(android.view.View,int)>(null, 130);

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>(130);

        return $z0;

     label3:
        return 0;
    }

    private static native void nativeAbandonGlCaches();

    private static native void nativeShowFPS(android.graphics.Canvas, int);

    private void performTraversals()
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.WindowManager$LayoutParams $r2, $r4, $r16;
        android.view.View$AttachInfo $r3, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        android.view.Display $r5;
        android.view.Surface $r6;
        android.view.ViewRoot$RunQueue $r7;
        android.os.Handler $r8;
        android.graphics.Rect $r10, $r14, $r19;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        android.view.ViewTreeObserver $r15;
        android.view.IWindowSession $r17;
        android.view.ViewRoot$W $r18;
        android.graphics.Canvas $r20;
        float $f0, $f1;
        byte $b6;
        int[] $r21;
        android.graphics.Region $r22, $r23;
        android.view.ViewTreeObserver$InternalInsetsInfo $r24, $r25;
        android.view.inputmethod.InputMethodManager $r26;
        android.os.RemoteException $r27, $r29, $r30, $r31;
        android.widget.Scroller $r28;

        $r0 := @this: android.view.ViewRoot;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 == null goto label100;

        $z0 = $r0.<android.view.ViewRoot: boolean mAdded>;

        if $z0 != 0 goto label001;

        return;

     label001:
        $r0.<android.view.ViewRoot: boolean mTraversalScheduled> = 0;

        $r0.<android.view.ViewRoot: boolean mWillDrawSoon> = 1;

        $z1 = 0;

        $z0 = $r0.<android.view.ViewRoot: boolean mFullRedrawNeeded>;

        $z2 = 0;

        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $i0 = virtualinvoke $r0.<android.view.ViewRoot: int getHostVisibility()>();

        $i1 = $r0.<android.view.ViewRoot: int mViewVisibility>;

        if $i1 != $i0 goto label002;

        $z3 = $r0.<android.view.ViewRoot: boolean mNewSurfaceNeeded>;

        if $z3 == 0 goto label016;

     label002:
        $z3 = 1;

     label003:
        $r4 = null;

        $z4 = $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged>;

        if $z4 == 0 goto label004;

        $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged> = 0;

        $r4 = $r2;

     label004:
        $z4 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z4 == 0 goto label017;

        $z0 = 1;

        $r0.<android.view.ViewRoot: boolean mLayoutRequested> = 1;

        $r5 = new android.view.Display;

        specialinvoke $r5.<android.view.Display: void <init>(int)>(0);

        $i1 = virtualinvoke $r5.<android.view.Display: int getWidth()>();

        $i2 = virtualinvoke $r5.<android.view.Display: int getHeight()>();

        $r6 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

        $r3.<android.view.View$AttachInfo: android.view.Surface mSurface> = $r6;

        $r3.<android.view.View$AttachInfo: boolean mHasWindowFocus> = 0;

        $r3.<android.view.View$AttachInfo: int mWindowVisibility> = $i0;

        $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes> = 0;

        $r3.<android.view.View$AttachInfo: boolean mKeepScreenOn> = 0;

        $z3 = 0;

        virtualinvoke $r1.<android.view.View: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>($r3, 0);

        $r7 = staticinvoke <android.view.ViewRoot: android.view.ViewRoot$RunQueue getRunQueue()>();

        $r8 = $r3.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.view.ViewRoot$RunQueue: void executeActions(android.os.Handler)>($r8);

     label005:
        if $z3 == 0 goto label008;

        $r3.<android.view.View$AttachInfo: int mWindowVisibility> = $i0;

        virtualinvoke $r1.<android.view.View: void dispatchWindowVisibilityChanged(int)>($i0);

        if $i0 != 0 goto label006;

        $z4 = $r0.<android.view.ViewRoot: boolean mNewSurfaceNeeded>;

        if $z4 == 0 goto label007;

     label006:
        $z4 = $r0.<android.view.ViewRoot: boolean mUseGL>;

        if $z4 == 0 goto label007;

        specialinvoke $r0.<android.view.ViewRoot: void destroyGL()>();

     label007:
        if $i0 != 8 goto label008;

        $r0.<android.view.ViewRoot: boolean mHasHadWindowFocus> = 0;

     label008:
        $z5 = 0;

        $z4 = $r0.<android.view.ViewRoot: boolean mLayoutRequested>;

        if $z4 == 0 goto label011;

        $z4 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z4 == 0 goto label020;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        virtualinvoke $r1.<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>($r10);

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $z4 = $r0.<android.view.ViewRoot: boolean mAddedTouchMode>;

        if $z4 != 0 goto label019;

        $z4 = 1;

     label009:
        $r9.<android.view.View$AttachInfo: boolean mInTouchMode> = $z4;

        $z4 = $r0.<android.view.ViewRoot: boolean mAddedTouchMode>;

        specialinvoke $r0.<android.view.ViewRoot: boolean ensureTouchModeLocally(boolean)>($z4);

     label010:
        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i1 = specialinvoke $r0.<android.view.ViewRoot: int getRootMeasureSpec(int,int)>($i1, $i3);

        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        $i2 = specialinvoke $r0.<android.view.ViewRoot: int getRootMeasureSpec(int,int)>($i2, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i2);

     label011:
        $z4 = $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes>;

        if $z4 == 0 goto label012;

        $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes> = 0;

        $z4 = $r3.<android.view.View$AttachInfo: boolean mKeepScreenOn>;

        $r3.<android.view.View$AttachInfo: boolean mKeepScreenOn> = 0;

        virtualinvoke $r1.<android.view.View: void dispatchCollectViewAttributes(int)>(0);

        $z6 = $r3.<android.view.View$AttachInfo: boolean mKeepScreenOn>;

        if $z6 == $z4 goto label012;

        $r4 = $r2;

     label012:
        $z4 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z4 != 0 goto label013;

        $z4 = $r3.<android.view.View$AttachInfo: boolean mViewVisibilityChanged>;

        if $z4 == 0 goto label026;

     label013:
        $r3.<android.view.View$AttachInfo: boolean mViewVisibilityChanged> = 0;

        $i1 = $r0.<android.view.ViewRoot: int mSoftInputMode>;

        $i2 = $i1 & 240;

        $i1 = $i2;

        if $i2 != 0 goto label026;

        $r11 = $r3.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers>;

        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i3 = 0;

     label014:
        if $i3 >= $i2 goto label024;

        $r11 = $r3.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r13 = (android.view.View) $r12;

        $z4 = virtualinvoke $r13.<android.view.View: boolean isShown()>();

        if $z4 == 0 goto label015;

        $i1 = 16;

     label015:
        $i3 = $i3 + 1;

        goto label014;

     label016:
        $z3 = 0;

        goto label003;

     label017:
        $r10 = $r0.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $i4 = virtualinvoke $r10.<android.graphics.Rect: int width()>();

        $i1 = $i4;

        $r10 = $r0.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $i3 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        $i2 = $i3;

        $i5 = $r0.<android.view.ViewRoot: int mWidth>;

        if $i4 != $i5 goto label018;

        $i4 = $r0.<android.view.ViewRoot: int mHeight>;

        if $i3 == $i4 goto label005;

     label018:
        $z0 = 1;

        $r0.<android.view.ViewRoot: boolean mLayoutRequested> = 1;

        $z1 = 1;

        goto label005;

     label019:
        $z4 = 0;

        goto label009;

     label020:
        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $z4 = virtualinvoke $r10.<android.graphics.Rect: boolean equals(java.lang.Object)>($r14);

        if $z4 != 0 goto label021;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>($r14);

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        virtualinvoke $r1.<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>($r10);

        $z5 = 1;

     label021:
        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets>;

        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        $z4 = virtualinvoke $r10.<android.graphics.Rect: boolean equals(java.lang.Object)>($r14);

        if $z4 != 0 goto label022;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets>;

        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>($r14);

     label022:
        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i3 == -2 goto label023;

        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i3 != -2 goto label010;

     label023:
        $z1 = 1;

        $r5 = new android.view.Display;

        specialinvoke $r5.<android.view.Display: void <init>(int)>(0);

        $i1 = virtualinvoke $r5.<android.view.Display: int getWidth()>();

        $i2 = virtualinvoke $r5.<android.view.Display: int getHeight()>();

        goto label010;

     label024:
        if $i1 != 0 goto label025;

        $i1 = 32;

     label025:
        $i2 = $r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i2 = $i2 & 240;

        if $i2 == $i1 goto label026;

        $i2 = $r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i2 = $i2 & -241;

        $i1 = $i2 | $i1;

        $r2.<android.view.WindowManager$LayoutParams: int softInputMode> = $i1;

        $r4 = $r2;

     label026:
        if $r4 == null goto label027;

        $i1 = $r1.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 & 512;

        if $i1 == 0 goto label027;

        $i1 = $r4.<android.view.WindowManager$LayoutParams: int format>;

        $z4 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i1);

        if $z4 != 0 goto label027;

        $r4.<android.view.WindowManager$LayoutParams: int format> = -3;

     label027:
        $z4 = $r0.<android.view.ViewRoot: boolean mLayoutRequested>;

        if $z4 == 0 goto label080;

        if $z1 == 0 goto label080;

        $i1 = $r0.<android.view.ViewRoot: int mWidth>;

        $i2 = $r1.<android.view.View: int mMeasuredWidth>;

        if $i1 != $i2 goto label028;

        $i1 = $r0.<android.view.ViewRoot: int mHeight>;

        $i2 = $r1.<android.view.View: int mMeasuredHeight>;

        if $i1 == $i2 goto label080;

     label028:
        $z6 = 1;

     label029:
        $r15 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        $z1 = virtualinvoke $r15.<android.view.ViewTreeObserver: boolean hasComputeInternalInsetsListeners()>();

        $z4 = 0;

        $i1 = 0;

        $z7 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z7 != 0 goto label030;

        if $z6 != 0 goto label030;

        if $z5 != 0 goto label030;

        if $z3 != 0 goto label030;

        if $r4 == null goto label064;

     label030:
        if $i0 != 0 goto label034;

        if $z1 == 0 goto label081;

        $z4 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z4 != 0 goto label031;

        if $z3 == 0 goto label081;

     label031:
        $z4 = 1;

     label032:
        $r16 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i2 = $r16.<android.view.WindowManager$LayoutParams: int memoryType>;

        if $i2 != 2 goto label034;

        if $r4 != null goto label033;

        $r4 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

     label033:
        $r0.<android.view.ViewRoot: boolean mGlWanted> = 1;

     label034:
        $r10 = $r0.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $z5 = 0;

        $z3 = 0;

        $r6 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

     label035:
        $z6 = virtualinvoke $r6.<android.view.Surface: boolean isValid()>();

     label036:
        $i2 = 0;

        if $r4 == null goto label037;

        $i2 = $r4.<android.view.WindowManager$LayoutParams: int flags>;

        $z7 = $r3.<android.view.View$AttachInfo: boolean mKeepScreenOn>;

        if $z7 == 0 goto label037;

        $i3 = $r4.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = $i3 | 128;

        $r4.<android.view.WindowManager$LayoutParams: int flags> = $i3;

     label037:
        $r17 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r18 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $i3 = $r1.<android.view.View: int mMeasuredWidth>;

        $i4 = $r1.<android.view.View: int mMeasuredHeight>;

        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $r19 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

     label038:
        $r6 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

        $i1 = interfaceinvoke $r17.<android.view.IWindowSession: int relayout(android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.Surface)>($r18, $r4, $i3, $i4, $i0, $z4, $r10, $r14, $r19, $r6);

     label039:
        if $r4 == null goto label040;

        $r4.<android.view.WindowManager$LayoutParams: int flags> = $i2;

     label040:
        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

     label041:
        $r19 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        $z7 = virtualinvoke $r14.<android.graphics.Rect: boolean equals(java.lang.Object)>($r19);

     label042:
        if $z7 != 0 goto label082;

        $z3 = 1;

     label043:
        $r14 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

     label044:
        $r19 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets>;

        $z7 = virtualinvoke $r14.<android.graphics.Rect: boolean equals(java.lang.Object)>($r19);

     label045:
        if $z7 != 0 goto label083;

        $z7 = 1;

     label046:
        if $z3 == 0 goto label050;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r14 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

     label047:
        $r19 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        virtualinvoke $r14.<android.graphics.Rect: void set(android.graphics.Rect)>($r19);

     label048:
        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

     label049:
        $r14 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        virtualinvoke $r1.<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>($r14);

     label050:
        if $z7 == 0 goto label052;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r14 = $r9.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets>;

     label051:
        $r19 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        virtualinvoke $r14.<android.graphics.Rect: void set(android.graphics.Rect)>($r19);

     label052:
        if $z6 != 0 goto label085;

     label053:
        $r6 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

        $z6 = virtualinvoke $r6.<android.view.Surface: boolean isValid()>();

     label054:
        if $z6 == 0 goto label057;

        $z2 = 1;

        $z0 = 1;

        $z6 = $r0.<android.view.ViewRoot: boolean mGlWanted>;

        if $z6 == 0 goto label057;

        $z6 = $r0.<android.view.ViewRoot: boolean mUseGL>;

     label055:
        if $z6 != 0 goto label057;

        specialinvoke $r0.<android.view.ViewRoot: void initializeGL()>();

     label056:
        $r20 = $r0.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas>;

        if $r20 == null goto label084;

        $z5 = 1;

     label057:
        $i2 = $r10.<android.graphics.Rect: int left>;

        $r3.<android.view.View$AttachInfo: int mWindowLeft> = $i2;

        $i2 = $r10.<android.graphics.Rect: int top>;

        $r3.<android.view.View$AttachInfo: int mWindowTop> = $i2;

        $i2 = virtualinvoke $r10.<android.graphics.Rect: int width()>();

        $r0.<android.view.ViewRoot: int mWidth> = $i2;

        $i2 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        $r0.<android.view.ViewRoot: int mHeight> = $i2;

        if $z5 == 0 goto label058;

        $r20 = $r0.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas>;

        $i2 = $r0.<android.view.ViewRoot: int mWidth>;

        $i3 = $r0.<android.view.ViewRoot: int mHeight>;

        virtualinvoke $r20.<android.graphics.Canvas: void setViewport(int,int)>($i2, $i3);

     label058:
        $i2 = $i1 & 1;

        if $i2 == 0 goto label091;

        $z5 = 1;

     label059:
        $z5 = specialinvoke $r0.<android.view.ViewRoot: boolean ensureTouchModeLocally(boolean)>($z5);

        if $z5 != 0 goto label060;

        $i2 = $r0.<android.view.ViewRoot: int mWidth>;

        $i3 = $r1.<android.view.View: int mMeasuredWidth>;

        if $i2 != $i3 goto label060;

        $i2 = $r0.<android.view.ViewRoot: int mHeight>;

        $i3 = $r1.<android.view.View: int mMeasuredHeight>;

        if $i2 != $i3 goto label060;

        if $z3 == 0 goto label064;

     label060:
        $i2 = $r0.<android.view.ViewRoot: int mWidth>;

        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i3 = specialinvoke $r0.<android.view.ViewRoot: int getRootMeasureSpec(int,int)>($i2, $i3);

        $i2 = $i3;

        $i4 = $r0.<android.view.ViewRoot: int mHeight>;

        $i5 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        $i5 = specialinvoke $r0.<android.view.ViewRoot: int getRootMeasureSpec(int,int)>($i4, $i5);

        $i4 = $i5;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i5);

        $i5 = $r1.<android.view.View: int mMeasuredWidth>;

        $i3 = $r1.<android.view.View: int mMeasuredHeight>;

        $z3 = 0;

        $f0 = $r2.<android.view.WindowManager$LayoutParams: float horizontalWeight>;

        $b6 = $f0 cmpl 0.0F;

        if $b6 <= 0 goto label061;

        $i2 = $r0.<android.view.ViewRoot: int mWidth>;

        $i2 = $i2 - $i5;

        $f0 = (float) $i2;

        $f1 = $r2.<android.view.WindowManager$LayoutParams: float horizontalWeight>;

        $f0 = $f0 * $f1;

        $i2 = (int) $f0;

        $i2 = $i5 + $i2;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        $z3 = 1;

     label061:
        $f0 = $r2.<android.view.WindowManager$LayoutParams: float verticalWeight>;

        $b6 = $f0 cmpl 0.0F;

        if $b6 <= 0 goto label062;

        $i4 = $r0.<android.view.ViewRoot: int mHeight>;

        $i4 = $i4 - $i3;

        $f0 = (float) $i4;

        $f1 = $r2.<android.view.WindowManager$LayoutParams: float verticalWeight>;

        $f0 = $f0 * $f1;

        $i4 = (int) $f0;

        $i3 = $i3 + $i4;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        $z3 = 1;

     label062:
        if $z3 == 0 goto label063;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i2, $i4);

     label063:
        $r0.<android.view.ViewRoot: boolean mLayoutRequested> = 1;

     label064:
        $z3 = $r0.<android.view.ViewRoot: boolean mLayoutRequested>;

        if $z3 != 0 goto label065;

        $z5 = $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes>;

        if $z5 == 0 goto label092;

     label065:
        $z5 = 1;

     label066:
        if $z3 == 0 goto label068;

        $r0.<android.view.ViewRoot: boolean mLayoutRequested> = 0;

        $r0.<android.view.ViewRoot: boolean mScrollMayChange> = 1;

        $i2 = $r1.<android.view.View: int mMeasuredWidth>;

        $i3 = $r1.<android.view.View: int mMeasuredHeight>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>(0, 0, $i2, $i3);

        $i2 = $r1.<android.view.View: int mPrivateFlags>;

        $i2 = $i2 & 512;

        if $i2 == 0 goto label068;

        $r21 = $r0.<android.view.ViewRoot: int[] mTmpLocation>;

        virtualinvoke $r1.<android.view.View: void getLocationInWindow(int[])>($r21);

        $r22 = $r0.<android.view.ViewRoot: android.graphics.Region mTransparentRegion>;

        $r21 = $r0.<android.view.ViewRoot: int[] mTmpLocation>;

        $i2 = $r21[0];

        $r21 = $r0.<android.view.ViewRoot: int[] mTmpLocation>;

        $i3 = $r21[1];

        $r21 = $r0.<android.view.ViewRoot: int[] mTmpLocation>;

        $i4 = $r21[0];

        $i5 = $r1.<android.view.View: int mRight>;

        $i4 = $i4 + $i5;

        $i5 = $r1.<android.view.View: int mLeft>;

        $i4 = $i4 - $i5;

        $r21 = $r0.<android.view.ViewRoot: int[] mTmpLocation>;

        $i5 = $r21[1];

        $i7 = $r1.<android.view.View: int mBottom>;

        $i5 = $i5 + $i7;

        $i7 = $r1.<android.view.View: int mTop>;

        $i5 = $i5 - $i7;

        virtualinvoke $r22.<android.graphics.Region: boolean set(int,int,int,int)>($i2, $i3, $i4, $i5);

        $r22 = $r0.<android.view.ViewRoot: android.graphics.Region mTransparentRegion>;

        virtualinvoke $r1.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>($r22);

        $r22 = $r0.<android.view.ViewRoot: android.graphics.Region mTransparentRegion>;

        $r23 = $r0.<android.view.ViewRoot: android.graphics.Region mPreviousTransparentRegion>;

        $z3 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z3 != 0 goto label068;

        $r22 = $r0.<android.view.ViewRoot: android.graphics.Region mPreviousTransparentRegion>;

        $r23 = $r0.<android.view.ViewRoot: android.graphics.Region mTransparentRegion>;

        virtualinvoke $r22.<android.graphics.Region: boolean set(android.graphics.Region)>($r23);

        $r17 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r18 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $r22 = $r0.<android.view.ViewRoot: android.graphics.Region mTransparentRegion>;

     label067:
        interfaceinvoke $r17.<android.view.IWindowSession: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>($r18, $r22);

     label068:
        if $z5 == 0 goto label069;

        $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes> = 0;

        $r15 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r15.<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>();

     label069:
        if $z1 == 0 goto label072;

        $r24 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver$InternalInsetsInfo mGivenInternalInsets>;

        $r25 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver$InternalInsetsInfo mGivenInternalInsets>;

        $r10 = $r25.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect contentInsets>;

        $r25 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver$InternalInsetsInfo mGivenInternalInsets>;

        $r14 = $r25.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect visibleInsets>;

        $r14.<android.graphics.Rect: int bottom> = 0;

        $r14.<android.graphics.Rect: int right> = 0;

        $r14.<android.graphics.Rect: int top> = 0;

        $r14.<android.graphics.Rect: int left> = 0;

        $r10.<android.graphics.Rect: int bottom> = 0;

        $r10.<android.graphics.Rect: int right> = 0;

        $r10.<android.graphics.Rect: int top> = 0;

        $r10.<android.graphics.Rect: int left> = 0;

        $r15 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r15.<android.view.ViewTreeObserver: void dispatchOnComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo)>($r24);

        if $z4 != 0 goto label070;

        $r25 = $r0.<android.view.ViewRoot: android.view.ViewTreeObserver$InternalInsetsInfo mLastGivenInsets>;

        $z3 = virtualinvoke $r25.<android.view.ViewTreeObserver$InternalInsetsInfo: boolean equals(java.lang.Object)>($r24);

        if $z3 != 0 goto label072;

     label070:
        $r25 = $r0.<android.view.ViewRoot: android.view.ViewTreeObserver$InternalInsetsInfo mLastGivenInsets>;

        virtualinvoke $r25.<android.view.ViewTreeObserver$InternalInsetsInfo: void set(android.view.ViewTreeObserver$InternalInsetsInfo)>($r24);

        $r17 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r18 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $i2 = $r24.<android.view.ViewTreeObserver$InternalInsetsInfo: int mTouchableInsets>;

        $r10 = $r24.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect contentInsets>;

        $r14 = $r24.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect visibleInsets>;

     label071:
        interfaceinvoke $r17.<android.view.IWindowSession: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect)>($r18, $i2, $r10, $r14);

     label072:
        $z3 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z3 == 0 goto label073;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 == null goto label073;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z3 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z3 != 0 goto label093;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>(2);

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        $r0.<android.view.ViewRoot: android.view.View mRealFocusedView> = $r1;

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = $r1;

     label073:
        $r0.<android.view.ViewRoot: boolean mFirst> = 0;

        $r0.<android.view.ViewRoot: boolean mWillDrawSoon> = 0;

        $r0.<android.view.ViewRoot: boolean mNewSurfaceNeeded> = 0;

        $r0.<android.view.ViewRoot: int mViewVisibility> = $i0;

        $r9 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $z3 = $r9.<android.view.View$AttachInfo: boolean mHasWindowFocus>;

        if $z3 == 0 goto label075;

        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $z3 = staticinvoke <android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>($i0);

        $z1 = $r0.<android.view.ViewRoot: boolean mLastWasImTarget>;

        if $z3 == $z1 goto label075;

        $r0.<android.view.ViewRoot: boolean mLastWasImTarget> = $z3;

        $r26 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r26 == null goto label075;

        if $z3 == 0 goto label075;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r26.<android.view.inputmethod.InputMethodManager: void startGettingWindowFocus(android.view.View)>($r1);

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r13 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r13 = virtualinvoke $r13.<android.view.View: android.view.View findFocus()>();

        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $z3 = $r0.<android.view.ViewRoot: boolean mHasHadWindowFocus>;

        if $z3 != 0 goto label094;

        $z3 = 1;

     label074:
        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i2 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        virtualinvoke $r26.<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)>($r1, $r13, $i0, $z3, $i2);

     label075:
        $r15 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        $z3 = virtualinvoke $r15.<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>();

        if $z3 != 0 goto label095;

        if $z2 != 0 goto label095;

        $r0.<android.view.ViewRoot: boolean mFullRedrawNeeded> = 0;

        specialinvoke $r0.<android.view.ViewRoot: void draw(boolean)>($z0);

        $i0 = $i1 & 2;

        if $i0 != 0 goto label076;

        $z0 = $r0.<android.view.ViewRoot: boolean mReportNextDraw>;

        if $z0 == 0 goto label101;

     label076:
        $r0.<android.view.ViewRoot: boolean mReportNextDraw> = 0;

        $r17 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r18 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label077:
        interfaceinvoke $r17.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>($r18);

     label078:
        return;

     label079:
        $r27 := @caughtexception;

        return;

     label080:
        $z6 = 0;

        goto label029;

     label081:
        $z4 = 0;

        goto label032;

     label082:
        $z3 = 0;

        goto label043;

     label083:
        $z7 = 0;

        goto label046;

     label084:
        $z5 = 0;

        goto label057;

     label085:
        $r6 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

     label086:
        $z6 = virtualinvoke $r6.<android.view.Surface: boolean isValid()>();

     label087:
        if $z6 != 0 goto label057;

        $r0.<android.view.ViewRoot: android.view.View mLastScrolledFocus> = null;

        $r0.<android.view.ViewRoot: int mCurScrollY> = 0;

        $r0.<android.view.ViewRoot: int mScrollY> = 0;

        $r28 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        if $r28 == null goto label057;

     label088:
        $r28 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        virtualinvoke $r28.<android.widget.Scroller: void abortAnimation()>();

     label089:
        goto label057;

     label090:
        $r29 := @caughtexception;

        goto label057;

     label091:
        $z5 = 0;

        goto label059;

     label092:
        $z5 = 0;

        goto label066;

     label093:
        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        $r0.<android.view.ViewRoot: android.view.View mRealFocusedView> = $r1;

        goto label073;

     label094:
        $z3 = 0;

        goto label074;

     label095:
        $i0 = $i1 & 2;

        if $i0 == 0 goto label096;

        $r0.<android.view.ViewRoot: boolean mReportNextDraw> = 1;

     label096:
        if $z0 == 0 goto label097;

        $r0.<android.view.ViewRoot: boolean mFullRedrawNeeded> = 1;

     label097:
        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;

     label098:
        $r30 := @caughtexception;

        goto label072;

     label099:
        $r31 := @caughtexception;

        goto label068;

     label100:
        return;

     label101:
        return;

        catch android.os.RemoteException from label035 to label036 with label090;
        catch android.os.RemoteException from label038 to label039 with label090;
        catch android.os.RemoteException from label041 to label042 with label090;
        catch android.os.RemoteException from label044 to label045 with label090;
        catch android.os.RemoteException from label047 to label048 with label090;
        catch android.os.RemoteException from label049 to label050 with label090;
        catch android.os.RemoteException from label051 to label052 with label090;
        catch android.os.RemoteException from label053 to label054 with label090;
        catch android.os.RemoteException from label055 to label056 with label090;
        catch android.os.RemoteException from label067 to label068 with label099;
        catch android.os.RemoteException from label071 to label072 with label098;
        catch android.os.RemoteException from label077 to label078 with label079;
        catch android.os.RemoteException from label086 to label087 with label090;
        catch android.os.RemoteException from label088 to label089 with label090;
    }

    public void bringChildToFront(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        return;
    }

    void checkThread()
    {
        android.view.ViewRoot $r0;
        java.lang.Thread $r1, $r2;
        android.view.ViewRoot$CalledFromWrongThreadException $r3;

        $r0 := @this: android.view.ViewRoot;

        $r2 = $r0.<android.view.ViewRoot: java.lang.Thread mThread>;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r2 == $r1 goto label1;

        $r3 = new android.view.ViewRoot$CalledFromWrongThreadException;

        specialinvoke $r3.<android.view.ViewRoot$CalledFromWrongThreadException: void <init>(java.lang.String)>("Only the original thread that created a view hierarchy can touch its views.");

        throw $r3;

     label1:
        return;
    }

    public void childDrawableStateChanged(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        return;
    }

    public void clearChildFocus(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r2;
        boolean $z0;
        android.view.View$AttachInfo $r3;
        android.view.ViewTreeObserver $r4;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r1 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $r0.<android.view.ViewRoot: android.view.View mRealFocusedView> = null;

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = null;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean hasFocus()>();

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int)>(2);

        if $z0 != 0 goto label2;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>($r1, null);

        return;

     label1:
        if $r1 == null goto label3;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>($r1, null);

        return;

     label2:
        return;

     label3:
        return;
    }

    public void createContextMenu(android.view.ContextMenu)
    {
        android.view.ViewRoot $r0;
        android.view.ContextMenu $r1;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.ContextMenu;

        return;
    }

    public void debug()
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewRoot;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r1.<android.view.View: void debug()>();

        return;
    }

    public void die(boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0, $z1, $z2;
        android.view.WindowManager$LayoutParams $r1;
        android.graphics.Rect $r2, $r3, $r4;
        android.view.Surface $r5;
        android.view.View $r6;
        int $i0, $i1, $i2;
        android.view.IWindowSession $r7;
        android.view.ViewRoot$W $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        entermonitor $r0;

     label01:
        $z1 = $r0.<android.view.ViewRoot: boolean mAdded>;

        if $z1 == 0 goto label09;

        $z1 = $r0.<android.view.ViewRoot: boolean mFirst>;

        if $z1 != 0 goto label09;

        $r6 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i0 = virtualinvoke $r6.<android.view.View: int getVisibility()>();

        $i1 = $r0.<android.view.ViewRoot: int mViewVisibility>;

        if $i1 == $i0 goto label12;

        $z1 = 1;

     label02:
        $z2 = $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged>;

     label03:
        if $z2 != 0 goto label04;

        if $z1 == 0 goto label08;

     label04:
        $r7 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r8 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $r1 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r6 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i1 = $r6.<android.view.View: int mMeasuredWidth>;

        $r6 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i2 = $r6.<android.view.View: int mMeasuredHeight>;

        $r2 = $r0.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $r3 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $r4 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        $r5 = $r0.<android.view.ViewRoot: android.view.Surface mSurface>;

     label05:
        $i0 = interfaceinvoke $r7.<android.view.IWindowSession: int relayout(android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.Surface)>($r8, $r1, $i1, $i2, $i0, 0, $r2, $r3, $r4, $r5);

     label06:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label08;

        $r7 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

     label07:
        $r8 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        interfaceinvoke $r7.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>($r8);

     label08:
        $r0.<android.view.ViewRoot: android.view.Surface mSurface> = null;

     label09:
        $z1 = $r0.<android.view.ViewRoot: boolean mAdded>;

        if $z1 == 0 goto label10;

        $r0.<android.view.ViewRoot: boolean mAdded> = 0;

        if $z0 == 0 goto label13;

        virtualinvoke $r0.<android.view.ViewRoot: void dispatchDetachedFromWindow()>();

     label10:
        exitmonitor $r0;

     label11:
        return;

     label12:
        $z1 = 0;

        goto label02;

     label13:
        $r6 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r6 == null goto label10;

        virtualinvoke $r0.<android.os.Handler: boolean sendEmptyMessage(int)>(1001);

        goto label10;

     label14:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label15:
        throw $r9;

     label16:
        $r10 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label03 with label14;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch android.os.RemoteException from label07 to label08 with label16;
        catch java.lang.Throwable from label04 to label08 with label14;
        catch java.lang.Throwable from label08 to label11 with label14;
        catch java.lang.Throwable from label12 to label15 with label14;
    }

    public void dispatchAppVisibility(boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0;
        android.os.Message $r1;
        byte $b0;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(1008);

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $r1.<android.os.Message: int arg1> = $b0;

        virtualinvoke $r0.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    void dispatchDetachedFromWindow()
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;
        android.view.View$AttachInfo $r2;
        boolean $z0;
        android.view.IWindowSession $r3;
        android.view.ViewRoot$W $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.view.ViewRoot;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r1.<android.view.View: void dispatchDetachedFromWindow()>();

     label1:
        $r0.<android.view.ViewRoot: android.view.View mView> = null;

        $r2 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r2.<android.view.View$AttachInfo: android.view.View mRootView> = null;

        $z0 = $r0.<android.view.ViewRoot: boolean mUseGL>;

        if $z0 == 0 goto label2;

        specialinvoke $r0.<android.view.ViewRoot: void destroyGL()>();

     label2:
        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label3:
        interfaceinvoke $r3.<android.view.IWindowSession: void remove(android.view.IWindow)>($r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void dispatchFinishedEvent(int, boolean)
    {
        android.view.ViewRoot $r0;
        int $i0;
        boolean $z0;
        android.os.Message $r1;
        byte $b1;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(1010);

        $r1.<android.os.Message: int arg1> = $i0;

        if $z0 == 0 goto label2;

        $b1 = 1;

     label1:
        $r1.<android.os.Message: int arg2> = $b1;

        virtualinvoke $r0.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;

     label2:
        $b1 = 0;

        goto label1;
    }

    public void dispatchGetNewSurface()
    {
        android.view.ViewRoot $r0;
        android.os.Message $r1;

        $r0 := @this: android.view.ViewRoot;

        $r1 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(1009);

        virtualinvoke $r0.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;
    }

    public void dispatchKey(android.view.KeyEvent)
    {
        android.view.ViewRoot $r0;
        android.view.KeyEvent $r1;
        int $i0;
        android.os.Message $r2;
        long $l1;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label1;

     label1:
        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(1005);

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $l1 = virtualinvoke $r1.<android.view.KeyEvent: long getEventTime()>();

        virtualinvoke $r0.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r2, $l1);

        return;
    }

    public void dispatchPointer(android.view.MotionEvent, long)
    {
        android.view.ViewRoot $r0;
        android.view.MotionEvent $r1;
        long $l0;
        android.os.Message $r2;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 := @parameter1: long;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(1006);

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        virtualinvoke $r0.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r2, $l0);

        return;
    }

    public void dispatchResized(int, int, android.graphics.Rect, android.graphics.Rect, boolean)
    {
        android.view.ViewRoot $r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r2, $r5;
        boolean $z0;
        android.os.Message $r3;
        short $s2;
        android.graphics.Rect[] $r4;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $r2 := @parameter3: android.graphics.Rect;

        $z0 := @parameter4: boolean;

        if $z0 == 0 goto label2;

        $s2 = 1003;

     label1:
        $r3 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>($s2);

        $r3.<android.os.Message: int arg1> = $i0;

        $r3.<android.os.Message: int arg2> = $i1;

        $r4 = newarray (android.graphics.Rect)[2];

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r1);

        $r4[0] = $r5;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r2);

        $r4[1] = $r1;

        $r3.<android.os.Message: java.lang.Object obj> = $r4;

        virtualinvoke $r0.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;

     label2:
        $s2 = 1002;

        goto label1;
    }

    public void dispatchTrackball(android.view.MotionEvent, long)
    {
        android.view.ViewRoot $r0;
        android.view.MotionEvent $r1;
        long $l0;
        android.os.Message $r2;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 := @parameter1: long;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(1007);

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        virtualinvoke $r0.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r2, $l0);

        return;
    }

    int enqueuePendingEvent(java.lang.Object, boolean)
    {
        android.view.ViewRoot $r0;
        java.lang.Object $r1;
        boolean $z0;
        int $i0;
        android.util.SparseArray $r2;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $i0 = $r0.<android.view.ViewRoot: int mPendingEventSeq>;

        $i0 = $i0 + 1;

        if $i0 >= 0 goto label1;

        $i0 = 0;

     label1:
        $r0.<android.view.ViewRoot: int mPendingEventSeq> = $i0;

        $r2 = $r0.<android.view.ViewRoot: android.util.SparseArray mPendingEvents>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r1);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = neg $i0;

        return $i0;
    }

    boolean ensureTouchMode(boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0, $z1;
        android.view.View$AttachInfo $r1;
        android.view.IWindowSession $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $z1 = $r1.<android.view.View$AttachInfo: boolean mInTouchMode>;

        if $z1 != $z0 goto label1;

        return 0;

     label1:
        $r2 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

     label2:
        interfaceinvoke $r2.<android.view.IWindowSession: void setInTouchMode(boolean)>($z0);

     label3:
        $z0 = specialinvoke $r0.<android.view.ViewRoot: boolean ensureTouchModeLocally(boolean)>($z0);

        return $z0;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.ViewRoot $r0;
        long $l0;

        $r0 := @this: android.view.ViewRoot;

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        $l0 = <android.view.ViewRoot: long sInstanceCount>;

        $l0 = $l0 - 1L;

        <android.view.ViewRoot: long sInstanceCount> = $l0;

        return;
    }

    public android.view.View focusSearch(android.view.View, int)
    {
        android.view.View $r0, $r2;
        int $i0;
        android.view.ViewRoot $r1;
        boolean $z0;
        android.view.FocusFinder $r3;
        android.view.ViewGroup $r4;

        $r1 := @this: android.view.ViewRoot;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        virtualinvoke $r1.<android.view.ViewRoot: void checkThread()>();

        $r2 = $r1.<android.view.ViewRoot: android.view.View mView>;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r2 = $r1.<android.view.ViewRoot: android.view.View mView>;

        $r4 = (android.view.ViewGroup) $r2;

        $r0 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r4, $r0, $i0);

        return $r0;
    }

    public void focusableViewAvailable(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r2;
        boolean $z0;
        android.view.ViewGroup $r3;
        int $i0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean hasFocus()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        return;

     label1:
        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findFocus()>();

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = $r2;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $r3 = (android.view.ViewGroup) $r2;

        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 262144 goto label3;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label4;

        $r2 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        $z0 = staticinvoke <android.view.ViewRoot: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, $r2);

        if $z0 == 0 goto label5;

        virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return;

     label5:
        return;
    }

    public boolean getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r4;
        android.graphics.Rect $r2;
        android.graphics.Point $r3;
        boolean $z0;
        java.lang.RuntimeException $r5;
        int $i0, $i1;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.graphics.Point;

        $r4 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r1 == $r4 goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("child is not mine, honest!");

        throw $r5;

     label1:
        $i0 = $r0.<android.view.ViewRoot: int mWidth>;

        $i1 = $r0.<android.view.ViewRoot: int mHeight>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i0, $i1);

        return $z0;
    }

    int getHostVisibility()
    {
        android.view.ViewRoot $r0;
        int $i0;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewRoot;

        $z0 = $r0.<android.view.ViewRoot: boolean mAppVisible>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        return $i0;

     label1:
        return 8;
    }

    final android.view.WindowLeaked getLocation()
    {
        android.view.ViewRoot $r0;
        android.view.WindowLeaked r1;

        $r0 := @this: android.view.ViewRoot;

        r1 = $r0.<android.view.ViewRoot: android.view.WindowLeaked mLocation>;

        return r1;
    }

    public android.view.ViewParent getParent()
    {
        android.view.ViewRoot $r0;

        $r0 := @this: android.view.ViewRoot;

        return null;
    }

    public android.view.View getView()
    {
        android.view.ViewRoot $r0;
        android.view.View r1;

        $r0 := @this: android.view.ViewRoot;

        r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        return r1;
    }

    protected android.graphics.Rect getWindowFrame()
    {
        android.view.ViewRoot $r0;
        android.graphics.Rect r1;

        $r0 := @this: android.view.ViewRoot;

        r1 = $r0.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        return r1;
    }

    void handleAppVisibility(boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0, $z1;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.view.ViewRoot: boolean mAppVisible>;

        if $z1 == $z0 goto label1;

        $r0.<android.view.ViewRoot: boolean mAppVisible> = $z0;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;

     label1:
        return;
    }

    void handleFinishedEvent(int, boolean)
    {
        android.view.ViewRoot $r0;
        int $i0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        android.view.KeyEvent $r2;
        android.view.IWindowSession $r3;
        android.view.ViewRoot$W $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.view.ViewRoot: java.lang.Object retrievePendingEvent(int)>($i0);

        $r2 = (android.view.KeyEvent) $r1;

        if $r2 == null goto label8;

        if $i0 < 0 goto label2;

        $z1 = 1;

     label1:
        if $z0 != 0 goto label3;

        specialinvoke $r0.<android.view.ViewRoot: void deliverKeyEventToViewHierarchy(android.view.KeyEvent,boolean)>($r2, $z1);

        return;

     label2:
        $z1 = 0;

        goto label1;

     label3:
        if $z1 == 0 goto label7;

        $r3 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r4 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label4:
        interfaceinvoke $r3.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r4);

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        return;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleFinishedEvent(seq=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" handled=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ev=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") neither delivering nor finishing key");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewRoot", $r7);

        return;

     label8:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    void handleGetNewSurface()
    {
        android.view.ViewRoot $r0;

        $r0 := @this: android.view.ViewRoot;

        $r0.<android.view.ViewRoot: boolean mNewSurfaceNeeded> = 1;

        $r0.<android.view.ViewRoot: boolean mFullRedrawNeeded> = 1;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i5;
        android.graphics.Rect $r1, $r2, $r17;
        android.view.ViewRoot $r3;
        android.os.Message $r4;
        java.lang.Object $r5;
        android.view.View $r6, $r22;
        android.view.View$AttachInfo$InvalidateInfo $r7;
        boolean $z0, $z1, $z2;
        android.view.KeyEvent $r8;
        android.view.MotionEvent $r9;
        android.view.IWindowSession $r10;
        android.view.ViewRoot$W $r11;
        float $f0, $f1;
        android.view.ViewConfiguration $r12;
        short $s4;
        android.view.FocusFinder $r13;
        android.view.ViewGroup $r14;
        java.lang.Throwable $r15;
        android.graphics.Rect[] $r16;
        android.view.View$AttachInfo $r18;
        android.graphics.Canvas $r19;
        android.view.WindowManager$LayoutParams $r20;
        android.view.inputmethod.InputMethodManager $r21;
        android.view.ViewGroup$LayoutParams $r23;
        android.view.inputmethod.InputConnection $r24;
        android.os.RemoteException $r25, $r26, $r27;

        $r3 := @this: android.view.ViewRoot;

        $r4 := @parameter0: android.os.Message;

        $i0 = $r4.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 1000: goto label04;
            case 1001: goto label66;
            case 1002: goto label52;
            case 1003: goto label53;
            case 1004: goto label55;
            case 1005: goto label09;
            case 1006: goto label10;
            case 1007: goto label47;
            case 1008: goto label48;
            case 1009: goto label51;
            case 1010: goto label06;
            case 1011: goto label67;
            case 1012: goto label69;
            case 1013: goto label70;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r6 = (android.view.View) $r5;

        virtualinvoke $r6.<android.view.View: void invalidate()>();

        return;

     label03:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.view.View$AttachInfo$InvalidateInfo) $r5;

        $r6 = $r7.<android.view.View$AttachInfo$InvalidateInfo: android.view.View target>;

        $i0 = $r7.<android.view.View$AttachInfo$InvalidateInfo: int left>;

        $i1 = $r7.<android.view.View$AttachInfo$InvalidateInfo: int top>;

        $i2 = $r7.<android.view.View$AttachInfo$InvalidateInfo: int right>;

        $i3 = $r7.<android.view.View$AttachInfo$InvalidateInfo: int bottom>;

        virtualinvoke $r6.<android.view.View: void invalidate(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke $r7.<android.view.View$AttachInfo$InvalidateInfo: void release()>();

        return;

     label04:
        $z0 = $r3.<android.view.ViewRoot: boolean mProfile>;

        if $z0 == 0 goto label05;

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String)>("ViewRoot");

     label05:
        specialinvoke $r3.<android.view.ViewRoot: void performTraversals()>();

        $z0 = $r3.<android.view.ViewRoot: boolean mProfile>;

        if $z0 == 0 goto label74;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

        $r3.<android.view.ViewRoot: boolean mProfile> = 0;

        return;

     label06:
        $i0 = $r4.<android.os.Message: int arg1>;

        $i1 = $r4.<android.os.Message: int arg2>;

        if $i1 == 0 goto label08;

        $z0 = 1;

     label07:
        virtualinvoke $r3.<android.view.ViewRoot: void handleFinishedEvent(int,boolean)>($i0, $z0);

        return;

     label08:
        $z0 = 0;

        goto label07;

     label09:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r8 = (android.view.KeyEvent) $r5;

        specialinvoke $r3.<android.view.ViewRoot: void deliverKeyEvent(android.view.KeyEvent,boolean)>($r8, 1);

        return;

     label10:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r9 = (android.view.MotionEvent) $r5;

        if $r9 != null goto label28;

        $r10 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r11 = $r3.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label11:
        $r9 = interfaceinvoke $r10.<android.view.IWindowSession: android.view.MotionEvent getPendingPointerMove(android.view.IWindow)>($r11);

     label12:
        $z0 = 1;

     label13:
        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        if $r6 == null goto label25;

        $z1 = $r3.<android.view.ViewRoot: boolean mAdded>;

     label14:
        if $z1 == 0 goto label25;

     label15:
        if $r9 == null goto label25;

        $i0 = virtualinvoke $r9.<android.view.MotionEvent: int getAction()>();

     label16:
        if $i0 != 0 goto label31;

        $z1 = 1;

     label17:
        if $z1 == 0 goto label18;

        virtualinvoke $r3.<android.view.ViewRoot: boolean ensureTouchMode(boolean)>(1);

     label18:
        $i0 = $r3.<android.view.ViewRoot: int mCurScrollY>;

        $f0 = (float) $i0;

        virtualinvoke $r9.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        $z2 = virtualinvoke $r6.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r9);

     label19:
        if $z2 != 0 goto label25;

     label20:
        if $z1 == 0 goto label25;

        $r12 = $r3.<android.view.ViewRoot: android.view.ViewConfiguration mViewConfiguration>;

        $i3 = virtualinvoke $r12.<android.view.ViewConfiguration: int getScaledEdgeSlop()>();

        $i0 = virtualinvoke $r9.<android.view.MotionEvent: int getEdgeFlags()>();

        $s4 = 33;

        $f0 = virtualinvoke $r9.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        $f0 = virtualinvoke $r9.<android.view.MotionEvent: float getY()>();

        $i2 = (int) $f0;

        $r0 = newarray (int)[2];

     label21:
        $i5 = $i0 & 1;

        if $i5 == 0 goto label35;

        $s4 = 130;

        $i5 = $i0 & 4;

     label22:
        if $i5 == 0 goto label32;

        $r0[0] = $i3;

     label23:
        $i1 = $i1 + $i3;

     label24:
        if $i0 == 0 goto label25;

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        $z1 = $r6 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label25;

        $r13 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        $r14 = (android.view.ViewGroup) $r6;

        $r6 = virtualinvoke $r13.<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>($r14, $i1, $i2, $s4, $r0);

        if $r6 == null goto label25;

        $i0 = $r0[0];

        $f0 = (float) $i0;

        $i0 = $r0[1];

        $f1 = (float) $i0;

        virtualinvoke $r9.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, $f1);

        virtualinvoke $r9.<android.view.MotionEvent: void setEdgeFlags(int)>(0);

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r6.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r9);

     label25:
        if $z0 != 0 goto label27;

        $r10 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r11 = $r3.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label26:
        interfaceinvoke $r10.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r11);

     label27:
        if $r9 == null goto label75;

        virtualinvoke $r9.<android.view.MotionEvent: void recycle()>();

        return;

     label28:
        $i0 = virtualinvoke $r9.<android.view.MotionEvent: int getAction()>();

        if $i0 != 4 goto label30;

        $z0 = 1;

     label29:
        goto label13;

     label30:
        $z0 = 0;

        goto label29;

     label31:
        $z1 = 0;

        goto label17;

     label32:
        $i5 = $i0 & 8;

        if $i5 == 0 goto label24;

        $i5 = neg $i3;

     label33:
        $r0[0] = $i5;

     label34:
        $i1 = $i1 - $i3;

        goto label24;

     label35:
        $i5 = $i0 & 2;

        if $i5 == 0 goto label41;

        $s4 = 33;

        $i5 = $i0 & 4;

     label36:
        if $i5 == 0 goto label38;

        $r0[0] = $i3;

     label37:
        $i1 = $i1 + $i3;

        goto label24;

     label38:
        $i5 = $i0 & 8;

        if $i5 == 0 goto label24;

     label39:
        $i5 = neg $i3;

        $r0[0] = $i5;

     label40:
        $i1 = $i1 - $i3;

        goto label24;

     label41:
        $i3 = $i0 & 4;

        if $i3 == 0 goto label42;

        $s4 = 66;

        goto label24;

     label42:
        $i3 = $i0 & 8;

        if $i3 == 0 goto label24;

        $s4 = 17;

        goto label24;

     label43:
        $r15 := @caughtexception;

        if $z0 != 0 goto label45;

        $r10 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r11 = $r3.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label44:
        interfaceinvoke $r10.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r11);

     label45:
        if $r9 == null goto label46;

        virtualinvoke $r9.<android.view.MotionEvent: void recycle()>();

     label46:
        throw $r15;

     label47:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r9 = (android.view.MotionEvent) $r5;

        specialinvoke $r3.<android.view.ViewRoot: void deliverTrackballEvent(android.view.MotionEvent)>($r9);

        return;

     label48:
        $i0 = $r4.<android.os.Message: int arg1>;

        if $i0 == 0 goto label50;

        $z0 = 1;

     label49:
        virtualinvoke $r3.<android.view.ViewRoot: void handleAppVisibility(boolean)>($z0);

        return;

     label50:
        $z0 = 0;

        goto label49;

     label51:
        virtualinvoke $r3.<android.view.ViewRoot: void handleGetNewSurface()>();

        return;

     label52:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r16 = (android.graphics.Rect[]) $r5;

        $r16 = (android.graphics.Rect[]) $r16;

        $r1 = $r16[0];

        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r16 = (android.graphics.Rect[]) $r5;

        $r16 = (android.graphics.Rect[]) $r16;

        $r2 = $r16[1];

        $r17 = $r3.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $i0 = virtualinvoke $r17.<android.graphics.Rect: int width()>();

        $i1 = $r4.<android.os.Message: int arg1>;

        if $i0 != $i1 goto label53;

        $r17 = $r3.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $i0 = virtualinvoke $r17.<android.graphics.Rect: int height()>();

        $i1 = $r4.<android.os.Message: int arg2>;

        if $i0 != $i1 goto label53;

        $r17 = $r3.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $z0 = virtualinvoke $r17.<android.graphics.Rect: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label53;

        $r1 = $r3.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label76;

     label53:
        $z0 = $r3.<android.view.ViewRoot: boolean mAdded>;

        if $z0 == 0 goto label77;

        $r2 = $r3.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $r2.<android.graphics.Rect: int left> = 0;

        $r2 = $r3.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $i0 = $r4.<android.os.Message: int arg1>;

        $r2.<android.graphics.Rect: int right> = $i0;

        $r2 = $r3.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $r2.<android.graphics.Rect: int top> = 0;

        $r2 = $r3.<android.view.ViewRoot: android.graphics.Rect mWinFrame>;

        $i0 = $r4.<android.os.Message: int arg2>;

        $r2.<android.graphics.Rect: int bottom> = $i0;

        $r2 = $r3.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r16 = (android.graphics.Rect[]) $r5;

        $r16 = (android.graphics.Rect[]) $r16;

        $r1 = $r16[0];

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        $r2 = $r3.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r16 = (android.graphics.Rect[]) $r5;

        $r16 = (android.graphics.Rect[]) $r16;

        $r1 = $r16[1];

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        $i0 = $r4.<android.os.Message: int what>;

        if $i0 != 1003 goto label54;

        $r3.<android.view.ViewRoot: boolean mReportNextDraw> = 1;

     label54:
        virtualinvoke $r3.<android.view.ViewRoot: void requestLayout()>();

        return;

     label55:
        $z0 = $r3.<android.view.ViewRoot: boolean mAdded>;

        if $z0 == 0 goto label78;

        $i0 = $r4.<android.os.Message: int arg1>;

        if $i0 == 0 goto label63;

        $z0 = 1;

     label56:
        $r18 = $r3.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r18.<android.view.View$AttachInfo: boolean mHasWindowFocus> = $z0;

        if $z0 == 0 goto label58;

        $i0 = $r4.<android.os.Message: int arg2>;

        if $i0 == 0 goto label64;

        $z1 = 1;

     label57:
        specialinvoke $r3.<android.view.ViewRoot: boolean ensureTouchModeLocally(boolean)>($z1);

        $z1 = $r3.<android.view.ViewRoot: boolean mGlWanted>;

        if $z1 == 0 goto label58;

        specialinvoke $r3.<android.view.ViewRoot: void checkEglErrors()>();

        $z1 = $r3.<android.view.ViewRoot: boolean mGlWanted>;

        if $z1 == 0 goto label58;

        $z1 = $r3.<android.view.ViewRoot: boolean mUseGL>;

        if $z1 != 0 goto label58;

        specialinvoke $r3.<android.view.ViewRoot: void initializeGL()>();

        $r19 = $r3.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas>;

        if $r19 == null goto label58;

        $r19 = $r3.<android.view.ViewRoot: android.graphics.Canvas mGlCanvas>;

        $i0 = $r3.<android.view.ViewRoot: int mWidth>;

        $i1 = $r3.<android.view.ViewRoot: int mHeight>;

        virtualinvoke $r19.<android.graphics.Canvas: void setViewport(int,int)>($i0, $i1);

     label58:
        $r20 = $r3.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r20.<android.view.WindowManager$LayoutParams: int flags>;

        $z1 = staticinvoke <android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>($i0);

        $r3.<android.view.ViewRoot: boolean mLastWasImTarget> = $z1;

        $r21 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        if $r6 == null goto label60;

        if $z0 == 0 goto label59;

        if $r21 == null goto label59;

        $z1 = $r3.<android.view.ViewRoot: boolean mLastWasImTarget>;

        if $z1 == 0 goto label59;

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r21.<android.view.inputmethod.InputMethodManager: void startGettingWindowFocus(android.view.View)>($r6);

     label59:
        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        virtualinvoke $r6.<android.view.View: void dispatchWindowFocusChanged(boolean)>($z0);

     label60:
        if $z0 == 0 goto label79;

        if $r21 == null goto label62;

        $z0 = $r3.<android.view.ViewRoot: boolean mLastWasImTarget>;

        if $z0 == 0 goto label62;

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        $r22 = $r3.<android.view.ViewRoot: android.view.View mView>;

        $r22 = virtualinvoke $r22.<android.view.View: android.view.View findFocus()>();

        $r20 = $r3.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r20.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $z0 = $r3.<android.view.ViewRoot: boolean mHasHadWindowFocus>;

        if $z0 != 0 goto label65;

        $z0 = 1;

     label61:
        $r20 = $r3.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i1 = $r20.<android.view.WindowManager$LayoutParams: int flags>;

        virtualinvoke $r21.<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)>($r6, $r22, $i0, $z0, $i1);

     label62:
        $r20 = $r3.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r20.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i0 = $i0 & -257;

        $r20.<android.view.WindowManager$LayoutParams: int softInputMode> = $i0;

        $r6 = $r3.<android.view.ViewRoot: android.view.View mView>;

        $r23 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r20 = (android.view.WindowManager$LayoutParams) $r23;

        $i0 = $r20.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i0 = $i0 & -257;

        $r20.<android.view.WindowManager$LayoutParams: int softInputMode> = $i0;

        $r3.<android.view.ViewRoot: boolean mHasHadWindowFocus> = 1;

        return;

     label63:
        $z0 = 0;

        goto label56;

     label64:
        $z1 = 0;

        goto label57;

     label65:
        $z0 = 0;

        goto label61;

     label66:
        virtualinvoke $r3.<android.view.ViewRoot: void dispatchDetachedFromWindow()>();

        return;

     label67:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r8 = (android.view.KeyEvent) $r5;

        $i0 = virtualinvoke $r8.<android.view.KeyEvent: int getFlags()>();

        $i0 = $i0 & 8;

        if $i0 == 0 goto label68;

        $i0 = virtualinvoke $r8.<android.view.KeyEvent: int getFlags()>();

        $i0 = $i0 & -9;

        staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>($r8, $i0);

     label68:
        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r8 = (android.view.KeyEvent) $r5;

        specialinvoke $r3.<android.view.ViewRoot: void deliverKeyEventToViewHierarchy(android.view.KeyEvent,boolean)>($r8, 0);

        return;

     label69:
        $r21 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r21 == null goto label80;

        $r5 = $r4.<android.os.Message: java.lang.Object obj>;

        $r24 = (android.view.inputmethod.InputConnection) $r5;

        virtualinvoke $r21.<android.view.inputmethod.InputMethodManager: void reportFinishInputConnection(android.view.inputmethod.InputConnection)>($r24);

        return;

     label70:
        $r21 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r21 == null goto label81;

        virtualinvoke $r21.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        return;

     label71:
        $r25 := @caughtexception;

        goto label45;

     label72:
        $r26 := @caughtexception;

        goto label27;

     label73:
        $r27 := @caughtexception;

        goto label12;

     label74:
        return;

     label75:
        return;

     label76:
        return;

     label77:
        return;

     label78:
        return;

     label79:
        return;

     label80:
        return;

     label81:
        return;

        catch android.os.RemoteException from label11 to label12 with label73;
        catch java.lang.Throwable from label13 to label14 with label43;
        catch java.lang.Throwable from label15 to label16 with label43;
        catch java.lang.Throwable from label17 to label19 with label43;
        catch java.lang.Throwable from label20 to label21 with label43;
        catch java.lang.Throwable from label22 to label23 with label43;
        catch java.lang.Throwable from label24 to label25 with label43;
        catch android.os.RemoteException from label26 to label27 with label72;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.Throwable from label36 to label37 with label43;
        catch java.lang.Throwable from label39 to label40 with label43;
        catch android.os.RemoteException from label44 to label45 with label71;
    }

    public void invalidateChild(android.view.View, android.graphics.Rect)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;
        android.graphics.Rect $r2, $r3;
        int $i0;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $i0 = $r0.<android.view.ViewRoot: int mCurScrollY>;

        if $i0 == 0 goto label1;

        $r3 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $i0 = $r0.<android.view.ViewRoot: int mCurScrollY>;

        $i0 = neg $i0;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>(0, $i0);

        $r2 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

     label1:
        $r3 = $r0.<android.view.ViewRoot: android.graphics.Rect mDirty>;

        virtualinvoke $r3.<android.graphics.Rect: void union(android.graphics.Rect)>($r2);

        $z0 = $r0.<android.view.ViewRoot: boolean mWillDrawSoon>;

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;

     label2:
        return;
    }

    public android.view.ViewParent invalidateChildInParent(int[], android.graphics.Rect)
    {
        android.view.ViewRoot $r0;
        int[] $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: android.graphics.Rect;

        virtualinvoke $r0.<android.view.ViewRoot: void invalidateChild(android.view.View,android.graphics.Rect)>(null, $r2);

        return null;
    }

    public boolean isLayoutRequested()
    {
        android.view.ViewRoot $r0;
        boolean z0;

        $r0 := @this: android.view.ViewRoot;

        z0 = $r0.<android.view.ViewRoot: boolean mLayoutRequested>;

        return z0;
    }

    public boolean performHapticFeedback(int, boolean)
    {
        android.view.ViewRoot $r0;
        int $i0;
        boolean $z0;
        android.view.ViewRoot$W $r1;
        android.view.IWindowSession $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r2 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r1 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label1:
        $z0 = interfaceinvoke $r2.<android.view.IWindowSession: boolean performHapticFeedback(android.view.IWindow,int,boolean)>($r1, $i0, $z0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playSoundEffect(int)
    {
        android.view.ViewRoot $r0;
        int $i0;
        android.media.AudioManager $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r1 = specialinvoke $r0.<android.view.ViewRoot: android.media.AudioManager getAudioManager()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label3;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown effect id ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not defined in ");

        $r4 = class "android/view/SoundEffectConstants";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label2:
        virtualinvoke $r1.<android.media.AudioManager: void playSoundEffect(int)>(0);

        return;

     label3:
        virtualinvoke $r1.<android.media.AudioManager: void playSoundEffect(int)>(2);

        return;

     label4:
        virtualinvoke $r1.<android.media.AudioManager: void playSoundEffect(int)>(3);

        return;

     label5:
        virtualinvoke $r1.<android.media.AudioManager: void playSoundEffect(int)>(4);

        return;

     label6:
        virtualinvoke $r1.<android.media.AudioManager: void playSoundEffect(int)>(1);

        return;
    }

    public void profile()
    {
        android.view.ViewRoot $r0;

        $r0 := @this: android.view.ViewRoot;

        $r0.<android.view.ViewRoot: boolean mProfile> = 1;

        return;
    }

    public void recomputeViewAttributes(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r2;
        android.view.View$AttachInfo $r3;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r2 != $r1 goto label1;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes> = 1;

        $z0 = $r0.<android.view.ViewRoot: boolean mWillDrawSoon>;

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r2;
        android.view.View$AttachInfo $r3;
        android.view.ViewTreeObserver $r4;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r1 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        if $r1 == $r2 goto label1;

        $r3 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mFocusedView>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>($r1, $r2);

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

     label1:
        $r0.<android.view.ViewRoot: android.view.View mRealFocusedView> = $r2;

        $r0.<android.view.ViewRoot: android.view.View mFocusedView> = $r2;

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $z0 = virtualinvoke $r0.<android.view.ViewRoot: boolean scrollToRectOrFocus(android.graphics.Rect,boolean)>($r2, $z0);

        return $z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        return;
    }

    public void requestLayout()
    {
        android.view.ViewRoot $r0;

        $r0 := @this: android.view.ViewRoot;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r0.<android.view.ViewRoot: boolean mLayoutRequested> = 1;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        return;
    }

    public void requestTransparentRegion(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r2;
        int $i0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.ViewRoot: void checkThread()>();

        $r2 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r2 != $r1 goto label1;

        $r1 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 | 512;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

        $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged> = 1;

        return;

     label1:
        return;
    }

    java.lang.Object retrievePendingEvent(int)
    {
        android.view.ViewRoot $r0;
        java.lang.Object $r1;
        int $i0;
        android.util.SparseArray $r2;

        $r0 := @this: android.view.ViewRoot;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = neg $i0;

     label1:
        $r2 = $r0.<android.view.ViewRoot: android.util.SparseArray mPendingEvents>;

        $r1 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r1 == null goto label2;

        $r2 = $r0.<android.view.ViewRoot: android.util.SparseArray mPendingEvents>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        return $r1;

     label2:
        return $r1;
    }

    public void scheduleTraversals()
    {
        android.view.ViewRoot $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $z0 = $r0.<android.view.ViewRoot: boolean mTraversalScheduled>;

        if $z0 != 0 goto label1;

        $r0.<android.view.ViewRoot: boolean mTraversalScheduled> = 1;

        virtualinvoke $r0.<android.os.Handler: boolean sendEmptyMessage(int)>(1000);

        return;

     label1:
        return;
    }

    boolean scrollToRectOrFocus(android.graphics.Rect, boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0, $z1, $z2;
        android.view.View$AttachInfo $r1;
        android.graphics.Rect $r2, $r4, $r5;
        android.view.View $r3, $r6;
        int $i0, $i1, $i2, $i3;
        android.widget.Scroller $r7;
        android.content.Context $r8;
        android.view.ViewGroup $r9;

        $r0 := @this: android.view.ViewRoot;

        $r5 := @parameter0: android.graphics.Rect;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r2 = $r1.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        $r4 = $r1.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets>;

        $i0 = 0;

        $z1 = 0;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $i2 = $r2.<android.graphics.Rect: int left>;

        if $i1 > $i2 goto label01;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        if $i1 > $i2 goto label01;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        if $i1 > $i2 goto label01;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        if $i1 <= $i2 goto label03;

     label01:
        $i0 = $r0.<android.view.ViewRoot: int mScrollY>;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mRealFocusedView>;

        $r6 = $r0.<android.view.ViewRoot: android.view.View mLastScrolledFocus>;

        if $r3 == $r6 goto label02;

        $r5 = null;

     label02:
        $r6 = $r0.<android.view.ViewRoot: android.view.View mLastScrolledFocus>;

        if $r3 != $r6 goto label06;

        $z2 = $r0.<android.view.ViewRoot: boolean mScrollMayChange>;

        if $z2 != 0 goto label06;

        if $r5 != null goto label06;

     label03:
        $i1 = $r0.<android.view.ViewRoot: int mScrollY>;

        if $i0 == $i1 goto label13;

        if $z0 != 0 goto label12;

        $r7 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        if $r7 != null goto label04;

        $r7 = new android.widget.Scroller;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r8 = virtualinvoke $r3.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.Scroller: void <init>(android.content.Context)>($r8);

        $r0.<android.view.ViewRoot: android.widget.Scroller mScroller> = $r7;

     label04:
        $r7 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        $i1 = $r0.<android.view.ViewRoot: int mScrollY>;

        $i2 = $r0.<android.view.ViewRoot: int mScrollY>;

        $i2 = $i0 - $i2;

        virtualinvoke $r7.<android.widget.Scroller: void startScroll(int,int,int,int)>(0, $i1, 0, $i2);

     label05:
        $r0.<android.view.ViewRoot: int mScrollY> = $i0;

        return $z1;

     label06:
        if $r3 == null goto label03;

        $r0.<android.view.ViewRoot: android.view.View mLastScrolledFocus> = $r3;

        $r0.<android.view.ViewRoot: boolean mScrollMayChange> = 0;

        $r2 = $r0.<android.view.ViewRoot: android.graphics.Rect mVisRect>;

        $z2 = virtualinvoke $r3.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>($r2, null);

        if $z2 == 0 goto label03;

        if $r5 != null goto label09;

        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r5);

        $r6 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $r9 = (android.view.ViewGroup) $r6;

        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r9.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r3, $r5);

     label07:
        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $r2 = $r0.<android.view.ViewRoot: android.graphics.Rect mVisRect>;

        $z2 = virtualinvoke $r5.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r2);

        if $z2 == 0 goto label03;

        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getHeight()>();

        $i3 = $r4.<android.graphics.Rect: int top>;

        $i2 = $i2 - $i3;

        $i3 = $r4.<android.graphics.Rect: int bottom>;

        $i2 = $i2 - $i3;

        if $i1 <= $i2 goto label10;

     label08:
        $z1 = 1;

        goto label03;

     label09:
        $r2 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        goto label07;

     label10:
        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $i1 = $r5.<android.graphics.Rect: int top>;

        $i1 = $i1 - $i0;

        $i2 = $r4.<android.graphics.Rect: int top>;

        if $i1 >= $i2 goto label11;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $i2 = $r5.<android.graphics.Rect: int top>;

        $i2 = $i2 - $i0;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        goto label08;

     label11:
        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $i1 = $r5.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i0;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getHeight()>();

        $i3 = $r4.<android.graphics.Rect: int bottom>;

        $i2 = $i2 - $i3;

        if $i1 <= $i2 goto label08;

        $r5 = $r0.<android.view.ViewRoot: android.graphics.Rect mTempRect>;

        $i1 = $r5.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i0;

        $r3 = $r0.<android.view.ViewRoot: android.view.View mView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getHeight()>();

        $i3 = $r4.<android.graphics.Rect: int bottom>;

        $i2 = $i2 - $i3;

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i1;

        goto label08;

     label12:
        $r7 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        if $r7 == null goto label05;

        $r7 = $r0.<android.view.ViewRoot: android.widget.Scroller mScroller>;

        virtualinvoke $r7.<android.widget.Scroller: void abortAnimation()>();

        goto label05;

     label13:
        return $z1;
    }

    void setLayoutParams(android.view.WindowManager$LayoutParams, boolean)
    {
        android.view.ViewRoot $r0;
        android.view.WindowManager$LayoutParams $r1, $r2;
        boolean $z0;
        int $i0, $i1;
        java.lang.Throwable $r3;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        virtualinvoke $r2.<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>($r1);

        if $z0 == 0 goto label2;

        $i1 = $r1.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $r0.<android.view.ViewRoot: int mSoftInputMode> = $i1;

        virtualinvoke $r0.<android.view.ViewRoot: void requestLayout()>();

     label2:
        $i1 = $r1.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i1 = $i1 & 240;

        if $i1 != 0 goto label3;

        $r1 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r2 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i1 = $i1 & -241;

        $i0 = $i0 & 240;

        $i0 = $i1 | $i0;

        $r1.<android.view.WindowManager$LayoutParams: int softInputMode> = $i0;

     label3:
        $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged> = 1;

        virtualinvoke $r0.<android.view.ViewRoot: void scheduleTraversals()>();

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setView(android.view.View, android.view.WindowManager$LayoutParams, android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1, $r3, $r4;
        android.view.WindowManager$LayoutParams $r2, $r5;
        int $i0, $i1;
        android.view.View$AttachInfo $r6;
        android.os.IBinder $r7;
        android.view.IWindowSession $r8;
        android.view.ViewRoot$W $r9;
        android.graphics.Rect $r10, $r11;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;
        java.lang.Throwable $r15;
        android.os.RemoteException $r16;
        android.view.WindowManager$BadTokenException $r17;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.WindowManager$LayoutParams;

        $r3 := @parameter2: android.view.View;

        entermonitor $r0;

     label01:
        $r4 = $r0.<android.view.ViewRoot: android.view.View mView>;

        if $r4 != null goto label24;

        $r5 = $r0.<android.view.ViewRoot: android.view.WindowManager$LayoutParams mWindowAttributes>;

        virtualinvoke $r5.<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>($r2);

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $r0.<android.view.ViewRoot: int mSoftInputMode> = $i0;

        $r0.<android.view.ViewRoot: boolean mWindowAttributesChanged> = 1;

        $r0.<android.view.ViewRoot: android.view.View mView> = $r1;

        $r6 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r6.<android.view.View$AttachInfo: android.view.View mRootView> = $r1;

        if $r3 == null goto label02;

        $r6 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r7 = virtualinvoke $r3.<android.view.View: android.os.IBinder getApplicationWindowToken()>();

        $r6.<android.view.View$AttachInfo: android.os.IBinder mPanelParentWindowToken> = $r7;

     label02:
        $r0.<android.view.ViewRoot: boolean mAdded> = 1;

        virtualinvoke $r0.<android.view.ViewRoot: void requestLayout()>();

     label03:
        $r8 = <android.view.ViewRoot: android.view.IWindowSession sWindowSession>;

        $r9 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

     label04:
        $i0 = virtualinvoke $r0.<android.view.ViewRoot: int getHostVisibility()>();

     label05:
        $r6 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

     label06:
        $r10 = $r6.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        $i0 = interfaceinvoke $r8.<android.view.IWindowSession: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>($r9, $r2, $i0, $r10);

     label07:
        $r10 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingContentInsets>;

        $r6 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r11 = $r6.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

        $r10 = $r0.<android.view.ViewRoot: android.graphics.Rect mPendingVisibleInsets>;

        virtualinvoke $r10.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        if $i0 >= 0 goto label21;

        $r0.<android.view.ViewRoot: android.view.View mView> = null;

        $r6 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r6.<android.view.View$AttachInfo: android.view.View mRootView> = null;

        $r0.<android.view.ViewRoot: boolean mAdded> = 0;

        virtualinvoke $r0.<android.view.ViewRoot: void unscheduleTraversals()>();

        lookupswitch($i0)
        {
            case -8: goto label20;
            case -7: goto label19;
            case -6: goto label17;
            case -5: goto label16;
            case -4: goto label15;
            case -3: goto label14;
            case -2: goto label13;
            case -1: goto label13;
            default: goto label08;
        };

     label08:
        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window -- unknown error code ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r12;

     label09:
        $r15 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r15;

     label11:
        $r16 := @caughtexception;

     label12:
        $r0.<android.view.ViewRoot: boolean mAdded> = 0;

        $r0.<android.view.ViewRoot: android.view.View mView> = null;

        $r6 = $r0.<android.view.ViewRoot: android.view.View$AttachInfo mAttachInfo>;

        $r6.<android.view.View$AttachInfo: android.view.View mRootView> = null;

        virtualinvoke $r0.<android.view.ViewRoot: void unscheduleTraversals()>();

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Adding window failed", $r16);

        throw $r12;

     label13:
        $r17 = new android.view.WindowManager$BadTokenException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window -- token ");

        $r7 = $r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid; is your activity running?");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label14:
        $r17 = new android.view.WindowManager$BadTokenException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window -- token ");

        $r7 = $r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not for an application");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label15:
        $r17 = new android.view.WindowManager$BadTokenException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window -- app for token ");

        $r7 = $r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is exiting");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label16:
        $r17 = new android.view.WindowManager$BadTokenException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window -- window ");

        $r9 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been added");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label17:
        exitmonitor $r0;

     label18:
        return;

     label19:
        $r17 = new android.view.WindowManager$BadTokenException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window ");

        $r9 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- another window of this type already exists");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label20:
        $r17 = new android.view.WindowManager$BadTokenException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window ");

        $r9 = $r0.<android.view.ViewRoot: android.view.ViewRoot$W mWindow>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- permission denied for this window type");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label21:
        virtualinvoke $r1.<android.view.View: void assignParent(android.view.ViewParent)>($r0);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label26;

        $z0 = 1;

     label22:
        $r0.<android.view.ViewRoot: boolean mAddedTouchMode> = $z0;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label27;

        $z0 = 1;

     label23:
        $r0.<android.view.ViewRoot: boolean mAppVisible> = $z0;

     label24:
        exitmonitor $r0;

     label25:
        return;

     label26:
        $z0 = 0;

        goto label22;

     label27:
        $z0 = 0;

        goto label23;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch android.os.RemoteException from label04 to label05 with label11;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label03 to label07 with label09;
        catch java.lang.Throwable from label07 to label10 with label09;
        catch java.lang.Throwable from label12 to label18 with label09;
        catch java.lang.Throwable from label19 to label25 with label09;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        android.view.ViewRoot $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewRoot;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public void unscheduleTraversals()
    {
        android.view.ViewRoot $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewRoot;

        $z0 = $r0.<android.view.ViewRoot: boolean mTraversalScheduled>;

        if $z0 == 0 goto label1;

        $r0.<android.view.ViewRoot: boolean mTraversalScheduled> = 0;

        virtualinvoke $r0.<android.os.Handler: void removeMessages(int)>(1000);

        return;

     label1:
        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        android.view.ViewRoot $r0;
        boolean $z0, $z1;
        android.os.Message $r1;
        byte $b0;

        $r0 := @this: android.view.ViewRoot;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r1.<android.os.Message: int what> = 1004;

        if $z0 == 0 goto label3;

        $b0 = 1;

     label1:
        $r1.<android.os.Message: int arg1> = $b0;

        if $z1 == 0 goto label4;

        $b0 = 1;

     label2:
        $r1.<android.os.Message: int arg2> = $b0;

        virtualinvoke $r0.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;

     label3:
        $b0 = 0;

        goto label1;

     label4:
        $b0 = 0;

        goto label2;
    }
}
