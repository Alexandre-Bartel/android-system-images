public class android.view.animation.Transformation extends java.lang.Object
{
    public static int TYPE_ALPHA;
    public static int TYPE_BOTH;
    public static int TYPE_IDENTITY;
    public static int TYPE_MATRIX;
    protected float mAlpha;
    protected android.graphics.Matrix mMatrix;
    protected int mTransformationType;

    static void <clinit>()
    {
        int $i0, $i1;

        <android.view.animation.Transformation: int TYPE_IDENTITY> = 0;

        <android.view.animation.Transformation: int TYPE_ALPHA> = 1;

        <android.view.animation.Transformation: int TYPE_MATRIX> = 2;

        $i1 = <android.view.animation.Transformation: int TYPE_ALPHA>;

        $i0 = <android.view.animation.Transformation: int TYPE_MATRIX>;

        $i0 = $i1 | $i0;

        <android.view.animation.Transformation: int TYPE_BOTH> = $i0;

        return;
    }

    public void <init>()
    {
        android.view.animation.Transformation $r0;

        $r0 := @this: android.view.animation.Transformation;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        virtualinvoke $r0.<android.view.animation.Transformation: void clear()>();

        return;
    }

    public void clear()
    {
        android.view.animation.Transformation $r0;
        android.graphics.Matrix $r1;
        int $i0;

        $r0 := @this: android.view.animation.Transformation;

        $r1 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        if $r1 != null goto label2;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix> = $r1;

     label1:
        $r0.<android.view.animation.Transformation: float mAlpha> = 1.0F;

        $i0 = <android.view.animation.Transformation: int TYPE_BOTH>;

        $r0.<android.view.animation.Transformation: int mTransformationType> = $i0;

        return;

     label2:
        $r1 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: void reset()>();

        goto label1;
    }

    public void compose(android.view.animation.Transformation)
    {
        android.view.animation.Transformation $r0, $r1;
        float $f0, $f1;
        android.graphics.Matrix $r2, $r3;

        $r0 := @this: android.view.animation.Transformation;

        $r1 := @parameter0: android.view.animation.Transformation;

        $f0 = $r0.<android.view.animation.Transformation: float mAlpha>;

        $f1 = virtualinvoke $r1.<android.view.animation.Transformation: float getAlpha()>();

        $f0 = $f0 * $f1;

        $r0.<android.view.animation.Transformation: float mAlpha> = $f0;

        $r2 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        $r3 = virtualinvoke $r1.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r2.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r3);

        return;
    }

    public float getAlpha()
    {
        android.view.animation.Transformation $r0;
        float f0;

        $r0 := @this: android.view.animation.Transformation;

        f0 = $r0.<android.view.animation.Transformation: float mAlpha>;

        return f0;
    }

    public android.graphics.Matrix getMatrix()
    {
        android.view.animation.Transformation $r0;
        android.graphics.Matrix r1;

        $r0 := @this: android.view.animation.Transformation;

        r1 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        return r1;
    }

    public int getTransformationType()
    {
        android.view.animation.Transformation $r0;
        int i0;

        $r0 := @this: android.view.animation.Transformation;

        i0 = $r0.<android.view.animation.Transformation: int mTransformationType>;

        return i0;
    }

    public void set(android.view.animation.Transformation)
    {
        android.view.animation.Transformation $r0, $r1;
        float $f0;
        android.graphics.Matrix $r2, $r3;
        int $i0;

        $r0 := @this: android.view.animation.Transformation;

        $r1 := @parameter0: android.view.animation.Transformation;

        $f0 = virtualinvoke $r1.<android.view.animation.Transformation: float getAlpha()>();

        $r0.<android.view.animation.Transformation: float mAlpha> = $f0;

        $r2 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        $r3 = virtualinvoke $r1.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $i0 = virtualinvoke $r1.<android.view.animation.Transformation: int getTransformationType()>();

        $r0.<android.view.animation.Transformation: int mTransformationType> = $i0;

        return;
    }

    public void setAlpha(float)
    {
        android.view.animation.Transformation $r0;
        float $f0;

        $r0 := @this: android.view.animation.Transformation;

        $f0 := @parameter0: float;

        $r0.<android.view.animation.Transformation: float mAlpha> = $f0;

        return;
    }

    public void setTransformationType(int)
    {
        android.view.animation.Transformation $r0;
        int $i0;

        $r0 := @this: android.view.animation.Transformation;

        $i0 := @parameter0: int;

        $r0.<android.view.animation.Transformation: int mTransformationType> = $i0;

        return;
    }

    public java.lang.String toShortString()
    {
        android.view.animation.Transformation $r0;
        java.lang.StringBuilder $r1;
        float $f0;
        android.graphics.Matrix $r2;
        java.lang.String $r3;

        $r0 := @this: android.view.animation.Transformation;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{alpha=");

        $f0 = $r0.<android.view.animation.Transformation: float mAlpha>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" matrix=");

        $r2 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        $r3 = virtualinvoke $r2.<android.graphics.Matrix: java.lang.String toShortString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        android.view.animation.Transformation $r0;
        java.lang.StringBuilder $r1;
        float $f0;
        android.graphics.Matrix $r2;
        java.lang.String $r3;

        $r0 := @this: android.view.animation.Transformation;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transformation{alpha=");

        $f0 = $r0.<android.view.animation.Transformation: float mAlpha>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" matrix=");

        $r2 = $r0.<android.view.animation.Transformation: android.graphics.Matrix mMatrix>;

        $r3 = virtualinvoke $r2.<android.graphics.Matrix: java.lang.String toShortString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
