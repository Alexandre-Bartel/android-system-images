class org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream extends java.io.OutputStream
{
    static final int MAX;
    java.io.ByteArrayOutputStream cache;
    int cacheLength;
    boolean closed;
    int defaultCacheSize;
    int limit;
    final org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0;
    boolean writeToSocket;

    public void <init>(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        int $i0;
        java.io.ByteArrayOutputStream $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $r1 := @parameter0: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0> = $r1;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize> = 1024;

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength> = $i0;

        $r2 = new java.io.ByteArrayOutputStream;

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache> = $r2;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit> = -1;

        return;
    }

    public void <init>(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection, int)
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        int $i0;
        java.io.ByteArrayOutputStream $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $r1 := @parameter0: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection;

        $i0 := @parameter1: int;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0> = $r1;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize> = 1024;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket> = 1;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit> = $i0;

        if $i0 <= 0 goto label2;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength> = $i0;

     label1:
        $r2 = new java.io.ByteArrayOutputStream;

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache> = $r2;

        return;

     label2:
        $i0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: int access$1400(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        if $i0 <= 3 goto label4;

        $i0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: int access$1500(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

     label3:
        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize> = $i0;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int calculateChunkDataLength()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength> = $i0;

        goto label1;

     label4:
        $i0 = 1024;

        goto label3;
    }

    private int calculateChunkDataLength()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize>;

        $i0 = $i1 - $i0;

        $i0 = $i0 - 2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + 2;

        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int defaultCacheSize>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    private void output(java.lang.String) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        java.lang.String $r1;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r2;
        java.io.OutputStream $r3;
        byte[] $r4;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r3 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$1600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }

    private void sendCache(boolean) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        boolean $z0;
        java.io.ByteArrayOutputStream $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r4;
        java.io.OutputStream $r5;
        byte[] $r6;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>();

        if $i0 > 0 goto label1;

        if $z0 == 0 goto label3;

     label1:
        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i1 >= 0 goto label4;

        if $i0 <= 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>($r3);

        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r5 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$1600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r4);

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $r6 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r6);

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void reset()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>("\r\n");

     label2:
        if $z0 == 0 goto label5;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>("0\r\n\r\n");

        return;

     label3:
        return;

     label4:
        return;

     label5:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        java.lang.String $r1;
        boolean $z0;
        int $i0;
        java.io.IOException $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        entermonitor $r0;

     label1:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean closed>;

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean closed> = 1;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket>;

        if $z0 == 0 goto label3;

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i0 <= 0 goto label6;

        $r2 = new java.io.IOException;

        $r1 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00a4");

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label6:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean closed>;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void sendCache(boolean)>($z0);

     label7:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        boolean $z0;
        java.io.IOException $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r4;
        java.io.OutputStream $r5;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        entermonitor $r0;

     label1:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean closed>;

        if $z0 == 0 goto label3;

        $r1 = new java.io.IOException;

        $r2 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K0059");

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label3:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket>;

        if $z0 == 0 goto label4;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void sendCache(boolean)>(0);

        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r5 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$1600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r4);

        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    boolean isCached()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isChunked()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket>;

        if $z0 == 0 goto label1;

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i0 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    int size()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        int $i0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.Throwable $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        entermonitor $r0;

     label1:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>();

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    byte[] toByteArray()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        entermonitor $r0;

     label1:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        int $i0, $i1;
        boolean $z0;
        java.io.IOException $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        java.io.ByteArrayOutputStream $r4;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean closed>;

        if $z0 == 0 goto label3;

        $r1 = new java.io.IOException;

        $r2 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K0059");

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label3:
        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i1 < 0 goto label5;

        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i1 != 0 goto label4;

        $r1 = new java.io.IOException;

        $r2 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00b2");

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label4:
        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        $i1 = $i1 - 1;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit> = $i1;

     label5:
        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket>;

        if $z0 == 0 goto label6;

        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $i0 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: int size()>();

        $i1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        if $i0 < $i1 goto label6;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void sendCache(boolean)>(0);

     label6:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label6 with label2;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream $r0;
        byte[] $r1, $r11;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.NullPointerException $r5;
        java.lang.ArrayIndexOutOfBoundsException $r6;
        java.io.ByteArrayOutputStream $r7;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r8;
        java.io.OutputStream $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        entermonitor $r0;

     label01:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean closed>;

        if $z0 == 0 goto label03;

        $r2 = new java.io.IOException;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K0059");

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label02:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label03:
        if $r1 != null goto label05;

     label04:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label05:
        if $i0 < 0 goto label06;

        if $i1 < 0 goto label06;

        $i2 = lengthof $r1;

        if $i0 > $i2 goto label06;

        $i2 = lengthof $r1;

        $i2 = $i2 - $i0;

        if $i2 >= $i1 goto label07;

     label06:
        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K002f");

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label07:
        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i2 < 0 goto label10;

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i1 <= $i2 goto label08;

        $r2 = new java.io.IOException;

        $r3 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00b2");

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label08:
        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        $i2 = $i2 - $i1;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit> = $i2;

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int limit>;

        if $i0 != 0 goto label09;

        $r8 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r9 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$1600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r8);

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $r1 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r1);

     label09:
        exitmonitor $r0;

        return;

     label10:
        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: boolean writeToSocket>;

        if $z0 == 0 goto label11;

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $i2 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: int size()>();

        $i2 = $i2 + $i1;

        $i3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        if $i2 >= $i3 goto label12;

     label11:
        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        goto label09;

     label12:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>($r3);

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $i3 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: int size()>();

        $i2 = $i2 - $i3;

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i2);

        $r8 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r9 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$1600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r8);

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        $r11 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r11);

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>("\r\n");

        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i2;

     label13:
        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        if $i1 <= $i2 goto label14;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>($r3);

        $r8 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r9 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$1600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r8);

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: void output(java.lang.String)>("\r\n");

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        $i1 = $i1 - $i2;

        $i2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int cacheLength>;

        $i0 = $i0 + $i2;

        goto label13;

     label14:
        $r7 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: java.io.ByteArrayOutputStream cache>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

     label15:
        goto label09;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label09 with label02;
        catch java.lang.Throwable from label10 to label15 with label02;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$HttpOutputStream: int MAX> = 1024;

        return;
    }
}
