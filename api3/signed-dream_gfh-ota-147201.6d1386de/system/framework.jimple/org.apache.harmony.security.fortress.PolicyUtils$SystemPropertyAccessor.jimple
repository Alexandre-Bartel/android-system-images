public class org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor extends java.lang.Object implements java.security.PrivilegedAction
{
    public java.lang.String key;

    public void <init>(java.lang.String)
    {
        org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor: java.lang.String key> = $r1;

        return;
    }

    public java.security.PrivilegedAction key(java.lang.String)
    {
        org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor;

        $r1 := @parameter0: java.lang.String;

        $r0.<org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor: java.lang.String key> = $r1;

        return $r0;
    }

    public volatile java.lang.Object run()
    {
        org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor;

        $r1 = virtualinvoke $r0.<org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor: java.lang.String run()>();

        return $r1;
    }

    public java.lang.String run()
    {
        org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor;

        $r1 = $r0.<org.apache.harmony.security.fortress.PolicyUtils$SystemPropertyAccessor: java.lang.String key>;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r1);

        return $r1;
    }
}
