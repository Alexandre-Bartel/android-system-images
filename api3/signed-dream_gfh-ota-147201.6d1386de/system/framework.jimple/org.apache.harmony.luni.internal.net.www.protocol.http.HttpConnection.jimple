public class org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection extends java.lang.Object
{
    private static final java.lang.Class SOCKET_TIMEOUT_CLASS;
    private org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration config;
    private java.io.InputStream inputStream;
    private java.io.OutputStream outputStream;
    private java.net.Socket socket;
    private java.io.InputStream sslInputStream;
    private java.io.OutputStream sslOutputStream;
    private javax.net.ssl.SSLSocket sslSocket;
    private boolean usingSecureSocket;

    static void <clinit>()
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.lang.Class SocketTimeoutExceptionClass()>();

        <org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.lang.Class SOCKET_TIMEOUT_CLASS> = $r0;

        return;
    }

    public void <init>(org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration, int) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration $r1;
        int $i0, $i1;
        java.lang.String $r2;
        java.net.Proxy $r3;
        java.net.Proxy$Type $r4, $r5;
        java.net.Socket $r6;
        java.net.InetSocketAddress $r7;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $r1 := @parameter0: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean usingSecureSocket> = 0;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration config> = $r1;

        $r2 = virtualinvoke $r1.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration: java.lang.String getHostName()>();

        $i1 = virtualinvoke $r1.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration: int getHostPort()>();

        $r3 = virtualinvoke $r1.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration: java.net.Proxy getProxy()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r5 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r4 != $r5 goto label3;

     label1:
        $r6 = new java.net.Socket;

        specialinvoke $r6.<java.net.Socket: void <init>()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket> = $r6;

     label2:
        $r6 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $r7 = new java.net.InetSocketAddress;

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r2, $i1);

        virtualinvoke $r6.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r7, $i0);

        return;

     label3:
        $r6 = new java.net.Socket;

        specialinvoke $r6.<java.net.Socket: void <init>(java.net.Proxy)>($r3);

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket> = $r6;

        goto label2;
    }

    private static java.lang.Class SocketTimeoutExceptionClass()
    {
        java.lang.Class $r0;
        java.lang.ClassNotFoundException $r1;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.SocketTimeoutException");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static boolean isSocketTimeoutException(java.io.InterruptedIOException)
    {
        java.io.InterruptedIOException $r0;
        boolean $z0;
        java.lang.Class $r1;

        $r0 := @parameter0: java.io.InterruptedIOException;

        $r1 = <org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.lang.Class SOCKET_TIMEOUT_CLASS>;

        if $r1 == null goto label1;

        $r1 = <org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.lang.Class SOCKET_TIMEOUT_CLASS>;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r0);

        return $z0;

     label1:
        return 1;
    }

    public void closeSocketAndStreams()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        boolean $z0;
        java.io.OutputStream $r1;
        java.io.InputStream $r2;
        javax.net.ssl.SSLSocket $r3;
        java.net.Socket $r4;
        java.lang.Exception $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean usingSecureSocket>;

        if $z0 == 0 goto label06;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream sslOutputStream>;

        if $r1 == null goto label02;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream sslOutputStream>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream sslOutputStream> = null;

     label01:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label02:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream sslInputStream>;

        if $r2 == null goto label04;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream sslInputStream>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream sslInputStream> = null;

     label03:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label04:
        $r3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        if $r3 == null goto label06;

        $r3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket> = null;

     label05:
        virtualinvoke $r3.<java.net.Socket: void close()>();

     label06:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream outputStream>;

        if $r1 == null goto label08;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream outputStream>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream outputStream> = null;

     label07:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label08:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        if $r2 == null goto label10;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream> = null;

     label09:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label10:
        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        if $r4 == null goto label19;

        $r4 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket> = null;

     label11:
        virtualinvoke $r4.<java.net.Socket: void close()>();

     label12:
        return;

     label13:
        $r5 := @caughtexception;

        goto label02;

     label14:
        $r6 := @caughtexception;

        goto label04;

     label15:
        $r7 := @caughtexception;

        goto label06;

     label16:
        $r8 := @caughtexception;

        goto label08;

     label17:
        $r9 := @caughtexception;

        goto label10;

     label18:
        $r10 := @caughtexception;

        return;

     label19:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label18;
    }

    public org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration getHttpConfiguration()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration config>;

        return r1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        boolean $z0;
        java.io.InputStream $r1;
        javax.net.ssl.SSLSocket $r2;
        java.net.Socket $r3;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean usingSecureSocket>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream sslInputStream>;

        if $r1 != null goto label1;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        $r1 = virtualinvoke $r2.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream sslInputStream> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream sslInputStream>;

        return $r1;

     label2:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        if $r1 != null goto label3;

        $r3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $r1 = virtualinvoke $r3.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream> = $r1;

     label3:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        return $r1;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        boolean $z0;
        java.io.OutputStream $r1;
        javax.net.ssl.SSLSocket $r2;
        java.net.Socket $r3;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean usingSecureSocket>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream sslOutputStream>;

        if $r1 != null goto label1;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        $r1 = virtualinvoke $r2.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream sslOutputStream> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream sslOutputStream>;

        return $r1;

     label2:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream outputStream>;

        if $r1 != null goto label3;

        $r3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $r1 = virtualinvoke $r3.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream outputStream> = $r1;

     label3:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.OutputStream outputStream>;

        return $r1;
    }

    public javax.net.ssl.SSLSocket getSecureSocket(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        javax.net.ssl.HostnameVerifier $r2;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration $r3;
        java.lang.String $r4;
        int $i0;
        java.net.Socket $r5;
        javax.net.ssl.SSLSocket $r6;
        javax.net.ssl.SSLSession $r7;
        java.io.IOException $r8;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r2 := @parameter1: javax.net.ssl.HostnameVerifier;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean usingSecureSocket>;

        if $z0 != 0 goto label2;

        $r3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration config>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration: java.lang.String getHostName()>();

        $r3 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration config>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConfiguration: int getHostPort()>();

        $r5 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $r5 = virtualinvoke $r1.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r5, $r4, $i0, 1);

        $r6 = (javax.net.ssl.SSLSocket) $r5;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket> = $r6;

        $r6 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void setUseClientMode(boolean)>(1);

        $r6 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void startHandshake()>();

        $r6 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        $r7 = virtualinvoke $r6.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $z0 = interfaceinvoke $r2.<javax.net.ssl.HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>($r4, $r7);

        if $z0 != 0 goto label1;

        $r8 = new java.io.IOException;

        $r4 = staticinvoke <org.apache.harmony.luni.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("luni.02", $r4);

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label1:
        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean usingSecureSocket> = 1;

     label2:
        $r6 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: javax.net.ssl.SSLSocket sslSocket>;

        return $r6;
    }

    java.net.Socket getSocket()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        java.net.Socket r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        return r1;
    }

    protected boolean isEligibleForRecycling()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        java.net.Socket $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isInputShutdown()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isOutputShutdown()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isStale() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        boolean $z0, $z1;
        java.net.Socket $r1;
        java.io.InputStream $r2;
        int $i0, $i1;
        java.lang.Throwable $r3;
        java.io.InterruptedIOException $r4;
        java.io.IOException $r5;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label15;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isInputShutdown()>();

        if $z0 != 0 goto label16;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isOutputShutdown()>();

        if $z0 != 0 goto label17;

        $z0 = 0;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

     label01:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int available()>();

     label02:
        if $i0 > 0 goto label18;

     label03:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        $i0 = virtualinvoke $r1.<java.net.Socket: int getSoTimeout()>();

     label04:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>(1);

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(1);

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

     label05:
        if $i1 != -1 goto label09;

        $z0 = 1;

     label06:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

     label07:
        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>($i0);

     label08:
        return $z0;

     label09:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.io.InputStream inputStream>;

        virtualinvoke $r2.<java.io.InputStream: void reset()>();

     label10:
        goto label06;

     label11:
        $r3 := @caughtexception;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

     label12:
        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>($i0);

        throw $r3;

     label13:
        $r4 := @caughtexception;

        $z1 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: boolean isSocketTimeoutException(java.io.InterruptedIOException)>($r4);

        if $z1 != 0 goto label19;

        throw $r4;

     label14:
        $r5 := @caughtexception;

        return 1;

     label15:
        return 1;

     label16:
        return 1;

     label17:
        return 1;

     label18:
        return 0;

     label19:
        return $z0;

        catch java.io.InterruptedIOException from label01 to label02 with label13;
        catch java.io.InterruptedIOException from label03 to label04 with label13;
        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.InterruptedIOException from label07 to label08 with label13;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.io.InterruptedIOException from label12 to label13 with label13;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public void setSoTimeout(int) throws java.net.SocketException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection $r0;
        int $i0;
        java.net.Socket $r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>($i0);

        return;
    }
}
