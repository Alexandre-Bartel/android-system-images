public class android.content.res.ColorStateList extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int[][] EMPTY;
    private static final android.util.SparseArray sCache;
    private int[] mColors;
    private int mDefaultColor;
    private int[][] mStateSpecs;

    static void <clinit>()
    {
        int[] $r0;
        int[][] $r1;
        android.util.SparseArray $r2;
        android.content.res.ColorStateList$1 $r3;

        $r1 = newarray (int[])[1];

        $r0 = newarray (int)[0];

        $r1[0] = $r0;

        <android.content.res.ColorStateList: int[][] EMPTY> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.content.res.ColorStateList: android.util.SparseArray sCache> = $r2;

        $r3 = new android.content.res.ColorStateList$1;

        specialinvoke $r3.<android.content.res.ColorStateList$1: void <init>()>();

        <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }

    private void <init>()
    {
        android.content.res.ColorStateList $r0;

        $r0 := @this: android.content.res.ColorStateList;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.res.ColorStateList: int mDefaultColor> = -65536;

        return;
    }

    public void <init>(int[][], int[])
    {
        android.content.res.ColorStateList $r0;
        int[][] $r1;
        int[] $r2, $r3;
        int $i0, $i1;

        $r0 := @this: android.content.res.ColorStateList;

        $r1 := @parameter0: int[][];

        $r2 := @parameter1: int[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.res.ColorStateList: int mDefaultColor> = -65536;

        $r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = $r1;

        $r0.<android.content.res.ColorStateList: int[] mColors> = $r2;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label3;

        $i0 = $r2[0];

        $r0.<android.content.res.ColorStateList: int mDefaultColor> = $i0;

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $r3 = $r1[$i0];

        $i1 = lengthof $r3;

        if $i1 != 0 goto label2;

        $i1 = $r2[$i0];

        $r0.<android.content.res.ColorStateList: int mDefaultColor> = $i1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        int $i0;
        org.xmlpull.v1.XmlPullParserException $r3;
        android.content.res.ColorStateList $r4;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

     label1:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label2;

        if $i0 != 1 goto label1;

     label2:
        if $i0 == 2 goto label3;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r3;

     label3:
        $r4 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r0, $r1, $r2);

        return $r4;
    }

    private static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.content.res.ColorStateList $r3;
        java.lang.String $r4, $r7;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z0 == 0 goto label1;

        $r3 = new android.content.res.ColorStateList;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>()>();

        specialinvoke $r3.<android.content.res.ColorStateList: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r0, $r1, $r2);

        return $r3;

     label1:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid drawable tag ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r5;
    }

    private void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.ColorStateList $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r4, $r7, $r8;
        int[][] $r5, $r9;
        java.lang.String $r6;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParserException $r10;
        java.lang.StringBuilder $r11;

        $r0 := @this: android.content.res.ColorStateList;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

        $i1 = 20;

        $i2 = 0;

        $r4 = newarray (int)[20];

        $r5 = newarray (int[])[20];

     label01:
        $i3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 1 goto label15;

        $i4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 >= $i0 goto label02;

        if $i3 == 3 goto label15;

     label02:
        if $i3 != 2 goto label01;

        if $i4 > $i0 goto label01;

        $r6 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label01;

        $i4 = 0;

        $i3 = -65536;

        $z0 = 0;

        $i5 = interfaceinvoke $r3.<android.util.AttributeSet: int getAttributeCount()>();

        $r7 = newarray (int)[$i5];

        $i6 = 0;

        $i7 = 0;

     label03:
        if $i6 >= $i5 goto label04;

        $i8 = interfaceinvoke $r3.<android.util.AttributeSet: int getAttributeNameResource(int)>($i6);

        if $i8 != 0 goto label09;

     label04:
        $r7 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r7, $i7);

        if $i4 == 0 goto label14;

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i4);

     label05:
        if $i2 == 0 goto label06;

        $i4 = lengthof $r7;

        if $i4 != 0 goto label07;

     label06:
        $r0.<android.content.res.ColorStateList: int mDefaultColor> = $i3;

     label07:
        $i4 = $i2 + 1;

        if $i4 < $i1 goto label08;

        $i1 = $i2 + 1;

        $i4 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i1);

        $i1 = $i4;

        $r8 = newarray (int)[$i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r8, 0, $i2);

        $r9 = newarray (int[])[$i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r9, 0, $i2);

        $r4 = $r8;

        $r5 = $r9;

     label08:
        $r4[$i2] = $i3;

        $r5[$i2] = $r7;

        $i2 = $i2 + 1;

        goto label01;

     label09:
        if $i8 != 16843173 goto label11;

        $i9 = interfaceinvoke $r3.<android.util.AttributeSet: int getAttributeResourceValue(int,int)>($i6, 0);

        $i4 = $i9;

        if $i9 != 0 goto label16;

        $i3 = interfaceinvoke $r3.<android.util.AttributeSet: int getAttributeIntValue(int,int)>($i6, $i3);

        $z0 = 1;

        $i9 = $i7;

     label10:
        $i6 = $i6 + 1;

        $i7 = $i9;

        goto label03;

     label11:
        $i9 = $i7 + 1;

        $z1 = interfaceinvoke $r3.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>($i6, 0);

        if $z1 == 0 goto label13;

     label12:
        $r7[$i7] = $i8;

        goto label10;

     label13:
        $i8 = neg $i8;

        goto label12;

     label14:
        if $z0 != 0 goto label05;

        $r10 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'android:color\' attribute.");

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r10;

     label15:
        $r7 = newarray (int)[$i2];

        $r0.<android.content.res.ColorStateList: int[] mColors> = $r7;

        $r9 = newarray (int[])[$i2];

        $r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = $r9;

        $r7 = $r0.<android.content.res.ColorStateList: int[] mColors>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r7, 0, $i2);

        $r9 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r9, 0, $i2);

        return;

     label16:
        $i9 = $i7;

        goto label10;
    }

    public static android.content.res.ColorStateList valueOf(int)
    {
        int $i0;
        android.util.SparseArray $r0, $r1;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r3;
        android.content.res.ColorStateList $r4;
        int[][] $r5;
        int[] $r6;
        java.lang.Throwable $r7;

        $i0 := @parameter0: int;

        $r0 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        entermonitor $r0;

     label1:
        $r1 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.ref.WeakReference) $r2;

        if $r3 == null goto label4;

        $r2 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        $r4 = (android.content.res.ColorStateList) $r2;

     label2:
        if $r4 == null goto label5;

        exitmonitor $r0;

     label3:
        return $r4;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r4 = new android.content.res.ColorStateList;

        $r5 = <android.content.res.ColorStateList: int[][] EMPTY>;

        $r6 = newarray (int)[1];

        $r6[0] = $i0;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r5, $r6);

        $r1 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r3);

        exitmonitor $r0;

     label6:
        return $r4;

     label7:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int describeContents()
    {
        android.content.res.ColorStateList $r0;

        $r0 := @this: android.content.res.ColorStateList;

        return 0;
    }

    public int getColorForState(int[], int)
    {
        android.content.res.ColorStateList $r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        int[][] $r3;

        $r0 := @this: android.content.res.ColorStateList;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $r3 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $i1 = lengthof $r3;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r3 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r2 = $r3[$i2];

        $z0 = staticinvoke <android.util.StateSet: boolean stateSetMatches(int[],int[])>($r2, $r1);

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.content.res.ColorStateList: int[] mColors>;

        $i0 = $r1[$i2];

        return $i0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public int getDefaultColor()
    {
        android.content.res.ColorStateList $r0;
        int i0;

        $r0 := @this: android.content.res.ColorStateList;

        i0 = $r0.<android.content.res.ColorStateList: int mDefaultColor>;

        return i0;
    }

    public boolean isStateful()
    {
        android.content.res.ColorStateList $r0;
        int[][] $r1;
        int $i0;

        $r0 := @this: android.content.res.ColorStateList;

        $r1 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        android.content.res.ColorStateList $r0;
        java.lang.StringBuilder $r1;
        int[][] $r2;
        java.lang.String $r3;
        int[] $r4;
        int $i0;

        $r0 := @this: android.content.res.ColorStateList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorStateList{mStateSpecs=");

        $r2 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r3 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mColors=");

        $r4 = $r0.<android.content.res.ColorStateList: int[] mColors>;

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDefaultColor=");

        $i0 = $r0.<android.content.res.ColorStateList: int mDefaultColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public android.content.res.ColorStateList withAlpha(int)
    {
        android.content.res.ColorStateList $r0, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r2;
        int[][] $r4;

        $r0 := @this: android.content.res.ColorStateList;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.ColorStateList: int[] mColors>;

        $i1 = lengthof $r1;

        $r1 = newarray (int)[$i1];

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0.<android.content.res.ColorStateList: int[] mColors>;

        $i3 = $r2[$i2];

        $i3 = $i3 & 16777215;

        $i4 = $i0 << 24;

        $i3 = $i3 | $i4;

        $r1[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r3 = new android.content.res.ColorStateList;

        $r4 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r4, $r1);

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.ColorStateList $r0;
        android.os.Parcel $r1;
        int $i0, $i1;
        int[][] $r2;
        int[] $r3;

        $r0 := @this: android.content.res.ColorStateList;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $i0 = lengthof $r2;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r3 = $r2[$i1];

        virtualinvoke $r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = $r0.<android.content.res.ColorStateList: int[] mColors>;

        virtualinvoke $r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        return;
    }
}
