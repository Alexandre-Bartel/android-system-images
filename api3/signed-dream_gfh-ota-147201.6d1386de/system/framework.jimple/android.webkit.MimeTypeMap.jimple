public class android.webkit.MimeTypeMap extends java.lang.Object
{
    private static android.webkit.MimeTypeMap sMimeTypeMap;
    private java.util.HashMap mExtensionToMimeTypeMap;
    private java.util.HashMap mMimeTypeToExtensionMap;

    private void <init>()
    {
        android.webkit.MimeTypeMap $r0;
        java.util.HashMap $r1;

        $r0 := @this: android.webkit.MimeTypeMap;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.MimeTypeMap: java.util.HashMap mMimeTypeToExtensionMap> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.MimeTypeMap: java.util.HashMap mExtensionToMimeTypeMap> = $r1;

        return;
    }

    public static java.lang.String getFileExtensionFromUrl(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(63);

        if $i0 <= 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 < 0 goto label3;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("[a-zA-Z_0-9\\.\\-\\(\\)]+", $r0);

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 < 0 goto label4;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r0;

     label3:
        goto label2;

     label4:
        return "";
    }

    public static android.webkit.MimeTypeMap getSingleton()
    {
        android.webkit.MimeTypeMap $r0;

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        if $r0 != null goto label1;

        $r0 = new android.webkit.MimeTypeMap;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void <init>()>();

        <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap> = $r0;

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/andrew-inset", "ez", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/dsptype", "tsp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/futuresplash", "spl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/hta", "hta", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/mac-binhex40", "hqx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/mac-compactpro", "cpt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/mathematica", "nb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/msaccess", "mdb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/oda", "oda", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/ogg", "ogg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/pdf", "pdf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/pgp-keys", "key", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/pgp-signature", "pgp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/pics-rules", "prf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/rar", "rar", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/rdf+xml", "rdf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/rss+xml", "rss", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/zip", "zip", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.android.package-archive", "apk", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.cinderella", "cdy", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.ms-pki.stl", "stl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.database", "odb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.formula", "odf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.graphics", "odg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.graphics-template", "otg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.image", "odi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.spreadsheet", "ods", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.spreadsheet-template", "ots", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.text", "odt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.text-master", "odm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.text-template", "ott", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.oasis.opendocument.text-web", "oth", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.rim.cod", "cod", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.smaf", "mmf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.calc", "sdc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.draw", "sda", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.impress", "sdd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.impress", "sdp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.math", "smf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.writer", "sdw", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.writer", "vor", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.stardivision.writer-global", "sgl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.calc", "sxc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.calc.template", "stc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.draw", "sxd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.draw.template", "std", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.impress", "sxi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.impress.template", "sti", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.math", "sxm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.writer", "sxw", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.writer.global", "sxg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.sun.xml.writer.template", "stw", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/vnd.visio", "vsd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-abiword", "abw", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-apple-diskimage", "dmg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-bcpio", "bcpio", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-bittorrent", "torrent", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-cdf", "cdf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-cdlink", "vcd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-chess-pgn", "pgn", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-cpio", "cpio", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-debian-package", "deb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-debian-package", "udeb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-director", "dcr", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-director", "dir", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-director", "dxr", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-dms", "dms", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-doom", "wad", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-dvi", "dvi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-flac", "flac", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-font", "pfa", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-font", "pfb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-font", "gsf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-font", "pcf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-font", "pcf.Z", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-freemind", "mm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-futuresplash", "spl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-gnumeric", "gnumeric", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-go-sgf", "sgf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-graphing-calculator", "gcf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-gtar", "gtar", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-gtar", "tgz", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-gtar", "taz", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-hdf", "hdf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-ica", "ica", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-internet-signup", "ins", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-internet-signup", "isp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-iphone", "iii", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-iso9660-image", "iso", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-jmol", "jmz", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-kchart", "chrt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-killustrator", "kil", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-koan", "skp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-koan", "skd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-koan", "skt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-koan", "skm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-kpresenter", "kpr", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-kpresenter", "kpt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-kspread", "ksp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-kword", "kwd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-kword", "kwt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-latex", "latex", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-lha", "lha", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-lzh", "lzh", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-lzx", "lzx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-maker", "frm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-maker", "maker", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-maker", "frame", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-maker", "fb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-maker", "book", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-maker", "fbdoc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-mif", "mif", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-ms-wmd", "wmd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-ms-wmz", "wmz", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-msi", "msi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-ns-proxy-autoconfig", "pac", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-nwc", "nwc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-object", "o", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-oz-application", "oza", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-pkcs7-certreqresp", "p7r", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-pkcs7-crl", "crl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-quicktimeplayer", "qtl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-shar", "shar", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-stuffit", "sit", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-sv4cpio", "sv4cpio", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-sv4crc", "sv4crc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-tar", "tar", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-texinfo", "texinfo", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-texinfo", "texi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-troff", "t", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-troff", "roff", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-troff-man", "man", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-ustar", "ustar", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-wais-source", "src", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-wingz", "wz", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-webarchive", "webarchive", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-x509-ca-cert", "crt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-xcf", "xcf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("application/x-xfig", "fig", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/basic", "snd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/midi", "mid", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/midi", "midi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/midi", "kar", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/mpeg", "mpga", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/mpeg", "mpega", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/mpeg", "mp2", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/mpeg", "mp3", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/mpeg", "m4a", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/mpegurl", "m3u", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/prs.sid", "sid", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-aiff", "aif", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-aiff", "aiff", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-aiff", "aifc", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-gsm", "gsm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-mpegurl", "m3u", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-ms-wma", "wma", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-ms-wax", "wax", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-pn-realaudio", "ra", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-pn-realaudio", "rm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-pn-realaudio", "ram", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-realaudio", "ra", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-scpls", "pls", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-sd2", "sd2", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("audio/x-wav", "wav", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/bmp", "bmp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/gif", "gif", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/ico", "cur", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/ico", "ico", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/ief", "ief", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/jpeg", "jpeg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/jpeg", "jpg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/jpeg", "jpe", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/pcx", "pcx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/png", "png", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/svg+xml", "svg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/svg+xml", "svgz", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/tiff", "tiff", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/tiff", "tif", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/vnd.djvu", "djvu", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/vnd.djvu", "djv", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/vnd.wap.wbmp", "wbmp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-cmu-raster", "ras", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-coreldraw", "cdr", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-coreldrawpattern", "pat", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-coreldrawtemplate", "cdt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-corelphotopaint", "cpt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-icon", "ico", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-jg", "art", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-jng", "jng", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-ms-bmp", "bmp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-photoshop", "psd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-portable-anymap", "pnm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-portable-bitmap", "pbm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-portable-graymap", "pgm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-portable-pixmap", "ppm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-rgb", "rgb", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-xbitmap", "xbm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-xpixmap", "xpm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("image/x-xwindowdump", "xwd", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("model/iges", "igs", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("model/iges", "iges", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("model/mesh", "msh", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("model/mesh", "mesh", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("model/mesh", "silo", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/calendar", "ics", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/calendar", "icz", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/comma-separated-values", "csv", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/css", "css", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/h323", "323", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/iuls", "uls", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/mathml", "mml", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/plain", "txt", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/plain", "asc", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/plain", "text", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/plain", "diff", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/plain", "pot", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/richtext", "rtx", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/rtf", "rtf", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/texmacs", "ts", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/text", "phps", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/tab-separated-values", "tsv", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-bibtex", "bib", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-boo", "boo", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++hdr", "h++", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++hdr", "hpp", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++hdr", "hxx", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++hdr", "hh", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++src", "c++", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++src", "cpp", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-c++src", "cxx", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-chdr", "h", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-component", "htc", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-csh", "csh", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-csrc", "c", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-dsrc", "d", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-haskell", "hs", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-java", "java", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-literate-haskell", "lhs", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-moc", "moc", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-pascal", "p", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-pascal", "pas", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-pcs-gcd", "gcd", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-setext", "etx", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-tcl", "tcl", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-tex", "tex", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-tex", "ltx", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-tex", "sty", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-tex", "cls", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-vcalendar", "vcs", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("text/x-vcard", "vcf", 1);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/3gpp", "3gp", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/3gpp", "3g2", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/dl", "dl", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/dv", "dif", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/dv", "dv", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/fli", "fli", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/mpeg", "mpeg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/mpeg", "mpg", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/mpeg", "mpe", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/mp4", "mp4", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/mpeg", "VOB", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/quicktime", "qt", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/quicktime", "mov", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/vnd.mpegurl", "mxu", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-la-asf", "lsf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-la-asf", "lsx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-mng", "mng", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-ms-asf", "asf", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-ms-asf", "asx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-ms-wm", "wm", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-ms-wmv", "wmv", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-ms-wmx", "wmx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-ms-wvx", "wvx", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-msvideo", "avi", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("video/x-sgi-movie", "movie", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("x-conference/x-cooltalk", "ice", 0);

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void loadEntry(java.lang.String,java.lang.String,boolean)>("x-epoc/x-sisx-app", "sisx", 0);

     label1:
        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        return $r0;
    }

    private void loadEntry(java.lang.String, java.lang.String, boolean)
    {
        android.webkit.MimeTypeMap $r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        java.util.HashMap $r3;

        $r0 := @this: android.webkit.MimeTypeMap;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<android.webkit.MimeTypeMap: java.util.HashMap mMimeTypeToExtensionMap>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z1 != 0 goto label1;

        $r3 = $r0.<android.webkit.MimeTypeMap: java.util.HashMap mMimeTypeToExtensionMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        if $z0 != 0 goto label2;

        $r3 = $r0.<android.webkit.MimeTypeMap: java.util.HashMap mExtensionToMimeTypeMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return;

     label2:
        return;
    }

    public java.lang.String getExtensionFromMimeType(java.lang.String)
    {
        java.lang.String $r0;
        android.webkit.MimeTypeMap $r1;
        int $i0;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        $r1 := @this: android.webkit.MimeTypeMap;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = $r1.<android.webkit.MimeTypeMap: java.util.HashMap mMimeTypeToExtensionMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r3;

        return $r0;

     label1:
        return null;
    }

    public java.lang.String getMimeTypeFromExtension(java.lang.String)
    {
        java.lang.String $r0;
        android.webkit.MimeTypeMap $r1;
        int $i0;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        $r1 := @this: android.webkit.MimeTypeMap;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = $r1.<android.webkit.MimeTypeMap: java.util.HashMap mExtensionToMimeTypeMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r3;

        return $r0;

     label1:
        return null;
    }

    public boolean hasExtension(java.lang.String)
    {
        android.webkit.MimeTypeMap $r0;
        java.lang.String $r1;
        int $i0;
        java.util.HashMap $r2;
        boolean $z0;

        $r0 := @this: android.webkit.MimeTypeMap;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = $r0.<android.webkit.MimeTypeMap: java.util.HashMap mExtensionToMimeTypeMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;

     label1:
        return 0;
    }

    public boolean hasMimeType(java.lang.String)
    {
        android.webkit.MimeTypeMap $r0;
        java.lang.String $r1;
        int $i0;
        java.util.HashMap $r2;
        boolean $z0;

        $r0 := @this: android.webkit.MimeTypeMap;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = $r0.<android.webkit.MimeTypeMap: java.util.HashMap mMimeTypeToExtensionMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;

     label1:
        return 0;
    }
}
