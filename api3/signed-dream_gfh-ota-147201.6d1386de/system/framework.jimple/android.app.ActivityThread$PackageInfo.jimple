public final class android.app.ActivityThread$PackageInfo extends java.lang.Object
{
    private final android.app.ActivityThread mActivityThread;
    private final java.lang.String mAppDir;
    private android.app.Application mApplication;
    private final android.content.pm.ApplicationInfo mApplicationInfo;
    private final java.lang.ClassLoader mBaseClassLoader;
    private java.lang.ClassLoader mClassLoader;
    int mClientCount;
    private final java.lang.String mDataDir;
    private final java.io.File mDataDirFile;
    private final boolean mIncludeCode;
    private final java.lang.String mPackageName;
    private final java.util.HashMap mReceivers;
    private final java.lang.String mResDir;
    private android.content.res.Resources mResources;
    private final boolean mSecurityViolation;
    private final java.util.HashMap mServices;
    private final java.lang.String[] mSharedLibraries;
    private final java.util.HashMap mUnboundServices;
    private final java.util.HashMap mUnregisteredReceivers;

    public void <init>(android.app.ActivityThread, android.content.pm.ApplicationInfo, android.app.ActivityThread, java.lang.ClassLoader, boolean, boolean)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.app.ActivityThread $r1, $r3;
        android.content.pm.ApplicationInfo $r2;
        java.lang.ClassLoader $r4;
        boolean $z0, $z1;
        java.util.HashMap $r5;
        java.lang.String $r6;
        int $i0, $i1;
        java.lang.String[] $r7;
        java.io.File $r8;
        android.app.ApplicationContext $r9;
        android.content.res.Resources $r10;
        android.content.res.Configuration $r11;
        android.util.DisplayMetrics $r12;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.app.ActivityThread;

        $r2 := @parameter1: android.content.pm.ApplicationInfo;

        $r3 := @parameter2: android.app.ActivityThread;

        $r4 := @parameter3: java.lang.ClassLoader;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers> = $r5;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnregisteredReceivers> = $r5;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices> = $r5;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnboundServices> = $r5;

        $r0.<android.app.ActivityThread$PackageInfo: int mClientCount> = 0;

        $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread> = $r1;

        $r0.<android.app.ActivityThread$PackageInfo: android.content.pm.ApplicationInfo mApplicationInfo> = $r2;

        $r6 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mPackageName> = $r6;

        $r6 = $r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir> = $r6;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 != $i1 goto label4;

        $r6 = $r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

     label1:
        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mResDir> = $r6;

        $r7 = $r2.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String[] mSharedLibraries> = $r7;

        $r6 = $r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mDataDir> = $r6;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mDataDir>;

        if $r6 == null goto label5;

        $r8 = new java.io.File;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mDataDir>;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r6);

     label2:
        $r0.<android.app.ActivityThread$PackageInfo: java.io.File mDataDirFile> = $r8;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mBaseClassLoader> = $r4;

        $r0.<android.app.ActivityThread$PackageInfo: boolean mSecurityViolation> = $z0;

        $r0.<android.app.ActivityThread$PackageInfo: boolean mIncludeCode> = $z1;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir>;

        if $r6 != null goto label6;

        $r9 = staticinvoke <android.app.ActivityThread: android.app.ApplicationContext access$000()>();

        if $r9 != null goto label3;

        $r9 = staticinvoke <android.app.ApplicationContext: android.app.ApplicationContext createSystemContext(android.app.ActivityThread)>($r3);

        staticinvoke <android.app.ActivityThread: android.app.ApplicationContext access$002(android.app.ApplicationContext)>($r9);

        $r9 = staticinvoke <android.app.ActivityThread: android.app.ApplicationContext access$000()>();

        $r10 = virtualinvoke $r9.<android.app.ApplicationContext: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r3.<android.app.ActivityThread: android.content.res.Configuration getConfiguration()>();

        $r12 = virtualinvoke $r3.<android.app.ActivityThread: android.util.DisplayMetrics getDisplayMetricsLocked(boolean)>(0);

        virtualinvoke $r10.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r11, $r12);

     label3:
        $r9 = staticinvoke <android.app.ActivityThread: android.app.ApplicationContext access$000()>();

        $r4 = virtualinvoke $r9.<android.app.ApplicationContext: java.lang.ClassLoader getClassLoader()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader> = $r4;

        $r9 = staticinvoke <android.app.ActivityThread: android.app.ApplicationContext access$000()>();

        $r10 = virtualinvoke $r9.<android.app.ApplicationContext: android.content.res.Resources getResources()>();

        $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources mResources> = $r10;

        return;

     label4:
        $r6 = $r2.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        goto label1;

     label5:
        $r8 = null;

        goto label2;

     label6:
        return;
    }

    public void <init>(android.app.ActivityThread, java.lang.String, android.content.Context)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.app.ActivityThread $r1;
        java.lang.String $r2;
        android.content.Context $r3;
        java.util.HashMap $r4;
        android.content.pm.ApplicationInfo $r5;
        java.lang.ClassLoader $r6;
        android.content.res.Resources $r7;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.app.ActivityThread;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers> = $r4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnregisteredReceivers> = $r4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices> = $r4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnboundServices> = $r4;

        $r0.<android.app.ActivityThread$PackageInfo: int mClientCount> = 0;

        $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread> = $r1;

        $r5 = new android.content.pm.ApplicationInfo;

        specialinvoke $r5.<android.content.pm.ApplicationInfo: void <init>()>();

        $r0.<android.app.ActivityThread$PackageInfo: android.content.pm.ApplicationInfo mApplicationInfo> = $r5;

        $r5 = $r0.<android.app.ActivityThread$PackageInfo: android.content.pm.ApplicationInfo mApplicationInfo>;

        $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r2;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mPackageName> = $r2;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir> = null;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mResDir> = null;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String[] mSharedLibraries> = null;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mDataDir> = null;

        $r0.<android.app.ActivityThread$PackageInfo: java.io.File mDataDirFile> = null;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mBaseClassLoader> = null;

        $r0.<android.app.ActivityThread$PackageInfo: boolean mSecurityViolation> = 0;

        $r0.<android.app.ActivityThread$PackageInfo: boolean mIncludeCode> = 1;

        $r6 = virtualinvoke $r3.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader> = $r6;

        $r7 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources mResources> = $r7;

        return;
    }

    static android.content.res.Resources access$3700(android.app.ActivityThread$PackageInfo)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.content.res.Resources r1;

        $r0 := @parameter0: android.app.ActivityThread$PackageInfo;

        r1 = $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources mResources>;

        return r1;
    }

    private static java.lang.String combineLibs(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] $r0, $r1;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(300);

        $z0 = 1;

        if $r0 == null goto label04;

        $i0 = lengthof $r0;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label04;

        $r3 = $r0[$i1];

        if $z0 == 0 goto label03;

        $z0 = 0;

     label02:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        goto label01;

     label03:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        goto label02;

     label04:
        if $z0 != 0 goto label08;

        $z1 = 1;

     label05:
        if $r1 == null goto label12;

        $i0 = lengthof $r1;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label12;

        $r3 = $r1[$i1];

        if $z1 == 0 goto label09;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r0, $r3);

        if $z2 == 0 goto label09;

     label07:
        $i1 = $i1 + 1;

        goto label06;

     label08:
        $z1 = 0;

        goto label05;

     label09:
        if $z0 == 0 goto label11;

        $z0 = 0;

     label10:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label07;

     label11:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        goto label10;

     label12:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static java.lang.String[] getLibrariesFor(java.lang.String)
    {
        java.lang.String $r0;
        android.content.pm.IPackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.os.RemoteException $r3;
        java.lang.AssertionError $r4;
        java.lang.String[] r5;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r2 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r0, 1024);

     label2:
        if $r2 != null goto label4;

        return null;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

     label4:
        r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        return r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.IIntentReceiver forgetReceiverDispatcher(android.content.Context, android.content.BroadcastReceiver)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.content.Context $r1;
        android.content.BroadcastReceiver $r2;
        java.util.HashMap $r3, $r4, $r7;
        java.lang.Object $r5;
        android.app.ActivityThread$PackageInfo$ReceiverDispatcher $r6;
        int $i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        android.app.IIntentReceiver $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        java.lang.IllegalStateException $r14;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.BroadcastReceiver;

        $r3 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        entermonitor $r3;

     label01:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 == null goto label06;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (android.app.ActivityThread$PackageInfo$ReceiverDispatcher) $r5;

        if $r6 == null goto label06;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label02;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label02:
        $z0 = virtualinvoke $r2.<android.content.BroadcastReceiver: boolean getDebugUnregister()>();

        if $z0 == 0 goto label04;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnregisteredReceivers>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 != null goto label03;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r7 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnregisteredReceivers>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label03:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Originally unregistered here:");

        virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: void setUnregisterLocation(java.lang.RuntimeException)>($r8);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

     label04:
        $r9 = virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: android.app.IIntentReceiver getIIntentReceiver()>();

        exitmonitor $r3;

     label05:
        return $r9;

     label06:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnregisteredReceivers>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 == null goto label09;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (android.app.ActivityThread$PackageInfo$ReceiverDispatcher) $r5;

        if $r6 == null goto label09;

        $r10 = virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistering Receiver ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was already unregistered");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r10);

        throw $r8;

     label07:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label08:
        throw $r13;

     label09:
        if $r1 != null goto label11;

     label10:
        $r14 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Receiver ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Context that is no longer in use: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label11:
        $r8 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver not registered: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label12:
        nop;

        catch java.lang.Throwable from label01 to label05 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label10 to label12 with label07;
    }

    public final android.app.IServiceConnection forgetServiceDispatcher(android.content.Context, android.content.ServiceConnection)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.content.Context $r1;
        android.content.ServiceConnection $r2;
        java.util.HashMap $r3, $r4, $r7;
        java.lang.Object $r5;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r6;
        int $i0;
        java.lang.IllegalArgumentException $r8;
        android.app.IServiceConnection $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        java.lang.IllegalStateException $r14;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.ServiceConnection;

        $r3 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        entermonitor $r3;

     label01:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 == null goto label06;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher) $r5;

        if $r6 == null goto label06;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void doForget()>();

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label02;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label02:
        $i0 = virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: int getFlags()>();

        $i0 = $i0 & 2;

        if $i0 == 0 goto label04;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnboundServices>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 != null goto label03;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r7 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnboundServices>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label03:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Originally unbound here:");

        virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void setUnbindLocation(java.lang.RuntimeException)>($r8);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

     label04:
        $r9 = virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        exitmonitor $r3;

     label05:
        return $r9;

     label06:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnboundServices>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 == null goto label09;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher) $r5;

        if $r6 == null goto label09;

        $r10 = virtualinvoke $r6.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Service ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was already unbound");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r10);

        throw $r8;

     label07:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label08:
        throw $r13;

     label09:
        if $r1 != null goto label11;

     label10:
        $r14 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Service ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Context that is no longer in use: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label11:
        $r8 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service not registered: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label12:
        nop;

        catch java.lang.Throwable from label01 to label05 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label10 to label12 with label07;
    }

    public java.lang.String getAppDir()
    {
        android.app.ActivityThread$PackageInfo $r0;
        java.lang.String r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        r1 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir>;

        return r1;
    }

    public android.content.res.AssetManager getAssets(android.app.ActivityThread)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.app.ActivityThread $r1;
        android.content.res.Resources $r2;
        android.content.res.AssetManager $r3;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.app.ActivityThread;

        $r2 = virtualinvoke $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources getResources(android.app.ActivityThread)>($r1);

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        return $r3;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        android.app.ActivityThread$PackageInfo $r0;
        java.lang.String $r1, $r2, $r3, $r5, $r8;
        java.lang.ClassLoader $r4;
        boolean $z0;
        android.app.ActivityThread $r6;
        java.lang.String[] $r7, $r10;
        java.lang.StringBuilder $r9;
        android.app.ApplicationLoaders $r11;
        java.lang.Throwable $r12;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        entermonitor $r0;

     label01:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader>;

        if $r4 == null goto label03;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader>;

        exitmonitor $r0;

     label02:
        return $r4;

     label03:
        $z0 = $r0.<android.app.ActivityThread$PackageInfo: boolean mIncludeCode>;

        if $z0 == 0 goto label12;

        $r5 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mPackageName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 != 0 goto label12;

        $r5 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir>;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        $r1 = $r6.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir>;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        $r2 = $r6.<android.app.ActivityThread: java.lang.String mInstrumentationAppPackage>;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        $r3 = $r6.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir>;

        $r7 = null;

        $r8 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label04;

        $r8 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mAppDir>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

     label04:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label05;

        $r7 = staticinvoke <android.app.ActivityThread$PackageInfo: java.lang.String[] getLibrariesFor(java.lang.String)>($r2);

     label05:
        $r10 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String[] mSharedLibraries>;

        if $r10 != null goto label06;

        if $r7 == null goto label07;

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String[] mSharedLibraries>;

        $r1 = staticinvoke <android.app.ActivityThread$PackageInfo: java.lang.String combineLibs(java.lang.String[],java.lang.String[])>($r10, $r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r11 = staticinvoke <android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>();

        $r1 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mDataDir>;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mBaseClassLoader>;

        $r4 = virtualinvoke $r11.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>($r5, $r1, $r4);

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader> = $r4;

     label08:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader>;

        exitmonitor $r0;

     label09:
        return $r4;

     label10:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r12;

     label12:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mBaseClassLoader>;

        if $r4 != null goto label13;

        $r4 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader> = $r4;

        goto label08;

     label13:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mBaseClassLoader>;

        $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader mClassLoader> = $r4;

     label14:
        goto label08;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label12 to label14 with label10;
    }

    public java.lang.String getDataDir()
    {
        android.app.ActivityThread$PackageInfo $r0;
        java.lang.String r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        r1 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mDataDir>;

        return r1;
    }

    public java.io.File getDataDirFile()
    {
        android.app.ActivityThread$PackageInfo $r0;
        java.io.File r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        r1 = $r0.<android.app.ActivityThread$PackageInfo: java.io.File mDataDirFile>;

        return r1;
    }

    public java.lang.String getPackageName()
    {
        android.app.ActivityThread$PackageInfo $r0;
        java.lang.String r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        r1 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mPackageName>;

        return r1;
    }

    public android.app.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver, android.content.Context, android.os.Handler, android.app.Instrumentation, boolean)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        android.app.Instrumentation $r4;
        boolean $z0;
        java.util.HashMap $r5, $r6, $r8;
        java.lang.Object $r7;
        android.app.ActivityThread$PackageInfo$ReceiverDispatcher $r9;
        android.app.IIntentReceiver $r10;
        java.lang.Throwable $r11;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.content.BroadcastReceiver;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.os.Handler;

        $r4 := @parameter3: android.app.Instrumentation;

        $z0 := @parameter4: boolean;

        $r5 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        entermonitor $r5;

        $r6 = null;

        if $z0 == 0 goto label20;

     label01:
        $r6 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r8 = (java.util.HashMap) $r7;

        $r6 = $r8;

        if $r8 == null goto label20;

        $r7 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (android.app.ActivityThread$PackageInfo$ReceiverDispatcher) $r7;

     label02:
        $r6 = $r8;

     label03:
        if $r9 != null goto label11;

     label04:
        $r9 = new android.app.ActivityThread$PackageInfo$ReceiverDispatcher;

        specialinvoke $r9.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: void <init>(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>($r1, $r2, $r3, $r4, $z0);

     label05:
        if $z0 == 0 goto label19;

        if $r6 != null goto label18;

     label06:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

     label07:
        $r8 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

     label08:
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r9);

     label09:
        $r10 = virtualinvoke $r9.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: android.app.IIntentReceiver getIIntentReceiver()>();

        exitmonitor $r5;

     label10:
        return $r10;

     label11:
        virtualinvoke $r9.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: void validate(android.content.Context,android.os.Handler)>($r2, $r3);

     label12:
        goto label09;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor $r5;

     label15:
        throw $r11;

     label16:
        $r11 := @caughtexception;

        goto label14;

     label17:
        $r11 := @caughtexception;

        goto label14;

     label18:
        goto label08;

     label19:
        goto label09;

     label20:
        $r9 = null;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label07 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public java.lang.String getResDir()
    {
        android.app.ActivityThread$PackageInfo $r0;
        java.lang.String r1;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        r1 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mResDir>;

        return r1;
    }

    public android.content.res.Resources getResources(android.app.ActivityThread)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.app.ActivityThread $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.app.ActivityThread;

        $r2 = $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources mResources>;

        if $r2 != null goto label1;

        $r3 = $r0.<android.app.ActivityThread$PackageInfo: java.lang.String mResDir>;

        $r2 = virtualinvoke $r1.<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String)>($r3);

        $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources mResources> = $r2;

     label1:
        $r2 = $r0.<android.app.ActivityThread$PackageInfo: android.content.res.Resources mResources>;

        return $r2;
    }

    public final android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.content.ServiceConnection $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        int $i0;
        java.util.HashMap $r4, $r5, $r8;
        java.lang.Object $r6;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r7;
        android.app.IServiceConnection $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.content.ServiceConnection;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.os.Handler;

        $i0 := @parameter3: int;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.HashMap) $r6;

        if $r5 == null goto label15;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher) $r6;

     label02:
        if $r7 != null goto label09;

     label03:
        $r7 = new android.app.ActivityThread$PackageInfo$ServiceDispatcher;

        specialinvoke $r7.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void <init>(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>($r1, $r2, $r3, $i0);

     label04:
        if $r5 != null goto label06;

     label05:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r8 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

     label06:
        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label07:
        $r9 = virtualinvoke $r7.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        exitmonitor $r4;

     label08:
        return $r9;

     label09:
        virtualinvoke $r7.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void validate(android.content.Context,android.os.Handler)>($r2, $r3);

     label10:
        goto label07;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor $r4;

     label13:
        throw $r10;

     label14:
        $r10 := @caughtexception;

        goto label12;

     label15:
        $r7 = null;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean isSecurityViolation()
    {
        android.app.ActivityThread$PackageInfo $r0;
        boolean z0;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        z0 = $r0.<android.app.ActivityThread$PackageInfo: boolean mSecurityViolation>;

        return z0;
    }

    public android.app.Application makeApplication()
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.app.ApplicationContext $r1;
        android.app.Application $r2, $r8;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4;
        java.lang.ClassLoader $r5;
        android.app.ActivityThread $r6;
        android.app.Instrumentation $r7;
        java.util.ArrayList $r9;
        java.lang.Exception $r10;
        boolean $z0;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r12;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r2 = $r0.<android.app.ActivityThread$PackageInfo: android.app.Application mApplication>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.app.ActivityThread$PackageInfo: android.app.Application mApplication>;

        return $r2;

     label1:
        $r2 = null;

        $r3 = $r0.<android.app.ActivityThread$PackageInfo: android.content.pm.ApplicationInfo mApplicationInfo>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String className>;

        if $r4 != null goto label2;

        $r4 = "android.app.Application";

     label2:
        $r5 = virtualinvoke $r0.<android.app.ActivityThread$PackageInfo: java.lang.ClassLoader getClassLoader()>();

        $r1 = new android.app.ApplicationContext;

        specialinvoke $r1.<android.app.ApplicationContext: void <init>()>();

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        virtualinvoke $r1.<android.app.ApplicationContext: void init(android.app.ActivityThread$PackageInfo,android.os.IBinder,android.app.ActivityThread)>($r0, null, $r6);

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        $r7 = $r6.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r8 = virtualinvoke $r7.<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>($r5, $r4, $r1);

        $r2 = $r8;

        virtualinvoke $r1.<android.app.ApplicationContext: void setOuterContext(android.content.Context)>($r8);

     label3:
        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        $r9 = $r6.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r0.<android.app.ActivityThread$PackageInfo: android.app.Application mApplication> = $r2;

        return $r2;

     label4:
        $r10 := @caughtexception;

        $r6 = $r0.<android.app.ActivityThread$PackageInfo: android.app.ActivityThread mActivityThread>;

        $r7 = $r6.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z0 = virtualinvoke $r7.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r2, $r10);

        if $z0 != 0 goto label3;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate application ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r10);

        throw $r11;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void removeContextRegistrations(android.content.Context, java.lang.String, java.lang.String)
    {
        android.app.ActivityThread$PackageInfo $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3, $r12;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        boolean $z0;
        android.app.ActivityThread$PackageInfo$ReceiverDispatcher $r8;
        android.app.IntentReceiverLeaked $r9, $r13;
        java.lang.StringBuilder $r10;
        android.content.BroadcastReceiver $r11;
        java.lang.StackTraceElement[] $r14;
        android.app.IActivityManager $r15;
        android.app.IIntentReceiver $r16;
        android.os.RemoteException $r17, $r23;
        android.app.ActivityThread$PackageInfo$ServiceDispatcher $r18;
        android.app.ServiceConnectionLeaked $r19, $r21;
        android.content.ServiceConnection $r20;
        android.app.IServiceConnection $r22;

        $r0 := @this: android.app.ActivityThread$PackageInfo;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mReceivers>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 == null goto label05;

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.app.ActivityThread$PackageInfo$ReceiverDispatcher) $r5;

        $r9 = new android.app.IntentReceiverLeaked;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked IntentReceiver ");

        $r11 = virtualinvoke $r8.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("originally registered here. Are you missing a ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call to unregisterReceiver()?");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>($r12);

        $r13 = virtualinvoke $r8.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>();

        $r14 = virtualinvoke $r13.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r9.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r14);

        $r12 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r12, $r9);

     label02:
        $r15 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r16 = virtualinvoke $r8.<android.app.ActivityThread$PackageInfo$ReceiverDispatcher: android.app.IIntentReceiver getIIntentReceiver()>();

        interfaceinvoke $r15.<android.app.IActivityManager: void unregisterReceiver(android.app.IIntentReceiver)>($r16);

     label03:
        goto label01;

     label04:
        $r17 := @caughtexception;

        goto label01;

     label05:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnregisteredReceivers>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mServices>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        if $r4 == null goto label09;

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (android.app.ActivityThread$PackageInfo$ServiceDispatcher) $r5;

        $r19 = new android.app.ServiceConnectionLeaked;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked ServiceConnection ");

        $r20 = virtualinvoke $r18.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was originally bound here");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>($r12);

        $r21 = virtualinvoke $r18.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>();

        $r14 = virtualinvoke $r21.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r19.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r14);

        $r12 = virtualinvoke $r19.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r12, $r19);

     label07:
        $r15 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r22 = virtualinvoke $r18.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        interfaceinvoke $r15.<android.app.IActivityManager: boolean unbindService(android.app.IServiceConnection)>($r22);

     label08:
        virtualinvoke $r18.<android.app.ActivityThread$PackageInfo$ServiceDispatcher: void doForget()>();

        goto label06;

     label09:
        $r4 = $r0.<android.app.ActivityThread$PackageInfo: java.util.HashMap mUnboundServices>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;

     label10:
        $r23 := @caughtexception;

        goto label08;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label10;
    }
}
