public class android.os.Binder extends java.lang.Object implements android.os.IBinder
{
    private static final boolean FIND_POTENTIAL_LEAKS;
    private static final java.lang.String TAG;
    private java.lang.String mDescriptor;
    private int mObject;
    private android.os.IInterface mOwner;

    public void <init>()
    {
        android.os.Binder $r0;

        $r0 := @this: android.os.Binder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        specialinvoke $r0.<android.os.Binder: void init()>();

        return;
    }

    public static final native long clearCallingIdentity();

    private final native void destroy();

    private boolean execTransact(int, int, int, int)
    {
        android.os.Binder $r0;
        int $i0, $i1, $i2, $i3;
        android.os.Parcel $r1, $r2;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.os.Binder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain(int)>($i1);

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain(int)>($i2);

     label1:
        $z0 = virtualinvoke $r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i3);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void writeException(java.lang.Exception)>($r3);

        $z0 = 1;

        goto label2;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void writeException(java.lang.Exception)>($r4);

        $z0 = 1;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    public static final native void flushPendingCommands();

    public static final native int getCallingPid();

    public static final native int getCallingUid();

    private final native void init();

    public static final native void joinThreadPool();

    public static final native void restoreCallingIdentity(long);

    public void attachInterface(android.os.IInterface, java.lang.String)
    {
        android.os.Binder $r0;
        android.os.IInterface $r1;
        java.lang.String $r2;

        $r0 := @this: android.os.Binder;

        $r1 := @parameter0: android.os.IInterface;

        $r2 := @parameter1: java.lang.String;

        $r0.<android.os.Binder: android.os.IInterface mOwner> = $r1;

        $r0.<android.os.Binder: java.lang.String mDescriptor> = $r2;

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.os.Binder $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3;

        $r0 := @this: android.os.Binder;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        return;
    }

    public void dump(java.io.FileDescriptor, java.lang.String[])
    {
        android.os.Binder $r0;
        java.io.FileDescriptor $r1;
        java.lang.String[] $r2;
        java.io.FileOutputStream $r3;
        java.io.PrintWriter $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.os.Binder;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.lang.String[];

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r1);

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r3);

     label1:
        virtualinvoke $r0.<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r1, $r4, $r2);

     label2:
        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.Binder $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.os.Binder;

     label1:
        specialinvoke $r0.<android.os.Binder: void destroy()>();

     label2:
        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r1 := @caughtexception;

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.Binder $r0;
        java.lang.String r1;

        $r0 := @this: android.os.Binder;

        r1 = $r0.<android.os.Binder: java.lang.String mDescriptor>;

        return r1;
    }

    public boolean isBinderAlive()
    {
        android.os.Binder $r0;

        $r0 := @this: android.os.Binder;

        return 1;
    }

    public void linkToDeath(android.os.IBinder$DeathRecipient, int)
    {
        android.os.Binder $r0;
        android.os.IBinder$DeathRecipient $r1;
        int $i0;

        $r0 := @this: android.os.Binder;

        $r1 := @parameter0: android.os.IBinder$DeathRecipient;

        $i0 := @parameter1: int;

        return;
    }

    protected boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.Binder $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        java.lang.String $r3;
        android.os.ParcelFileDescriptor $r4;
        java.lang.String[] $r5;
        java.io.FileDescriptor $r6;
        java.lang.Throwable $r7;
        java.io.IOException $r8, $r9;

        $r0 := @this: android.os.Binder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

        if $i0 != 1598968902 goto label01;

        $r3 = virtualinvoke $r0.<android.os.Binder: java.lang.String getInterfaceDescriptor()>();

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return 1;

     label01:
        if $i0 != 1598311760 goto label08;

        $r4 = virtualinvoke $r1.<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>();

        $r5 = virtualinvoke $r1.<android.os.Parcel: java.lang.String[] readStringArray()>();

        if $r4 == null goto label04;

     label02:
        $r6 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke $r0.<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>($r6, $r5);

     label03:
        virtualinvoke $r4.<android.os.ParcelFileDescriptor: void close()>();

     label04:
        return 1;

     label05:
        $r7 := @caughtexception;

     label06:
        virtualinvoke $r4.<android.os.ParcelFileDescriptor: void close()>();

     label07:
        throw $r7;

     label08:
        return 0;

     label09:
        $r8 := @caughtexception;

        goto label04;

     label10:
        $r9 := @caughtexception;

        goto label07;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label06 to label07 with label10;
    }

    public boolean pingBinder()
    {
        android.os.Binder $r0;

        $r0 := @this: android.os.Binder;

        return 1;
    }

    public android.os.IInterface queryLocalInterface(java.lang.String)
    {
        android.os.Binder $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.os.IInterface r3;

        $r0 := @this: android.os.Binder;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.os.Binder: java.lang.String mDescriptor>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        r3 = $r0.<android.os.Binder: android.os.IInterface mOwner>;

        return r3;

     label1:
        return null;
    }

    public final boolean transact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.Binder $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        boolean $z0;

        $r0 := @this: android.os.Binder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>(0);

     label1:
        $z0 = virtualinvoke $r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i1);

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        return $z0;

     label2:
        return $z0;
    }

    public boolean unlinkToDeath(android.os.IBinder$DeathRecipient, int)
    {
        android.os.Binder $r0;
        android.os.IBinder$DeathRecipient $r1;
        int $i0;

        $r0 := @this: android.os.Binder;

        $r1 := @parameter0: android.os.IBinder$DeathRecipient;

        $i0 := @parameter1: int;

        return 1;
    }

    public static void <clinit>()
    {
        <android.os.Binder: java.lang.String TAG> = "Binder";

        <android.os.Binder: boolean FIND_POTENTIAL_LEAKS> = 0;

        return;
    }
}
