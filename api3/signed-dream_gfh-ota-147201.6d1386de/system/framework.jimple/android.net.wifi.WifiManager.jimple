public class android.net.wifi.WifiManager extends java.lang.Object
{
    public static final java.lang.String ACTION_PICK_WIFI_NETWORK;
    public static final int ERROR_AUTHENTICATING;
    public static final java.lang.String EXTRA_BSSID;
    public static final java.lang.String EXTRA_NETWORK_INFO;
    public static final java.lang.String EXTRA_NEW_RSSI;
    public static final java.lang.String EXTRA_NEW_STATE;
    public static final java.lang.String EXTRA_PREVIOUS_WIFI_STATE;
    public static final java.lang.String EXTRA_SUPPLICANT_CONNECTED;
    public static final java.lang.String EXTRA_SUPPLICANT_ERROR;
    public static final java.lang.String EXTRA_WIFI_STATE;
    private static final int MAX_RSSI;
    private static final int MIN_RSSI;
    public static final java.lang.String NETWORK_IDS_CHANGED_ACTION;
    public static final java.lang.String NETWORK_STATE_CHANGED_ACTION;
    public static final java.lang.String RSSI_CHANGED_ACTION;
    public static final java.lang.String SCAN_RESULTS_AVAILABLE_ACTION;
    public static final java.lang.String SUPPLICANT_CONNECTION_CHANGE_ACTION;
    public static final java.lang.String SUPPLICANT_STATE_CHANGED_ACTION;
    public static final int WIFI_MODE_FULL;
    public static final int WIFI_MODE_SCAN_ONLY;
    public static final java.lang.String WIFI_STATE_CHANGED_ACTION;
    public static final int WIFI_STATE_DISABLED;
    public static final int WIFI_STATE_DISABLING;
    public static final int WIFI_STATE_ENABLED;
    public static final int WIFI_STATE_ENABLING;
    public static final int WIFI_STATE_UNKNOWN;
    android.os.Handler mHandler;
    android.net.wifi.IWifiManager mService;

    public void <init>(android.net.wifi.IWifiManager, android.os.Handler)
    {
        android.net.wifi.WifiManager $r0;
        android.net.wifi.IWifiManager $r1;
        android.os.Handler $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 := @parameter0: android.net.wifi.IWifiManager;

        $r2 := @parameter1: android.os.Handler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService> = $r1;

        $r0.<android.net.wifi.WifiManager: android.os.Handler mHandler> = $r2;

        return;
    }

    private int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiManager $r0;
        android.net.wifi.WifiConfiguration $r1;
        int $i0;
        android.net.wifi.IWifiManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 := @parameter0: android.net.wifi.WifiConfiguration;

        $r2 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $i0 = interfaceinvoke $r2.<android.net.wifi.IWifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>($r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int calculateSignalLevel(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 > -100 goto label1;

        return 0;

     label1:
        if $i0 < -55 goto label2;

        $i0 = $i1 - 1;

        return $i0;

     label2:
        $i1 = $i1 - 1;

        $i1 = 45 / $i1;

        $i0 = $i0 - -100;

        $i0 = $i0 / $i1;

        return $i0;
    }

    public static int compareSignalLevel(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 - $i1;

        return $i0;
    }

    public int addNetwork(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiManager $r0;
        android.net.wifi.WifiConfiguration $r1;
        int $i0;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 := @parameter0: android.net.wifi.WifiConfiguration;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r1.<android.net.wifi.WifiConfiguration: int networkId> = -1;

        $i0 = specialinvoke $r0.<android.net.wifi.WifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>($r1);

        return $i0;
    }

    public android.net.wifi.WifiManager$WifiLock createWifiLock(int, java.lang.String)
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        java.lang.String $r1;
        android.net.wifi.WifiManager$WifiLock $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = new android.net.wifi.WifiManager$WifiLock;

        specialinvoke $r2.<android.net.wifi.WifiManager$WifiLock: void <init>(android.net.wifi.WifiManager,int,java.lang.String,android.net.wifi.WifiManager$1)>($r0, $i0, $r1, null);

        return $r2;
    }

    public android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)
    {
        android.net.wifi.WifiManager $r0;
        java.lang.String $r1;
        android.net.wifi.WifiManager$WifiLock $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.net.wifi.WifiManager$WifiLock;

        specialinvoke $r2.<android.net.wifi.WifiManager$WifiLock: void <init>(android.net.wifi.WifiManager,int,java.lang.String,android.net.wifi.WifiManager$1)>($r0, 1, $r1, null);

        return $r2;
    }

    public boolean disableNetwork(int)
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean disableNetwork(int)>($i0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnect()
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean disconnect()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enableNetwork(int, boolean)
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean enableNetwork(int,boolean)>($i0, $z0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getConfiguredNetworks()
    {
        android.net.wifi.WifiManager $r0;
        java.util.List $r1;
        android.net.wifi.IWifiManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.wifi.WifiManager;

        $r2 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.wifi.IWifiManager: java.util.List getConfiguredNetworks()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.wifi.WifiInfo getConnectionInfo()
    {
        android.net.wifi.WifiManager $r0;
        android.net.wifi.WifiInfo $r1;
        android.net.wifi.IWifiManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.wifi.WifiManager;

        $r2 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.wifi.IWifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.DhcpInfo getDhcpInfo()
    {
        android.net.wifi.WifiManager $r0;
        android.net.DhcpInfo $r1;
        android.net.wifi.IWifiManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.wifi.WifiManager;

        $r2 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.wifi.IWifiManager: android.net.DhcpInfo getDhcpInfo()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getNumAllowedChannels()
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $i0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: int getNumAllowedChannels()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getScanResults()
    {
        android.net.wifi.WifiManager $r0;
        java.util.List $r1;
        android.net.wifi.IWifiManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.wifi.WifiManager;

        $r2 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.wifi.IWifiManager: java.util.List getScanResults()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getValidChannelCounts()
    {
        android.net.wifi.WifiManager $r0;
        int[] $r1;
        android.net.wifi.IWifiManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.net.wifi.WifiManager;

        $r2 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.net.wifi.IWifiManager: int[] getValidChannelCounts()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getWifiState()
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $i0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: int getWifiEnabledState()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return 4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isWifiEnabled()
    {
        android.net.wifi.WifiManager $r0;
        int $i0;

        $r0 := @this: android.net.wifi.WifiManager;

        $i0 = virtualinvoke $r0.<android.net.wifi.WifiManager: int getWifiState()>();

        if $i0 != 3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean pingSupplicant()
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label2:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean pingSupplicant()>();

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean reassociate()
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean reassociate()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean reconnect()
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean reconnect()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean removeNetwork(int)
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean removeNetwork(int)>($i0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean saveConfiguration()
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean saveConfiguration()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setNumAllowedChannels(int)
    {
        android.net.wifi.WifiManager $r0;
        int $i0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean setNumAllowedChannels(int)>($i0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setWifiEnabled(boolean)
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean setWifiEnabled(boolean)>($z0);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean startScan()
    {
        android.net.wifi.WifiManager $r0;
        boolean $z0;
        android.net.wifi.IWifiManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 = $r0.<android.net.wifi.WifiManager: android.net.wifi.IWifiManager mService>;

     label1:
        $z0 = interfaceinvoke $r1.<android.net.wifi.IWifiManager: boolean startScan()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int updateNetwork(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiManager $r0;
        android.net.wifi.WifiConfiguration $r1;
        int $i0;

        $r0 := @this: android.net.wifi.WifiManager;

        $r1 := @parameter0: android.net.wifi.WifiConfiguration;

        if $r1 == null goto label1;

        $i0 = $r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i0 >= 0 goto label2;

     label1:
        return -1;

     label2:
        $i0 = specialinvoke $r0.<android.net.wifi.WifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>($r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <android.net.wifi.WifiManager: int WIFI_STATE_UNKNOWN> = 4;

        <android.net.wifi.WifiManager: int WIFI_STATE_ENABLING> = 2;

        <android.net.wifi.WifiManager: int WIFI_STATE_ENABLED> = 3;

        <android.net.wifi.WifiManager: int WIFI_STATE_DISABLING> = 0;

        <android.net.wifi.WifiManager: int WIFI_STATE_DISABLED> = 1;

        <android.net.wifi.WifiManager: java.lang.String WIFI_STATE_CHANGED_ACTION> = "android.net.wifi.WIFI_STATE_CHANGED";

        <android.net.wifi.WifiManager: int WIFI_MODE_SCAN_ONLY> = 2;

        <android.net.wifi.WifiManager: int WIFI_MODE_FULL> = 1;

        <android.net.wifi.WifiManager: java.lang.String SUPPLICANT_STATE_CHANGED_ACTION> = "android.net.wifi.supplicant.STATE_CHANGE";

        <android.net.wifi.WifiManager: java.lang.String SUPPLICANT_CONNECTION_CHANGE_ACTION> = "android.net.wifi.supplicant.CONNECTION_CHANGE";

        <android.net.wifi.WifiManager: java.lang.String SCAN_RESULTS_AVAILABLE_ACTION> = "android.net.wifi.SCAN_RESULTS";

        <android.net.wifi.WifiManager: java.lang.String RSSI_CHANGED_ACTION> = "android.net.wifi.RSSI_CHANGED";

        <android.net.wifi.WifiManager: java.lang.String NETWORK_STATE_CHANGED_ACTION> = "android.net.wifi.STATE_CHANGE";

        <android.net.wifi.WifiManager: java.lang.String NETWORK_IDS_CHANGED_ACTION> = "android.net.wifi.NETWORK_IDS_CHANGED";

        <android.net.wifi.WifiManager: int MIN_RSSI> = -100;

        <android.net.wifi.WifiManager: int MAX_RSSI> = -55;

        <android.net.wifi.WifiManager: java.lang.String EXTRA_WIFI_STATE> = "wifi_state";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_SUPPLICANT_ERROR> = "supplicantError";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_SUPPLICANT_CONNECTED> = "connected";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_PREVIOUS_WIFI_STATE> = "previous_wifi_state";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_NEW_STATE> = "newState";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_NEW_RSSI> = "newRssi";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_NETWORK_INFO> = "networkInfo";

        <android.net.wifi.WifiManager: java.lang.String EXTRA_BSSID> = "bssid";

        <android.net.wifi.WifiManager: int ERROR_AUTHENTICATING> = 1;

        <android.net.wifi.WifiManager: java.lang.String ACTION_PICK_WIFI_NETWORK> = "android.net.wifi.PICK_WIFI_NETWORK";

        return;
    }
}
