abstract class android.webkit.WebSyncManager extends java.lang.Object implements java.lang.Runnable
{
    protected static final java.lang.String LOGTAG;
    private static int SYNC_LATER_INTERVAL;
    private static final int SYNC_MESSAGE;
    private static int SYNC_NOW_INTERVAL;
    protected android.webkit.WebViewDatabase mDataBase;
    protected android.os.Handler mHandler;
    private int mStartSyncRefCount;
    private java.lang.Thread mSyncThread;
    private java.lang.String mThreadName;

    static void <clinit>()
    {
        <android.webkit.WebSyncManager: int SYNC_MESSAGE> = 101;

        <android.webkit.WebSyncManager: java.lang.String LOGTAG> = "websync";

        <android.webkit.WebSyncManager: int SYNC_NOW_INTERVAL> = 100;

        <android.webkit.WebSyncManager: int SYNC_LATER_INTERVAL> = 300000;

        return;
    }

    protected void <init>(android.content.Context, java.lang.String)
    {
        android.webkit.WebSyncManager $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.webkit.WebViewDatabase $r3;
        java.lang.Thread $r4;
        java.lang.IllegalStateException $r5;

        $r0 := @this: android.webkit.WebSyncManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.webkit.WebSyncManager: java.lang.String mThreadName> = $r2;

        if $r1 == null goto label1;

        $r3 = staticinvoke <android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>($r1);

        $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase> = $r3;

        $r4 = new java.lang.Thread;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0);

        $r0.<android.webkit.WebSyncManager: java.lang.Thread mSyncThread> = $r4;

        $r4 = $r0.<android.webkit.WebSyncManager: java.lang.Thread mSyncThread>;

        $r2 = $r0.<android.webkit.WebSyncManager: java.lang.String mThreadName>;

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>($r2);

        $r4 = $r0.<android.webkit.WebSyncManager: java.lang.Thread mSyncThread>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("WebSyncManager can\'t be created without context");

        throw $r5;
    }

    static int access$000()
    {
        int i0;

        i0 = <android.webkit.WebSyncManager: int SYNC_LATER_INTERVAL>;

        return i0;
    }

    protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.webkit.WebSyncManager $r0;
        java.lang.CloneNotSupportedException $r1;

        $r0 := @this: android.webkit.WebSyncManager;

        $r1 = new java.lang.CloneNotSupportedException;

        specialinvoke $r1.<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>("doesn\'t implement Cloneable");

        throw $r1;
    }

    protected void onSyncInit()
    {
        android.webkit.WebSyncManager $r0;

        $r0 := @this: android.webkit.WebSyncManager;

        return;
    }

    public void resetSync()
    {
        android.webkit.WebSyncManager $r0;
        android.os.Message $r1;
        android.os.Handler $r2;
        int $i0;
        long $l1;

        $r0 := @this: android.webkit.WebSyncManager;

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(101);

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(101);

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $i0 = <android.webkit.WebSyncManager: int SYNC_LATER_INTERVAL>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l1);

        return;
    }

    public void run()
    {
        android.webkit.WebSyncManager $r0;
        android.os.Message $r1;
        android.webkit.WebSyncManager$SyncHandler $r2;
        android.os.Handler $r3;
        int $i0;
        long $l1;

        $r0 := @this: android.webkit.WebSyncManager;

        staticinvoke <android.os.Looper: void prepare()>();

        $r2 = new android.webkit.WebSyncManager$SyncHandler;

        specialinvoke $r2.<android.webkit.WebSyncManager$SyncHandler: void <init>(android.webkit.WebSyncManager,android.webkit.WebSyncManager$1)>($r0, null);

        $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler> = $r2;

        virtualinvoke $r0.<android.webkit.WebSyncManager: void onSyncInit()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $r3 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(101);

        $r3 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $i0 = <android.webkit.WebSyncManager: int SYNC_LATER_INTERVAL>;

        $l1 = (long) $i0;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l1);

        staticinvoke <android.os.Looper: void loop()>();

        return;
    }

    public void startSync()
    {
        android.webkit.WebSyncManager $r0;
        android.os.Message $r1;
        android.os.Handler $r2;
        int $i0;
        long $l1;

        $r0 := @this: android.webkit.WebSyncManager;

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = $r0.<android.webkit.WebSyncManager: int mStartSyncRefCount>;

        $i0 = $i0 + 1;

        $r0.<android.webkit.WebSyncManager: int mStartSyncRefCount> = $i0;

        if $i0 != 1 goto label2;

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(101);

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $i0 = <android.webkit.WebSyncManager: int SYNC_LATER_INTERVAL>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l1);

        return;

     label2:
        return;
    }

    public void stopSync()
    {
        android.webkit.WebSyncManager $r0;
        android.os.Handler $r1;
        int $i0;

        $r0 := @this: android.webkit.WebSyncManager;

        $r1 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = $r0.<android.webkit.WebSyncManager: int mStartSyncRefCount>;

        $i0 = $i0 - 1;

        $r0.<android.webkit.WebSyncManager: int mStartSyncRefCount> = $i0;

        if $i0 != 0 goto label2;

        $r1 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(101);

        return;

     label2:
        return;
    }

    public void sync()
    {
        android.webkit.WebSyncManager $r0;
        android.os.Message $r1;
        android.os.Handler $r2;
        int $i0;
        long $l1;

        $r0 := @this: android.webkit.WebSyncManager;

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(101);

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(101);

        $r2 = $r0.<android.webkit.WebSyncManager: android.os.Handler mHandler>;

        $i0 = <android.webkit.WebSyncManager: int SYNC_NOW_INTERVAL>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l1);

        return;
    }

    abstract void syncFromRamToFlash();
}
