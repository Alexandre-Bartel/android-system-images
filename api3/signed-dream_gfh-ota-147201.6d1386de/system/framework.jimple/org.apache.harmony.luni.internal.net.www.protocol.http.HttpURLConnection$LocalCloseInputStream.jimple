class org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream extends java.io.InputStream
{
    private boolean closed;
    final org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0;

    public void <init>(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $r1 := @parameter0: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0> = $r1;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed> = 0;

        return;
    }

    private void throwClosed() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        java.io.IOException $r1;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r1;
    }

    public int available() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        java.io.InputStream $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: void throwClosed()>();

     label1:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r2 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        $i0 = virtualinvoke $r2.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        boolean $z0;
        java.net.CacheRequest $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed> = 1;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $z0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: boolean access$500(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        if $z0 == 0 goto label1;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r2 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.net.CacheRequest access$600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        if $r2 == null goto label2;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r2 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.net.CacheRequest access$600(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        virtualinvoke $r2.<java.net.CacheRequest: void abort()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    public void mark(int)
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        int $i0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $i0 := @parameter0: int;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r1 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>($i0);

        return;

     label1:
        return;
    }

    public boolean markSupported()
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        java.io.InputStream $r2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r2 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        $z0 = virtualinvoke $r2.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        java.io.InputStream $r2;
        int $i0;
        java.io.OutputStream $r3;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: void throwClosed()>();

     label1:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r2 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $z0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: boolean access$100(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r3 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$200(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        if $r3 == null goto label3;

        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r3 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$200(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>($i0);

        return $i0;

     label2:
        return $i0;

     label3:
        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        byte[] $r1;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r2;
        java.io.InputStream $r3;
        int $i0;
        java.io.OutputStream $r4;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $r1 := @parameter0: byte[];

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: void throwClosed()>();

     label1:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r3 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r1);

        if $i0 <= 0 goto label2;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $z0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: boolean access$400(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        if $z0 == 0 goto label3;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r4 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$200(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        if $r4 == null goto label4;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r4 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$200(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return $i0;

     label2:
        return $i0;

     label3:
        return $i0;

     label4:
        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r2;
        java.io.InputStream $r3;
        java.io.OutputStream $r4;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: void throwClosed()>();

     label1:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r3 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        if $i1 <= 0 goto label2;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $z0 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: boolean access$300(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        if $z0 == 0 goto label3;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r4 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$200(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        if $r4 == null goto label4;

        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r4 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$200(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return $i1;

     label2:
        return $i1;

     label3:
        return $i1;

     label4:
        return $i1;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: void throwClosed()>();

     label1:
        $r2 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r1 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r2);

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream $r0;
        long $l0;
        boolean $z0;
        org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection $r1;
        java.io.InputStream $r2;

        $r0 := @this: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream;

        $l0 := @parameter0: long;

        $z0 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: void throwClosed()>();

     label1:
        $r1 = $r0.<org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection$LocalCloseInputStream: org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection this$0>;

        $r2 = staticinvoke <org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$000(org.apache.harmony.luni.internal.net.www.protocol.http.HttpURLConnection)>($r1);

        $l0 = virtualinvoke $r2.<java.io.InputStream: long skip(long)>($l0);

        return $l0;
    }
}
