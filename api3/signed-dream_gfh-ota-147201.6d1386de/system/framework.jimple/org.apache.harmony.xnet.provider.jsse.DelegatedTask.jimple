public class org.apache.harmony.xnet.provider.jsse.DelegatedTask extends java.lang.Object implements java.lang.Runnable
{
    private final java.security.PrivilegedExceptionAction action;
    private final java.security.AccessControlContext context;
    private final org.apache.harmony.xnet.provider.jsse.HandshakeProtocol handshaker;

    public void <init>(java.security.PrivilegedExceptionAction, org.apache.harmony.xnet.provider.jsse.HandshakeProtocol, java.security.AccessControlContext)
    {
        org.apache.harmony.xnet.provider.jsse.DelegatedTask $r0;
        java.security.PrivilegedExceptionAction $r1;
        org.apache.harmony.xnet.provider.jsse.HandshakeProtocol $r2;
        java.security.AccessControlContext $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DelegatedTask;

        $r1 := @parameter0: java.security.PrivilegedExceptionAction;

        $r2 := @parameter1: org.apache.harmony.xnet.provider.jsse.HandshakeProtocol;

        $r3 := @parameter2: java.security.AccessControlContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: java.security.PrivilegedExceptionAction action> = $r1;

        $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: org.apache.harmony.xnet.provider.jsse.HandshakeProtocol handshaker> = $r2;

        $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: java.security.AccessControlContext context> = $r3;

        return;
    }

    public void run()
    {
        org.apache.harmony.xnet.provider.jsse.DelegatedTask $r0;
        org.apache.harmony.xnet.provider.jsse.HandshakeProtocol $r1, $r6;
        java.lang.Exception $r2;
        java.security.PrivilegedExceptionAction $r3;
        java.security.AccessControlContext $r4;
        java.security.PrivilegedActionException $r5;
        java.lang.Throwable $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DelegatedTask;

        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: org.apache.harmony.xnet.provider.jsse.HandshakeProtocol handshaker>;

        entermonitor $r1;

     label01:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: java.security.PrivilegedExceptionAction action>;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: java.security.AccessControlContext context>;

     label02:
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r3, $r4);

     label03:
        exitmonitor $r1;

     label04:
        return;

     label05:
        $r5 := @caughtexception;

        $r6 = $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: org.apache.harmony.xnet.provider.jsse.HandshakeProtocol handshaker>;

        $r2 = virtualinvoke $r5.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $r6.<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: java.lang.Exception delegatedTaskErr> = $r2;

        goto label03;

     label06:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label07:
        throw $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        $r6 = $r0.<org.apache.harmony.xnet.provider.jsse.DelegatedTask: org.apache.harmony.xnet.provider.jsse.HandshakeProtocol handshaker>;

        $r6.<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: java.lang.Exception delegatedTaskErr> = $r8;

     label10:
        goto label03;

        catch java.security.PrivilegedActionException from label02 to label03 with label05;
        catch java.lang.RuntimeException from label01 to label03 with label08;
        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label07 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }
}
