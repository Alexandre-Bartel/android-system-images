public class org.apache.harmony.awt.gl.Crossing extends java.lang.Object
{
    public static final int CROSSING;
    static final double DELTA;
    static final double ROOT_DELTA;
    static final int UNKNOWN;

    public void <init>()
    {
        org.apache.harmony.awt.gl.Crossing $r0;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int crossBound(double[], int, double, double)
    {
        int $i0, $i1, $i2, $i3;
        double $d0, $d1, $d2;
        double[] $r0;
        byte $b4;
        boolean $z0, $z1;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        $d1 := @parameter2: double;

        $d0 := @parameter3: double;

        if $i0 != 0 goto label01;

        return 0;

     label01:
        $i1 = 0;

        $i2 = 0;

        $i3 = 2;

     label02:
        if $i3 >= $i0 goto label06;

        $d2 = $r0[$i3];

        $b4 = $d2 cmpg $d1;

        if $b4 >= 0 goto label04;

        $i1 = $i1 + 1;

     label03:
        $i3 = $i3 + 4;

        goto label02;

     label04:
        $d2 = $r0[$i3];

        $b4 = $d2 cmpl $d0;

        if $b4 <= 0 goto label05;

        $i2 = $i2 + 1;

        goto label03;

     label05:
        return 255;

     label06:
        if $i2 != 0 goto label07;

        return 0;

     label07:
        if $i1 == 0 goto label14;

        staticinvoke <org.apache.harmony.awt.gl.Crossing: void sortBound(double[],int)>($r0, $i0);

        $d1 = $r0[2];

        $b4 = $d1 cmpl $d0;

        if $b4 <= 0 goto label11;

        $z0 = 1;

     label08:
        $i1 = 6;

     label09:
        if $i1 >= $i0 goto label14;

        $d1 = $r0[$i1];

        $b4 = $d1 cmpl $d0;

        if $b4 <= 0 goto label12;

        $z1 = 1;

     label10:
        if $z0 == $z1 goto label13;

        $i2 = $i1 + 1;

        $d1 = $r0[$i2];

        $i2 = $i1 - 3;

        $d2 = $r0[$i2];

        $b4 = $d1 cmpl $d2;

        if $b4 == 0 goto label13;

        return 255;

     label11:
        $z0 = 0;

        goto label08;

     label12:
        $z1 = 0;

        goto label10;

     label13:
        $z0 = $z1;

        $i1 = $i1 + 4;

        goto label09;

     label14:
        return 254;
    }

    public static int crossCubic(double, double, double, double, double, double, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b0;
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double[] $r1;
        int $i1;

        $d8 := @parameter0: double;

        $d9 := @parameter1: double;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 := @parameter4: double;

        $d3 := @parameter5: double;

        $d4 := @parameter6: double;

        $d5 := @parameter7: double;

        $d6 := @parameter8: double;

        $d7 := @parameter9: double;

        $b0 = $d6 cmpg $d8;

        if $b0 >= 0 goto label1;

        $b0 = $d6 cmpg $d0;

        if $b0 >= 0 goto label1;

        $b0 = $d6 cmpg $d2;

        if $b0 >= 0 goto label1;

        $b0 = $d6 cmpg $d4;

        if $b0 < 0 goto label4;

     label1:
        $b0 = $d6 cmpl $d8;

        if $b0 <= 0 goto label2;

        $b0 = $d6 cmpl $d0;

        if $b0 <= 0 goto label2;

        $b0 = $d6 cmpl $d2;

        if $b0 <= 0 goto label2;

        $b0 = $d6 cmpl $d4;

        if $b0 > 0 goto label4;

     label2:
        $b0 = $d7 cmpl $d9;

        if $b0 <= 0 goto label3;

        $b0 = $d7 cmpl $d1;

        if $b0 <= 0 goto label3;

        $b0 = $d7 cmpl $d3;

        if $b0 <= 0 goto label3;

        $b0 = $d7 cmpl $d5;

        if $b0 > 0 goto label4;

     label3:
        $b0 = $d8 cmpl $d0;

        if $b0 != 0 goto label5;

        $b0 = $d0 cmpl $d2;

        if $b0 != 0 goto label5;

        $b0 = $d2 cmpl $d4;

        if $b0 != 0 goto label5;

     label4:
        return 0;

     label5:
        $b0 = $d7 cmpg $d9;

        if $b0 >= 0 goto label9;

        $b0 = $d7 cmpg $d1;

        if $b0 >= 0 goto label9;

        $b0 = $d7 cmpg $d3;

        if $b0 >= 0 goto label9;

        $b0 = $d7 cmpg $d5;

        if $b0 >= 0 goto label9;

        $b0 = $d6 cmpl $d8;

        if $b0 == 0 goto label9;

        $b0 = $d6 cmpl $d4;

        if $b0 == 0 goto label9;

        $b0 = $d8 cmpg $d4;

        if $b0 >= 0 goto label7;

        $b0 = $d8 cmpg $d6;

        if $b0 >= 0 goto label6;

        $b0 = $d6 cmpg $d4;

        if $b0 >= 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $b0 = $d4 cmpg $d6;

        if $b0 >= 0 goto label8;

        $b0 = $d6 cmpg $d8;

        if $b0 >= 0 goto label8;

        return -1;

     label8:
        return 0;

     label9:
        $r0 = new org.apache.harmony.awt.gl.Crossing$CubicCurve;

        specialinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: void <init>(double,double,double,double,double,double,double,double)>($d8, $d9, $d0, $d1, $d2, $d3, $d4, $d5);

        $d8 = $d6 - $d8;

        $d9 = $d7 - $d9;

        $r1 = newarray (double)[3];

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int solvePoint(double[],double)>($r1, $d8);

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int cross(double[],int,double,double)>($r1, $i1, $d9, $d9);

        return $i1;
    }

    public static int crossLine(double, double, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        byte $b0;

        $d3 := @parameter0: double;

        $d4 := @parameter1: double;

        $d0 := @parameter2: double;

        $d5 := @parameter3: double;

        $d1 := @parameter4: double;

        $d2 := @parameter5: double;

        $b0 = $d1 cmpg $d3;

        if $b0 >= 0 goto label01;

        $b0 = $d1 cmpg $d0;

        if $b0 < 0 goto label04;

     label01:
        $b0 = $d1 cmpl $d3;

        if $b0 <= 0 goto label02;

        $b0 = $d1 cmpl $d0;

        if $b0 > 0 goto label04;

     label02:
        $b0 = $d2 cmpl $d4;

        if $b0 <= 0 goto label03;

        $b0 = $d2 cmpl $d5;

        if $b0 > 0 goto label04;

     label03:
        $b0 = $d3 cmpl $d0;

        if $b0 != 0 goto label05;

     label04:
        return 0;

     label05:
        $b0 = $d2 cmpg $d4;

        if $b0 >= 0 goto label07;

        $b0 = $d2 cmpg $d5;

        if $b0 >= 0 goto label07;

     label06:
        $b0 = $d1 cmpl $d3;

        if $b0 != 0 goto label09;

        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label08;

        return 0;

     label07:
        $d5 = $d5 - $d4;

        $d6 = $d1 - $d3;

        $d5 = $d5 * $d6;

        $d6 = $d0 - $d3;

        $d5 = $d5 / $d6;

        $d4 = $d2 - $d4;

        $b0 = $d5 cmpg $d4;

        if $b0 > 0 goto label06;

        return 0;

     label08:
        return -1;

     label09:
        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label11;

        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label10;

        return 1;

     label10:
        return 0;

     label11:
        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label12;

        return 1;

     label12:
        return -1;
    }

    public static int crossPath(java.awt.geom.PathIterator, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        java.awt.geom.PathIterator $r0;
        double[] $r1;
        int $i0, $i1;
        boolean $z0;
        byte $b2;

        $r0 := @parameter0: java.awt.geom.PathIterator;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 = 0.0;

        $d3 = 0.0;

        $d4 = 0.0;

        $d5 = 0.0;

        $r1 = newarray (double)[6];

        $i0 = 0;

     label01:
        $z0 = interfaceinvoke $r0.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z0 != 0 goto label11;

        $i1 = interfaceinvoke $r0.<java.awt.geom.PathIterator: int currentSegment(double[])>($r1);

        lookupswitch($i1)
        {
            case 0: goto label03;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label02;
        };

     label02:
        interfaceinvoke $r0.<java.awt.geom.PathIterator: void next()>();

        goto label01;

     label03:
        $b2 = $d3 cmpl $d5;

        if $b2 != 0 goto label04;

        $b2 = $d2 cmpl $d4;

        if $b2 == 0 goto label13;

     label04:
        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossLine(double,double,double,double,double,double)>($d3, $d2, $d5, $d4, $d0, $d1);

        $i0 = $i1 + $i0;

     label05:
        $d3 = $r1[0];

        $d5 = $d3;

        $d2 = $r1[1];

        $d4 = $d2;

        goto label02;

     label06:
        $d6 = $r1[0];

        $d7 = $r1[1];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossLine(double,double,double,double,double,double)>($d3, $d2, $d6, $d7, $d0, $d1);

        $d2 = $d7;

        $i0 = $i1 + $i0;

        $d3 = $d6;

        goto label02;

     label07:
        $d6 = $r1[0];

        $d7 = $r1[1];

        $d8 = $r1[2];

        $d9 = $r1[3];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossQuad(double,double,double,double,double,double,double,double)>($d3, $d2, $d6, $d7, $d8, $d9, $d0, $d1);

        $d2 = $d9;

        $i0 = $i1 + $i0;

        $d3 = $d8;

        goto label02;

     label08:
        $d6 = $r1[0];

        $d7 = $r1[1];

        $d8 = $r1[2];

        $d9 = $r1[3];

        $d10 = $r1[4];

        $d11 = $r1[5];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossCubic(double,double,double,double,double,double,double,double,double,double)>($d3, $d2, $d6, $d7, $d8, $d9, $d10, $d11, $d0, $d1);

        $d2 = $d11;

        $i0 = $i1 + $i0;

        $d3 = $d10;

        goto label02;

     label09:
        $b2 = $d2 cmpl $d4;

        if $b2 != 0 goto label10;

        $b2 = $d3 cmpl $d5;

        if $b2 == 0 goto label02;

     label10:
        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossLine(double,double,double,double,double,double)>($d3, $d2, $d5, $d4, $d0, $d1);

        $d2 = $d4;

        $i0 = $i1 + $i0;

        $d3 = $d5;

        goto label02;

     label11:
        $b2 = $d2 cmpl $d4;

        if $b2 == 0 goto label12;

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossLine(double,double,double,double,double,double)>($d3, $d2, $d5, $d4, $d0, $d1);

        $i0 = $i1 + $i0;

        return $i0;

     label12:
        return $i0;

     label13:
        goto label05;
    }

    public static int crossQuad(double, double, double, double, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b0;
        org.apache.harmony.awt.gl.Crossing$QuadCurve $r0;
        double[] $r1;
        int $i1;

        $d6 := @parameter0: double;

        $d7 := @parameter1: double;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 := @parameter4: double;

        $d3 := @parameter5: double;

        $d4 := @parameter6: double;

        $d5 := @parameter7: double;

        $b0 = $d4 cmpg $d6;

        if $b0 >= 0 goto label1;

        $b0 = $d4 cmpg $d0;

        if $b0 >= 0 goto label1;

        $b0 = $d4 cmpg $d2;

        if $b0 < 0 goto label4;

     label1:
        $b0 = $d4 cmpl $d6;

        if $b0 <= 0 goto label2;

        $b0 = $d4 cmpl $d0;

        if $b0 <= 0 goto label2;

        $b0 = $d4 cmpl $d2;

        if $b0 > 0 goto label4;

     label2:
        $b0 = $d5 cmpl $d7;

        if $b0 <= 0 goto label3;

        $b0 = $d5 cmpl $d1;

        if $b0 <= 0 goto label3;

        $b0 = $d5 cmpl $d3;

        if $b0 > 0 goto label4;

     label3:
        $b0 = $d6 cmpl $d0;

        if $b0 != 0 goto label5;

        $b0 = $d0 cmpl $d2;

        if $b0 != 0 goto label5;

     label4:
        return 0;

     label5:
        $b0 = $d5 cmpg $d7;

        if $b0 >= 0 goto label9;

        $b0 = $d5 cmpg $d1;

        if $b0 >= 0 goto label9;

        $b0 = $d5 cmpg $d3;

        if $b0 >= 0 goto label9;

        $b0 = $d4 cmpl $d6;

        if $b0 == 0 goto label9;

        $b0 = $d4 cmpl $d2;

        if $b0 == 0 goto label9;

        $b0 = $d6 cmpg $d2;

        if $b0 >= 0 goto label7;

        $b0 = $d6 cmpg $d4;

        if $b0 >= 0 goto label6;

        $b0 = $d4 cmpg $d2;

        if $b0 >= 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $b0 = $d2 cmpg $d4;

        if $b0 >= 0 goto label8;

        $b0 = $d4 cmpg $d6;

        if $b0 >= 0 goto label8;

        return -1;

     label8:
        return 0;

     label9:
        $r0 = new org.apache.harmony.awt.gl.Crossing$QuadCurve;

        specialinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: void <init>(double,double,double,double,double,double)>($d6, $d7, $d0, $d1, $d2, $d3);

        $d6 = $d4 - $d6;

        $d7 = $d5 - $d7;

        $r1 = newarray (double)[3];

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int solvePoint(double[],double)>($r1, $d6);

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int cross(double[],int,double,double)>($r1, $i1, $d7, $d7);

        return $i1;
    }

    public static int crossShape(java.awt.Shape, double, double)
    {
        java.awt.Shape $r0;
        double $d0, $d1;
        java.awt.geom.Rectangle2D $r1;
        boolean $z0;
        java.awt.geom.PathIterator $r2;
        int $i0;

        $r0 := @parameter0: java.awt.Shape;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $r1 = interfaceinvoke $r0.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $z0 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: boolean contains(double,double)>($d0, $d1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r0.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        $i0 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossPath(java.awt.geom.PathIterator,double,double)>($r2, $d0, $d1);

        return $i0;
    }

    static int fixRoots(double[], int)
    {
        double[] $r0;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        boolean $z0;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $i3 = $i1 + 1;

     label2:
        if $i3 >= $i0 goto label5;

        $d1 = $r0[$i1];

        $d0 = $r0[$i3];

        $d0 = $d1 - $d0;

        $z0 = staticinvoke <org.apache.harmony.awt.gl.Crossing: boolean isZero(double)>($d0);

        if $z0 == 0 goto label4;

        $i3 = $i2;

     label3:
        $i1 = $i1 + 1;

        $i2 = $i3;

        goto label1;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        $i3 = $i2 + 1;

        $d0 = $r0[$i1];

        $r0[$i2] = $d0;

        goto label3;

     label6:
        return $i2;
    }

    public static int intersectCubic(double, double, double, double, double, double, double, double, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        byte $b0;
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0, r4;
        double[] $r1, $r2, $r3;
        int $i1, $i2, $i3, $i4;

        $d6 := @parameter0: double;

        $d7 := @parameter1: double;

        $d8 := @parameter2: double;

        $d9 := @parameter3: double;

        $d10 := @parameter4: double;

        $d11 := @parameter5: double;

        $d0 := @parameter6: double;

        $d1 := @parameter7: double;

        $d2 := @parameter8: double;

        $d3 := @parameter9: double;

        $d4 := @parameter10: double;

        $d5 := @parameter11: double;

        $b0 = $d4 cmpg $d6;

        if $b0 >= 0 goto label01;

        $b0 = $d4 cmpg $d8;

        if $b0 >= 0 goto label01;

        $b0 = $d4 cmpg $d10;

        if $b0 >= 0 goto label01;

        $b0 = $d4 cmpg $d0;

        if $b0 < 0 goto label03;

     label01:
        $b0 = $d2 cmpl $d6;

        if $b0 <= 0 goto label02;

        $b0 = $d2 cmpl $d8;

        if $b0 <= 0 goto label02;

        $b0 = $d2 cmpl $d10;

        if $b0 <= 0 goto label02;

        $b0 = $d2 cmpl $d0;

        if $b0 > 0 goto label03;

     label02:
        $b0 = $d3 cmpl $d7;

        if $b0 <= 0 goto label04;

        $b0 = $d3 cmpl $d9;

        if $b0 <= 0 goto label04;

        $b0 = $d3 cmpl $d11;

        if $b0 <= 0 goto label04;

        $b0 = $d3 cmpl $d1;

        if $b0 <= 0 goto label04;

     label03:
        return 0;

     label04:
        $b0 = $d5 cmpg $d7;

        if $b0 >= 0 goto label08;

        $b0 = $d5 cmpg $d9;

        if $b0 >= 0 goto label08;

        $b0 = $d5 cmpg $d11;

        if $b0 >= 0 goto label08;

        $b0 = $d5 cmpg $d1;

        if $b0 >= 0 goto label08;

        $b0 = $d2 cmpl $d6;

        if $b0 == 0 goto label08;

        $b0 = $d2 cmpl $d0;

        if $b0 == 0 goto label08;

        $b0 = $d6 cmpg $d0;

        if $b0 >= 0 goto label06;

        $b0 = $d6 cmpg $d2;

        if $b0 >= 0 goto label05;

        $b0 = $d2 cmpg $d0;

        if $b0 >= 0 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $b0 = $d0 cmpg $d2;

        if $b0 >= 0 goto label07;

        $b0 = $d2 cmpg $d6;

        if $b0 >= 0 goto label07;

        return -1;

     label07:
        return 0;

     label08:
        r4 = new org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $r0 = r4;

        specialinvoke r4.<org.apache.harmony.awt.gl.Crossing$CubicCurve: void <init>(double,double,double,double,double,double,double,double)>($d6, $d7, $d8, $d9, $d10, $d11, $d0, $d1);

        $d9 = $d2 - $d6;

        $d8 = $d3 - $d7;

        $d10 = $d4 - $d6;

        $d7 = $d5 - $d7;

        $r1 = newarray (double)[3];

        $r2 = newarray (double)[3];

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int solvePoint(double[],double)>($r1, $d9);

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int solvePoint(double[],double)>($r2, $d10);

        if $i1 != 0 goto label09;

        if $i2 != 0 goto label09;

        return 0;

     label09:
        $d9 = $d9 - 1.0E-5;

        $d10 = $d10 + 1.0E-5;

        $r3 = newarray (double)[40];

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, 0, $r1, $i1, $d9, $d10, 0, 0);

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, $i3, $r2, $i2, $d9, $d10, 0, 1);

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int solveExtremX(double[])>($r2);

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, $i2, $r2, $i3, $d9, $d10, 1, 2);

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int solveExtremY(double[])>($r2);

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, $i2, $r2, $i3, $d9, $d10, 1, 4);

        $i2 = $i3;

        $b0 = $d2 cmpg $d6;

        if $b0 >= 0 goto label10;

        $b0 = $d6 cmpg $d4;

        if $b0 >= 0 goto label10;

        $i2 = $i3 + 1;

        $d6 = (double) 0L;

        $r3[$i3] = $d6;

        $i3 = $i2 + 1;

        $d6 = (double) 0L;

        $r3[$i2] = $d6;

        $i4 = $i3 + 1;

        $d6 = (double) 0L;

        $r3[$i3] = $d6;

        $i2 = $i4 + 1;

        $d6 = (double) 4618441417868443648L;

        $r3[$i4] = $d6;

     label10:
        $i3 = $i2;

        $b0 = $d2 cmpg $d0;

        if $b0 >= 0 goto label11;

        $b0 = $d0 cmpg $d4;

        if $b0 >= 0 goto label11;

        $i3 = $i2 + 1;

        $d6 = (double) 4607182418800017408L;

        $r3[$i2] = $d6;

        $i2 = $i3 + 1;

        $d6 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax>;

        $r3[$i3] = $d6;

        $i4 = $i2 + 1;

        $d6 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ay>;

        $r3[$i2] = $d6;

        $i3 = $i4 + 1;

        $d6 = (double) 4619567317775286272L;

        $r3[$i4] = $d6;

     label11:
        $i2 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossBound(double[],int,double,double)>($r3, $i3, $d8, $d7);

        if $i2 != 254 goto label12;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: int cross(double[],int,double,double)>($r1, $i1, $d8, $d7);

        return $i1;

     label12:
        return $i2;
    }

    public static int intersectLine(double, double, double, double, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b0;

        $d3 := @parameter0: double;

        $d4 := @parameter1: double;

        $d0 := @parameter2: double;

        $d5 := @parameter3: double;

        $d1 := @parameter4: double;

        $d6 := @parameter5: double;

        $d7 := @parameter6: double;

        $d2 := @parameter7: double;

        $b0 = $d7 cmpg $d3;

        if $b0 >= 0 goto label01;

        $b0 = $d7 cmpg $d0;

        if $b0 < 0 goto label03;

     label01:
        $b0 = $d1 cmpl $d3;

        if $b0 <= 0 goto label02;

        $b0 = $d1 cmpl $d0;

        if $b0 > 0 goto label03;

     label02:
        $b0 = $d6 cmpl $d4;

        if $b0 <= 0 goto label04;

        $b0 = $d6 cmpl $d5;

        if $b0 <= 0 goto label04;

     label03:
        return 0;

     label04:
        $b0 = $d2 cmpg $d4;

        if $b0 >= 0 goto label06;

        $b0 = $d2 cmpg $d5;

        if $b0 >= 0 goto label06;

     label05:
        $b0 = $d3 cmpl $d0;

        if $b0 != 0 goto label17;

        return 0;

     label06:
        $b0 = $d3 cmpl $d0;

        if $b0 != 0 goto label07;

        return 255;

     label07:
        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label11;

        $b0 = $d3 cmpg $d1;

        if $b0 >= 0 goto label10;

        $d8 = $d1;

     label08:
        $b0 = $d0 cmpg $d7;

        if $b0 >= 0 goto label09;

        $d7 = $d0;

     label09:
        $d5 = $d5 - $d4;

        $d9 = $d0 - $d3;

        $d5 = $d5 / $d9;

        $d8 = $d8 - $d3;

        $d8 = $d8 * $d5;

        $d8 = $d8 + $d4;

        $d7 = $d7 - $d3;

        $d5 = $d7 * $d5;

        $d4 = $d4 + $d5;

        $b0 = $d8 cmpg $d6;

        if $b0 >= 0 goto label15;

        $b0 = $d4 cmpg $d6;

        if $b0 >= 0 goto label15;

        return 0;

     label10:
        $d8 = $d3;

        goto label08;

     label11:
        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label14;

        $d8 = $d1;

     label12:
        $b0 = $d3 cmpg $d7;

        if $b0 >= 0 goto label13;

        $d7 = $d3;

     label13:
        goto label09;

     label14:
        $d8 = $d0;

        goto label12;

     label15:
        $b0 = $d8 cmpl $d2;

        if $b0 <= 0 goto label16;

        $b0 = $d4 cmpl $d2;

        if $b0 > 0 goto label05;

     label16:
        return 255;

     label17:
        $b0 = $d1 cmpl $d3;

        if $b0 != 0 goto label19;

        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label18;

        return 0;

     label18:
        return -1;

     label19:
        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label21;

        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label20;

        return 1;

     label20:
        return 0;

     label21:
        $b0 = $d3 cmpg $d0;

        if $b0 >= 0 goto label23;

        $b0 = $d3 cmpg $d1;

        if $b0 >= 0 goto label22;

        $b0 = $d1 cmpg $d0;

        if $b0 >= 0 goto label22;

        return 1;

     label22:
        return 0;

     label23:
        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label24;

        $b0 = $d1 cmpg $d3;

        if $b0 >= 0 goto label24;

        return -1;

     label24:
        return 0;
    }

    public static int intersectPath(java.awt.geom.PathIterator, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.awt.geom.PathIterator $r0;
        double[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        byte $b3;

        $r0 := @parameter0: java.awt.geom.PathIterator;

        $d2 := @parameter1: double;

        $d3 := @parameter2: double;

        $d0 := @parameter3: double;

        $d1 := @parameter4: double;

        $d4 = 0.0;

        $d5 = 0.0;

        $d6 = 0.0;

        $d7 = 0.0;

        $r1 = newarray (double)[6];

        $d0 = $d2 + $d0;

        $d1 = $d3 + $d1;

        $i0 = 0;

     label01:
        $z0 = interfaceinvoke $r0.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z0 != 0 goto label13;

        $i1 = 0;

        $i2 = interfaceinvoke $r0.<java.awt.geom.PathIterator: int currentSegment(double[])>($r1);

        lookupswitch($i2)
        {
            case 0: goto label03;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label02;
        };

     label02:
        if $i1 != 255 goto label12;

        return 255;

     label03:
        $b3 = $d5 cmpl $d7;

        if $b3 != 0 goto label04;

        $b3 = $d4 cmpl $d6;

        if $b3 == 0 goto label05;

     label04:
        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectLine(double,double,double,double,double,double,double,double)>($d5, $d4, $d7, $d6, $d2, $d3, $d0, $d1);

     label05:
        $d5 = $r1[0];

        $d7 = $d5;

        $d4 = $r1[1];

        $d6 = $d4;

        goto label02;

     label06:
        $d8 = $r1[0];

        $d9 = $r1[1];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectLine(double,double,double,double,double,double,double,double)>($d5, $d4, $d8, $d9, $d2, $d3, $d0, $d1);

        $d4 = $d9;

        $d5 = $d8;

        goto label02;

     label07:
        $d8 = $r1[0];

        $d9 = $r1[1];

        $d10 = $r1[2];

        $d11 = $r1[3];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectQuad(double,double,double,double,double,double,double,double,double,double)>($d5, $d4, $d8, $d9, $d10, $d11, $d2, $d3, $d0, $d1);

        $d4 = $d11;

        $d5 = $d10;

        goto label02;

     label08:
        $d8 = $r1[0];

        $d9 = $r1[1];

        $d10 = $r1[2];

        $d11 = $r1[3];

        $d12 = $r1[4];

        $d13 = $r1[5];

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectCubic(double,double,double,double,double,double,double,double,double,double,double,double)>($d5, $d4, $d8, $d9, $d10, $d11, $d12, $d13, $d2, $d3, $d0, $d1);

        $d4 = $d13;

        $d5 = $d12;

        goto label02;

     label09:
        $b3 = $d4 cmpl $d6;

        if $b3 != 0 goto label10;

        $b3 = $d5 cmpl $d7;

        if $b3 == 0 goto label11;

     label10:
        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectLine(double,double,double,double,double,double,double,double)>($d5, $d4, $d7, $d6, $d2, $d3, $d0, $d1);

     label11:
        $d5 = $d7;

        $d4 = $d6;

        goto label02;

     label12:
        interfaceinvoke $r0.<java.awt.geom.PathIterator: void next()>();

        $i0 = $i1 + $i0;

        goto label01;

     label13:
        $b3 = $d4 cmpl $d6;

        if $b3 == 0 goto label16;

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectLine(double,double,double,double,double,double,double,double)>($d5, $d4, $d7, $d6, $d2, $d3, $d0, $d1);

        if $i1 != 255 goto label14;

        return 255;

     label14:
        $i0 = $i1 + $i0;

     label15:
        return $i0;

     label16:
        goto label15;
    }

    public static int intersectQuad(double, double, double, double, double, double, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b0;
        org.apache.harmony.awt.gl.Crossing$QuadCurve $r0, r4;
        double[] $r1, $r2, $r3;
        int $i1, $i2, $i3, $i4;

        $d4 := @parameter0: double;

        $d5 := @parameter1: double;

        $d6 := @parameter2: double;

        $d7 := @parameter3: double;

        $d0 := @parameter4: double;

        $d8 := @parameter5: double;

        $d1 := @parameter6: double;

        $d9 := @parameter7: double;

        $d2 := @parameter8: double;

        $d3 := @parameter9: double;

        $b0 = $d2 cmpg $d4;

        if $b0 >= 0 goto label01;

        $b0 = $d2 cmpg $d6;

        if $b0 >= 0 goto label01;

        $b0 = $d2 cmpg $d0;

        if $b0 < 0 goto label03;

     label01:
        $b0 = $d1 cmpl $d4;

        if $b0 <= 0 goto label02;

        $b0 = $d1 cmpl $d6;

        if $b0 <= 0 goto label02;

        $b0 = $d1 cmpl $d0;

        if $b0 > 0 goto label03;

     label02:
        $b0 = $d9 cmpl $d5;

        if $b0 <= 0 goto label04;

        $b0 = $d9 cmpl $d7;

        if $b0 <= 0 goto label04;

        $b0 = $d9 cmpl $d8;

        if $b0 <= 0 goto label04;

     label03:
        return 0;

     label04:
        $b0 = $d3 cmpg $d5;

        if $b0 >= 0 goto label08;

        $b0 = $d3 cmpg $d7;

        if $b0 >= 0 goto label08;

        $b0 = $d3 cmpg $d8;

        if $b0 >= 0 goto label08;

        $b0 = $d1 cmpl $d4;

        if $b0 == 0 goto label08;

        $b0 = $d1 cmpl $d0;

        if $b0 == 0 goto label08;

        $b0 = $d4 cmpg $d0;

        if $b0 >= 0 goto label06;

        $b0 = $d4 cmpg $d1;

        if $b0 >= 0 goto label05;

        $b0 = $d1 cmpg $d0;

        if $b0 >= 0 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label07;

        $b0 = $d1 cmpg $d4;

        if $b0 >= 0 goto label07;

        return -1;

     label07:
        return 0;

     label08:
        r4 = new org.apache.harmony.awt.gl.Crossing$QuadCurve;

        $r0 = r4;

        specialinvoke r4.<org.apache.harmony.awt.gl.Crossing$QuadCurve: void <init>(double,double,double,double,double,double)>($d4, $d5, $d6, $d7, $d0, $d8);

        $d7 = $d1 - $d4;

        $d6 = $d9 - $d5;

        $d8 = $d2 - $d4;

        $d5 = $d3 - $d5;

        $r1 = newarray (double)[3];

        $r2 = newarray (double)[3];

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int solvePoint(double[],double)>($r1, $d7);

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int solvePoint(double[],double)>($r2, $d8);

        if $i1 != 0 goto label09;

        if $i2 != 0 goto label09;

        return 0;

     label09:
        $d7 = $d7 - 1.0E-5;

        $d8 = $d8 + 1.0E-5;

        $r3 = newarray (double)[28];

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, 0, $r1, $i1, $d7, $d8, 0, 0);

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, $i3, $r2, $i2, $d7, $d8, 0, 1);

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int solveExtrem(double[])>($r2);

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int addBound(double[],int,double[],int,double,double,boolean,int)>($r3, $i2, $r2, $i3, $d7, $d8, 1, 2);

        $i2 = $i3;

        $b0 = $d1 cmpg $d4;

        if $b0 >= 0 goto label10;

        $b0 = $d4 cmpg $d2;

        if $b0 >= 0 goto label10;

        $i2 = $i3 + 1;

        $d4 = (double) 0L;

        $r3[$i3] = $d4;

        $i3 = $i2 + 1;

        $d4 = (double) 0L;

        $r3[$i2] = $d4;

        $i4 = $i3 + 1;

        $d4 = (double) 0L;

        $r3[$i3] = $d4;

        $i2 = $i4 + 1;

        $d4 = (double) 4616189618054758400L;

        $r3[$i4] = $d4;

     label10:
        $i3 = $i2;

        $b0 = $d1 cmpg $d0;

        if $b0 >= 0 goto label11;

        $b0 = $d0 cmpg $d2;

        if $b0 >= 0 goto label11;

        $i3 = $i2 + 1;

        $d4 = (double) 4607182418800017408L;

        $r3[$i2] = $d4;

        $i2 = $i3 + 1;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: double ax>;

        $r3[$i3] = $d4;

        $i4 = $i2 + 1;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: double ay>;

        $r3[$i2] = $d4;

        $i3 = $i4 + 1;

        $d4 = (double) 4617315517961601024L;

        $r3[$i4] = $d4;

     label11:
        $i2 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int crossBound(double[],int,double,double)>($r3, $i3, $d6, $d5);

        if $i2 != 254 goto label12;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.Crossing$QuadCurve: int cross(double[],int,double,double)>($r1, $i1, $d6, $d5);

        return $i1;

     label12:
        return $i2;
    }

    public static int intersectShape(java.awt.Shape, double, double, double, double)
    {
        double $d0, $d1, $d2, $d3;
        java.awt.Shape $r0;
        java.awt.geom.Rectangle2D $r1;
        boolean $z0;
        java.awt.geom.PathIterator $r2;
        int $i0;

        $r0 := @parameter0: java.awt.Shape;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $d3 := @parameter4: double;

        $r1 = interfaceinvoke $r0.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $z0 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: boolean intersects(double,double,double,double)>($d0, $d1, $d2, $d3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r0.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        $i0 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int intersectPath(java.awt.geom.PathIterator,double,double,double,double)>($r2, $d0, $d1, $d2, $d3);

        return $i0;
    }

    public static boolean isInsideEvenOdd(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInsideNonZero(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isZero(double)
    {
        double $d0;
        byte $b0;

        $d0 := @parameter0: double;

        $b0 = -1.0E-5 cmpg $d0;

        if $b0 >= 0 goto label1;

        $b0 = $d0 cmpg 1.0E-5;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int solveCubic(double[], double[])
    {
        double[] $r0, $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        byte $b0;
        int $i1, $i2;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: double[];

        $d0 = $r1[3];

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int solveQuad(double[],double[])>($r1, $r0);

        return $i1;

     label1:
        $d1 = $r1[2];

        $d1 = $d1 / $d0;

        $d2 = $r1[1];

        $d2 = $d2 / $d0;

        $d3 = $r1[0];

        $d3 = $d3 / $d0;

        $d0 = $d1 * $d1;

        $d4 = 3.0 * $d2;

        $d0 = $d0 - $d4;

        $d0 = $d0 / 9.0;

        $d4 = 2.0 * $d1;

        $d4 = $d4 * $d1;

        $d4 = $d4 * $d1;

        $d5 = 9.0 * $d1;

        $d2 = $d2 * $d5;

        $d2 = $d4 - $d2;

        $d3 = $d3 * 27.0;

        $d2 = $d2 + $d3;

        $d4 = $d2 / 54.0;

        $d2 = $d0 * $d0;

        $d2 = $d2 * $d0;

        $d3 = $d4 * $d4;

        $d1 = neg $d1;

        $d1 = $d1 / 3.0;

        $b0 = $d3 cmpg $d2;

        if $b0 >= 0 goto label3;

        $d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        $d2 = $d4 / $d2;

        $d2 = staticinvoke <java.lang.Math: double acos(double)>($d2);

        $d2 = $d2 / 3.0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d0 = -2.0 * $d0;

        $i2 = 0 + 1;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d3 = $d3 * $d0;

        $d3 = $d3 + $d1;

        $r0[0] = $d3;

        $i1 = $i2 + 1;

        $d3 = $d2 + 2.0943951023931953;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d3 = $d3 * $d0;

        $d3 = $d3 + $d1;

        $r0[$i2] = $d3;

        $d2 = $d2 - 2.0943951023931953;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d0 = $d0 * $d2;

        $d1 = $d0 + $d1;

        $r0[$i1] = $d1;

        $i1 = $i1 + 1;

     label2:
        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int fixRoots(double[],int)>($r0, $i1);

        return $i1;

     label3:
        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $d6 = $d3 - $d2;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        $d5 = $d5 + $d6;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 0.3333333333333333);

        $d5 = $d6;

        $b0 = $d4 cmpl 0.0;

        if $b0 <= 0 goto label4;

        $d5 = neg $d6;

     label4:
        $b0 = -1.0E-10 cmpg $d5;

        if $b0 >= 0 goto label5;

        $b0 = $d5 cmpg 1.0E-10;

        if $b0 >= 0 goto label5;

        $r0[0] = $d1;

        $i1 = 0 + 1;

        goto label2;

     label5:
        $d0 = $d0 / $d5;

        $i2 = 0 + 1;

        $d4 = $d5 + $d0;

        $d4 = $d4 + $d1;

        $r0[0] = $d4;

        $d2 = $d3 - $d2;

        $b0 = -1.0E-10 cmpg $d2;

        if $b0 >= 0 goto label6;

        $b0 = $d2 cmpg 1.0E-10;

        if $b0 >= 0 goto label6;

        $i1 = $i2 + 1;

        $d0 = $d5 + $d0;

        $d0 = neg $d0;

        $d0 = $d0 / 2.0;

        $d1 = $d0 + $d1;

        $r0[$i2] = $d1;

        goto label2;

     label6:
        $i1 = $i2;

        goto label2;
    }

    public static int solveQuad(double[], double[])
    {
        double $d0, $d1, $d2, $d3, $d4;
        double[] $r0, $r1;
        byte $b0;
        int $i1, $i2;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: double[];

        $d0 = $r0[2];

        $d1 = $r0[1];

        $d2 = $r0[0];

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label1;

        return -1;

     label1:
        $d0 = neg $d2;

        $d0 = $d0 / $d1;

        $r1[0] = $d0;

        $i1 = 0 + 1;

     label2:
        $i1 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int fixRoots(double[],int)>($r1, $i1);

        return $i1;

     label3:
        $d3 = $d1 * $d1;

        $d4 = 4.0 * $d0;

        $d2 = $d2 * $d4;

        $d3 = $d3 - $d2;

        $b0 = $d3 cmpg 0.0;

        if $b0 >= 0 goto label4;

        return 0;

     label4:
        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        $i2 = 0 + 1;

        $d2 = neg $d1;

        $d2 = $d2 + $d3;

        $d4 = 2.0 * $d0;

        $d2 = $d2 / $d4;

        $r1[0] = $d2;

        $b0 = $d3 cmpl 0.0;

        if $b0 == 0 goto label5;

        $i1 = $i2 + 1;

        $d1 = neg $d1;

        $d1 = $d1 - $d3;

        $d0 = $d0 * 2.0;

        $d0 = $d1 / $d0;

        $r1[$i2] = $d0;

        goto label2;

     label5:
        $i1 = $i2;

        goto label2;
    }

    static void sortBound(double[], int)
    {
        double[] $r0;
        int $i0, $i1, $i2, $i3, $i5;
        double $d0, $d1;
        byte $b4;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 = 0;

     label1:
        $i2 = $i0 - 4;

        if $i1 >= $i2 goto label6;

        $i2 = $i1;

        $i3 = $i1 + 4;

     label2:
        if $i3 >= $i0 goto label4;

        $d1 = $r0[$i2];

        $d0 = $r0[$i3];

        $b4 = $d1 cmpl $d0;

        if $b4 <= 0 goto label3;

        $i2 = $i3;

     label3:
        $i3 = $i3 + 4;

        goto label2;

     label4:
        if $i2 == $i1 goto label5;

        $d0 = $r0[$i1];

        $d1 = $r0[$i2];

        $r0[$i1] = $d1;

        $r0[$i2] = $d0;

        $i3 = $i1 + 1;

        $d0 = $r0[$i3];

        $i3 = $i1 + 1;

        $i5 = $i2 + 1;

        $d1 = $r0[$i5];

        $r0[$i3] = $d1;

        $i3 = $i2 + 1;

        $r0[$i3] = $d0;

        $i3 = $i1 + 2;

        $d0 = $r0[$i3];

        $i3 = $i1 + 2;

        $i5 = $i2 + 2;

        $d1 = $r0[$i5];

        $r0[$i3] = $d1;

        $i3 = $i2 + 2;

        $r0[$i3] = $d0;

        $i3 = $i1 + 3;

        $d0 = $r0[$i3];

        $i3 = $i1 + 3;

        $i5 = $i2 + 3;

        $d1 = $r0[$i5];

        $r0[$i3] = $d1;

        $i2 = $i2 + 3;

        $r0[$i2] = $d0;

     label5:
        $i1 = $i1 + 4;

        goto label1;

     label6:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.awt.gl.Crossing: int UNKNOWN> = 254;

        <org.apache.harmony.awt.gl.Crossing: double ROOT_DELTA> = 1.0E-10;

        <org.apache.harmony.awt.gl.Crossing: double DELTA> = 1.0E-5;

        <org.apache.harmony.awt.gl.Crossing: int CROSSING> = 255;

        return;
    }
}
