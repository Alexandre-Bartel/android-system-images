class android.view.IWindowManager$Stub$Proxy extends java.lang.Object implements android.view.IWindowManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public void addAppToken(int, android.view.IApplicationToken, int, int, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0, $i1, $i2;
        android.view.IApplicationToken $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        byte $b3;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.IApplicationToken;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        if $r1 == null goto label7;

        $r4 = interfaceinvoke $r1.<android.view.IApplicationToken: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i2);

     label3:
        if $z0 == 0 goto label8;

     label4:
        $b3 = 1;

     label5:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b3);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r4 = null;

        goto label2;

     label8:
        $b3 = 0;

        goto label5;

     label9:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label9;
        catch java.lang.Throwable from label4 to label6 with label9;
    }

    public void addWindowToken(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        int $i0;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.IBinder asBinder()
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void disableKeyguard(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        android.os.Parcel $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void executeAppTransition() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void exitKeyguardSecurely(android.view.IOnKeyguardExitResult) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.IOnKeyguardExitResult $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.IOnKeyguardExitResult;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<android.view.IOnKeyguardExitResult: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public float getAnimationScale(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        float $f0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $f0 = virtualinvoke $r2.<android.os.Parcel: float readFloat()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $f0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public float[] getAnimationScales() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        float[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r2.<android.os.Parcel: float[] createFloatArray()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getAppOrientation(android.view.IApplicationToken) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.IApplicationToken $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.IApplicationToken;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<android.view.IApplicationToken: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $i0;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.view.IWindowManager$Stub$Proxy $r0;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        return "android.view.IWindowManager";
    }

    public int getKeycodeState(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getKeycodeStateForDevice(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getPendingAppTransition() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getRotation() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getScancodeState(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getScancodeStateForDevice(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getSwitchState(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getSwitchStateForDevice(int, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hasKeys(int[], boolean[]) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int[] $r1;
        boolean[] $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: boolean[];

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r3.<android.os.Parcel: void writeIntArray(int[])>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeBooleanArray(boolean[])>($r2);

        $r5 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

     label2:
        if $i0 == 0 goto label6;

     label3:
        $z0 = 1;

     label4:
        virtualinvoke $r4.<android.os.Parcel: void readBooleanArray(boolean[])>($r2);

     label5:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $z0;

     label6:
        $z0 = 0;

        goto label4;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public boolean inKeyguardRestrictedInputMode() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        if $i0 == 0 goto label4;

        $z0 = 1;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean injectKeyEvent(android.view.KeyEvent, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.KeyEvent $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        android.os.IBinder $r4;
        int $i1;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label07;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label02:
        if $z0 == 0 goto label10;

     label03:
        $b0 = 1;

     label04:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label05:
        if $i1 == 0 goto label11;

        $z0 = 1;

     label06:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label07:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label02;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

     label10:
        $b0 = 0;

        goto label04;

     label11:
        $z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public boolean injectPointerEvent(android.view.MotionEvent, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        android.os.IBinder $r4;
        int $i1;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label07;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label02:
        if $z0 == 0 goto label10;

     label03:
        $b0 = 1;

     label04:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label05:
        if $i1 == 0 goto label11;

        $z0 = 1;

     label06:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label07:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label02;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

     label10:
        $b0 = 0;

        goto label04;

     label11:
        $z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public boolean injectTrackballEvent(android.view.MotionEvent, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        android.os.IBinder $r4;
        int $i1;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label07;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label02:
        if $z0 == 0 goto label10;

     label03:
        $b0 = 1;

     label04:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label05:
        if $i1 == 0 goto label11;

        $z0 = 1;

     label06:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label07:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label02;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

     label10:
        $b0 = 0;

        goto label04;

     label11:
        $z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label5;

        $r4 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label3:
        if $i0 == 0 goto label6;

        $z0 = 1;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label5:
        $r4 = null;

        goto label2;

     label6:
        $z0 = 0;

        goto label4;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label7;
    }

    public boolean isViewServerRunning() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        if $i0 == 0 goto label4;

        $z0 = 1;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void moveAppToken(int, android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void moveAppTokensToBottom(java.util.List) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        java.util.List $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeBinderList(java.util.List)>($r1);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void moveAppTokensToTop(java.util.List) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        java.util.List $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeBinderList(java.util.List)>($r1);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        com.android.internal.view.IInputContext $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        android.view.IWindowSession $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 := @parameter1: com.android.internal.view.IInputContext;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label5;

        $r5 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        if $r2 == null goto label6;

        $r5 = interfaceinvoke $r2.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        $r5 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke $r4.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <android.view.IWindowSession$Stub: android.view.IWindowSession asInterface(android.os.IBinder)>($r5);

     label4:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $r6;

     label5:
        $r5 = null;

        goto label2;

     label6:
        $r5 = null;

        goto label3;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label7;
    }

    public void pauseKeyDispatching(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void prepareAppTransition(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void reenableKeyguard(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeAppToken(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeWindowToken(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void resumeKeyDispatching(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAnimationScale(int, float) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        float $f0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAnimationScales(float[]) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        float[] $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: float[];

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeFloatArray(float[])>($r1);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAppGroupId(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        int $i0;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAppOrientation(android.view.IApplicationToken, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.IApplicationToken $r1;
        int $i0;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.IApplicationToken;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<android.view.IApplicationToken: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void setAppStartingWindow(android.os.IBinder, java.lang.String, int, java.lang.CharSequence, int, int, android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1, $r4;
        java.lang.String $r2;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r3;
        boolean $z0;
        android.os.Parcel $r5, $r6;
        byte $b3;
        java.lang.Throwable $r7;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.CharSequence;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $r4 := @parameter6: android.os.IBinder;

        $z0 := @parameter7: boolean;

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i0);

        if $r3 == null goto label07;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r3, $r5, 0);

     label02:
        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke $r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

     label03:
        if $z0 == 0 goto label10;

     label04:
        $b3 = 1;

     label05:
        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($b3);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, $r5, $r6, 0);

        virtualinvoke $r6.<android.os.Parcel: void readException()>();

     label06:
        virtualinvoke $r6.<android.os.Parcel: void recycle()>();

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label02;

     label09:
        $r7 := @caughtexception;

        virtualinvoke $r6.<android.os.Parcel: void recycle()>();

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        throw $r7;

     label10:
        $b3 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void setAppVisibility(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void setAppWillBeHidden(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setEventDispatching(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b0;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void setFocusedApp(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void setInTouchMode(boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b0;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void setRotation(int, boolean, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0, $i1;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 := @parameter2: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b2 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b2);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b2 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void startAppFreezingScreen(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        int $i0;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean startViewServer(int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        if $i0 == 0 goto label4;

        $z0 = 1;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void stopAppFreezingScreen(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r1 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public boolean stopViewServer() throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        $r3 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label2:
        if $i0 == 0 goto label4;

        $z0 = 1;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration, android.os.IBinder) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.content.res.Configuration $r1;
        android.os.IBinder $r2;
        android.os.Parcel $r3, $r4;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 := @parameter1: android.os.IBinder;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label4;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        $r2 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label7;

        $r5 = <android.content.res.Configuration: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r4);

        $r1 = (android.content.res.Configuration) $r6;

     label3:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $r1;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r7;

     label7:
        $r1 = null;

        goto label3;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int watchRotation(android.view.IRotationWatcher) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub$Proxy $r0;
        android.view.IRotationWatcher $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.IWindowManager$Stub$Proxy;

        $r1 := @parameter0: android.view.IRotationWatcher;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.IWindowManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<android.view.IRotationWatcher: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.view.IWindowManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $i0;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }
}
