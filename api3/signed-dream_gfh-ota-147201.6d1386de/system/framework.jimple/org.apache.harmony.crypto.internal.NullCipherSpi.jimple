public class org.apache.harmony.crypto.internal.NullCipherSpi extends javax.crypto.CipherSpi
{

    public void <init>()
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        specialinvoke $r0.<javax.crypto.CipherSpi: void <init>()>();

        return;
    }

    public int engineDoFinal(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        java.nio.ByteBuffer $r1, $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $r2 := @parameter1: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<org.apache.harmony.crypto.internal.NullCipherSpi: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)>($r1, $r2);

        return $i0;
    }

    public int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $i0 = virtualinvoke $r0.<org.apache.harmony.crypto.internal.NullCipherSpi: int engineUpdate(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r2, $i2);

        return $i0;
    }

    public byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineUpdate(byte[],int,int)>($r1, $i0, $i1);

        return $r1;
    }

    public int engineGetBlockSize()
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        return 1;
    }

    public byte[] engineGetIV()
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 = newarray (byte)[8];

        return $r1;
    }

    public int engineGetKeySize(java.security.Key) throws java.security.InvalidKeyException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        java.security.Key $r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: java.security.Key;

        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = staticinvoke <org.apache.harmony.crypto.internal.nls.Messages: java.lang.String getString(java.lang.String)>("crypto.46");

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    public int engineGetOutputSize(int)
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $i0 := @parameter0: int;

        return $i0;
    }

    public java.security.AlgorithmParameters engineGetParameters()
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        return null;
    }

    public void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        int $i0;
        java.security.Key $r1;
        java.security.AlgorithmParameters $r2;
        java.security.SecureRandom $r3;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.AlgorithmParameters;

        $r3 := @parameter3: java.security.SecureRandom;

        return;
    }

    public void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        int $i0;
        java.security.Key $r1;
        java.security.SecureRandom $r2;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.SecureRandom;

        return;
    }

    public void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        int $i0;
        java.security.Key $r1;
        java.security.spec.AlgorithmParameterSpec $r2;
        java.security.SecureRandom $r3;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        $r3 := @parameter3: java.security.SecureRandom;

        return;
    }

    public void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public java.security.Key engineUnwrap(byte[], java.lang.String, int) throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        byte[] $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = new java.lang.UnsupportedOperationException;

        $r2 = staticinvoke <org.apache.harmony.crypto.internal.nls.Messages: java.lang.String getString(java.lang.String)>("crypto.45");

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public int engineUpdate(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.crypto.ShortBufferException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        java.nio.ByteBuffer $r1, $r2;
        java.nio.BufferOverflowException $r3;
        int $i0, $i1;
        java.lang.NullPointerException $r4;
        javax.crypto.ShortBufferException $r5;
        java.lang.String $r6;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $r2 := @parameter1: java.nio.ByteBuffer;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label2:
        $i0 = virtualinvoke $r1.<java.nio.Buffer: int limit()>();

        $i1 = virtualinvoke $r1.<java.nio.Buffer: int position()>();

        $i0 = $i0 - $i1;

     label3:
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r1);

     label4:
        return $i0;

     label5:
        $r3 := @caughtexception;

        $r5 = new javax.crypto.ShortBufferException;

        $r6 = staticinvoke <org.apache.harmony.crypto.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("crypto.0F", $r3);

        specialinvoke $r5.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.nio.BufferOverflowException from label3 to label4 with label5;
    }

    public int engineUpdate(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i2 := @parameter4: int;

        if $r1 != null goto label1;

        return 0;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i2, $i1);

        return $i1;
    }

    public byte[] engineUpdate(byte[], int, int)
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i1);

        return $r2;
    }

    public byte[] engineWrap(java.security.Key) throws javax.crypto.IllegalBlockSizeException, java.security.InvalidKeyException
    {
        org.apache.harmony.crypto.internal.NullCipherSpi $r0;
        java.security.Key $r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.crypto.internal.NullCipherSpi;

        $r1 := @parameter0: java.security.Key;

        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = staticinvoke <org.apache.harmony.crypto.internal.nls.Messages: java.lang.String getString(java.lang.String)>("crypto.44");

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }
}
