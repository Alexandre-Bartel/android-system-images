final class org.apache.commons.logging.impl.WeakHashtable$Entry extends java.lang.Object implements java.util.Map$Entry
{
    private final java.lang.Object key;
    private final java.lang.Object value;

    private void <init>(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object $r1, $r2;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object key> = $r1;

        $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object value> = $r2;

        return;
    }

    void <init>(java.lang.Object, java.lang.Object, org.apache.commons.logging.impl.WeakHashtable$1)
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object $r1, $r2;
        org.apache.commons.logging.impl.WeakHashtable$1 $r3;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.apache.commons.logging.impl.WeakHashtable$1;

        specialinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object $r1, $r3;
        boolean $z0;
        java.util.Map$Entry $r2;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label6;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label7;

        $r2 = (java.util.Map$Entry) $r1;

        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getKey()>();

        if $r1 != null goto label3;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r1 != null goto label4;

     label1:
        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getValue()>();

        if $r1 != null goto label5;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r1 != null goto label4;

     label2:
        return 1;

     label3:
        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getKey()>();

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

     label4:
        return 0;

     label5:
        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getValue()>();

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        goto label2;

     label6:
        return 0;

     label7:
        return 0;
    }

    public java.lang.Object getKey()
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        r1 = $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object key>;

        return r1;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        r1 = $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object value>;

        return r1;
    }

    public int hashCode()
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object $r1;
        int $i0, $i1;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getKey()>();

        if $r1 != null goto label3;

        $i0 = 0;

     label1:
        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getValue()>();

        if $r1 != null goto label4;

        $i1 = 0;

     label2:
        $i0 = $i0 ^ $i1;

        return $i0;

     label3:
        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getKey()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label1;

     label4:
        $r1 = virtualinvoke $r0.<org.apache.commons.logging.impl.WeakHashtable$Entry: java.lang.Object getValue()>();

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label2;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.commons.logging.impl.WeakHashtable$Entry $r0;
        java.lang.Object $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Entry;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Entry.setValue is not supported.");

        throw $r2;
    }
}
