class android.content.AbstractSyncableContentProvider$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    final android.content.AbstractSyncableContentProvider this$0;

    void <init>(android.content.AbstractSyncableContentProvider, android.content.Context, java.lang.String)
    {
        android.content.AbstractSyncableContentProvider$DatabaseHelper $r0;
        android.content.AbstractSyncableContentProvider $r1;
        android.content.Context $r2;
        java.lang.String $r3;
        int $i0;

        $r0 := @this: android.content.AbstractSyncableContentProvider$DatabaseHelper;

        $r1 := @parameter0: android.content.AbstractSyncableContentProvider;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.lang.String;

        $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0> = $r1;

        $i0 = staticinvoke <android.content.AbstractSyncableContentProvider: int access$000(android.content.AbstractSyncableContentProvider)>($r1);

        specialinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, $r3, null, $i0);

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.content.AbstractSyncableContentProvider$DatabaseHelper $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.SyncStateContentProviderHelper $r2;
        android.content.AbstractSyncableContentProvider $r3;

        $r0 := @this: android.content.AbstractSyncableContentProvider$DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        virtualinvoke $r3.<android.content.AbstractSyncableContentProvider: void bootstrapDatabase(android.database.sqlite.SQLiteDatabase)>($r1);

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        $r2 = staticinvoke <android.content.AbstractSyncableContentProvider: android.content.SyncStateContentProviderHelper access$100(android.content.AbstractSyncableContentProvider)>($r3);

        virtualinvoke $r2.<android.content.SyncStateContentProviderHelper: void createDatabase(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }

    public void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        android.content.AbstractSyncableContentProvider$DatabaseHelper $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.SyncStateContentProviderHelper $r2;
        android.content.AbstractSyncableContentProvider $r3;

        $r0 := @this: android.content.AbstractSyncableContentProvider$DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        virtualinvoke $r3.<android.content.AbstractSyncableContentProvider: void onDatabaseOpened(android.database.sqlite.SQLiteDatabase)>($r1);

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        $r2 = staticinvoke <android.content.AbstractSyncableContentProvider: android.content.SyncStateContentProviderHelper access$100(android.content.AbstractSyncableContentProvider)>($r3);

        virtualinvoke $r2.<android.content.SyncStateContentProviderHelper: void onDatabaseOpened(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.content.AbstractSyncableContentProvider$DatabaseHelper $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        android.os.Bundle $r2;
        android.content.AbstractSyncableContentProvider $r3;
        boolean $z0;
        android.content.SyncStateContentProviderHelper $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        android.net.Uri $r7;

        $r0 := @this: android.content.AbstractSyncableContentProvider$DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        $z0 = virtualinvoke $r3.<android.content.AbstractSyncableContentProvider: boolean upgradeDatabase(android.database.sqlite.SQLiteDatabase,int,int)>($r1, $i0, $i1);

        if $z0 != 0 goto label1;

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        $r4 = staticinvoke <android.content.AbstractSyncableContentProvider: android.content.SyncStateContentProviderHelper access$100(android.content.AbstractSyncableContentProvider)>($r3);

        virtualinvoke $r4.<android.content.SyncStateContentProviderHelper: void discardSyncData(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, null);

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        $r5 = virtualinvoke $r3.<android.content.ContentProvider: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = $r0.<android.content.AbstractSyncableContentProvider$DatabaseHelper: android.content.AbstractSyncableContentProvider this$0>;

        $r7 = staticinvoke <android.content.AbstractSyncableContentProvider: android.net.Uri access$200(android.content.AbstractSyncableContentProvider)>($r3);

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r6.<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>($r7, $r2);

        return;

     label1:
        return;
    }
}
