public class android.graphics.Matrix extends java.lang.Object
{
    public static final int MPERSP_0;
    public static final int MPERSP_1;
    public static final int MPERSP_2;
    public static final int MSCALE_X;
    public static final int MSCALE_Y;
    public static final int MSKEW_X;
    public static final int MSKEW_Y;
    public static final int MTRANS_X;
    public static final int MTRANS_Y;
    int native_instance;

    public void <init>()
    {
        android.graphics.Matrix $r0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <android.graphics.Matrix: int native_create(int)>(0);

        $r0.<android.graphics.Matrix: int native_instance> = $i0;

        return;
    }

    public void <init>(android.graphics.Matrix)
    {
        android.graphics.Matrix $r0, $r1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.Matrix;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label2;

        $i0 = $r1.<android.graphics.Matrix: int native_instance>;

     label1:
        $i0 = staticinvoke <android.graphics.Matrix: int native_create(int)>($i0);

        $r0.<android.graphics.Matrix: int native_instance> = $i0;

        return;

     label2:
        $i0 = 0;

        goto label1;
    }

    private static void checkPointArrays(float[], int, float[], int, int)
    {
        float[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: float[];

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = $i2 << 1;

        $i4 = $i0 + $i3;

        $i3 = $i2 << 1;

        $i3 = $i1 + $i3;

        $i0 = $i2 | $i0;

        $i0 = $i0 | $i1;

        $i0 = $i0 | $i4;

        $i0 = $i0 | $i3;

        if $i0 < 0 goto label1;

        $i0 = lengthof $r0;

        if $i4 > $i0 goto label1;

        $i0 = lengthof $r1;

        if $i3 <= $i0 goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    private static native void finalizer(int);

    private static native int native_create(int);

    private static native boolean native_equals(int, int);

    private static native void native_getValues(int, float[]);

    private static native boolean native_invert(int, int);

    private static native boolean native_isIdentity(int);

    private static native void native_mapPoints(int, float[], int, float[], int, int, boolean);

    private static native float native_mapRadius(int, float);

    private static native boolean native_mapRect(int, android.graphics.RectF, android.graphics.RectF);

    private static native boolean native_postConcat(int, int);

    private static native boolean native_postRotate(int, float);

    private static native boolean native_postRotate(int, float, float, float);

    private static native boolean native_postScale(int, float, float);

    private static native boolean native_postScale(int, float, float, float, float);

    private static native boolean native_postSkew(int, float, float);

    private static native boolean native_postSkew(int, float, float, float, float);

    private static native boolean native_postTranslate(int, float, float);

    private static native boolean native_preConcat(int, int);

    private static native boolean native_preRotate(int, float);

    private static native boolean native_preRotate(int, float, float, float);

    private static native boolean native_preScale(int, float, float);

    private static native boolean native_preScale(int, float, float, float, float);

    private static native boolean native_preSkew(int, float, float);

    private static native boolean native_preSkew(int, float, float, float, float);

    private static native boolean native_preTranslate(int, float, float);

    private static native boolean native_rectStaysRect(int);

    private static native void native_reset(int);

    private static native void native_set(int, int);

    private static native boolean native_setConcat(int, int, int);

    private static native boolean native_setPolyToPoly(int, float[], int, float[], int, int);

    private static native boolean native_setRectToRect(int, android.graphics.RectF, android.graphics.RectF, int);

    private static native void native_setRotate(int, float);

    private static native void native_setRotate(int, float, float, float);

    private static native void native_setScale(int, float, float);

    private static native void native_setScale(int, float, float, float, float);

    private static native void native_setSinCos(int, float, float);

    private static native void native_setSinCos(int, float, float, float, float);

    private static native void native_setSkew(int, float, float);

    private static native void native_setSkew(int, float, float, float, float);

    private static native void native_setTranslate(int, float, float);

    private static native void native_setValues(int, float[]);

    public boolean equals(java.lang.Object)
    {
        android.graphics.Matrix $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r1;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $z0 = $r1 instanceof android.graphics.Matrix;

        if $z0 == 0 goto label1;

        $i1 = $r0.<android.graphics.Matrix: int native_instance>;

        $r0 = (android.graphics.Matrix) $r1;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_equals(int,int)>($i1, $i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Matrix $r0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void finalizer(int)>($i0);

        return;
    }

    public void getValues(float[])
    {
        android.graphics.Matrix $r0;
        float[] $r1;
        int $i0;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 = lengthof $r1;

        if $i0 >= 9 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_getValues(int,float[])>($i0, $r1);

        return;
    }

    public boolean invert(android.graphics.Matrix)
    {
        android.graphics.Matrix $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.Matrix;

        $i1 = $r0.<android.graphics.Matrix: int native_instance>;

        $i0 = $r1.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_invert(int,int)>($i1, $i0);

        return $z0;
    }

    public boolean isIdentity()
    {
        android.graphics.Matrix $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_isIdentity(int)>($i0);

        return $z0;
    }

    public void mapPoints(float[])
    {
        android.graphics.Matrix $r0;
        float[] $r1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 = lengthof $r1;

        $i0 = $i0 >> 1;

        virtualinvoke $r0.<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void mapPoints(float[], int, float[], int, int)
    {
        android.graphics.Matrix $r0;
        float[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: float[];

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        staticinvoke <android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>($r2, $i1, $r1, $i0, $i2);

        $i3 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_mapPoints(int,float[],int,float[],int,int,boolean)>($i3, $r1, $i0, $r2, $i1, $i2, 1);

        return;
    }

    public void mapPoints(float[], float[])
    {
        android.graphics.Matrix $r0;
        float[] $r1, $r2;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: float[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        $i0 = $i0 >> 1;

        virtualinvoke $r0.<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public float mapRadius(float)
    {
        android.graphics.Matrix $r0;
        float $f0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $f0 = staticinvoke <android.graphics.Matrix: float native_mapRadius(int,float)>($i0, $f0);

        return $f0;
    }

    public boolean mapRect(android.graphics.RectF)
    {
        android.graphics.Matrix $r0;
        android.graphics.RectF $r1;
        boolean $z0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.RectF;

        $z0 = virtualinvoke $r0.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>($r1, $r1);

        return $z0;
    }

    public boolean mapRect(android.graphics.RectF, android.graphics.RectF)
    {
        android.graphics.Matrix $r0;
        android.graphics.RectF $r1, $r2;
        boolean $z0;
        java.lang.NullPointerException $r3;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.RectF;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_mapRect(int,android.graphics.RectF,android.graphics.RectF)>($i0, $r1, $r2);

        return $z0;
    }

    public void mapVectors(float[])
    {
        android.graphics.Matrix $r0;
        float[] $r1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 = lengthof $r1;

        $i0 = $i0 >> 1;

        virtualinvoke $r0.<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void mapVectors(float[], int, float[], int, int)
    {
        android.graphics.Matrix $r0;
        float[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: float[];

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        staticinvoke <android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>($r2, $i1, $r1, $i0, $i2);

        $i3 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_mapPoints(int,float[],int,float[],int,int,boolean)>($i3, $r1, $i0, $r2, $i1, $i2, 0);

        return;
    }

    public void mapVectors(float[], float[])
    {
        android.graphics.Matrix $r0;
        float[] $r1, $r2;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: float[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        $i0 = $i0 >> 1;

        virtualinvoke $r0.<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    final int ni()
    {
        android.graphics.Matrix $r0;
        int i0;

        $r0 := @this: android.graphics.Matrix;

        i0 = $r0.<android.graphics.Matrix: int native_instance>;

        return i0;
    }

    public boolean postConcat(android.graphics.Matrix)
    {
        android.graphics.Matrix $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.Matrix;

        $i1 = $r0.<android.graphics.Matrix: int native_instance>;

        $i0 = $r1.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postConcat(int,int)>($i1, $i0);

        return $z0;
    }

    public boolean postRotate(float)
    {
        android.graphics.Matrix $r0;
        float $f0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postRotate(int,float)>($i0, $f0);

        return $z0;
    }

    public boolean postRotate(float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postRotate(int,float,float,float)>($i0, $f0, $f1, $f2);

        return $z0;
    }

    public boolean postScale(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postScale(int,float,float)>($i0, $f0, $f1);

        return $z0;
    }

    public boolean postScale(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postScale(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return $z0;
    }

    public boolean postSkew(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postSkew(int,float,float)>($i0, $f0, $f1);

        return $z0;
    }

    public boolean postSkew(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postSkew(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return $z0;
    }

    public boolean postTranslate(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_postTranslate(int,float,float)>($i0, $f0, $f1);

        return $z0;
    }

    public boolean preConcat(android.graphics.Matrix)
    {
        android.graphics.Matrix $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.Matrix;

        $i1 = $r0.<android.graphics.Matrix: int native_instance>;

        $i0 = $r1.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preConcat(int,int)>($i1, $i0);

        return $z0;
    }

    public boolean preRotate(float)
    {
        android.graphics.Matrix $r0;
        float $f0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preRotate(int,float)>($i0, $f0);

        return $z0;
    }

    public boolean preRotate(float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preRotate(int,float,float,float)>($i0, $f0, $f1, $f2);

        return $z0;
    }

    public boolean preScale(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preScale(int,float,float)>($i0, $f0, $f1);

        return $z0;
    }

    public boolean preScale(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preScale(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return $z0;
    }

    public boolean preSkew(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preSkew(int,float,float)>($i0, $f0, $f1);

        return $z0;
    }

    public boolean preSkew(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preSkew(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return $z0;
    }

    public boolean preTranslate(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_preTranslate(int,float,float)>($i0, $f0, $f1);

        return $z0;
    }

    public boolean rectStaysRect()
    {
        android.graphics.Matrix $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_rectStaysRect(int)>($i0);

        return $z0;
    }

    public void reset()
    {
        android.graphics.Matrix $r0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_reset(int)>($i0);

        return;
    }

    public void set(android.graphics.Matrix)
    {
        android.graphics.Matrix $r0, $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.Matrix;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.graphics.Matrix: void reset()>();

        return;

     label1:
        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        $i1 = $r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_set(int,int)>($i0, $i1);

        return;
    }

    public boolean setConcat(android.graphics.Matrix, android.graphics.Matrix)
    {
        android.graphics.Matrix $r0, $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.Matrix;

        $r2 := @parameter1: android.graphics.Matrix;

        $i2 = $r0.<android.graphics.Matrix: int native_instance>;

        $i0 = $r1.<android.graphics.Matrix: int native_instance>;

        $i1 = $r2.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_setConcat(int,int,int)>($i2, $i0, $i1);

        return $z0;
    }

    public boolean setPolyToPoly(float[], int, float[], int, int)
    {
        android.graphics.Matrix $r0;
        float[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: float[];

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        if $i2 <= 4 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        staticinvoke <android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>($r1, $i0, $r2, $i1, $i2);

        $i3 = $r0.<android.graphics.Matrix: int native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_setPolyToPoly(int,float[],int,float[],int,int)>($i3, $r1, $i0, $r2, $i1, $i2);

        return $z0;
    }

    public boolean setRectToRect(android.graphics.RectF, android.graphics.RectF, android.graphics.Matrix$ScaleToFit)
    {
        android.graphics.Matrix $r0;
        android.graphics.RectF $r1, $r2;
        android.graphics.Matrix$ScaleToFit $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.NullPointerException $r4;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.RectF;

        $r3 := @parameter2: android.graphics.Matrix$ScaleToFit;

        if $r2 == null goto label1;

        if $r1 != null goto label2;

     label1:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label2:
        $i1 = $r0.<android.graphics.Matrix: int native_instance>;

        $i0 = $r3.<android.graphics.Matrix$ScaleToFit: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_setRectToRect(int,android.graphics.RectF,android.graphics.RectF,int)>($i1, $r1, $r2, $i0);

        return $z0;
    }

    public void setRotate(float)
    {
        android.graphics.Matrix $r0;
        float $f0;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setRotate(int,float)>($i0, $f0);

        return;
    }

    public void setRotate(float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setRotate(int,float,float,float)>($i0, $f0, $f1, $f2);

        return;
    }

    public void setScale(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setScale(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void setScale(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setScale(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return;
    }

    public void setSinCos(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSinCos(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void setSinCos(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSinCos(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return;
    }

    public void setSkew(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSkew(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void setSkew(float, float, float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSkew(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return;
    }

    public void setTranslate(float, float)
    {
        android.graphics.Matrix $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Matrix;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setTranslate(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void setValues(float[])
    {
        android.graphics.Matrix $r0;
        float[] $r1;
        int $i0;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        $r0 := @this: android.graphics.Matrix;

        $r1 := @parameter0: float[];

        $i0 = lengthof $r1;

        if $i0 >= 9 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $i0 = $r0.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setValues(int,float[])>($i0, $r1);

        return;
    }

    public java.lang.String toShortString()
    {
        android.graphics.Matrix $r0;
        float[] $r1;
        java.lang.StringBuilder $r2;
        float $f0;
        java.lang.String $r3;

        $r0 := @this: android.graphics.Matrix;

        $r1 = newarray (float)[9];

        virtualinvoke $r0.<android.graphics.Matrix: void getValues(float[])>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $f0 = $r1[0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = $r1[1];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = $r1[2];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $f0 = $r1[3];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = $r1[4];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = $r1[5];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $f0 = $r1[6];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = $r1[7];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = $r1[8];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        android.graphics.Matrix $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: android.graphics.Matrix;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Matrix{");

        $r2 = virtualinvoke $r0.<android.graphics.Matrix: java.lang.String toShortString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <android.graphics.Matrix: int MTRANS_Y> = 5;

        <android.graphics.Matrix: int MTRANS_X> = 2;

        <android.graphics.Matrix: int MSKEW_Y> = 3;

        <android.graphics.Matrix: int MSKEW_X> = 1;

        <android.graphics.Matrix: int MSCALE_Y> = 4;

        <android.graphics.Matrix: int MSCALE_X> = 0;

        <android.graphics.Matrix: int MPERSP_2> = 8;

        <android.graphics.Matrix: int MPERSP_1> = 7;

        <android.graphics.Matrix: int MPERSP_0> = 6;

        return;
    }
}
