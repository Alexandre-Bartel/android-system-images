public final class com.android.commands.ime.Ime extends java.lang.Object
{
    private static final java.lang.String IMM_NOT_RUNNING_ERR;
    private java.lang.String[] mArgs;
    private java.lang.String mCurArgData;
    com.android.internal.view.IInputMethodManager mImm;
    private int mNextArg;

    public void <init>()
    {
        com.android.commands.ime.Ime $r0;

        $r0 := @this: com.android.commands.ime.Ime;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        com.android.commands.ime.Ime $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.ime.Ime;

        specialinvoke $r1.<com.android.commands.ime.Ime: void <init>()>();

        virtualinvoke $r1.<com.android.commands.ime.Ime: void run(java.lang.String[])>($r0);

        return;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.ime.Ime $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.commands.ime.Ime;

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r2 = $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r2 = $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r1 = $r2[$i0];

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.ime.Ime: int mNextArg> = $i0;

        return $r1;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.ime.Ime $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        java.lang.String[] $r2;
        boolean $z0;
        char $c2;

        $r0 := @this: com.android.commands.ime.Ime;

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r2 = $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r2 = $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r1 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.ime.Ime: int mNextArg> = $i0;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label5;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        if $c2 == 45 goto label5;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 2 goto label4;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(2);

        $r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData> = $r3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r1;

     label4:
        $r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData> = null;

        return $r1;

     label5:
        $r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData> = null;

        return $r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.ime.Ime $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.commands.ime.Ime;

        $r1 = $r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData>;

        return $r1;

     label1:
        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r2 = $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        return null;

     label2:
        $r2 = $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r1 = $r2[$i0];

        $i0 = $r0.<com.android.commands.ime.Ime: int mNextArg>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.ime.Ime: int mNextArg> = $i0;

        return $r1;
    }

    private void runList()
    {
        com.android.commands.ime.Ime $r0;
        android.util.PrintStreamPrinter $r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4;
        com.android.internal.view.IInputMethodManager $r5;
        java.util.List $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        android.view.inputmethod.InputMethodInfo $r8;
        android.os.RemoteException $r9, $r10;

        $r0 := @this: com.android.commands.ime.Ime;

        $z0 = 0;

        $z1 = 0;

     label01:
        $r2 = specialinvoke $r0.<com.android.commands.ime.Ime: java.lang.String nextOption()>();

        if $r2 == null goto label04;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z2 == 0 goto label02;

        $z0 = 1;

        goto label01;

     label02:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z1 == 0 goto label03;

        $z1 = 1;

        goto label01;

     label03:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label04:
        if $z0 != 0 goto label10;

        $r5 = $r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

     label05:
        $r6 = interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodList()>();

     label06:
        if $r6 == null goto label15;

        $r1 = new android.util.PrintStreamPrinter;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r1.<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>($r3);

        $i0 = 0;

     label07:
        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 >= $i1 goto label16;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        $r8 = (android.view.inputmethod.InputMethodInfo) $r7;

        if $z1 == 0 goto label14;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = virtualinvoke $r8.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label08:
        $i0 = $i0 + 1;

        goto label07;

     label09:
        $r9 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label10:
        $r5 = $r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

     label11:
        $r6 = interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: java.util.List getInputMethodList()>();

     label12:
        goto label06;

     label13:
        $r10 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label14:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r8.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

        virtualinvoke $r8.<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>($r1, "  ");

        goto label08;

     label15:
        return;

     label16:
        return;

        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label11 to label12 with label13;
    }

    private void runSet()
    {
        com.android.commands.ime.Ime $r0;
        java.lang.String $r1;
        java.io.PrintStream $r2;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.commands.ime.Ime;

        $r1 = specialinvoke $r0.<com.android.commands.ime.Ime: java.lang.String nextArg()>();

        if $r1 != null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Error: no input method ID specified");

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label1:
        $r3 = $r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

     label2:
        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>(null, $r1);

     label3:
        $r2 = <java.lang.System: java.io.PrintStream out>;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selected");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r1 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label7:
        $r6 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label6;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch android.os.RemoteException from label2 to label3 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    private void runSetEnabled(boolean)
    {
        com.android.commands.ime.Ime $r0;
        boolean $z0, $z1;
        java.lang.String $r1;
        java.io.PrintStream $r2;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.commands.ime.Ime;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke $r0.<com.android.commands.ime.Ime: java.lang.String nextArg()>();

        if $r1 != null goto label01;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Error: no input method ID specified");

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label01:
        $r3 = $r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

     label02:
        $z1 = interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: boolean setInputMethodEnabled(java.lang.String,boolean)>($r1, $z0);

     label03:
        if $z0 == 0 goto label11;

        $r2 = <java.lang.System: java.io.PrintStream out>;

     label04:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label05:
        if $z1 == 0 goto label10;

     label06:
        $r1 = "already enabled";

     label07:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label08:
        return;

     label09:
        $r5 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r1 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label10:
        $r1 = "now enabled";

        goto label07;

     label11:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label13:
        if $z1 == 0 goto label18;

     label14:
        $r1 = "now disabled";

     label15:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label16:
        return;

     label17:
        $r6 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label18:
        $r1 = "already disabled";

        goto label15;

        catch java.lang.IllegalArgumentException from label02 to label03 with label09;
        catch java.lang.IllegalArgumentException from label04 to label05 with label09;
        catch java.lang.IllegalArgumentException from label06 to label08 with label09;
        catch android.os.RemoteException from label02 to label03 with label17;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch android.os.RemoteException from label06 to label08 with label17;
        catch java.lang.IllegalArgumentException from label12 to label13 with label09;
        catch java.lang.IllegalArgumentException from label14 to label16 with label09;
        catch android.os.RemoteException from label12 to label13 with label17;
        catch android.os.RemoteException from label14 to label16 with label17;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: ime list [-a] [-s]");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("       ime enable ID");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("       ime disable ID");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("       ime set ID");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("The list command prints all enabled input methods.  Use");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("the -a option to see all input methods.  Use");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("the -s option to see only a single summary line of each.");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("The enable command allows the given input method ID to be used.");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("The disable command disallows the given input method ID from use.");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("The set command switches to the given input method ID.");

        return;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.ime.Ime $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r6;
        int $i0;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodManager $r4;
        java.io.PrintStream $r5;
        boolean $z0;
        java.lang.StringBuilder $r7;

        $r0 := @this: com.android.commands.ime.Ime;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        if $i0 >= 1 goto label1;

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("input_method");

        $r4 = staticinvoke <com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>($r3);

        $r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm> = $r4;

        $r4 = $r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

        if $r4 != null goto label2;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label2:
        $r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs> = $r1;

        $r2 = $r1[0];

        $r0.<com.android.commands.ime.Ime: int mNextArg> = 1;

        $r6 = "list";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        specialinvoke $r0.<com.android.commands.ime.Ime: void runList()>();

        return;

     label3:
        $r6 = "enable";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        specialinvoke $r0.<com.android.commands.ime.Ime: void runSetEnabled(boolean)>(1);

        return;

     label4:
        $r6 = "disable";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        specialinvoke $r0.<com.android.commands.ime.Ime: void runSetEnabled(boolean)>(0);

        return;

     label5:
        $r6 = "set";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        specialinvoke $r0.<com.android.commands.ime.Ime: void runSet()>();

        return;

     label6:
        if $r2 == null goto label7;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label7:
        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.commands.ime.Ime: java.lang.String IMM_NOT_RUNNING_ERR> = "Error: Could not access the Input Method Manager.  Is the system running?";

        return;
    }
}
