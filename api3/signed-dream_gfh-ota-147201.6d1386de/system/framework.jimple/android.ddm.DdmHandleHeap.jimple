public class android.ddm.DdmHandleHeap extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    public static final int CHUNK_HPGC;
    public static final int CHUNK_HPIF;
    public static final int CHUNK_HPSG;
    public static final int CHUNK_NHSG;
    public static final int CHUNK_REAE;
    public static final int CHUNK_REAL;
    public static final int CHUNK_REAQ;
    private static android.ddm.DdmHandleHeap mInstance;

    static void <clinit>()
    {
        int $i0;
        android.ddm.DdmHandleHeap $r0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPIF");

        <android.ddm.DdmHandleHeap: int CHUNK_HPIF> = $i0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPSG");

        <android.ddm.DdmHandleHeap: int CHUNK_HPSG> = $i0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("NHSG");

        <android.ddm.DdmHandleHeap: int CHUNK_NHSG> = $i0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPGC");

        <android.ddm.DdmHandleHeap: int CHUNK_HPGC> = $i0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("REAE");

        <android.ddm.DdmHandleHeap: int CHUNK_REAE> = $i0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("REAQ");

        <android.ddm.DdmHandleHeap: int CHUNK_REAQ> = $i0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("REAL");

        <android.ddm.DdmHandleHeap: int CHUNK_REAL> = $i0;

        $r0 = new android.ddm.DdmHandleHeap;

        specialinvoke $r0.<android.ddm.DdmHandleHeap: void <init>()>();

        <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleHeap $r0;

        $r0 := @this: android.ddm.DdmHandleHeap;

        specialinvoke $r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPGC(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ddm-heap", "Heap GC request");

        staticinvoke <java.lang.System: void gc()>();

        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPIF(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        java.nio.ByteBuffer $r2;
        byte $b0;
        boolean $z0;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $z0 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: boolean heapInfoNotify(int)>($b0);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, "Unsupported HPIF what");

        return $r1;

     label1:
        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk, boolean)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        boolean $z0;
        java.nio.ByteBuffer $r2;
        byte $b0, $b1;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $b1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $z0 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: boolean heapSegmentNotify(int,int,boolean)>($b0, $b1, $z0);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, "Unsupported HPSG what/when");

        return $r1;

     label1:
        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleREAE(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        java.nio.ByteBuffer $r2;
        byte $b0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        if $b0 == 0 goto label2;

        $z0 = 1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recent allocation enable request: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ddm-heap", $r4);

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: void enableRecentAllocations(boolean)>($z0);

        return null;

     label2:
        $z0 = 0;

        goto label1;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleREAL(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        int $i0, $i1;
        byte[] $r2;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ddm-heap", "Recent allocations request");

        $r2 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: byte[] getRecentAllocations()>();

        $r1 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_REAL>;

        $i0 = lengthof $r2;

        specialinvoke $r1.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i1, $r2, 0, $i0);

        return $r1;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleREAQ(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        byte[] $r2;
        int $i0, $i2;
        boolean $z0;
        byte $b1;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = newarray (byte)[1];

        $z0 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: boolean getRecentAllocationStatus()>();

        if $z0 == 0 goto label2;

        $b1 = 1;

     label1:
        $r2[0] = $b1;

        $r1 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i2 = <android.ddm.DdmHandleHeap: int CHUNK_REAQ>;

        $i0 = lengthof $r2;

        specialinvoke $r1.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i2, $r2, 0, $i0);

        return $r1;

     label2:
        $b1 = 0;

        goto label1;
    }

    public static void register()
    {
        int $i0;
        android.ddm.DdmHandleHeap $r0;

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_HPIF>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_HPSG>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_NHSG>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_HPGC>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_REAE>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_REAQ>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_REAL>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        return;
    }

    public void connected()
    {
        android.ddm.DdmHandleHeap $r0;

        $r0 := @this: android.ddm.DdmHandleHeap;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleHeap $r0;

        $r0 := @this: android.ddm.DdmHandleHeap;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        int $i0, $i1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: android.ddm.DdmHandleHeap;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $i0 = $r1.<org.apache.harmony.dalvik.ddmc.Chunk: int type>;

        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_HPIF>;

        if $i0 != $i1 goto label1;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPIF(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        return $r1;

     label1:
        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_HPSG>;

        if $i0 != $i1 goto label2;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk,boolean)>($r1, 0);

        return $r1;

     label2:
        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_NHSG>;

        if $i0 != $i1 goto label3;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk,boolean)>($r1, 1);

        return $r1;

     label3:
        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_HPGC>;

        if $i0 != $i1 goto label4;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPGC(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        return $r1;

     label4:
        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_REAE>;

        if $i0 != $i1 goto label5;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAE(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        return $r1;

     label5:
        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_REAQ>;

        if $i0 != $i1 goto label6;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAQ(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        return $r1;

     label6:
        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_REAL>;

        if $i0 != $i1 goto label7;

        $r1 = specialinvoke $r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAL(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        return $r1;

     label7:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown packet ");

        $r4 = staticinvoke <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String name(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }
}
