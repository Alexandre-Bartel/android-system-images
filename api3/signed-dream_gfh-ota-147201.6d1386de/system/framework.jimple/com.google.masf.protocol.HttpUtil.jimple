public class com.google.masf.protocol.HttpUtil extends java.lang.Object
{
    public static final java.lang.String CONTENT_TYPE;
    public static final int[] mimeTypeEncodings;
    public static final java.lang.String[] mimeTypeStrings;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        int[] $r1;

        <com.google.masf.protocol.HttpUtil: java.lang.String CONTENT_TYPE> = "Content-Type";

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "application/atom+xml";

        $r0[1] = "application/binary";

        $r0[2] = "image/jpg";

        $r0[3] = "image/png";

        $r0[4] = "multipart/alternative";

        $r0[5] = "multipart/mixed";

        $r0[6] = "multipart/related";

        $r0[7] = "text/plain";

        $r0[8] = "text/xml";

        <com.google.masf.protocol.HttpUtil: java.lang.String[] mimeTypeStrings> = $r0;

        $r1 = newarray (int)[9];

        $r1[0] = 24929;

        $r1[1] = 24930;

        $r1[2] = 26986;

        $r1[3] = 26992;

        $r1[4] = 28001;

        $r1[5] = 28013;

        $r1[6] = 28018;

        $r1[7] = 29808;

        $r1[8] = 29816;

        <com.google.masf.protocol.HttpUtil: int[] mimeTypeEncodings> = $r1;

        return;
    }

    public void <init>()
    {
        com.google.masf.protocol.HttpUtil $r0;

        $r0 := @this: com.google.masf.protocol.HttpUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getLongMimeType(int)
    {
        int $i0, $i1, $i2;
        int[] $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        $r0 = <com.google.masf.protocol.HttpUtil: int[] mimeTypeEncodings>;

        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label3;

        $r0 = <com.google.masf.protocol.HttpUtil: int[] mimeTypeEncodings>;

        $i2 = $r0[$i1];

        if $i2 != $i0 goto label2;

        $r1 = <com.google.masf.protocol.HttpUtil: java.lang.String[] mimeTypeStrings>;

        $r2 = $r1[$i1];

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static int getShortMimeType(java.lang.String)
    {
        java.lang.String $r0, $r2;
        boolean $z0;
        int $i0, $i1;
        java.lang.String[] $r1;
        int[] $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r1 = <com.google.masf.protocol.HttpUtil: java.lang.String[] mimeTypeStrings>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r1 = <com.google.masf.protocol.HttpUtil: java.lang.String[] mimeTypeStrings>;

        $r2 = $r1[$i0];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = <com.google.masf.protocol.HttpUtil: int[] mimeTypeEncodings>;

        $i0 = $r3[$i0];

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.util.Hashtable readProperties(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream $r0;
        java.util.Hashtable $r1;
        byte $b0;
        short $s1;
        int $i2;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: java.io.DataInputStream;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        $b0 = virtualinvoke $r0.<java.io.DataInputStream: byte readByte()>();

        $s1 = $b0 & 255;

        $i2 = 0;

     label1:
        if $i2 >= $s1 goto label2;

        $r2 = virtualinvoke $r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r3 = virtualinvoke $r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static void writeContentType(java.io.DataOutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.DataOutputStream $r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        $r0 := @parameter0: java.io.DataOutputStream;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(59);

        if $i0 < 0 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        $i0 = staticinvoke <com.google.masf.protocol.HttpUtil: int getShortMimeType(java.lang.String)>($r2);

        if $i0 <= 0 goto label3;

        virtualinvoke $r0.<java.io.DataOutputStream: void writeShort(int)>($i0);

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        return;

     label2:
        $r3 = "";

        $r2 = $r1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.io.DataOutputStream: void writeShort(int)>(0);

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r1);

        return;
    }

    public static void writeProperties(java.io.DataOutputStream, java.util.Hashtable, java.lang.String) throws java.io.IOException
    {
        java.io.DataOutputStream $r0;
        java.util.Hashtable $r1;
        java.lang.String $r2, $r5;
        byte $b0;
        int $i1;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @parameter0: java.io.DataOutputStream;

        $r1 := @parameter1: java.util.Hashtable;

        $r2 := @parameter2: java.lang.String;

        $b0 = 0;

        if $r1 == null goto label6;

        $i1 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

     label1:
        if $r2 == null goto label2;

        $b0 = 1;

     label2:
        $i1 = $i1 + $b0;

        virtualinvoke $r0.<java.io.DataOutputStream: void writeByte(int)>($i1);

        if $r2 == null goto label3;

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("Content-Type");

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r2);

     label3:
        if $r1 == null goto label5;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r2 = (java.lang.String) $r4;

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r2);

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        goto label4;

     label5:
        return;

     label6:
        $i1 = 0;

        goto label1;

     label7:
        return;
    }
}
