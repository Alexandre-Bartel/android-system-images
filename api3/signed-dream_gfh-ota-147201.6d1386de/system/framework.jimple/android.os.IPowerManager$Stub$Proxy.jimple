class android.os.IPowerManager$Stub$Proxy extends java.lang.Object implements android.os.IPowerManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public void acquireWakeLock(int, android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        int $i0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        android.os.Parcel $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.IBinder;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r1 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        r1 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IPowerManager$Stub$Proxy $r0;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        return "android.os.IPowerManager";
    }

    public long getScreenOnTime() throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        long $l0;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $l0 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $l0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void goToSleep(long) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        long $l0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $l0 := @parameter0: long;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void preventScreenOn(boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b0;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void releaseWakeLock(android.os.IBinder) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        $r1 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setPokeLock(int, android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        int $i0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        android.os.Parcel $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.IBinder;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r1 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setScreenBrightnessOverride(int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setStayOnSetting(int) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void userActivity(long, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        long $l0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b1;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b1 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b1 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void userActivityWithForce(long, boolean, boolean) throws android.os.RemoteException
    {
        android.os.IPowerManager$Stub$Proxy $r0;
        long $l0;
        boolean $z0, $z1;
        android.os.Parcel $r1, $r2;
        byte $b1;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.IPowerManager$Stub$Proxy;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPowerManager");

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

     label02:
        if $z0 == 0 goto label09;

     label03:
        $b1 = 1;

     label04:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

     label05:
        if $z1 == 0 goto label10;

     label06:
        $b1 = 1;

     label07:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r3 = $r0.<android.os.IPowerManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        $b1 = 0;

        goto label04;

     label10:
        $b1 = 0;

        goto label07;

     label11:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label05 with label11;
        catch java.lang.Throwable from label06 to label08 with label11;
    }
}
