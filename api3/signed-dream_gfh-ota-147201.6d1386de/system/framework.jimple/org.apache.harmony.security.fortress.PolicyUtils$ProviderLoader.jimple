public class org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader extends java.lang.Object implements java.security.PrivilegedAction
{
    private java.lang.Class expectedType;
    private java.lang.String key;

    public void <init>(java.lang.String, java.lang.Class)
    {
        org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader $r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.String key> = $r1;

        $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.Class expectedType> = $r2;

        return;
    }

    public java.lang.Object run()
    {
        org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader $r0;
        java.lang.String $r1, $r7;
        int $i0;
        java.lang.SecurityException $r2;
        java.lang.Thread $r3;
        java.lang.ClassLoader $r4;
        java.lang.Class $r5, $r6;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.Exception $r9;

        $r0 := @this: org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader;

        $r1 = $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.String key>;

        $r1 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>($r1);

        if $r1 == null goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $r2 = new java.lang.SecurityException;

        $r1 = $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.String key>;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.14C", $r1);

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label02:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 1, $r4);

     label03:
        $r6 = $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.Class expectedType>;

     label04:
        if $r6 == null goto label08;

        $r6 = $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.Class expectedType>;

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z0 == 0 goto label08;

     label05:
        $r2 = new java.lang.SecurityException;

     label06:
        $r5 = $r0.<org.apache.harmony.security.fortress.PolicyUtils$ProviderLoader: java.lang.Class expectedType>;

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.14D", $r1, $r7);

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label07:
        $r2 := @caughtexception;

        throw $r2;

     label08:
        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

     label09:
        return $r8;

     label10:
        $r9 := @caughtexception;

        $r2 = new java.lang.SecurityException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.14E", $r1);

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

        throw $r2;

        catch java.lang.SecurityException from label02 to label03 with label07;
        catch java.lang.SecurityException from label04 to label05 with label07;
        catch java.lang.SecurityException from label06 to label07 with label07;
        catch java.lang.Exception from label02 to label07 with label10;
        catch java.lang.SecurityException from label08 to label09 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
    }
}
