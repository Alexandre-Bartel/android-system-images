public class android.pim.RecurrenceSet extends java.lang.Object
{
    private static final java.lang.String RULE_SEPARATOR;
    private static final java.lang.String TAG;
    public long[] exdates;
    public android.pim.EventRecurrence[] exrules;
    public long[] rdates;
    public android.pim.EventRecurrence[] rrules;

    public void <init>(android.content.ContentValues)
    {
        android.pim.RecurrenceSet $r0;
        android.content.ContentValues $r1;
        java.lang.String $r2, $r3, $r4, $r5;

        $r0 := @this: android.pim.RecurrenceSet;

        $r1 := @parameter0: android.content.ContentValues;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] rrules> = null;

        $r0.<android.pim.RecurrenceSet: long[] rdates> = null;

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] exrules> = null;

        $r0.<android.pim.RecurrenceSet: long[] exdates> = null;

        $r2 = virtualinvoke $r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rrule");

        $r3 = virtualinvoke $r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rdate");

        $r4 = virtualinvoke $r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("exrule");

        $r5 = virtualinvoke $r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("exdate");

        specialinvoke $r0.<android.pim.RecurrenceSet: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4, $r5);

        return;
    }

    public void <init>(android.database.Cursor)
    {
        android.pim.RecurrenceSet $r0;
        android.database.Cursor $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3, $r4, $r5;

        $r0 := @this: android.pim.RecurrenceSet;

        $r1 := @parameter0: android.database.Cursor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] rrules> = null;

        $r0.<android.pim.RecurrenceSet: long[] rdates> = null;

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] exrules> = null;

        $r0.<android.pim.RecurrenceSet: long[] exdates> = null;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rrule");

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rdate");

        $i2 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exrule");

        $i3 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exdate");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i2);

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i3);

        specialinvoke $r0.<android.pim.RecurrenceSet: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4, $r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.pim.RecurrenceSet $r0;
        java.lang.String $r1, $r2, $r3, $r4;

        $r0 := @this: android.pim.RecurrenceSet;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] rrules> = null;

        $r0.<android.pim.RecurrenceSet: long[] rdates> = null;

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] exrules> = null;

        $r0.<android.pim.RecurrenceSet: long[] exdates> = null;

        specialinvoke $r0.<android.pim.RecurrenceSet: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4);

        return;
    }

    private static void addPropertiesForRuleStr(android.pim.ICalendar$Component, java.lang.String, java.lang.String)
    {
        android.pim.ICalendar$Component $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        android.pim.ICalendar$Property $r3;
        boolean $z0;
        java.lang.String[] $r4;

        $r0 := @parameter0: android.pim.ICalendar$Component;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i0 = lengthof $r4;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r4[$i1];

        $r3 = new android.pim.ICalendar$Property;

        specialinvoke $r3.<android.pim.ICalendar$Property: void <init>(java.lang.String)>($r1);

        virtualinvoke $r3.<android.pim.ICalendar$Property: void setValue(java.lang.String)>($r2);

        virtualinvoke $r0.<android.pim.ICalendar$Component: void addProperty(android.pim.ICalendar$Property)>($r3);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    private static void addPropertyForDateStr(android.pim.ICalendar$Component, java.lang.String, java.lang.String)
    {
        android.pim.ICalendar$Component $r0;
        java.lang.String $r1, $r3;
        android.pim.ICalendar$Property $r2;
        boolean $z0;
        int $i0;
        android.pim.ICalendar$Parameter $r4;

        $r0 := @parameter0: android.pim.ICalendar$Component;

        $r1 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new android.pim.ICalendar$Property;

        specialinvoke $r2.<android.pim.ICalendar$Property: void <init>(java.lang.String)>($r1);

        $r1 = null;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 == -1 goto label2;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r4 = new android.pim.ICalendar$Parameter;

        specialinvoke $r4.<android.pim.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("TZID", $r1);

        virtualinvoke $r2.<android.pim.ICalendar$Property: void addParameter(android.pim.ICalendar$Parameter)>($r4);

     label3:
        virtualinvoke $r2.<android.pim.ICalendar$Property: void setValue(java.lang.String)>($r3);

        virtualinvoke $r0.<android.pim.ICalendar$Component: void addProperty(android.pim.ICalendar$Property)>($r2);

        return;
    }

    private static java.lang.String computeDuration(android.text.format.Time, android.pim.ICalendar$Component)
    {
        android.text.format.Time $r0, $r2;
        android.pim.ICalendar$Component $r1;
        long $l0, $l1;
        android.pim.ICalendar$Property $r3;
        java.lang.String $r4;
        android.pim.ICalendar$Parameter $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: android.text.format.Time;

        $r1 := @parameter1: android.pim.ICalendar$Component;

        $r3 = virtualinvoke $r1.<android.pim.ICalendar$Component: android.pim.ICalendar$Property getFirstProperty(java.lang.String)>("DURATION");

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        return $r4;

     label1:
        $r3 = virtualinvoke $r1.<android.pim.ICalendar$Component: android.pim.ICalendar$Property getFirstProperty(java.lang.String)>("DTEND");

        if $r3 != null goto label2;

        return "+P0S";

     label2:
        $r5 = virtualinvoke $r3.<android.pim.ICalendar$Property: android.pim.ICalendar$Parameter getFirstParameter(java.lang.String)>("TZID");

        if $r5 != null goto label4;

        $r4 = $r0.<android.text.format.Time: java.lang.String timezone>;

     label3:
        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        virtualinvoke $r2.<android.text.format.Time: boolean parse(java.lang.String)>($r4);

        $l0 = virtualinvoke $r2.<android.text.format.Time: long toMillis(boolean)>(0);

        $l1 = virtualinvoke $r0.<android.text.format.Time: long toMillis(boolean)>(0);

        $l0 = $l0 - $l1;

        $l0 = $l0 / 1000L;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label4:
        $r4 = $r5.<android.pim.ICalendar$Parameter: java.lang.String value>;

        goto label3;
    }

    private static java.lang.String extractDates(android.pim.ICalendar$Property)
    {
        android.pim.ICalendar$Property $r0;
        android.pim.ICalendar$Parameter $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.pim.ICalendar$Property;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.pim.ICalendar$Property: android.pim.ICalendar$Parameter getFirstParameter(java.lang.String)>("TZID");

        if $r1 == null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r1.<android.pim.ICalendar$Parameter: java.lang.String value>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = virtualinvoke $r0.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r3 = virtualinvoke $r0.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        return $r3;
    }

    private static java.lang.String flattenProperties(android.pim.ICalendar$Component, java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        android.pim.ICalendar$Component $r2;
        java.util.List $r3;
        boolean $z0, $z1;
        int $i0;
        java.lang.Object $r4;
        android.pim.ICalendar$Property $r5;
        java.util.Iterator $r6;

        $r2 := @parameter0: android.pim.ICalendar$Component;

        $r0 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r2.<android.pim.ICalendar$Component: java.util.List getProperties(java.lang.String)>($r0);

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.pim.ICalendar$Property) $r4;

        $r0 = virtualinvoke $r5.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r3 = virtualinvoke $r2.<android.pim.ICalendar$Component: java.util.List getProperties(java.lang.String)>($r0);

        $r6 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.pim.ICalendar$Property) $r4;

        if $z0 == 0 goto label6;

        $z0 = 0;

     label5:
        $r0 = virtualinvoke $r5.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        goto label4;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label5;

     label7:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private void init(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.pim.RecurrenceSet $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        android.pim.EventRecurrence $r5;
        boolean $z0;
        java.lang.String[] $r6;
        int $i0, $i1;
        android.pim.EventRecurrence[] $r7;
        long[] $r8;

        $r0 := @this: android.pim.RecurrenceSet;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label7;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i0 = lengthof $r6;

        $r7 = newarray (android.pim.EventRecurrence)[$i0];

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] rrules> = $r7;

        $i0 = 0;

     label2:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label3;

        $r5 = new android.pim.EventRecurrence;

        specialinvoke $r5.<android.pim.EventRecurrence: void <init>()>();

        $r1 = $r6[$i0];

        virtualinvoke $r5.<android.pim.EventRecurrence: void parse(java.lang.String)>($r1);

        $r7 = $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] rrules>;

        $r7[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label4;

        $r8 = staticinvoke <android.pim.RecurrenceSet: long[] parseRecurrenceDates(java.lang.String)>($r2);

        $r0.<android.pim.RecurrenceSet: long[] rdates> = $r8;

     label4:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label6;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i0 = lengthof $r6;

        $r7 = newarray (android.pim.EventRecurrence)[$i0];

        $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] exrules> = $r7;

        $i0 = 0;

     label5:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label6;

        $r5 = new android.pim.EventRecurrence;

        specialinvoke $r5.<android.pim.EventRecurrence: void <init>()>();

        virtualinvoke $r5.<android.pim.EventRecurrence: void parse(java.lang.String)>($r3);

        $r7 = $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] exrules>;

        $r7[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label8;

        $r8 = staticinvoke <android.pim.RecurrenceSet: long[] parseRecurrenceDates(java.lang.String)>($r4);

        $r0.<android.pim.RecurrenceSet: long[] exdates> = $r8;

        return;

     label7:
        return;

     label8:
        return;
    }

    public static long[] parseRecurrenceDates(java.lang.String)
    {
        long[] $r0;
        int $i0, $i1;
        android.text.format.Time $r1;
        java.lang.String $r2, $r3;
        java.lang.String[] $r4;
        long $l2;

        $r2 := @parameter0: java.lang.String;

        $r3 = "UTC";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 == -1 goto label1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        $r1 = new android.text.format.Time;

        specialinvoke $r1.<android.text.format.Time: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r4;

        $r0 = newarray (long)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r4[$i1];

        virtualinvoke $r1.<android.text.format.Time: boolean parse(java.lang.String)>($r2);

        $l2 = virtualinvoke $r1.<android.text.format.Time: long toMillis(boolean)>(0);

        $r0[$i1] = $l2;

        $r1.<android.text.format.Time: java.lang.String timezone> = $r3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r0;
    }

    public static boolean populateComponent(android.database.Cursor, android.pim.ICalendar$Component)
    {
        android.pim.ICalendar$Component $r0;
        android.database.Cursor $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        long $l8;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b9;
        android.pim.ICalendar$Property $r8;
        android.pim.ICalendar$Parameter $r9;
        android.text.format.Time $r10;

        $r1 := @parameter0: android.database.Cursor;

        $r0 := @parameter1: android.pim.ICalendar$Component;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("dtstart");

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("duration");

        $i2 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("eventTimezone");

        $i3 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rrule");

        $i4 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rdate");

        $i5 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exrule");

        $i6 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exdate");

        $i7 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("allDay");

        $l8 = -1L;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isNull(int)>($i0);

        if $z0 != 0 goto label1;

        $l8 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

     label1:
        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i2);

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i3);

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i4);

        $r6 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i5);

        $r7 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i6);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i7);

        if $i0 != 1 goto label4;

        $z0 = 1;

     label2:
        $b9 = $l8 cmp -1L;

        if $b9 == 0 goto label3;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label3;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z1 == 0 goto label5;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 == 0 goto label5;

     label3:
        return 0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r8 = new android.pim.ICalendar$Property;

        specialinvoke $r8.<android.pim.ICalendar$Property: void <init>(java.lang.String)>("DTSTART");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 != 0 goto label9;

        if $z0 != 0 goto label6;

        $r9 = new android.pim.ICalendar$Parameter;

        specialinvoke $r9.<android.pim.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("TZID", $r3);

        virtualinvoke $r8.<android.pim.ICalendar$Property: void addParameter(android.pim.ICalendar$Parameter)>($r9);

     label6:
        $r10 = new android.text.format.Time;

        specialinvoke $r10.<android.text.format.Time: void <init>(java.lang.String)>($r3);

     label7:
        virtualinvoke $r10.<android.text.format.Time: void set(long)>($l8);

        if $z0 == 0 goto label8;

        $r9 = new android.pim.ICalendar$Parameter;

        specialinvoke $r9.<android.pim.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("VALUE", "DATE");

        virtualinvoke $r8.<android.pim.ICalendar$Property: void addParameter(android.pim.ICalendar$Parameter)>($r9);

        $r10.<android.text.format.Time: boolean allDay> = 1;

        $r10.<android.text.format.Time: int hour> = 0;

        $r10.<android.text.format.Time: int minute> = 0;

        $r10.<android.text.format.Time: int second> = 0;

     label8:
        $r3 = virtualinvoke $r10.<android.text.format.Time: java.lang.String format2445()>();

        virtualinvoke $r8.<android.pim.ICalendar$Property: void setValue(java.lang.String)>($r3);

        virtualinvoke $r0.<android.pim.ICalendar$Component: void addProperty(android.pim.ICalendar$Property)>($r8);

        $r8 = new android.pim.ICalendar$Property;

        specialinvoke $r8.<android.pim.ICalendar$Property: void <init>(java.lang.String)>("DURATION");

        virtualinvoke $r8.<android.pim.ICalendar$Property: void setValue(java.lang.String)>($r2);

        virtualinvoke $r0.<android.pim.ICalendar$Component: void addProperty(android.pim.ICalendar$Property)>($r8);

        staticinvoke <android.pim.RecurrenceSet: void addPropertiesForRuleStr(android.pim.ICalendar$Component,java.lang.String,java.lang.String)>($r0, "RRULE", $r4);

        staticinvoke <android.pim.RecurrenceSet: void addPropertyForDateStr(android.pim.ICalendar$Component,java.lang.String,java.lang.String)>($r0, "RDATE", $r5);

        staticinvoke <android.pim.RecurrenceSet: void addPropertiesForRuleStr(android.pim.ICalendar$Component,java.lang.String,java.lang.String)>($r0, "EXRULE", $r6);

        staticinvoke <android.pim.RecurrenceSet: void addPropertyForDateStr(android.pim.ICalendar$Component,java.lang.String,java.lang.String)>($r0, "EXDATE", $r7);

        return 1;

     label9:
        $r10 = new android.text.format.Time;

        specialinvoke $r10.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        goto label7;
    }

    public static boolean populateContentValues(android.pim.ICalendar$Component, android.content.ContentValues)
    {
        android.pim.ICalendar$Component $r0;
        android.content.ContentValues $r1;
        android.pim.ICalendar$Property $r2;
        java.lang.String $r3, $r5, $r7, $r8, $r9, $r10, $r11;
        android.pim.ICalendar$Parameter $r4;
        android.text.format.Time $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r12;
        long $l0;
        java.lang.Long $r13;
        byte $b1;
        java.lang.Integer $r14;

        $r0 := @parameter0: android.pim.ICalendar$Component;

        $r1 := @parameter1: android.content.ContentValues;

        $r2 = virtualinvoke $r0.<android.pim.ICalendar$Component: android.pim.ICalendar$Property getFirstProperty(java.lang.String)>("DTSTART");

        $r3 = virtualinvoke $r2.<android.pim.ICalendar$Property: java.lang.String getValue()>();

        $r4 = virtualinvoke $r2.<android.pim.ICalendar$Property: android.pim.ICalendar$Parameter getFirstParameter(java.lang.String)>("TZID");

        if $r4 != null goto label05;

        $r5 = null;

     label01:
        $r6 = new android.text.format.Time;

        if $r4 != null goto label06;

        $r7 = "UTC";

     label02:
        specialinvoke $r6.<android.text.format.Time: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r6.<android.text.format.Time: boolean parse(java.lang.String)>($r3);

        $z1 = $r6.<android.text.format.Time: boolean allDay>;

        if $z0 == 0 goto label12;

        $r5 = "UTC";

     label03:
        $r7 = staticinvoke <android.pim.RecurrenceSet: java.lang.String computeDuration(android.text.format.Time,android.pim.ICalendar$Component)>($r6, $r0);

        $r8 = staticinvoke <android.pim.RecurrenceSet: java.lang.String flattenProperties(android.pim.ICalendar$Component,java.lang.String)>($r0, "RRULE");

        $r2 = virtualinvoke $r0.<android.pim.ICalendar$Component: android.pim.ICalendar$Property getFirstProperty(java.lang.String)>("RDATE");

        $r9 = staticinvoke <android.pim.RecurrenceSet: java.lang.String extractDates(android.pim.ICalendar$Property)>($r2);

        $r10 = staticinvoke <android.pim.RecurrenceSet: java.lang.String flattenProperties(android.pim.ICalendar$Component,java.lang.String)>($r0, "EXRULE");

        $r2 = virtualinvoke $r0.<android.pim.ICalendar$Component: android.pim.ICalendar$Property getFirstProperty(java.lang.String)>("EXDATE");

        $r11 = staticinvoke <android.pim.RecurrenceSet: java.lang.String extractDates(android.pim.ICalendar$Property)>($r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label04;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label04;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 == 0 goto label07;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z0 == 0 goto label07;

     label04:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recurrence missing DTSTART, DTEND/DURATION, or RRULE/RDATE: ");

        $r3 = virtualinvoke $r0.<android.pim.ICalendar$Component: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CalendarProvider", $r3);

        return 0;

     label05:
        $r5 = $r4.<android.pim.ICalendar$Parameter: java.lang.String value>;

        goto label01;

     label06:
        $r7 = $r5;

        goto label02;

     label07:
        if $z1 == 0 goto label08;

        $r6.<android.text.format.Time: java.lang.String timezone> = "UTC";

     label08:
        $l0 = virtualinvoke $r6.<android.text.format.Time: long toMillis(boolean)>(0);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtstart", $r13);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label09;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DTSTART is out of range: ");

        $r3 = virtualinvoke $r0.<android.pim.ICalendar$Component: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CalendarProvider", $r3);

        return 0;

     label09:
        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", $r8);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rdate", $r9);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("exrule", $r10);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("exdate", $r11);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventTimezone", $r5);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("duration", $r7);

        if $z1 == 0 goto label11;

        $b1 = 1;

     label10:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b1);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("allDay", $r14);

        return 1;

     label11:
        $b1 = 0;

        goto label10;

     label12:
        goto label03;
    }

    public boolean hasRecurrence()
    {
        android.pim.RecurrenceSet $r0;
        android.pim.EventRecurrence[] $r1;
        long[] $r2;

        $r0 := @this: android.pim.RecurrenceSet;

        $r1 = $r0.<android.pim.RecurrenceSet: android.pim.EventRecurrence[] rrules>;

        if $r1 != null goto label1;

        $r2 = $r0.<android.pim.RecurrenceSet: long[] rdates>;

        if $r2 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <android.pim.RecurrenceSet: java.lang.String TAG> = "CalendarProvider";

        <android.pim.RecurrenceSet: java.lang.String RULE_SEPARATOR> = "\n";

        return;
    }
}
