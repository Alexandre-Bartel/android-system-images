public class android.location.LocationManager extends java.lang.Object
{
    public static final java.lang.String GPS_PROVIDER;
    public static final java.lang.String KEY_LOCATION_CHANGED;
    public static final java.lang.String KEY_PROVIDER_ENABLED;
    public static final java.lang.String KEY_PROXIMITY_ENTERING;
    public static final java.lang.String KEY_STATUS_CHANGED;
    public static final java.lang.String NETWORK_PROVIDER;
    public static final java.lang.String PROVIDER_DIR;
    public static final java.lang.String SYSTEM_DIR;
    private static final java.lang.String TAG;
    private final android.location.GpsStatus mGpsStatus;
    private final java.util.HashMap mGpsStatusListeners;
    private java.util.HashMap mListeners;
    private android.location.ILocationManager mService;

    public void <init>(android.location.ILocationManager)
    {
        android.location.LocationManager $r0;
        android.location.ILocationManager $r1;
        java.util.HashMap $r2;
        android.location.GpsStatus $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.location.ILocationManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.location.LocationManager: java.util.HashMap mGpsStatusListeners> = $r2;

        $r3 = new android.location.GpsStatus;

        specialinvoke $r3.<android.location.GpsStatus: void <init>()>();

        $r0.<android.location.LocationManager: android.location.GpsStatus mGpsStatus> = $r3;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.location.LocationManager: java.util.HashMap mListeners> = $r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constructor: service = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManager", $r5);

        $r0.<android.location.LocationManager: android.location.ILocationManager mService> = $r1;

        return;
    }

    private void _requestLocationUpdates(java.lang.String, long, float, android.app.PendingIntent)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.app.PendingIntent $r2;
        long $l0;
        float $f0;
        byte $b1;
        android.location.ILocationManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.app.PendingIntent;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $l0 = 0L;

     label1:
        $b1 = $f0 cmpg 0.0F;

        if $b1 >= 0 goto label2;

        $f0 = 0.0F;

     label2:
        $r3 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label3:
        interfaceinvoke $r3.<android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)>($r1, $l0, $f0, $r2);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "requestLocationUpdates: RemoteException", $r4);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void _requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.LocationListener $r2;
        android.os.Looper $r3;
        java.util.HashMap $r4, $r6;
        java.lang.Object $r5;
        long $l0;
        float $f0;
        byte $b1;
        android.location.LocationManager$ListenerTransport $r7;
        android.location.ILocationManager $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.location.LocationListener;

        $r3 := @parameter4: android.os.Looper;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $l0 = 0L;

     label1:
        $b1 = $f0 cmpg 0.0F;

        if $b1 >= 0 goto label2;

        $f0 = 0.0F;

     label2:
        $r4 = $r0.<android.location.LocationManager: java.util.HashMap mListeners>;

        entermonitor $r4;

     label3:
        $r6 = $r0.<android.location.LocationManager: java.util.HashMap mListeners>;

        $r5 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (android.location.LocationManager$ListenerTransport) $r5;

        if $r7 != null goto label4;

        $r7 = new android.location.LocationManager$ListenerTransport;

        specialinvoke $r7.<android.location.LocationManager$ListenerTransport: void <init>(android.location.LocationManager,android.location.LocationListener,android.os.Looper)>($r0, $r2, $r3);

     label4:
        $r6 = $r0.<android.location.LocationManager: java.util.HashMap mListeners>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r7);

        $r8 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

        interfaceinvoke $r8.<android.location.ILocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)>($r1, $l0, $f0, $r7);

        exitmonitor $r4;

     label5:
        return;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label7:
        throw $r9;

     label8:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "requestLocationUpdates: DeadObjectException", $r10);

        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    static android.location.GpsStatus access$500(android.location.LocationManager)
    {
        android.location.LocationManager $r0;
        android.location.GpsStatus r1;

        $r0 := @parameter0: android.location.LocationManager;

        r1 = $r0.<android.location.LocationManager: android.location.GpsStatus mGpsStatus>;

        return r1;
    }

    private android.location.LocationProvider best(java.util.List)
    {
        java.util.List $r0;
        java.util.ArrayList $r1, $r2;
        android.location.LocationManager $r3;
        int $i0, $i1, $i2, $i3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;
        android.location.LocationProvider $r7;
        android.location.LocationManager$LpPowerComparator $r8;
        android.location.LocationManager$LpAccuracyComparator $r9;
        android.location.LocationManager$LpCapabilityComparator $r10;

        $r3 := @this: android.location.LocationManager;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r3.<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label3;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.location.LocationProvider) $r5;

        return $r7;

     label3:
        $r8 = new android.location.LocationManager$LpPowerComparator;

        specialinvoke $r8.<android.location.LocationManager$LpPowerComparator: void <init>(android.location.LocationManager,android.location.LocationManager$1)>($r3, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r8);

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.location.LocationProvider) $r5;

        $i0 = virtualinvoke $r7.<android.location.LocationProvider: int getPowerRequirement()>();

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r7 = (android.location.LocationProvider) $r5;

        $i1 = virtualinvoke $r7.<android.location.LocationProvider: int getPowerRequirement()>();

        if $i0 >= $i1 goto label4;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.location.LocationProvider) $r5;

        return $r7;

     label4:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

     label5:
        if $i1 >= $i2 goto label6;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (android.location.LocationProvider) $r5;

        $i3 = virtualinvoke $r7.<android.location.LocationProvider: int getPowerRequirement()>();

        if $i3 != $i0 goto label6;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $r9 = new android.location.LocationManager$LpAccuracyComparator;

        specialinvoke $r9.<android.location.LocationManager$LpAccuracyComparator: void <init>(android.location.LocationManager,android.location.LocationManager$1)>($r3, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r9);

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.location.LocationProvider) $r5;

        $i0 = virtualinvoke $r7.<android.location.LocationProvider: int getAccuracy()>();

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(1);

        $r7 = (android.location.LocationProvider) $r5;

        $i1 = virtualinvoke $r7.<android.location.LocationProvider: int getAccuracy()>();

        if $i0 >= $i1 goto label7;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.location.LocationProvider) $r5;

        return $r7;

     label7:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

     label8:
        if $i1 >= $i2 goto label9;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (android.location.LocationProvider) $r5;

        $i3 = virtualinvoke $r7.<android.location.LocationProvider: int getAccuracy()>();

        if $i3 != $i0 goto label9;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label8;

     label9:
        $r10 = new android.location.LocationManager$LpCapabilityComparator;

        specialinvoke $r10.<android.location.LocationManager$LpCapabilityComparator: void <init>(android.location.LocationManager,android.location.LocationManager$1)>($r3, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r10);

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.location.LocationProvider) $r5;

        return $r7;
    }

    private android.location.LocationProvider createProvider(java.lang.String, android.os.Bundle)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.location.DummyLocationProvider $r3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 = new android.location.DummyLocationProvider;

        specialinvoke $r3.<android.location.DummyLocationProvider: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("network");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setRequiresNetwork(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("satellite");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setRequiresSatellite(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("cell");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setRequiresCell(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("cost");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setHasMonetaryCost(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("altitude");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setSupportsAltitude(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("speed");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setSupportsSpeed(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("bearing");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setSupportsBearing(boolean)>($z0);

        $i0 = virtualinvoke $r2.<android.os.Bundle: int getInt(java.lang.String)>("power");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setPowerRequirement(int)>($i0);

        $i0 = virtualinvoke $r2.<android.os.Bundle: int getInt(java.lang.String)>("accuracy");

        virtualinvoke $r3.<android.location.DummyLocationProvider: void setAccuracy(int)>($i0);

        return $r3;
    }

    private int nextAccuracy(int)
    {
        android.location.LocationManager $r0;
        int $i0;

        $r0 := @this: android.location.LocationManager;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        return 2;

     label1:
        return 0;
    }

    private int nextPower(int)
    {
        android.location.LocationManager $r0;
        int $i0;

        $r0 := @this: android.location.LocationManager;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 2;

     label3:
        return 3;
    }

    public boolean addGpsStatusListener(android.location.GpsStatus$Listener)
    {
        android.location.LocationManager $r0;
        android.location.GpsStatus$Listener $r1;
        android.location.LocationManager$GpsStatusListenerTransport $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        android.location.ILocationManager $r5;
        boolean $z0, $z1;
        android.os.RemoteException $r6;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.location.GpsStatus$Listener;

        $r3 = $r0.<android.location.LocationManager: java.util.HashMap mGpsStatusListeners>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 == null goto label1;

        return 1;

     label1:
        $r2 = new android.location.LocationManager$GpsStatusListenerTransport;

     label2:
        specialinvoke $r2.<android.location.LocationManager$GpsStatusListenerTransport: void <init>(android.location.LocationManager,android.location.GpsStatus$Listener)>($r0, $r1);

        $r5 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

        $z0 = interfaceinvoke $r5.<android.location.ILocationManager: boolean addGpsStatusListener(android.location.IGpsStatusListener)>($r2);

     label3:
        $z1 = $z0;

        if $z0 == 0 goto label5;

     label4:
        $r3 = $r0.<android.location.LocationManager: java.util.HashMap mGpsStatusListeners>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label5:
        return $z1;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "RemoteException in registerGpsStatusListener: ", $r6);

        $z1 = 0;

        goto label5;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void addProximityAlert(double, double, float, long, android.app.PendingIntent)
    {
        android.location.LocationManager $r0;
        double $d0, $d1;
        float $f0;
        long $l0;
        android.app.PendingIntent $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.location.ILocationManager $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.location.LocationManager;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $f0 := @parameter2: float;

        $l0 := @parameter3: long;

        $r1 := @parameter4: android.app.PendingIntent;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addProximityAlert: latitude = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", longitude = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", radius = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expiration = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManager", $r3);

        $r4 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r4.<android.location.ILocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>($d0, $d1, $f0, $l0, $r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "addProximityAlert: RemoteException", $r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z3 := @parameter4: boolean;

        $z4 := @parameter5: boolean;

        $z5 := @parameter6: boolean;

        $z6 := @parameter7: boolean;

        $i0 := @parameter8: int;

        $i1 := @parameter9: int;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r2.<android.location.ILocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>($r1, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $i0, $i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "addTestProvider: RemoteException", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearTestProviderEnabled(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r2.<android.location.ILocationManager: void clearTestProviderEnabled(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "clearTestProviderEnabled: RemoteException", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearTestProviderLocation(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r2.<android.location.ILocationManager: void clearTestProviderLocation(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "clearTestProviderLocation: RemoteException", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearTestProviderStatus(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r2.<android.location.ILocationManager: void clearTestProviderStatus(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "clearTestProviderStatus: RemoteException", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllProviders()
    {
        android.location.LocationManager $r0;
        java.util.List $r1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManager", "getAllProviders");

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.location.ILocationManager: java.util.List getAllProviders()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "getAllProviders: RemoteException", $r3);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getBestProvider(android.location.Criteria, boolean)
    {
        android.location.LocationManager $r0;
        boolean $z0, $z1;
        android.location.Criteria $r1, $r2;
        java.util.List $r3, $r4;
        android.location.LocationProvider $r5;
        java.lang.String $r6;
        int $i0, $i1;

        $r0 := @this: android.location.LocationManager;

        $r2 := @parameter0: android.location.Criteria;

        $z0 := @parameter1: boolean;

        $r3 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r2, $z0);

        $r4 = $r3;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>($r3);

        $r6 = virtualinvoke $r5.<android.location.LocationProvider: java.lang.String getName()>();

        return $r6;

     label01:
        $r1 = new android.location.Criteria;

        specialinvoke $r1.<android.location.Criteria: void <init>(android.location.Criteria)>($r2);

        $i0 = virtualinvoke $r1.<android.location.Criteria: int getPowerRequirement()>();

     label02:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label03;

        if $i0 == 0 goto label03;

        $i1 = specialinvoke $r0.<android.location.LocationManager: int nextPower(int)>($i0);

        $i0 = $i1;

        virtualinvoke $r1.<android.location.Criteria: void setPowerRequirement(int)>($i1);

        $r4 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r1, $z0);

        goto label02;

     label03:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label04;

        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>($r4);

        $r6 = virtualinvoke $r5.<android.location.LocationProvider: java.lang.String getName()>();

        return $r6;

     label04:
        $i0 = virtualinvoke $r1.<android.location.Criteria: int getAccuracy()>();

     label05:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        if $i0 == 0 goto label06;

        $i1 = specialinvoke $r0.<android.location.LocationManager: int nextAccuracy(int)>($i0);

        $i0 = $i1;

        virtualinvoke $r1.<android.location.Criteria: void setAccuracy(int)>($i1);

        $r4 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r1, $z0);

        goto label05;

     label06:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label07;

        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>($r4);

        $r6 = virtualinvoke $r5.<android.location.LocationProvider: java.lang.String getName()>();

        return $r6;

     label07:
        virtualinvoke $r1.<android.location.Criteria: void setBearingRequired(boolean)>(0);

        $r3 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r1, $z0);

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label08;

        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>($r3);

        $r6 = virtualinvoke $r5.<android.location.LocationProvider: java.lang.String getName()>();

        return $r6;

     label08:
        virtualinvoke $r1.<android.location.Criteria: void setSpeedRequired(boolean)>(0);

        $r3 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r1, $z0);

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label09;

        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>($r3);

        $r6 = virtualinvoke $r5.<android.location.LocationProvider: java.lang.String getName()>();

        return $r6;

     label09:
        virtualinvoke $r1.<android.location.Criteria: void setAltitudeRequired(boolean)>(0);

        $r3 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>($r1, $z0);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider best(java.util.List)>($r3);

        $r6 = virtualinvoke $r5.<android.location.LocationProvider: java.lang.String getName()>();

        return $r6;

     label10:
        return null;
    }

    public android.location.GpsStatus getGpsStatus(android.location.GpsStatus)
    {
        android.location.LocationManager $r0;
        android.location.GpsStatus $r1, $r2;

        $r0 := @this: android.location.LocationManager;

        $r2 := @parameter0: android.location.GpsStatus;

        if $r2 != null goto label1;

        $r2 = new android.location.GpsStatus;

        specialinvoke $r2.<android.location.GpsStatus: void <init>()>();

     label1:
        $r1 = $r0.<android.location.LocationManager: android.location.GpsStatus mGpsStatus>;

        virtualinvoke $r2.<android.location.GpsStatus: void setStatus(android.location.GpsStatus)>($r1);

        return $r2;
    }

    public android.location.Location getLastKnownLocation(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.Location $r2;
        java.lang.IllegalArgumentException $r3;
        android.location.ILocationManager $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider==null");

        throw $r3;

     label1:
        $r4 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label2:
        $r2 = interfaceinvoke $r4.<android.location.ILocationManager: android.location.Location getLastKnownLocation(java.lang.String)>($r1);

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "getLastKnowLocation: RemoteException", $r5);

        return null;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public android.location.LocationProvider getProvider(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        android.location.ILocationManager $r3;
        android.os.Bundle $r4;
        android.location.LocationProvider $r5;
        android.os.RemoteException $r6;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name==null");

        throw $r2;

     label1:
        $r3 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label2:
        $r4 = interfaceinvoke $r3.<android.location.ILocationManager: android.os.Bundle getProviderInfo(java.lang.String)>($r1);

        if $r4 != null goto label4;

     label3:
        return null;

     label4:
        $r5 = specialinvoke $r0.<android.location.LocationManager: android.location.LocationProvider createProvider(java.lang.String,android.os.Bundle)>($r1, $r4);

     label5:
        return $r5;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "getProvider: RemoteException", $r6);

        return null;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public java.util.List getProviders(android.location.Criteria, boolean)
    {
        android.location.LocationManager $r0;
        android.location.Criteria $r1;
        boolean $z0;
        java.util.List $r2, $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        android.location.LocationProvider $r7;
        java.util.ArrayList r8;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.location.Criteria;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = virtualinvoke $r0.<android.location.LocationManager: java.util.List getProviders(boolean)>($z0);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r0.<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>($r6);

        $z0 = virtualinvoke $r7.<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>($r1);

        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r8 = new java.util.ArrayList;

        $r2 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

     label2:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label3:
        return $r2;
    }

    public java.util.List getProviders(boolean)
    {
        android.location.LocationManager $r0;
        boolean $z0;
        java.util.List $r1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        $r1 = interfaceinvoke $r2.<android.location.ILocationManager: java.util.List getProviders(boolean)>($z0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "getProviders: RemoteException", $r3);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isProviderEnabled(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.location.ILocationManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider==null");

        throw $r2;

     label1:
        $r3 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label2:
        $z0 = interfaceinvoke $r3.<android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)>($r1);

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "isProviderEnabled: RemoteException", $r4);

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void removeGpsStatusListener(android.location.GpsStatus$Listener)
    {
        android.location.LocationManager $r0;
        android.location.GpsStatus$Listener $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        android.location.LocationManager$GpsStatusListenerTransport $r4;
        android.location.ILocationManager $r5;
        android.os.RemoteException $r6;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.location.GpsStatus$Listener;

        $r3 = $r0.<android.location.LocationManager: java.util.HashMap mGpsStatusListeners>;

     label1:
        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        $r4 = (android.location.LocationManager$GpsStatusListenerTransport) $r2;

        if $r4 == null goto label6;

     label3:
        $r5 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

        interfaceinvoke $r5.<android.location.ILocationManager: void removeGpsStatusListener(android.location.IGpsStatusListener)>($r4);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "RemoteException in unregisterGpsStatusListener: ", $r6);

        return;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void removeProximityAlert(android.app.PendingIntent)
    {
        android.location.LocationManager $r0;
        android.app.PendingIntent $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.location.ILocationManager $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeProximityAlert: intent = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManager", $r3);

        $r4 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r4.<android.location.ILocationManager: void removeProximityAlert(android.app.PendingIntent)>($r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "removeProximityAlert: RemoteException", $r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeTestProvider(java.lang.String)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r2.<android.location.ILocationManager: void removeTestProvider(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "removeTestProvider: RemoteException", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeUpdates(android.app.PendingIntent)
    {
        android.location.LocationManager $r0;
        android.app.PendingIntent $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.location.ILocationManager $r5;
        android.os.RemoteException $r6;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.app.PendingIntent;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("intent==null");

        throw $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeUpdates: intent = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManager", $r4);

        $r5 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label2:
        interfaceinvoke $r5.<android.location.ILocationManager: void removeUpdatesPI(android.app.PendingIntent)>($r1);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "removeUpdates: RemoteException", $r6);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void removeUpdates(android.location.LocationListener)
    {
        android.location.LocationManager $r0;
        android.location.LocationListener $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        android.location.LocationManager$ListenerTransport $r7;
        android.location.ILocationManager $r8;
        android.os.RemoteException $r9;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: android.location.LocationListener;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener==null");

        throw $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeUpdates: listener = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LocationManager", $r4);

        $r5 = $r0.<android.location.LocationManager: java.util.HashMap mListeners>;

     label2:
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label3:
        $r7 = (android.location.LocationManager$ListenerTransport) $r6;

        if $r7 == null goto label7;

     label4:
        $r8 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

        interfaceinvoke $r8.<android.location.ILocationManager: void removeUpdates(android.location.ILocationListener)>($r7);

     label5:
        return;

     label6:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "removeUpdates: DeadObjectException", $r9);

        return;

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void requestLocationUpdates(java.lang.String, long, float, android.app.PendingIntent)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        long $l0;
        float $f0;
        android.app.PendingIntent $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.app.PendingIntent;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider==null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("intent==null");

        throw $r3;

     label2:
        specialinvoke $r0.<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>($r1, $l0, $f0, $r2);

        return;
    }

    public void requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        long $l0;
        float $f0;
        android.location.LocationListener $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.location.LocationListener;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider==null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener==null");

        throw $r3;

     label2:
        specialinvoke $r0.<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>($r1, $l0, $f0, $r2, null);

        return;
    }

    public void requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        long $l0;
        float $f0;
        android.location.LocationListener $r2;
        android.os.Looper $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.location.LocationListener;

        $r3 := @parameter4: android.os.Looper;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider==null");

        throw $r4;

     label1:
        if $r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener==null");

        throw $r4;

     label2:
        if $r3 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("looper==null");

        throw $r4;

     label3:
        specialinvoke $r0.<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>($r1, $l0, $f0, $r2, $r3);

        return;
    }

    public boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1, $r2;
        android.os.Bundle $r3;
        boolean $z0;
        android.location.ILocationManager $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        $z0 = interfaceinvoke $r4.<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>($r1, $r2, $r3);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "RemoteException in sendExtraCommand: ", $r5);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTestProviderEnabled(java.lang.String, boolean)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        boolean $z0;
        android.location.ILocationManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r2.<android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean)>($r1, $z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "setTestProviderEnabled: RemoteException", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTestProviderLocation(java.lang.String, android.location.Location)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        android.location.Location $r2;
        android.location.ILocationManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.location.Location;

        $r3 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r3.<android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "setTestProviderLocation: RemoteException", $r4);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)
    {
        android.location.LocationManager $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Bundle $r2;
        long $l1;
        android.location.ILocationManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.location.LocationManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $l1 := @parameter3: long;

        $r3 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r3.<android.location.ILocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>($r1, $i0, $r2, $l1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "setTestProviderStatus: RemoteException", $r4);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateProviders()
    {
        android.location.LocationManager $r0;
        android.location.ILocationManager $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.location.LocationManager;

        $r1 = $r0.<android.location.LocationManager: android.location.ILocationManager mService>;

     label1:
        interfaceinvoke $r1.<android.location.ILocationManager: void updateProviders()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationManager", "updateProviders: RemoteException", $r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.location.LocationManager: java.lang.String TAG> = "LocationManager";

        <android.location.LocationManager: java.lang.String SYSTEM_DIR> = "/data/system/location";

        <android.location.LocationManager: java.lang.String PROVIDER_DIR> = "/data/location";

        <android.location.LocationManager: java.lang.String NETWORK_PROVIDER> = "network";

        <android.location.LocationManager: java.lang.String KEY_STATUS_CHANGED> = "status";

        <android.location.LocationManager: java.lang.String KEY_PROXIMITY_ENTERING> = "entering";

        <android.location.LocationManager: java.lang.String KEY_PROVIDER_ENABLED> = "providerEnabled";

        <android.location.LocationManager: java.lang.String KEY_LOCATION_CHANGED> = "location";

        <android.location.LocationManager: java.lang.String GPS_PROVIDER> = "gps";

        return;
    }
}
