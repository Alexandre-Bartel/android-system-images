public class android.widget.TableRow extends android.widget.LinearLayout
{
    private android.widget.TableRow$ChildrenTracker mChildrenTracker;
    private android.util.SparseIntArray mColumnToChildIndex;
    private int[] mColumnWidths;
    private int[] mConstrainedColumnWidths;
    private int mNumColumns;

    public void <init>(android.content.Context)
    {
        android.widget.TableRow $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.LinearLayout: void <init>(android.content.Context)>($r1);

        $r0.<android.widget.TableRow: int mNumColumns> = 0;

        specialinvoke $r0.<android.widget.TableRow: void initTableRow()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TableRow $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<android.widget.TableRow: int mNumColumns> = 0;

        specialinvoke $r0.<android.widget.TableRow: void initTableRow()>();

        return;
    }

    static android.util.SparseIntArray access$302(android.widget.TableRow, android.util.SparseIntArray)
    {
        android.widget.TableRow $r0;
        android.util.SparseIntArray $r1;

        $r0 := @parameter0: android.widget.TableRow;

        $r1 := @parameter1: android.util.SparseIntArray;

        $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex> = $r1;

        return $r1;
    }

    private void initTableRow()
    {
        android.widget.TableRow $r0;
        android.view.ViewGroup$OnHierarchyChangeListener $r1;
        android.widget.TableRow$ChildrenTracker $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        $r2 = new android.widget.TableRow$ChildrenTracker;

        specialinvoke $r2.<android.widget.TableRow$ChildrenTracker: void <init>(android.widget.TableRow,android.widget.TableRow$1)>($r0, null);

        $r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker> = $r2;

        if $r1 == null goto label1;

        $r2 = $r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker>;

        staticinvoke <android.widget.TableRow$ChildrenTracker: void access$100(android.widget.TableRow$ChildrenTracker,android.view.ViewGroup$OnHierarchyChangeListener)>($r2, $r1);

     label1:
        $r2 = $r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker>;

        specialinvoke $r0.<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r2);

        return;
    }

    private void mapIndexAndColumns()
    {
        android.widget.TableRow $r0;
        android.util.SparseIntArray $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.TableRow$LayoutParams $r4;

        $r0 := @this: android.widget.TableRow;

        $r1 = $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        if $r1 != null goto label6;

        $i1 = 0;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $r1 = new android.util.SparseIntArray;

        specialinvoke $r1.<android.util.SparseIntArray: void <init>()>();

        $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex> = $r1;

        $r1 = $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label5;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.TableRow$LayoutParams) $r3;

        $i4 = $r4.<android.widget.TableRow$LayoutParams: int column>;

        if $i4 < $i1 goto label2;

        $i1 = $r4.<android.widget.TableRow$LayoutParams: int column>;

     label2:
        $i4 = 0;

     label3:
        $i0 = $r4.<android.widget.TableRow$LayoutParams: int span>;

        if $i4 >= $i0 goto label4;

        virtualinvoke $r1.<android.util.SparseIntArray: void put(int,int)>($i1, $i3);

        $i4 = $i4 + 1;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        $r0.<android.widget.TableRow: int mNumColumns> = $i1;

        return;

     label6:
        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableRow $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.widget.TableRow$LayoutParams;

        return $z0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableRow $r0;
        android.widget.LinearLayout$LayoutParams $r1;

        $r0 := @this: android.widget.TableRow;

        $r1 = virtualinvoke $r0.<android.widget.TableRow: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableRow $r0;
        android.widget.TableRow$LayoutParams $r1;

        $r0 := @this: android.widget.TableRow;

        $r1 = new android.widget.TableRow$LayoutParams;

        specialinvoke $r1.<android.widget.TableRow$LayoutParams: void <init>()>();

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableRow $r0;
        android.util.AttributeSet $r1;
        android.widget.TableRow$LayoutParams $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke $r0.<android.widget.TableRow: android.widget.TableRow$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableRow $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.LinearLayout$LayoutParams $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke $r0.<android.widget.TableRow: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableRow $r0;
        android.util.AttributeSet $r1;
        android.widget.TableRow$LayoutParams $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke $r0.<android.widget.TableRow: android.widget.TableRow$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableRow $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.TableRow$LayoutParams $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.TableRow$LayoutParams;

        specialinvoke $r2.<android.widget.TableRow$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public android.widget.TableRow$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableRow $r0;
        android.util.AttributeSet $r1;
        android.widget.TableRow$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.TableRow$LayoutParams;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TableRow$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.widget.TableRow $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.TableRow$LayoutParams $r3;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.TableRow$LayoutParams) $r2;

        $i0 = $r3.<android.widget.TableRow$LayoutParams: int span>;

        $i0 = $i0 - 1;

        return $i0;
    }

    int[] getColumnsWidths(int)
    {
        android.widget.TableRow $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.TableRow$LayoutParams $r4;

        $r0 := @this: android.widget.TableRow;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r0.<android.widget.TableRow: int getVirtualChildCount()>();

        $r1 = $r0.<android.widget.TableRow: int[] mColumnWidths>;

        if $r1 == null goto label01;

        $r1 = $r0.<android.widget.TableRow: int[] mColumnWidths>;

        $i3 = lengthof $r1;

        if $i2 == $i3 goto label02;

     label01:
        $r1 = newarray (int)[$i2];

        $r0.<android.widget.TableRow: int[] mColumnWidths> = $r1;

     label02:
        $r1 = $r0.<android.widget.TableRow: int[] mColumnWidths>;

        $i3 = 0;

     label03:
        if $i3 >= $i2 goto label11;

        $r2 = virtualinvoke $r0.<android.widget.TableRow: android.view.View getVirtualChildAt(int)>($i3);

        if $r2 == null goto label10;

        $i1 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i1 == 8 goto label10;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.TableRow$LayoutParams) $r3;

        $i1 = $r4.<android.widget.TableRow$LayoutParams: int span>;

        if $i1 != 1 goto label09;

        $i1 = $r4.<android.view.ViewGroup$LayoutParams: int width>;

        lookupswitch($i1)
        {
            case -2: goto label07;
            case -1: goto label08;
            default: goto label04;
        };

     label04:
        $i1 = $r4.<android.view.ViewGroup$LayoutParams: int width>;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

     label05:
        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i1, $i1);

        $i1 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i1 = $i1 + $i4;

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i1 = $i1 + $i4;

        $r1[$i3] = $i1;

     label06:
        $i3 = $i3 + 1;

        goto label03;

     label07:
        $i1 = staticinvoke <android.widget.TableRow: int getChildMeasureSpec(int,int,int)>($i0, 0, -2);

        goto label05;

     label08:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label05;

     label09:
        $r1[$i3] = 0;

        goto label06;

     label10:
        $r1[$i3] = 0;

        goto label06;

     label11:
        return $r1;
    }

    int getLocationOffset(android.view.View)
    {
        android.view.View $r0;
        android.widget.TableRow $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.TableRow$LayoutParams $r3;
        int[] $r4;
        int $i0;

        $r1 := @this: android.widget.TableRow;

        $r0 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.TableRow$LayoutParams) $r2;

        $r4 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r3);

        $i0 = $r4[0];

        return $i0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.view.View $r0;
        android.widget.TableRow $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.TableRow$LayoutParams $r3;
        int[] $r4;
        int $i0;

        $r1 := @this: android.widget.TableRow;

        $r0 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.TableRow$LayoutParams) $r2;

        $r4 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r3);

        $i0 = $r4[1];

        return $i0;
    }

    public android.view.View getVirtualChildAt(int)
    {
        android.widget.TableRow $r0;
        int $i0;
        android.util.SparseIntArray $r1;
        android.view.View $r2;

        $r0 := @this: android.widget.TableRow;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        if $r1 != null goto label1;

        specialinvoke $r0.<android.widget.TableRow: void mapIndexAndColumns()>();

     label1:
        $r1 = $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        $i0 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>($i0, -1);

        if $i0 == -1 goto label2;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        return $r2;

     label2:
        return null;
    }

    public int getVirtualChildCount()
    {
        android.widget.TableRow $r0;
        android.util.SparseIntArray $r1;
        int i0;

        $r0 := @this: android.widget.TableRow;

        $r1 = $r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        if $r1 != null goto label1;

        specialinvoke $r0.<android.widget.TableRow: void mapIndexAndColumns()>();

     label1:
        i0 = $r0.<android.widget.TableRow: int mNumColumns>;

        return i0;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.TableRow $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r2, $r5;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.TableRow$LayoutParams $r4;
        boolean $z0;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r2 = $r0.<android.widget.TableRow: int[] mConstrainedColumnWidths>;

        if $r2 == null goto label8;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.TableRow$LayoutParams) $r3;

        $i2 = 1073741824;

        $i1 = 0;

        $i5 = $r4.<android.widget.TableRow$LayoutParams: int span>;

        $r2 = $r0.<android.widget.TableRow: int[] mConstrainedColumnWidths>;

        $i6 = 0;

     label1:
        if $i6 >= $i5 goto label2;

        $i7 = $i0 + $i6;

        $i7 = $r2[$i7];

        $i1 = $i1 + $i7;

        $i6 = $i6 + 1;

        goto label1;

     label2:
        $i0 = $r4.<android.widget.LinearLayout$LayoutParams: int gravity>;

        $z0 = staticinvoke <android.view.Gravity: boolean isHorizontal(int)>($i0);

        if $z0 == 0 goto label3;

        $i2 = -2147483648;

     label3:
        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i5 = $i1 - $i5;

        $i6 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i5 = $i5 - $i6;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, $i2);

        $i5 = $r0.<android.view.View: int mPaddingTop>;

        $i6 = $r0.<android.view.View: int mPaddingBottom>;

        $i5 = $i5 + $i6;

        $i6 = $r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i5 = $i5 + $i6;

        $i6 = $r4.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i5 = $i5 + $i6;

        $i4 = $i5 + $i4;

        $i5 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        $i3 = staticinvoke <android.widget.TableRow: int getChildMeasureSpec(int,int,int)>($i3, $i4, $i5);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i2, $i3);

        if $z0 == 0 goto label7;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $r2 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $i1 = $i1 - $i2;

        $r2[1] = $i1;

        $i0 = $i0 & 7;

        lookupswitch($i0)
        {
            case 1: goto label6;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label4;
        };

     label4:
        return;

     label5:
        $r2 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $r5 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $i0 = $r5[1];

        $r2[0] = $i0;

        return;

     label6:
        $r2 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $r5 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $i0 = $r5[1];

        $i0 = $i0 / 2;

        $r2[0] = $i0;

        return;

     label7:
        $r2 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $r5 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r4);

        $r5[1] = 0;

        $r2[0] = 0;

        return;

     label8:
        specialinvoke $r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r1, $i0, $i1, $i2, $i3, $i4);

        return;
    }

    int measureNullChild(int)
    {
        android.widget.TableRow $r0;
        int $i0;
        int[] $r1;

        $r0 := @this: android.widget.TableRow;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.TableRow: int[] mConstrainedColumnWidths>;

        $i0 = $r1[$i0];

        return $i0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TableRow $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.TableRow;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r0.<android.widget.LinearLayout: void layoutHorizontal()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TableRow $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TableRow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.widget.LinearLayout: void measureHorizontal(int,int)>($i0, $i1);

        return;
    }

    void setColumnCollapsed(int, boolean)
    {
        android.widget.TableRow $r0;
        int $i0;
        boolean $z0;
        android.view.View $r1;
        byte $b1;

        $r0 := @this: android.widget.TableRow;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.widget.TableRow: android.view.View getVirtualChildAt(int)>($i0);

        if $r1 == null goto label3;

        if $z0 == 0 goto label2;

        $b1 = 8;

     label1:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b1);

        return;

     label2:
        $b1 = 0;

        goto label1;

     label3:
        return;
    }

    void setColumnsWidthConstraints(int[])
    {
        android.widget.TableRow $r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: int[];

        if $r1 == null goto label1;

        $i1 = lengthof $r1;

        $i0 = virtualinvoke $r0.<android.widget.TableRow: int getVirtualChildCount()>();

        if $i1 >= $i0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("columnWidths should be >= getVirtualChildCount()");

        throw $r2;

     label2:
        $r0.<android.widget.TableRow: int[] mConstrainedColumnWidths> = $r1;

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.widget.TableRow $r0;
        android.view.ViewGroup$OnHierarchyChangeListener $r1;
        android.widget.TableRow$ChildrenTracker $r2;

        $r0 := @this: android.widget.TableRow;

        $r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        $r2 = $r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker>;

        staticinvoke <android.widget.TableRow$ChildrenTracker: void access$100(android.widget.TableRow$ChildrenTracker,android.view.ViewGroup$OnHierarchyChangeListener)>($r2, $r1);

        return;
    }
}
