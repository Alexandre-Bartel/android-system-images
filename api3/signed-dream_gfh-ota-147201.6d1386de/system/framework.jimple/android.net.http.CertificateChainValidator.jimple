class android.net.http.CertificateChainValidator extends java.lang.Object
{
    private static final android.net.http.CertificateChainValidator sInstance;
    private javax.net.ssl.X509TrustManager mDefaultTrustManager;

    static void <clinit>()
    {
        android.net.http.CertificateChainValidator $r0;

        $r0 = new android.net.http.CertificateChainValidator;

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void <init>()>();

        <android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator sInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.net.http.CertificateChainValidator $r0;
        int $i0, $i1;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager[] $r2;
        javax.net.ssl.TrustManager $r3;
        boolean $z0;
        javax.net.ssl.X509TrustManager $r4;
        java.lang.Exception $r5;

        $r0 := @this: android.net.http.CertificateChainValidator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>("X509");

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(null);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        if $r2 == null goto label09;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label10;

        $i0 = lengthof $r2;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label11;

        $r3 = $r2[$i1];

     label04:
        $z0 = $r3 instanceof javax.net.ssl.X509TrustManager;

     label05:
        if $z0 == 0 goto label07;

        $r4 = (javax.net.ssl.X509TrustManager) $r3;

        $r4 = (javax.net.ssl.X509TrustManager) $r4;

        $r0.<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager mDefaultTrustManager> = $r4;

     label06:
        return;

     label07:
        $i1 = $i1 + 1;

        goto label03;

     label08:
        $r5 := @caughtexception;

        return;

     label09:
        return;

     label10:
        return;

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label05 to label06 with label08;
    }

    private void closeSocketThrowException(javax.net.ssl.SSLSocket, java.lang.String) throws java.io.IOException
    {
        android.net.http.CertificateChainValidator $r0;
        javax.net.ssl.SSLSocket $r1;
        java.lang.String $r2;
        javax.net.ssl.SSLHandshakeException $r3;
        javax.net.ssl.SSLSession $r4;

        $r0 := @this: android.net.http.CertificateChainValidator;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label2;

        $r4 = virtualinvoke $r1.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        if $r4 == null goto label1;

        interfaceinvoke $r4.<javax.net.ssl.SSLSession: void invalidate()>();

     label1:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label2:
        $r3 = new javax.net.ssl.SSLHandshakeException;

        specialinvoke $r3.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    private void closeSocketThrowException(javax.net.ssl.SSLSocket, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.net.http.CertificateChainValidator $r0;
        javax.net.ssl.SSLSocket $r1;
        java.lang.String $r2, $r3;

        $r0 := @this: android.net.http.CertificateChainValidator;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        if $r2 == null goto label2;

     label1:
        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>($r1, $r2);

        return;

     label2:
        $r2 = $r3;

        goto label1;
    }

    public static android.net.http.CertificateChainValidator getInstance()
    {
        android.net.http.CertificateChainValidator r0;

        r0 = <android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator sInstance>;

        return r0;
    }

    public android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection, javax.net.ssl.SSLSocket, java.lang.String) throws java.io.IOException
    {
        android.net.http.CertificateChainValidator $r0;
        android.net.http.HttpsConnection $r1;
        javax.net.ssl.SSLSocket $r2;
        java.lang.String $r3, $r12;
        java.security.cert.X509Certificate[] $r4, $r5;
        javax.net.ssl.SSLSession $r6;
        java.security.cert.Certificate[] $r7;
        int $i0, $i1;
        java.security.cert.X509Certificate $r8, $r17;
        javax.net.ssl.X509TrustManager $r9;
        android.net.http.SslError $r10;
        java.io.IOException $r11;
        java.security.cert.Certificate $r13;
        android.net.http.SslCertificate $r14;
        boolean $z0;
        java.lang.StringBuilder $r15;
        java.security.cert.CertificateException $r16, $r22;
        java.security.Principal $r18, $r19;
        java.security.cert.CertificateExpiredException $r20, $r25;
        java.security.cert.CertificateNotYetValidException $r21, $r26;
        java.security.PublicKey $r23;
        java.security.GeneralSecurityException $r24;

        $r0 := @this: android.net.http.CertificateChainValidator;

        $r1 := @parameter0: android.net.http.HttpsConnection;

        $r2 := @parameter1: javax.net.ssl.SSLSocket;

        $r3 := @parameter2: java.lang.String;

        $r5 = null;

     label01:
        virtualinvoke $r2.<javax.net.ssl.SSLSocket: void setUseClientMode(boolean)>(1);

        virtualinvoke $r2.<javax.net.ssl.SSLSocket: void startHandshake()>();

     label02:
        $r6 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r7 = interfaceinvoke $r6.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        if $r7 == null goto label03;

        $i0 = lengthof $r7;

        if $i0 > 0 goto label09;

     label03:
        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>($r2, "failed to retrieve peer certificates");

     label04:
        $r8 = $r5[0];

        if $r8 != null goto label12;

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>($r2, "certificate for this site is null");

     label05:
        $r9 = $r0.<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager mDefaultTrustManager>;

     label06:
        interfaceinvoke $r9.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r5, "RSA");

     label07:
        return null;

     label08:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String,java.lang.String)>($r2, $r12, "failed to perform SSL handshake");

        goto label02;

     label09:
        $i0 = lengthof $r7;

        $r5 = newarray (java.security.cert.X509Certificate)[$i0];

        $i0 = 0;

     label10:
        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label11;

        $r13 = $r7[$i0];

        $r8 = (java.security.cert.X509Certificate) $r13;

        $r8 = (java.security.cert.X509Certificate) $r8;

        $r5[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label10;

     label11:
        if $r1 == null goto label04;

        $r8 = $r5[0];

        if $r8 == null goto label04;

        $r14 = new android.net.http.SslCertificate;

        $r8 = $r5[0];

        specialinvoke $r14.<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>($r8);

        virtualinvoke $r1.<android.net.http.HttpsConnection: void setCertificate(android.net.http.SslCertificate)>($r14);

        goto label04;

     label12:
        $z0 = staticinvoke <android.net.http.DomainNameChecker: boolean match(java.security.cert.X509Certificate,java.lang.String)>($r8, $r3);

        if $z0 != 0 goto label05;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate not for this host: ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        interfaceinvoke $r6.<javax.net.ssl.SSLSession: void invalidate()>();

        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(2, $r8);

        return $r10;

     label13:
        $r16 := @caughtexception;

        $r6 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        interfaceinvoke $r6.<javax.net.ssl.SSLSession: void invalidate()>();

        $r10 = null;

        $i0 = lengthof $r5;

        $i0 = $i0 - 1;

        $r8 = $r5[$i0];

        if $r8 != null goto label14;

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>($r2, "root certificate is null");

     label14:
        $r4 = newarray (java.security.cert.X509Certificate)[1];

        $r4[0] = $r8;

        $r9 = $r0.<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager mDefaultTrustManager>;

     label15:
        interfaceinvoke $r9.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r4, "RSA");

     label16:
        $i0 = lengthof $r5;

        $i0 = $i0 - 1;

        $r8 = $r5[$i0];

        $i0 = lengthof $r5;

        $i0 = $i0 - 2;

     label17:
        if $i0 < 0 goto label36;

        $r17 = $r5[$i0];

        if $r17 != null goto label18;

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>($r2, "null certificate in the chain");

     label18:
        $r18 = virtualinvoke $r8.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r19 = virtualinvoke $r17.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r18.<java.lang.Object: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label25;

        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(3, $r17);

        return $r10;

     label19:
        $r20 := @caughtexception;

        $r3 = virtualinvoke $r20.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r3 != null goto label20;

     label20:
        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(1, $r8);

        goto label16;

     label21:
        $r21 := @caughtexception;

        $r3 = virtualinvoke $r21.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r3 != null goto label22;

     label22:
        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(0, $r8);

        goto label16;

     label23:
        $r22 := @caughtexception;

        $r3 = virtualinvoke $r22.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r3 != null goto label24;

     label24:
        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(3, $r8);

        return $r10;

     label25:
        $r23 = virtualinvoke $r8.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        virtualinvoke $r17.<java.security.cert.Certificate: void verify(java.security.PublicKey)>($r23);

     label26:
        virtualinvoke $r17.<java.security.cert.X509Certificate: void checkValidity()>();

     label27:
        $r8 = $r17;

        $i0 = $i0 + -1;

        goto label17;

     label28:
        $r24 := @caughtexception;

        $r3 = virtualinvoke $r24.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r3 != null goto label29;

     label29:
        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(3, $r17);

        return $r10;

     label30:
        $r25 := @caughtexception;

        $r3 = virtualinvoke $r25.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r3 != null goto label31;

     label31:
        if $r10 == null goto label32;

        $i1 = virtualinvoke $r10.<android.net.http.SslError: int getPrimaryError()>();

        if $i1 >= 1 goto label27;

     label32:
        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(1, $r17);

        goto label27;

     label33:
        $r26 := @caughtexception;

        $r3 = virtualinvoke $r26.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r3 != null goto label34;

     label34:
        if $r10 == null goto label35;

        $i1 = virtualinvoke $r10.<android.net.http.SslError: int getPrimaryError()>();

        if $i1 >= 0 goto label27;

     label35:
        $r10 = new android.net.http.SslError;

        specialinvoke $r10.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(0, $r17);

        goto label27;

     label36:
        if $r10 != null goto label37;

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>($r2, "failed to pre-validate the certificate chain due to a non-standard error");

     label37:
        return $r10;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.security.cert.CertificateException from label06 to label07 with label13;
        catch java.security.cert.CertificateExpiredException from label15 to label16 with label19;
        catch java.security.cert.CertificateNotYetValidException from label15 to label16 with label21;
        catch java.security.cert.CertificateException from label15 to label16 with label23;
        catch java.security.GeneralSecurityException from label25 to label26 with label28;
        catch java.security.cert.CertificateExpiredException from label26 to label27 with label30;
        catch java.security.cert.CertificateNotYetValidException from label26 to label27 with label33;
    }
}
