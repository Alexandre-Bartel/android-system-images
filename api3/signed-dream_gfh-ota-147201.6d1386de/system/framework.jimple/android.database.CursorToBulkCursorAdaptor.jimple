public final class android.database.CursorToBulkCursorAdaptor extends android.database.BulkCursorNative implements android.os.IBinder$DeathRecipient
{
    private static final java.lang.String TAG;
    private final android.database.CrossProcessCursor mCursor;
    private android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver;
    private final java.lang.String mProviderName;
    private final boolean mReadOnly;
    private android.database.CursorWindow mWindow;

    public void <init>(android.database.Cursor, android.database.IContentObserver, java.lang.String, boolean, android.database.CursorWindow)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.Cursor $r1;
        android.database.IContentObserver $r2;
        java.lang.String $r3, $r8;
        boolean $z0, $z1;
        android.database.CursorWindow $r4;
        android.database.CrossProcessCursor $r5;
        android.database.AbstractWindowedCursor $r6;
        java.lang.StringBuilder $r7;
        java.lang.RuntimeException $r9;
        java.lang.ClassCastException $r10;
        java.lang.UnsupportedOperationException $r11;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: android.database.IContentObserver;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: android.database.CursorWindow;

        specialinvoke $r0.<android.database.BulkCursorNative: void <init>()>();

     label01:
        $r5 = (android.database.CrossProcessCursor) $r1;

     label02:
        $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor> = $r5;

        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z1 = $r5 instanceof android.database.AbstractWindowedCursor;

     label03:
        if $z1 == 0 goto label11;

        $r6 = (android.database.AbstractWindowedCursor) $r1;

        $z1 = virtualinvoke $r6.<android.database.AbstractWindowedCursor: boolean hasWindow()>();

        if $z1 == 0 goto label04;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Cursor", 2);

        if $z1 != 0 goto label07;

     label04:
        virtualinvoke $r6.<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>($r4);

     label05:
        $r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName> = $r3;

        if $z0 != 0 goto label14;

        $z0 = 1;

     label06:
        $r0.<android.database.CursorToBulkCursorAdaptor: boolean mReadOnly> = $z0;

        specialinvoke $r0.<android.database.CursorToBulkCursorAdaptor: void createAndRegisterObserverProxy(android.database.IContentObserver)>($r2);

        return;

     label07:
        $r7 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cross process cursor has a local window before setWindow in ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("Cursor", $r8, $r9);

     label09:
        goto label04;

     label10:
        $r10 := @caughtexception;

        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("Only CrossProcessCursor cursors are supported across process for now", $r10);

        throw $r11;

     label11:
        $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow> = $r4;

        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

     label12:
        interfaceinvoke $r5.<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>(0, $r4);

     label13:
        goto label05;

     label14:
        $z0 = 0;

        goto label06;

        catch java.lang.ClassCastException from label01 to label02 with label10;
        catch java.lang.ClassCastException from label03 to label05 with label10;
        catch java.lang.ClassCastException from label08 to label09 with label10;
        catch java.lang.ClassCastException from label12 to label13 with label10;
    }

    private void createAndRegisterObserverProxy(android.database.IContentObserver)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.IContentObserver $r1;
        android.database.CursorToBulkCursorAdaptor$ContentObserverProxy $r2;
        java.lang.IllegalStateException $r3;
        android.database.CrossProcessCursor $r4;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 := @parameter0: android.database.IContentObserver;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("an observer is already registered");

        throw $r3;

     label1:
        $r2 = new android.database.CursorToBulkCursorAdaptor$ContentObserverProxy;

        specialinvoke $r2.<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder$DeathRecipient)>($r1, $r0);

        $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver> = $r2;

        $r4 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        interfaceinvoke $r4.<android.database.CrossProcessCursor: void registerContentObserver(android.database.ContentObserver)>($r2);

        return;
    }

    private void maybeUnregisterObserverProxy()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.CursorToBulkCursorAdaptor$ContentObserverProxy $r1;
        android.database.CrossProcessCursor $r2;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        if $r1 == null goto label1;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void unregisterContentObserver(android.database.ContentObserver)>($r1);

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        virtualinvoke $r1.<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder$DeathRecipient)>($r0);

        $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver> = null;

        return;

     label1:
        return;
    }

    public void binderDied()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.CrossProcessCursor $r1;
        android.database.CursorWindow $r2;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r1.<android.database.CrossProcessCursor: void close()>();

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        virtualinvoke $r2.<android.database.CursorWindow: void close()>();

        return;

     label1:
        return;
    }

    public void close()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.CrossProcessCursor $r1;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        specialinvoke $r0.<android.database.CursorToBulkCursorAdaptor: void maybeUnregisterObserverProxy()>();

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r1.<android.database.CrossProcessCursor: void deactivate()>();

        return;
    }

    public int count()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        int $i0;
        android.database.CrossProcessCursor $r1;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: int getCount()>();

        return $i0;
    }

    public void deactivate()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.CrossProcessCursor $r1;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        specialinvoke $r0.<android.database.CursorToBulkCursorAdaptor: void maybeUnregisterObserverProxy()>();

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r1.<android.database.CrossProcessCursor: void deactivate()>();

        return;
    }

    public boolean deleteRow(int)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.database.CrossProcessCursor $r3;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $i0 := @parameter0: int;

        $z0 = $r0.<android.database.CursorToBulkCursorAdaptor: boolean mReadOnly>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: modifying ");

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentProvider", $r2);

        return 0;

     label1:
        $r3 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r3.<android.database.CrossProcessCursor: boolean moveToPosition(int)>($i0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r3.<android.database.CrossProcessCursor: boolean deleteRow()>();

        return $z0;
    }

    public java.lang.String[] getColumnNames()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        java.lang.String[] $r1;
        android.database.CrossProcessCursor $r2;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: java.lang.String[] getColumnNames()>();

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.os.Bundle $r1;
        android.database.CrossProcessCursor $r2;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: android.os.Bundle getExtras()>();

        return $r1;
    }

    public boolean getWantsAllOnMoveCalls()
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        boolean $z0;
        android.database.CrossProcessCursor $r1;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean getWantsAllOnMoveCalls()>();

        return $z0;
    }

    public android.database.CursorWindow getWindow(int)
    {
        int $i0, $i1, $i2;
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.CrossProcessCursor $r1;
        android.database.CursorWindow $r2;
        android.database.AbstractWindowedCursor $r3;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean moveToPosition(int)>($i0);

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        $i1 = virtualinvoke $r2.<android.database.CursorWindow: int getStartPosition()>();

        if $i0 < $i1 goto label1;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        $i1 = virtualinvoke $r2.<android.database.CursorWindow: int getStartPosition()>();

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        $i2 = virtualinvoke $r2.<android.database.CursorWindow: int getNumRows()>();

        $i1 = $i1 + $i2;

        if $i0 < $i1 goto label2;

     label1:
        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        interfaceinvoke $r1.<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>($i0, $r2);

     label2:
        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        return $r2;

     label3:
        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r3 = (android.database.AbstractWindowedCursor) $r1;

        $r2 = virtualinvoke $r3.<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>();

        return $r2;
    }

    public void onMove(int)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        int $i0, $i1;
        android.database.CrossProcessCursor $r1, $r2;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $i1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: int getPosition()>();

        interfaceinvoke $r1.<android.database.CrossProcessCursor: boolean onMove(int,int)>($i1, $i0);

        return;
    }

    public int requery(android.database.IContentObserver, android.database.CursorWindow)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.database.IContentObserver $r1;
        android.database.CursorWindow $r2, $r4;
        java.lang.IllegalStateException $r3, $r7;
        android.database.CrossProcessCursor $r5;
        android.database.AbstractWindowedCursor $r6;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        int $i0;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 := @parameter0: android.database.IContentObserver;

        $r2 := @parameter1: android.database.CursorWindow;

        $r4 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r4 != null goto label1;

        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r6 = (android.database.AbstractWindowedCursor) $r5;

        virtualinvoke $r6.<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>($r2);

     label1:
        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

     label2:
        $z0 = interfaceinvoke $r5.<android.database.CrossProcessCursor: boolean requery()>();

     label3:
        if $z0 != 0 goto label5;

        return -1;

     label4:
        $r7 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = $r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Requery misuse db, mCursor isClosed:");

        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r5.<android.database.CrossProcessCursor: boolean isClosed()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r7);

        throw $r3;

     label5:
        $r4 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r4 == null goto label6;

        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r5.<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>(0, $r2);

        $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mWindow> = $r2;

     label6:
        specialinvoke $r0.<android.database.CursorToBulkCursorAdaptor: void maybeUnregisterObserverProxy()>();

        specialinvoke $r0.<android.database.CursorToBulkCursorAdaptor: void createAndRegisterObserverProxy(android.database.IContentObserver)>($r1);

        $r5 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r5.<android.database.CrossProcessCursor: int getCount()>();

        return $i0;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

    public android.os.Bundle respond(android.os.Bundle)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        android.os.Bundle $r1;
        android.database.CrossProcessCursor $r2;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r1 = interfaceinvoke $r2.<android.database.CrossProcessCursor: android.os.Bundle respond(android.os.Bundle)>($r1);

        return $r1;
    }

    public boolean updateRows(java.util.Map)
    {
        android.database.CursorToBulkCursorAdaptor $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i0;
        android.database.CrossProcessCursor $r4;

        $r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 := @parameter0: java.util.Map;

        $z0 = $r0.<android.database.CursorToBulkCursorAdaptor: boolean mReadOnly>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: modifying ");

        $r3 = $r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentProvider", $r3);

        return 0;

     label1:
        $r4 = $r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r4.<android.database.CrossProcessCursor: boolean commitUpdates(java.util.Map)>($r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.database.CursorToBulkCursorAdaptor: java.lang.String TAG> = "Cursor";

        return;
    }
}
