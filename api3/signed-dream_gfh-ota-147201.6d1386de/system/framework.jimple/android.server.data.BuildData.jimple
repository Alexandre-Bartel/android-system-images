public class android.server.data.BuildData extends java.lang.Object
{
    private static final int VERSION;
    private final java.lang.String fingerprint;
    private final java.lang.String incrementalVersion;
    private final long time;

    public void <init>()
    {
        android.server.data.BuildData $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        long $l0;

        $r0 := @this: android.server.data.BuildData;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android:");

        $r2 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<android.server.data.BuildData: java.lang.String fingerprint> = $r2;

        $r2 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $r0.<android.server.data.BuildData: java.lang.String incrementalVersion> = $r2;

        $l0 = <android.os.Build: long TIME>;

        $l0 = $l0 / 1000L;

        $r0.<android.server.data.BuildData: long time> = $l0;

        return;
    }

    void <init>(java.io.DataInput) throws java.io.IOException
    {
        android.server.data.BuildData $r0;
        java.io.DataInput $r1;
        int $i0;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        long $l1;

        $r0 := @this: android.server.data.BuildData;

        $r1 := @parameter0: java.io.DataInput;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke $r1.<java.io.DataInput: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected 0. Got: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r4 = interfaceinvoke $r1.<java.io.DataInput: java.lang.String readUTF()>();

        $r0.<android.server.data.BuildData: java.lang.String fingerprint> = $r4;

        $l1 = interfaceinvoke $r1.<java.io.DataInput: long readLong()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r0.<android.server.data.BuildData: java.lang.String incrementalVersion> = $r4;

        $l1 = interfaceinvoke $r1.<java.io.DataInput: long readLong()>();

        $r0.<android.server.data.BuildData: long time> = $l1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, long)
    {
        android.server.data.BuildData $r0;
        java.lang.String $r1, $r2;
        long $l0;
        java.lang.Object $r3;

        $r0 := @this: android.server.data.BuildData;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Objects: java.lang.Object nonNull(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        $r0.<android.server.data.BuildData: java.lang.String fingerprint> = $r1;

        $r0.<android.server.data.BuildData: java.lang.String incrementalVersion> = $r2;

        $r0.<android.server.data.BuildData: long time> = $l0;

        return;
    }

    public java.lang.String getFingerprint()
    {
        android.server.data.BuildData $r0;
        java.lang.String r1;

        $r0 := @this: android.server.data.BuildData;

        r1 = $r0.<android.server.data.BuildData: java.lang.String fingerprint>;

        return r1;
    }

    public java.lang.String getIncrementalVersion()
    {
        android.server.data.BuildData $r0;
        java.lang.String r1;

        $r0 := @this: android.server.data.BuildData;

        r1 = $r0.<android.server.data.BuildData: java.lang.String incrementalVersion>;

        return r1;
    }

    public long getTime()
    {
        android.server.data.BuildData $r0;
        long l0;

        $r0 := @this: android.server.data.BuildData;

        l0 = $r0.<android.server.data.BuildData: long time>;

        return l0;
    }

    void write(java.io.DataOutput) throws java.io.IOException
    {
        android.server.data.BuildData $r0;
        java.io.DataOutput $r1;
        long $l0;
        java.lang.String $r2;
        java.lang.NumberFormatException $r3;

        $r0 := @this: android.server.data.BuildData;

        $r1 := @parameter0: java.io.DataOutput;

        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>(0);

        $r2 = $r0.<android.server.data.BuildData: java.lang.String fingerprint>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeUTF(java.lang.String)>($r2);

        $r2 = $r0.<android.server.data.BuildData: java.lang.String incrementalVersion>;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        interfaceinvoke $r1.<java.io.DataOutput: void writeLong(long)>($l0);

        $l0 = $r0.<android.server.data.BuildData: long time>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeLong(long)>($l0);

        return;

     label3:
        $r3 := @caughtexception;

        $l0 = -1L;

        goto label2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
