public final class android.os.ServiceManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.util.HashMap sCache;
    private static android.os.IServiceManager sServiceManager;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <android.os.ServiceManager: java.lang.String TAG> = "ServiceManager";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.os.ServiceManager: java.util.HashMap sCache> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.ServiceManager $r0;

        $r0 := @this: android.os.ServiceManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addService(java.lang.String, android.os.IBinder)
    {
        java.lang.String $r0;
        android.os.IBinder $r1;
        android.os.IServiceManager $r2;
        android.os.RemoteException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.os.IBinder;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        interfaceinvoke $r2.<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder)>($r0, $r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in addService", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.os.IBinder checkService(java.lang.String)
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        android.os.IBinder $r3;
        android.os.IServiceManager $r4;
        android.os.RemoteException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = <android.os.ServiceManager: java.util.HashMap sCache>;

     label1:
        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

     label2:
        $r3 = (android.os.IBinder) $r2;

     label3:
        if $r3 == null goto label5;

     label4:
        return $r3;

     label5:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r3 = interfaceinvoke $r4.<android.os.IServiceManager: android.os.IBinder checkService(java.lang.String)>($r0);

     label6:
        return $r3;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in checkService", $r5);

        return null;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    private static android.os.IServiceManager getIServiceManager()
    {
        android.os.IServiceManager $r0;
        android.os.IBinder $r1;

        $r0 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        if $r0 == null goto label1;

        $r0 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        return $r0;

     label1:
        $r1 = staticinvoke <com.android.internal.os.BinderInternal: android.os.IBinder getContextObject()>();

        $r0 = staticinvoke <android.os.ServiceManagerNative: android.os.IServiceManager asInterface(android.os.IBinder)>($r1);

        <android.os.ServiceManager: android.os.IServiceManager sServiceManager> = $r0;

        $r0 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        return $r0;
    }

    public static android.os.IBinder getService(java.lang.String)
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        android.os.IBinder $r3;
        android.os.IServiceManager $r4;
        android.os.RemoteException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = <android.os.ServiceManager: java.util.HashMap sCache>;

     label1:
        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

     label2:
        $r3 = (android.os.IBinder) $r2;

     label3:
        if $r3 == null goto label5;

     label4:
        return $r3;

     label5:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r3 = interfaceinvoke $r4.<android.os.IServiceManager: android.os.IBinder getService(java.lang.String)>($r0);

     label6:
        return $r3;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in getService", $r5);

        return null;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public static void initServiceCache(java.util.Map)
    {
        java.util.Map $r0;
        java.util.HashMap $r1;
        int $i0;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        $r0 := @parameter0: java.util.Map;

        $r1 = <android.os.ServiceManager: java.util.HashMap sCache>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        if $i0 == 0 goto label1;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setServiceCache may only be called once");

        throw $r2;

     label1:
        $r1 = <android.os.ServiceManager: java.util.HashMap sCache>;

        virtualinvoke $r1.<java.util.HashMap: void putAll(java.util.Map)>($r0);

        return;
    }

    public static java.lang.String[] listServices() throws android.os.RemoteException
    {
        android.os.IServiceManager $r0;
        java.lang.String[] $r1;
        android.os.RemoteException $r2;

     label1:
        $r0 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r1 = interfaceinvoke $r0.<android.os.IServiceManager: java.lang.String[] listServices()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in listServices", $r2);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
