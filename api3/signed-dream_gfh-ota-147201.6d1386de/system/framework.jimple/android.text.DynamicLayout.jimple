public class android.text.DynamicLayout extends android.text.Layout
{
    private static final int COLUMNS_ELLIPSIZE;
    private static final int COLUMNS_NORMAL;
    private static final int DESCENT;
    private static final int DIR;
    private static final int DIR_MASK;
    private static final int DIR_SHIFT;
    private static final int ELLIPSIS_COUNT;
    private static final int ELLIPSIS_START;
    private static final int ELLIPSIS_UNDEFINED;
    private static final int PRIORITY;
    private static final int START;
    private static final int START_MASK;
    private static final int TAB;
    private static final int TAB_MASK;
    private static final int TOP;
    private static java.lang.Object sLock;
    private static android.text.StaticLayout sStaticLayout;
    private java.lang.CharSequence mBase;
    private int mBottomPadding;
    private java.lang.CharSequence mDisplay;
    private boolean mEllipsize;
    private android.text.TextUtils$TruncateAt mEllipsizeAt;
    private int mEllipsizedWidth;
    private boolean mIncludePad;
    private android.text.PackedIntVector mInts;
    private android.text.PackedObjectVector mObjects;
    private int mTopPadding;
    private android.text.DynamicLayout$ChangeWatcher mWatcher;

    static void <clinit>()
    {
        android.text.StaticLayout $r0;
        java.lang.Object $r1;

        <android.text.DynamicLayout: int TOP> = 1;

        <android.text.DynamicLayout: int TAB_MASK> = 536870912;

        <android.text.DynamicLayout: int TAB> = 0;

        <android.text.DynamicLayout: int START_MASK> = 536870911;

        <android.text.DynamicLayout: int START> = 0;

        <android.text.DynamicLayout: int PRIORITY> = 128;

        <android.text.DynamicLayout: int ELLIPSIS_UNDEFINED> = -2147483648;

        <android.text.DynamicLayout: int ELLIPSIS_START> = 3;

        <android.text.DynamicLayout: int ELLIPSIS_COUNT> = 4;

        <android.text.DynamicLayout: int DIR_SHIFT> = 30;

        <android.text.DynamicLayout: int DIR_MASK> = -1073741824;

        <android.text.DynamicLayout: int DIR> = 0;

        <android.text.DynamicLayout: int DESCENT> = 2;

        <android.text.DynamicLayout: int COLUMNS_NORMAL> = 3;

        <android.text.DynamicLayout: int COLUMNS_ELLIPSIZE> = 5;

        $r0 = new android.text.StaticLayout;

        specialinvoke $r0.<android.text.StaticLayout: void <init>(boolean)>(1);

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.text.DynamicLayout: java.lang.Object sLock> = $r1;

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0;
        android.text.Layout$Alignment $r3;
        float $f0, $f1;
        boolean $z0;

        $r0 := @this: android.text.DynamicLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $z0 := @parameter6: boolean;

        specialinvoke $r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r1, $r1, $r2, $i0, $r3, $f0, $f1, $z0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout $r0;
        java.lang.CharSequence $r1, $r2;
        android.text.TextPaint $r3;
        int $i0;
        android.text.Layout$Alignment $r4;
        float $f0, $f1;
        boolean $z0;

        $r0 := @this: android.text.DynamicLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.CharSequence;

        $r3 := @parameter2: android.text.TextPaint;

        $i0 := @parameter3: int;

        $r4 := @parameter4: android.text.Layout$Alignment;

        $f0 := @parameter5: float;

        $f1 := @parameter6: float;

        $z0 := @parameter7: boolean;

        specialinvoke $r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>($r1, $r2, $r3, $i0, $r4, $f0, $f1, $z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout $r0;
        java.lang.CharSequence $r1, $r2, $r7;
        android.text.TextPaint $r3;
        int $i0, $i1;
        android.text.Layout$Alignment $r4;
        float $f0, $f1;
        boolean $z0, $z1;
        android.text.TextUtils$TruncateAt $r5;
        android.text.Layout$Directions[] $r6;
        android.text.PackedIntVector $r8;
        android.text.PackedObjectVector $r9;
        android.text.Layout$Ellipsizer $r10;
        int[] $r11, $r12;
        android.text.Layout$Directions $r13;
        android.graphics.Paint$FontMetricsInt $r14;
        android.text.DynamicLayout$ChangeWatcher $r15;
        android.text.Spannable $r16;
        java.lang.Object[] $r17;
        android.text.DynamicLayout$ChangeWatcher[] $r18;
        android.text.Layout$SpannedEllipsizer $r19;

        $r0 := @this: android.text.DynamicLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.CharSequence;

        $r3 := @parameter2: android.text.TextPaint;

        $i0 := @parameter3: int;

        $r4 := @parameter4: android.text.Layout$Alignment;

        $f0 := @parameter5: float;

        $f1 := @parameter6: float;

        $z0 := @parameter7: boolean;

        $r5 := @parameter8: android.text.TextUtils$TruncateAt;

        $i1 := @parameter9: int;

        if $r5 != null goto label07;

        $r7 = $r2;

     label01:
        specialinvoke $r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r7, $r3, $i0, $r4, $f0, $f1);

        $r0.<android.text.DynamicLayout: java.lang.CharSequence mBase> = $r1;

        $r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay> = $r2;

        if $r5 == null goto label09;

        $r8 = new android.text.PackedIntVector;

        specialinvoke $r8.<android.text.PackedIntVector: void <init>(int)>(5);

        $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = $r8;

        $r0.<android.text.DynamicLayout: int mEllipsizedWidth> = $i1;

        $r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = $r5;

     label02:
        $r9 = new android.text.PackedObjectVector;

        specialinvoke $r9.<android.text.PackedObjectVector: void <init>(int)>(1);

        $r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects> = $r9;

        $r0.<android.text.DynamicLayout: boolean mIncludePad> = $z0;

        if $r5 == null goto label03;

        $r2 = virtualinvoke $r0.<android.text.Layout: java.lang.CharSequence getText()>();

        $r10 = (android.text.Layout$Ellipsizer) $r2;

        $r10.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = $r0;

        $r10.<android.text.Layout$Ellipsizer: int mWidth> = $i1;

        $r10.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = $r5;

        $r0.<android.text.DynamicLayout: boolean mEllipsize> = 1;

     label03:
        if $r5 == null goto label10;

        $r11 = newarray (int)[5];

        $r12 = $r11;

        $r11[3] = -2147483648;

     label04:
        $r6 = newarray (android.text.Layout$Directions)[1];

        $r13 = <android.text.DynamicLayout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        $r6[0] = $r13;

        $r14 = virtualinvoke $r3.<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i0 = $r14.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i1 = $r14.<android.graphics.Paint$FontMetricsInt: int descent>;

        $r12[0] = 1073741824;

        $r12[1] = 0;

        $r12[2] = $i1;

        $r8 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r8.<android.text.PackedIntVector: void insertAt(int,int[])>(0, $r12);

        $i0 = $i1 - $i0;

        $r12[1] = $i0;

        $r8 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r8.<android.text.PackedIntVector: void insertAt(int,int[])>(1, $r12);

        $r9 = $r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        virtualinvoke $r9.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>(0, $r6);

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke $r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>($r1, 0, 0, $i0);

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label12;

        $r15 = $r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        if $r15 != null goto label05;

        $r15 = new android.text.DynamicLayout$ChangeWatcher;

        specialinvoke $r15.<android.text.DynamicLayout$ChangeWatcher: void <init>(android.text.DynamicLayout)>($r0);

        $r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher> = $r15;

     label05:
        $r16 = (android.text.Spannable) $r1;

        $i0 = interfaceinvoke $r16.<android.text.Spannable: int length()>();

        $r17 = interfaceinvoke $r16.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/DynamicLayout$ChangeWatcher");

        $r18 = (android.text.DynamicLayout$ChangeWatcher[]) $r17;

        $i0 = 0;

     label06:
        $i1 = lengthof $r18;

        if $i0 >= $i1 goto label11;

        $r15 = $r18[$i0];

        interfaceinvoke $r16.<android.text.Spannable: void removeSpan(java.lang.Object)>($r15);

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $z1 = $r2 instanceof android.text.Spanned;

        if $z1 == 0 goto label08;

        $r19 = new android.text.Layout$SpannedEllipsizer;

        specialinvoke $r19.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>($r2);

        $r7 = $r19;

        goto label01;

     label08:
        $r10 = new android.text.Layout$Ellipsizer;

        specialinvoke $r10.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>($r2);

        $r7 = $r10;

        goto label01;

     label09:
        $r8 = new android.text.PackedIntVector;

        specialinvoke $r8.<android.text.PackedIntVector: void <init>(int)>(3);

        $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = $r8;

        $r0.<android.text.DynamicLayout: int mEllipsizedWidth> = $i0;

        $r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = $r5;

        goto label02;

     label10:
        $r12 = newarray (int)[3];

        goto label04;

     label11:
        $r15 = $r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        interfaceinvoke $r16.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r15, 0, $i0, 8388626);

        return;

     label12:
        return;
    }

    static void access$000(android.text.DynamicLayout, java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: android.text.DynamicLayout;

        $r1 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        specialinvoke $r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        return;
    }

    private void dump(boolean)
    {
        android.text.DynamicLayout $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        $r0 := @this: android.text.DynamicLayout;

        $z0 := @parameter0: boolean;

        $i0 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("line ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i2 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineStart(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r0.<android.text.Layout: java.lang.CharSequence getText()>();

        $i2 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineStart(int)>($i1);

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i1);

        $r4 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i2, $i3);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.Object)>($r4);

     label2:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("");

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("");

        return;
    }

    private void reflow(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout $r0;
        java.lang.CharSequence $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;
        android.text.Spanned $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        android.text.StaticLayout $r6;
        android.text.TextPaint $r7;
        android.text.Layout$Alignment $r8;
        float $f0, $f1, $f2;
        android.text.TextUtils$TruncateAt $r9;
        android.text.PackedIntVector $r10;
        android.text.PackedObjectVector $r11;
        int[] $r12, $r13;
        android.text.Layout$Directions[] $r14;
        android.text.Layout$Directions $r15;
        java.lang.Throwable $r16, $r17;

        $r0 := @this: android.text.DynamicLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        if $r1 == $r2 goto label01;

        return;

     label01:
        $r1 = $r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

        $i3 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i4 = $i0 - 1;

        $i4 = staticinvoke <android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>($r1, 10, $i4);

        if $i4 >= 0 goto label08;

        $i4 = 0;

     label02:
        $i5 = $i0 - $i4;

        $i1 = $i1 + $i5;

        $i4 = $i2 + $i5;

        $i6 = $i0 - $i5;

        $i0 = $i6 + $i4;

        $i0 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>($r1, 10, $i0);

        if $i0 >= 0 goto label09;

        $i0 = $i3;

     label03:
        $i2 = $i6 + $i4;

        $i0 = $i0 - $i2;

        $i2 = $i1 + $i0;

        $i5 = $i4 + $i0;

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label11;

        $r3 = (android.text.Spanned) $r1;

     label04:
        $z0 = 0;

        $i0 = $i6 + $i5;

        $r4 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i6, $i0, class "android/text/style/WrapTogetherSpan");

        $i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label10;

        $r5 = $r4[$i0];

        $i4 = interfaceinvoke $r3.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r5);

        $r5 = $r4[$i0];

        $i1 = interfaceinvoke $r3.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r5);

        if $i4 >= $i6 goto label06;

        $z0 = 1;

        $i4 = $i6 - $i4;

        $i2 = $i2 + $i4;

        $i5 = $i5 + $i4;

        $i6 = $i6 - $i4;

     label06:
        $i4 = $i6 + $i5;

        if $i1 <= $i4 goto label07;

        $z0 = 1;

        $i4 = $i6 + $i5;

        $i1 = $i1 - $i4;

        $i2 = $i2 + $i1;

        $i5 = $i5 + $i1;

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $i4 = $i4 + 1;

        goto label02;

     label09:
        $i0 = $i0 + 1;

        goto label03;

     label10:
        if $z0 != 0 goto label04;

     label11:
        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i6);

        $i1 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineTop(int)>($i0);

        $i4 = $i6 + $i2;

        $i7 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i4);

        $i4 = $i6 + $i5;

        if $i4 != $i3 goto label12;

        $i7 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineCount()>();

     label12:
        $i8 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineTop(int)>($i7);

        $i4 = virtualinvoke $r0.<android.text.DynamicLayout: int getLineCount()>();

        if $i7 != $i4 goto label26;

        $z0 = 1;

     label13:
        $r5 = <android.text.DynamicLayout: java.lang.Object sLock>;

        entermonitor $r5;

     label14:
        $r6 = <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout>;

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = null;

        exitmonitor $r5;

     label15:
        if $r6 != null goto label16;

        $r6 = new android.text.StaticLayout;

        specialinvoke $r6.<android.text.StaticLayout: void <init>(boolean)>(1);

     label16:
        $i4 = $i6 + $i5;

        $r7 = virtualinvoke $r0.<android.text.Layout: android.text.TextPaint getPaint()>();

        $i9 = virtualinvoke $r0.<android.text.Layout: int getWidth()>();

        $r8 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Alignment getAlignment()>();

        $f0 = virtualinvoke $r0.<android.text.Layout: float getSpacingMultiplier()>();

        $f1 = virtualinvoke $r0.<android.text.Layout: float getSpacingAdd()>();

        $z1 = $r0.<android.text.DynamicLayout: boolean mEllipsize>;

        $i10 = $r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        $f2 = (float) $i10;

        $r9 = $r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        virtualinvoke $r6.<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,boolean,boolean,float,android.text.TextUtils$TruncateAt)>($r1, $i6, $i4, $r7, $i9, $r8, $f0, $f1, 0, 1, $z1, $f2, $r9);

        $i9 = virtualinvoke $r6.<android.text.StaticLayout: int getLineCount()>();

        $i4 = $i9;

        $i10 = $i6 + $i5;

        if $i10 == $i3 goto label17;

        $i3 = $i9 - 1;

        $i3 = virtualinvoke $r6.<android.text.StaticLayout: int getLineStart(int)>($i3);

        $i6 = $i6 + $i5;

        if $i3 != $i6 goto label17;

        $i4 = $i9 + -1;

     label17:
        $r10 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i3 = $i7 - $i0;

        virtualinvoke $r10.<android.text.PackedIntVector: void deleteAt(int,int)>($i0, $i3);

        $r11 = $r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i3 = $i7 - $i0;

        virtualinvoke $r11.<android.text.PackedObjectVector: void deleteAt(int,int)>($i0, $i3);

        $i9 = virtualinvoke $r6.<android.text.StaticLayout: int getLineTop(int)>($i4);

        $i7 = $i9;

        $i3 = 0;

        $i6 = 0;

        $z1 = $r0.<android.text.DynamicLayout: boolean mIncludePad>;

        if $z1 == 0 goto label18;

        if $i0 != 0 goto label18;

        $i7 = virtualinvoke $r6.<android.text.StaticLayout: int getTopPadding()>();

        $i3 = $i7;

        $r0.<android.text.DynamicLayout: int mTopPadding> = $i7;

        $i7 = $i9 - $i7;

     label18:
        $z1 = $r0.<android.text.DynamicLayout: boolean mIncludePad>;

        if $z1 == 0 goto label19;

        if $z0 == 0 goto label19;

        $i9 = virtualinvoke $r6.<android.text.StaticLayout: int getBottomPadding()>();

        $i6 = $i9;

        $r0.<android.text.DynamicLayout: int mBottomPadding> = $i9;

        $i7 = $i7 + $i9;

     label19:
        $r10 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i2 = $i5 - $i2;

        virtualinvoke $r10.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>($i0, 0, $i2);

        $r10 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i2 = $i1 - $i8;

        $i2 = $i2 + $i7;

        virtualinvoke $r10.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>($i0, 1, $i2);

        $z0 = $r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z0 == 0 goto label30;

        $r12 = newarray (int)[5];

        $r13 = $r12;

        $r12[3] = -2147483648;

     label20:
        $r14 = newarray (android.text.Layout$Directions)[1];

        $i2 = 0;

     label21:
        if $i2 >= $i4 goto label32;

        $i5 = virtualinvoke $r6.<android.text.StaticLayout: int getLineStart(int)>($i2);

        $i8 = virtualinvoke $r6.<android.text.StaticLayout: int getParagraphDirection(int)>($i2);

        $i8 = $i8 << 30;

        $i5 = $i5 | $i8;

        $z0 = virtualinvoke $r6.<android.text.StaticLayout: boolean getLineContainsTab(int)>($i2);

        if $z0 == 0 goto label31;

        $i8 = 536870912;

     label22:
        $i5 = $i5 | $i8;

        $r13[0] = $i5;

        $i5 = virtualinvoke $r6.<android.text.StaticLayout: int getLineTop(int)>($i2);

        $i5 = $i5 + $i1;

        if $i2 <= 0 goto label23;

        $i5 = $i5 - $i3;

     label23:
        $r13[1] = $i5;

        $i5 = virtualinvoke $r6.<android.text.StaticLayout: int getLineDescent(int)>($i2);

        $i8 = $i5;

        $i7 = $i4 - 1;

        if $i2 != $i7 goto label24;

        $i8 = $i5 + $i6;

     label24:
        $r13[2] = $i8;

        $r15 = virtualinvoke $r6.<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>($i2);

        $r14[0] = $r15;

        $z0 = $r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z0 == 0 goto label25;

        $i5 = virtualinvoke $r6.<android.text.StaticLayout: int getEllipsisStart(int)>($i2);

        $r13[3] = $i5;

        $i5 = virtualinvoke $r6.<android.text.StaticLayout: int getEllipsisCount(int)>($i2);

        $r13[4] = $i5;

     label25:
        $r10 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i5 = $i0 + $i2;

        virtualinvoke $r10.<android.text.PackedIntVector: void insertAt(int,int[])>($i5, $r13);

        $r11 = $r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i5 = $i0 + $i2;

        virtualinvoke $r11.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>($i5, $r14);

        $i2 = $i2 + 1;

        goto label21;

     label26:
        $z0 = 0;

        goto label13;

     label27:
        $r16 := @caughtexception;

     label28:
        exitmonitor $r5;

     label29:
        throw $r16;

     label30:
        $r13 = newarray (int)[3];

        goto label20;

     label31:
        $i8 = 0;

        goto label22;

     label32:
        $r5 = <android.text.DynamicLayout: java.lang.Object sLock>;

        entermonitor $r5;

     label33:
        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = $r6;

        exitmonitor $r5;

     label34:
        return;

     label35:
        $r17 := @caughtexception;

        exitmonitor $r5;

     label36:
        throw $r17;

        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label35 to label36 with label35;
    }

    public int getBottomPadding()
    {
        android.text.DynamicLayout $r0;
        int i0;

        $r0 := @this: android.text.DynamicLayout;

        i0 = $r0.<android.text.DynamicLayout: int mBottomPadding>;

        return i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>($i0, 4);

        return $i0;
    }

    public int getEllipsisStart(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>($i0, 3);

        return $i0;
    }

    public int getEllipsizedWidth()
    {
        android.text.DynamicLayout $r0;
        int i0;

        $r0 := @this: android.text.DynamicLayout;

        i0 = $r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        return i0;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.PackedIntVector $r1;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>($i0, 0);

        $i0 = $i0 & 536870912;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getLineCount()
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.PackedIntVector $r1;

        $r0 := @this: android.text.DynamicLayout;

        $r1 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int size()>();

        $i0 = $i0 - 1;

        return $i0;
    }

    public int getLineDescent(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.PackedIntVector $r1;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>($i0, 2);

        return $i0;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        int $i0;
        android.text.PackedObjectVector $r0;
        java.lang.Object $r1;
        android.text.DynamicLayout $r2;
        android.text.Layout$Directions $r3;

        $r2 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r0 = $r2.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $r1 = virtualinvoke $r0.<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>($i0, 0);

        $r3 = (android.text.Layout$Directions) $r1;

        return $r3;
    }

    public int getLineStart(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.PackedIntVector $r1;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>($i0, 0);

        $i0 = $i0 & 536870911;

        return $i0;
    }

    public int getLineTop(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.PackedIntVector $r1;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>($i0, 1);

        return $i0;
    }

    public int getParagraphDirection(int)
    {
        android.text.DynamicLayout $r0;
        int $i0;
        android.text.PackedIntVector $r1;

        $r0 := @this: android.text.DynamicLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>($i0, 0);

        $i0 = $i0 >> 30;

        return $i0;
    }

    public int getTopPadding()
    {
        android.text.DynamicLayout $r0;
        int i0;

        $r0 := @this: android.text.DynamicLayout;

        i0 = $r0.<android.text.DynamicLayout: int mTopPadding>;

        return i0;
    }
}
