public final class android.os.Message extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int MAX_POOL_SIZE;
    private static android.os.Message mPool;
    private static int mPoolSize;
    private static java.lang.Object mPoolSync;
    public int arg1;
    public int arg2;
    java.lang.Runnable callback;
    android.os.Bundle data;
    android.os.Message next;
    public java.lang.Object obj;
    public android.os.Messenger replyTo;
    android.os.Handler target;
    public int what;
    long when;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.os.Message$1 $r1;

        <android.os.Message: int MAX_POOL_SIZE> = 10;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.os.Message: java.lang.Object mPoolSync> = $r0;

        <android.os.Message: int mPoolSize> = 0;

        $r1 = new android.os.Message$1;

        specialinvoke $r1.<android.os.Message$1: void <init>()>();

        <android.os.Message: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.os.Message $r0;

        $r0 := @this: android.os.Message;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$000(android.os.Message, android.os.Parcel)
    {
        android.os.Message $r0;
        android.os.Parcel $r1;

        $r0 := @parameter0: android.os.Message;

        $r1 := @parameter1: android.os.Parcel;

        specialinvoke $r0.<android.os.Message: void readFromParcel(android.os.Parcel)>($r1);

        return;
    }

    public static android.os.Message obtain()
    {
        android.os.Message $r0, $r2;
        java.lang.Object $r1;
        java.lang.Throwable $r3;

        $r1 = <android.os.Message: java.lang.Object mPoolSync>;

        entermonitor $r1;

     label1:
        $r0 = <android.os.Message: android.os.Message mPool>;

        if $r0 == null goto label3;

        $r0 = <android.os.Message: android.os.Message mPool>;

        $r2 = $r0.<android.os.Message: android.os.Message next>;

        <android.os.Message: android.os.Message mPool> = $r2;

        $r0.<android.os.Message: android.os.Message next> = null;

        exitmonitor $r1;

     label2:
        return $r0;

     label3:
        exitmonitor $r1;

     label4:
        $r0 = new android.os.Message;

        specialinvoke $r0.<android.os.Message: void <init>()>();

        return $r0;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static android.os.Message obtain(android.os.Handler)
    {
        android.os.Handler $r0;
        android.os.Message $r1;

        $r0 := @parameter0: android.os.Handler;

        $r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r1.<android.os.Message: android.os.Handler target> = $r0;

        return $r1;
    }

    public static android.os.Message obtain(android.os.Handler, int)
    {
        android.os.Handler $r0;
        int $i0;
        android.os.Message $r1;

        $r0 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r1.<android.os.Message: android.os.Handler target> = $r0;

        $r1.<android.os.Message: int what> = $i0;

        return $r1;
    }

    public static android.os.Message obtain(android.os.Handler, int, int, int)
    {
        android.os.Handler $r0;
        int $i0, $i1, $i2;
        android.os.Message $r1;

        $r0 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r1.<android.os.Message: android.os.Handler target> = $r0;

        $r1.<android.os.Message: int what> = $i0;

        $r1.<android.os.Message: int arg1> = $i1;

        $r1.<android.os.Message: int arg2> = $i2;

        return $r1;
    }

    public static android.os.Message obtain(android.os.Handler, int, int, int, java.lang.Object)
    {
        android.os.Handler $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        android.os.Message $r2;

        $r0 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r2.<android.os.Message: android.os.Handler target> = $r0;

        $r2.<android.os.Message: int what> = $i0;

        $r2.<android.os.Message: int arg1> = $i1;

        $r2.<android.os.Message: int arg2> = $i2;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        return $r2;
    }

    public static android.os.Message obtain(android.os.Handler, int, java.lang.Object)
    {
        android.os.Handler $r0;
        int $i0;
        java.lang.Object $r1;
        android.os.Message $r2;

        $r0 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r2.<android.os.Message: android.os.Handler target> = $r0;

        $r2.<android.os.Message: int what> = $i0;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        return $r2;
    }

    public static android.os.Message obtain(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler $r0;
        java.lang.Runnable $r1;
        android.os.Message $r2;

        $r0 := @parameter0: android.os.Handler;

        $r1 := @parameter1: java.lang.Runnable;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r2.<android.os.Message: android.os.Handler target> = $r0;

        $r2.<android.os.Message: java.lang.Runnable callback> = $r1;

        return $r2;
    }

    public static android.os.Message obtain(android.os.Message)
    {
        android.os.Message $r0, $r2;
        android.os.Bundle $r1, $r5;
        int $i0;
        java.lang.Object $r3;
        android.os.Messenger $r4;
        android.os.Handler $r6;
        java.lang.Runnable $r7;

        $r0 := @parameter0: android.os.Message;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $i0 = $r0.<android.os.Message: int what>;

        $r2.<android.os.Message: int what> = $i0;

        $i0 = $r0.<android.os.Message: int arg1>;

        $r2.<android.os.Message: int arg1> = $i0;

        $i0 = $r0.<android.os.Message: int arg2>;

        $r2.<android.os.Message: int arg2> = $i0;

        $r3 = $r0.<android.os.Message: java.lang.Object obj>;

        $r2.<android.os.Message: java.lang.Object obj> = $r3;

        $r4 = $r0.<android.os.Message: android.os.Messenger replyTo>;

        $r2.<android.os.Message: android.os.Messenger replyTo> = $r4;

        $r1 = $r0.<android.os.Message: android.os.Bundle data>;

        if $r1 == null goto label1;

        $r5 = new android.os.Bundle;

        $r1 = $r0.<android.os.Message: android.os.Bundle data>;

        specialinvoke $r5.<android.os.Bundle: void <init>(android.os.Bundle)>($r1);

        $r2.<android.os.Message: android.os.Bundle data> = $r5;

     label1:
        $r6 = $r0.<android.os.Message: android.os.Handler target>;

        $r2.<android.os.Message: android.os.Handler target> = $r6;

        $r7 = $r0.<android.os.Message: java.lang.Runnable callback>;

        $r2.<android.os.Message: java.lang.Runnable callback> = $r7;

        return $r2;
    }

    private final void readFromParcel(android.os.Parcel)
    {
        android.os.Message $r0;
        android.os.Parcel $r1;
        int $i0;
        long $l1;
        android.os.Bundle $r2;
        android.os.Messenger $r3;

        $r0 := @this: android.os.Message;

        $r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.os.Message: int what> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.os.Message: int arg1> = $i0;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.os.Message: int arg2> = $i0;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<android.os.Message: long when> = $l1;

        $r2 = virtualinvoke $r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        $r0.<android.os.Message: android.os.Bundle data> = $r2;

        $r3 = staticinvoke <android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>($r1);

        $r0.<android.os.Message: android.os.Messenger replyTo> = $r3;

        return;
    }

    void clearForRecycle()
    {
        android.os.Message $r0;

        $r0 := @this: android.os.Message;

        $r0.<android.os.Message: int what> = 0;

        $r0.<android.os.Message: int arg1> = 0;

        $r0.<android.os.Message: int arg2> = 0;

        $r0.<android.os.Message: java.lang.Object obj> = null;

        $r0.<android.os.Message: android.os.Messenger replyTo> = null;

        $r0.<android.os.Message: long when> = 0L;

        $r0.<android.os.Message: android.os.Handler target> = null;

        $r0.<android.os.Message: java.lang.Runnable callback> = null;

        $r0.<android.os.Message: android.os.Bundle data> = null;

        return;
    }

    public void copyFrom(android.os.Message)
    {
        android.os.Message $r0, $r1;
        java.lang.Object $r2;
        int $i0;
        android.os.Messenger $r3;
        android.os.Bundle $r4;

        $r0 := @this: android.os.Message;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        $r0.<android.os.Message: int what> = $i0;

        $i0 = $r1.<android.os.Message: int arg1>;

        $r0.<android.os.Message: int arg1> = $i0;

        $i0 = $r1.<android.os.Message: int arg2>;

        $r0.<android.os.Message: int arg2> = $i0;

        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r0.<android.os.Message: java.lang.Object obj> = $r2;

        $r3 = $r1.<android.os.Message: android.os.Messenger replyTo>;

        $r0.<android.os.Message: android.os.Messenger replyTo> = $r3;

        $r4 = $r1.<android.os.Message: android.os.Bundle data>;

        if $r4 == null goto label1;

        $r4 = $r1.<android.os.Message: android.os.Bundle data>;

        $r2 = virtualinvoke $r4.<android.os.Bundle: java.lang.Object clone()>();

        $r4 = (android.os.Bundle) $r2;

        $r0.<android.os.Message: android.os.Bundle data> = $r4;

        return;

     label1:
        $r0.<android.os.Message: android.os.Bundle data> = null;

        return;
    }

    public int describeContents()
    {
        android.os.Message $r0;

        $r0 := @this: android.os.Message;

        return 0;
    }

    public java.lang.Runnable getCallback()
    {
        android.os.Message $r0;
        java.lang.Runnable r1;

        $r0 := @this: android.os.Message;

        r1 = $r0.<android.os.Message: java.lang.Runnable callback>;

        return r1;
    }

    public android.os.Bundle getData()
    {
        android.os.Message $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.os.Message;

        $r1 = $r0.<android.os.Message: android.os.Bundle data>;

        if $r1 != null goto label1;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $r0.<android.os.Message: android.os.Bundle data> = $r1;

     label1:
        $r1 = $r0.<android.os.Message: android.os.Bundle data>;

        return $r1;
    }

    public android.os.Handler getTarget()
    {
        android.os.Message $r0;
        android.os.Handler r1;

        $r0 := @this: android.os.Message;

        r1 = $r0.<android.os.Message: android.os.Handler target>;

        return r1;
    }

    public long getWhen()
    {
        android.os.Message $r0;
        long l0;

        $r0 := @this: android.os.Message;

        l0 = $r0.<android.os.Message: long when>;

        return l0;
    }

    public android.os.Bundle peekData()
    {
        android.os.Message $r0;
        android.os.Bundle r1;

        $r0 := @this: android.os.Message;

        r1 = $r0.<android.os.Message: android.os.Bundle data>;

        return r1;
    }

    public void recycle()
    {
        android.os.Message $r0, $r2;
        java.lang.Object $r1;
        int $i0;
        java.lang.Throwable $r3;

        $r0 := @this: android.os.Message;

        $r1 = <android.os.Message: java.lang.Object mPoolSync>;

        entermonitor $r1;

     label1:
        $i0 = <android.os.Message: int mPoolSize>;

        if $i0 >= 10 goto label2;

        virtualinvoke $r0.<android.os.Message: void clearForRecycle()>();

        $r2 = <android.os.Message: android.os.Message mPool>;

        $r0.<android.os.Message: android.os.Message next> = $r2;

        <android.os.Message: android.os.Message mPool> = $r0;

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void sendToTarget()
    {
        android.os.Message $r0;
        android.os.Handler $r1;

        $r0 := @this: android.os.Message;

        $r1 = $r0.<android.os.Message: android.os.Handler target>;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r0);

        return;
    }

    public void setData(android.os.Bundle)
    {
        android.os.Message $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.os.Message;

        $r1 := @parameter0: android.os.Bundle;

        $r0.<android.os.Message: android.os.Bundle data> = $r1;

        return;
    }

    public void setTarget(android.os.Handler)
    {
        android.os.Message $r0;
        android.os.Handler $r1;

        $r0 := @this: android.os.Message;

        $r1 := @parameter0: android.os.Handler;

        $r0.<android.os.Message: android.os.Handler target> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        android.os.Message $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;
        long $l1;
        java.lang.Object $r3;

        $r0 := @this: android.os.Message;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ what=");

        $i0 = $r0.<android.os.Message: int what>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when=");

        $l1 = $r0.<android.os.Message: long when>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $i0 = $r0.<android.os.Message: int arg1>;

        if $i0 == 0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arg1=");

        $i0 = $r0.<android.os.Message: int arg1>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label1:
        $i0 = $r0.<android.os.Message: int arg2>;

        if $i0 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arg2=");

        $i0 = $r0.<android.os.Message: int arg2>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label2:
        $r3 = $r0.<android.os.Message: java.lang.Object obj>;

        if $r3 == null goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" obj=");

        $r3 = $r0.<android.os.Message: java.lang.Object obj>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.Message $r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Runnable $r3;
        java.lang.RuntimeException $r4;
        long $l1;
        android.os.Bundle $r5;
        android.os.Messenger $r6;

        $r0 := @this: android.os.Message;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.os.Message: java.lang.Object obj>;

        if $r2 != null goto label1;

        $r3 = $r0.<android.os.Message: java.lang.Runnable callback>;

        if $r3 == null goto label2;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t marshal objects across processes.");

        throw $r4;

     label2:
        $i0 = $r0.<android.os.Message: int what>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<android.os.Message: int arg1>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = $r0.<android.os.Message: int arg2>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $l1 = $r0.<android.os.Message: long when>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l1);

        $r5 = $r0.<android.os.Message: android.os.Bundle data>;

        virtualinvoke $r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r5);

        $r6 = $r0.<android.os.Message: android.os.Messenger replyTo>;

        staticinvoke <android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>($r6, $r1);

        return;
    }
}
