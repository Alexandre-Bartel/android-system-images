class android.text.Layout$SpannedEllipsizer extends android.text.Layout$Ellipsizer implements android.text.Spanned
{
    private android.text.Spanned mSpanned;

    public void <init>(java.lang.CharSequence)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        java.lang.CharSequence $r1;
        android.text.Spanned $r2;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $r1 := @parameter0: java.lang.CharSequence;

        specialinvoke $r0.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>($r1);

        $r2 = (android.text.Spanned) $r1;

        $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned> = $r2;

        return;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        java.lang.Object $r1;
        int $i0;
        android.text.Spanned $r2;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r1);

        return $i0;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        java.lang.Object $r1;
        int $i0;
        android.text.Spanned $r2;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r1);

        return $i0;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        java.lang.Object $r1;
        int $i0;
        android.text.Spanned $r2;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r1);

        return $i0;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.Object[] $r2;
        android.text.Spanned $r3;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Class;

        $r3 = $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned>;

        $r2 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, $r1);

        return $r2;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        int $i0, $i1;
        java.lang.Class $r1;
        android.text.Spanned $r2;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Class;

        $r2 = $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>($i0, $i1, $r1);

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.Layout$SpannedEllipsizer $r0;
        int $i0, $i1, $i2;
        android.text.SpannableString $r1;
        char[] $r2;
        java.lang.String $r3;
        android.text.Spanned $r4;

        $r0 := @this: android.text.Layout$SpannedEllipsizer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 - $i0;

        $r2 = newarray (char)[$i2];

        virtualinvoke $r0.<android.text.Layout$Ellipsizer: void getChars(int,int,char[],int)>($i0, $i1, $r2, 0);

        $r1 = new android.text.SpannableString;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

        specialinvoke $r1.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r3);

        $r4 = $r0.<android.text.Layout$SpannedEllipsizer: android.text.Spanned mSpanned>;

        staticinvoke <android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>($r4, $i0, $i1, class "java/lang/Object", $r1, 0);

        return $r1;
    }
}
