public class android.widget.TextView extends android.view.View implements android.view.ViewTreeObserver$OnPreDrawListener
{
    private static final int ANIMATED_SCROLL_GAP;
    private static final int BLINK;
    static final boolean DEBUG_EXTRACT;
    private static final int DECIMAL;
    private static final android.text.Spanned EMPTY_SPANNED;
    private static final int EMS;
    static final int EXTRACT_NOTHING;
    static final int EXTRACT_UNKNOWN;
    private static final int ID_ADD_TO_DICTIONARY;
    private static final int ID_COPY;
    private static final int ID_COPY_URL;
    private static final int ID_CUT;
    private static final int ID_PASTE;
    private static final int ID_SELECT_ALL;
    private static final int ID_START_SELECTING_TEXT;
    private static final int ID_STOP_SELECTING_TEXT;
    private static final int ID_SWITCH_INPUT_METHOD;
    private static final int LINES;
    private static final int MONOSPACE;
    private static final android.text.InputFilter[] NO_FILTERS;
    private static final int PIXELS;
    private static final int PREDRAW_DONE;
    private static final int PREDRAW_NOT_REGISTERED;
    private static final int PREDRAW_PENDING;
    private static int PRIORITY;
    private static final int SANS;
    private static final int SERIF;
    private static final int SIGNED;
    static final java.lang.String TAG;
    private static final android.text.BoringLayout$Metrics UNKNOWN_BORING;
    private static final int VERY_WIDE;
    private static final android.graphics.RectF sTempRect;
    private int mAutoLinkMask;
    private android.widget.TextView$Blink mBlink;
    private android.text.BoringLayout$Metrics mBoring;
    private android.widget.TextView$BufferType mBufferType;
    private android.widget.TextView$ChangeWatcher mChangeWatcher;
    private android.widget.TextView$CharWrapper mCharWrapper;
    private int mCurHintTextColor;
    private int mCurTextColor;
    private boolean mCursorVisible;
    private int mDesiredHeightAtMeasure;
    private android.widget.TextView$Drawables mDrawables;
    private boolean mEatTouchRelease;
    private android.text.Editable$Factory mEditableFactory;
    private android.text.TextUtils$TruncateAt mEllipsize;
    private java.lang.CharSequence mError;
    private boolean mErrorWasChanged;
    private android.text.InputFilter[] mFilters;
    private boolean mFreezesText;
    private boolean mFrozenWithFocus;
    private int mGravity;
    private int mHighlightColor;
    private android.graphics.Paint mHighlightPaint;
    private android.graphics.Path mHighlightPath;
    private boolean mHighlightPathBogus;
    private java.lang.CharSequence mHint;
    private android.text.BoringLayout$Metrics mHintBoring;
    private android.text.Layout mHintLayout;
    private android.content.res.ColorStateList mHintTextColor;
    private boolean mHorizontallyScrolling;
    private boolean mIncludePad;
    private android.text.method.KeyListener mInput;
    android.widget.TextView$InputContentType mInputContentType;
    android.widget.TextView$InputMethodState mInputMethodState;
    private int mInputType;
    private long mLastScroll;
    private android.text.Layout mLayout;
    private android.content.res.ColorStateList mLinkTextColor;
    private boolean mLinksClickable;
    private java.util.ArrayList mListeners;
    private android.widget.TextView$Marquee mMarquee;
    private int mMarqueeRepeatLimit;
    private int mMaxMode;
    private int mMaxWidth;
    private int mMaxWidthMode;
    private int mMaximum;
    private int mMinMode;
    private int mMinWidth;
    private int mMinWidthMode;
    private int mMinimum;
    private android.text.method.MovementMethod mMovement;
    private android.widget.TextView$ErrorPopup mPopup;
    private int mPreDrawState;
    private boolean mRestartMarquee;
    private android.text.BoringLayout mSavedHintLayout;
    private android.text.BoringLayout mSavedLayout;
    private boolean mScrolled;
    private android.widget.Scroller mScroller;
    private boolean mSelectAllOnFocus;
    private boolean mSelectionMoved;
    private float mShadowDx;
    private float mShadowDy;
    private float mShadowRadius;
    private long mShowCursor;
    private boolean mShowErrorAfterAttach;
    private boolean mSingleLine;
    private float mSpacingAdd;
    private float mSpacingMult;
    private android.text.Spannable$Factory mSpannableFactory;
    private boolean mTemporaryDetach;
    private java.lang.CharSequence mText;
    private android.content.res.ColorStateList mTextColor;
    private android.text.TextPaint mTextPaint;
    private boolean mTouchFocusSelected;
    private android.text.method.TransformationMethod mTransformation;
    private java.lang.CharSequence mTransformed;

    static void <clinit>()
    {
        android.graphics.Paint $r0;
        android.text.BoringLayout$Metrics $r1;
        android.graphics.RectF $r2;
        android.text.InputFilter[] $r3;
        android.text.SpannedString $r4;

        <android.widget.TextView: int VERY_WIDE> = 16384;

        <android.widget.TextView: java.lang.String TAG> = "TextView";

        <android.widget.TextView: int SIGNED> = 2;

        <android.widget.TextView: int SERIF> = 2;

        <android.widget.TextView: int SANS> = 1;

        <android.widget.TextView: int PREDRAW_PENDING> = 1;

        <android.widget.TextView: int PREDRAW_NOT_REGISTERED> = 0;

        <android.widget.TextView: int PREDRAW_DONE> = 2;

        <android.widget.TextView: int PIXELS> = 2;

        <android.widget.TextView: int MONOSPACE> = 3;

        <android.widget.TextView: int LINES> = 1;

        <android.widget.TextView: int ID_SWITCH_INPUT_METHOD> = 16908324;

        <android.widget.TextView: int ID_STOP_SELECTING_TEXT> = 16908329;

        <android.widget.TextView: int ID_START_SELECTING_TEXT> = 16908328;

        <android.widget.TextView: int ID_SELECT_ALL> = 16908319;

        <android.widget.TextView: int ID_PASTE> = 16908322;

        <android.widget.TextView: int ID_CUT> = 16908320;

        <android.widget.TextView: int ID_COPY_URL> = 16908323;

        <android.widget.TextView: int ID_COPY> = 16908321;

        <android.widget.TextView: int ID_ADD_TO_DICTIONARY> = 16908330;

        <android.widget.TextView: int EXTRACT_UNKNOWN> = -1;

        <android.widget.TextView: int EXTRACT_NOTHING> = -2;

        <android.widget.TextView: int EMS> = 1;

        <android.widget.TextView: int DECIMAL> = 4;

        <android.widget.TextView: boolean DEBUG_EXTRACT> = 0;

        <android.widget.TextView: int BLINK> = 500;

        <android.widget.TextView: int ANIMATED_SCROLL_GAP> = 250;

        <android.widget.TextView: int PRIORITY> = 100;

        $r0 = new android.graphics.Paint;

        specialinvoke $r0.<android.graphics.Paint: void <init>()>();

        virtualinvoke $r0.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke $r0.<android.graphics.Paint: float measureText(java.lang.String)>("H");

        $r1 = new android.text.BoringLayout$Metrics;

        specialinvoke $r1.<android.text.BoringLayout$Metrics: void <init>()>();

        <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING> = $r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        <android.widget.TextView: android.graphics.RectF sTempRect> = $r2;

        $r3 = newarray (android.text.InputFilter)[0];

        <android.widget.TextView: android.text.InputFilter[] NO_FILTERS> = $r3;

        $r4 = new android.text.SpannedString;

        specialinvoke $r4.<android.text.SpannedString: void <init>(java.lang.CharSequence)>("");

        <android.widget.TextView: android.text.Spanned EMPTY_SPANNED> = $r4;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.TextView $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TextView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842884);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.TextView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.text.InputFilter$LengthFilter $r3;
        android.text.Editable$Factory $r4;
        android.text.Spannable$Factory $r5;
        android.widget.TextView$BufferType $r6, $r33;
        android.text.InputFilter[] $r7;
        android.text.TextPaint $r8;
        android.graphics.Paint $r9;
        android.text.method.MovementMethod $r10;
        int[] $r11;
        android.content.res.TypedArray $r12, $r16;
        android.content.res.ColorStateList $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.CharSequence $r17, $r18, $r23, $r24;
        android.graphics.drawable.Drawable $r19, $r20, $r21, $r22;
        float $f0, $f1, $f2, $f3;
        android.widget.TextView$InputContentType $r25, $r26;
        java.lang.String $r27;
        org.xmlpull.v1.XmlPullParserException $r28;
        java.io.IOException $r29;
        java.lang.Class $r30;
        java.lang.Object $r31;
        android.text.method.KeyListener $r32;
        android.text.method.PasswordTransformationMethod $r34;
        java.lang.ClassNotFoundException $r35;
        java.lang.RuntimeException $r36;
        java.lang.InstantiationException $r37;
        java.lang.IllegalAccessException $r38;
        java.lang.IncompatibleClassChangeError $r39;
        android.text.method.DigitsKeyListener $r40;
        android.text.method.DialerKeyListener $r41;
        short $s17;
        android.text.method.TextKeyListener$Capitalize $r42;
        android.text.method.TextKeyListener $r43;
        android.text.TextUtils$TruncateAt $r44;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<android.widget.TextView: boolean mEatTouchRelease> = 0;

        $r0.<android.widget.TextView: boolean mScrolled> = 0;

        $r4 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        $r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = $r4;

        $r5 = staticinvoke <android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>();

        $r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = $r5;

        $r0.<android.widget.TextView: int mPreDrawState> = 0;

        $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize> = null;

        $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper> = null;

        $r0.<android.widget.TextView: boolean mSelectionMoved> = 0;

        $r0.<android.widget.TextView: boolean mTouchFocusSelected> = 0;

        $r0.<android.widget.TextView: int mMarqueeRepeatLimit> = 3;

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        $r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = $r6;

        $r0.<android.widget.TextView: int mInputType> = 0;

        $r0.<android.widget.TextView: java.util.ArrayList mListeners> = null;

        $r0.<android.widget.TextView: int mHighlightColor> = -4465153;

        $r0.<android.widget.TextView: boolean mCursorVisible> = 1;

        $r0.<android.widget.TextView: boolean mSelectAllOnFocus> = 0;

        $r0.<android.widget.TextView: int mGravity> = 51;

        $r0.<android.widget.TextView: boolean mLinksClickable> = 1;

        $r0.<android.widget.TextView: float mSpacingMult> = 1.0F;

        $r0.<android.widget.TextView: float mSpacingAdd> = 0.0F;

        $r0.<android.widget.TextView: int mMaximum> = 2147483647;

        $r0.<android.widget.TextView: int mMaxMode> = 1;

        $r0.<android.widget.TextView: int mMinimum> = 0;

        $r0.<android.widget.TextView: int mMinMode> = 1;

        $r0.<android.widget.TextView: int mMaxWidth> = 2147483647;

        $r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        $r0.<android.widget.TextView: int mMinWidth> = 0;

        $r0.<android.widget.TextView: int mMinWidthMode> = 2;

        $r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

        $r0.<android.widget.TextView: boolean mIncludePad> = 1;

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $r0.<android.widget.TextView: android.widget.Scroller mScroller> = null;

        $r7 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        $r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = $r7;

        $r0.<android.widget.TextView: java.lang.CharSequence mText> = "";

        $r8 = new android.text.TextPaint;

        specialinvoke $r8.<android.text.TextPaint: void <init>(int)>(1);

        $r0.<android.widget.TextView: android.text.TextPaint mTextPaint> = $r8;

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint> = $r9;

        $r10 = virtualinvoke $r0.<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>();

        $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = $r10;

        $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = null;

        $r11 = <com.android.internal.R$styleable: int[] TextView>;

        $r12 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r11, $i0, 0);

        $i1 = 0;

        $r13 = null;

        $r14 = null;

        $r15 = null;

        $i2 = 15;

        $i3 = -1;

        $i4 = -1;

        $r16 = null;

        $i5 = virtualinvoke $r12.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        if $i5 == -1 goto label001;

        $r11 = <com.android.internal.R$styleable: int[] TextAppearance>;

        $r16 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i5, $r11);

     label001:
        if $r16 == null goto label012;

        $i5 = virtualinvoke $r16.<android.content.res.TypedArray: int getIndexCount()>();

        $i6 = 0;

     label002:
        if $i6 >= $i5 goto label011;

        $i7 = virtualinvoke $r16.<android.content.res.TypedArray: int getIndex(int)>($i6);

        lookupswitch($i7)
        {
            case 0: goto label008;
            case 1: goto label009;
            case 2: goto label010;
            case 3: goto label005;
            case 4: goto label004;
            case 5: goto label006;
            case 6: goto label007;
            default: goto label003;
        };

     label003:
        $i6 = $i6 + 1;

        goto label002;

     label004:
        $i1 = virtualinvoke $r16.<android.content.res.TypedArray: int getColor(int,int)>($i7, $i1);

        goto label003;

     label005:
        $r13 = virtualinvoke $r16.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i7);

        goto label003;

     label006:
        $r14 = virtualinvoke $r16.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i7);

        goto label003;

     label007:
        $r15 = virtualinvoke $r16.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i7);

        goto label003;

     label008:
        $i2 = virtualinvoke $r16.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i7, $i2);

        goto label003;

     label009:
        $i3 = virtualinvoke $r16.<android.content.res.TypedArray: int getInt(int,int)>($i7, -1);

        goto label003;

     label010:
        $i4 = virtualinvoke $r16.<android.content.res.TypedArray: int getInt(int,int)>($i7, -1);

        goto label003;

     label011:
        virtualinvoke $r16.<android.content.res.TypedArray: void recycle()>();

     label012:
        $z1 = virtualinvoke $r0.<android.widget.TextView: boolean getDefaultEditable()>();

        $r17 = null;

        $i8 = 0;

        $r18 = null;

        $z2 = 0;

        $z3 = 0;

        $i9 = -1;

        $i10 = 0;

        $z0 = 0;

        $r19 = null;

        $r20 = null;

        $r21 = null;

        $r22 = null;

        $i7 = 0;

        $i11 = -1;

        $z4 = 0;

        $i5 = -1;

        $r23 = "";

        $i6 = 0;

        $f0 = 0.0F;

        $f1 = 0.0F;

        $f2 = 0.0F;

        $z5 = 0;

        $i12 = 0;

        $i13 = virtualinvoke $r12.<android.content.res.TypedArray: int getIndexCount()>();

        $i14 = 0;

     label013:
        if $i14 >= $i13 goto label082;

        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getIndex(int)>($i14);

        lookupswitch($i15)
        {
            case 0: goto label059;
            case 1: goto label014;
            case 2: goto label064;
            case 3: goto label065;
            case 4: goto label066;
            case 5: goto label061;
            case 6: goto label060;
            case 7: goto label062;
            case 8: goto label063;
            case 9: goto label048;
            case 10: goto label043;
            case 11: goto label024;
            case 12: goto label025;
            case 13: goto label038;
            case 14: goto label032;
            case 15: goto label042;
            case 16: goto label036;
            case 17: goto label022;
            case 18: goto label045;
            case 19: goto label044;
            case 20: goto label053;
            case 21: goto label051;
            case 22: goto label031;
            case 23: goto label033;
            case 24: goto label034;
            case 25: goto label035;
            case 26: goto label037;
            case 27: goto label039;
            case 28: goto label040;
            case 29: goto label041;
            case 30: goto label046;
            case 31: goto label067;
            case 32: goto label047;
            case 33: goto label023;
            case 34: goto label050;
            case 35: goto label052;
            case 36: goto label055;
            case 37: goto label056;
            case 38: goto label057;
            case 39: goto label058;
            case 40: goto label017;
            case 41: goto label018;
            case 42: goto label019;
            case 43: goto label016;
            case 44: goto label021;
            case 45: goto label020;
            case 46: goto label015;
            case 47: goto label054;
            case 48: goto label027;
            case 49: goto label029;
            case 50: goto label026;
            case 51: goto label028;
            case 52: goto label030;
            case 53: goto label068;
            case 54: goto label069;
            case 55: goto label049;
            case 56: goto label070;
            case 57: goto label077;
            case 58: goto label078;
            case 59: goto label071;
            case 60: goto label073;
            case 61: goto label075;
            default: goto label014;
        };

     label014:
        $i14 = $i14 + 1;

        goto label013;

     label015:
        $z1 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z1);

        goto label014;

     label016:
        $r17 = virtualinvoke $r12.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i15);

        goto label014;

     label017:
        $i8 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i8);

        goto label014;

     label018:
        $r18 = virtualinvoke $r12.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i15);

        goto label014;

     label019:
        $z2 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z2);

        goto label014;

     label020:
        $z3 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z3);

        goto label014;

     label021:
        $i9 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i9);

        goto label014;

     label022:
        $i10 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i10);

        goto label014;

     label023:
        $z0 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z0);

        goto label014;

     label024:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, 0);

        $r0.<android.widget.TextView: int mAutoLinkMask> = $i15;

        goto label014;

     label025:
        $z6 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, 1);

        $r0.<android.widget.TextView: boolean mLinksClickable> = $z6;

        goto label014;

     label026:
        $r19 = virtualinvoke $r12.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i15);

        goto label014;

     label027:
        $r20 = virtualinvoke $r12.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i15);

        goto label014;

     label028:
        $r21 = virtualinvoke $r12.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i15);

        goto label014;

     label029:
        $r22 = virtualinvoke $r12.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i15);

        goto label014;

     label030:
        $i7 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, $i7);

        goto label014;

     label031:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMaxLines(int)>($i15);

        goto label014;

     label032:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMaxHeight(int)>($i15);

        goto label014;

     label033:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setLines(int)>($i15);

        goto label014;

     label034:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setHeight(int)>($i15);

        goto label014;

     label035:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMinLines(int)>($i15);

        goto label014;

     label036:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMinHeight(int)>($i15);

        goto label014;

     label037:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMaxEms(int)>($i15);

        goto label014;

     label038:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMaxWidth(int)>($i15);

        goto label014;

     label039:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setEms(int)>($i15);

        goto label014;

     label040:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setWidth(int)>($i15);

        goto label014;

     label041:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMinEms(int)>($i15);

        goto label014;

     label042:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setMinWidth(int)>($i15);

        goto label014;

     label043:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        virtualinvoke $r0.<android.widget.TextView: void setGravity(int)>($i15);

        goto label014;

     label044:
        $r24 = virtualinvoke $r12.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i15);

        virtualinvoke $r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>($r24);

        goto label014;

     label045:
        $r23 = virtualinvoke $r12.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i15);

        goto label014;

     label046:
        $z6 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, 0);

        if $z6 == 0 goto label014;

        virtualinvoke $r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        goto label014;

     label047:
        $z4 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z4);

        goto label014;

     label048:
        $i11 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i11);

        goto label014;

     label049:
        $i16 = $r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i16);

        virtualinvoke $r0.<android.widget.TextView: void setMarqueeRepeatLimit(int)>($i15);

        goto label014;

     label050:
        $z6 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, 1);

        if $z6 != 0 goto label014;

        virtualinvoke $r0.<android.widget.TextView: void setIncludeFontPadding(boolean)>(0);

        goto label014;

     label051:
        $z6 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, 1);

        if $z6 != 0 goto label014;

        virtualinvoke $r0.<android.widget.TextView: void setCursorVisible(boolean)>(0);

        goto label014;

     label052:
        $i5 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, -1);

        goto label014;

     label053:
        $f3 = virtualinvoke $r12.<android.content.res.TypedArray: float getFloat(int,float)>($i15, 1.0F);

        virtualinvoke $r0.<android.widget.TextView: void setTextScaleX(float)>($f3);

        goto label014;

     label054:
        $z6 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, 0);

        $r0.<android.widget.TextView: boolean mFreezesText> = $z6;

        goto label014;

     label055:
        $i6 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, 0);

        goto label014;

     label056:
        $f0 = virtualinvoke $r12.<android.content.res.TypedArray: float getFloat(int,float)>($i15, 0.0F);

        goto label014;

     label057:
        $f1 = virtualinvoke $r12.<android.content.res.TypedArray: float getFloat(int,float)>($i15, 0.0F);

        goto label014;

     label058:
        $f2 = virtualinvoke $r12.<android.content.res.TypedArray: float getFloat(int,float)>($i15, 0.0F);

        goto label014;

     label059:
        $z6 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        $z6 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z6);

        virtualinvoke $r0.<android.view.View: void setEnabled(boolean)>($z6);

        goto label014;

     label060:
        $i1 = virtualinvoke $r12.<android.content.res.TypedArray: int getColor(int,int)>($i15, $i1);

        goto label014;

     label061:
        $r13 = virtualinvoke $r12.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i15);

        goto label014;

     label062:
        $r14 = virtualinvoke $r12.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i15);

        goto label014;

     label063:
        $r15 = virtualinvoke $r12.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i15);

        goto label014;

     label064:
        $i2 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, $i2);

        goto label014;

     label065:
        $i3 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i3);

        goto label014;

     label066:
        $i4 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i4);

        goto label014;

     label067:
        $z5 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i15, $z5);

        goto label014;

     label068:
        $f3 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $i16 = (int) $f3;

        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i15, $i16);

        $f3 = (float) $i15;

        $r0.<android.widget.TextView: float mSpacingAdd> = $f3;

        goto label014;

     label069:
        $f3 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f3 = virtualinvoke $r12.<android.content.res.TypedArray: float getFloat(int,float)>($i15, $f3);

        $r0.<android.widget.TextView: float mSpacingMult> = $f3;

        goto label014;

     label070:
        $i12 = $r0.<android.widget.TextView: int mInputType>;

        $i12 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i12);

        goto label014;

     label071:
        $r25 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r25 != null goto label072;

        $r25 = new android.widget.TextView$InputContentType;

        specialinvoke $r25.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r25;

     label072:
        $r25 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r26 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $i16 = $r26.<android.widget.TextView$InputContentType: int imeOptions>;

        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i16);

        $r25.<android.widget.TextView$InputContentType: int imeOptions> = $i15;

        goto label014;

     label073:
        $r25 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r25 != null goto label074;

        $r25 = new android.widget.TextView$InputContentType;

        specialinvoke $r25.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r25;

     label074:
        $r25 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r24 = virtualinvoke $r12.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i15);

        $r25.<android.widget.TextView$InputContentType: java.lang.CharSequence imeActionLabel> = $r24;

        goto label014;

     label075:
        $r25 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r25 != null goto label076;

        $r25 = new android.widget.TextView$InputContentType;

        specialinvoke $r25.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r25;

     label076:
        $r25 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r26 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $i16 = $r26.<android.widget.TextView$InputContentType: int imeActionId>;

        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getInt(int,int)>($i15, $i16);

        $r25.<android.widget.TextView$InputContentType: int imeActionId> = $i15;

        goto label014;

     label077:
        $r27 = virtualinvoke $r12.<android.content.res.TypedArray: java.lang.String getString(int)>($i15);

        virtualinvoke $r0.<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>($r27);

        goto label014;

     label078:
        $i15 = virtualinvoke $r12.<android.content.res.TypedArray: int getResourceId(int,int)>($i15, 0);

        virtualinvoke $r0.<android.widget.TextView: void setInputExtras(int)>($i15);

     label079:
        goto label014;

     label080:
        $r28 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", $r28);

        goto label014;

     label081:
        $r29 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", $r29);

        goto label014;

     label082:
        virtualinvoke $r12.<android.content.res.TypedArray: void recycle()>();

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        $i13 = $i12 & 4095;

        if $i13 != 129 goto label083;

        $z5 = 1;

     label083:
        if $r17 == null goto label108;

     label084:
        $r27 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        $r30 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r27);

     label085:
        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.Object newInstance()>();

     label086:
        $r32 = (android.text.method.KeyListener) $r31;

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r32;

        if $i12 == 0 goto label105;

        $i8 = $i12;

     label087:
        $r0.<android.widget.TextView: int mInputType> = $i8;

     label088:
        if $z5 == 0 goto label089;

        $i8 = $r0.<android.widget.TextView: int mInputType>;

        $i8 = $i8 & 15;

        if $i8 != 1 goto label089;

        $i8 = $r0.<android.widget.TextView: int mInputType>;

        $i8 = $i8 & -4081;

        $i8 = $i8 | 128;

        $r0.<android.widget.TextView: int mInputType> = $i8;

     label089:
        if $z0 == 0 goto label090;

        $r0.<android.widget.TextView: boolean mSelectAllOnFocus> = 1;

        $r33 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        if $r6 != $r33 goto label090;

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

     label090:
        virtualinvoke $r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r19, $r20, $r21, $r22);

        virtualinvoke $r0.<android.widget.TextView: void setCompoundDrawablePadding(int)>($i7);

        if $z4 == 0 goto label091;

        virtualinvoke $r0.<android.widget.TextView: void setSingleLine()>();

        $r32 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r32 != null goto label091;

        if $i11 >= 0 goto label091;

        $i11 = 3;

     label091:
        lookupswitch($i11)
        {
            case 1: goto label134;
            case 2: goto label135;
            case 3: goto label136;
            case 4: goto label137;
            default: goto label092;
        };

     label092:
        if $r13 == null goto label138;

     label093:
        virtualinvoke $r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r13);

        virtualinvoke $r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>($r14);

        virtualinvoke $r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>($r15);

        if $i1 == 0 goto label094;

        virtualinvoke $r0.<android.widget.TextView: void setHighlightColor(int)>($i1);

     label094:
        $f3 = (float) $i2;

        specialinvoke $r0.<android.widget.TextView: void setRawTextSize(float)>($f3);

        if $z5 == 0 goto label139;

        $r34 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke $r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r34);

        $i3 = 3;

     label095:
        specialinvoke $r0.<android.widget.TextView: void setTypefaceByIndex(int,int)>($i3, $i4);

        if $i6 == 0 goto label096;

        virtualinvoke $r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>($f2, $f0, $f1, $i6);

     label096:
        if $i5 < 0 goto label140;

        $r7 = newarray (android.text.InputFilter)[1];

        $r3 = new android.text.InputFilter$LengthFilter;

        specialinvoke $r3.<android.text.InputFilter$LengthFilter: void <init>(int)>($i5);

        $r7[0] = $r3;

        virtualinvoke $r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r7);

     label097:
        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r23, $r6);

        $r11 = <com.android.internal.R$styleable: int[] View>;

        $r12 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r11, $i0, 0);

        $r10 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r10 != null goto label098;

        $r32 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r32 == null goto label141;

     label098:
        $z0 = 1;

     label099:
        $z4 = $z0;

        $z5 = $z0;

        $i0 = virtualinvoke $r12.<android.content.res.TypedArray: int getIndexCount()>();

        $i3 = 0;

     label100:
        if $i3 >= $i0 goto label145;

        $i4 = virtualinvoke $r12.<android.content.res.TypedArray: int getIndex(int)>($i3);

        lookupswitch($i4)
        {
            case 18: goto label142;
            case 29: goto label143;
            case 30: goto label144;
            default: goto label101;
        };

     label101:
        $i3 = $i3 + 1;

        goto label100;

     label102:
        $r35 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r35);

        throw $r36;

     label103:
        $r37 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r37);

        throw $r36;

     label104:
        $r38 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r38);

        throw $r36;

     label105:
        $r32 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $i8 = interfaceinvoke $r32.<android.text.method.KeyListener: int getInputType()>();

     label106:
        goto label087;

     label107:
        $r39 := @caughtexception;

        $r0.<android.widget.TextView: int mInputType> = 1;

        goto label088;

     label108:
        if $r18 == null goto label109;

        $r27 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r40 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>($r27);

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r40;

        $r0.<android.widget.TextView: int mInputType> = $i12;

        goto label088;

     label109:
        if $i12 == 0 goto label112;

        specialinvoke $r0.<android.widget.TextView: void setInputType(int,boolean)>($i12, 1);

        $i8 = 131087 & $i12;

        if $i8 == 131073 goto label111;

        $z4 = 1;

     label110:
        goto label088;

     label111:
        $z4 = 0;

        goto label110;

     label112:
        if $z2 == 0 goto label113;

        $r41 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r41;

        $r0.<android.widget.TextView: int mInputType> = 3;

        goto label088;

     label113:
        if $i8 == 0 goto label120;

        $i9 = $i8 & 2;

        if $i9 == 0 goto label118;

        $z1 = 1;

     label114:
        $i9 = $i8 & 4;

        if $i9 == 0 goto label119;

        $z2 = 1;

     label115:
        $r40 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>($z1, $z2);

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r40;

        $s17 = 2;

        $i9 = $i8 & 2;

        if $i9 == 0 goto label116;

        $s17 = 2 | 4096;

     label116:
        $i8 = $i8 & 4;

        if $i8 == 0 goto label117;

        $s17 = $s17 | 8192;

     label117:
        $r0.<android.widget.TextView: int mInputType> = $s17;

        goto label088;

     label118:
        $z1 = 0;

        goto label114;

     label119:
        $z2 = 0;

        goto label115;

     label120:
        if $z3 != 0 goto label121;

        if $i9 == -1 goto label128;

     label121:
        $i8 = 1;

        if $z4 != 0 goto label122;

        $i8 = 1 | 131072;

     label122:
        lookupswitch($i9)
        {
            case 1: goto label125;
            case 2: goto label126;
            case 3: goto label127;
            default: goto label123;
        };

     label123:
        $r42 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

     label124:
        $r43 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>($z3, $r42);

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r43;

        $r0.<android.widget.TextView: int mInputType> = $i8;

        goto label088;

     label125:
        $r42 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        $i8 = $i8 | 16384;

        goto label124;

     label126:
        $r42 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        $i8 = $i8 | 8192;

        goto label124;

     label127:
        $r42 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

        $i8 = $i8 | 4096;

        goto label124;

     label128:
        if $z1 == 0 goto label129;

        $r43 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r43;

        $r0.<android.widget.TextView: int mInputType> = 1;

        goto label088;

     label129:
        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = null;

        lookupswitch($i10)
        {
            case 0: goto label131;
            case 1: goto label132;
            case 2: goto label133;
            default: goto label130;
        };

     label130:
        goto label088;

     label131:
        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        goto label088;

     label132:
        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label088;

     label133:
        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        goto label088;

     label134:
        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        virtualinvoke $r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r44);

        goto label092;

     label135:
        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MIDDLE>;

        virtualinvoke $r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r44);

        goto label092;

     label136:
        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r44);

        goto label092;

     label137:
        virtualinvoke $r0.<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke $r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r44);

        goto label092;

     label138:
        $r13 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-16777216);

        goto label093;

     label139:
        $i1 = $r0.<android.widget.TextView: int mInputType>;

        $i1 = $i1 & 4095;

        if $i1 != 129 goto label095;

        $i3 = 3;

        goto label095;

     label140:
        $r7 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        virtualinvoke $r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r7);

        goto label097;

     label141:
        $z0 = 0;

        goto label099;

     label142:
        $z0 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i4, $z0);

        goto label101;

     label143:
        $z4 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i4, $z4);

        goto label101;

     label144:
        $z5 = virtualinvoke $r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i4, $z5);

        goto label101;

     label145:
        virtualinvoke $r12.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke $r0.<android.view.View: void setFocusable(boolean)>($z0);

        virtualinvoke $r0.<android.view.View: void setClickable(boolean)>($z4);

        virtualinvoke $r0.<android.view.View: void setLongClickable(boolean)>($z5);

        return;

        catch org.xmlpull.v1.XmlPullParserException from label078 to label079 with label080;
        catch java.io.IOException from label078 to label079 with label081;
        catch java.lang.ClassNotFoundException from label084 to label085 with label102;
        catch java.lang.InstantiationException from label085 to label086 with label103;
        catch java.lang.IllegalAccessException from label085 to label086 with label104;
        catch java.lang.IncompatibleClassChangeError from label087 to label088 with label107;
        catch java.lang.IncompatibleClassChangeError from label105 to label106 with label107;
    }

    static android.text.Layout access$300(android.widget.TextView)
    {
        android.widget.TextView $r0;
        android.text.Layout r1;

        $r0 := @parameter0: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        return r1;
    }

    static void access$400(android.widget.TextView, java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: android.widget.TextView;

        $r1 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        specialinvoke $r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        return;
    }

    static java.lang.CharSequence access$500(android.widget.TextView)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return r1;
    }

    static void access$600(android.widget.TextView)
    {
        android.widget.TextView $r0;

        $r0 := @parameter0: android.widget.TextView;

        specialinvoke $r0.<android.widget.TextView: void invalidateCursorPath()>();

        return;
    }

    private void applySingleLine(boolean, boolean)
    {
        android.widget.TextView $r0;
        boolean $z0, $z1;
        android.text.method.SingleLineTransformationMethod $r1;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r0.<android.widget.TextView: boolean mSingleLine> = $z0;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.widget.TextView: void setLines(int)>(1);

        virtualinvoke $r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        if $z1 == 0 goto label2;

        $r1 = staticinvoke <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>();

        virtualinvoke $r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        return;

     label1:
        virtualinvoke $r0.<android.widget.TextView: void setMaxLines(int)>(2147483647);

        virtualinvoke $r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(0);

        if $z1 == 0 goto label3;

        virtualinvoke $r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

        return;

     label2:
        return;

     label3:
        return;
    }

    private void assumeLayout()
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.text.BoringLayout$Metrics $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i1 = $i0 - $i1;

        if $i1 >= 1 goto label1;

        $i1 = 0;

     label1:
        $i0 = $i1;

        $z0 = $r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z0 == 0 goto label2;

        $i1 = 16384;

     label2:
        $r2 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        virtualinvoke $r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>($i1, $i0, $r2, $r1, $i0, 0);

        return;
    }

    private boolean bringTextIntoView()
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.text.Layout $r1;
        android.text.Layout$Alignment $r2, $r3;
        float $f0;

        $r0 := @this: android.widget.TextView;

        $i3 = 0;

        $i4 = $r0.<android.widget.TextView: int mGravity>;

        $i4 = $i4 & 112;

        if $i4 != 80 goto label01;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        $i3 = $i3 - 1;

     label01:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r2 = virtualinvoke $r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>($i3);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r1.<android.text.Layout: int getParagraphDirection(int)>($i3);

        $i0 = $r0.<android.view.View: int mRight>;

        $i2 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i2;

        $i2 = $r0.<android.view.View: int mBottom>;

        $i5 = $r0.<android.view.View: int mTop>;

        $i2 = $i2 - $i5;

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = $i2 - $i5;

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i2 = $i2 - $i5;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i5 = virtualinvoke $r1.<android.text.Layout: int getHeight()>();

        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if $r2 != $r3 goto label07;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineLeft(int)>($i3);

        $f0 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        $i1 = (int) $f0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineRight(int)>($i3);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i3 = (int) $f0;

        $i6 = $i3 - $i1;

        if $i6 >= $i0 goto label05;

        $i3 = $i3 + $i1;

        $i3 = $i3 / 2;

        $i4 = $i0 / 2;

        $i3 = $i3 - $i4;

     label02:
        if $i5 >= $i2 goto label11;

        $i4 = 0;

     label03:
        $i0 = $r0.<android.view.View: int mScrollX>;

        if $i3 != $i0 goto label04;

        $i0 = $r0.<android.view.View: int mScrollY>;

        if $i4 == $i0 goto label13;

     label04:
        virtualinvoke $r0.<android.view.View: void scrollTo(int,int)>($i3, $i4);

        return 1;

     label05:
        if $i4 >= 0 goto label06;

        $i3 = $i3 - $i0;

        goto label02;

     label06:
        $i3 = $i1;

        goto label02;

     label07:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if $r2 != $r3 goto label09;

        if $i4 >= 0 goto label08;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineRight(int)>($i3);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i3 = (int) $f0;

        $i3 = $i3 - $i0;

        goto label02;

     label08:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineLeft(int)>($i3);

        $f0 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        $i3 = (int) $f0;

        goto label02;

     label09:
        if $i4 >= 0 goto label10;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineLeft(int)>($i3);

        $f0 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        $i3 = (int) $f0;

        goto label02;

     label10:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineRight(int)>($i3);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i3 = (int) $f0;

        $i3 = $i3 - $i0;

        goto label02;

     label11:
        $i4 = $r0.<android.widget.TextView: int mGravity>;

        $i4 = $i4 & 112;

        if $i4 != 80 goto label12;

        $i4 = $i5 - $i2;

        goto label03;

     label12:
        $i4 = 0;

        goto label03;

     label13:
        return 0;
    }

    private boolean canCopy()
    {
        android.widget.TextView $r0;
        android.text.method.TransformationMethod $r1;
        boolean $z0;
        java.lang.CharSequence $r2;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $z0 = $r1 instanceof android.text.method.PasswordTransformationMethod;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean canCut()
    {
        android.widget.TextView $r0;
        android.text.method.TransformationMethod $r1;
        boolean $z0;
        java.lang.CharSequence $r2;
        int $i0;
        android.text.method.KeyListener $r3;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $z0 = $r1 instanceof android.text.method.PasswordTransformationMethod;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 < 0 goto label2;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Editable;

        if $z0 == 0 goto label2;

        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r3 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean canMarquee()
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.text.Layout $r1;
        float $f0, $f1;
        byte $b2;

        $r0 := @this: android.widget.TextView;

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i1;

        if $i0 <= 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineWidth(int)>(0);

        $f1 = (float) $i0;

        $b2 = $f0 cmpl $f1;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean canPaste()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.method.KeyListener $r2;
        int $i0;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.text.ClipboardManager $r5;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 < 0 goto label1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i0 < 0 goto label1;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r5 = (android.text.ClipboardManager) $r4;

        $z0 = virtualinvoke $r5.<android.text.ClipboardManager: boolean hasText()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean canSelectAll()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        int $i0;
        android.text.method.MovementMethod $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $z0 = interfaceinvoke $r2.<android.text.method.MovementMethod: boolean canSelectArbitrarily()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean canSelectText()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        int $i0;
        android.text.method.MovementMethod $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $z0 = interfaceinvoke $r2.<android.text.method.MovementMethod: boolean canSelectArbitrarily()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void checkForRelayout()
    {
        android.widget.TextView $r0;
        android.text.BoringLayout$Metrics $r1, $r5;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.CharSequence $r3;
        android.text.Layout $r4;

        $r0 := @this: android.widget.TextView;

        $r2 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -2 goto label1;

        $i0 = $r0.<android.widget.TextView: int mMaxWidthMode>;

        $i1 = $r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != $i1 goto label8;

        $i0 = $r0.<android.widget.TextView: int mMaxWidth>;

        $i1 = $r0.<android.widget.TextView: int mMinWidth>;

        if $i0 != $i1 goto label8;

     label1:
        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r3 == null goto label2;

        $r4 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r4 == null goto label8;

     label2:
        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i1;

        if $i0 <= 0 goto label8;

        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r4.<android.text.Layout: int getHeight()>();

        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

        $r4 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r4 != null goto label4;

        $i2 = 0;

     label3:
        $r5 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i3 = $r0.<android.view.View: int mRight>;

        $i4 = $r0.<android.view.View: int mLeft>;

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i3 = $i3 - $i4;

        virtualinvoke $r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>($i1, $i2, $r5, $r1, $i3, 0);

        $r2 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i1 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 == -2 goto label5;

        $r2 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i1 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 == -1 goto label5;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label4:
        $r4 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i2 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

        goto label3;

     label5:
        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r4.<android.text.Layout: int getHeight()>();

        if $i1 != $i0 goto label7;

        $r4 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r4 == null goto label6;

        $r4 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i1 = virtualinvoke $r4.<android.text.Layout: int getHeight()>();

        if $i1 != $i0 goto label7;

     label6:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label7:
        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label8:
        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    private void checkForResize()
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.text.Layout $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $z0 = 0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        $r2 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -2 goto label1;

        $z0 = 1;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label1:
        $r2 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i0 != -2 goto label3;

        $i0 = specialinvoke $r0.<android.widget.TextView: int getDesiredHeight()>();

        $i1 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        if $i0 == $i1 goto label2;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label4;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label3:
        $r2 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i0 != -1 goto label2;

        $i0 = $r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i0 < 0 goto label2;

        $i0 = specialinvoke $r0.<android.widget.TextView: int getDesiredHeight()>();

        $i1 = $r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i0 == $i1 goto label2;

        $z0 = 1;

        goto label2;

     label4:
        return;
    }

    private void chooseSize(android.widget.PopupWindow, java.lang.CharSequence, android.widget.TextView)
    {
        android.widget.TextView $r0, $r3;
        android.widget.PopupWindow $r1;
        java.lang.CharSequence $r2;
        android.text.StaticLayout $r4;
        android.text.Layout$Alignment $r5;
        int $i0, $i1, $i2, $i3;
        android.text.TextPaint $r6;
        float $f0, $f1;
        double $d0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.widget.PopupWindow;

        $r2 := @parameter1: java.lang.CharSequence;

        $r3 := @parameter2: android.widget.TextView;

        $i0 = virtualinvoke $r3.<android.view.View: int getPaddingLeft()>();

        $i1 = virtualinvoke $r3.<android.view.View: int getPaddingRight()>();

        $i1 = $i0 + $i1;

        $i0 = virtualinvoke $r3.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke $r3.<android.view.View: int getPaddingBottom()>();

        $i0 = $i0 + $i2;

        $i2 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $i2 - $i1;

        if $i2 >= 0 goto label1;

        $i2 = 200;

     label1:
        $r4 = new android.text.StaticLayout;

        $r6 = virtualinvoke $r3.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        specialinvoke $r4.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r2, $r6, $i2, $r5, 1.0F, 0.0F, 1);

        $f0 = 0.0F;

        $i2 = 0;

     label2:
        $i3 = virtualinvoke $r4.<android.text.StaticLayout: int getLineCount()>();

        if $i2 >= $i3 goto label3;

        $f1 = virtualinvoke $r4.<android.text.Layout: float getLineWidth(int)>($i2);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d0;

        $i1 = $i2 + $i1;

        virtualinvoke $r1.<android.widget.PopupWindow: void setWidth(int)>($i1);

        $i1 = virtualinvoke $r4.<android.text.Layout: int getHeight()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r1.<android.widget.PopupWindow: void setHeight(int)>($i0);

        return;
    }

    private static int desired(android.text.Layout)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;
        float $f0, $f1;
        char $c3;

        $r0 := @parameter0: android.text.Layout;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $r1 = virtualinvoke $r0.<android.text.Layout: java.lang.CharSequence getText()>();

        $f0 = 0.0F;

        $i1 = 0;

     label1:
        $i2 = $i0 - 1;

        if $i1 >= $i2 goto label3;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i1);

        $i2 = $i2 - 1;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        if $c3 == 10 goto label2;

        return -1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineWidth(int)>($i1);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i0 = (int) $f0;

        return $i0;
    }

    private int doKeyDown(int, android.view.KeyEvent, android.view.KeyEvent)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1, $r2;
        boolean $z0, $z1, $z2;
        android.text.method.KeyListener $r3;
        java.lang.CharSequence $r4;
        android.text.Editable $r5;
        android.widget.TextView$InputContentType $r6;
        android.widget.TextView$OnEditorActionListener $r7;
        java.lang.AbstractMethodError $r8, $r13;
        java.lang.Throwable $r9;
        android.text.method.MovementMethod $r10;
        android.text.Layout $r11;
        android.text.Spannable $r12;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 := @parameter2: android.view.KeyEvent;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        lookupswitch($i0)
        {
            case 23: goto label12;
            case 66: goto label09;
            default: goto label02;
        };

     label02:
        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r3 == null goto label19;

        $r0.<android.widget.TextView: boolean mErrorWasChanged> = 0;

        $z0 = 1;

        if $r2 == null goto label14;

     label03:
        virtualinvoke $r0.<android.widget.TextView: void beginBatchEdit()>();

     label04:
        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

     label05:
        $r5 = (android.text.Editable) $r4;

        $z1 = interfaceinvoke $r3.<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>($r0, $r5, $r2);

     label06:
        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        if $r4 == null goto label08;

        $z2 = $r0.<android.widget.TextView: boolean mErrorWasChanged>;

     label07:
        if $z2 != 0 goto label08;

        virtualinvoke $r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

     label08:
        $z0 = 0;

        if $z1 == 0 goto label13;

        virtualinvoke $r0.<android.widget.TextView: void endBatchEdit()>();

        return -1;

     label09:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getMetaState()>();

        $i1 = $i1 & 2;

        if $i1 != 0 goto label02;

        $r6 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r6 == null goto label10;

        $r6 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r7 = $r6.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r7 == null goto label10;

        $r6 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r7 = $r6.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z0 = interfaceinvoke $r7.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>($r0, 0, $r1);

        if $z0 == 0 goto label10;

        $r6 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r6.<android.widget.TextView$InputContentType: boolean enterDown> = 1;

        return -1;

     label10:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getFlags()>();

        $i1 = $i1 & 16;

        if $i1 != 0 goto label11;

        $z0 = specialinvoke $r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z0 == 0 goto label02;

     label11:
        return -1;

     label12:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z0 == 0 goto label02;

        return 0;

     label13:
        virtualinvoke $r0.<android.widget.TextView: void endBatchEdit()>();

     label14:
        if $z0 == 0 goto label19;

        virtualinvoke $r0.<android.widget.TextView: void beginBatchEdit()>();

        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Editable) $r4;

        $z0 = interfaceinvoke $r3.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r0, $r5, $i0, $r1);

        if $z0 == 0 goto label18;

        virtualinvoke $r0.<android.widget.TextView: void endBatchEdit()>();

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        if $r4 == null goto label15;

        $z0 = $r0.<android.widget.TextView: boolean mErrorWasChanged>;

        if $z0 != 0 goto label15;

        virtualinvoke $r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

     label15:
        return 1;

     label16:
        $r8 := @caughtexception;

        virtualinvoke $r0.<android.widget.TextView: void endBatchEdit()>();

        goto label14;

     label17:
        $r9 := @caughtexception;

        virtualinvoke $r0.<android.widget.TextView: void endBatchEdit()>();

        throw $r9;

     label18:
        virtualinvoke $r0.<android.widget.TextView: void endBatchEdit()>();

     label19:
        $r10 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r10 == null goto label24;

        $r11 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r11 == null goto label24;

        $z0 = 1;

        if $r2 == null goto label23;

        $r10 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Spannable) $r4;

     label20:
        $z1 = interfaceinvoke $r10.<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>($r0, $r12, $r2);

     label21:
        $z0 = 0;

        if $z1 == 0 goto label23;

        return -1;

     label22:
        $r13 := @caughtexception;

     label23:
        if $z0 == 0 goto label24;

        $r10 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Spannable) $r4;

        $z0 = interfaceinvoke $r10.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>($r0, $r12, $i0, $r1);

        if $z0 == 0 goto label24;

        return 2;

     label24:
        return 0;

        catch java.lang.AbstractMethodError from label03 to label04 with label16;
        catch java.lang.AbstractMethodError from label05 to label06 with label16;
        catch java.lang.AbstractMethodError from label07 to label08 with label16;
        catch java.lang.Throwable from label03 to label08 with label17;
        catch java.lang.AbstractMethodError from label20 to label21 with label22;
    }

    private void fixFocusableAndClickableSettings()
    {
        android.widget.TextView $r0;
        android.text.method.MovementMethod $r1;
        android.text.method.KeyListener $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 != null goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r2 == null goto label2;

     label1:
        virtualinvoke $r0.<android.view.View: void setFocusable(boolean)>(1);

        virtualinvoke $r0.<android.view.View: void setClickable(boolean)>(1);

        virtualinvoke $r0.<android.view.View: void setLongClickable(boolean)>(1);

        return;

     label2:
        virtualinvoke $r0.<android.view.View: void setFocusable(boolean)>(0);

        virtualinvoke $r0.<android.view.View: void setClickable(boolean)>(0);

        virtualinvoke $r0.<android.view.View: void setLongClickable(boolean)>(0);

        return;
    }

    private int getBottomVerticalOffset(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        int $i0, $i1, $i2;
        android.text.Layout $r1, $r3;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 112;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label1;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        if $i0 == 80 goto label5;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r1 != $r3 goto label3;

        $i1 = virtualinvoke $r0.<android.view.View: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i1 = $i1 - $i2;

     label2:
        $i2 = virtualinvoke $r1.<android.text.Layout: int getHeight()>();

        if $i2 >= $i1 goto label6;

        if $i0 != 48 goto label4;

        $i0 = $i1 - $i2;

        return $i0;

     label3:
        $i1 = virtualinvoke $r0.<android.view.View: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = $i1 - $i2;

        goto label2;

     label4:
        $i0 = $i1 - $i2;

        $i0 = $i0 >> 1;

        return $i0;

     label5:
        return 0;

     label6:
        return 0;
    }

    private int getDesiredHeight()
    {
        android.widget.TextView $r0;
        android.text.Layout $r1;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = specialinvoke $r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>($r1, 1);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i1 = specialinvoke $r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>($r1, 0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;
    }

    private int getDesiredHeight(android.text.Layout, boolean)
    {
        android.widget.TextView $r0;
        android.text.Layout $r1;
        boolean $z0;
        android.widget.TextView$Drawables $r2;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.Layout;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        $i2 = $i1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i0 = $i0 + $i3;

        $i3 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i1);

        $i4 = $i3;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 == null goto label2;

        $i4 = $r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        $i4 = $r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

     label2:
        $i3 = $i4 + $i0;

        $i4 = $r0.<android.widget.TextView: int mMaxMode>;

        if $i4 != 1 goto label6;

        if $z0 == 0 goto label4;

        $i4 = $r0.<android.widget.TextView: int mMaximum>;

        if $i1 <= $i4 goto label4;

        $i2 = $r0.<android.widget.TextView: int mMaximum>;

        $i2 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i2);

        $i3 = virtualinvoke $r1.<android.text.Layout: int getBottomPadding()>();

        $i2 = $i2 + $i3;

        if $r2 == null goto label3;

        $i3 = $r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i3 = $r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

     label3:
        $i3 = $i2 + $i0;

        $i2 = $r0.<android.widget.TextView: int mMaximum>;

     label4:
        $i0 = $r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 1 goto label7;

        $i0 = $r0.<android.widget.TextView: int mMinimum>;

        if $i2 >= $i0 goto label5;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getLineHeight()>();

        $i1 = $r0.<android.widget.TextView: int mMinimum>;

        $i2 = $i1 - $i2;

        $i0 = $i0 * $i2;

        $i3 = $i3 + $i0;

     label5:
        $i0 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumHeight()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i0);

        return $i0;

     label6:
        $i0 = $r0.<android.widget.TextView: int mMaximum>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i0);

        goto label4;

     label7:
        $i0 = $r0.<android.widget.TextView: int mMinimum>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i0);

        goto label5;
    }

    private int getErrorX()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        int $i0, $i1;
        android.widget.TextView$ErrorPopup $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $i1 = virtualinvoke $r2.<android.widget.PopupWindow: int getWidth()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.view.View: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        if $r1 == null goto label2;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

     label1:
        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 25;

        return $i0;

     label2:
        $i1 = 0;

        goto label1;
    }

    private int getErrorY()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.TextView;

        $i0 = $r0.<android.view.View: int mBottom>;

        $i1 = $r0.<android.view.View: int mTop>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i1 = $i0 - $i1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        if $r1 == null goto label3;

        $i2 = $r1.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

     label1:
        $i1 = $i1 - $i2;

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        if $r1 == null goto label4;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

     label2:
        $i0 = $i1 + $i0;

        $i1 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 - 2;

        return $i0;

     label3:
        $i2 = 0;

        goto label1;

     label4:
        $i1 = 0;

        goto label2;
    }

    private void getInterestingRect(android.graphics.Rect, int, int, int, int)
    {
        android.widget.TextView $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.Rect;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i0 := @parameter4: int;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i5 = $i4;

        $i6 = $r0.<android.widget.TextView: int mGravity>;

        $i6 = $i6 & 112;

        if $i6 == 48 goto label1;

        $i5 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        $i5 = $i4 + $i5;

     label1:
        $i2 = $i2 + $i5;

        $i3 = $i3 + $i5;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = $i1 + $i4;

        if $i0 != 0 goto label2;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = $i2 - $i4;

     label2:
        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i4 = $i4 - 1;

        if $i0 != $i4 goto label3;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i3 = $i3 + $i0;

     label3:
        $i0 = $i1 + 1;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i0, $i3);

        $i1 = $r0.<android.view.View: int mScrollX>;

        $i1 = neg $i1;

        $i2 = $r0.<android.view.View: int mScrollY>;

        $i2 = neg $i2;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i1, $i2);

        return;
    }

    public static int getTextColor(android.content.Context, android.content.res.TypedArray, int)
    {
        android.content.Context $r0;
        android.content.res.TypedArray $r1;
        int $i0;
        android.content.res.ColorStateList $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.TypedArray;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>($r0, $r1);

        if $r2 != null goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i0;
    }

    public static android.content.res.ColorStateList getTextColors(android.content.Context, android.content.res.TypedArray)
    {
        android.content.Context $r0;
        android.content.res.TypedArray $r1;
        android.content.res.ColorStateList $r2;
        int $i0;
        int[] $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.TypedArray;

        $r2 = virtualinvoke $r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        if $r2 != null goto label1;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        if $i0 == -1 goto label2;

        $r3 = <com.android.internal.R$styleable: int[] TextAppearance>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r3);

        $r2 = virtualinvoke $r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        virtualinvoke $r1.<android.content.res.TypedArray: void recycle()>();

        return $r2;

     label1:
        return $r2;

     label2:
        return $r2;
    }

    private int getVerticalOffset(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        int $i0, $i1, $i2;
        android.text.Layout $r1, $r3;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 112;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label1;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        if $i0 == 48 goto label5;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r1 != $r3 goto label3;

        $i1 = virtualinvoke $r0.<android.view.View: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i1 = $i1 - $i2;

     label2:
        $i2 = virtualinvoke $r1.<android.text.Layout: int getHeight()>();

        if $i2 >= $i1 goto label6;

        if $i0 != 80 goto label4;

        $i0 = $i1 - $i2;

        return $i0;

     label3:
        $i1 = virtualinvoke $r0.<android.view.View: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = $i1 - $i2;

        goto label2;

     label4:
        $i0 = $i1 - $i2;

        $i0 = $i0 >> 1;

        return $i0;

     label5:
        return 0;

     label6:
        return 0;
    }

    private java.lang.String getWordForDictionary()
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;
        char $c4;
        java.lang.String $r2;

        $r0 := @this: android.widget.TextView;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & 15;

        if $i0 == 2 goto label01;

        if $i0 == 3 goto label01;

        if $i0 != 4 goto label02;

     label01:
        return null;

     label02:
        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & 4080;

        if $i0 == 16 goto label03;

        if $i0 == 128 goto label03;

        if $i0 == 144 goto label03;

        if $i0 == 32 goto label03;

        if $i0 != 176 goto label04;

     label03:
        return null;

     label04:
        $i1 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        $i0 = $i1;

        if $i1 >= 0 goto label05;

        return null;

     label05:
        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label06:
        if $i1 <= 0 goto label07;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i3 = $i1 - 1;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        $i3 = staticinvoke <java.lang.Character: int getType(char)>($c4);

        if $c4 == 39 goto label09;

        if $i3 == 1 goto label09;

        if $i3 == 2 goto label09;

        if $i3 == 3 goto label09;

        if $i3 == 4 goto label09;

        if $i3 == 9 goto label09;

     label07:
        if $i0 >= $i2 goto label08;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $i3 = staticinvoke <java.lang.Character: int getType(char)>($c4);

        if $c4 == 39 goto label10;

        if $i3 == 1 goto label10;

        if $i3 == 2 goto label10;

        if $i3 == 3 goto label10;

        if $i3 == 4 goto label10;

        if $i3 == 9 goto label10;

     label08:
        if $i1 != $i0 goto label11;

        return null;

     label09:
        $i1 = $i1 + -1;

        goto label06;

     label10:
        $i0 = $i0 + 1;

        goto label07;

     label11:
        $i2 = $i0 - $i1;

        if $i2 <= 48 goto label12;

        return null;

     label12:
        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r1, $i1, $i0);

        return $r2;
    }

    private void hideError()
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.widget.TextView$ErrorPopup $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $z0 = virtualinvoke $r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        virtualinvoke $r1.<android.widget.PopupWindow: void dismiss()>();

     label1:
        $r0.<android.widget.TextView: boolean mShowErrorAfterAttach> = 0;

        return;
    }

    private void invalidateCursor()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        specialinvoke $r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i0, $i0, $i0);

        return;
    }

    private void invalidateCursor(int, int, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        if $i0 >= 0 goto label2;

        if $i1 >= 0 goto label2;

        if $i2 < 0 goto label6;

     label2:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineForOffset(int)>($i4);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i2 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i1);

        $i3 = $i2;

        if $i1 <= 0 goto label3;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = $i1 - 1;

        $i3 = virtualinvoke $r1.<android.text.Layout: int getLineDescent(int)>($i3);

        $i3 = $i2 - $i3;

     label3:
        if $i4 != $i0 goto label5;

        $i0 = $i1;

     label4:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i0);

        $i2 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = $r0.<android.view.View: int mScrollX>;

        $i0 = $i0 + $i4;

        $i3 = $i3 + $i2;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = $i3 + $i4;

        $i4 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i4 = $i4 + $i0;

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i4 = $i4 - $i5;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = $i1 + $i2;

        virtualinvoke $r0.<android.view.View: void invalidate(int,int,int,int)>($i0, $i3, $i4, $i1);

        return;

     label5:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r1.<android.text.Layout: int getLineForOffset(int)>($i0);

        goto label4;

     label6:
        return;
    }

    private void invalidateCursorPath()
    {
        android.widget.TextView $r0;
        int $i0, $i2, $i3, $i4;
        boolean $z0;
        android.graphics.RectF $r1, $r4;
        android.text.TextPaint $r2;
        float $f0, $f1, $f2;
        byte $b1;
        android.graphics.Path $r3;
        java.lang.Throwable $r5;

        $r0 := @this: android.widget.TextView;

        $z0 = $r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.widget.TextView: void invalidateCursor()>();

        return;

     label1:
        $r1 = <android.widget.TextView: android.graphics.RectF sTempRect>;

        entermonitor $r1;

     label2:
        $r2 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $f1 = $f0;

        $b1 = $f0 cmpg 1.0F;

        if $b1 >= 0 goto label3;

        $f1 = 1.0F;

     label3:
        $f0 = $f1 / 2.0F;

        $r3 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r4 = <android.widget.TextView: android.graphics.RectF sTempRect>;

        virtualinvoke $r3.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r4, 0);

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i4 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i0 = $i3 + $i4;

        $f1 = (float) $i2;

        $r4 = <android.widget.TextView: android.graphics.RectF sTempRect>;

        $f2 = $r4.<android.graphics.RectF: float left>;

        $f1 = $f1 + $f2;

        $f1 = $f1 - $f0;

        $f1 = staticinvoke <android.util.FloatMath: float floor(float)>($f1);

        $i3 = (int) $f1;

        $f1 = (float) $i0;

        $r4 = <android.widget.TextView: android.graphics.RectF sTempRect>;

        $f2 = $r4.<android.graphics.RectF: float top>;

        $f1 = $f1 + $f2;

        $f1 = $f1 - $f0;

        $f1 = staticinvoke <android.util.FloatMath: float floor(float)>($f1);

        $i4 = (int) $f1;

        $f1 = (float) $i2;

        $r4 = <android.widget.TextView: android.graphics.RectF sTempRect>;

        $f2 = $r4.<android.graphics.RectF: float right>;

        $f1 = $f1 + $f2;

        $f1 = $f1 + $f0;

        $f1 = staticinvoke <android.util.FloatMath: float ceil(float)>($f1);

        $i2 = (int) $f1;

        $f1 = (float) $i0;

        $r4 = <android.widget.TextView: android.graphics.RectF sTempRect>;

        $f2 = $r4.<android.graphics.RectF: float bottom>;

        $f1 = $f1 + $f2;

        $f0 = $f1 + $f0;

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i0 = (int) $f0;

        virtualinvoke $r0.<android.view.View: void invalidate(int,int,int,int)>($i3, $i4, $i2, $i0);

        exitmonitor $r1;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void makeBlink()
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.widget.TextView$Blink $r1, $r2;
        long $l0;

        $r0 := @this: android.widget.TextView;

        $z0 = $r0.<android.widget.TextView: boolean mCursorVisible>;

        if $z0 != 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        return;

     label1:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        if $r1 != null goto label2;

        $r1 = new android.widget.TextView$Blink;

        specialinvoke $r1.<android.widget.TextView$Blink: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink> = $r1;

     label2:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        $l0 = $r0.<android.widget.TextView: long mShowCursor>;

        $l0 = $l0 + 500L;

        virtualinvoke $r1.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>($r2, $l0);

        return;

     label3:
        return;
    }

    private void nullLayouts()
    {
        android.widget.TextView $r0;
        android.text.Layout $r1;
        boolean $z0;
        android.text.BoringLayout $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z0 = $r1 instanceof android.text.BoringLayout;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r2 != null goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r2 = (android.text.BoringLayout) $r1;

        $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r2;

     label1:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $z0 = $r1 instanceof android.text.BoringLayout;

        if $z0 == 0 goto label2;

        $r2 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r2 != null goto label2;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r2 = (android.text.BoringLayout) $r1;

        $r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r2;

     label2:
        $r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        $r0.<android.widget.TextView: android.text.Layout mLayout> = null;

        return;
    }

    private void registerForPreDraw()
    {
        android.widget.TextView $r0;
        android.view.ViewTreeObserver $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = $r0.<android.widget.TextView: int mPreDrawState>;

        if $i0 != 0 goto label2;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r0);

        $r0.<android.widget.TextView: int mPreDrawState> = 1;

        return;

     label2:
        $i0 = $r0.<android.widget.TextView: int mPreDrawState>;

        if $i0 != 2 goto label3;

        $r0.<android.widget.TextView: int mPreDrawState> = 1;

        return;

     label3:
        return;
    }

    static void removeParcelableSpans(android.text.Spannable, int, int)
    {
        android.text.Spannable $r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: android.text.Spannable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = interfaceinvoke $r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "android/text/ParcelableSpan");

        $i0 = lengthof $r1;

     label1:
        if $i0 <= 0 goto label2;

        $i0 = $i0 + -1;

        $r2 = $r1[$i0];

        interfaceinvoke $r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    private void restartMarqueeIfNeeded()
    {
        android.widget.TextView $r0;
        android.text.TextUtils$TruncateAt $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $z0 = $r0.<android.widget.TextView: boolean mRestartMarquee>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label2;

        $r0.<android.widget.TextView: boolean mRestartMarquee> = 0;

        specialinvoke $r0.<android.widget.TextView: void startMarquee()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    private void sendBeforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1;
        android.widget.TextView $r2;
        java.lang.Object $r3;
        android.text.TextWatcher $r4;

        $r2 := @this: android.widget.TextView;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 = $r2.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r1 == null goto label2;

        $r1 = $r2.<android.widget.TextView: java.util.ArrayList mListeners>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label3;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r4 = (android.text.TextWatcher) $r3;

        interfaceinvoke $r4.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>($r0, $i0, $i1, $i2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    private void setFilters(android.text.Editable, android.text.InputFilter[])
    {
        android.text.Editable $r0;
        android.text.InputFilter[] $r1, $r2;
        android.widget.TextView $r3;
        android.text.method.KeyListener $r4;
        boolean $z0;
        int $i0;
        android.text.InputFilter $r5;

        $r3 := @this: android.widget.TextView;

        $r0 := @parameter0: android.text.Editable;

        $r1 := @parameter1: android.text.InputFilter[];

        $r4 = $r3.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $z0 = $r4 instanceof android.text.InputFilter;

        if $z0 == 0 goto label1;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        $r2 = newarray (android.text.InputFilter)[$i0];

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $i0 = lengthof $r1;

        $r4 = $r3.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r5 = (android.text.InputFilter) $r4;

        $r2[$i0] = $r5;

        interfaceinvoke $r0.<android.text.Editable: void setFilters(android.text.InputFilter[])>($r2);

        return;

     label1:
        interfaceinvoke $r0.<android.text.Editable: void setFilters(android.text.InputFilter[])>($r1);

        return;
    }

    private void setInputType(int, boolean)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        android.text.method.TextKeyListener$Capitalize $r1;
        android.text.method.BaseKeyListener $r3;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = $i0 & 15;

        if $i1 != 1 goto label08;

        $i1 = 32768 & $i0;

        if $i1 == 0 goto label04;

        $z1 = 1;

     label01:
        $i1 = $i0 & 4096;

        if $i1 == 0 goto label05;

        $r1 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

     label02:
        $r3 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>($z1, $r1);

     label03:
        $r0.<android.widget.TextView: int mInputType> = $i0;

        if $z0 == 0 goto label19;

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r3;

        return;

     label04:
        $z1 = 0;

        goto label01;

     label05:
        $i1 = $i0 & 8192;

        if $i1 == 0 goto label06;

        $r1 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        goto label02;

     label06:
        $i1 = $i0 & 16384;

        if $i1 == 0 goto label07;

        $r1 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        goto label02;

     label07:
        $r1 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

        goto label02;

     label08:
        if $i1 != 2 goto label13;

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label11;

        $z1 = 1;

     label09:
        $i1 = $i0 & 8192;

        if $i1 == 0 goto label12;

        $z2 = 1;

     label10:
        $r3 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>($z1, $z2);

        goto label03;

     label11:
        $z1 = 0;

        goto label09;

     label12:
        $z2 = 0;

        goto label10;

     label13:
        if $i1 != 4 goto label17;

        $i1 = $i0 & 4080;

        lookupswitch($i1)
        {
            case 16: goto label15;
            case 32: goto label16;
            default: goto label14;
        };

     label14:
        $r3 = staticinvoke <android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>();

        goto label03;

     label15:
        $r3 = staticinvoke <android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>();

        goto label03;

     label16:
        $r3 = staticinvoke <android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>();

        goto label03;

     label17:
        if $i1 != 3 goto label18;

        $r3 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        goto label03;

     label18:
        $r3 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        goto label03;

     label19:
        specialinvoke $r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>($r3);

        return;
    }

    private void setKeyListenerOnly(android.text.method.KeyListener)
    {
        android.widget.TextView $r0;
        android.text.method.KeyListener $r1;
        android.text.InputFilter[] $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        android.text.Editable $r4;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.method.KeyListener;

        $r0.<android.widget.TextView: android.text.method.KeyListener mInput> = $r1;

        $r1 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r1 == null goto label1;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

     label1:
        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        $r2 = $r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke $r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r4, $r2);

        return;
    }

    private void setRawTextSize(float)
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        android.text.TextPaint $r1;
        byte $b0;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $f0 := @parameter0: float;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.graphics.Paint: float getTextSize()>();

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label2;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    private void setText(java.lang.CharSequence, android.widget.TextView$BufferType, boolean, int)
    {
        android.widget.TextView $r0;
        boolean $z0, $z1;
        android.text.Spanned $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r2, $r7;
        android.widget.TextView$BufferType $r3, $r9;
        android.text.TextUtils$TruncateAt $r4;
        android.text.InputFilter[] $r5;
        android.text.InputFilter $r6;
        java.util.ArrayList $r8;
        android.text.method.KeyListener $r10;
        android.text.Editable$Factory $r11;
        android.text.Editable $r12;
        android.view.inputmethod.InputMethodManager $r13;
        android.text.Spannable $r14;
        android.text.method.MovementMethod $r15;
        android.text.method.TransformationMethod $r16;
        java.lang.Object[] $r17;
        android.widget.TextView$ChangeWatcher[] $r18;
        android.widget.TextView$ChangeWatcher $r19;
        android.text.Spannable$Factory $r20;
        android.text.Layout $r21;

        $r0 := @this: android.widget.TextView;

        $r2 := @parameter0: java.lang.CharSequence;

        $r3 := @parameter1: android.widget.TextView$BufferType;

        $z0 := @parameter2: boolean;

        $i1 := @parameter3: int;

        if $r2 != null goto label01;

        $r2 = "";

     label01:
        $z1 = $r2 instanceof android.text.Spanned;

        if $z1 == 0 goto label02;

        $r1 = (android.text.Spanned) $r2;

        $r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        $i0 = interfaceinvoke $r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r4);

        if $i0 < 0 goto label02;

        virtualinvoke $r0.<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        $r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke $r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r4);

     label02:
        $r5 = $r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        $i0 = lengthof $r5;

        $i2 = 0;

     label03:
        if $i2 >= $i0 goto label05;

        $r5 = $r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        $r6 = $r5[$i2];

        $i3 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $r1 = <android.widget.TextView: android.text.Spanned EMPTY_SPANNED>;

        $r7 = interfaceinvoke $r6.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>($r2, 0, $i3, $r1, 0, 0);

        if $r7 == null goto label04;

        $r2 = $r7;

     label04:
        $i2 = $i2 + 1;

        goto label03;

     label05:
        if $z0 == 0 goto label06;

        $r7 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r7 == null goto label16;

        $r7 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        $i1 = $i0;

        $r7 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        specialinvoke $r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r7, 0, $i0, $i2);

     label06:
        $z0 = 0;

        $r8 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r8 == null goto label07;

        $r8 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label07;

        $z0 = 1;

     label07:
        $r9 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r3 == $r9 goto label08;

        $r10 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r10 != null goto label08;

        if $z0 == 0 goto label17;

     label08:
        $r11 = $r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory>;

        $r12 = virtualinvoke $r11.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>($r2);

        $r2 = $r12;

        $r5 = $r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke $r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r12, $r5);

        $r13 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r13 == null goto label09;

        virtualinvoke $r13.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>($r0);

     label09:
        $i0 = $r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i0 == 0 goto label13;

        $r9 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r3 == $r9 goto label10;

        $z1 = $r2 instanceof android.text.Spannable;

        if $z1 == 0 goto label20;

     label10:
        $r14 = (android.text.Spannable) $r2;

     label11:
        $i0 = $r0.<android.widget.TextView: int mAutoLinkMask>;

        $z1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($r14, $i0);

        if $z1 == 0 goto label13;

        $r2 = $r14;

        $r9 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r3 != $r9 goto label21;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

     label12:
        $r0.<android.widget.TextView: java.lang.CharSequence mText> = $r2;

        $z1 = $r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z1 == 0 goto label13;

        $r15 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke $r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r15);

     label13:
        $r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = $r3;

        $r0.<android.widget.TextView: java.lang.CharSequence mText> = $r2;

        $r16 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r16 != null goto label22;

        $r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = $r2;

     label14:
        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $z1 = $r2 instanceof android.text.Spannable;

        if $z1 == 0 goto label27;

        $r14 = (android.text.Spannable) $r2;

        $i2 = interfaceinvoke $r14.<android.text.Spannable: int length()>();

        $r17 = interfaceinvoke $r14.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "android/widget/TextView$ChangeWatcher");

        $r18 = (android.widget.TextView$ChangeWatcher[]) $r17;

        $i2 = lengthof $r18;

        $i3 = 0;

     label15:
        if $i3 >= $i2 goto label23;

        $r19 = $r18[$i3];

        interfaceinvoke $r14.<android.text.Spannable: void removeSpan(java.lang.Object)>($r19);

        $i3 = $i3 + 1;

        goto label15;

     label16:
        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        specialinvoke $r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, $i0);

        goto label06;

     label17:
        $r9 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        if $r3 == $r9 goto label18;

        $r15 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r15 == null goto label19;

     label18:
        $r20 = $r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        $r2 = virtualinvoke $r20.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>($r2);

        goto label09;

     label19:
        $z1 = $r2 instanceof android.widget.TextView$CharWrapper;

        if $z1 != 0 goto label09;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>($r2);

        goto label09;

     label20:
        $r20 = $r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        $r14 = virtualinvoke $r20.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>($r2);

        goto label11;

     label21:
        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label12;

     label22:
        $r16 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r7 = interfaceinvoke $r16.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>($r2, $r0);

        $r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = $r7;

        goto label14;

     label23:
        $r19 = $r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        if $r19 != null goto label24;

        $r19 = new android.widget.TextView$ChangeWatcher;

        specialinvoke $r19.<android.widget.TextView$ChangeWatcher: void <init>(android.widget.TextView,android.widget.TextView$1)>($r0, null);

        $r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher> = $r19;

     label24:
        $r19 = $r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        $i2 = <android.widget.TextView: int PRIORITY>;

        $i2 = $i2 << 16;

        $i2 = $i2 | 18;

        interfaceinvoke $r14.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r19, 0, $i0, $i2);

        $r10 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r10 == null goto label25;

        $r10 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        interfaceinvoke $r14.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r10, 0, $i0, 18);

     label25:
        $r16 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r16 == null goto label26;

        $r16 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        interfaceinvoke $r14.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r16, 0, $i0, 18);

     label26:
        $r15 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r15 == null goto label27;

        $r15 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r14 = (android.text.Spannable) $r2;

        interfaceinvoke $r15.<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>($r0, $r14);

        $r0.<android.widget.TextView: boolean mSelectionMoved> = 0;

     label27:
        $r21 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r21 == null goto label28;

        specialinvoke $r0.<android.widget.TextView: void checkForRelayout()>();

     label28:
        virtualinvoke $r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>($r2, 0, $i1, $i0);

        virtualinvoke $r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>($r2, 0, $i1, $i0);

        if $z0 == 0 goto label29;

        $r12 = (android.text.Editable) $r2;

        virtualinvoke $r0.<android.widget.TextView: void sendAfterTextChanged(android.text.Editable)>($r12);

        return;

     label29:
        return;
    }

    private void setTypefaceByIndex(int, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.graphics.Typeface $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = null;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        virtualinvoke $r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>($r1, $i1);

        return;

     label2:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        goto label1;

     label3:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        goto label1;

     label4:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        goto label1;
    }

    private boolean shouldAdvanceFocusOnEnter()
    {
        android.widget.TextView $r0;
        int $i0;
        android.text.method.KeyListener $r1;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = $r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & 15;

        if $i0 != 1 goto label4;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & 4080;

        if $i0 == 32 goto label3;

        if $i0 != 48 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    private void showError()
    {
        android.widget.TextView $r0, $r6;
        android.os.IBinder $r1;
        android.widget.TextView$ErrorPopup $r2, $r8;
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        android.view.View $r5;
        java.lang.CharSequence $r7;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r1 != null goto label1;

        $r0.<android.widget.TextView: boolean mShowErrorAfterAttach> = 1;

        return;

     label1:
        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367139, null);

        $r6 = (android.widget.TextView) $r5;

        $r2 = new android.widget.TextView$ErrorPopup;

        specialinvoke $r2.<android.widget.TextView$ErrorPopup: void <init>(android.widget.TextView,int,int)>($r6, 200, 50);

        $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup> = $r2;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        virtualinvoke $r2.<android.widget.PopupWindow: void setFocusable(boolean)>(0);

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        virtualinvoke $r2.<android.widget.PopupWindow: void setInputMethodMode(int)>(1);

     label2:
        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $r5 = virtualinvoke $r2.<android.widget.PopupWindow: android.view.View getContentView()>();

        $r6 = (android.widget.TextView) $r5;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $r7 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        specialinvoke $r0.<android.widget.TextView: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>($r2, $r7, $r6);

        $r7 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $i0 = specialinvoke $r0.<android.widget.TextView: int getErrorX()>();

        $i1 = specialinvoke $r0.<android.widget.TextView: int getErrorY()>();

        virtualinvoke $r2.<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>($r0, $i0, $i1);

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $r8 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $z0 = virtualinvoke $r8.<android.widget.PopupWindow: boolean isAboveAnchor()>();

        virtualinvoke $r2.<android.widget.TextView$ErrorPopup: void fixDirection(boolean)>($z0);

        return;
    }

    private void startMarquee()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Marquee $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r1.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 == 0 goto label4;

     label1:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isSelected()>();

        if $z0 == 0 goto label5;

     label2:
        $i0 = virtualinvoke $r0.<android.widget.TextView: int getLineCount()>();

        if $i0 != 1 goto label6;

        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canMarquee()>();

        if $z0 == 0 goto label7;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r1 != null goto label3;

        $r1 = new android.widget.TextView$Marquee;

        specialinvoke $r1.<android.widget.TextView$Marquee: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee> = $r1;

     label3:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $i0 = $r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        virtualinvoke $r1.<android.widget.TextView$Marquee: void start(int)>($i0);

        return;

     label4:
        return;

     label5:
        return;

     label6:
        return;

     label7:
        return;
    }

    private void startStopMarquee(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r1 != $r2 goto label2;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.widget.TextView: void startMarquee()>();

        return;

     label1:
        specialinvoke $r0.<android.widget.TextView: void stopMarquee()>();

        return;

     label2:
        return;
    }

    private void stopMarquee()
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.widget.TextView$Marquee $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r1.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        virtualinvoke $r1.<android.widget.TextView$Marquee: void stop()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    private void updateTextColors()
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.content.res.ColorStateList $r1;
        int[] $r2;
        int $i0, $i1;
        android.text.TextPaint $r3;
        java.lang.CharSequence $r4;

        $r0 := @this: android.widget.TextView;

        $z0 = 0;

        $r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        $r2 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $i1 = $r0.<android.widget.TextView: int mCurTextColor>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.TextView: int mCurTextColor> = $i0;

        $z0 = 1;

     label1:
        $r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        $r2 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = $r3.<android.text.TextPaint: int linkColor>;

        if $i0 == $i1 goto label2;

        $r3 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3.<android.text.TextPaint: int linkColor> = $i0;

        $z0 = 1;

     label2:
        $r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        $r2 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $i1 = $r0.<android.widget.TextView: int mCurHintTextColor>;

        if $i0 == $i1 goto label3;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label3;

        $r0.<android.widget.TextView: int mCurHintTextColor> = $i0;

        $z0 = 1;

     label3:
        if $z0 == 0 goto label4;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label4:
        return;
    }

    public void addTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView $r0;
        android.text.TextWatcher $r1;
        java.util.ArrayList $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.TextWatcher;

        $r2 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<android.widget.TextView: java.util.ArrayList mListeners> = $r2;

     label1:
        $r2 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public final void append(java.lang.CharSequence)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        virtualinvoke $r0.<android.widget.TextView: void append(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        return;
    }

    public void append(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r0, $r3;
        int $i0, $i1;
        android.widget.TextView$BufferType $r1;
        android.widget.TextView $r2;
        boolean $z0;
        android.text.Editable $r4;

        $r2 := @this: android.widget.TextView;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r2.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r3 = $r2.<android.widget.TextView: java.lang.CharSequence mText>;

        $r1 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r3, $r1);

     label1:
        $r3 = $r2.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        interfaceinvoke $r4.<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>($r0, $i0, $i1);

        return;
    }

    public void beginBatchEdit()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputMethodState $r1;
        int $i0;
        boolean $z0;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r1 == null goto label3;

        $i0 = $r1.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        $i0 = $i0 + 1;

        $r1.<android.widget.TextView$InputMethodState: int mBatchEditNesting> = $i0;

        if $i0 != 1 goto label4;

        $r1.<android.widget.TextView$InputMethodState: boolean mCursorChanged> = 0;

        $r1.<android.widget.TextView$InputMethodState: int mChangedDelta> = 0;

        $z0 = $r1.<android.widget.TextView$InputMethodState: boolean mContentChanged>;

        if $z0 == 0 goto label2;

        $r1.<android.widget.TextView$InputMethodState: int mChangedStart> = 0;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $r1.<android.widget.TextView$InputMethodState: int mChangedEnd> = $i0;

     label1:
        virtualinvoke $r0.<android.widget.TextView: void onBeginBatchEdit()>();

        return;

     label2:
        $r1.<android.widget.TextView$InputMethodState: int mChangedStart> = -1;

        $r1.<android.widget.TextView$InputMethodState: int mChangedEnd> = -1;

        $r1.<android.widget.TextView$InputMethodState: boolean mContentChanged> = 0;

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    public boolean bringPointIntoView(int)
    {
        android.widget.TextView $r0;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        long $l1, $l19;
        boolean $z0, $z1;
        android.text.Layout $r1;
        float $f0;
        int[] $r2;
        android.text.Layout$Alignment $r3;
        byte $b10;
        android.widget.Scroller $r4;
        android.graphics.Rect $r5;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $z0 = 0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r1.<android.text.Layout: int getLineForOffset(int)>($i0);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getPrimaryHorizontal(int)>($i0);

        $i0 = (int) $f0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i7 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i6);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = $i6 + 1;

        $i8 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i8);

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineLeft(int)>($i6);

        $f0 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        $i2 = (int) $f0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineRight(int)>($i6);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i3 = (int) $f0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i9 = virtualinvoke $r1.<android.text.Layout: int getHeight()>();

        $r2 = <android.widget.TextView$1: int[] $SwitchMap$android$text$Layout$Alignment>;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r3 = virtualinvoke $r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>($i6);

        $i4 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i4 = $r2[$i4];

        lookupswitch($i4)
        {
            case 1: goto label16;
            case 2: goto label17;
            default: goto label01;
        };

     label01:
        $b10 = 0;

     label02:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r1.<android.text.Layout: int getParagraphDirection(int)>($i6);

        $i11 = $b10 * $i4;

        $i4 = $r0.<android.view.View: int mRight>;

        $i12 = $r0.<android.view.View: int mLeft>;

        $i4 = $i4 - $i12;

        $i12 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = $i4 - $i12;

        $i12 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i4 = $i4 - $i12;

        $i12 = $r0.<android.view.View: int mBottom>;

        $i13 = $r0.<android.view.View: int mTop>;

        $i12 = $i12 - $i13;

        $i13 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i12 = $i12 - $i13;

        $i13 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i5 = $i12 - $i13;

        $i12 = $i8 - $i7;

        $i14 = $i12 / 2;

        $i15 = $i14;

        $i12 = $i5 / 4;

        if $i14 <= $i12 goto label03;

        $i15 = $i5 / 4;

     label03:
        $i12 = $i4 / 4;

        if $i14 <= $i12 goto label04;

        $i14 = $i4 / 4;

     label04:
        $i16 = $r0.<android.view.View: int mScrollX>;

        $i13 = $i16;

        $i17 = $r0.<android.view.View: int mScrollY>;

        $i12 = $i17;

        $i17 = $i7 - $i17;

        if $i17 >= $i15 goto label05;

        $i12 = $i7 - $i15;

     label05:
        $i17 = $i8 - $i12;

        $i18 = $i5 - $i15;

        if $i17 <= $i18 goto label06;

        $i12 = $i5 - $i15;

        $i12 = $i8 - $i12;

     label06:
        $i15 = $i9 - $i12;

        if $i15 >= $i5 goto label07;

        $i12 = $i9 - $i5;

     label07:
        $i9 = 0 - $i12;

        if $i9 <= 0 goto label08;

        $i12 = 0;

     label08:
        if $i11 == 0 goto label10;

        $i9 = $i0 - $i16;

        if $i9 >= $i14 goto label09;

        $i13 = $i0 - $i14;

     label09:
        $i9 = $i0 - $i13;

        $i5 = $i4 - $i14;

        if $i9 <= $i5 goto label10;

        $i9 = $i4 - $i14;

        $i13 = $i0 - $i9;

     label10:
        if $i11 >= 0 goto label18;

        $i11 = $i2 - $i13;

        if $i11 <= 0 goto label11;

        $i13 = $i2;

     label11:
        $i2 = $i3 - $i13;

        if $i2 >= $i4 goto label12;

        $i13 = $i3 - $i4;

     label12:
        $i2 = $r0.<android.view.View: int mScrollX>;

        if $i13 != $i2 goto label13;

        $i2 = $r0.<android.view.View: int mScrollY>;

        if $i12 == $i2 goto label15;

     label13:
        $r4 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r4 != null goto label27;

        virtualinvoke $r0.<android.view.View: void scrollTo(int,int)>($i13, $i12);

     label14:
        $z0 = 1;

     label15:
        $z1 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z1 == 0 goto label31;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        specialinvoke $r0.<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int,int,int,int)>($r5, $i0, $i7, $i8, $i6);

        $i0 = $r0.<android.view.View: int mScrollX>;

        $i6 = $r0.<android.view.View: int mScrollY>;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>($i0, $i6);

        $z1 = virtualinvoke $r0.<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>($r5);

        if $z1 == 0 goto label32;

        return 1;

     label16:
        $b10 = 1;

        goto label02;

     label17:
        $b10 = -1;

        goto label02;

     label18:
        if $i11 <= 0 goto label20;

        $i11 = $i3 - $i13;

        if $i11 >= $i4 goto label19;

        $i13 = $i3 - $i4;

     label19:
        $i3 = $i2 - $i13;

        if $i3 <= 0 goto label12;

        $i13 = $i2;

        goto label12;

     label20:
        $i11 = $i3 - $i2;

        if $i11 > $i4 goto label21;

        $i3 = $i3 - $i2;

        $i3 = $i4 - $i3;

        $i3 = $i3 / 2;

        $i13 = $i2 - $i3;

        goto label12;

     label21:
        $i11 = $i3 - $i14;

        if $i0 <= $i11 goto label22;

        $i13 = $i3 - $i4;

        goto label12;

     label22:
        $i11 = $i2 + $i14;

        if $i0 >= $i11 goto label23;

        $i13 = $i2;

        goto label12;

     label23:
        if $i2 <= $i13 goto label24;

        $i13 = $i2;

        goto label12;

     label24:
        $i2 = $i13 + $i4;

        if $i3 >= $i2 goto label25;

        $i13 = $i3 - $i4;

        goto label12;

     label25:
        $i2 = $i0 - $i13;

        if $i2 >= $i14 goto label26;

        $i13 = $i0 - $i14;

     label26:
        $i2 = $i0 - $i13;

        $i3 = $i4 - $i14;

        if $i2 <= $i3 goto label12;

        $i2 = $i4 - $i14;

        $i13 = $i0 - $i2;

        goto label12;

     label27:
        $l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l19 = $r0.<android.widget.TextView: long mLastScroll>;

        $l1 = $l1 - $l19;

        $i2 = $r0.<android.view.View: int mScrollX>;

        $i2 = $i13 - $i2;

        $i3 = $r0.<android.view.View: int mScrollY>;

        $i3 = $i12 - $i3;

        $b10 = $l1 cmp 250L;

        if $b10 <= 0 goto label29;

        $r4 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i4 = $r0.<android.view.View: int mScrollX>;

        $i12 = $r0.<android.view.View: int mScrollY>;

        virtualinvoke $r4.<android.widget.Scroller: void startScroll(int,int,int,int)>($i4, $i12, $i2, $i3);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label28:
        $l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $r0.<android.widget.TextView: long mLastScroll> = $l1;

        goto label14;

     label29:
        $r4 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r4.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label30;

        $r4 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        virtualinvoke $r4.<android.widget.Scroller: void abortAnimation()>();

     label30:
        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i2, $i3);

        goto label28;

     label31:
        return $z0;

     label32:
        return $z0;
    }

    public void cancelLongPress()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        specialinvoke $r0.<android.view.View: void cancelLongPress()>();

        $r0.<android.widget.TextView: boolean mScrolled> = 1;

        return;
    }

    public void clearComposingText()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Spannable $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Spannable) $r1;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>($r2);

        return;

     label1:
        return;
    }

    protected int computeHorizontalScrollRange()
    {
        android.widget.TextView $r0;
        android.text.Layout $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r1.<android.text.Layout: int getWidth()>();

        return $i0;

     label1:
        $i0 = specialinvoke $r0.<android.view.View: int computeHorizontalScrollRange()>();

        return $i0;
    }

    public void computeScroll()
    {
        android.widget.TextView $r0;
        android.widget.Scroller $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r0.<android.view.View: int mScrollX> = $i0;

        $r1 = $r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        $r0.<android.view.View: int mScrollY> = $i0;

        virtualinvoke $r0.<android.view.View: void postInvalidate()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.TextView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i0 = $i0 - $i1;

        return $i0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.TextView $r0;
        android.text.Layout $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r1.<android.text.Layout: int getHeight()>();

        return $i0;

     label1:
        $i0 = specialinvoke $r0.<android.view.View: int computeVerticalScrollRange()>();

        return $i0;
    }

    public void debug(int)
    {
        android.widget.TextView $r0;
        int $i0;
        java.lang.String $r1, $r4;
        java.lang.StringBuilder $r2;
        java.lang.CharSequence $r3;
        android.text.Layout $r5;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.View: void debug(int)>($i0);

        $r1 = staticinvoke <android.widget.TextView: java.lang.String debugIndent(int)>($i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame={");

        $i0 = $r0.<android.view.View: int mLeft>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i0 = $r0.<android.view.View: int mTop>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i0 = $r0.<android.view.View: int mRight>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i0 = $r0.<android.view.View: int mBottom>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} scroll={");

        $i0 = $r0.<android.view.View: int mScrollX>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i0 = $r0.<android.view.View: int mScrollY>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r3 == null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=\"");

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r1;

        $r5 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLayout width=");

        $r5 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r5.<android.text.Layout: int getWidth()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $r5 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r5.<android.text.Layout: int getHeight()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r4);

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=NULL");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    public boolean didTouchFocusSelect()
    {
        android.widget.TextView $r0;
        boolean z0;

        $r0 := @this: android.widget.TextView;

        z0 = $r0.<android.widget.TextView: boolean mTouchFocusSelected>;

        return z0;
    }

    protected void drawableStateChanged()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        android.content.res.ColorStateList $r2;
        boolean $z0;
        int[] $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.widget.TextView;

        specialinvoke $r0.<android.view.View: void drawableStateChanged()>();

        $r2 = $r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        if $r2 == null goto label01;

        $r2 = $r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        $z0 = virtualinvoke $r2.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 != 0 goto label03;

     label01:
        $r2 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r2 == null goto label02;

        $r2 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        $z0 = virtualinvoke $r2.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 != 0 goto label03;

     label02:
        $r2 = $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if $r2 == null goto label04;

        $r2 = $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        $z0 = virtualinvoke $r2.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label04;

     label03:
        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

     label04:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label08;

        $r3 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r4 == null goto label05;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label05;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label05:
        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r4 == null goto label06;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label06;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label06:
        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r4 == null goto label07;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label07;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label07:
        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r4 == null goto label09;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label10;

        $r4 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        return;

     label08:
        return;

     label09:
        return;

     label10:
        return;
    }

    public void endBatchEdit()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputMethodState $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r1 == null goto label1;

        $i0 = $r1.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        $i0 = $i0 - 1;

        $r1.<android.widget.TextView$InputMethodState: int mBatchEditNesting> = $i0;

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<android.widget.TextView: void finishBatchEdit(android.widget.TextView$InputMethodState)>($r1);

        return;

     label1:
        return;

     label2:
        return;
    }

    void ensureEndedBatchEdit()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputMethodState $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r1 == null goto label1;

        $i0 = $r1.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        if $i0 == 0 goto label2;

        $r1.<android.widget.TextView$InputMethodState: int mBatchEditNesting> = 0;

        virtualinvoke $r0.<android.widget.TextView: void finishBatchEdit(android.widget.TextView$InputMethodState)>($r1);

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView $r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        android.view.inputmethod.ExtractedText $r2;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $r2 := @parameter1: android.view.inputmethod.ExtractedText;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>($r1, -1, -1, -1, $r2);

        return $z0;
    }

    boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest, int, int, int, android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView $r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.inputmethod.ExtractedText $r2;
        java.lang.CharSequence $r3, $r4;
        boolean $z0;
        android.text.Spanned $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;
        java.lang.String $r8;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $r2 := @parameter4: android.view.inputmethod.ExtractedText;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r3 == null goto label11;

        if $i1 == -2 goto label02;

        $i3 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if $i1 >= 0 goto label05;

        $r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = -1;

        $r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = -1;

        $i1 = 0;

        $i2 = $i3;

     label01:
        $i0 = $r1.<android.view.inputmethod.ExtractedTextRequest: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i1, $i2);

        $r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = $r4;

     label02:
        $r2.<android.view.inputmethod.ExtractedText: int flags> = 0;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>($r4, 65536);

        if $i1 == 0 goto label03;

        $i1 = $r2.<android.view.inputmethod.ExtractedText: int flags>;

        $i1 = $i1 | 2;

        $r2.<android.view.inputmethod.ExtractedText: int flags> = $i1;

     label03:
        $z0 = $r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label04;

        $i1 = $r2.<android.view.inputmethod.ExtractedText: int flags>;

        $i1 = $i1 | 1;

        $r2.<android.view.inputmethod.ExtractedText: int flags> = $i1;

     label04:
        $r2.<android.view.inputmethod.ExtractedText: int startOffset> = 0;

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r3);

        $r2.<android.view.inputmethod.ExtractedText: int selectionStart> = $i1;

        $i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        $r2.<android.view.inputmethod.ExtractedText: int selectionEnd> = $i1;

        return 1;

     label05:
        $z0 = $r3 instanceof android.text.Spanned;

        if $z0 == 0 goto label08;

        $r5 = (android.text.Spanned) $r3;

        $r6 = interfaceinvoke $r5.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "android/text/ParcelableSpan");

        $i4 = lengthof $r6;

     label06:
        if $i4 <= 0 goto label08;

        $i4 = $i4 + -1;

        $r7 = $r6[$i4];

        $i5 = interfaceinvoke $r5.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r7);

        if $i5 >= $i1 goto label07;

        $i1 = $i5;

     label07:
        $r7 = $r6[$i4];

        $i5 = interfaceinvoke $r5.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r7);

        if $i5 <= $i2 goto label06;

        $i2 = $i5;

        goto label06;

     label08:
        $r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = $i1;

        $r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = $i2;

        $i2 = $i2 + $i0;

        if $i2 <= $i3 goto label09;

        $i2 = $i3;

        goto label01;

     label09:
        if $i2 >= 0 goto label01;

        $i2 = 0;

        goto label01;

     label10:
        $r8 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r3, $i1, $i2);

        $r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = $r8;

        goto label02;

     label11:
        return 0;
    }

    void finishBatchEdit(android.widget.TextView$InputMethodState)
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputMethodState $r1;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.widget.TextView$InputMethodState;

        virtualinvoke $r0.<android.widget.TextView: void onEndBatchEdit()>();

        $z0 = $r1.<android.widget.TextView$InputMethodState: boolean mContentChanged>;

        if $z0 != 0 goto label1;

        $z0 = $r1.<android.widget.TextView$InputMethodState: boolean mSelectionModeChanged>;

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke $r0.<android.widget.TextView: void updateAfterEdit()>();

        virtualinvoke $r0.<android.widget.TextView: boolean reportExtractedText()>();

        return;

     label2:
        $z0 = $r1.<android.widget.TextView$InputMethodState: boolean mCursorChanged>;

        if $z0 == 0 goto label3;

        specialinvoke $r0.<android.widget.TextView: void invalidateCursor()>();

        return;

     label3:
        return;
    }

    public final int getAutoLinkMask()
    {
        android.widget.TextView $r0;
        int i0;

        $r0 := @this: android.widget.TextView;

        i0 = $r0.<android.widget.TextView: int mAutoLinkMask>;

        return i0;
    }

    public int getBaseline()
    {
        android.widget.TextView $r0;
        android.text.Layout $r1;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        $i0 = specialinvoke $r0.<android.view.View: int getBaseline()>();

        return $i0;

     label1:
        $i0 = 0;

        $i1 = $r0.<android.widget.TextView: int mGravity>;

        $i1 = $i1 & 112;

        if $i1 == 48 goto label2;

        $i0 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label2:
        $i1 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i0 = $i1 + $i0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineBaseline(int)>(0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $f1 = $r0.<android.widget.TextView: float mShadowDy>;

        $f0 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f0 = $f1 + $f0;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        $i0 = (int) $f0;

        return $i0;
    }

    public int getCompoundDrawablePadding()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        int i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        i0 = $r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        return i0;

     label1:
        return 0;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawables()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r3 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        $r2[0] = $r3;

        $r3 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $r2[1] = $r3;

        $r3 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        $r2[2] = $r3;

        $r3 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        $r2[3] = $r3;

        return $r2;

     label1:
        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r2[0] = null;

        $r2[1] = null;

        $r2[2] = null;

        $r2[3] = null;

        return $r2;
    }

    public int getCompoundPaddingBottom()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        $r2 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r2 != null goto label2;

     label1:
        $i0 = $r0.<android.view.View: int mPaddingBottom>;

        return $i0;

     label2:
        $i0 = $r0.<android.view.View: int mPaddingBottom>;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        $r2 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r2 != null goto label2;

     label1:
        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        return $i0;

     label2:
        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawableSizeLeft>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        $r2 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r2 != null goto label2;

     label1:
        $i0 = $r0.<android.view.View: int mPaddingRight>;

        return $i0;

     label2:
        $i0 = $r0.<android.view.View: int mPaddingRight>;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getCompoundPaddingTop()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Drawables $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        $r2 = $r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r2 != null goto label2;

     label1:
        $i0 = $r0.<android.view.View: int mPaddingTop>;

        return $i0;

     label2:
        $i0 = $r0.<android.view.View: int mPaddingTop>;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.widget.TextView$Drawables: int mDrawableSizeTop>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public final int getCurrentHintTextColor()
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList $r1;
        int i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r1 == null goto label1;

        i0 = $r0.<android.widget.TextView: int mCurHintTextColor>;

        return i0;

     label1:
        i0 = $r0.<android.widget.TextView: int mCurTextColor>;

        return i0;
    }

    public final int getCurrentTextColor()
    {
        android.widget.TextView $r0;
        int i0;

        $r0 := @this: android.widget.TextView;

        i0 = $r0.<android.widget.TextView: int mCurTextColor>;

        return i0;
    }

    protected boolean getDefaultEditable()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        return 0;
    }

    protected android.text.method.MovementMethod getDefaultMovementMethod()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        return null;
    }

    public android.text.Editable getEditableText()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Editable $r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        return $r2;

     label1:
        return null;
    }

    public android.text.TextUtils$TruncateAt getEllipsize()
    {
        android.widget.TextView $r0;
        android.text.TextUtils$TruncateAt r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        return r1;
    }

    public java.lang.CharSequence getError()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        return r1;
    }

    public int getExtendedPaddingBottom()
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $i2 = $r0.<android.widget.TextView: int mMaxMode>;

        if $i2 == 1 goto label1;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i2;

     label1:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i2 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        $i1 = $r0.<android.widget.TextView: int mMaximum>;

        if $i2 > $i1 goto label2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i2;

     label2:
        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i3 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i1 = $i3 - $i1;

        $i1 = $i1 - $i2;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = $r0.<android.widget.TextView: int mMaximum>;

        $i3 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i3);

        if $i3 < $i1 goto label3;

        return $i2;

     label3:
        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 112;

        if $i0 != 48 goto label4;

        $i2 = $i2 + $i1;

        $i2 = $i2 - $i3;

        return $i2;

     label4:
        if $i0 != 80 goto label5;

        return $i2;

     label5:
        $i1 = $i1 - $i3;

        $i1 = $i1 / 2;

        $i2 = $i1 + $i2;

        return $i2;
    }

    public int getExtendedPaddingTop()
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $i2 = $r0.<android.widget.TextView: int mMaxMode>;

        if $i2 == 1 goto label1;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i2;

     label1:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i2 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        $i1 = $r0.<android.widget.TextView: int mMaximum>;

        if $i2 > $i1 goto label2;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i2;

     label2:
        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i3 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i3 = $i3 - $i2;

        $i1 = $i3 - $i1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = $r0.<android.widget.TextView: int mMaximum>;

        $i3 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>($i3);

        if $i3 < $i1 goto label3;

        return $i2;

     label3:
        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 112;

        if $i0 != 48 goto label4;

        return $i2;

     label4:
        if $i0 != 80 goto label5;

        $i2 = $i2 + $i1;

        $i2 = $i2 - $i3;

        return $i2;

     label5:
        $i1 = $i1 - $i3;

        $i1 = $i1 / 2;

        $i2 = $i1 + $i2;

        return $i2;
    }

    public android.text.InputFilter[] getFilters()
    {
        android.widget.TextView $r0;
        android.text.InputFilter[] r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        return r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.TextView $r0;
        android.graphics.Rect $r1;
        android.text.Layout $r2;
        int $i0, $i1, $i2, $i3;
        float $f0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 != null goto label1;

        specialinvoke $r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r1);

        return;

     label1:
        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i0 >= 0 goto label2;

        specialinvoke $r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r1);

        return;

     label2:
        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>($i0);

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i2 = virtualinvoke $r2.<android.text.Layout: int getLineTop(int)>($i1);

        $r1.<android.graphics.Rect: int top> = $i2;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineBottom(int)>($i1);

        $r1.<android.graphics.Rect: int bottom> = $i1;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r2.<android.text.Layout: float getPrimaryHorizontal(int)>($i0);

        $i0 = (int) $f0;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i0 = $i0 + 1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = $i1;

        $i3 = $r0.<android.widget.TextView: int mGravity>;

        $i3 = $i3 & 112;

        if $i3 == 48 goto label3;

        $i2 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        $i2 = $i1 + $i2;

     label3:
        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i2);

        return;
    }

    public boolean getFreezesText()
    {
        android.widget.TextView $r0;
        boolean z0;

        $r0 := @this: android.widget.TextView;

        z0 = $r0.<android.widget.TextView: boolean mFreezesText>;

        return z0;
    }

    public int getGravity()
    {
        android.widget.TextView $r0;
        int i0;

        $r0 := @this: android.widget.TextView;

        i0 = $r0.<android.widget.TextView: int mGravity>;

        return i0;
    }

    public java.lang.CharSequence getHint()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        return r1;
    }

    public final android.content.res.ColorStateList getHintTextColors()
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        return r1;
    }

    public int getImeActionId()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputContentType $r1;
        int i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        i0 = $r1.<android.widget.TextView$InputContentType: int imeActionId>;

        return i0;

     label1:
        return 0;
    }

    public java.lang.CharSequence getImeActionLabel()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputContentType $r1;
        java.lang.CharSequence r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        r2 = $r1.<android.widget.TextView$InputContentType: java.lang.CharSequence imeActionLabel>;

        return r2;

     label1:
        return null;
    }

    public int getImeOptions()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputContentType $r1;
        int i0;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        i0 = $r1.<android.widget.TextView$InputContentType: int imeOptions>;

        return i0;

     label1:
        return 0;
    }

    public android.os.Bundle getInputExtras(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.widget.TextView$InputContentType $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 != null goto label2;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = new android.widget.TextView$InputContentType;

        specialinvoke $r1.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r1;

     label2:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2 = $r1.<android.widget.TextView$InputContentType: android.os.Bundle extras>;

        if $r2 != null goto label4;

        if $z0 != 0 goto label3;

        return null;

     label3:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $r1.<android.widget.TextView$InputContentType: android.os.Bundle extras> = $r2;

     label4:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2 = $r1.<android.widget.TextView$InputContentType: android.os.Bundle extras>;

        return $r2;
    }

    public int getInputType()
    {
        android.widget.TextView $r0;
        int i0;

        $r0 := @this: android.widget.TextView;

        i0 = $r0.<android.widget.TextView: int mInputType>;

        return i0;
    }

    public final android.text.method.KeyListener getKeyListener()
    {
        android.widget.TextView $r0;
        android.text.method.KeyListener r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        return r1;
    }

    public final android.text.Layout getLayout()
    {
        android.widget.TextView $r0;
        android.text.Layout r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        return r1;
    }

    protected float getLeftFadingEdgeStrength()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Marquee $r1;
        android.text.TextUtils$TruncateAt $r2, $r3;
        boolean $z0;
        float $f0, $f1;
        int $i0, $i1;
        android.text.Layout $r4;

        $r0 := @this: android.widget.TextView;

        $r2 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r3 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r3 goto label2;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r1.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f0 = $r1.<android.widget.TextView$Marquee: float mScroll>;

        $i0 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;

     label1:
        $i0 = virtualinvoke $r0.<android.widget.TextView: int getLineCount()>();

        if $i0 != 1 goto label2;

        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 7;

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label4;
            default: goto label2;
        };

     label2:
        $f0 = specialinvoke $r0.<android.view.View: float getLeftFadingEdgeStrength()>();

        return $f0;

     label3:
        return 0.0F;

     label4:
        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r4.<android.text.Layout: float getLineRight(int)>(0);

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f1 = virtualinvoke $r4.<android.text.Layout: float getLineLeft(int)>(0);

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;

     label5:
        return 0.0F;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $f1 = $r0.<android.widget.TextView: float mShadowDx>;

        $f0 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f0 = $f1 - $f0;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f0);

        $i0 = (int) $f0;

        return $i0;
    }

    public int getLineBounds(int, android.graphics.Rect)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r1;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 != null goto label2;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label1:
        return 0;

     label2:
        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>($i0, $r1);

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = $i1;

        $i3 = $r0.<android.widget.TextView: int mGravity>;

        $i3 = $i3 & 112;

        if $i3 == 48 goto label3;

        $i2 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i2 = $i1 + $i2;

     label3:
        if $r1 == null goto label4;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i1, $i2);

     label4:
        $i0 = $i0 + $i2;

        return $i0;
    }

    public int getLineCount()
    {
        android.widget.TextView $r0;
        int $i0;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        return $i0;

     label1:
        return 0;
    }

    public int getLineHeight()
    {
        android.widget.TextView $r0;
        android.text.TextPaint $r1;
        int $i0;
        float $f0, $f1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        $f0 = (float) $i0;

        $f1 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f0 = $f0 * $f1;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $f0 = $f0 + $f1;

        $i0 = staticinvoke <com.android.internal.util.FastMath: int round(float)>($f0);

        return $i0;
    }

    public final android.content.res.ColorStateList getLinkTextColors()
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        return r1;
    }

    public final boolean getLinksClickable()
    {
        android.widget.TextView $r0;
        boolean z0;

        $r0 := @this: android.widget.TextView;

        z0 = $r0.<android.widget.TextView: boolean mLinksClickable>;

        return z0;
    }

    public final android.text.method.MovementMethod getMovementMethod()
    {
        android.widget.TextView $r0;
        android.text.method.MovementMethod r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        return r1;
    }

    public android.text.TextPaint getPaint()
    {
        android.widget.TextView $r0;
        android.text.TextPaint r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        return r1;
    }

    public int getPaintFlags()
    {
        android.widget.TextView $r0;
        int $i0;
        android.text.TextPaint $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getFlags()>();

        return $i0;
    }

    public java.lang.String getPrivateImeOptions()
    {
        android.widget.TextView $r0;
        android.widget.TextView$InputContentType $r1;
        java.lang.String r2;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        r2 = $r1.<android.widget.TextView$InputContentType: java.lang.String privateImeOptions>;

        return r2;

     label1:
        return null;
    }

    protected float getRightFadingEdgeStrength()
    {
        android.widget.TextView $r0;
        android.widget.TextView$Marquee $r1;
        android.text.TextUtils$TruncateAt $r2, $r3;
        boolean $z0;
        float $f0, $f1;
        int $i0, $i1;
        android.text.Layout $r4;

        $r0 := @this: android.widget.TextView;

        $r2 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r3 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r3 goto label2;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r1.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f0 = staticinvoke <android.widget.TextView$Marquee: float access$700(android.widget.TextView$Marquee)>($r1);

        $f1 = $r1.<android.widget.TextView$Marquee: float mScroll>;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;

     label1:
        $i0 = virtualinvoke $r0.<android.widget.TextView: int getLineCount()>();

        if $i0 != 1 goto label2;

        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 7;

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label4;
            default: goto label2;
        };

     label2:
        $f0 = specialinvoke $r0.<android.view.View: float getRightFadingEdgeStrength()>();

        return $f0;

     label3:
        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r4.<android.text.Layout: float getLineRight(int)>(0);

        $i0 = $r0.<android.view.View: int mScrollX>;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;

     label4:
        return 0.0F;

     label5:
        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r4.<android.text.Layout: float getLineWidth(int)>(0);

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $f1 = $r0.<android.widget.TextView: float mShadowDx>;

        $f0 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f0 = $f1 + $f0;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        $i0 = (int) $f0;

        return $i0;
    }

    public int getSelectionEnd()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public int getSelectionStart()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public java.lang.CharSequence getText()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return r1;
    }

    public final android.content.res.ColorStateList getTextColors()
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        return r1;
    }

    public float getTextScaleX()
    {
        android.widget.TextView $r0;
        float $f0;
        android.text.TextPaint $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getTextScaleX()>();

        return $f0;
    }

    public float getTextSize()
    {
        android.widget.TextView $r0;
        float $f0;
        android.text.TextPaint $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getTextSize()>();

        return $f0;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $f1 = $r0.<android.widget.TextView: float mShadowDy>;

        $f0 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f0 = $f1 - $f0;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f0);

        $i0 = (int) $f0;

        return $i0;
    }

    public int getTotalPaddingBottom()
    {
        android.widget.TextView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = specialinvoke $r0.<android.widget.TextView: int getBottomVerticalOffset(boolean)>(1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getTotalPaddingLeft()
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i0;
    }

    public int getTotalPaddingRight()
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i0;
    }

    public int getTotalPaddingTop()
    {
        android.widget.TextView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public final android.text.method.TransformationMethod getTransformationMethod()
    {
        android.widget.TextView $r0;
        android.text.method.TransformationMethod r1;

        $r0 := @this: android.widget.TextView;

        r1 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        return r1;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.widget.TextView $r0;
        android.graphics.Typeface $r1;
        android.text.TextPaint $r2;

        $r0 := @this: android.widget.TextView;

        $r2 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r1 = virtualinvoke $r2.<android.graphics.Paint: android.graphics.Typeface getTypeface()>();

        return $r1;
    }

    public android.text.style.URLSpan[] getUrls()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Spanned $r2;
        int $i0;
        java.lang.Object[] $r3;
        android.text.style.URLSpan[] $r4;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Spanned) $r1;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r3 = interfaceinvoke $r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/style/URLSpan");

        $r4 = (android.text.style.URLSpan[]) $r3;

        return $r4;

     label1:
        $r4 = newarray (android.text.style.URLSpan)[0];

        return $r4;
    }

    void handleTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.TextView$InputMethodState $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r2 == null goto label1;

        $i3 = $r2.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        if $i3 != 0 goto label2;

     label1:
        virtualinvoke $r0.<android.widget.TextView: void updateAfterEdit()>();

     label2:
        if $r2 == null goto label4;

        $r2.<android.widget.TextView$InputMethodState: boolean mContentChanged> = 1;

        $i3 = $r2.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i3 >= 0 goto label5;

        $r2.<android.widget.TextView$InputMethodState: int mChangedStart> = $i0;

        $i3 = $i0 + $i1;

        $r2.<android.widget.TextView$InputMethodState: int mChangedEnd> = $i3;

     label3:
        $i3 = $r2.<android.widget.TextView$InputMethodState: int mChangedDelta>;

        $i4 = $i2 - $i1;

        $i3 = $i3 + $i4;

        $r2.<android.widget.TextView$InputMethodState: int mChangedDelta> = $i3;

     label4:
        virtualinvoke $r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        virtualinvoke $r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        return;

     label5:
        $i3 = $r2.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i3 <= $i0 goto label6;

        $r2.<android.widget.TextView$InputMethodState: int mChangedStart> = $i0;

     label6:
        $i3 = $r2.<android.widget.TextView$InputMethodState: int mChangedEnd>;

        $i4 = $i0 + $i1;

        if $i3 >= $i4 goto label3;

        $i3 = $i0 + $i1;

        $r2.<android.widget.TextView$InputMethodState: int mChangedEnd> = $i3;

        goto label3;
    }

    public boolean hasSelection()
    {
        android.widget.TextView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isInputMethodTarget()
    {
        android.widget.TextView $r0;
        android.view.inputmethod.InputMethodManager $r1;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.TextView $r0;
        float $f0;
        byte $b0;

        $r0 := @this: android.widget.TextView;

        $f0 = $r0.<android.widget.TextView: float mShadowRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int length()
    {
        android.widget.TextView $r0;
        int $i0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    protected void makeNewLayout(int, int, android.text.BoringLayout$Metrics, android.text.BoringLayout$Metrics, int, boolean)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.text.BoringLayout$Metrics $r1, $r2, $r13;
        android.text.Layout$Alignment $r3;
        java.lang.CharSequence $r4, $r6;
        android.text.DynamicLayout $r5;
        android.text.TextPaint $r7;
        float $f0, $f1;
        android.text.TextUtils$TruncateAt $r8, $r11;
        android.text.BoringLayout $r9;
        android.text.Layout $r10;
        android.view.ViewGroup$LayoutParams $r12;
        android.text.StaticLayout $r14;

        $r0 := @this: android.widget.TextView;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 := @parameter2: android.text.BoringLayout$Metrics;

        $r2 := @parameter3: android.text.BoringLayout$Metrics;

        $i0 := @parameter4: int;

        $z0 := @parameter5: boolean;

        specialinvoke $r0.<android.widget.TextView: void stopMarquee()>();

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if $i1 >= 0 goto label01;

        $i1 = 0;

     label01:
        if $i2 >= 0 goto label02;

        $i2 = 0;

     label02:
        $i3 = $r0.<android.widget.TextView: int mGravity>;

        $i3 = $i3 & 7;

        lookupswitch($i3)
        {
            case 1: goto label10;
            case 5: goto label11;
            default: goto label03;
        };

     label03:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

     label04:
        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r4 instanceof android.text.Spannable;

        if $z1 == 0 goto label12;

        $r5 = new android.text.DynamicLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        specialinvoke $r5.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>($r4, $r6, $r7, $i1, $r3, $f0, $f1, $z1, $r8, $i0);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r5;

     label05:
        $r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r4 == null goto label08;

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if $r2 != $r1 goto label06;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r1 = $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        $r1 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)>($r4, $r7, $r1);

        $r2 = $r1;

        if $r1 == null goto label06;

        $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = $r1;

     label06:
        if $r2 == null goto label25;

        $i1 = $r2.<android.text.BoringLayout$Metrics: int width>;

        if $i1 > $i2 goto label24;

        $r9 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r9 == null goto label23;

        $r9 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r9 = virtualinvoke $r9.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r4, $r7, $i2, $r3, $f0, $f1, $r2, $z1);

        $r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r9;

     label07:
        $r10 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r9 = (android.text.BoringLayout) $r10;

        $r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r9;

     label08:
        if $z0 == 0 goto label09;

        specialinvoke $r0.<android.widget.TextView: void registerForPreDraw()>();

     label09:
        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r11 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r8 != $r11 goto label27;

        $r12 = $r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i1 = $r12.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 == -2 goto label26;

        if $i1 == -1 goto label26;

        specialinvoke $r0.<android.widget.TextView: void startMarquee()>();

        return;

     label10:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        goto label04;

     label11:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        goto label04;

     label12:
        $r13 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if $r1 != $r13 goto label13;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r1 = $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        $r13 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)>($r4, $r7, $r1);

        $r1 = $r13;

        if $r13 == null goto label13;

        $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = $r13;

     label13:
        if $r1 == null goto label21;

        $i3 = $r1.<android.text.BoringLayout$Metrics: int width>;

        if $i3 > $i1 goto label17;

        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r8 == null goto label14;

        $i3 = $r1.<android.text.BoringLayout$Metrics: int width>;

        if $i3 > $i0 goto label17;

     label14:
        $r9 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r9 == null goto label16;

        $r9 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r9 = virtualinvoke $r9.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r4, $r7, $i1, $r3, $f0, $f1, $r1, $z1);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r9;

     label15:
        $r10 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r9 = (android.text.BoringLayout) $r10;

        $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r9;

        goto label05;

     label16:
        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r9 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r4, $r7, $i1, $r3, $f0, $f1, $r1, $z1);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r9;

        goto label15;

     label17:
        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r8 == null goto label19;

        $i3 = $r1.<android.text.BoringLayout$Metrics: int width>;

        if $i3 > $i1 goto label19;

        $r9 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r9 == null goto label18;

        $r9 = $r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r9 = virtualinvoke $r9.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r4, $r7, $i1, $r3, $f0, $f1, $r1, $z1, $r8, $i0);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r9;

        goto label05;

     label18:
        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r9 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r4, $r7, $i1, $r3, $f0, $f1, $r1, $z1, $r8, $i0);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r9;

        goto label05;

     label19:
        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r8 == null goto label20;

        $r14 = new android.text.StaticLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        specialinvoke $r14.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>($r4, 0, $i3, $r7, $i1, $r3, $f0, $f1, $z1, $r8, $i0);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r14;

        goto label05;

     label20:
        $r14 = new android.text.StaticLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r14.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r4, $r7, $i1, $r3, $f0, $f1, $z1);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r14;

        goto label05;

     label21:
        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r8 == null goto label22;

        $r14 = new android.text.StaticLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r8 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        specialinvoke $r14.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>($r4, 0, $i3, $r7, $i1, $r3, $f0, $f1, $z1, $r8, $i0);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r14;

        goto label05;

     label22:
        $r14 = new android.text.StaticLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r14.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r4, $r7, $i1, $r3, $f0, $f1, $z1);

        $r0.<android.widget.TextView: android.text.Layout mLayout> = $r14;

        goto label05;

     label23:
        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        $r9 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r4, $r7, $i2, $r3, $f0, $f1, $r2, $z1);

        $r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r9;

        goto label07;

     label24:
        $r14 = new android.text.StaticLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r14.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r4, $r7, $i2, $r3, $f0, $f1, $z1);

        $r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r14;

        goto label08;

     label25:
        $r14 = new android.text.StaticLayout;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = $r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = $r0.<android.widget.TextView: float mSpacingAdd>;

        $z1 = $r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r14.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r4, $r7, $i2, $r3, $f0, $f1, $z1);

        $r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r14;

        goto label08;

     label26:
        $r0.<android.widget.TextView: boolean mRestartMarquee> = 1;

        return;

     label27:
        return;
    }

    public boolean moveCursorToVisibleOffset()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Layout $r2;
        float $f0;
        android.text.Spannable $r3;

        $r0 := @this: android.widget.TextView;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        if $i2 == $i3 goto label2;

        return 0;

     label2:
        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>($i2);

        $i3 = $i0;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r2.<android.text.Layout: int getLineTop(int)>($i0);

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = $i0 + 1;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineTop(int)>($i0);

        $i1 = $r0.<android.view.View: int mBottom>;

        $i5 = $r0.<android.view.View: int mTop>;

        $i1 = $i1 - $i5;

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = $i1 - $i5;

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = $i1 - $i5;

        $i5 = $i0 - $i4;

        $i5 = $i5 / 2;

        $i6 = $i1 / 4;

        if $i5 <= $i6 goto label3;

        $i5 = $i1 / 4;

     label3:
        $i6 = $r0.<android.view.View: int mScrollY>;

        $i7 = $i6 + $i5;

        if $i4 >= $i7 goto label6;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = $i6 + $i5;

        $i4 = $i0 - $i4;

        $i3 = $i3 + $i4;

        $i3 = virtualinvoke $r2.<android.text.Layout: int getLineForVertical(int)>($i3);

     label4:
        $i4 = $r0.<android.view.View: int mRight>;

        $i0 = $r0.<android.view.View: int mLeft>;

        $i4 = $i4 - $i0;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = $i4 - $i0;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i0 = $i4 - $i0;

        $i1 = $r0.<android.view.View: int mScrollX>;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = (float) $i1;

        $i4 = virtualinvoke $r2.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i3, $f0);

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        $i3 = virtualinvoke $r2.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i3, $f0);

        $i0 = $i2;

        if $i2 >= $i4 goto label7;

        $i0 = $i4;

     label5:
        if $i0 == $i2 goto label8;

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Spannable) $r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r3, $i0);

        return 1;

     label6:
        $i7 = $i1 + $i6;

        $i7 = $i7 - $i5;

        if $i0 <= $i7 goto label4;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = $i1 + $i6;

        $i3 = $i3 - $i5;

        $i4 = $i0 - $i4;

        $i3 = $i3 - $i4;

        $i3 = virtualinvoke $r2.<android.text.Layout: int getLineForVertical(int)>($i3);

        goto label4;

     label7:
        if $i2 <= $i3 goto label5;

        $i0 = $i3;

        goto label5;

     label8:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TextView $r0;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        specialinvoke $r0.<android.view.View: void onAttachedToWindow()>();

        $r0.<android.widget.TextView: boolean mTemporaryDetach> = 0;

        $z0 = $r0.<android.widget.TextView: boolean mShowErrorAfterAttach>;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.widget.TextView: void showError()>();

        $r0.<android.widget.TextView: boolean mShowErrorAfterAttach> = 0;

        return;

     label1:
        return;
    }

    public void onBeginBatchEdit()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        return;
    }

    public boolean onCheckIsTextEditor()
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onCommitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.widget.TextView $r0;
        android.view.inputmethod.CompletionInfo $r1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return;
    }

    protected void onCreateContextMenu(android.view.ContextMenu)
    {
        android.widget.TextView $r0;
        android.view.ContextMenu $r1;
        boolean $z0, $z1, $z2;
        android.text.method.KeyListener $r2;
        android.widget.TextView$MenuHandler $r3;
        android.view.MenuItem $r4;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r5;
        android.text.Spanned $r6;
        java.lang.Object[] $r7;
        android.text.style.URLSpan[] $r8;
        java.lang.String $r9;
        android.content.Context $r10;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.ContextMenu;

        specialinvoke $r0.<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>($r1);

        $z0 = 0;

        $z1 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z1 != 0 goto label01;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label17;

        $r2 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r2 == null goto label18;

        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canCopy()>();

        if $z0 == 0 goto label19;

        $r3 = new android.widget.TextView$MenuHandler;

        specialinvoke $r3.<android.widget.TextView$MenuHandler: void <init>(android.widget.TextView,android.widget.TextView$1)>($r0, null);

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908321, 0, 17039935);

        $r4 = interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(99);

        interfaceinvoke $r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>(17039938);

        return;

     label01:
        $r3 = new android.widget.TextView$MenuHandler;

        specialinvoke $r3.<android.widget.TextView$MenuHandler: void <init>(android.widget.TextView,android.widget.TextView$1)>($r0, null);

        $z1 = specialinvoke $r0.<android.widget.TextView: boolean canSelectAll()>();

        if $z1 == 0 goto label02;

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908319, 0, 17039373);

        $r4 = interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(97);

        $z0 = 1;

     label02:
        $i0 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i0 == $i1 goto label13;

        $z1 = 1;

     label03:
        $z2 = specialinvoke $r0.<android.widget.TextView: boolean canSelectText()>();

        if $z2 == 0 goto label04;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>($r5, 65536);

        if $i0 == 0 goto label14;

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908329, 0, 17039933);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        $z0 = 1;

     label04:
        $z2 = specialinvoke $r0.<android.widget.TextView: boolean canCut()>();

        if $z2 == 0 goto label06;

        if $z1 == 0 goto label15;

        $i0 = 17039363;

     label05:
        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908320, 0, $i0);

        $r4 = interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(120);

        $z0 = 1;

     label06:
        $z2 = specialinvoke $r0.<android.widget.TextView: boolean canCopy()>();

        if $z2 == 0 goto label08;

        if $z1 == 0 goto label16;

        $i0 = 17039361;

     label07:
        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908321, 0, $i0);

        $r4 = interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(99);

        $z0 = 1;

     label08:
        $z1 = specialinvoke $r0.<android.widget.TextView: boolean canPaste()>();

        if $z1 == 0 goto label09;

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908322, 0, 17039371);

        $r4 = interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(118);

        $z0 = 1;

     label09:
        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r5 instanceof android.text.Spanned;

        if $z1 == 0 goto label10;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spanned) $r5;

        $r7 = interfaceinvoke $r6.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "android/text/style/URLSpan");

        $r8 = (android.text.style.URLSpan[]) $r7;

        $i0 = lengthof $r8;

        if $i0 != 1 goto label10;

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908323, 0, 17039362);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        $z0 = 1;

     label10:
        $z1 = virtualinvoke $r0.<android.widget.TextView: boolean isInputMethodTarget()>();

        if $z1 == 0 goto label11;

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(1, 16908324, 0, 17039936);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        $z0 = 1;

     label11:
        $r9 = specialinvoke $r0.<android.widget.TextView: java.lang.String getWordForDictionary()>();

        if $r9 == null goto label12;

        $r10 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r9;

        $r9 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039937, $r7);

        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 16908330, 0, $r9);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        $z0 = 1;

     label12:
        if $z0 == 0 goto label20;

        interfaceinvoke $r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>(17039938);

        return;

     label13:
        $z1 = 0;

        goto label03;

     label14:
        $r4 = interfaceinvoke $r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908328, 0, 17039932);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        $z0 = 1;

        goto label04;

     label15:
        $i0 = 17039934;

        goto label05;

     label16:
        $i0 = 17039935;

        goto label07;

     label17:
        return;

     label18:
        return;

     label19:
        return;

     label20:
        return;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.TextView $r0;
        android.view.inputmethod.EditorInfo $r1;
        com.android.internal.widget.EditableInputConnection $r2;
        boolean $z0;
        android.widget.TextView$InputMethodState $r3;
        int $i0;
        android.widget.TextView$InputContentType $r4;
        java.lang.String $r5;
        java.lang.CharSequence $r6;
        android.os.Bundle $r7;
        android.view.View $r8;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z0 == 0 goto label8;

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r3 != null goto label1;

        $r3 = new android.widget.TextView$InputMethodState;

        specialinvoke $r3.<android.widget.TextView$InputMethodState: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState> = $r3;

     label1:
        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $r1.<android.view.inputmethod.EditorInfo: int inputType> = $i0;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r4 == null goto label6;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $i0 = $r4.<android.widget.TextView$InputContentType: int imeOptions>;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r5 = $r4.<android.widget.TextView$InputContentType: java.lang.String privateImeOptions>;

        $r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions> = $r5;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r6 = $r4.<android.widget.TextView$InputContentType: java.lang.CharSequence imeActionLabel>;

        $r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel> = $r6;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $i0 = $r4.<android.widget.TextView$InputContentType: int imeActionId>;

        $r1.<android.view.inputmethod.EditorInfo: int actionId> = $i0;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r7 = $r4.<android.widget.TextView$InputContentType: android.os.Bundle extras>;

        $r1.<android.view.inputmethod.EditorInfo: android.os.Bundle extras> = $r7;

     label2:
        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 & 255;

        if $i0 != 0 goto label4;

        $r8 = virtualinvoke $r0.<android.view.View: android.view.View focusSearch(int)>(130);

        if $r8 == null goto label7;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 | 5;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

     label3:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z0 != 0 goto label4;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 | 1073741824;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

     label4:
        $i0 = $r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $i0 = $i0 & 131087;

        if $i0 != 131073 goto label5;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 | 1073741824;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

     label5:
        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence hintText> = $r6;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r6 instanceof android.text.Editable;

        if $z0 == 0 goto label8;

        $r2 = new com.android.internal.widget.EditableInputConnection;

        specialinvoke $r2.<com.android.internal.widget.EditableInputConnection: void <init>(android.widget.TextView)>($r0);

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r6);

        $r1.<android.view.inputmethod.EditorInfo: int initialSelStart> = $i0;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r6);

        $r1.<android.view.inputmethod.EditorInfo: int initialSelEnd> = $i0;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = interfaceinvoke $r2.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i0);

        $r1.<android.view.inputmethod.EditorInfo: int initialCapsMode> = $i0;

        return $r2;

     label6:
        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 0;

        goto label2;

     label7:
        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i0 = $i0 | 6;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i0;

        goto label3;

     label8:
        return null;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.TextView $r0;
        android.view.ViewTreeObserver $r1;
        int $i0;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        specialinvoke $r0.<android.view.View: void onDetachedFromWindow()>();

        $i0 = $r0.<android.widget.TextView: int mPreDrawState>;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r0);

        $r0.<android.widget.TextView: int mPreDrawState> = 0;

     label1:
        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        if $r2 == null goto label2;

        specialinvoke $r0.<android.widget.TextView: void hideError()>();

        return;

     label2:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.TextView $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.widget.TextView$Drawables $r2;
        android.graphics.drawable.Drawable $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.view.ViewTreeObserver $r4;
        android.text.Layout $r5, $r12;
        java.lang.CharSequence $r6;
        android.content.res.ColorStateList $r7;
        android.text.TextPaint $r8;
        int[] $r9;
        byte $b13;
        android.text.TextUtils$TruncateAt $r10, $r11;
        boolean $z0, $z1;
        android.widget.TextView$Marquee $r13;
        android.graphics.Path $r14, $r16, r27;
        android.text.method.MovementMethod $r15;
        long $l14, $l15;
        android.graphics.Paint $r17;
        android.graphics.Paint$Style $r18;
        android.widget.TextView$InputMethodState $r19;
        android.view.inputmethod.InputMethodManager $r20;
        android.text.Spannable $r21;
        android.graphics.RectF $r22;
        float[] $r23, $r24;
        android.graphics.Matrix $r25;
        android.graphics.Rect $r26;
        double $d0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        specialinvoke $r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i5 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i6 = $r0.<android.view.View: int mScrollX>;

        $i7 = $r0.<android.view.View: int mScrollY>;

        $i8 = $r0.<android.view.View: int mRight>;

        $i9 = $r0.<android.view.View: int mLeft>;

        $i10 = $r0.<android.view.View: int mBottom>;

        $i1 = $r0.<android.view.View: int mTop>;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 == null goto label04;

        $i3 = $i10 - $i1;

        $i2 = $i3 - $i2;

        $i3 = $i2 - $i4;

        $i2 = $i8 - $i9;

        $i2 = $i2 - $i5;

        $i2 = $i2 - $i0;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r3 == null goto label01;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i11 = $r0.<android.view.View: int mPaddingLeft>;

        $i11 = $i11 + $i6;

        $f0 = (float) $i11;

        $i11 = $i7 + $i4;

        $i12 = $r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i12 = $i3 - $i12;

        $i12 = $i12 / 2;

        $i11 = $i11 + $i12;

        $f1 = (float) $i11;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label01:
        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r3 == null goto label02;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i11 = $i6 + $i8;

        $i11 = $i11 - $i9;

        $i12 = $r0.<android.view.View: int mPaddingRight>;

        $i11 = $i11 - $i12;

        $i12 = $r2.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i11 = $i11 - $i12;

        $f0 = (float) $i11;

        $i4 = $i7 + $i4;

        $i11 = $r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i3 = $i3 - $i11;

        $i3 = $i3 / 2;

        $i4 = $i4 + $i3;

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label02:
        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r3 == null goto label03;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i4 = $i6 + $i0;

        $i3 = $r2.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i3 = $i2 - $i3;

        $i3 = $i3 / 2;

        $i4 = $i4 + $i3;

        $f0 = (float) $i4;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i4 = $i4 + $i7;

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label03:
        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r3 == null goto label04;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i4 = $i6 + $i0;

        $i3 = $r2.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i2 = $i2 - $i3;

        $i2 = $i2 / 2;

        $i2 = $i4 + $i2;

        $f0 = (float) $i2;

        $i2 = $i7 + $i10;

        $i2 = $i2 - $i1;

        $i4 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 - $i4;

        $i4 = $r2.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i2 = $i2 - $i4;

        $f1 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label04:
        $i2 = $r0.<android.widget.TextView: int mPreDrawState>;

        if $i2 != 2 goto label05;

        $r4 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r4 == null goto label05;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r0);

        $r0.<android.widget.TextView: int mPreDrawState> = 0;

     label05:
        $i2 = $r0.<android.widget.TextView: int mCurTextColor>;

        $i4 = $i2;

        $r5 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 != null goto label06;

        specialinvoke $r0.<android.widget.TextView: void assumeLayout()>();

     label06:
        $r5 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 == null goto label08;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i3 != 0 goto label08;

        $r7 = $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r7 == null goto label07;

        $i4 = $r0.<android.widget.TextView: int mCurHintTextColor>;

     label07:
        $r5 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label08:
        $r8 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i4);

        $r8 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r9 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $r8.<android.text.TextPaint: int[] drawableState> = $r9;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i11 = $i0 + $i6;

        $f2 = (float) $i11;

        $f1 = $f2;

        $i11 = $i4 + $i7;

        $f3 = (float) $i11;

        $f4 = $f3;

        $i8 = $i8 - $i9;

        $i5 = $i8 - $i5;

        $i6 = $i5 + $i6;

        $f5 = (float) $i6;

        $f6 = $f5;

        $i10 = $i10 - $i1;

        $i10 = $i10 - $i3;

        $i7 = $i10 + $i7;

        $f0 = (float) $i7;

        $f7 = $f0;

        $f8 = $r0.<android.widget.TextView: float mShadowRadius>;

        $b13 = $f8 cmpl 0.0F;

        if $b13 == 0 goto label09;

        $f1 = $r0.<android.widget.TextView: float mShadowDx>;

        $f6 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f1 = $f1 - $f6;

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f1);

        $f1 = $f2 + $f1;

        $f6 = $r0.<android.widget.TextView: float mShadowDx>;

        $f2 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f6 = $f6 + $f2;

        $f6 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f6);

        $f6 = $f5 + $f6;

        $f5 = $r0.<android.widget.TextView: float mShadowDy>;

        $f2 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f5 = $f5 - $f2;

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f5);

        $f4 = $f3 + $f5;

        $f3 = $r0.<android.widget.TextView: float mShadowDy>;

        $f5 = $r0.<android.widget.TextView: float mShadowRadius>;

        $f3 = $f3 + $f5;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f3);

        $f7 = $f0 + $f3;

     label09:
        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>($f1, $f4, $f6, $f7);

        $i7 = 0;

        $i10 = 0;

        $i1 = $r0.<android.widget.TextView: int mGravity>;

        $i1 = $i1 & 112;

        if $i1 == 48 goto label10;

        $i7 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        $i10 = specialinvoke $r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label10:
        $f0 = (float) $i0;

        $i0 = $i4 + $i7;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r10 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r11 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r10 != $r11 goto label12;

        $z0 = $r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 != 0 goto label11;

        $i0 = virtualinvoke $r0.<android.widget.TextView: int getLineCount()>();

        if $i0 != 1 goto label11;

        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canMarquee()>();

        if $z0 == 0 goto label11;

        $i0 = $r0.<android.widget.TextView: int mGravity>;

        $i0 = $i0 & 7;

        if $i0 == 3 goto label11;

        $r12 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r12.<android.text.Layout: float getLineRight(int)>(0);

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F);

     label11:
        $r13 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r13 == null goto label12;

        $r13 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r13.<android.widget.TextView$Marquee: boolean isRunning()>();

        if $z0 == 0 goto label12;

        $r13 = $r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f0 = $r13.<android.widget.TextView$Marquee: float mScroll>;

        $f0 = neg $f0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F);

     label12:
        $r14 = null;

        $i0 = -1;

        $i1 = -1;

        $r15 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r15 == null goto label16;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isPressed()>();

        if $z0 == 0 goto label16;

     label13:
        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r6);

        $i0 = $i6;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i5 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r6);

        $i1 = $i5;

        $z0 = $r0.<android.widget.TextView: boolean mCursorVisible>;

        if $z0 == 0 goto label16;

        if $i6 < 0 goto label16;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 == 0 goto label16;

        $r16 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r16 != null goto label14;

        r27 = new android.graphics.Path;

        specialinvoke r27.<android.graphics.Path: void <init>()>();

        $r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = r27;

     label14:
        if $i6 != $i5 goto label22;

        $l14 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l15 = $r0.<android.widget.TextView: long mShowCursor>;

        $l14 = $l14 - $l15;

        $l14 = $l14 % 1000L;

        $b13 = $l14 cmp 500L;

        if $b13 >= 0 goto label16;

        $z0 = $r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label15;

        $r14 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r14.<android.graphics.Path: void reset()>();

        $r12 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r14 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r12.<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>($i6, $r14, $r6);

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label15:
        $r17 = $r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>($i2);

        $r17 = $r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        $r18 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r17.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r18);

        $r14 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

     label16:
        $r19 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r19 == null goto label21;

        $i6 = $r19.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        if $i6 != 0 goto label21;

        $r20 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r20 == null goto label21;

        $z0 = virtualinvoke $r20.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r0);

        if $z0 == 0 goto label20;

        $z0 = 0;

        $z1 = $r19.<android.widget.TextView$InputMethodState: boolean mContentChanged>;

        if $z1 != 0 goto label17;

        $z1 = $r19.<android.widget.TextView$InputMethodState: boolean mSelectionModeChanged>;

        if $z1 == 0 goto label18;

     label17:
        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean reportExtractedText()>();

     label18:
        if $z0 != 0 goto label20;

        if $r14 == null goto label20;

        $i6 = -1;

        $i5 = -1;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r6 instanceof android.text.Spannable;

        if $z0 == 0 goto label19;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r21 = (android.text.Spannable) $r6;

        $i6 = staticinvoke <com.android.internal.widget.EditableInputConnection: int getComposingSpanStart(android.text.Spannable)>($r21);

        $i5 = staticinvoke <com.android.internal.widget.EditableInputConnection: int getComposingSpanEnd(android.text.Spannable)>($r21);

     label19:
        virtualinvoke $r20.<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>($r0, $i0, $i1, $i6, $i5);

     label20:
        $z0 = virtualinvoke $r20.<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>($r0);

        if $z0 == 0 goto label21;

        if $r14 == null goto label21;

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        virtualinvoke $r14.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r22, 1);

        $r23 = $r19.<android.widget.TextView$InputMethodState: float[] mTmpOffset>;

        $r24 = $r19.<android.widget.TextView$InputMethodState: float[] mTmpOffset>;

        $f0 = 0.0F;

        $r24[1] = $f0;

        $f0 = 0.0F;

        $r23[0] = $f0;

        $r25 = virtualinvoke $r1.<android.graphics.Canvas: android.graphics.Matrix getMatrix()>();

        $r23 = $r19.<android.widget.TextView$InputMethodState: float[] mTmpOffset>;

        virtualinvoke $r25.<android.graphics.Matrix: void mapPoints(float[])>($r23);

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        $r23 = $r19.<android.widget.TextView$InputMethodState: float[] mTmpOffset>;

        $f0 = $r23[0];

        $r23 = $r19.<android.widget.TextView$InputMethodState: float[] mTmpOffset>;

        $f1 = $r23[1];

        virtualinvoke $r22.<android.graphics.RectF: void offset(float,float)>($f0, $f1);

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        $i0 = $i10 - $i7;

        $f0 = (float) $i0;

        virtualinvoke $r22.<android.graphics.RectF: void offset(float,float)>(0.0F, $f0);

        $r26 = $r19.<android.widget.TextView$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f0 = $r22.<android.graphics.RectF: float left>;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        $i0 = (int) $d0;

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f0 = $r22.<android.graphics.RectF: float top>;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        $i1 = (int) $d0;

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f0 = $r22.<android.graphics.RectF: float right>;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        $i6 = (int) $d0;

        $r22 = $r19.<android.widget.TextView$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f0 = $r22.<android.graphics.RectF: float bottom>;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        $i5 = (int) $d0;

        virtualinvoke $r26.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i6, $i5);

        $r26 = $r19.<android.widget.TextView$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i6 = $r26.<android.graphics.Rect: int left>;

        $r26 = $r19.<android.widget.TextView$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i0 = $r26.<android.graphics.Rect: int top>;

        $r26 = $r19.<android.widget.TextView$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i1 = $r26.<android.graphics.Rect: int right>;

        $r26 = $r19.<android.widget.TextView$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i5 = $r26.<android.graphics.Rect: int bottom>;

        virtualinvoke $r20.<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>($r0, $i6, $i0, $i1, $i5);

     label21:
        $r17 = $r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        $i0 = $i10 - $i7;

        virtualinvoke $r5.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>($r1, $r14, $r17, $i0);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label22:
        $z0 = $r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label23;

        $r14 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r14.<android.graphics.Path: void reset()>();

        $r12 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r14 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r12.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>($i6, $i5, $r14);

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label23:
        $r17 = $r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        $i6 = $r0.<android.widget.TextView: int mHighlightColor>;

        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>($i6);

        $r17 = $r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        $r18 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r17.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r18);

        $r14 = $r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        goto label16;
    }

    public void onEditorAction(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.widget.TextView$InputContentType $r1;
        android.widget.TextView$OnEditorActionListener $r2;
        boolean $z0;
        android.view.View $r3;
        java.lang.IllegalStateException $r4;
        android.view.inputmethod.InputMethodManager $r5;
        android.os.IBinder $r6;
        android.os.Handler $r7;
        long $l1, $l2;
        android.view.KeyEvent $r8;
        android.os.Message $r9;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 == null goto label3;

        $r2 = $r1.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r2 == null goto label1;

        $r2 = $r1.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z0 = interfaceinvoke $r2.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>($r0, $i0, null);

        if $z0 == 0 goto label1;

        return;

     label1:
        if $i0 != 5 goto label2;

        $r3 = virtualinvoke $r0.<android.view.View: android.view.View focusSearch(int)>(130);

        if $r3 == null goto label4;

        $z0 = virtualinvoke $r3.<android.view.View: boolean requestFocus(int)>(130);

        if $z0 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r4;

     label2:
        if $i0 != 6 goto label3;

        $r5 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r5 == null goto label6;

        $r6 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r5.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

        return;

     label3:
        $r7 = virtualinvoke $r0.<android.view.View: android.os.Handler getHandler()>();

        if $r7 == null goto label7;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8 = new android.view.KeyEvent;

        specialinvoke $r8.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l1, $l1, 0, 66, 0, 0, 0, 0, 22);

        $r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1011, $r8);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        $r8 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r8.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l2, $l1, 1, 66, 0, 0, 0, 0, 22);

        $r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1011, $r8);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        return;

     label4:
        return;

     label5:
        return;

     label6:
        return;

     label7:
        return;
    }

    public void onEndBatchEdit()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        return;
    }

    public void onFinishTemporaryDetach()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        $r0.<android.widget.TextView: boolean mTemporaryDetach> = 0;

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.TextView $r0;
        boolean $z0, $z1, $z2;
        int $i0, $i2, $i3, $i4;
        android.graphics.Rect $r1;
        long $l1;
        android.text.method.MovementMethod $r2;
        java.lang.CharSequence $r3;
        android.text.Spannable $r4;
        android.text.method.TransformationMethod $r5;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $z1 = $r0.<android.widget.TextView: boolean mTemporaryDetach>;

        if $z1 == 0 goto label01;

        specialinvoke $r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>($z0, $i0, $r1);

        return;

     label01:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<android.widget.TextView: long mShowCursor> = $l1;

        virtualinvoke $r0.<android.widget.TextView: void ensureEndedBatchEdit()>();

        if $z0 == 0 goto label10;

        $i2 = virtualinvoke $r0.<android.widget.TextView: int getSelectionStart()>();

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getSelectionEnd()>();

        $z1 = $r0.<android.widget.TextView: boolean mFrozenWithFocus>;

        if $z1 == 0 goto label02;

        if $i2 < 0 goto label02;

        if $i3 >= 0 goto label06;

     label02:
        $z1 = $r0.<android.widget.TextView: boolean mSelectionMoved>;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label03;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Spannable) $r3;

        interfaceinvoke $r2.<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>($r0, $r4, $i0);

     label03:
        $z2 = $r0.<android.widget.TextView: boolean mSelectAllOnFocus>;

        if $z2 == 0 goto label04;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Spannable) $r3;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i4 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r4, 0, $i4);

     label04:
        if $z1 == 0 goto label05;

        if $i2 < 0 goto label05;

        if $i3 < 0 goto label05;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Spannable) $r3;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r4, $i2, $i3);

     label05:
        $r0.<android.widget.TextView: boolean mTouchFocusSelected> = 1;

     label06:
        $r0.<android.widget.TextView: boolean mFrozenWithFocus> = 0;

        $r0.<android.widget.TextView: boolean mSelectionMoved> = 0;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r3 instanceof android.text.Spannable;

        if $z1 == 0 goto label07;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Spannable) $r3;

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>($r4);

     label07:
        specialinvoke $r0.<android.widget.TextView: void makeBlink()>();

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        if $r3 == null goto label08;

        specialinvoke $r0.<android.widget.TextView: void showError()>();

     label08:
        specialinvoke $r0.<android.widget.TextView: void startStopMarquee(boolean)>($z0);

        $r5 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r5 == null goto label09;

        $r5 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        interfaceinvoke $r5.<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>($r0, $r3, $z0, $i0, $r1);

     label09:
        specialinvoke $r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>($z0, $i0, $r1);

        return;

     label10:
        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        if $r3 == null goto label11;

        specialinvoke $r0.<android.widget.TextView: void hideError()>();

     label11:
        virtualinvoke $r0.<android.widget.TextView: void onEndBatchEdit()>();

        goto label08;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $i1 = specialinvoke $r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>($i0, $r1, null);

        if $i1 != 0 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2;
        android.view.KeyEvent $r1, $r2;
        boolean $z0;
        android.text.method.KeyListener $r3;
        java.lang.CharSequence $r4;
        android.text.Editable $r5;
        android.text.method.MovementMethod $r6;
        android.text.Spannable $r7;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.KeyEvent;

        $r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>($r1, 0);

        $i2 = specialinvoke $r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>($i0, $r2, $r1);

        if $i2 != 0 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

        return $z0;

     label1:
        if $i2 != -1 goto label2;

        return 1;

     label2:
        $i1 = $i1 + -1;

        $r1 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>($r1, 1);

        if $i2 != 1 goto label6;

        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Editable) $r4;

        interfaceinvoke $r3.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r0, $r5, $i0, $r1);

     label3:
        $i1 = $i1 + -1;

        if $i1 <= 0 goto label4;

        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Editable) $r4;

        interfaceinvoke $r3.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r0, $r5, $i0, $r2);

        $r3 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Editable) $r4;

        interfaceinvoke $r3.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r0, $r5, $i0, $r1);

        goto label3;

     label4:
        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        if $r4 == null goto label5;

        $z0 = $r0.<android.widget.TextView: boolean mErrorWasChanged>;

        if $z0 != 0 goto label5;

        virtualinvoke $r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

     label5:
        return 1;

     label6:
        if $i2 != 2 goto label5;

        $r6 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Spannable) $r4;

        interfaceinvoke $r6.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>($r0, $r7, $i0, $r1);

     label7:
        $i1 = $i1 + -1;

        if $i1 <= 0 goto label5;

        $r6 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Spannable) $r4;

        interfaceinvoke $r6.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>($r0, $r7, $i0, $r2);

        $r6 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Spannable) $r4;

        interfaceinvoke $r6.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>($r0, $r7, $i0, $r1);

        goto label7;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.widget.TextView $r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        lookupswitch($i0)
        {
            case 29: goto label2;
            case 31: goto label4;
            case 50: goto label5;
            case 52: goto label3;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label2:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canSelectAll()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908319);

        return $z0;

     label3:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canCut()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        return $z0;

     label4:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canCopy()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        return $z0;

     label5:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean canPaste()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        boolean $z0;
        android.text.method.KeyListener $r2;
        java.lang.CharSequence $r3;
        android.text.Editable $r4;
        android.view.View$OnClickListener $r5;
        android.text.method.MovementMethod $r6;
        android.text.Layout $r7;
        android.content.Context $r8;
        java.lang.Object $r9;
        android.view.inputmethod.InputMethodManager $r10;
        android.widget.TextView$InputContentType $r11;
        android.widget.TextView$OnEditorActionListener $r12;
        android.view.View $r13;
        java.lang.IllegalStateException $r14;
        android.os.IBinder $r15;
        android.text.Spannable $r16;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label01:
        lookupswitch($i0)
        {
            case 23: goto label03;
            case 66: goto label05;
            default: goto label02;
        };

     label02:
        $r2 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        if $r2 == null goto label11;

        $r2 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        $z0 = interfaceinvoke $r2.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r0, $r4, $i0, $r1);

        if $z0 == 0 goto label11;

        return 1;

     label03:
        $r5 = $r0.<android.view.View: android.view.View$OnClickListener mOnClickListener>;

        if $r5 != null goto label04;

        $r6 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r6 == null goto label04;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Editable;

        if $z0 == 0 goto label04;

        $r7 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r7 == null goto label04;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z0 == 0 goto label04;

        $r8 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r10 = (android.view.inputmethod.InputMethodManager) $r9;

        virtualinvoke $r10.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r0, 0);

     label04:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label05:
        $r11 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r11 == null goto label06;

        $r11 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r12 = $r11.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r12 == null goto label06;

        $r11 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $z0 = $r11.<android.widget.TextView$InputContentType: boolean enterDown>;

        if $z0 == 0 goto label06;

        $r11 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r11.<android.widget.TextView$InputContentType: boolean enterDown> = 0;

        $r11 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r12 = $r11.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z0 = interfaceinvoke $r12.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>($r0, 0, $r1);

        if $z0 == 0 goto label06;

        return 1;

     label06:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getFlags()>();

        $i1 = $i1 & 16;

        if $i1 != 0 goto label07;

        $z0 = specialinvoke $r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z0 == 0 goto label02;

     label07:
        $r5 = $r0.<android.view.View: android.view.View$OnClickListener mOnClickListener>;

        if $r5 != null goto label10;

        $r13 = virtualinvoke $r0.<android.view.View: android.view.View focusSearch(int)>(130);

        if $r13 == null goto label09;

        $z0 = virtualinvoke $r13.<android.view.View: boolean requestFocus(int)>(130);

        if $z0 != 0 goto label08;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r14;

     label08:
        specialinvoke $r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return 1;

     label09:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getFlags()>();

        $i1 = $i1 & 16;

        if $i1 == 0 goto label10;

        $r10 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r10 == null goto label10;

        $r15 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r10.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r15, 0);

     label10:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label11:
        $r6 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r6 == null goto label12;

        $r7 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r7 == null goto label12;

        $r6 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r16 = (android.text.Spannable) $r3;

        $z0 = interfaceinvoke $r6.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>($r0, $r16, $i0, $r1);

        if $z0 == 0 goto label12;

        return 1;

     label12:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.text.BoringLayout$Metrics $r1, $r2, $r8;
        boolean $z0, $z1;
        android.text.Layout $r3;
        android.text.method.MovementMethod $r4;
        android.text.TextUtils$TruncateAt $r5;
        java.lang.CharSequence $r6;
        android.text.TextPaint $r7;
        float $f0;
        android.widget.TextView$Drawables $r9;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r2 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i1 = -1;

        $z0 = 0;

        if $i2 != 1073741824 goto label09;

        $i5 = $i4;

     label01:
        $i2 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = $i5 - $i2;

        $i4 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i4 = $i2 - $i4;

        $i2 = $i4;

        $i6 = $i4;

        $z1 = $r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z1 == 0 goto label02;

        $i4 = 16384;

     label02:
        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 != null goto label28;

        $i7 = $i6;

     label03:
        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 != null goto label29;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = $i5 - $i1;

        $i7 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i1 = $i1 - $i7;

        virtualinvoke $r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>($i4, $i6, $r1, $r2, $i1, 0);

     label04:
        if $i3 != 1073741824 goto label33;

        $r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

     label05:
        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i1 = $i0 - $i1;

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i1 = $i1 - $i3;

        $i3 = $r0.<android.widget.TextView: int mMaxMode>;

        if $i3 != 1 goto label06;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getLineCount()>();

        $i4 = $r0.<android.widget.TextView: int mMaximum>;

        if $i3 <= $i4 goto label06;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = $r0.<android.widget.TextView: int mMaximum>;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i3);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

     label06:
        $r4 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r4 != null goto label07;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getWidth()>();

        if $i3 > $i2 goto label07;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getHeight()>();

        if $i3 <= $i1 goto label34;

     label07:
        specialinvoke $r0.<android.widget.TextView: void registerForPreDraw()>();

     label08:
        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i5, $i0);

        return;

     label09:
        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label10;

        $r5 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r5 != null goto label10;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>($r3);

     label10:
        if $i1 >= 0 goto label23;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r1 = $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        $r8 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)>($r6, $r7, $r1);

        $r1 = $r8;

        if $r8 == null goto label11;

        $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = $r8;

     label11:
        if $r1 == null goto label12;

        $r8 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if $r1 != $r8 goto label24;

     label12:
        if $i1 >= 0 goto label13;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r6, $r7);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i1 = (int) $f0;

     label13:
        $i5 = $i1;

     label14:
        $r9 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r9 == null goto label15;

        $i6 = $r9.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $i6 = $r9.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

     label15:
        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 == null goto label20;

        $i6 = -1;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label16;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i6 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>($r3);

     label16:
        if $i6 >= 0 goto label17;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        $r8 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)>($r6, $r7, $r2);

        $r2 = $r8;

        if $r8 == null goto label17;

        $r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = $r8;

     label17:
        if $r2 == null goto label18;

        $r8 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if $r2 != $r8 goto label25;

     label18:
        if $i6 >= 0 goto label19;

        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r7 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r6, $r7);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i6 = (int) $f0;

     label19:
        if $i6 <= $i5 goto label20;

        $i5 = $i6;

     label20:
        $i6 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i7 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i6 = $i6 + $i7;

        $i5 = $i5 + $i6;

        $i6 = $r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i6 != 1 goto label26;

        $i6 = $r0.<android.widget.TextView: int mMaxWidth>;

        $i7 = virtualinvoke $r0.<android.widget.TextView: int getLineHeight()>();

        $i6 = $i6 * $i7;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

     label21:
        $i6 = $r0.<android.widget.TextView: int mMinWidthMode>;

        if $i6 != 1 goto label27;

        $i6 = $r0.<android.widget.TextView: int mMinWidth>;

        $i7 = virtualinvoke $r0.<android.widget.TextView: int getLineHeight()>();

        $i6 = $i6 * $i7;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

     label22:
        $i6 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumWidth()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $i5 = $i6;

        if $i2 != -2147483648 goto label01;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i6);

        goto label01;

     label23:
        $z0 = 1;

        goto label11;

     label24:
        $i5 = $r1.<android.text.BoringLayout$Metrics: int width>;

        goto label14;

     label25:
        $i6 = $r2.<android.text.BoringLayout$Metrics: int width>;

        goto label19;

     label26:
        $i6 = $r0.<android.widget.TextView: int mMaxWidth>;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        goto label21;

     label27:
        $i6 = $r0.<android.widget.TextView: int mMinWidth>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        goto label22;

     label28:
        $r3 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i7 = virtualinvoke $r3.<android.text.Layout: int getWidth()>();

        goto label03;

     label29:
        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = virtualinvoke $r3.<android.text.Layout: int getWidth()>();

        if $i8 != $i4 goto label30;

        if $i7 != $i6 goto label30;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i7 = virtualinvoke $r3.<android.text.Layout: int getEllipsizedWidth()>();

        $i8 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i8 = $i5 - $i8;

        $i9 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i8 = $i8 - $i9;

        if $i7 == $i8 goto label04;

     label30:
        $r6 = $r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 != null goto label32;

        $r5 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r5 != null goto label32;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i7 = virtualinvoke $r3.<android.text.Layout: int getWidth()>();

        if $i4 <= $i7 goto label32;

        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z1 = $r3 instanceof android.text.BoringLayout;

        if $z1 != 0 goto label31;

        if $z0 == 0 goto label32;

        if $i1 < 0 goto label32;

        if $i1 > $i4 goto label32;

     label31:
        $r3 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r3.<android.text.Layout: void increaseWidthTo(int)>($i4);

        goto label04;

     label32:
        $i1 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = $i5 - $i1;

        $i7 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i1 = $i1 - $i7;

        virtualinvoke $r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>($i4, $i6, $r1, $r2, $i1, 0);

        goto label04;

     label33:
        $i1 = specialinvoke $r0.<android.widget.TextView: int getDesiredHeight()>();

        $i0 = $i1;

        $r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = $i1;

        if $i3 != -2147483648 goto label05;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i1);

        goto label05;

     label34:
        virtualinvoke $r0.<android.view.View: void scrollTo(int,int)>(0, 0);

        goto label08;
    }

    public boolean onPreDraw()
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.text.Layout $r1;
        boolean $z0;
        android.text.method.MovementMethod $r2;
        java.lang.CharSequence $r3;

        $r0 := @this: android.widget.TextView;

        $i0 = $r0.<android.widget.TextView: int mPreDrawState>;

        if $i0 == 1 goto label1;

        return 1;

     label1:
        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label2;

        specialinvoke $r0.<android.widget.TextView: void assumeLayout()>();

     label2:
        $z0 = 0;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label5;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        $i0 = $i1;

        if $i1 >= 0 goto label3;

        $i1 = $r0.<android.widget.TextView: int mGravity>;

        $i1 = $i1 & 112;

        if $i1 != 80 goto label3;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

     label3:
        if $i0 < 0 goto label4;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean bringPointIntoView(int)>($i0);

     label4:
        $r0.<android.widget.TextView: int mPreDrawState> = 2;

        if $z0 != 0 goto label6;

        return 1;

     label5:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean bringTextIntoView()>();

        goto label4;

     label6:
        return 0;
    }

    public boolean onPrivateIMECommand(java.lang.String, android.os.Bundle)
    {
        android.widget.TextView $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TextView $r0;
        android.os.Parcelable $r1;
        boolean $z0;
        android.widget.TextView$SavedState $r2;
        java.lang.CharSequence $r3;
        int $i0, $i1;
        java.lang.String $r4;
        java.lang.StringBuilder $r5;
        android.text.Spannable $r6;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.widget.TextView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (android.widget.TextView$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = $r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r3 == null goto label2;

        $r3 = $r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

     label2:
        $i0 = $r2.<android.widget.TextView$SavedState: int selStart>;

        if $i0 < 0 goto label5;

        $i0 = $r2.<android.widget.TextView$SavedState: int selEnd>;

        if $i0 < 0 goto label5;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label5;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        $i1 = $r2.<android.widget.TextView$SavedState: int selStart>;

        if $i1 > $i0 goto label3;

        $i1 = $r2.<android.widget.TextView$SavedState: int selEnd>;

        if $i1 <= $i0 goto label6;

     label3:
        $r4 = "";

        $r3 = $r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r3 == null goto label4;

        $r4 = "(restored) ";

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved cursor position ");

        $i0 = $r2.<android.widget.TextView$SavedState: int selStart>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = $r2.<android.widget.TextView$SavedState: int selEnd>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text ");

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextView", $r4);

     label5:
        $r3 = $r2.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        if $r3 == null goto label7;

        $r3 = $r2.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        virtualinvoke $r0.<android.widget.TextView: void setError(java.lang.CharSequence)>($r3);

        return;

     label6:
        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r3;

        $i0 = $r2.<android.widget.TextView$SavedState: int selStart>;

        $i1 = $r2.<android.widget.TextView$SavedState: int selEnd>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r6, $i0, $i1);

        $z0 = $r2.<android.widget.TextView$SavedState: boolean frozenWithFocus>;

        if $z0 == 0 goto label5;

        $r0.<android.widget.TextView: boolean mFrozenWithFocus> = 1;

        goto label5;

     label7:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.TextView $r0;
        android.widget.TextView$ChangeWatcher $r1;
        int $i0, $i1, $i2, $i3;
        android.text.SpannableString $r2;
        android.widget.TextView$SavedState $r3;
        android.os.Parcelable $r4;
        boolean $z0;
        java.lang.CharSequence $r5;
        java.lang.Object[] $r6;
        android.widget.TextView$ChangeWatcher[] $r7;
        java.lang.String $r8;

        $r0 := @this: android.widget.TextView;

        $r4 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $z0 = $r0.<android.widget.TextView: boolean mFreezesText>;

        $i1 = 0;

        $i2 = 0;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r5 == null goto label2;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r5);

        $i1 = $i0;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r5);

        $i2 = $i3;

        if $i0 >= 0 goto label1;

        if $i3 < 0 goto label2;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 0 goto label8;

        $r3 = new android.widget.TextView$SavedState;

        specialinvoke $r3.<android.widget.TextView$SavedState: void <init>(android.os.Parcelable)>($r4);

        $r3.<android.widget.TextView$SavedState: int selStart> = $i1;

        $r3.<android.widget.TextView$SavedState: int selEnd> = $i2;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r5 instanceof android.text.Spanned;

        if $z0 == 0 goto label7;

        $r2 = new android.text.SpannableString;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke $r2.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r5);

        $i0 = interfaceinvoke $r2.<android.text.Spannable: int length()>();

        $r6 = interfaceinvoke $r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/widget/TextView$ChangeWatcher");

        $r7 = (android.widget.TextView$ChangeWatcher[]) $r6;

        $i0 = lengthof $r7;

        $i3 = 0;

     label3:
        if $i3 >= $i0 goto label4;

        $r1 = $r7[$i3];

        interfaceinvoke $r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r1);

        $i3 = $i3 + 1;

        goto label3;

     label4:
        $r3.<android.widget.TextView$SavedState: java.lang.CharSequence text> = $r2;

     label5:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label6;

        if $i1 < 0 goto label6;

        if $i2 < 0 goto label6;

        $r3.<android.widget.TextView$SavedState: boolean frozenWithFocus> = 1;

     label6:
        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        $r3.<android.widget.TextView$SavedState: java.lang.CharSequence error> = $r5;

        return $r3;

     label7:
        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r3.<android.widget.TextView$SavedState: java.lang.CharSequence text> = $r8;

        goto label5;

     label8:
        return $r4;
    }

    protected void onSelectionChanged(int, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return;
    }

    public void onStartTemporaryDetach()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        $r0.<android.widget.TextView: boolean mTemporaryDetach> = 1;

        return;
    }

    protected void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public boolean onTextContextMenuItem(int)
    {
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Intent $r0;
        android.widget.TextView $r1;
        boolean $z0;
        java.lang.CharSequence $r2, $r8;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.text.ClipboardManager $r5;
        android.text.Spannable $r6;
        android.text.Editable $r7;
        android.text.Spanned $r9;
        java.lang.Object[] $r10;
        android.text.style.URLSpan[] $r11;
        android.text.style.URLSpan $r12;
        java.lang.String $r13;
        android.view.inputmethod.InputMethodManager $r14;

        $r1 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r1.<android.widget.TextView: int getSelectionStart()>();

        $i3 = virtualinvoke $r1.<android.widget.TextView: int getSelectionEnd()>();

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label01;

        $i2 = 0;

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

     label01:
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $i1 = $i4;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i3 = $i2;

        if $i4 >= 0 goto label02;

        $i1 = 0;

     label02:
        if $i2 >= 0 goto label03;

        $i3 = 0;

     label03:
        $r3 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r5 = (android.text.ClipboardManager) $r4;

        lookupswitch($i0)
        {
            case 16908319: goto label05;
            case 16908320: goto label08;
            case 16908321: goto label10;
            case 16908322: goto label12;
            case 16908323: goto label14;
            case 16908324: goto label16;
            case 16908325: goto label04;
            case 16908326: goto label04;
            case 16908327: goto label04;
            case 16908328: goto label06;
            case 16908329: goto label07;
            case 16908330: goto label18;
            default: goto label04;
        };

     label04:
        return 0;

     label05:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r6, 0, $i0);

        return 1;

     label06:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        staticinvoke <android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>($r1, $r6);

        return 1;

     label07:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>($r1, $r6);

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getSelectionEnd()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r6, $i0);

        return 1;

     label08:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>($r1, $r6);

        if $i1 != $i3 goto label09;

        $i1 = 0;

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

     label09:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r2 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i1, $i3);

        virtualinvoke $r5.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>($r2);

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Editable) $r2;

        interfaceinvoke $r7.<android.text.Editable: android.text.Editable delete(int,int)>($i1, $i3);

        return 1;

     label10:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>($r1, $r6);

        if $i1 != $i3 goto label11;

        $i1 = 0;

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

     label11:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r2 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i1, $i3);

        virtualinvoke $r5.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>($r2);

        return 1;

     label12:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>($r1, $r6);

        $r2 = virtualinvoke $r5.<android.text.ClipboardManager: java.lang.CharSequence getText()>();

        if $r2 == null goto label13;

        $r8 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r8;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r6, $i3);

        $r8 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Editable) $r8;

        interfaceinvoke $r7.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i1, $i3, $r2);

     label13:
        return 1;

     label14:
        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r2;

        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>($r1, $r6);

        $r2 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Spanned) $r2;

        $r10 = interfaceinvoke $r9.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i3, class "android/text/style/URLSpan");

        $r11 = (android.text.style.URLSpan[]) $r10;

        $i0 = lengthof $r11;

        if $i0 != 1 goto label15;

        $r12 = $r11[0];

        $r13 = virtualinvoke $r12.<android.text.style.URLSpan: java.lang.String getURL()>();

        virtualinvoke $r5.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>($r13);

     label15:
        return 1;

     label16:
        $r14 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r14 == null goto label17;

        virtualinvoke $r14.<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>();

     label17:
        return 1;

     label18:
        $r13 = specialinvoke $r1.<android.widget.TextView: java.lang.String getWordForDictionary()>();

        if $r13 == null goto label19;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>(java.lang.String)>("com.android.settings.USER_DICTIONARY_INSERT");

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("word", $r13);

        $r3 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void startActivity(android.content.Intent)>($r0);

     label19:
        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r0;
        android.widget.TextView $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        android.text.method.MovementMethod $r2;
        java.lang.CharSequence $r3;
        android.text.Layout $r4;
        android.text.Spannable $r5;
        android.content.Context $r6;
        java.lang.Object $r7;
        android.view.inputmethod.InputMethodManager $r8;
        android.widget.TextView$CommitSelectionReceiver $r9;

        $r1 := @this: android.widget.TextView;

        $r0 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r0.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $r1.<android.widget.TextView: boolean mTouchFocusSelected> = 0;

     label1:
        $z0 = specialinvoke $r1.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($r0);

        $z1 = $r1.<android.widget.TextView: boolean mEatTouchRelease>;

        if $z1 == 0 goto label2;

        if $i0 != 1 goto label2;

        $r1.<android.widget.TextView: boolean mEatTouchRelease> = 0;

        return $z0;

     label2:
        $r2 = $r1.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 != null goto label3;

        $z1 = virtualinvoke $r1.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z1 == 0 goto label9;

     label3:
        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r3 instanceof android.text.Spannable;

        if $z1 == 0 goto label9;

        $r4 = $r1.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label9;

        if $i0 != 0 goto label4;

        $r1.<android.widget.TextView: boolean mScrolled> = 0;

     label4:
        $z1 = 0;

        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r3);

        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        $r2 = $r1.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label5;

        $r2 = $r1.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r3;

        $z1 = interfaceinvoke $r2.<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>($r1, $r5, $r0);

        $z1 = 0 | $z1;

     label5:
        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r3 instanceof android.text.Editable;

        if $z2 == 0 goto label8;

        $z2 = virtualinvoke $r1.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z2 == 0 goto label8;

        if $i0 != 1 goto label8;

        $z2 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z2 == 0 goto label8;

        $z2 = $r1.<android.widget.TextView: boolean mScrolled>;

        if $z2 != 0 goto label8;

        $r6 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r8 = (android.view.inputmethod.InputMethodManager) $r7;

        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r3);

        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        $r9 = null;

        if $i0 != $i1 goto label6;

        if $i3 == $i2 goto label7;

     label6:
        $r9 = new android.widget.TextView$CommitSelectionReceiver;

        specialinvoke $r9.<android.widget.TextView$CommitSelectionReceiver: void <init>(android.widget.TextView)>($r1);

        $r9.<android.widget.TextView$CommitSelectionReceiver: int mNewStart> = $i0;

        $r9.<android.widget.TextView$CommitSelectionReceiver: int mNewEnd> = $i3;

     label7:
        $z2 = virtualinvoke $r8.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>($r1, 0, $r9);

        if $z2 == 0 goto label8;

        if $r9 == null goto label8;

        $r3 = $r1.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r3;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r5, $i1, $i2);

        $z1 = 1;

     label8:
        if $z1 == 0 goto label9;

        return 1;

     label9:
        return $z0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.widget.TextView $r0;
        android.view.MotionEvent $r1;
        android.text.method.MovementMethod $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        android.text.Layout $r4;
        android.text.Spannable $r5;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label1;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label1;

        $r2 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r3;

        $z0 = interfaceinvoke $r2.<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>($r0, $r5, $r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0, $z1;
        android.widget.TextView$Blink $r1;
        long $l0;
        android.widget.TextView$InputContentType $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.View: void onWindowFocusChanged(boolean)>($z0);

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        virtualinvoke $r1.<android.widget.TextView$Blink: void uncancel()>();

        $z1 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z1 == 0 goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<android.widget.TextView: long mShowCursor> = $l0;

        specialinvoke $r0.<android.widget.TextView: void makeBlink()>();

     label1:
        specialinvoke $r0.<android.widget.TextView: void startStopMarquee(boolean)>($z0);

        return;

     label2:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        virtualinvoke $r1.<android.widget.TextView$Blink: void cancel()>();

     label3:
        virtualinvoke $r0.<android.widget.TextView: void onEndBatchEdit()>();

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2.<android.widget.TextView$InputContentType: boolean enterDown> = 0;

        goto label1;
    }

    public boolean performLongClick()
    {
        android.widget.TextView $r0;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $z0 = specialinvoke $r0.<android.view.View: boolean performLongClick()>();

        if $z0 == 0 goto label1;

        $r0.<android.widget.TextView: boolean mEatTouchRelease> = 1;

        return 1;

     label1:
        return 0;
    }

    public void removeTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView $r0;
        android.text.TextWatcher $r1;
        int $i0;
        java.util.ArrayList $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.TextWatcher;

        $r2 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label2;

        $r2 = $r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        return;

     label1:
        return;

     label2:
        return;
    }

    boolean reportExtractedText()
    {
        android.widget.TextView $r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        int $i0, $i1, $i2;
        android.view.inputmethod.ExtractedText $r2;
        boolean $z0, $z1;
        android.widget.TextView$InputMethodState $r3, $r4;
        android.view.inputmethod.InputMethodManager $r5;

        $r0 := @this: android.widget.TextView;

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        $z0 = $r3.<android.widget.TextView$InputMethodState: boolean mContentChanged>;

        if $r3 == null goto label3;

        if $z0 != 0 goto label1;

        $z1 = $r3.<android.widget.TextView$InputMethodState: boolean mSelectionModeChanged>;

        if $z1 == 0 goto label3;

     label1:
        $r3.<android.widget.TextView$InputMethodState: boolean mContentChanged> = 0;

        $r3.<android.widget.TextView$InputMethodState: boolean mSelectionModeChanged> = 0;

        $r4 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        $r1 = $r4.<android.widget.TextView$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtracting>;

        if $r1 == null goto label3;

        $r5 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r5 == null goto label3;

        $i0 = $r3.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i0 >= 0 goto label2;

        if $z0 != 0 goto label2;

        $r3.<android.widget.TextView$InputMethodState: int mChangedStart> = -2;

     label2:
        $i2 = $r3.<android.widget.TextView$InputMethodState: int mChangedStart>;

        $i0 = $r3.<android.widget.TextView$InputMethodState: int mChangedEnd>;

        $i1 = $r3.<android.widget.TextView$InputMethodState: int mChangedDelta>;

        $r2 = $r3.<android.widget.TextView$InputMethodState: android.view.inputmethod.ExtractedText mTmpExtracted>;

        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>($r1, $i2, $i0, $i1, $r2);

        if $z0 == 0 goto label3;

        $i0 = $r1.<android.view.inputmethod.ExtractedTextRequest: int token>;

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        $r2 = $r3.<android.widget.TextView$InputMethodState: android.view.inputmethod.ExtractedText mTmpExtracted>;

        virtualinvoke $r5.<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>($r0, $i0, $r2);

        return 1;

     label3:
        return 0;
    }

    void sendAfterTextChanged(android.text.Editable)
    {
        android.text.Editable $r0;
        java.util.ArrayList $r1;
        android.widget.TextView $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.text.TextWatcher $r4;

        $r2 := @this: android.widget.TextView;

        $r0 := @parameter0: android.text.Editable;

        $r1 = $r2.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r1 == null goto label2;

        $r1 = $r2.<android.widget.TextView: java.util.ArrayList mListeners>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (android.text.TextWatcher) $r3;

        interfaceinvoke $r4.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>($r0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    void sendOnTextChanged(java.lang.CharSequence, int, int, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1;
        android.widget.TextView $r2;
        java.lang.Object $r3;
        android.text.TextWatcher $r4;

        $r2 := @this: android.widget.TextView;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 = $r2.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r1 == null goto label2;

        $r1 = $r2.<android.widget.TextView: java.util.ArrayList mListeners>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label3;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r4 = (android.text.TextWatcher) $r3;

        interfaceinvoke $r4.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>($r0, $i0, $i1, $i2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    public final void setAutoLinkMask(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mAutoLinkMask> = $i0;

        return;
    }

    public void setCompoundDrawablePadding(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.widget.TextView$Drawables $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $i0 != 0 goto label2;

        if $r1 == null goto label1;

        $r1.<android.widget.TextView$Drawables: int mDrawablePadding> = $i0;

     label1:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label2:
        if $r1 != null goto label3;

        $r1 = new android.widget.TextView$Drawables;

        specialinvoke $r1.<android.widget.TextView$Drawables: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r1;

     label3:
        $r1.<android.widget.TextView$Drawables: int mDrawablePadding> = $i0;

        goto label1;
    }

    public void setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView $r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;
        android.graphics.Rect $r5;
        android.widget.TextView$Drawables $r6;
        boolean $z0;
        int $i0;
        int[] $r7;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        $r3 := @parameter2: android.graphics.drawable.Drawable;

        $r4 := @parameter3: android.graphics.drawable.Drawable;

        $r6 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 != null goto label01;

        if $r2 != null goto label01;

        if $r3 != null goto label01;

        if $r4 == null goto label04;

     label01:
        $z0 = 1;

     label02:
        if $z0 != 0 goto label06;

        if $r6 == null goto label03;

        $i0 = $r6.<android.widget.TextView$Drawables: int mDrawablePadding>;

        if $i0 != 0 goto label05;

        $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

     label03:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label04:
        $z0 = 0;

        goto label02;

     label05:
        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = null;

        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = null;

        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = null;

        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = null;

        $r6.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label03;

     label06:
        if $r6 != null goto label07;

        $r6 = new android.widget.TextView$Drawables;

        specialinvoke $r6.<android.widget.TextView$Drawables: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r6;

     label07:
        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = $r1;

        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = $r2;

        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = $r3;

        $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = $r4;

        $r5 = $r6.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        $r7 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        if $r1 == null goto label11;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r7);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r5);

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = $i0;

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = $i0;

     label08:
        if $r3 == null goto label12;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r7);

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r5);

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeRight> = $i0;

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableHeightRight> = $i0;

     label09:
        if $r2 == null goto label13;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r7);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r5);

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i0;

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i0;

     label10:
        if $r4 == null goto label14;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r7);

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r5);

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i0;

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i0;

        goto label03;

     label11:
        $r6.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        goto label08;

     label12:
        $r6.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

        goto label09;

     label13:
        $r6.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        goto label10;

     label14:
        $r6.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        $r6.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label03;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1, $r4, $r5, $r6;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = null;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        if $i0 == 0 goto label5;

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label1:
        if $i1 == 0 goto label6;

        $r5 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i1);

     label2:
        if $i2 == 0 goto label7;

        $r6 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i2);

     label3:
        if $i3 == 0 goto label4;

        $r1 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i3);

     label4:
        virtualinvoke $r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r4, $r5, $r6, $r1);

        return;

     label5:
        $r4 = null;

        goto label1;

     label6:
        $r5 = null;

        goto label2;

     label7:
        $r6 = null;

        goto label3;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView $r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        $r3 := @parameter2: android.graphics.drawable.Drawable;

        $r4 := @parameter3: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label1:
        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label3:
        if $r4 == null goto label4;

        $i0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke $r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r1, $r2, $r3, $r4);

        return;
    }

    public void setCursorVisible(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.widget.TextView$Blink $r1, $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.TextView: boolean mCursorVisible> = $z0;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.widget.TextView: void makeBlink()>();

        return;

     label1:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        if $r1 == null goto label2;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$Blink mBlink>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        return;

     label2:
        return;
    }

    public final void setEditableFactory(android.text.Editable$Factory)
    {
        android.widget.TextView $r0;
        android.text.Editable$Factory $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.Editable$Factory;

        $r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = $r1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public void setEllipsize(android.text.TextUtils$TruncateAt)
    {
        android.widget.TextView $r0;
        android.text.TextUtils$TruncateAt $r1;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.TextUtils$TruncateAt;

        $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize> = $r1;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label1;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public void setEms(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinWidth> = $i0;

        $r0.<android.widget.TextView: int mMaxWidth> = $i0;

        $r0.<android.widget.TextView: int mMinWidthMode> = 1;

        $r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setError(java.lang.CharSequence)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable $r4;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

        return;

     label1:
        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301918);

        $i0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>($r1, $r4);

        return;
    }

    public void setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.widget.TextView $r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4, $r6;
        android.widget.TextView$Drawables $r2;
        java.lang.CharSequence $r5;
        android.widget.TextView$ErrorPopup $r7;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r5 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $r5 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>($r5);

        $r0.<android.widget.TextView: java.lang.CharSequence mError> = $r5;

        $r0.<android.widget.TextView: boolean mErrorWasChanged> = 1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 == null goto label3;

        $r6 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $r4 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r6, $r3, $r1, $r4);

     label1:
        if $r5 != null goto label4;

        $r7 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        if $r7 == null goto label5;

        $r7 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $z0 = virtualinvoke $r7.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label2;

        $r7 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        virtualinvoke $r7.<android.widget.PopupWindow: void dismiss()>();

     label2:
        $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup> = null;

        return;

     label3:
        virtualinvoke $r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(null, null, $r1, null);

        goto label1;

     label4:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label6;

        specialinvoke $r0.<android.widget.TextView: void showError()>();

        return;

     label5:
        return;

     label6:
        return;
    }

    public void setExtractedText(android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView $r0;
        android.view.inputmethod.ExtractedText $r1;
        android.text.Editable $r2;
        java.lang.CharSequence $r3;
        android.widget.TextView$BufferType $r4;
        android.text.Spannable $r5;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.inputmethod.ExtractedText;

        $r2 = virtualinvoke $r0.<android.widget.TextView: android.text.Editable getEditableText()>();

        $r3 = $r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        if $r3 == null goto label01;

        if $r2 != null goto label04;

        $r3 = $r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $r4 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r3, $r4);

     label01:
        $r3 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Spannable) $r3;

        $i0 = interfaceinvoke $r5.<android.text.Spannable: int length()>();

        $i1 = $r1.<android.view.inputmethod.ExtractedText: int selectionStart>;

        if $i1 >= 0 goto label08;

        $i1 = 0;

     label02:
        $i2 = $r1.<android.view.inputmethod.ExtractedText: int selectionEnd>;

        if $i2 >= 0 goto label09;

        $i2 = 0;

     label03:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r5, $i1, $i2);

        $i0 = $r1.<android.view.inputmethod.ExtractedText: int flags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label10;

        staticinvoke <android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>($r0, $r5);

        return;

     label04:
        $i0 = $r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if $i0 >= 0 goto label05;

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>($r2, 0, $i0);

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $r3 = $r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, $i0, $r3);

        goto label01;

     label05:
        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        $i1 = $r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if $i1 <= $i0 goto label06;

        $i1 = $i0;

     label06:
        $i2 = $r1.<android.view.inputmethod.ExtractedText: int partialEndOffset>;

        if $i2 <= $i0 goto label07;

        $i2 = $i0;

     label07:
        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>($r2, $i1, $i2);

        $r3 = $r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i1, $i2, $r3);

        goto label01;

     label08:
        if $i1 <= $i0 goto label02;

        $i1 = $i0;

        goto label02;

     label09:
        if $i2 <= $i0 goto label03;

        $i2 = $i0;

        goto label03;

     label10:
        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>($r0, $r5);

        return;
    }

    public void setExtracting(android.view.inputmethod.ExtractedTextRequest)
    {
        android.widget.TextView $r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        android.widget.TextView$InputMethodState $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        $r2.<android.widget.TextView$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtracting> = $r1;

        return;

     label1:
        return;
    }

    public void setFilters(android.text.InputFilter[])
    {
        android.widget.TextView $r0;
        android.text.InputFilter[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        android.text.Editable $r4;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.InputFilter[];

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = $r1;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Editable;

        if $z0 == 0 goto label2;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        specialinvoke $r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r4, $r1);

        return;

     label2:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.TextView $r0, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.widget.TextView$ErrorPopup $r1;
        android.view.View $r2;
        java.lang.CharSequence $r4;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = specialinvoke $r0.<android.view.View: boolean setFrame(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $r2 = virtualinvoke $r1.<android.widget.PopupWindow: android.view.View getContentView()>();

        $r3 = (android.widget.TextView) $r2;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $r4 = $r0.<android.widget.TextView: java.lang.CharSequence mError>;

        specialinvoke $r0.<android.widget.TextView: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>($r1, $r4, $r3);

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$ErrorPopup mPopup>;

        $i0 = specialinvoke $r0.<android.widget.TextView: int getErrorX()>();

        $i1 = specialinvoke $r0.<android.widget.TextView: int getErrorY()>();

        virtualinvoke $r1.<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>($r0, $i0, $i1, -1, -1);

     label1:
        specialinvoke $r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        return $z0;
    }

    public void setFreezesText(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.TextView: boolean mFreezesText> = $z0;

        return;
    }

    public void setGravity(int)
    {
        android.widget.TextView $r0;
        android.text.BoringLayout$Metrics $r1, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 = $i0 & 7;

        if $i1 != 0 goto label1;

        $i0 = $i0 | 3;

     label1:
        $i1 = $i0 & 112;

        if $i1 != 0 goto label2;

        $i0 = $i0 | 48;

     label2:
        $z0 = 0;

        $i1 = $i0 & 7;

        $i2 = $r0.<android.widget.TextView: int mGravity>;

        $i2 = $i2 & 7;

        if $i1 == $i2 goto label3;

        $z0 = 1;

     label3:
        $i1 = $r0.<android.widget.TextView: int mGravity>;

        if $i0 == $i1 goto label4;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label4:
        $r0.<android.widget.TextView: int mGravity> = $i0;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label7;

        if $z0 == 0 goto label8;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

        $r2 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r2 != null goto label6;

        $i1 = 0;

     label5:
        $r3 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i2 = $r0.<android.view.View: int mRight>;

        $i3 = $r0.<android.view.View: int mLeft>;

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i2 = $i2 - $i3;

        virtualinvoke $r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>($i0, $i1, $r3, $r1, $i2, 1);

        return;

     label6:
        $r2 = $r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

        goto label5;

     label7:
        return;

     label8:
        return;
    }

    public void setHeight(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinimum> = $i0;

        $r0.<android.widget.TextView: int mMaximum> = $i0;

        $r0.<android.widget.TextView: int mMinMode> = 2;

        $r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setHighlightColor(int)
    {
        android.widget.TextView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.TextView: int mHighlightColor>;

        if $i1 == $i0 goto label1;

        $r0.<android.widget.TextView: int mHighlightColor> = $i0;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public final void setHint(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke $r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>($r3);

        return;
    }

    public final void setHint(java.lang.CharSequence)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        android.text.Layout $r2;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r1 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>($r1);

        $r0.<android.widget.TextView: java.lang.CharSequence mHint> = $r1;

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label1;

        specialinvoke $r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label2:
        return;
    }

    public final void setHintTextColor(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = $r1;

        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setHintTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = $r1;

        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setHorizontallyScrolling(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.TextView: boolean mHorizontallyScrolling> = $z0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public void setImeActionLabel(java.lang.CharSequence, int)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0;
        android.widget.TextView$InputContentType $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r2 != null goto label1;

        $r2 = new android.widget.TextView$InputContentType;

        specialinvoke $r2.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r2;

     label1:
        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2.<android.widget.TextView$InputContentType: java.lang.CharSequence imeActionLabel> = $r1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2.<android.widget.TextView$InputContentType: int imeActionId> = $i0;

        return;
    }

    public void setImeOptions(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.widget.TextView$InputContentType $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r1 != null goto label1;

        $r1 = new android.widget.TextView$InputContentType;

        specialinvoke $r1.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r1;

     label1:
        $r1 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r1.<android.widget.TextView$InputContentType: int imeOptions> = $i0;

        return;
    }

    public void setIncludeFontPadding(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.TextView: boolean mIncludePad> = $z0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public void setInputExtras(int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.widget.TextView $r0;
        int $i0;
        android.content.res.Resources $r1;
        android.content.res.XmlResourceParser $r2;
        android.widget.TextView$InputContentType $r3;
        android.os.Bundle $r4;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r3 != null goto label1;

        $r3 = new android.widget.TextView$InputContentType;

        specialinvoke $r3.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r3;

     label1:
        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        $r3.<android.widget.TextView$InputContentType: android.os.Bundle extras> = $r4;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r4 = $r3.<android.widget.TextView$InputContentType: android.os.Bundle extras>;

        virtualinvoke $r1.<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>($r2, $r4);

        return;
    }

    public void setInputType(int)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        android.text.method.PasswordTransformationMethod $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.text.method.TransformationMethod $r3;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.widget.TextView: void setInputType(int,boolean)>($i0, 0);

        $i1 = $i0 & 4095;

        if $i1 != 129 goto label08;

        $z0 = 1;

     label01:
        $z1 = 0;

        if $z0 == 0 goto label09;

        $r1 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke $r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        specialinvoke $r0.<android.widget.TextView: void setTypefaceByIndex(int,int)>(3, 0);

     label02:
        $i0 = 131087 & $i0;

        if $i0 != 131073 goto label12;

        $z2 = 1;

     label03:
        $z3 = $r0.<android.widget.TextView: boolean mSingleLine>;

        if $z3 == $z2 goto label04;

        if $z1 == 0 goto label07;

     label04:
        if $z2 != 0 goto label13;

        $z1 = 1;

     label05:
        if $z0 != 0 goto label14;

        $z0 = 1;

     label06:
        specialinvoke $r0.<android.widget.TextView: void applySingleLine(boolean,boolean)>($z1, $z0);

     label07:
        $r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r2 == null goto label15;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>($r0);

        return;

     label08:
        $z0 = 0;

        goto label01;

     label09:
        $r3 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r1 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        if $r3 != $r1 goto label11;

        if $i1 == 145 goto label10;

        specialinvoke $r0.<android.widget.TextView: void setTypefaceByIndex(int,int)>(-1, -1);

     label10:
        $z1 = 1;

        goto label02;

     label11:
        if $i1 != 145 goto label02;

        specialinvoke $r0.<android.widget.TextView: void setTypefaceByIndex(int,int)>(3, 0);

        goto label02;

     label12:
        $z2 = 0;

        goto label03;

     label13:
        $z1 = 0;

        goto label05;

     label14:
        $z0 = 0;

        goto label06;

     label15:
        return;
    }

    public void setKeyListener(android.text.method.KeyListener)
    {
        android.widget.TextView $r0;
        android.text.method.KeyListener $r1;
        int $i0;
        boolean $z0;
        android.view.inputmethod.InputMethodManager $r2;
        java.lang.IncompatibleClassChangeError $r3;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.method.KeyListener;

        specialinvoke $r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>($r1);

        specialinvoke $r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        if $r1 == null goto label6;

     label1:
        $r1 = $r0.<android.widget.TextView: android.text.method.KeyListener mInput>;

        $i0 = interfaceinvoke $r1.<android.text.method.KeyListener: int getInputType()>();

        $r0.<android.widget.TextView: int mInputType> = $i0;

     label2:
        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & 15;

        if $i0 != 1 goto label3;

        $z0 = $r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label5;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & -131073;

        $r0.<android.widget.TextView: int mInputType> = $i0;

     label3:
        $r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if $r2 == null goto label7;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>($r0);

        return;

     label4:
        $r3 := @caughtexception;

        $r0.<android.widget.TextView: int mInputType> = 1;

        goto label2;

     label5:
        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 | 131072;

        $r0.<android.widget.TextView: int mInputType> = $i0;

        goto label3;

     label6:
        $r0.<android.widget.TextView: int mInputType> = 0;

        goto label3;

     label7:
        return;

        catch java.lang.IncompatibleClassChangeError from label1 to label2 with label4;
    }

    public void setLineSpacing(float, float)
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        android.text.Layout $r1;

        $r0 := @this: android.widget.TextView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r0.<android.widget.TextView: float mSpacingMult> = $f1;

        $r0.<android.widget.TextView: float mSpacingAdd> = $f0;

        $r1 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public void setLines(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinimum> = $i0;

        $r0.<android.widget.TextView: int mMaximum> = $i0;

        $r0.<android.widget.TextView: int mMinMode> = 1;

        $r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public final void setLinkTextColor(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = $r1;

        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinkTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = $r1;

        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinksClickable(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.TextView: boolean mLinksClickable> = $z0;

        return;
    }

    public void setMarqueeRepeatLimit(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMarqueeRepeatLimit> = $i0;

        return;
    }

    public void setMaxEms(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMaxWidth> = $i0;

        $r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMaxHeight(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMaximum> = $i0;

        $r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMaxLines(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMaximum> = $i0;

        $r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMaxWidth(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMaxWidth> = $i0;

        $r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMinEms(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinWidth> = $i0;

        $r0.<android.widget.TextView: int mMinWidthMode> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMinHeight(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinimum> = $i0;

        $r0.<android.widget.TextView: int mMinMode> = 2;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMinLines(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinimum> = $i0;

        $r0.<android.widget.TextView: int mMinMode> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setMinWidth(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinWidth> = $i0;

        $r0.<android.widget.TextView: int mMinWidthMode> = 2;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public final void setMovementMethod(android.text.method.MovementMethod)
    {
        android.widget.TextView $r0;
        android.text.method.MovementMethod $r1;
        java.lang.CharSequence $r2;
        boolean $z0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.method.MovementMethod;

        $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = $r1;

        $r1 = $r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 == null goto label1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

     label1:
        specialinvoke $r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        return;
    }

    public void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
    {
        android.widget.TextView $r0;
        android.widget.TextView$OnEditorActionListener $r1;
        android.widget.TextView$InputContentType $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.widget.TextView$OnEditorActionListener;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r2 != null goto label1;

        $r2 = new android.widget.TextView$InputContentType;

        specialinvoke $r2.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r2;

     label1:
        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2.<android.widget.TextView$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener> = $r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = $r0.<android.view.View: int mPaddingLeft>;

        if $i0 != $i4 goto label1;

        $i4 = $r0.<android.view.View: int mPaddingRight>;

        if $i2 != $i4 goto label1;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        if $i1 != $i4 goto label1;

        $i4 = $r0.<android.view.View: int mPaddingBottom>;

        if $i3 == $i4 goto label2;

     label1:
        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke $r0.<android.view.View: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setPaintFlags(int)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.text.TextPaint $r1;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getFlags()>();

        if $i1 == $i0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setFlags(int)>($i0);

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label2;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    public void setPrivateImeOptions(java.lang.String)
    {
        android.widget.TextView $r0;
        java.lang.String $r1;
        android.widget.TextView$InputContentType $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        if $r2 != null goto label1;

        $r2 = new android.widget.TextView$InputContentType;

        specialinvoke $r2.<android.widget.TextView$InputContentType: void <init>(android.widget.TextView)>($r0);

        $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType> = $r2;

     label1:
        $r2 = $r0.<android.widget.TextView: android.widget.TextView$InputContentType mInputContentType>;

        $r2.<android.widget.TextView$InputContentType: java.lang.String privateImeOptions> = $r1;

        return;
    }

    public void setRawInputType(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mInputType> = $i0;

        return;
    }

    public void setScroller(android.widget.Scroller)
    {
        android.widget.TextView $r0;
        android.widget.Scroller $r1;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.widget.Scroller;

        $r0.<android.widget.TextView: android.widget.Scroller mScroller> = $r1;

        return;
    }

    public void setSelectAllOnFocus(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        android.widget.TextView$BufferType $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.TextView: boolean mSelectAllOnFocus> = $z0;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 != 0 goto label2;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r1 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r2, $r1);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void setSelected(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0, $z1;
        android.text.TextUtils$TruncateAt $r1, $r2;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke $r0.<android.view.View: boolean isSelected()>();

        specialinvoke $r0.<android.view.View: void setSelected(boolean)>($z0);

        if $z0 == $z1 goto label2;

        $r1 = $r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r1 != $r2 goto label3;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.widget.TextView: void startMarquee()>();

        return;

     label1:
        specialinvoke $r0.<android.widget.TextView: void stopMarquee()>();

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setShadowLayer(float, float, float, int)
    {
        android.widget.TextView $r0;
        float $f0, $f1, $f2;
        int $i0;
        android.text.TextPaint $r1;

        $r0 := @this: android.widget.TextView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $i0 := @parameter3: int;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f0, $f1, $f2, $i0);

        $r0.<android.widget.TextView: float mShadowRadius> = $f0;

        $r0.<android.widget.TextView: float mShadowDx> = $f1;

        $r0.<android.widget.TextView: float mShadowDy> = $f2;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setSingleLine()
    {
        android.widget.TextView $r0;

        $r0 := @this: android.widget.TextView;

        virtualinvoke $r0.<android.widget.TextView: void setSingleLine(boolean)>(1);

        return;
    }

    public void setSingleLine(boolean)
    {
        android.widget.TextView $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & 15;

        if $i0 != 1 goto label1;

        if $z0 == 0 goto label2;

        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 & -131073;

        $r0.<android.widget.TextView: int mInputType> = $i0;

     label1:
        specialinvoke $r0.<android.widget.TextView: void applySingleLine(boolean,boolean)>($z0, 1);

        return;

     label2:
        $i0 = $r0.<android.widget.TextView: int mInputType>;

        $i0 = $i0 | 131072;

        $r0.<android.widget.TextView: int mInputType> = $i0;

        goto label1;
    }

    public final void setSpannableFactory(android.text.Spannable$Factory)
    {
        android.widget.TextView $r0;
        android.text.Spannable$Factory $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.Spannable$Factory;

        $r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = $r1;

        $r2 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public final void setText(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        return;
    }

    public final void setText(int, android.widget.TextView$BufferType)
    {
        android.widget.TextView $r0;
        int $i0;
        android.widget.TextView$BufferType $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence $r4;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.widget.TextView$BufferType;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, $r1);

        return;
    }

    public final void setText(java.lang.CharSequence)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        android.widget.TextView$BufferType $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r1, $r2);

        return;
    }

    public void setText(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        android.widget.TextView$BufferType $r2;
        android.widget.TextView$CharWrapper $r3;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.widget.TextView$BufferType;

        specialinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>($r1, $r2, 1, 0);

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        staticinvoke <android.widget.TextView$CharWrapper: char[] access$102(android.widget.TextView$CharWrapper,char[])>($r3, null);

        return;

     label1:
        return;
    }

    public final void setText(char[], int, int)
    {
        android.widget.TextView $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;
        android.widget.TextView$CharWrapper $r6;
        android.widget.TextView$BufferType $r7;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

        if $i0 < 0 goto label1;

        if $i1 < 0 goto label1;

        $i3 = $i0 + $i1;

        $i4 = lengthof $r1;

        if $i3 <= $i4 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r5 == null goto label5;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        $i2 = $i3;

        $r5 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke $r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r5, 0, $i3, $i1);

     label3:
        $r6 = $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if $r6 != null goto label6;

        $r6 = new android.widget.TextView$CharWrapper;

        specialinvoke $r6.<android.widget.TextView$CharWrapper: void <init>(char[],int,int)>($r1, $i0, $i1);

        $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper> = $r6;

     label4:
        $r6 = $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        $r7 = $r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        specialinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>($r6, $r7, 0, $i2);

        return;

     label5:
        specialinvoke $r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, $i1);

        goto label3;

     label6:
        $r6 = $r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        virtualinvoke $r6.<android.widget.TextView$CharWrapper: void set(char[],int,int)>($r1, $i0, $i1);

        goto label4;
    }

    public void setTextAppearance(android.content.Context, int)
    {
        android.widget.TextView $r0;
        android.content.Context $r1;
        int $i0, $i1;
        int[] $r2;
        android.content.res.TypedArray $r3;
        android.content.res.ColorStateList $r4;
        float $f0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = <com.android.internal.R$styleable: int[] TextAppearance>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r2);

        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getColor(int,int)>(4, 0);

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.widget.TextView: void setHighlightColor(int)>($i0);

     label1:
        $r4 = virtualinvoke $r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        if $r4 == null goto label2;

        virtualinvoke $r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r4);

     label2:
        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        if $i0 == 0 goto label3;

        $f0 = (float) $i0;

        specialinvoke $r0.<android.widget.TextView: void setRawTextSize(float)>($f0);

     label3:
        $r4 = virtualinvoke $r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        if $r4 == null goto label4;

        virtualinvoke $r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>($r4);

     label4:
        $r4 = virtualinvoke $r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(6);

        if $r4 == null goto label5;

        virtualinvoke $r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>($r4);

     label5:
        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        $i1 = virtualinvoke $r3.<android.content.res.TypedArray: int getInt(int,int)>(2, -1);

        specialinvoke $r0.<android.widget.TextView: void setTypefaceByIndex(int,int)>($i0, $i1);

        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setTextColor(int)
    {
        android.widget.TextView $r0;
        int $i0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        $r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = $r1;

        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView $r0;
        android.content.res.ColorStateList $r1;
        java.lang.NullPointerException $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.content.res.ColorStateList;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = $r1;

        specialinvoke $r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence)
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        android.widget.TextView$BufferType $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke $r0.<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>($r1, $r2);

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        java.lang.CharSequence $r0;
        android.widget.TextView$BufferType $r1;
        android.widget.TextView $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        android.text.Spannable $r3;

        $r2 := @this: android.widget.TextView;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: android.widget.TextView$BufferType;

        $i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        $i1 = virtualinvoke $r2.<android.widget.TextView: int getSelectionEnd()>();

        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r0, $r1);

        if $i0 >= 0 goto label1;

        if $i1 < 0 goto label2;

     label1:
        $r0 = $r2.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r0 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        $r0 = $r2.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Spannable) $r0;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, $i0, $i1);

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setTextScaleX(float)
    {
        android.widget.TextView $r0;
        float $f0, $f1;
        android.text.TextPaint $r1;
        byte $b0;
        android.text.Layout $r2;

        $r0 := @this: android.widget.TextView;

        $f0 := @parameter0: float;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.graphics.Paint: float getTextScaleX()>();

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r1 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setTextScaleX(float)>($f0);

        $r2 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label2;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    public void setTextSize(float)
    {
        android.widget.TextView $r0;
        float $f0;

        $r0 := @this: android.widget.TextView;

        $f0 := @parameter0: float;

        virtualinvoke $r0.<android.widget.TextView: void setTextSize(int,float)>(2, $f0);

        return;
    }

    public void setTextSize(int, float)
    {
        android.widget.TextView $r0;
        int $i0;
        float $f0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        if $r1 != null goto label2;

        $r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

     label1:
        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>($i0, $f0, $r3);

        specialinvoke $r0.<android.widget.TextView: void setRawTextSize(float)>($f0);

        return;

     label2:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        goto label1;
    }

    public final void setTransformationMethod(android.text.method.TransformationMethod)
    {
        android.widget.TextView $r0;
        android.text.method.TransformationMethod $r1, $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        android.text.Spannable $r4;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.method.TransformationMethod;

        $r2 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        $r2 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r2 == null goto label2;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label2;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Spannable) $r3;

        $r2 = $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        interfaceinvoke $r4.<android.text.Spannable: void removeSpan(java.lang.Object)>($r2);

     label2:
        $r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = $r1;

        $r3 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        return;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.widget.TextView $r0;
        android.graphics.Typeface $r1, $r2;
        android.text.TextPaint $r3;
        android.text.Layout $r4;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.Typeface;

        $r3 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r3.<android.graphics.Paint: android.graphics.Typeface getTypeface()>();

        if $r2 == $r1 goto label1;

        $r3 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r1);

        $r4 = $r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label2;

        specialinvoke $r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    public void setTypeface(android.graphics.Typeface, int)
    {
        android.widget.TextView $r0;
        int $i0, $i1;
        android.graphics.Typeface $r1;
        android.text.TextPaint $r2;
        boolean $z0;
        float $f0;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.Typeface;

        $i0 := @parameter1: int;

        if $i0 <= 0 goto label9;

        if $r1 != null goto label5;

        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>($i0);

     label1:
        virtualinvoke $r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

        if $r1 == null goto label6;

        $i1 = virtualinvoke $r1.<android.graphics.Typeface: int getStyle()>();

     label2:
        $i1 = $i1 ^ -1;

        $i0 = $i0 & $i1;

        $r2 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label7;

        $z0 = 1;

     label3:
        virtualinvoke $r2.<android.graphics.Paint: void setFakeBoldText(boolean)>($z0);

        $r2 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label8;

        $f0 = -0.25F;

     label4:
        virtualinvoke $r2.<android.graphics.Paint: void setTextSkewX(float)>($f0);

        return;

     label5:
        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r1, $i0);

        goto label1;

     label6:
        $i1 = 0;

        goto label2;

     label7:
        $z0 = 0;

        goto label3;

     label8:
        $f0 = 0.0F;

        goto label4;

     label9:
        $r2 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setFakeBoldText(boolean)>(0);

        $r2 = $r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSkewX(float)>(0.0F);

        virtualinvoke $r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

        return;
    }

    public void setWidth(int)
    {
        android.widget.TextView $r0;
        int $i0;

        $r0 := @this: android.widget.TextView;

        $i0 := @parameter0: int;

        $r0.<android.widget.TextView: int mMinWidth> = $i0;

        $r0.<android.widget.TextView: int mMaxWidth> = $i0;

        $r0.<android.widget.TextView: int mMinWidthMode> = 2;

        $r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    void spanChange(android.text.Spanned, java.lang.Object, int, int, int, int)
    {
        android.widget.TextView $r0;
        android.text.Spanned $r1;
        java.lang.Object $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.TextView$InputMethodState $r3;
        boolean $z0, $z1;
        long $l7;
        android.view.inputmethod.ExtractedTextRequest $r5;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.text.Spanned;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z0 = 0;

        $i4 = -1;

        $i5 = -1;

        $r3 = $r0.<android.widget.TextView: android.widget.TextView$InputMethodState mInputMethodState>;

        $r4 = <android.text.Selection: java.lang.Object SELECTION_END>;

        if $r2 != $r4 goto label03;

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $z0 = 1;

        $i5 = $i1;

        $z1 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z1 != 0 goto label01;

        $r0.<android.widget.TextView: boolean mSelectionMoved> = 1;

     label01:
        if $i0 >= 0 goto label02;

        if $i1 < 0 goto label03;

     label02:
        $i6 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        specialinvoke $r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i6, $i0, $i1);

        specialinvoke $r0.<android.widget.TextView: void registerForPreDraw()>();

        $z1 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z1 == 0 goto label03;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<android.widget.TextView: long mShowCursor> = $l7;

        specialinvoke $r0.<android.widget.TextView: void makeBlink()>();

     label03:
        $r4 = <android.text.Selection: java.lang.Object SELECTION_START>;

        if $r2 != $r4 goto label06;

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $z0 = 1;

        $i4 = $i1;

        $z1 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z1 != 0 goto label04;

        $r0.<android.widget.TextView: boolean mSelectionMoved> = 1;

     label04:
        if $i0 >= 0 goto label05;

        if $i1 < 0 goto label06;

     label05:
        $i6 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        specialinvoke $r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i6, $i0, $i1);

     label06:
        if $z0 == 0 goto label09;

        $i6 = interfaceinvoke $r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r2);

        $i6 = $i6 & 512;

        if $i6 != 0 goto label09;

        if $i4 >= 0 goto label07;

        $i4 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

     label07:
        if $i5 >= 0 goto label08;

        $i5 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

     label08:
        virtualinvoke $r0.<android.widget.TextView: void onSelectionChanged(int,int)>($i4, $i5);

     label09:
        $z0 = $r2 instanceof android.text.style.UpdateAppearance;

        if $z0 != 0 goto label10;

        $z0 = $r2 instanceof android.text.style.ParagraphStyle;

        if $z0 == 0 goto label12;

     label10:
        if $r3 == null goto label11;

        $i4 = $r3.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        if $i4 != 0 goto label19;

     label11:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        specialinvoke $r0.<android.widget.TextView: void checkForResize()>();

     label12:
        $z0 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label15;

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if $r3 == null goto label13;

        $z0 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label13;

        $r3.<android.widget.TextView$InputMethodState: boolean mSelectionModeChanged> = 1;

     label13:
        $i4 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        if $i4 < 0 goto label15;

        if $r3 == null goto label14;

        $i4 = $r3.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        if $i4 != 0 goto label20;

     label14:
        specialinvoke $r0.<android.widget.TextView: void invalidateCursor()>();

     label15:
        $z0 = $r2 instanceof android.text.ParcelableSpan;

        if $z0 == 0 goto label22;

        if $r3 == null goto label23;

        $r5 = $r3.<android.widget.TextView$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtracting>;

        if $r5 == null goto label24;

        $i4 = $r3.<android.widget.TextView$InputMethodState: int mBatchEditNesting>;

        if $i4 == 0 goto label21;

        if $i0 < 0 goto label17;

        $i4 = $r3.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i4 <= $i0 goto label16;

        $r3.<android.widget.TextView$InputMethodState: int mChangedStart> = $i0;

     label16:
        $i0 = $r3.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i0 <= $i2 goto label17;

        $r3.<android.widget.TextView$InputMethodState: int mChangedStart> = $i2;

     label17:
        if $i1 < 0 goto label25;

        $i0 = $r3.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i0 <= $i1 goto label18;

        $r3.<android.widget.TextView$InputMethodState: int mChangedStart> = $i1;

     label18:
        $i0 = $r3.<android.widget.TextView$InputMethodState: int mChangedStart>;

        if $i0 <= $i3 goto label26;

        $r3.<android.widget.TextView$InputMethodState: int mChangedStart> = $i3;

        return;

     label19:
        $r3.<android.widget.TextView$InputMethodState: boolean mContentChanged> = 1;

        goto label12;

     label20:
        $r3.<android.widget.TextView$InputMethodState: boolean mCursorChanged> = 1;

        goto label15;

     label21:
        $r3.<android.widget.TextView$InputMethodState: boolean mContentChanged> = 1;

        return;

     label22:
        return;

     label23:
        return;

     label24:
        return;

     label25:
        return;

     label26:
        return;
    }

    void updateAfterEdit()
    {
        android.widget.TextView $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        boolean $z0;
        long $l2;

        $r0 := @this: android.widget.TextView;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $r1 = $r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        if $i0 >= 0 goto label1;

        $i1 = $r0.<android.widget.TextView: int mGravity>;

        $i1 = $i1 & 112;

        if $i1 != 80 goto label2;

     label1:
        specialinvoke $r0.<android.widget.TextView: void registerForPreDraw()>();

     label2:
        if $i0 < 0 goto label3;

        $r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label3;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<android.widget.TextView: long mShowCursor> = $l2;

        specialinvoke $r0.<android.widget.TextView: void makeBlink()>();

     label3:
        specialinvoke $r0.<android.widget.TextView: void checkForResize()>();

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView $r0;
        android.graphics.drawable.Drawable $r1, $r3;
        boolean $z0;
        android.widget.TextView$Drawables $r2;

        $r0 := @this: android.widget.TextView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke $r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 != 0 goto label3;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r1 == $r3 goto label1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r1 == $r3 goto label1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r1 == $r3 goto label1;

        $r2 = $r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r1 != $r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;

     label3:
        return $z0;
    }
}
