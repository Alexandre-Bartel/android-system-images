class com.android.server.am.ActivityManagerService$AThread extends java.lang.Thread
{
    boolean mReady;
    com.android.server.am.ActivityManagerService mService;

    public void <init>()
    {
        com.android.server.am.ActivityManagerService$AThread $r0;

        $r0 := @this: com.android.server.am.ActivityManagerService$AThread;

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>("ActivityManager");

        $r0.<com.android.server.am.ActivityManagerService$AThread: boolean mReady> = 0;

        return;
    }

    public void run()
    {
        com.android.server.am.ActivityManagerService$AThread $r0;
        com.android.server.am.ActivityManagerService $r1;
        boolean $z0;
        java.lang.InterruptedException $r2;
        java.lang.Throwable $r3, $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService$AThread;

        staticinvoke <android.os.Looper: void prepare()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(-2);

        $r1 = new com.android.server.am.ActivityManagerService;

        specialinvoke $r1.<com.android.server.am.ActivityManagerService: void <init>(com.android.server.am.ActivityManagerService$1)>(null);

        entermonitor $r0;

     label01:
        $r0.<com.android.server.am.ActivityManagerService$AThread: com.android.server.am.ActivityManagerService mService> = $r1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label02:
        entermonitor $r0;

     label03:
        $z0 = $r0.<com.android.server.am.ActivityManagerService$AThread: boolean mReady>;

     label04:
        if $z0 != 0 goto label11;

     label05:
        virtualinvoke $r0.<java.lang.Object: void wait()>();

     label06:
        goto label03;

     label07:
        $r2 := @caughtexception;

        goto label03;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor $r0;

     label10:
        throw $r3;

     label11:
        exitmonitor $r0;

     label12:
        staticinvoke <android.os.Looper: void loop()>();

        return;

     label13:
        $r4 := @caughtexception;

     label14:
        exitmonitor $r0;

     label15:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }
}
