public class org.apache.harmony.awt.gl.font.TextDecorator extends java.lang.Object
{
    private static final org.apache.harmony.awt.gl.font.TextDecorator inst;

    static void <clinit>()
    {
        org.apache.harmony.awt.gl.font.TextDecorator $r0;

        $r0 = new org.apache.harmony.awt.gl.font.TextDecorator;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.TextDecorator: void <init>()>();

        <org.apache.harmony.awt.gl.font.TextDecorator: org.apache.harmony.awt.gl.font.TextDecorator inst> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.harmony.awt.gl.font.TextDecorator $r0;

        $r0 := @this: org.apache.harmony.awt.gl.font.TextDecorator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void drawTextDecorations(org.apache.harmony.awt.gl.font.TextRunSegment, java.awt.Graphics2D, float, float)
    {
        org.apache.harmony.awt.gl.font.TextRunSegment $r0;
        java.awt.Graphics2D $r1;
        float $f0, $f1, $f2, $f3, $f4;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r2;
        boolean $z0;
        java.awt.BasicStroke $r3;
        java.awt.geom.Rectangle2D $r4;
        double $d0;
        java.awt.Stroke $r5;
        org.apache.harmony.awt.gl.font.BasicMetrics $r6;
        java.awt.geom.Line2D$Float $r7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.font.TextRunSegment;

        $r1 := @parameter1: java.awt.Graphics2D;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean ulOn>;

        if $z0 != 0 goto label1;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        if $r3 != null goto label1;

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean strikeThrough>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d0 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getMinX()>();

        $f2 = (float) $d0;

        $f2 = $f0 + $f2;

        $r4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d0 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getMaxX()>();

        $f3 = (float) $d0;

        $f0 = $f0 + $f3;

        $r5 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.Stroke getStroke()>();

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator$Decoration: void access$000(org.apache.harmony.awt.gl.font.TextDecorator$Decoration,org.apache.harmony.awt.gl.font.BasicMetrics)>($r2, $r6);

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean strikeThrough>;

        if $z0 == 0 goto label2;

        $f3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $f3 = $f3 + $f1;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f4 = $r6.<org.apache.harmony.awt.gl.font.BasicMetrics: float strikethroughOffset>;

        $f3 = $f3 + $f4;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke strikeThroughStroke>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r3);

        $r7 = new java.awt.geom.Line2D$Float;

        specialinvoke $r7.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f2, $f3, $f0, $f3);

        virtualinvoke $r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r7);

     label2:
        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean ulOn>;

        if $z0 == 0 goto label3;

        $f3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $f3 = $f3 + $f1;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f4 = $r6.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset>;

        $f3 = $f3 + $f4;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke ulStroke>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r3);

        $r7 = new java.awt.geom.Line2D$Float;

        specialinvoke $r7.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f2, $f3, $f0, $f3);

        virtualinvoke $r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r7);

     label3:
        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        if $r3 == null goto label4;

        $f3 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $f1 = $f3 + $f1;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f3 = $r6.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset>;

        $f1 = $f1 + $f3;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r3);

        $r7 = new java.awt.geom.Line2D$Float;

        specialinvoke $r7.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f2, $f1, $f0, $f1);

        virtualinvoke $r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r7);

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke2>;

        if $r3 == null goto label4;

        $f1 = $f1 + 1.0F;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke2>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r3);

        $r7 = new java.awt.geom.Line2D$Float;

        specialinvoke $r7.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f2, $f1, $f0, $f1);

        virtualinvoke $r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r7);

     label4:
        virtualinvoke $r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5);

        return;
    }

    static java.awt.Shape extendOutline(org.apache.harmony.awt.gl.font.TextRunSegment, java.awt.Shape, org.apache.harmony.awt.gl.font.TextDecorator$Decoration)
    {
        org.apache.harmony.awt.gl.font.TextRunSegment $r0;
        java.awt.Shape $r1;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r2;
        float $f0, $f1, $f2;
        java.awt.geom.Area $r3, $r7;
        boolean $z0;
        java.awt.BasicStroke $r4;
        java.awt.geom.Rectangle2D $r5;
        double $d0;
        org.apache.harmony.awt.gl.font.BasicMetrics $r6;
        java.awt.geom.Line2D$Float $r8;

        $r0 := @parameter0: org.apache.harmony.awt.gl.font.TextRunSegment;

        $r1 := @parameter1: java.awt.Shape;

        $r2 := @parameter2: org.apache.harmony.awt.gl.font.TextDecorator$Decoration;

        if $r2 == null goto label1;

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean ulOn>;

        if $z0 != 0 goto label2;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        if $r4 != null goto label2;

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean strikeThrough>;

        if $z0 != 0 goto label2;

     label1:
        return $r1;

     label2:
        $r3 = new java.awt.geom.Area;

        specialinvoke $r3.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r1);

        $r5 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d0 = virtualinvoke $r5.<java.awt.geom.RectangularShape: double getMinX()>();

        $f0 = (float) $d0;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $f0 = $f0 - $f1;

        $r5 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d0 = virtualinvoke $r5.<java.awt.geom.RectangularShape: double getMaxX()>();

        $f1 = (float) $d0;

        $f2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $f1 = $f1 - $f2;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator$Decoration: void access$000(org.apache.harmony.awt.gl.font.TextDecorator$Decoration,org.apache.harmony.awt.gl.font.BasicMetrics)>($r2, $r6);

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean strikeThrough>;

        if $z0 == 0 goto label3;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f2 = $r6.<org.apache.harmony.awt.gl.font.BasicMetrics: float strikethroughOffset>;

        $r7 = new java.awt.geom.Area;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke strikeThroughStroke>;

        $r8 = new java.awt.geom.Line2D$Float;

        specialinvoke $r8.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f0, $f2, $f1, $f2);

        $r1 = virtualinvoke $r4.<java.awt.BasicStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r8);

        specialinvoke $r7.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r1);

        virtualinvoke $r3.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r7);

     label3:
        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean ulOn>;

        if $z0 == 0 goto label4;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f2 = $r6.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset>;

        $r7 = new java.awt.geom.Area;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke ulStroke>;

        $r8 = new java.awt.geom.Line2D$Float;

        specialinvoke $r8.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f0, $f2, $f1, $f2);

        $r1 = virtualinvoke $r4.<java.awt.BasicStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r8);

        specialinvoke $r7.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r1);

        virtualinvoke $r3.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r7);

     label4:
        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        if $r4 == null goto label5;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f2 = $r6.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset>;

        $r7 = new java.awt.geom.Area;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        $r8 = new java.awt.geom.Line2D$Float;

        specialinvoke $r8.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f0, $f2, $f1, $f2);

        $r1 = virtualinvoke $r4.<java.awt.BasicStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r8);

        specialinvoke $r7.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r1);

        virtualinvoke $r3.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r7);

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke2>;

        if $r4 == null goto label5;

        $f2 = $f2 + 1.0F;

        $r7 = new java.awt.geom.Area;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke2>;

        $r8 = new java.awt.geom.Line2D$Float;

        specialinvoke $r8.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f0, $f2, $f1, $f2);

        $r1 = virtualinvoke $r4.<java.awt.BasicStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r8);

        specialinvoke $r7.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r1);

        virtualinvoke $r3.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r7);

     label5:
        return $r3;
    }

    static java.awt.geom.Rectangle2D extendVisualBounds(org.apache.harmony.awt.gl.font.TextRunSegment, java.awt.geom.Rectangle2D, org.apache.harmony.awt.gl.font.TextDecorator$Decoration)
    {
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r0;
        org.apache.harmony.awt.gl.font.TextRunSegment $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0;
        java.awt.Paint $r3;
        float $f0, $f1;
        java.awt.BasicStroke $r4;
        org.apache.harmony.awt.gl.font.BasicMetrics $r5;
        java.awt.geom.Rectangle2D$Double $r6;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.TextRunSegment;

        $r2 := @parameter1: java.awt.geom.Rectangle2D;

        $r0 := @parameter2: org.apache.harmony.awt.gl.font.TextDecorator$Decoration;

        if $r0 != null goto label1;

        return $r2;

     label1:
        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinX()>();

        $d1 = $d0;

        $d2 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinY()>();

        $d3 = $d2;

        $d4 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxX()>();

        $d5 = $d4;

        $d6 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxY()>();

        $d7 = $d6;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $z0 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean swapBfFg>;

        if $z0 != 0 goto label2;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        if $r3 == null goto label3;

     label2:
        $d1 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinX()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d3 = (double) $f0;

        $d1 = $d1 - $d3;

        $d1 = staticinvoke <java.lang.Math: double min(double,double)>($d1, $d0);

        $d3 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinY()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $d5 = (double) $f0;

        $d3 = $d3 - $d5;

        $d3 = staticinvoke <java.lang.Math: double min(double,double)>($d3, $d2);

        $d5 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxX()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d7 = (double) $f0;

        $d5 = $d5 - $d7;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d5, $d4);

        $d7 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxY()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: float y>;

        $d4 = (double) $f0;

        $d7 = $d7 - $d4;

        $d7 = staticinvoke <java.lang.Math: double max(double,double)>($d7, $d6);

     label3:
        $z0 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean ulOn>;

        if $z0 != 0 goto label4;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        if $r4 != null goto label4;

        $z0 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean strikeThrough>;

        if $z0 == 0 goto label9;

     label4:
        $d6 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinX()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d4 = (double) $f0;

        $d6 = $d6 - $d4;

        $d1 = staticinvoke <java.lang.Math: double min(double,double)>($d6, $d1);

        $d6 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxX()>();

        $f0 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $d4 = (double) $f0;

        $d6 = $d6 - $d4;

        $d6 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d5);

        $d5 = $d6;

        $r5 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        staticinvoke <org.apache.harmony.awt.gl.font.TextDecorator$Decoration: void access$000(org.apache.harmony.awt.gl.font.TextDecorator$Decoration,org.apache.harmony.awt.gl.font.BasicMetrics)>($r0, $r5);

        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke ulStroke>;

        if $r4 == null goto label5;

        $r5 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f0 = $r5.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset>;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke ulStroke>;

        $f1 = virtualinvoke $r4.<java.awt.BasicStroke: float getLineWidth()>();

        $f0 = $f0 + $f1;

        $d4 = (double) $f0;

        $d7 = staticinvoke <java.lang.Math: double max(double,double)>($d7, $d4);

     label5:
        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        if $r4 == null goto label9;

        $r5 = $r1.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f0 = $r5.<org.apache.harmony.awt.gl.font.BasicMetrics: float underlineOffset>;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke>;

        $f1 = virtualinvoke $r4.<java.awt.BasicStroke: float getLineWidth()>();

        $f0 = $f0 + $f1;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke2>;

        if $r4 != null goto label8;

        $f1 = 0.0F;

     label6:
        $f0 = $f0 + $f1;

        $d5 = (double) $f0;

        $d7 = staticinvoke <java.lang.Math: double max(double,double)>($d7, $d5);

     label7:
        $r6 = new java.awt.geom.Rectangle2D$Double;

        $d6 = $d6 - $d1;

        $d5 = $d7 - $d3;

        specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d1, $d3, $d6, $d5);

        return $r6;

     label8:
        $r4 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.BasicStroke imUlStroke2>;

        $f1 = virtualinvoke $r4.<java.awt.BasicStroke: float getLineWidth()>();

        goto label6;

     label9:
        $d6 = $d5;

        goto label7;
    }

    static org.apache.harmony.awt.gl.font.TextDecorator$Decoration getDecoration(java.util.Map)
    {
        java.util.Map $r0;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r1;
        java.awt.font.TextAttribute $r2;
        java.lang.Object $r3, $r6;
        java.lang.Integer $r4;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r5;
        java.awt.Paint $r7, $r8;

        $r0 := @parameter0: java.util.Map;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute UNDERLINE>;

        $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_ON>;

        if $r3 != $r4 goto label3;

        $z0 = 1;

     label2:
        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_UNDERLINE>;

        $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        $r5 = <java.awt.font.TextAttribute: java.lang.Boolean SWAP_COLORS_ON>;

        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SWAP_COLORS>;

        $r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        $r5 = <java.awt.font.TextAttribute: java.lang.Boolean STRIKETHROUGH_ON>;

        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute STRIKETHROUGH>;

        $r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $z2 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FOREGROUND>;

        $r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (java.awt.Paint) $r6;

        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute BACKGROUND>;

        $r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r8 = (java.awt.Paint) $r6;

        if $z0 != 0 goto label4;

        if $r3 != null goto label4;

        if $r7 != null goto label4;

        if $r8 != null goto label4;

        if $z1 != 0 goto label4;

        if $z2 != 0 goto label4;

        return null;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $r1 = new org.apache.harmony.awt.gl.font.TextDecorator$Decoration;

        specialinvoke $r1.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: void <init>(java.lang.Integer,boolean,boolean,java.awt.Paint,java.awt.Paint,boolean)>($r4, $z1, $z2, $r8, $r7, $z0);

        return $r1;
    }

    static org.apache.harmony.awt.gl.font.TextDecorator getInstance()
    {
        org.apache.harmony.awt.gl.font.TextDecorator r0;

        r0 = <org.apache.harmony.awt.gl.font.TextDecorator: org.apache.harmony.awt.gl.font.TextDecorator inst>;

        return r0;
    }

    static void prepareGraphics(org.apache.harmony.awt.gl.font.TextRunSegment, java.awt.Graphics2D, float, float)
    {
        org.apache.harmony.awt.gl.font.TextRunSegment $r0;
        java.awt.Graphics2D $r1;
        float $f0, $f1;
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r2;
        java.awt.Paint $r3;
        boolean $z0;
        java.awt.geom.Rectangle2D $r4;
        java.awt.geom.Rectangle2D$Double $r5;
        double $d0, $d1, $d2, $d3;

        $r0 := @parameter0: org.apache.harmony.awt.gl.font.TextRunSegment;

        $r1 := @parameter1: java.awt.Graphics2D;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.TextDecorator$Decoration decoration>;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint fg>;

        if $r3 != null goto label1;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        if $r3 != null goto label1;

        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean swapBfFg>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.Paint getPaint()>();

        $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint graphicsPaint> = $r3;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint fg>;

        if $r3 != null goto label2;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint graphicsPaint>;

        $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint fg> = $r3;

     label2:
        $z0 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean swapBfFg>;

        if $z0 == 0 goto label5;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint fg>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        $r4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $r5 = new java.awt.geom.Rectangle2D$Double;

        $d0 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getX()>();

        $d1 = (double) $f0;

        $d0 = $d0 + $d1;

        $d1 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getY()>();

        $d2 = (double) $f1;

        $d1 = $d1 + $d2;

        $d2 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getWidth()>();

        $d3 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getHeight()>();

        specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        virtualinvoke $r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r5);

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        if $r3 != null goto label4;

        $r3 = <java.awt.Color: java.awt.Color WHITE>;

     label3:
        virtualinvoke $r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        return;

     label4:
        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        goto label3;

     label5:
        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        if $r3 == null goto label6;

        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        $r4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.TextRunSegment: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $r5 = new java.awt.geom.Rectangle2D$Double;

        $d0 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getX()>();

        $d1 = (double) $f0;

        $d0 = $d0 + $d1;

        $d1 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getY()>();

        $d2 = (double) $f1;

        $d1 = $d1 + $d2;

        $d2 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getWidth()>();

        $d3 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getHeight()>();

        specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        virtualinvoke $r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r5);

     label6:
        $r3 = $r2.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint fg>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        return;
    }

    static void restoreGraphics(org.apache.harmony.awt.gl.font.TextDecorator$Decoration, java.awt.Graphics2D)
    {
        org.apache.harmony.awt.gl.font.TextDecorator$Decoration $r0;
        java.awt.Graphics2D $r1;
        java.awt.Paint $r2;
        boolean $z0;

        $r0 := @parameter0: org.apache.harmony.awt.gl.font.TextDecorator$Decoration;

        $r1 := @parameter1: java.awt.Graphics2D;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint fg>;

        if $r2 != null goto label1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint bg>;

        if $r2 != null goto label1;

        $z0 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: boolean swapBfFg>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.TextDecorator$Decoration: java.awt.Paint graphicsPaint>;

        virtualinvoke $r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r2);

        return;
    }
}
