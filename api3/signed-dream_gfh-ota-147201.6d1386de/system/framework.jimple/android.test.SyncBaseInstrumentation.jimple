public class android.test.SyncBaseInstrumentation extends android.test.InstrumentationTestCase
{
    private static final int MAX_TIME_FOR_SYNC_IN_MINS;
    android.content.ContentResolver mContentResolver;
    private android.content.Context mTargetContext;

    public void <init>()
    {
        android.test.SyncBaseInstrumentation $r0;

        $r0 := @this: android.test.SyncBaseInstrumentation;

        specialinvoke $r0.<android.test.InstrumentationTestCase: void <init>()>();

        return;
    }

    private boolean isActiveInActiveQueryMap(android.provider.Sync$Active$QueryMap, java.lang.String, java.lang.String)
    {
        android.test.SyncBaseInstrumentation $r0;
        android.provider.Sync$Active$QueryMap $r1;
        java.lang.String $r2, $r3, $r9;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.content.ContentValues $r8;
        android.content.ContentQueryMap r10;

        $r0 := @this: android.test.SyncBaseInstrumentation;

        $r1 := @parameter0: android.provider.Sync$Active$QueryMap;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r10 = (android.content.ContentQueryMap) $r1;

        $r4 = virtualinvoke r10.<android.content.ContentQueryMap: java.util.Map getRows()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.content.ContentValues) $r7;

        $r9 = virtualinvoke $r8.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("account");

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke $r8.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("authority");

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    private boolean isSyncActive(java.lang.String, java.lang.String)
    {
        android.test.SyncBaseInstrumentation $r0;
        java.lang.String $r1, $r2;
        android.provider.Sync$Active$QueryMap $r3, $r6, r10;
        android.provider.Sync$Pending$QueryMap $r4, $r5, r9;
        android.content.ContentResolver $r7;
        boolean $z0;
        java.lang.Throwable $r8;
        android.content.ContentQueryMap r11;

        $r0 := @this: android.test.SyncBaseInstrumentation;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = null;

        $r6 = null;

     label01:
        r9 = new android.provider.Sync$Pending$QueryMap;

        $r4 = r9;

        $r7 = $r0.<android.test.SyncBaseInstrumentation: android.content.ContentResolver mContentResolver>;

        specialinvoke r9.<android.provider.Sync$Pending$QueryMap: void <init>(android.content.ContentResolver,boolean,android.os.Handler)>($r7, 0, null);

     label02:
        r10 = new android.provider.Sync$Active$QueryMap;

        $r3 = r10;

        $r7 = $r0.<android.test.SyncBaseInstrumentation: android.content.ContentResolver mContentResolver>;

        specialinvoke r10.<android.provider.Sync$Active$QueryMap: void <init>(android.content.ContentResolver,boolean,android.os.Handler)>($r7, 0, null);

     label03:
        $z0 = virtualinvoke $r4.<android.provider.Sync$Pending$QueryMap: boolean isPending(java.lang.String,java.lang.String)>($r1, $r2);

     label04:
        if $z0 == 0 goto label05;

        r11 = (android.content.ContentQueryMap) $r3;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        r11 = (android.content.ContentQueryMap) $r4;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        return 1;

     label05:
        $z0 = specialinvoke $r0.<android.test.SyncBaseInstrumentation: boolean isActiveInActiveQueryMap(android.provider.Sync$Active$QueryMap,java.lang.String,java.lang.String)>($r3, $r1, $r2);

     label06:
        if $z0 == 0 goto label07;

        r11 = (android.content.ContentQueryMap) $r3;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        r11 = (android.content.ContentQueryMap) $r4;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        return 1;

     label07:
        r11 = (android.content.ContentQueryMap) $r3;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        r11 = (android.content.ContentQueryMap) $r4;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        return 0;

     label08:
        $r8 := @caughtexception;

     label09:
        r11 = (android.content.ContentQueryMap) $r6;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        r11 = (android.content.ContentQueryMap) $r5;

        virtualinvoke r11.<android.content.ContentQueryMap: void close()>();

        throw $r8;

     label10:
        $r8 := @caughtexception;

        $r5 = $r4;

        goto label09;

     label11:
        $r8 := @caughtexception;

        $r6 = $r3;

        $r5 = $r4;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
    }

    protected void cancelSyncsandDisableAutoSync()
    {
        android.test.SyncBaseInstrumentation $r0;
        android.provider.Sync$Settings$QueryMap $r1, r3;
        android.content.ContentResolver $r2;
        android.content.ContentQueryMap r4;

        $r0 := @this: android.test.SyncBaseInstrumentation;

        r3 = new android.provider.Sync$Settings$QueryMap;

        $r1 = r3;

        $r2 = $r0.<android.test.SyncBaseInstrumentation: android.content.ContentResolver mContentResolver>;

        specialinvoke r3.<android.provider.Sync$Settings$QueryMap: void <init>(android.content.ContentResolver,boolean,android.os.Handler)>($r2, 1, null);

        virtualinvoke $r1.<android.provider.Sync$Settings$QueryMap: void setListenForNetworkTickles(boolean)>(0);

        $r2 = $r0.<android.test.SyncBaseInstrumentation: android.content.ContentResolver mContentResolver>;

        virtualinvoke $r2.<android.content.ContentResolver: void cancelSync(android.net.Uri)>(null);

        r4 = (android.content.ContentQueryMap) $r1;

        virtualinvoke r4.<android.content.ContentQueryMap: void close()>();

        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        android.test.SyncBaseInstrumentation $r0;
        android.app.Instrumentation $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;

        $r0 := @this: android.test.SyncBaseInstrumentation;

        specialinvoke $r0.<junit.framework.TestCase: void setUp()>();

        $r1 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r2 = virtualinvoke $r1.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r0.<android.test.SyncBaseInstrumentation: android.content.Context mTargetContext> = $r2;

        $r2 = $r0.<android.test.SyncBaseInstrumentation: android.content.Context mTargetContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r0.<android.test.SyncBaseInstrumentation: android.content.ContentResolver mContentResolver> = $r3;

        return;
    }

    protected void syncProvider(android.net.Uri, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        android.test.SyncBaseInstrumentation $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        long $l0, $l2;
        android.os.Bundle $r4;
        android.content.ContentResolver $r5;
        int $i1;
        byte $b3;
        boolean $z0;

        $r0 := @this: android.test.SyncBaseInstrumentation;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        virtualinvoke $r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("account", $r2);

        $r5 = $r0.<android.test.SyncBaseInstrumentation: android.content.ContentResolver mContentResolver>;

        virtualinvoke $r5.<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>($r1, $r4);

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l0 = $l0 + 1200000L;

        $i1 = 0;

     label1:
        if $i1 >= 2 goto label4;

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b3 = $l2 cmp $l0;

        if $b3 <= 0 goto label2;

        return;

     label2:
        $z0 = specialinvoke $r0.<android.test.SyncBaseInstrumentation: boolean isSyncActive(java.lang.String,java.lang.String)>($r2, $r3);

        if $z0 == 0 goto label3;

        $i1 = 0;

        goto label1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <android.test.SyncBaseInstrumentation: int MAX_TIME_FOR_SYNC_IN_MINS> = 20;

        return;
    }
}
