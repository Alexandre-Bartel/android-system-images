public abstract class android.widget.AbsSeekBar extends android.widget.ProgressBar
{
    private static final int NO_ALPHA;
    private float mDisabledAlpha;
    boolean mIsUserSeekable;
    private int mKeyProgressIncrement;
    private android.graphics.drawable.Drawable mThumb;
    private int mThumbOffset;
    float mTouchProgressOffset;

    public void <init>(android.content.Context)
    {
        android.widget.AbsSeekBar $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.ProgressBar: void <init>(android.content.Context)>($r1);

        $r0.<android.widget.AbsSeekBar: boolean mIsUserSeekable> = 1;

        $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement> = 1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AbsSeekBar $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<android.widget.AbsSeekBar: boolean mIsUserSeekable> = 1;

        $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement> = 1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AbsSeekBar $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.graphics.drawable.Drawable $r5;
        float $f0;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<android.widget.AbsSeekBar: boolean mIsUserSeekable> = 1;

        $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement> = 1;

        $r3 = <com.android.internal.R$styleable: int[] SeekBar>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>($r5);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, 0);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void setThumbOffset(int)>($i0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r3 = <com.android.internal.R$styleable: int[] Theme>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, 0);

        $f0 = virtualinvoke $r4.<android.content.res.TypedArray: float getFloat(int,float)>(3, 0.5F);

        $r0.<android.widget.AbsSeekBar: float mDisabledAlpha> = $f0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void attemptClaimDrag()
    {
        android.widget.AbsSeekBar $r0;
        android.view.ViewParent $r1;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        return;

     label1:
        return;
    }

    private void setThumbPos(int, android.graphics.drawable.Drawable, float, int)
    {
        android.widget.AbsSeekBar $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r1;
        float $f0, $f1;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $f0 := @parameter2: float;

        $i1 := @parameter3: int;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $i0 - $i3;

        $i0 = $r0.<android.view.View: int mPaddingRight>;

        $i2 = $i3 - $i0;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = $i2 - $i0;

        $i4 = $r0.<android.widget.AbsSeekBar: int mThumbOffset>;

        $i4 = $i4 * 2;

        $i2 = $i2 + $i4;

        $f1 = (float) $i2;

        $f0 = $f1 * $f0;

        $i2 = (int) $f0;

        if $i1 != -2147483648 goto label2;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i4 = $r2.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

     label1:
        $i0 = $i2 + $i0;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i4, $i0, $i1);

        return;

     label2:
        $i4 = $i1;

        $i1 = $i1 + $i3;

        goto label1;
    }

    private void trackTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsSeekBar $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        byte $b4;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.view.MotionEvent;

        $i2 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        $i0 = $i2 - $i0;

        $i1 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        $f0 = 0.0F;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        if $i1 >= $i3 goto label3;

        $f1 = 0.0F;

     label1:
        $i0 = virtualinvoke $r0.<android.widget.ProgressBar: int getMax()>();

        $f2 = (float) $i0;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

        $b4 = $f0 cmpg 0.0F;

        if $b4 >= 0 goto label5;

        $f0 = 0.0F;

     label2:
        $i0 = (int) $f0;

        virtualinvoke $r0.<android.widget.ProgressBar: void setProgress(int,boolean)>($i0, 1);

        return;

     label3:
        $i3 = $r0.<android.view.View: int mPaddingRight>;

        $i2 = $i2 - $i3;

        if $i1 <= $i2 goto label4;

        $f1 = 1.0F;

        goto label1;

     label4:
        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i2 = $i1 - $i2;

        $f0 = (float) $i2;

        $f1 = (float) $i0;

        $f1 = $f0 / $f1;

        $f0 = $r0.<android.widget.AbsSeekBar: float mTouchProgressOffset>;

        goto label1;

     label5:
        $f1 = (float) $i0;

        $b4 = $f0 cmpl $f1;

        if $b4 <= 0 goto label2;

        $f0 = (float) $i0;

        goto label2;
    }

    protected void drawableStateChanged()
    {
        android.widget.AbsSeekBar $r0;
        float $f0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        int $i0;
        int[] $r2;

        $r0 := @this: android.widget.AbsSeekBar;

        specialinvoke $r0.<android.widget.ProgressBar: void drawableStateChanged()>();

        $r1 = virtualinvoke $r0.<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $i0 = 255;

     label1:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

     label2:
        $r1 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        if $r1 == null goto label4;

        $r1 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $r1 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        return;

     label3:
        $f0 = $r0.<android.widget.AbsSeekBar: float mDisabledAlpha>;

        $f0 = 255.0F * $f0;

        $i0 = (int) $f0;

        goto label1;

     label4:
        return;

     label5:
        return;
    }

    public int getKeyProgressIncrement()
    {
        android.widget.AbsSeekBar $r0;
        int i0;

        $r0 := @this: android.widget.AbsSeekBar;

        i0 = $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement>;

        return i0;
    }

    public int getThumbOffset()
    {
        android.widget.AbsSeekBar $r0;
        int i0;

        $r0 := @this: android.widget.AbsSeekBar;

        i0 = $r0.<android.widget.AbsSeekBar: int mThumbOffset>;

        return i0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.AbsSeekBar $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.Throwable $r3;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.graphics.Canvas;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        if $r2 == null goto label2;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        $i1 = $r0.<android.widget.AbsSeekBar: int mThumbOffset>;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = $r0.<android.view.View: int mPaddingTop>;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r2 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void onKeyChange()
    {
        android.widget.AbsSeekBar $r0;

        $r0 := @this: android.widget.AbsSeekBar;

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.AbsSeekBar $r0;
        int $i0, $i1, $i2;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke $r0.<android.widget.ProgressBar: int getProgress()>();

        lookupswitch($i0)
        {
            case 21: goto label2;
            case 22: goto label3;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label2:
        if $i1 <= 0 goto label1;

        $i0 = $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement>;

        $i0 = $i1 - $i0;

        virtualinvoke $r0.<android.widget.ProgressBar: void setProgress(int,boolean)>($i0, 1);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void onKeyChange()>();

        return 1;

     label3:
        $i2 = virtualinvoke $r0.<android.widget.ProgressBar: int getMax()>();

        if $i1 >= $i2 goto label1;

        $i0 = $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement>;

        $i0 = $i0 + $i1;

        virtualinvoke $r0.<android.widget.ProgressBar: void setProgress(int,boolean)>($i0, 1);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void onKeyChange()>();

        return 1;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AbsSeekBar $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.drawable.Drawable $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r1 = virtualinvoke $r0.<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>();

        $r2 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        if $r2 != null goto label5;

        $i2 = 0;

     label2:
        $i3 = 0;

        $i4 = 0;

        if $r1 == null goto label3;

        $i3 = $r0.<android.widget.ProgressBar: int mMinWidth>;

        $i4 = $r0.<android.widget.ProgressBar: int mMaxWidth>;

        $i5 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        $i4 = $r0.<android.widget.ProgressBar: int mMinHeight>;

        $i5 = $r0.<android.widget.ProgressBar: int mMaxHeight>;

        $i6 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i4);

     label3:
        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i5 = $r0.<android.view.View: int mPaddingRight>;

        $i2 = $i2 + $i5;

        $i2 = $i3 + $i2;

        $i3 = $r0.<android.view.View: int mPaddingTop>;

        $i5 = $r0.<android.view.View: int mPaddingBottom>;

        $i3 = $i3 + $i5;

        $i3 = $i4 + $i3;

        $i0 = staticinvoke <android.widget.AbsSeekBar: int resolveSize(int,int)>($i2, $i0);

        $i1 = staticinvoke <android.widget.AbsSeekBar: int resolveSize(int,int)>($i3, $i1);

        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i0, $i1);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r2 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label6:
        goto label2;

     label7:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    void onProgressRefresh(float, boolean)
    {
        android.widget.AbsSeekBar $r0;
        float $f0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.widget.AbsSeekBar;

        $f0 := @parameter0: float;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        specialinvoke $r0.<android.widget.AbsSeekBar: void setThumbPos(int,android.graphics.drawable.Drawable,float,int)>($i0, $r1, $f0, -2147483648);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AbsSeekBar $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r1, $r2;
        float $f0, $f1;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r2 = virtualinvoke $r0.<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>();

        $r1 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        if $r1 != null goto label4;

        $i2 = 0;

     label1:
        $i3 = $r0.<android.widget.ProgressBar: int mMaxHeight>;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i4 = $i1 - $i4;

        $i5 = $r0.<android.view.View: int mPaddingBottom>;

        $i4 = $i4 - $i5;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i4 = virtualinvoke $r0.<android.widget.ProgressBar: int getMax()>();

        if $i4 <= 0 goto label5;

        $i5 = virtualinvoke $r0.<android.widget.ProgressBar: int getProgress()>();

        $f0 = (float) $i5;

        $f1 = (float) $i4;

        $f0 = $f0 / $f1;

     label2:
        if $i2 <= $i3 goto label6;

        if $r1 == null goto label3;

        specialinvoke $r0.<android.widget.AbsSeekBar: void setThumbPos(int,android.graphics.drawable.Drawable,float,int)>($i0, $r1, $f0, 0);

     label3:
        $i2 = $i2 - $i3;

        $i2 = $i2 / 2;

        if $r2 == null goto label8;

        $i3 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $i0 = $i0 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingBottom>;

        $i1 = $i1 - $i3;

        $i1 = $i1 - $i2;

        $i3 = $r0.<android.view.View: int mPaddingTop>;

        $i1 = $i1 - $i3;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, $i2, $i0, $i1);

        return;

     label4:
        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label1;

     label5:
        $f0 = 0.0F;

        goto label2;

     label6:
        if $r2 == null goto label7;

        $i4 = $r0.<android.view.View: int mPaddingRight>;

        $i4 = $i0 - $i4;

        $i5 = $r0.<android.view.View: int mPaddingLeft>;

        $i4 = $i4 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingBottom>;

        $i5 = $i1 - $i5;

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        $i1 = $i5 - $i1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i1);

     label7:
        $i1 = $i3 - $i2;

        $i1 = $i1 / 2;

        if $r1 == null goto label9;

        specialinvoke $r0.<android.widget.AbsSeekBar: void setThumbPos(int,android.graphics.drawable.Drawable,float,int)>($i0, $r1, $f0, $i1);

        return;

     label8:
        return;

     label9:
        return;
    }

    void onStartTrackingTouch()
    {
        android.widget.AbsSeekBar $r0;

        $r0 := @this: android.widget.AbsSeekBar;

        return;
    }

    void onStopTrackingTouch()
    {
        android.widget.AbsSeekBar $r0;

        $r0 := @this: android.widget.AbsSeekBar;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsSeekBar $r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = $r0.<android.widget.AbsSeekBar: boolean mIsUserSeekable>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label7;
            default: goto label3;
        };

     label3:
        return 1;

     label4:
        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(1);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void onStartTrackingTouch()>();

        specialinvoke $r0.<android.widget.AbsSeekBar: void trackTouchEvent(android.view.MotionEvent)>($r1);

        goto label3;

     label5:
        specialinvoke $r0.<android.widget.AbsSeekBar: void trackTouchEvent(android.view.MotionEvent)>($r1);

        specialinvoke $r0.<android.widget.AbsSeekBar: void attemptClaimDrag()>();

        goto label3;

     label6:
        specialinvoke $r0.<android.widget.AbsSeekBar: void trackTouchEvent(android.view.MotionEvent)>($r1);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void onStopTrackingTouch()>();

        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(0);

        goto label3;

     label7:
        virtualinvoke $r0.<android.widget.AbsSeekBar: void onStopTrackingTouch()>();

        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(0);

        goto label3;
    }

    public void setKeyProgressIncrement(int)
    {
        android.widget.AbsSeekBar $r0;
        int $i0;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label2;

        $i0 = neg $i0;

     label1:
        $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement> = $i0;

        return;

     label2:
        goto label1;
    }

    public void setMax(int)
    {
        android.widget.AbsSeekBar $r0;
        int $i0, $i1;
        float $f0;
        java.lang.Throwable $r1;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<android.widget.ProgressBar: void setMax(int)>($i0);

        $i0 = $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement>;

        if $i0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<android.widget.ProgressBar: int getMax()>();

        $i1 = $r0.<android.widget.AbsSeekBar: int mKeyProgressIncrement>;

        $i0 = $i0 / $i1;

        if $i0 <= 20 goto label3;

     label2:
        $i0 = virtualinvoke $r0.<android.widget.ProgressBar: int getMax()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 20.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        virtualinvoke $r0.<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>($i0);

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void setThumb(android.graphics.drawable.Drawable)
    {
        android.widget.AbsSeekBar $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

     label1:
        $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb> = $r1;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setThumbOffset(int)
    {
        android.widget.AbsSeekBar $r0;
        int $i0;

        $r0 := @this: android.widget.AbsSeekBar;

        $i0 := @parameter0: int;

        $r0.<android.widget.AbsSeekBar: int mThumbOffset> = $i0;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.AbsSeekBar $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.AbsSeekBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.widget.AbsSeekBar: android.graphics.drawable.Drawable mThumb>;

        if $r1 == $r2 goto label1;

        $z0 = specialinvoke $r0.<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <android.widget.AbsSeekBar: int NO_ALPHA> = 255;

        return;
    }
}
