class android.text.DynamicLayout$ChangeWatcher extends java.lang.Object implements android.text.SpanWatcher, android.text.TextWatcher
{
    private java.lang.ref.WeakReference mLayout;

    public void <init>(android.text.DynamicLayout)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        android.text.DynamicLayout $r1;
        java.lang.ref.WeakReference $r2;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: android.text.DynamicLayout;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        $r0.<android.text.DynamicLayout$ChangeWatcher: java.lang.ref.WeakReference mLayout> = $r2;

        return;
    }

    private void reflow(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.lang.CharSequence $r2;
        java.lang.ref.WeakReference $r3;
        android.text.DynamicLayout $r4;
        boolean $z0;
        android.text.Spannable $r5;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r3 = $r0.<android.text.DynamicLayout$ChangeWatcher: java.lang.ref.WeakReference mLayout>;

        $r1 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        $r4 = (android.text.DynamicLayout) $r1;

        if $r4 == null goto label1;

        staticinvoke <android.text.DynamicLayout: void access$000(android.text.DynamicLayout,java.lang.CharSequence,int,int,int)>($r4, $r2, $i0, $i1, $i2);

        return;

     label1:
        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 == 0 goto label2;

        $r5 = (android.text.Spannable) $r2;

        interfaceinvoke $r5.<android.text.Spannable: void removeSpan(java.lang.Object)>($r0);

        return;

     label2:
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        android.text.Editable $r1;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public void onSpanAdded(android.text.Spannable, java.lang.Object, int, int)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        android.text.Spannable $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: android.text.Spannable;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = $r2 instanceof android.text.style.UpdateLayout;

        if $z0 == 0 goto label1;

        $i2 = $i1 - $i0;

        $i1 = $i1 - $i0;

        specialinvoke $r0.<android.text.DynamicLayout$ChangeWatcher: void reflow(java.lang.CharSequence,int,int,int)>($r1, $i0, $i2, $i1);

        return;

     label1:
        return;
    }

    public void onSpanChanged(android.text.Spannable, java.lang.Object, int, int, int, int)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        android.text.Spannable $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: android.text.Spannable;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z0 = $r2 instanceof android.text.style.UpdateLayout;

        if $z0 == 0 goto label1;

        $i4 = $i1 - $i0;

        $i1 = $i1 - $i0;

        specialinvoke $r0.<android.text.DynamicLayout$ChangeWatcher: void reflow(java.lang.CharSequence,int,int,int)>($r1, $i0, $i4, $i1);

        $i0 = $i3 - $i2;

        $i1 = $i3 - $i2;

        specialinvoke $r0.<android.text.DynamicLayout$ChangeWatcher: void reflow(java.lang.CharSequence,int,int,int)>($r1, $i2, $i0, $i1);

        return;

     label1:
        return;
    }

    public void onSpanRemoved(android.text.Spannable, java.lang.Object, int, int)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        android.text.Spannable $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: android.text.Spannable;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = $r2 instanceof android.text.style.UpdateLayout;

        if $z0 == 0 goto label1;

        $i2 = $i1 - $i0;

        $i1 = $i1 - $i0;

        specialinvoke $r0.<android.text.DynamicLayout$ChangeWatcher: void reflow(java.lang.CharSequence,int,int,int)>($r1, $i0, $i2, $i1);

        return;

     label1:
        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout$ChangeWatcher $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.DynamicLayout$ChangeWatcher;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        specialinvoke $r0.<android.text.DynamicLayout$ChangeWatcher: void reflow(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        return;
    }
}
