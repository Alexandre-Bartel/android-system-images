public abstract class android.database.sqlite.SQLiteOpenHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private android.database.sqlite.SQLiteDatabase mDatabase;
    private final android.database.sqlite.SQLiteDatabase$CursorFactory mFactory;
    private boolean mIsInitializing;
    private final java.lang.String mName;
    private final int mNewVersion;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "android/database/sqlite/SQLiteOpenHelper";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.database.sqlite.SQLiteOpenHelper: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int)
    {
        android.database.sqlite.SQLiteOpenHelper $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: android.database.sqlite.SQLiteOpenHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.database.sqlite.SQLiteDatabase$CursorFactory;

        $i0 := @parameter3: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase> = null;

        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 0;

        if $i0 >= 1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version must be >= 1, was ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label1:
        $r0.<android.database.sqlite.SQLiteOpenHelper: android.content.Context mContext> = $r1;

        $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName> = $r2;

        $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase$CursorFactory mFactory> = $r3;

        $r0.<android.database.sqlite.SQLiteOpenHelper: int mNewVersion> = $i0;

        return;
    }

    public void close()
    {
        android.database.sqlite.SQLiteOpenHelper $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r2;
        android.database.sqlite.SQLiteDatabase $r3;

        $r0 := @this: android.database.sqlite.SQLiteOpenHelper;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing>;

        if $z0 == 0 goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Closed during initialization");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

     label3:
        $r3 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r3 == null goto label4;

        $r3 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r3 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase> = null;

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public android.database.sqlite.SQLiteDatabase getReadableDatabase()
    {
        android.database.sqlite.SQLiteOpenHelper $r0;
        android.database.sqlite.SQLiteException $r1;
        android.database.sqlite.SQLiteDatabase $r2, $r3, $r13;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5, $r12;
        java.lang.String $r6, $r8;
        java.lang.StringBuilder $r7;
        android.content.Context $r9;
        java.io.File $r10;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r11;
        int $i0, $i1;

        $r0 := @this: android.database.sqlite.SQLiteOpenHelper;

        entermonitor $r0;

     label01:
        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r2 == null goto label03;

        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label03;

        $r3 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

     label02:
        exitmonitor $r0;

        return $r3;

     label03:
        $z0 = $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing>;

        if $z0 == 0 goto label05;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getReadableDatabase called recursively");

        throw $r4;

     label04:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

     label05:
        $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label06:
        $r3 = $r2;

        goto label02;

     label07:
        $r1 := @caughtexception;

     label08:
        $r6 = $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName>;

        if $r6 != null goto label09;

        throw $r1;

     label09:
        $r6 = <android.database.sqlite.SQLiteOpenHelper: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open ");

        $r8 = $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for writing (will try read-only):");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, $r8, $r1);

     label10:
        $r3 = null;

     label11:
        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 1;

        $r9 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.content.Context mContext>;

        $r6 = $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        $r11 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase$CursorFactory mFactory>;

        $r2 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r6, $r11, 1);

        $r3 = $r2;

        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = $r0.<android.database.sqlite.SQLiteOpenHelper: int mNewVersion>;

        if $i0 == $i1 goto label15;

        $r1 = new android.database.sqlite.SQLiteException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t upgrade read-only database from version ");

        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i0 = $r0.<android.database.sqlite.SQLiteOpenHelper: int mNewVersion>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label12:
        $r12 := @caughtexception;

     label13:
        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 0;

        if $r3 == null goto label14;

        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r3 == $r2 goto label14;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label14:
        throw $r12;

     label15:
        virtualinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>($r2);

        $r6 = <android.database.sqlite.SQLiteOpenHelper: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opened ");

        $r8 = $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in read-only mode");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, $r8);

        $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase> = $r2;

        $r3 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

     label16:
        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 0;

        if $r2 == null goto label02;

        $r13 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r2 == $r13 goto label02;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label17:
        goto label02;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label15 with label04;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label16 to label17 with label04;
    }

    public android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        android.database.sqlite.SQLiteOpenHelper $r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r1;
        android.database.sqlite.SQLiteDatabase $r2, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.Throwable $r4, $r8, $r9;
        java.lang.String $r6;
        int $i0, $i1;
        android.content.Context $r7;
        java.lang.Exception $r11;

        $r0 := @this: android.database.sqlite.SQLiteOpenHelper;

        entermonitor $r0;

     label01:
        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r2 == null goto label03;

        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label03;

        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>();

        if $z0 != 0 goto label03;

        $r2 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

     label02:
        exitmonitor $r0;

        return $r2;

     label03:
        $z0 = $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing>;

        if $z0 == 0 goto label05;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getWritableDatabase called recursively");

        throw $r3;

     label04:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label05:
        $r2 = null;

     label06:
        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r5 == null goto label07;

        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void lock()>();

     label07:
        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 1;

        $r6 = $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName>;

        if $r6 != null goto label20;

        $r2 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)>(null);

     label08:
        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = $r0.<android.database.sqlite.SQLiteOpenHelper: int mNewVersion>;

        if $i0 == $i1 goto label13;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label09:
        if $i0 != 0 goto label22;

     label10:
        virtualinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r2);

     label11:
        $i0 = $r0.<android.database.sqlite.SQLiteOpenHelper: int mNewVersion>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>($i0);

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label12:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label13:
        virtualinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>($r2);

     label14:
        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 0;

        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

     label15:
        if $r5 == null goto label18;

     label16:
        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label17:
        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void unlock()>();

     label18:
        $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase> = $r2;

     label19:
        goto label02;

     label20:
        $r7 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.content.Context mContext>;

        $r6 = $r0.<android.database.sqlite.SQLiteOpenHelper: java.lang.String mName>;

        $r1 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase$CursorFactory mFactory>;

        $r2 = virtualinvoke $r7.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r6, 0, $r1);

     label21:
        goto label08;

     label22:
        $i1 = $r0.<android.database.sqlite.SQLiteOpenHelper: int mNewVersion>;

        virtualinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>($r2, $i0, $i1);

     label23:
        goto label11;

     label24:
        $r8 := @caughtexception;

     label25:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r8;

     label26:
        $r9 := @caughtexception;

     label27:
        $r0.<android.database.sqlite.SQLiteOpenHelper: boolean mIsInitializing> = 0;

        goto label29;

     label28:
        throw $r9;

     label29:
        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r5 == null goto label30;

        $r5 = $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void unlock()>();

     label30:
        if $r2 == null goto label28;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label31:
        goto label28;

     label32:
        $r11 := @caughtexception;

        goto label17;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label07 to label09 with label26;
        catch java.lang.Throwable from label10 to label12 with label24;
        catch java.lang.Throwable from label12 to label14 with label26;
        catch java.lang.Throwable from label14 to label15 with label04;
        catch java.lang.Exception from label16 to label17 with label32;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label17 to label19 with label04;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Throwable from label27 to label28 with label04;
        catch java.lang.Throwable from label28 to label31 with label04;
    }

    public abstract void onCreate(android.database.sqlite.SQLiteDatabase);

    public void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteOpenHelper $r0;
        android.database.sqlite.SQLiteDatabase $r1;

        $r0 := @this: android.database.sqlite.SQLiteOpenHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        return;
    }

    public abstract void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int);
}
