public class android.database.sqlite.SQLiteStatement extends android.database.sqlite.SQLiteProgram
{
    private static final java.lang.String TAG;
    private final java.lang.String mSql;

    void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteStatement $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;

        $r0 := @this: android.database.sqlite.SQLiteStatement;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.database.sqlite.SQLiteProgram: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, $r2);

        $r0.<android.database.sqlite.SQLiteStatement: java.lang.String mSql> = null;

        return;
    }

    private final native long native_1x1_long();

    private final native java.lang.String native_1x1_string();

    private final native void native_execute();

    public void execute()
    {
        android.database.sqlite.SQLiteStatement $r0;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0, $l1;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.sqlite.SQLiteStatement;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void lock()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = $r1.<android.database.sqlite.SQLiteDatabase: boolean mLogStats>;

        if $z0 == 0 goto label4;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label2:
        specialinvoke $r0.<android.database.sqlite.SQLiteStatement: void native_execute()>();

        if $z0 == 0 goto label3;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void logTimeStat(boolean,long,long)>(0, $l0, $l1);

     label3:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        return;

     label4:
        $l0 = 0L;

        goto label1;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public long executeInsert()
    {
        android.database.sqlite.SQLiteStatement $r0;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0, $l1;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.sqlite.SQLiteStatement;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void lock()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = $r1.<android.database.sqlite.SQLiteDatabase: boolean mLogStats>;

        if $z0 == 0 goto label5;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label2:
        specialinvoke $r0.<android.database.sqlite.SQLiteStatement: void native_execute()>();

        if $z0 == 0 goto label3;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void logTimeStat(boolean,long,long)>(0, $l0, $l1);

     label3:
        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $l0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long lastInsertRow()>();

     label4:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        return $l0;

     label5:
        $l0 = 0L;

        goto label1;

     label6:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label4 with label6;
    }

    public long simpleQueryForLong()
    {
        android.database.sqlite.SQLiteStatement $r0;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0, $l1, $l2;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.sqlite.SQLiteStatement;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void lock()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = $r1.<android.database.sqlite.SQLiteDatabase: boolean mLogStats>;

        if $z0 == 0 goto label4;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label2:
        $l1 = specialinvoke $r0.<android.database.sqlite.SQLiteStatement: long native_1x1_long()>();

        if $z0 == 0 goto label3;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void logTimeStat(boolean,long,long)>(0, $l0, $l2);

     label3:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        return $l1;

     label4:
        $l0 = 0L;

        goto label1;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public java.lang.String simpleQueryForString()
    {
        android.database.sqlite.SQLiteStatement $r0;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r1;
        long $l0, $l1;
        java.lang.String $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.database.sqlite.SQLiteStatement;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void lock()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = $r1.<android.database.sqlite.SQLiteDatabase: boolean mLogStats>;

        if $z0 == 0 goto label4;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label2:
        $r2 = specialinvoke $r0.<android.database.sqlite.SQLiteStatement: java.lang.String native_1x1_string()>();

        if $z0 == 0 goto label3;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void logTimeStat(boolean,long,long)>(0, $l0, $l1);

     label3:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        return $r2;

     label4:
        $l0 = 0L;

        goto label1;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public static void <clinit>()
    {
        <android.database.sqlite.SQLiteStatement: java.lang.String TAG> = "SQLiteStatement";

        return;
    }
}
