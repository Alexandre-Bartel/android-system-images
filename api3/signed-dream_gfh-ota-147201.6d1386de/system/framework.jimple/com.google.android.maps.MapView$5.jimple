class com.google.android.maps.MapView$5 extends java.lang.Object implements android.widget.ZoomButtonsController$OnZoomListener
{
    private android.graphics.Point mTempPoint;
    final com.google.android.maps.MapView this$0;
    final android.widget.ZoomButtonsController val$controller;

    void <init>(com.google.android.maps.MapView, android.widget.ZoomButtonsController)
    {
        com.google.android.maps.MapView$5 $r0;
        com.google.android.maps.MapView $r1;
        android.widget.ZoomButtonsController $r2;
        android.graphics.Point $r3;

        $r0 := @this: com.google.android.maps.MapView$5;

        $r1 := @parameter0: com.google.android.maps.MapView;

        $r2 := @parameter1: android.widget.ZoomButtonsController;

        $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0> = $r1;

        $r0.<com.google.android.maps.MapView$5: android.widget.ZoomButtonsController val$controller> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        $r0.<com.google.android.maps.MapView$5: android.graphics.Point mTempPoint> = $r3;

        return;
    }

    public void onCenter(int, int)
    {
        com.google.android.maps.MapView$5 $r0;
        int $i0, $i1, $i2;
        com.google.android.maps.MapView $r1;
        com.google.android.maps.OverlayBundle $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        com.google.android.maps.Overlay $r5;
        boolean $z0;
        com.google.android.maps.Overlay$Snappable $r6;
        android.graphics.Point $r7;
        com.google.android.maps.PixelConverter $r8;
        com.google.android.maps.GeoPoint $r9;
        com.google.android.maps.MapController $r10;

        $r0 := @this: com.google.android.maps.MapView$5;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0>;

        $r2 = staticinvoke <com.google.android.maps.MapView: com.google.android.maps.OverlayBundle access$300(com.google.android.maps.MapView)>($r1);

        $r3 = virtualinvoke $r2.<com.google.android.maps.OverlayBundle: java.util.List getOverlays()>();

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i2 - 1;

     label1:
        if $i2 < 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (com.google.android.maps.Overlay) $r4;

        $z0 = $r5 instanceof com.google.android.maps.Overlay$Snappable;

        if $z0 == 0 goto label3;

        $r6 = (com.google.android.maps.Overlay$Snappable) $r5;

        $r7 = $r0.<com.google.android.maps.MapView$5: android.graphics.Point mTempPoint>;

        $r1 = $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0>;

        $z0 = interfaceinvoke $r6.<com.google.android.maps.Overlay$Snappable: boolean onSnapToItem(int,int,android.graphics.Point,com.google.android.maps.MapView)>($i0, $i1, $r7, $r1);

        if $z0 == 0 goto label3;

        $r7 = $r0.<com.google.android.maps.MapView$5: android.graphics.Point mTempPoint>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $r7 = $r0.<com.google.android.maps.MapView$5: android.graphics.Point mTempPoint>;

        $i1 = $r7.<android.graphics.Point: int y>;

     label2:
        $r1 = $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0>;

        $r8 = staticinvoke <com.google.android.maps.MapView: com.google.android.maps.PixelConverter access$200(com.google.android.maps.MapView)>($r1);

        $r9 = virtualinvoke $r8.<com.google.android.maps.PixelConverter: com.google.android.maps.GeoPoint fromPixels(int,int)>($i0, $i1);

        $r1 = $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0>;

        $r10 = staticinvoke <com.google.android.maps.MapView: com.google.android.maps.MapController access$100(com.google.android.maps.MapView)>($r1);

        virtualinvoke $r10.<com.google.android.maps.MapController: void animateTo(com.google.android.maps.GeoPoint)>($r9);

        return;

     label3:
        $i2 = $i2 + -1;

        goto label1;
    }

    public void onVisibilityChanged(boolean)
    {
        com.google.android.maps.MapView$5 $r0;
        boolean $z0;
        com.google.android.maps.MapView $r1;
        android.widget.ZoomButtonsController $r2;

        $r0 := @this: com.google.android.maps.MapView$5;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0>;

        staticinvoke <com.google.android.maps.MapView: void access$1000(com.google.android.maps.MapView)>($r1);

        return;

     label1:
        $r2 = $r0.<com.google.android.maps.MapView$5: android.widget.ZoomButtonsController val$controller>;

        virtualinvoke $r2.<android.widget.ZoomButtonsController: void setFocusable(boolean)>(0);

        return;
    }

    public void onZoom(boolean)
    {
        com.google.android.maps.MapView$5 $r0;
        boolean $z0;
        com.google.android.maps.MapView $r1;

        $r0 := @this: com.google.android.maps.MapView$5;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.google.android.maps.MapView$5: com.google.android.maps.MapView this$0>;

        virtualinvoke $r1.<com.google.android.maps.MapView: boolean doZoom(boolean)>($z0);

        return;
    }
}
