abstract class android.net.http.Connection extends java.lang.Object
{
    private static final int DONE;
    private static final int DRAIN;
    private static final java.lang.String HTTP_CONNECTION;
    private static final int MAX_PIPE;
    private static final int MIN_PIPE;
    private static final int READ;
    private static final int RETRY_REQUEST_LIMIT;
    private static final int SEND;
    static final int SOCKET_TIMEOUT;
    private static int STATE_CANCEL_REQUESTED;
    private static int STATE_NORMAL;
    private static final java.lang.String[] states;
    private int mActive;
    private byte[] mBuf;
    private boolean mCanPersist;
    protected android.net.http.SslCertificate mCertificate;
    android.net.http.RequestQueue$ConnectionManager mConnectionManager;
    android.content.Context mContext;
    org.apache.http.HttpHost mHost;
    protected android.net.http.AndroidHttpClientConnection mHttpClientConnection;
    private org.apache.http.protocol.HttpContext mHttpContext;
    android.net.http.RequestFeeder mRequestFeeder;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.net.http.Connection: int SOCKET_TIMEOUT> = 60000;

        <android.net.http.Connection: int SEND> = 0;

        <android.net.http.Connection: int RETRY_REQUEST_LIMIT> = 2;

        <android.net.http.Connection: int READ> = 1;

        <android.net.http.Connection: int MIN_PIPE> = 2;

        <android.net.http.Connection: int MAX_PIPE> = 3;

        <android.net.http.Connection: java.lang.String HTTP_CONNECTION> = "http.connection";

        <android.net.http.Connection: int DRAIN> = 2;

        <android.net.http.Connection: int DONE> = 3;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "SEND";

        $r0[1] = "READ";

        $r0[2] = "DRAIN";

        $r0[3] = "DONE";

        <android.net.http.Connection: java.lang.String[] states> = $r0;

        <android.net.http.Connection: int STATE_NORMAL> = 0;

        <android.net.http.Connection: int STATE_CANCEL_REQUESTED> = 1;

        return;
    }

    protected void <init>(android.content.Context, org.apache.http.HttpHost, android.net.http.RequestQueue$ConnectionManager, android.net.http.RequestFeeder)
    {
        android.net.http.Connection $r0;
        android.content.Context $r1;
        org.apache.http.HttpHost $r2;
        android.net.http.RequestQueue$ConnectionManager $r3;
        android.net.http.RequestFeeder $r4;
        int $i0;
        org.apache.http.protocol.BasicHttpContext $r5;

        $r0 := @this: android.net.http.Connection;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: org.apache.http.HttpHost;

        $r3 := @parameter2: android.net.http.RequestQueue$ConnectionManager;

        $r4 := @parameter3: android.net.http.RequestFeeder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection> = null;

        $r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate> = null;

        $i0 = <android.net.http.Connection: int STATE_NORMAL>;

        $r0.<android.net.http.Connection: int mActive> = $i0;

        $r0.<android.net.http.Connection: android.content.Context mContext> = $r1;

        $r0.<android.net.http.Connection: org.apache.http.HttpHost mHost> = $r2;

        $r0.<android.net.http.Connection: android.net.http.RequestQueue$ConnectionManager mConnectionManager> = $r3;

        $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder> = $r4;

        $r0.<android.net.http.Connection: boolean mCanPersist> = 0;

        $r5 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r5.<org.apache.http.protocol.BasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>(null);

        $r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext> = $r5;

        return;
    }

    private boolean clearPipe(java.util.LinkedList)
    {
        android.net.http.Connection $r0;
        java.util.LinkedList $r1;
        android.net.http.RequestFeeder $r2, $r6;
        org.apache.http.HttpHost $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.net.http.Request $r5;
        java.lang.Throwable $r7;

        $r0 := @this: android.net.http.Connection;

        $r1 := @parameter0: java.util.LinkedList;

        $z0 = 1;

        $r2 = $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        entermonitor $r2;

     label1:
        $z1 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r4 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeLast()>();

        $r5 = (android.net.http.Request) $r4;

        $r6 = $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        interfaceinvoke $r6.<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>($r5);

        $z0 = 0;

        goto label1;

     label2:
        if $z0 == 0 goto label3;

        $r6 = $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r3 = $r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z0 = interfaceinvoke $r6.<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>($r3);

     label3:
        exitmonitor $r2;

     label4:
        return $z0;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static android.net.http.Connection getConnection(android.content.Context, org.apache.http.HttpHost, android.net.http.RequestQueue$ConnectionManager, android.net.http.RequestFeeder)
    {
        android.content.Context $r0;
        org.apache.http.HttpHost $r1;
        android.net.http.RequestQueue$ConnectionManager $r2;
        android.net.http.RequestFeeder $r3;
        java.lang.String $r4;
        boolean $z0;
        android.net.http.HttpConnection r6;
        android.net.http.HttpsConnection r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.apache.http.HttpHost;

        $r2 := @parameter2: android.net.http.RequestQueue$ConnectionManager;

        $r3 := @parameter3: android.net.http.RequestFeeder;

        $r4 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 == 0 goto label1;

        r6 = new android.net.http.HttpConnection;

        specialinvoke r6.<android.net.http.HttpConnection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestQueue$ConnectionManager,android.net.http.RequestFeeder)>($r0, $r1, $r2, $r3);

        return r6;

     label1:
        r7 = new android.net.http.HttpsConnection;

        specialinvoke r7.<android.net.http.HttpsConnection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestQueue$ConnectionManager,android.net.http.RequestFeeder)>($r0, $r1, $r2, $r3);

        return r7;
    }

    private boolean httpFailure(android.net.http.Request, int, java.lang.Exception)
    {
        android.net.http.Connection $r0;
        android.net.http.Request $r1;
        int $i0, $i1;
        java.lang.Exception $r2;
        boolean $z0, $z1;
        android.net.http.RequestQueue$ConnectionManager $r3;
        android.content.Context $r4;
        int[] $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7;
        android.net.http.EventHandler $r8;
        org.apache.http.protocol.HttpContext $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.net.http.Connection;

        $r1 := @parameter0: android.net.http.Request;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Exception;

        $z0 = 1;

        $r3 = $r0.<android.net.http.Connection: android.net.http.RequestQueue$ConnectionManager mConnectionManager>;

        $z1 = interfaceinvoke $r3.<android.net.http.RequestQueue$ConnectionManager: boolean isNetworkConnected()>();

        if $z1 == 0 goto label2;

        $i1 = $r1.<android.net.http.Request: int mFailCount>;

        $i1 = $i1 + 1;

        $r1.<android.net.http.Request: int mFailCount> = $i1;

        if $i1 < 2 goto label2;

        $z0 = 0;

        if $i0 >= 0 goto label3;

        $r4 = $r0.<android.net.http.Connection: android.content.Context mContext>;

        $r5 = <android.net.http.EventHandler: int[] errorStringResources>;

        $i1 = neg $i0;

        $i1 = $r5[$i1];

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.CharSequence getText(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r8 = $r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r8.<android.net.http.EventHandler: void error(int,java.lang.String)>($i0, $r7);

        virtualinvoke $r1.<android.net.http.Request: void complete()>();

     label2:
        virtualinvoke $r0.<android.net.http.Connection: void closeConnection()>();

        $r9 = $r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        interfaceinvoke $r9.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("http.connection");

        return $z0;

     label3:
        $r10 = virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r10 == null goto label5;

        $r7 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String toString()>();

     label4:
        goto label1;

     label5:
        $r7 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        goto label4;
    }

    private boolean keepAlive(org.apache.http.HttpEntity, org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext)
    {
        android.net.http.Connection $r0;
        org.apache.http.HttpEntity $r1;
        org.apache.http.ProtocolVersion $r2;
        int $i0;
        org.apache.http.protocol.HttpContext $r3;
        java.lang.Object $r4;
        org.apache.http.HttpConnection $r5;
        boolean $z0;
        long $l1;
        byte $b2;
        org.apache.http.HttpVersion $r6;

        $r0 := @this: android.net.http.Connection;

        $r1 := @parameter0: org.apache.http.HttpEntity;

        $r2 := @parameter1: org.apache.http.ProtocolVersion;

        $i0 := @parameter2: int;

        $r3 := @parameter3: org.apache.http.protocol.HttpContext;

        $r4 = interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.connection");

        $r5 = (org.apache.http.HttpConnection) $r4;

        if $r5 == null goto label1;

        $z0 = interfaceinvoke $r5.<org.apache.http.HttpConnection: boolean isOpen()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if $r1 == null goto label3;

        $l1 = interfaceinvoke $r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label3;

        $z0 = interfaceinvoke $r1.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z0 == 0 goto label2;

        $r6 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z0 = virtualinvoke $r2.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r6);

        if $z0 == 0 goto label3;

     label2:
        return 0;

     label3:
        if $i0 != 1 goto label4;

        return 0;

     label4:
        if $i0 != 2 goto label5;

        return 1;

     label5:
        $r6 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z0 = virtualinvoke $r2.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r6);

        if $z0 != 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    private boolean openHttpConnection(android.net.http.Request)
    {
        android.net.http.Connection $r0;
        android.net.http.Request $r1;
        android.net.http.AndroidHttpClientConnection $r2;
        byte $b0;
        java.lang.Exception $r3;
        org.apache.http.protocol.HttpContext $r4;
        java.net.UnknownHostException $r5;
        java.lang.IllegalArgumentException $r6;
        android.net.http.SSLConnectionClosedByUserException $r7;
        javax.net.ssl.SSLHandshakeException $r8;
        java.io.IOException $r9;
        android.net.http.RequestQueue$ConnectionManager $r10;
        boolean $z0;
        int $i1;
        android.net.http.RequestFeeder $r11;

        $r0 := @this: android.net.http.Connection;

        $r1 := @parameter0: android.net.http.Request;

        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b0 = 0;

        $r3 = null;

        $r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate> = null;

     label01:
        $r2 = virtualinvoke $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>($r1);

     label02:
        $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection> = $r2;

        $r2 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if $r2 == null goto label07;

     label03:
        $r2 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke $r2.<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>(60000);

     label04:
        $r4 = $r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

     label05:
        $r2 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        interfaceinvoke $r4.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r2);

     label06:
        if $b0 != 0 goto label13;

        return 1;

     label07:
        $r1.<android.net.http.Request: int mFailCount> = 2;

        return 0;

     label08:
        $r5 := @caughtexception;

        $b0 = -2;

        $r3 = $r5;

        goto label06;

     label09:
        $r6 := @caughtexception;

        $b0 = -6;

        $r1.<android.net.http.Request: int mFailCount> = 2;

        $r3 = $r6;

        goto label06;

     label10:
        $r7 := @caughtexception;

        $r1.<android.net.http.Request: int mFailCount> = 2;

        return 0;

     label11:
        $r8 := @caughtexception;

        $r1.<android.net.http.Request: int mFailCount> = 2;

        $b0 = -11;

        $r3 = $r8;

        goto label06;

     label12:
        $r9 := @caughtexception;

        $b0 = -6;

        $r3 = $r9;

        goto label06;

     label13:
        $r10 = $r0.<android.net.http.Connection: android.net.http.RequestQueue$ConnectionManager mConnectionManager>;

        $z0 = interfaceinvoke $r10.<android.net.http.RequestQueue$ConnectionManager: boolean isNetworkConnected()>();

        if $z0 == 0 goto label14;

        $i1 = $r1.<android.net.http.Request: int mFailCount>;

        if $i1 >= 2 goto label16;

     label14:
        $r11 = $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        interfaceinvoke $r11.<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>($r1);

        $i1 = $r1.<android.net.http.Request: int mFailCount>;

        $i1 = $i1 + 1;

        $r1.<android.net.http.Request: int mFailCount> = $i1;

     label15:
        if $b0 != 0 goto label17;

        return 1;

     label16:
        specialinvoke $r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>($r1, $b0, $r3);

        goto label15;

     label17:
        return 0;

        catch java.net.UnknownHostException from label01 to label02 with label08;
        catch java.net.UnknownHostException from label03 to label04 with label08;
        catch java.net.UnknownHostException from label05 to label06 with label08;
        catch java.lang.IllegalArgumentException from label01 to label02 with label09;
        catch java.lang.IllegalArgumentException from label03 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch android.net.http.SSLConnectionClosedByUserException from label01 to label02 with label10;
        catch android.net.http.SSLConnectionClosedByUserException from label03 to label04 with label10;
        catch android.net.http.SSLConnectionClosedByUserException from label05 to label06 with label10;
        catch javax.net.ssl.SSLHandshakeException from label01 to label02 with label11;
        catch javax.net.ssl.SSLHandshakeException from label03 to label04 with label11;
        catch javax.net.ssl.SSLHandshakeException from label05 to label06 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
    }

    void cancel()
    {
        android.net.http.Connection $r0;
        int $i0;

        $r0 := @this: android.net.http.Connection;

        $i0 = <android.net.http.Connection: int STATE_CANCEL_REQUESTED>;

        $r0.<android.net.http.Connection: int mActive> = $i0;

        virtualinvoke $r0.<android.net.http.Connection: void closeConnection()>();

        return;
    }

    abstract void closeConnection();

    byte[] getBuf()
    {
        android.net.http.Connection $r0;
        byte[] $r1;

        $r0 := @this: android.net.http.Connection;

        $r1 = $r0.<android.net.http.Connection: byte[] mBuf>;

        if $r1 != null goto label1;

        $r1 = newarray (byte)[8192];

        $r0.<android.net.http.Connection: byte[] mBuf> = $r1;

     label1:
        $r1 = $r0.<android.net.http.Connection: byte[] mBuf>;

        return $r1;
    }

    boolean getCanPersist()
    {
        android.net.http.Connection $r0;
        boolean z0;

        $r0 := @this: android.net.http.Connection;

        z0 = $r0.<android.net.http.Connection: boolean mCanPersist>;

        return z0;
    }

    android.net.http.SslCertificate getCertificate()
    {
        android.net.http.Connection $r0;
        android.net.http.SslCertificate r1;

        $r0 := @this: android.net.http.Connection;

        r1 = $r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate>;

        return r1;
    }

    org.apache.http.HttpHost getHost()
    {
        android.net.http.Connection $r0;
        org.apache.http.HttpHost r1;

        $r0 := @this: android.net.http.Connection;

        r1 = $r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        return r1;
    }

    org.apache.http.protocol.HttpContext getHttpContext()
    {
        android.net.http.Connection $r0;
        org.apache.http.protocol.HttpContext r1;

        $r0 := @this: android.net.http.Connection;

        r1 = $r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        return r1;
    }

    abstract java.lang.String getScheme();

    abstract android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request) throws java.io.IOException;

    void processRequests(android.net.http.Request)
    {
        android.net.http.Connection $r0;
        java.util.LinkedList $r1;
        android.net.http.Request $r2, $r6;
        byte $b0, $b1, $b2, $b3;
        java.lang.Exception $r3;
        int $i4, $i5;
        android.net.http.RequestFeeder $r4;
        org.apache.http.HttpHost $r5;
        boolean $z0, $z1;
        android.net.http.AndroidHttpClientConnection $r7;
        android.net.http.RequestQueue$ConnectionManager $r8;
        org.apache.http.HttpException $r9;
        java.io.IOException $r10, $r15;
        java.lang.IllegalStateException $r11, $r16;
        java.lang.Object $r12;
        org.apache.http.protocol.HttpContext $r13;
        org.apache.http.ParseException $r14;
        java.lang.InterruptedException $r17;

        $r0 := @this: android.net.http.Connection;

        $r2 := @parameter0: android.net.http.Request;

        $b0 = 0;

        $r3 = null;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $b1 = 2;

        $b2 = 3;

        $b3 = 0;

     label01:
        if $b3 == 3 goto label41;

        $i4 = $r0.<android.net.http.Connection: int mActive>;

        $i5 = <android.net.http.Connection: int STATE_CANCEL_REQUESTED>;

        if $i4 != $i5 goto label04;

     label02:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label03:
        $i4 = <android.net.http.Connection: int STATE_NORMAL>;

        $r0.<android.net.http.Connection: int mActive> = $i4;

     label04:
        lookupswitch($b3)
        {
            case 0: goto label06;
            case 1: goto label24;
            case 2: goto label24;
            default: goto label05;
        };

     label05:
        goto label01;

     label06:
        $i4 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $i4 != $b2 goto label07;

        $b3 = 1;

        goto label01;

     label07:
        if $r2 != null goto label09;

        $r4 = $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r5 = $r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $r6 = interfaceinvoke $r4.<android.net.http.RequestFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>($r5);

     label08:
        if $r6 != null goto label10;

        $b3 = 2;

        goto label01;

     label09:
        $r6 = $r2;

        $r2 = null;

        goto label08;

     label10:
        virtualinvoke $r6.<android.net.http.Request: void setConnection(android.net.http.Connection)>($r0);

        $z0 = $r6.<android.net.http.Request: boolean mCancelled>;

        if $z0 == 0 goto label11;

        virtualinvoke $r6.<android.net.http.Request: void complete()>();

        goto label01;

     label11:
        $r7 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if $r7 == null goto label12;

        $r7 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        $z0 = virtualinvoke $r7.<android.net.http.AndroidHttpClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label13;

     label12:
        $z0 = specialinvoke $r0.<android.net.http.Connection: boolean openHttpConnection(android.net.http.Request)>($r6);

        if $z0 != 0 goto label13;

        $b3 = 3;

        goto label01;

     label13:
        $r7 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

     label14:
        virtualinvoke $r6.<android.net.http.Request: void sendRequest(android.net.http.AndroidHttpClientConnection)>($r7);

     label15:
        if $r3 == null goto label23;

        $z0 = specialinvoke $r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>($r6, $b0, $r3);

        if $z0 == 0 goto label16;

        $z0 = $r6.<android.net.http.Request: boolean mCancelled>;

        if $z0 != 0 goto label16;

        virtualinvoke $r1.<java.util.LinkedList: void addLast(java.lang.Object)>($r6);

     label16:
        $r3 = null;

        $z0 = specialinvoke $r0.<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>($r1);

        if $z0 != 0 goto label17;

        $r8 = $r0.<android.net.http.Connection: android.net.http.RequestQueue$ConnectionManager mConnectionManager>;

        $z0 = interfaceinvoke $r8.<android.net.http.RequestQueue$ConnectionManager: boolean isNetworkConnected()>();

        if $z0 != 0 goto label22;

     label17:
        $b3 = 3;

     label18:
        $b2 = 1;

        $b1 = 1;

        goto label01;

     label19:
        $r9 := @caughtexception;

        $r3 = $r9;

        $b0 = -1;

        goto label15;

     label20:
        $r10 := @caughtexception;

        $r3 = $r10;

        $b0 = -7;

        goto label15;

     label21:
        $r11 := @caughtexception;

        $r3 = $r11;

        $b0 = -7;

        goto label15;

     label22:
        $b3 = 0;

        goto label18;

     label23:
        virtualinvoke $r1.<java.util.LinkedList: void addLast(java.lang.Object)>($r6);

        $z0 = $r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z0 != 0 goto label01;

        $b3 = 1;

        goto label01;

     label24:
        $r4 = $r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r5 = $r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z0 = interfaceinvoke $r4.<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>($r5);

        if $z0 != 0 goto label26;

        $z0 = 1;

     label25:
        $i4 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $b3 == 2 goto label27;

        if $i4 >= $b1 goto label27;

        if $z0 != 0 goto label27;

        $z1 = $r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z1 == 0 goto label27;

        $b3 = 0;

        goto label01;

     label26:
        $z0 = 0;

        goto label25;

     label27:
        if $i4 != 0 goto label30;

        if $z0 == 0 goto label29;

        $b3 = 3;

     label28:
        goto label01;

     label29:
        $b3 = 0;

        goto label28;

     label30:
        $r12 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r6 = (android.net.http.Request) $r12;

        $r7 = $r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

     label31:
        virtualinvoke $r6.<android.net.http.Request: void readResponse(android.net.http.AndroidHttpClientConnection)>($r7);

     label32:
        if $r3 == null goto label34;

        $z0 = specialinvoke $r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>($r6, $b0, $r3);

        if $z0 == 0 goto label33;

        $z0 = $r6.<android.net.http.Request: boolean mCancelled>;

        if $z0 != 0 goto label33;

        virtualinvoke $r6.<android.net.http.Request: void reset()>();

        virtualinvoke $r1.<java.util.LinkedList: void addFirst(java.lang.Object)>($r6);

     label33:
        $r3 = null;

        $r0.<android.net.http.Connection: boolean mCanPersist> = 0;

     label34:
        $z0 = $r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z0 != 0 goto label01;

        virtualinvoke $r0.<android.net.http.Connection: void closeConnection()>();

        $r13 = $r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        interfaceinvoke $r13.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("http.connection");

        specialinvoke $r0.<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>($r1);

        $b2 = 1;

        $b1 = 1;

        $r8 = $r0.<android.net.http.Connection: android.net.http.RequestQueue$ConnectionManager mConnectionManager>;

        $z0 = interfaceinvoke $r8.<android.net.http.RequestQueue$ConnectionManager: boolean isNetworkConnected()>();

        if $z0 == 0 goto label39;

        $b3 = 0;

     label35:
        goto label01;

     label36:
        $r14 := @caughtexception;

        $r3 = $r14;

        $b0 = -7;

        goto label32;

     label37:
        $r15 := @caughtexception;

        $r3 = $r15;

        $b0 = -7;

        goto label32;

     label38:
        $r16 := @caughtexception;

        $r3 = $r16;

        $b0 = -7;

        goto label32;

     label39:
        $b3 = 3;

        goto label35;

     label40:
        $r17 := @caughtexception;

        goto label03;

     label41:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label40;
        catch org.apache.http.HttpException from label14 to label15 with label19;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.lang.IllegalStateException from label14 to label15 with label21;
        catch org.apache.http.ParseException from label31 to label32 with label36;
        catch java.io.IOException from label31 to label32 with label37;
        catch java.lang.IllegalStateException from label31 to label32 with label38;
    }

    void setCanPersist(org.apache.http.HttpEntity, org.apache.http.ProtocolVersion, int)
    {
        android.net.http.Connection $r0;
        org.apache.http.HttpEntity $r1;
        org.apache.http.ProtocolVersion $r2;
        int $i0;
        boolean $z0;
        org.apache.http.protocol.HttpContext $r3;

        $r0 := @this: android.net.http.Connection;

        $r1 := @parameter0: org.apache.http.HttpEntity;

        $r2 := @parameter1: org.apache.http.ProtocolVersion;

        $i0 := @parameter2: int;

        $r3 = $r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        $z0 = specialinvoke $r0.<android.net.http.Connection: boolean keepAlive(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)>($r1, $r2, $i0, $r3);

        $r0.<android.net.http.Connection: boolean mCanPersist> = $z0;

        return;
    }

    void setCanPersist(boolean)
    {
        android.net.http.Connection $r0;
        boolean $z0;

        $r0 := @this: android.net.http.Connection;

        $z0 := @parameter0: boolean;

        $r0.<android.net.http.Connection: boolean mCanPersist> = $z0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.http.Connection $r0;
        java.lang.String $r1;
        org.apache.http.HttpHost $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.net.http.Connection;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $r1 = virtualinvoke $r2.<org.apache.http.HttpHost: java.lang.String toString()>();

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
