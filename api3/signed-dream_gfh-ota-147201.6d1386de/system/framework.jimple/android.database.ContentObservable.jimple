public class android.database.ContentObservable extends android.database.Observable
{

    public void <init>()
    {
        android.database.ContentObservable $r0;

        $r0 := @this: android.database.ContentObservable;

        specialinvoke $r0.<android.database.Observable: void <init>()>();

        return;
    }

    public void dispatchChange(boolean)
    {
        android.database.ContentObservable $r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1, $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        android.database.ContentObserver $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.database.ContentObservable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.database.ContentObserver) $r4;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke $r5.<android.database.ContentObserver: boolean deliverSelfNotifications()>();

        if $z1 == 0 goto label2;

     label3:
        virtualinvoke $r5.<android.database.ContentObserver: void dispatchChange(boolean)>($z0);

        goto label2;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

     label6:
        exitmonitor $r1;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public void notifyChange(boolean)
    {
        android.database.ContentObservable $r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1, $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        android.database.ContentObserver $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.database.ContentObservable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        $r3 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.database.ContentObserver) $r4;

        virtualinvoke $r5.<android.database.ContentObserver: void onChange(boolean)>($z0);

        goto label2;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

     label5:
        exitmonitor $r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void registerObserver(android.database.ContentObserver)
    {
        android.database.ContentObservable $r0;
        android.database.ContentObserver $r1;

        $r0 := @this: android.database.ContentObservable;

        $r1 := @parameter0: android.database.ContentObserver;

        specialinvoke $r0.<android.database.Observable: void registerObserver(java.lang.Object)>($r1);

        return;
    }

    public volatile void registerObserver(java.lang.Object)
    {
        android.database.ContentObservable $r0;
        java.lang.Object $r1;
        android.database.ContentObserver $r2;

        $r0 := @this: android.database.ContentObservable;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.ContentObserver) $r1;

        virtualinvoke $r0.<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>($r2);

        return;
    }
}
