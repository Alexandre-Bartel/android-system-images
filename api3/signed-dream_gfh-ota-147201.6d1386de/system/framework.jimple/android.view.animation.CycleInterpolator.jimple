public class android.view.animation.CycleInterpolator extends java.lang.Object implements android.view.animation.Interpolator
{
    private float mCycles;

    public void <init>(float)
    {
        android.view.animation.CycleInterpolator $r0;
        float $f0;

        $r0 := @this: android.view.animation.CycleInterpolator;

        $f0 := @parameter0: float;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.animation.CycleInterpolator: float mCycles> = $f0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.CycleInterpolator $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        float $f0;

        $r0 := @this: android.view.animation.CycleInterpolator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = <com.android.internal.R$styleable: int[] CycleInterpolator>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $f0 = virtualinvoke $r4.<android.content.res.TypedArray: float getFloat(int,float)>(0, 1.0F);

        $r0.<android.view.animation.CycleInterpolator: float mCycles> = $f0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public float getInterpolation(float)
    {
        android.view.animation.CycleInterpolator $r0;
        float $f0, $f1;
        double $d0, $d1;

        $r0 := @this: android.view.animation.CycleInterpolator;

        $f0 := @parameter0: float;

        $f1 = $r0.<android.view.animation.CycleInterpolator: float mCycles>;

        $f1 = 2.0F * $f1;

        $d0 = (double) $f1;

        $d0 = $d0 * 3.141592653589793;

        $d1 = (double) $f0;

        $d0 = $d0 * $d1;

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }
}
