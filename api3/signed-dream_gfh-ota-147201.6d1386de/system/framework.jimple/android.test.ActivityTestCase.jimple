public abstract class android.test.ActivityTestCase extends android.test.InstrumentationTestCase
{
    private android.app.Activity mActivity;

    public void <init>()
    {
        android.test.ActivityTestCase $r0;

        $r0 := @this: android.test.ActivityTestCase;

        specialinvoke $r0.<android.test.InstrumentationTestCase: void <init>()>();

        return;
    }

    protected android.app.Activity getActivity()
    {
        android.test.ActivityTestCase $r0;
        android.app.Activity r1;

        $r0 := @this: android.test.ActivityTestCase;

        r1 = $r0.<android.test.ActivityTestCase: android.app.Activity mActivity>;

        return r1;
    }

    protected void scrubClass(java.lang.Class) throws java.lang.IllegalAccessException
    {
        android.test.ActivityTestCase $r0;
        java.lang.Class $r1, $r3;
        java.lang.reflect.Field $r2;
        int $i0, $i1;
        java.lang.reflect.Field[] $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Exception $r6;

        $r0 := @this: android.test.ActivityTestCase;

        $r1 := @parameter0: java.lang.Class;

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r2 = $r4[$i1];

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label4;

     label2:
        virtualinvoke $r2.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);

        virtualinvoke $r2.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r0, null);

     label3:
        $r5 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        if $r5 == null goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TestCase", "Error: Could not nullify field!");

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TestCase", "Error: Could not nullify field!");

        goto label3;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }

    protected void setActivity(android.app.Activity)
    {
        android.test.ActivityTestCase $r0;
        android.app.Activity $r1;

        $r0 := @this: android.test.ActivityTestCase;

        $r1 := @parameter0: android.app.Activity;

        $r0.<android.test.ActivityTestCase: android.app.Activity mActivity> = $r1;

        return;
    }
}
