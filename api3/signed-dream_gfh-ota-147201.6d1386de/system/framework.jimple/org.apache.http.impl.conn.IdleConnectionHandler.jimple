public class org.apache.http.impl.conn.IdleConnectionHandler extends java.lang.Object
{
    private final java.util.Map connectionToTimes;
    private final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.impl.conn.IdleConnectionHandler $r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        java.util.HashMap $r3;

        $r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes> = $r3;

        return;
    }

    public void add(org.apache.http.HttpConnection, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.IdleConnectionHandler $r0;
        org.apache.http.HttpConnection $r1;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r2;
        java.util.Map $r3;
        java.lang.Long $r4;
        org.apache.commons.logging.Log $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r8;

        $r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $r1 := @parameter0: org.apache.http.HttpConnection;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding connection at: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label1:
        $r3 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r8 = new org.apache.http.impl.conn.IdleConnectionHandler$TimeValues;

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        specialinvoke $r8.<org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: void <init>(long,long,java.util.concurrent.TimeUnit)>($l1, $l0, $r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

        return;
    }

    public void closeExpiredConnections()
    {
        org.apache.http.impl.conn.IdleConnectionHandler $r0;
        java.io.IOException $r1;
        long $l0, $l1;
        org.apache.commons.logging.Log $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        org.apache.http.HttpConnection $r9;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r10;
        byte $b2;

        $r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for expired connections, now: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label1:
        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.http.HttpConnection) $r8;

        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r8;

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>($r10);

        $b2 = $l1 cmp $l0;

        if $b2 > 0 goto label2;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection, expired @: ");

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>($r10);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label3:
        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

     label4:
        interfaceinvoke $r9.<org.apache.http.HttpConnection: void close()>();

     label5:
        goto label2;

     label6:
        $r1 := @caughtexception;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r1);

        goto label2;

     label7:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public void closeIdleConnections(long)
    {
        org.apache.http.impl.conn.IdleConnectionHandler $r0;
        long $l0, $l1;
        java.io.IOException $r1;
        org.apache.commons.logging.Log $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        org.apache.http.HttpConnection $r9;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r10;
        java.lang.Long $r11;
        byte $b2;

        $r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for connections, idleTimeout: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label1:
        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.http.HttpConnection) $r8;

        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r8;

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>($r10);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $l1 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp $l0;

        if $b2 > 0 goto label2;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection, connection time: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label3:
        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

     label4:
        interfaceinvoke $r9.<org.apache.http.HttpConnection: void close()>();

     label5:
        goto label2;

     label6:
        $r1 := @caughtexception;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r1);

        goto label2;

     label7:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public boolean remove(org.apache.http.HttpConnection)
    {
        org.apache.http.impl.conn.IdleConnectionHandler $r0;
        org.apache.http.HttpConnection $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r4;
        org.apache.commons.logging.Log $r5;
        long $l0, $l1;
        byte $b2;

        $r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $r1 := @parameter0: org.apache.http.HttpConnection;

        $r2 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        $r4 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r3;

        if $r4 != null goto label1;

        $r5 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Removing a connection that never existed!");

        return 1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>($r4);

        $b2 = $l0 cmp $l1;

        if $b2 > 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void removeAll()
    {
        org.apache.http.impl.conn.IdleConnectionHandler $r0;
        java.util.Map $r1;

        $r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $r1 = $r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }
}
