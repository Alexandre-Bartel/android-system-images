public class com.google.masf.OneTimeCache extends java.lang.Object
{
    private static final int DEFAULT_CACHE_SIZE;
    private final int capacity;
    private final java.util.Hashtable table;
    private final java.util.Vector urls;

    public void <init>()
    {
        com.google.masf.OneTimeCache $r0;

        $r0 := @this: com.google.masf.OneTimeCache;

        specialinvoke $r0.<com.google.masf.OneTimeCache: void <init>(int)>(8);

        return;
    }

    public void <init>(int)
    {
        com.google.masf.OneTimeCache $r0;
        int $i0;
        java.util.Hashtable $r1;
        java.util.Vector $r2;

        $r0 := @this: com.google.masf.OneTimeCache;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.masf.OneTimeCache: int capacity> = $i0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>(int)>($i0);

        $r0.<com.google.masf.OneTimeCache: java.util.Hashtable table> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>(int)>($i0);

        $r0.<com.google.masf.OneTimeCache: java.util.Vector urls> = $r2;

        return;
    }

    private void evictOldest()
    {
        com.google.masf.OneTimeCache $r0;
        java.lang.Object $r1;
        java.util.Vector $r2;
        java.util.Hashtable $r3;

        $r0 := @this: com.google.masf.OneTimeCache;

        $r2 = $r0.<com.google.masf.OneTimeCache: java.util.Vector urls>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        $r2 = $r0.<com.google.masf.OneTimeCache: java.util.Vector urls>;

        virtualinvoke $r2.<java.util.Vector: void removeElementAt(int)>(0);

        $r3 = $r0.<com.google.masf.OneTimeCache: java.util.Hashtable table>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.masf.OneTimeCache $r0;
        java.lang.Object $r1, $r3;
        java.util.Vector $r2;
        java.util.Hashtable $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.masf.OneTimeCache;

        $r1 := @parameter0: java.lang.Object;

        entermonitor $r0;

     label1:
        $r4 = $r0.<com.google.masf.OneTimeCache: java.util.Hashtable table>;

        $r3 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

        if $r3 == null goto label2;

        $r2 = $r0.<com.google.masf.OneTimeCache: java.util.Vector urls>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        com.google.masf.OneTimeCache $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;
        java.util.Hashtable $r3;
        java.util.Vector $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.masf.OneTimeCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.google.masf.OneTimeCache: java.util.Hashtable table>;

        $i1 = virtualinvoke $r3.<java.util.Hashtable: int size()>();

        $i0 = $r0.<com.google.masf.OneTimeCache: int capacity>;

        if $i1 != $i0 goto label2;

        specialinvoke $r0.<com.google.masf.OneTimeCache: void evictOldest()>();

     label2:
        $r3 = $r0.<com.google.masf.OneTimeCache: java.util.Hashtable table>;

        $r2 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $r2 == null goto label3;

        $r4 = $r0.<com.google.masf.OneTimeCache: java.util.Vector urls>;

        virtualinvoke $r4.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

     label3:
        $r4 = $r0.<com.google.masf.OneTimeCache: java.util.Vector urls>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r1);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static void <clinit>()
    {
        <com.google.masf.OneTimeCache: int DEFAULT_CACHE_SIZE> = 8;

        return;
    }
}
