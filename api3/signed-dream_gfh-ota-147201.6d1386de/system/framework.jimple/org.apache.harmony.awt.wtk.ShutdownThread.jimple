public final class org.apache.harmony.awt.wtk.ShutdownThread extends java.lang.Thread
{
    private boolean shouldStop;

    public void <init>()
    {
        org.apache.harmony.awt.wtk.ShutdownThread $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.ShutdownThread;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<org.apache.harmony.awt.wtk.ShutdownThread: boolean shouldStop> = 0;

        virtualinvoke $r0.<java.lang.Thread: void setName(java.lang.String)>("AWT-Shutdown");

        virtualinvoke $r0.<java.lang.Thread: void setDaemon(boolean)>(0);

        return;
    }

    public void run()
    {
        org.apache.harmony.awt.wtk.ShutdownThread $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        java.lang.InterruptedException $r2;

        $r0 := @this: org.apache.harmony.awt.wtk.ShutdownThread;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

     label2:
        virtualinvoke $r0.<java.lang.Object: void wait()>();

     label3:
        $z0 = $r0.<org.apache.harmony.awt.wtk.ShutdownThread: boolean shouldStop>;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r1;

     label7:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.InterruptedException from label2 to label3 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void shutdown()
    {
        org.apache.harmony.awt.wtk.ShutdownThread $r0;
        java.lang.InterruptedException $r1;
        java.lang.String $r2;
        java.lang.RuntimeException $r3;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.awt.wtk.ShutdownThread;

        entermonitor $r0;

     label1:
        $r0.<org.apache.harmony.awt.wtk.ShutdownThread: boolean shouldStop> = 1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

     label2:
        virtualinvoke $r0.<java.lang.Object: void wait()>();

     label3:
        exitmonitor $r0;

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r2 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.27");

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.InterruptedException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public void start()
    {
        org.apache.harmony.awt.wtk.ShutdownThread $r0;
        java.lang.InterruptedException $r1;
        java.lang.String $r2;
        java.lang.RuntimeException $r3;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.awt.wtk.ShutdownThread;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<java.lang.Thread: void start()>();

     label2:
        virtualinvoke $r0.<java.lang.Object: void wait()>();

     label3:
        exitmonitor $r0;

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r2 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.26");

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.InterruptedException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }
}
