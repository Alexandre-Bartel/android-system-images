public class org.bouncycastle.crypto.encodings.ISO9796d1Encoding extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricBlockCipher
{
    private static byte[] inverse;
    private static byte[] shadows;
    private int bitSize;
    private org.bouncycastle.crypto.AsymmetricBlockCipher engine;
    private boolean forEncryption;
    private int padBits;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[16];

        $r0[0] = 14;

        $r0[1] = 3;

        $r0[2] = 5;

        $r0[3] = 8;

        $r0[4] = 9;

        $r0[5] = 4;

        $r0[6] = 2;

        $r0[7] = 15;

        $r0[8] = 0;

        $r0[9] = 13;

        $r0[10] = 11;

        $r0[11] = 6;

        $r0[12] = 7;

        $r0[13] = 10;

        $r0[14] = 12;

        $r0[15] = 1;

        <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows> = $r0;

        $r0 = newarray (byte)[16];

        $r0[0] = 8;

        $r0[1] = 15;

        $r0[2] = 6;

        $r0[3] = 1;

        $r0[4] = 5;

        $r0[5] = 2;

        $r0[6] = 11;

        $r0[7] = 12;

        $r0[8] = 3;

        $r0[9] = 4;

        $r0[10] = 13;

        $r0[11] = 10;

        $r0[12] = 14;

        $r0[13] = 9;

        $r0[14] = 0;

        $r0[15] = 7;

        <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] inverse> = $r0;

        return;
    }

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits> = 0;

        $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine> = $r1;

        return;
    }

    private byte[] decodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i5, $i8;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;
        byte $b4;
        org.bouncycastle.crypto.InvalidCipherTextException $r4;
        short $s6, $s7;
        boolean $z0;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $r1 = interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r1, $i0, $i1);

        $i0 = 1;

        $i1 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i1 = $i1 + 13;

        $i1 = $i1 / 16;

        $i3 = lengthof $r1;

        $i3 = $i3 - 1;

        $b4 = $r1[$i3];

        $b4 = $b4 & 15;

        if $b4 == 6 goto label1;

        $r4 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r4.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("invalid forcing byte in block");

        throw $r4;

     label1:
        $i3 = lengthof $r1;

        $i3 = $i3 - 1;

        $i5 = lengthof $r1;

        $i5 = $i5 - 1;

        $b4 = $r1[$i5];

        $s6 = $b4 & 255;

        $s6 = $s6 >>> 4;

        $r2 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] inverse>;

        $i5 = lengthof $r1;

        $i5 = $i5 - 2;

        $b4 = $r1[$i5];

        $s7 = $b4 & 255;

        $s7 = $s7 >> 4;

        $b4 = $r2[$s7];

        $i5 = $b4 << 4;

        $i5 = $s6 | $i5;

        $b4 = (byte) $i5;

        $r1[$i3] = $b4;

        $r2 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b4 = $r1[1];

        $s6 = $b4 & 255;

        $s6 = $s6 >>> 4;

        $b4 = $r2[$s6];

        $i3 = $b4 << 4;

        $r2 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b4 = $r1[1];

        $b4 = $b4 & 15;

        $b4 = $r2[$b4];

        $i3 = $i3 | $b4;

        $b4 = (byte) $i3;

        $r1[0] = $b4;

        $z0 = 0;

        $i3 = 0;

        $i5 = lengthof $r1;

        $i5 = $i5 - 1;

     label2:
        $i2 = lengthof $r1;

        $i8 = $i1 * 2;

        $i2 = $i2 - $i8;

        if $i5 < $i2 goto label5;

        $r2 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b4 = $r1[$i5];

        $s6 = $b4 & 255;

        $s6 = $s6 >>> 4;

        $b4 = $r2[$s6];

        $i2 = $b4 << 4;

        $r2 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b4 = $r1[$i5];

        $b4 = $b4 & 15;

        $b4 = $r2[$b4];

        $i2 = $i2 | $b4;

        $i8 = $i5 - 1;

        $b4 = $r1[$i8];

        $i8 = $b4 ^ $i2;

        $i8 = $i8 & 255;

        if $i8 == 0 goto label3;

        if $z0 != 0 goto label4;

        $z0 = 1;

        $i0 = $i5 - 1;

        $b4 = $r1[$i0];

        $i0 = $b4 ^ $i2;

        $i0 = $i0 & 255;

        $i3 = $i5 - 1;

     label3:
        $i5 = $i5 + -2;

        goto label2;

     label4:
        $r4 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r4.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("invalid tsums in block");

        throw $r4;

     label5:
        $r1[$i3] = 0;

        $i1 = lengthof $r1;

        $i1 = $i1 - $i3;

        $i1 = $i1 / 2;

        $r2 = newarray (byte)[$i1];

        $i1 = 0;

     label6:
        $i5 = lengthof $r2;

        if $i1 >= $i5 goto label7;

        $i5 = $i1 * 2;

        $i5 = $i5 + $i3;

        $i5 = $i5 + 1;

        $b4 = $r1[$i5];

        $r2[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label6;

     label7:
        $i0 = $i0 - 1;

        $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits> = $i0;

        return $r2;
    }

    private byte[] encodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        byte $b4, $b10;
        short $s9;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i2 = $i2 + 7;

        $i2 = $i2 / 8;

        $r2 = newarray (byte)[$i2];

        $i2 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits>;

        $i2 = $i2 + 1;

        $i3 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i3 = $i3 + 13;

        $i3 = $i3 / 16;

        $i5 = 0;

     label1:
        if $i5 >= $i3 goto label4;

        $i6 = $i3 - $i1;

        if $i5 <= $i6 goto label3;

        $i6 = $i0 + $i1;

        $i7 = $i3 - $i5;

        $i6 = $i6 - $i7;

        $i7 = lengthof $r2;

        $i7 = $i7 - $i3;

        $i8 = $i3 - $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i6, $r2, $i7, $i8);

     label2:
        $i5 = $i5 + $i1;

        goto label1;

     label3:
        $i6 = lengthof $r2;

        $i7 = $i5 + $i1;

        $i6 = $i6 - $i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i6, $i1);

        goto label2;

     label4:
        $i0 = lengthof $r2;

        $i5 = $i3 * 2;

        $i0 = $i0 - $i5;

     label5:
        $i5 = lengthof $r2;

        if $i0 == $i5 goto label6;

        $i5 = lengthof $r2;

        $i5 = $i5 - $i3;

        $i6 = $i0 / 2;

        $i5 = $i5 + $i6;

        $b4 = $r2[$i5];

        $r1 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $s9 = $b4 & 255;

        $s9 = $s9 >>> 4;

        $b10 = $r1[$s9];

        $i5 = $b10 << 4;

        $r1 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b10 = $b4 & 15;

        $b10 = $r1[$b10];

        $i5 = $i5 | $b10;

        $b10 = (byte) $i5;

        $r2[$i0] = $b10;

        $i5 = $i0 + 1;

        $r2[$i5] = $b4;

        $i0 = $i0 + 2;

        goto label5;

     label6:
        $i0 = lengthof $r2;

        $i1 = $i1 * 2;

        $i0 = $i0 - $i1;

        $b4 = $r2[$i0];

        $i1 = $b4 ^ $i2;

        $b4 = (byte) $i1;

        $r2[$i0] = $b4;

        $i0 = lengthof $r2;

        $i0 = $i0 - 1;

        $i1 = lengthof $r2;

        $i1 = $i1 - 1;

        $b4 = $r2[$i1];

        $i1 = $b4 << 4;

        $i1 = $i1 | 6;

        $b4 = (byte) $i1;

        $r2[$i0] = $b4;

        $i0 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i0 = $i0 - 1;

        $i0 = $i0 % 8;

        $i0 = 8 - $i0;

        $b4 = 0;

        if $i0 == 8 goto label8;

        $b10 = $r2[0];

        $s9 = 255 >>> $i0;

        $s9 = $b10 & $s9;

        $b10 = (byte) $s9;

        $r2[0] = $b10;

        $b10 = $r2[0];

        $s9 = 128 >>> $i0;

        $s9 = $b10 | $s9;

        $b10 = (byte) $s9;

        $r2[0] = $b10;

     label7:
        $r3 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = lengthof $r2;

        $i0 = $i0 - $b4;

        $r1 = interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r2, $b4, $i0);

        return $r1;

     label8:
        $r2[0] = 0;

        $b4 = $r2[1];

        $s9 = $b4 | 128;

        $b4 = (byte) $s9;

        $r2[1] = $b4;

        $b4 = 1;

        goto label7;
    }

    public int getInputBlockSize()
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        int $i0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $z0 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i0 = $i0 + 1;

        $i0 = $i0 / 2;

        return $i0;

     label1:
        return $i0;
    }

    public int getOutputBlockSize()
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        int $i0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

        $z0 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        return $i0;

     label1:
        $i0 = $i0 + 1;

        $i0 = $i0 / 2;

        return $i0;
    }

    public int getPadBits()
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        int i0;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        i0 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits>;

        return i0;
    }

    public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        r1 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        return r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        boolean $z0, $z1;
        org.bouncycastle.crypto.CipherParameters $r1;
        org.bouncycastle.crypto.params.ParametersWithRandom $r2;
        org.bouncycastle.crypto.params.RSAKeyParameters $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r4;
        java.math.BigInteger $r5;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z1 = $r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label2;

        $r2 = (org.bouncycastle.crypto.params.ParametersWithRandom) $r1;

        $r1 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r3 = (org.bouncycastle.crypto.params.RSAKeyParameters) $r1;

     label1:
        $r4 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r3);

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize> = $i0;

        $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption> = $z0;

        return;

     label2:
        $r3 = (org.bouncycastle.crypto.params.RSAKeyParameters) $r1;

        goto label1;
    }

    public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] encodeBlock(byte[],int,int)>($r1, $i0, $i1);

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] decodeBlock(byte[],int,int)>($r1, $i0, $i1);

        return $r1;
    }

    public void setPadBits(int)
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $i0 := @parameter0: int;

        if $i0 <= 7 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("padBits > 7");

        throw $r1;

     label1:
        $r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits> = $i0;

        return;
    }
}
