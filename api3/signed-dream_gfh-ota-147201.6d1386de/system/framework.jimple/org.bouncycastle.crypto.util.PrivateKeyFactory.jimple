public class org.bouncycastle.crypto.util.PrivateKeyFactory extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.crypto.util.PrivateKeyFactory $r0;

        $r0 := @this: org.bouncycastle.crypto.util.PrivateKeyFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure $r0, r23;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.bouncycastle.asn1.DERObjectIdentifier $r3, $r4;
        boolean $z0;
        org.bouncycastle.asn1.DERObject $r5;
        org.bouncycastle.asn1.ASN1Sequence $r6;
        java.math.BigInteger $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        org.bouncycastle.asn1.pkcs.DHParameter $r16, r25;
        org.bouncycastle.asn1.DEREncodable $r17;
        org.bouncycastle.asn1.DERInteger $r18;
        org.bouncycastle.asn1.x509.DSAParameter $r20, r28;
        org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters r24;
        org.bouncycastle.crypto.params.DHParameters r26;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters r27;
        org.bouncycastle.crypto.params.DSAParameters r29;
        org.bouncycastle.crypto.params.DSAPrivateKeyParameters r30;
        java.lang.RuntimeException r31;

        $r1 := @parameter0: org.bouncycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r4 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier rsaEncryption>;

        $z0 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        r23 = new org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r0 = r23;

        $r5 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        $r6 = (org.bouncycastle.asn1.ASN1Sequence) $r5;

        specialinvoke r23.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r6);

        r24 = new org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        $r8 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPublicExponent()>();

        $r10 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrivateExponent()>();

        $r11 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime1()>();

        $r12 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime2()>();

        $r13 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent1()>();

        $r14 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent2()>();

        $r15 = virtualinvoke $r0.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getCoefficient()>();

        specialinvoke r24.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15);

        return r24;

     label1:
        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r4 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier dhKeyAgreement>;

        $z0 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        r25 = new org.bouncycastle.asn1.pkcs.DHParameter;

        $r16 = r25;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r17 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r6 = (org.bouncycastle.asn1.ASN1Sequence) $r17;

        specialinvoke r25.<org.bouncycastle.asn1.pkcs.DHParameter: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r6);

        $r5 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        $r18 = (org.bouncycastle.asn1.DERInteger) $r5;

        r27 = new org.bouncycastle.crypto.params.DHPrivateKeyParameters;

        $r8 = virtualinvoke $r18.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        r26 = new org.bouncycastle.crypto.params.DHParameters;

        $r9 = virtualinvoke $r16.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getP()>();

        $r10 = virtualinvoke $r16.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getG()>();

        specialinvoke r26.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r9, $r10);

        specialinvoke r27.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DHParameters)>($r8, r26);

        return r27;

     label2:
        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r4 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_dsa>;

        $z0 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        r28 = new org.bouncycastle.asn1.x509.DSAParameter;

        $r20 = r28;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r17 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r6 = (org.bouncycastle.asn1.ASN1Sequence) $r17;

        specialinvoke r28.<org.bouncycastle.asn1.x509.DSAParameter: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r6);

        $r5 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        $r18 = (org.bouncycastle.asn1.DERInteger) $r5;

        r30 = new org.bouncycastle.crypto.params.DSAPrivateKeyParameters;

        $r8 = virtualinvoke $r18.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        r29 = new org.bouncycastle.crypto.params.DSAParameters;

        $r9 = virtualinvoke $r20.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getP()>();

        $r10 = virtualinvoke $r20.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getQ()>();

        $r11 = virtualinvoke $r20.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getG()>();

        specialinvoke r29.<org.bouncycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r9, $r10, $r11);

        specialinvoke r30.<org.bouncycastle.crypto.params.DSAPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DSAParameters)>($r8, r29);

        return r30;

     label3:
        r31 = new java.lang.RuntimeException;

        specialinvoke r31.<java.lang.RuntimeException: void <init>(java.lang.String)>("algorithm identifier in key not recognised");

        throw r31;
    }
}
