class com.android.server.HardwareService$VibrateThread extends java.lang.Thread
{
    boolean mDone;
    long[] mPattern;
    int mRepeat;
    final com.android.server.HardwareService this$0;

    void <init>(com.android.server.HardwareService, long[], int)
    {
        com.android.server.HardwareService$VibrateThread $r0;
        com.android.server.HardwareService $r1;
        long[] $r2;
        int $i0;
        android.os.PowerManager$WakeLock $r3;

        $r0 := @this: com.android.server.HardwareService$VibrateThread;

        $r1 := @parameter0: com.android.server.HardwareService;

        $r2 := @parameter1: long[];

        $i0 := @parameter2: int;

        $r0.<com.android.server.HardwareService$VibrateThread: com.android.server.HardwareService this$0> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<com.android.server.HardwareService$VibrateThread: long[] mPattern> = $r2;

        $r0.<com.android.server.HardwareService$VibrateThread: int mRepeat> = $i0;

        $r3 = staticinvoke <com.android.server.HardwareService: android.os.PowerManager$WakeLock access$400(com.android.server.HardwareService)>($r1);

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void acquire()>();

        return;
    }

    private void delay(long)
    {
        com.android.server.HardwareService$VibrateThread $r0;
        long $l0, $l2, $l3;
        byte $b1;
        boolean $z0;
        java.lang.InterruptedException $r1;

        $r0 := @this: com.android.server.HardwareService$VibrateThread;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label5;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label1:
        virtualinvoke $r0.<java.lang.Object: void wait(long)>($l0);

     label2:
        $z0 = $r0.<com.android.server.HardwareService$VibrateThread: boolean mDone>;

        if $z0 == 0 goto label3;

        return;

     label3:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l0 - $l3;

        $l0 = $l0 - $l2;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        return;

     label4:
        $r1 := @caughtexception;

        goto label2;

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    public void run()
    {
        com.android.server.HardwareService$VibrateThread $r0, $r5;
        int $i0, $i2, $i3;
        long[] $r1;
        android.os.PowerManager$WakeLock $r2;
        long $l1, $l4;
        boolean $z0;
        com.android.server.HardwareService $r3, $r4;
        byte $b5;
        java.lang.Throwable $r6, $r7;

        $r0 := @this: com.android.server.HardwareService$VibrateThread;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(-8);

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.android.server.HardwareService$VibrateThread: long[] mPattern>;

        $i0 = lengthof $r1;

     label02:
        $l1 = 0L;

        $i2 = 0;

     label03:
        $z0 = $r0.<com.android.server.HardwareService$VibrateThread: boolean mDone>;

     label04:
        if $z0 != 0 goto label29;

        if $i2 >= $i0 goto label07;

     label05:
        $l4 = $r1[$i2];

     label06:
        $l1 = $l1 + $l4;

        $i2 = $i2 + 1;

     label07:
        specialinvoke $r0.<com.android.server.HardwareService$VibrateThread: void delay(long)>($l1);

        $z0 = $r0.<com.android.server.HardwareService$VibrateThread: boolean mDone>;

     label08:
        if $z0 == 0 goto label15;

     label09:
        $z0 = $r0.<com.android.server.HardwareService$VibrateThread: boolean mDone>;

        if $z0 == 0 goto label10;

        staticinvoke <com.android.server.HardwareService: void vibratorOff()>();

     label10:
        $r3 = $r0.<com.android.server.HardwareService$VibrateThread: com.android.server.HardwareService this$0>;

        $r2 = staticinvoke <com.android.server.HardwareService: android.os.PowerManager$WakeLock access$400(com.android.server.HardwareService)>($r3);

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

        exitmonitor $r0;

     label11:
        $r3 = $r0.<com.android.server.HardwareService$VibrateThread: com.android.server.HardwareService this$0>;

        entermonitor $r3;

     label12:
        $r4 = $r0.<com.android.server.HardwareService$VibrateThread: com.android.server.HardwareService this$0>;

        $r5 = $r4.<com.android.server.HardwareService: com.android.server.HardwareService$VibrateThread mThread>;

        if $r5 != $r0 goto label13;

        $r4 = $r0.<com.android.server.HardwareService$VibrateThread: com.android.server.HardwareService this$0>;

        $r4.<com.android.server.HardwareService: com.android.server.HardwareService$VibrateThread mThread> = null;

     label13:
        exitmonitor $r3;

     label14:
        return;

     label15:
        if $i2 >= $i0 goto label18;

        $i3 = $i2 + 1;

     label16:
        $l1 = $r1[$i2];

        $b5 = $l1 cmp 0L;

        if $b5 <= 0 goto label28;

        staticinvoke <com.android.server.HardwareService: void vibratorOn(long)>($l1);

     label17:
        $i2 = $i3;

        goto label03;

     label18:
        $i2 = $r0.<com.android.server.HardwareService$VibrateThread: int mRepeat>;

        if $i2 >= 0 goto label19;

        goto label09;

     label19:
        $i2 = $r0.<com.android.server.HardwareService$VibrateThread: int mRepeat>;

     label20:
        $l1 = 0L;

        goto label03;

     label21:
        $r6 := @caughtexception;

     label22:
        exitmonitor $r0;

     label23:
        throw $r6;

     label24:
        $r7 := @caughtexception;

     label25:
        exitmonitor $r3;

     label26:
        throw $r7;

     label27:
        $r6 := @caughtexception;

        goto label22;

     label28:
        $i2 = $i3;

        goto label03;

     label29:
        goto label09;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label11 with label21;
        catch java.lang.Throwable from label12 to label14 with label24;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label18 to label20 with label27;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }
}
