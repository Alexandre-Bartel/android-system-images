class com.android.internal.policy.impl.UnlockScreen extends com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient implements com.android.internal.policy.impl.KeyguardScreen, com.android.internal.policy.impl.KeyguardUpdateMonitor$ConfigurationChangeCallback
{
    private static final int PATTERN_CLEAR_TIMEOUT_MS;
    private static final java.lang.String TAG;
    private static final int UNLOCK_PATTERN_WAKE_INTERVAL_MS;
    private final com.android.internal.policy.impl.KeyguardScreenCallback mCallback;
    private java.lang.Runnable mCancelPatternRunnable;
    private android.os.CountDownTimer mCountdownTimer;
    private boolean mCreatedInPortrait;
    private int mFailedPatternAttemptsSinceLastTimeout;
    private android.view.ViewGroup mFooterForgotPattern;
    private android.view.ViewGroup mFooterNormal;
    private android.widget.Button mForgotPatternButton;
    private long mLastPokeTime;
    private final com.android.internal.widget.LockPatternUtils mLockPatternUtils;
    private com.android.internal.widget.LockPatternView mLockPatternView;
    private android.content.ServiceConnection mServiceConnection;
    private int mTotalFailedPatternAttempts;
    private android.widget.TextView mUnlockHeader;
    private android.widget.ImageView mUnlockIcon;
    private final com.android.internal.policy.impl.KeyguardUpdateMonitor mUpdateMonitor;

    void <init>(android.content.Context, com.android.internal.widget.LockPatternUtils, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardScreenCallback, int)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        android.content.Context $r1;
        com.android.internal.widget.LockPatternUtils $r2;
        com.android.internal.policy.impl.KeyguardUpdateMonitor $r3, $r7;
        com.android.internal.policy.impl.KeyguardScreenCallback $r4;
        int $i0;
        com.android.internal.policy.impl.UnlockScreen$2 $r5, r19;
        boolean $z0;
        android.view.LayoutInflater $r8;
        android.view.View $r9;
        android.widget.ImageView $r10;
        com.android.internal.widget.LockPatternView $r11;
        android.widget.TextView $r12;
        android.view.ViewGroup $r13;
        android.widget.Button $r14;
        com.android.internal.policy.impl.UnlockScreen$FooterMode $r17;
        com.android.internal.policy.impl.UnlockScreen$1 r18;
        com.android.internal.policy.impl.UnlockScreen$3 r20;
        com.android.internal.policy.impl.UnlockScreen$UnlockPatternListener r21;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.android.internal.widget.LockPatternUtils;

        $r3 := @parameter2: com.android.internal.policy.impl.KeyguardUpdateMonitor;

        $r4 := @parameter3: com.android.internal.policy.impl.KeyguardScreenCallback;

        $i0 := @parameter4: int;

        specialinvoke $r0.<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void <init>(android.content.Context)>($r1);

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mFailedPatternAttemptsSinceLastTimeout> = 0;

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mTotalFailedPatternAttempts> = 0;

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.os.CountDownTimer mCountdownTimer> = null;

        $r0.<com.android.internal.policy.impl.UnlockScreen: long mLastPokeTime> = -7000L;

        r18 = new com.android.internal.policy.impl.UnlockScreen$1;

        specialinvoke r18.<com.android.internal.policy.impl.UnlockScreen$1: void <init>(com.android.internal.policy.impl.UnlockScreen)>($r0);

        $r0.<com.android.internal.policy.impl.UnlockScreen: java.lang.Runnable mCancelPatternRunnable> = r18;

        $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils> = $r2;

        $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardUpdateMonitor mUpdateMonitor> = $r3;

        $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback> = $r4;

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mTotalFailedPatternAttempts> = $i0;

        $i0 = $i0 % 5;

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mFailedPatternAttemptsSinceLastTimeout> = $i0;

        $r7 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardUpdateMonitor mUpdateMonitor>;

        $z0 = virtualinvoke $r7.<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isInPortrait()>();

        if $z0 == 0 goto label3;

        $r8 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r13 = (android.view.ViewGroup) $r0;

        virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(17367093, $r13, 1);

     label1:
        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908706);

        $r10 = (android.widget.ImageView) $r9;

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.ImageView mUnlockIcon> = $r10;

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908712);

        $r11 = (com.android.internal.widget.LockPatternView) $r9;

        $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView> = $r11;

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908692);

        $r12 = (android.widget.TextView) $r9;

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.TextView mUnlockHeader> = $r12;

        $r12 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.TextView mUnlockHeader>;

        virtualinvoke $r12.<android.widget.TextView: void setText(int)>(17039711);

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908707);

        $r13 = (android.view.ViewGroup) $r9;

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterNormal> = $r13;

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908709);

        $r13 = (android.view.ViewGroup) $r9;

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterForgotPattern> = $r13;

        r19 = new com.android.internal.policy.impl.UnlockScreen$2;

        $r5 = r19;

        specialinvoke r19.<com.android.internal.policy.impl.UnlockScreen$2: void <init>(com.android.internal.policy.impl.UnlockScreen)>($r0);

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908708);

        $r14 = (android.widget.Button) $r9;

        virtualinvoke $r14.<android.view.View: void setFocusable(boolean)>(0);

        virtualinvoke $r14.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r5);

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908711);

        $r14 = (android.widget.Button) $r9;

        virtualinvoke $r14.<android.view.View: void setFocusable(boolean)>(0);

        virtualinvoke $r14.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r5);

        $r9 = (android.view.View) $r0;

        $r9 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>(16908710);

        $r14 = (android.widget.Button) $r9;

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.Button mForgotPatternButton> = $r14;

        $r14 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.Button mForgotPatternButton>;

        virtualinvoke $r14.<android.widget.TextView: void setText(int)>(17039728);

        $r14 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.Button mForgotPatternButton>;

        r20 = new com.android.internal.policy.impl.UnlockScreen$3;

        specialinvoke r20.<com.android.internal.policy.impl.UnlockScreen$3: void <init>(com.android.internal.policy.impl.UnlockScreen)>($r0);

        virtualinvoke $r14.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r20);

        $r11 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        $r9 = (android.view.View) $r11;

        virtualinvoke $r0.<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void setDefaultTouchRecepient(android.view.View)>($r9);

        $r11 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        $r9 = (android.view.View) $r11;

        virtualinvoke $r9.<android.view.View: void setSaveEnabled(boolean)>(0);

        $r11 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        $r9 = (android.view.View) $r11;

        virtualinvoke $r9.<android.view.View: void setFocusable(boolean)>(0);

        $r11 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        r21 = new com.android.internal.policy.impl.UnlockScreen$UnlockPatternListener;

        specialinvoke r21.<com.android.internal.policy.impl.UnlockScreen$UnlockPatternListener: void <init>(com.android.internal.policy.impl.UnlockScreen,com.android.internal.policy.impl.UnlockScreen$1)>($r0, null);

        virtualinvoke $r11.<com.android.internal.widget.LockPatternView: void setOnPatternListener(com.android.internal.widget.LockPatternView$OnPatternListener)>(r21);

        $r11 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        $r2 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean isVisiblePatternEnabled()>();

        if $z0 != 0 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke $r11.<com.android.internal.widget.LockPatternView: void setInStealthMode(boolean)>($z0);

        $r11 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        $r2 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean isTactileFeedbackEnabled()>();

        virtualinvoke $r11.<com.android.internal.widget.LockPatternView: void setTactileFeedbackEnabled(boolean)>($z0);

        $r17 = <com.android.internal.policy.impl.UnlockScreen$FooterMode: com.android.internal.policy.impl.UnlockScreen$FooterMode Normal>;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void updateFooter(com.android.internal.policy.impl.UnlockScreen$FooterMode)>($r17);

        $z0 = virtualinvoke $r3.<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isInPortrait()>();

        $r0.<com.android.internal.policy.impl.UnlockScreen: boolean mCreatedInPortrait> = $z0;

        virtualinvoke $r3.<com.android.internal.policy.impl.KeyguardUpdateMonitor: void registerConfigurationChangeCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$ConfigurationChangeCallback)>($r0);

        $r9 = (android.view.View) $r0;

        virtualinvoke $r9.<android.view.View: void setFocusableInTouchMode(boolean)>(1);

        return;

     label3:
        $r8 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r13 = (android.view.ViewGroup) $r0;

        virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(17367092, $r13, 1);

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }

    static com.android.internal.widget.LockPatternView access$000(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        com.android.internal.widget.LockPatternView r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        return r1;
    }

    static com.android.internal.policy.impl.KeyguardScreenCallback access$100(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        com.android.internal.policy.impl.KeyguardScreenCallback r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        return r1;
    }

    static void access$1000(com.android.internal.policy.impl.UnlockScreen, com.android.internal.policy.impl.UnlockScreen$FooterMode)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        com.android.internal.policy.impl.UnlockScreen$FooterMode $r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        $r1 := @parameter1: com.android.internal.policy.impl.UnlockScreen$FooterMode;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void updateFooter(com.android.internal.policy.impl.UnlockScreen$FooterMode)>($r1);

        return;
    }

    static com.android.internal.widget.LockPatternUtils access$200(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        com.android.internal.widget.LockPatternUtils r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        return r1;
    }

    static java.lang.Runnable access$400(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: java.lang.Runnable mCancelPatternRunnable>;

        return r1;
    }

    static android.widget.ImageView access$500(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        android.widget.ImageView r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.ImageView mUnlockIcon>;

        return r1;
    }

    static android.widget.TextView access$600(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.TextView mUnlockHeader>;

        return r1;
    }

    static int access$708(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        $i0 = $r0.<com.android.internal.policy.impl.UnlockScreen: int mTotalFailedPatternAttempts>;

        $i1 = $i0 + 1;

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mTotalFailedPatternAttempts> = $i1;

        return $i0;
    }

    static int access$800(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        int i0;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        i0 = $r0.<com.android.internal.policy.impl.UnlockScreen: int mFailedPatternAttemptsSinceLastTimeout>;

        return i0;
    }

    static int access$802(com.android.internal.policy.impl.UnlockScreen, int)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        int $i0;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        $i0 := @parameter1: int;

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mFailedPatternAttemptsSinceLastTimeout> = $i0;

        return $i0;
    }

    static int access$808(com.android.internal.policy.impl.UnlockScreen)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        int $i0, $i1;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        $i0 = $r0.<com.android.internal.policy.impl.UnlockScreen: int mFailedPatternAttemptsSinceLastTimeout>;

        $i1 = $i0 + 1;

        $r0.<com.android.internal.policy.impl.UnlockScreen: int mFailedPatternAttemptsSinceLastTimeout> = $i1;

        return $i0;
    }

    static void access$900(com.android.internal.policy.impl.UnlockScreen, long)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        long $l0;

        $r0 := @parameter0: com.android.internal.policy.impl.UnlockScreen;

        $l0 := @parameter1: long;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void handleAttemptLockout(long)>($l0);

        return;
    }

    private void handleAttemptLockout(long)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        long $l0, $l1;
        com.android.internal.widget.LockPatternView $r1;
        android.os.CountDownTimer $r3;
        com.android.internal.policy.impl.UnlockScreen$4 r4;
        android.view.View r5;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $l0 := @parameter0: long;

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        virtualinvoke $r1.<com.android.internal.widget.LockPatternView: void clearPattern()>();

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        r5 = (android.view.View) $r1;

        virtualinvoke r5.<android.view.View: void setEnabled(boolean)>(0);

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r4 = new com.android.internal.policy.impl.UnlockScreen$4;

        $l0 = $l0 - $l1;

        specialinvoke r4.<com.android.internal.policy.impl.UnlockScreen$4: void <init>(com.android.internal.policy.impl.UnlockScreen,long,long)>($r0, $l0, 1000L);

        $r3 = virtualinvoke r4.<android.os.CountDownTimer: android.os.CountDownTimer start()>();

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.os.CountDownTimer mCountdownTimer> = $r3;

        return;
    }

    private void updateFooter(com.android.internal.policy.impl.UnlockScreen$FooterMode)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        com.android.internal.policy.impl.UnlockScreen$FooterMode $r1;
        int $i0;
        int[] $r2;
        android.view.ViewGroup $r3;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $r1 := @parameter0: com.android.internal.policy.impl.UnlockScreen$FooterMode;

        $r2 = <com.android.internal.policy.impl.UnlockScreen$5: int[] $SwitchMap$com$android$internal$policy$impl$UnlockScreen$FooterMode>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterNormal>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterForgotPattern>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        return;

     label3:
        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterNormal>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterForgotPattern>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        return;

     label4:
        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterNormal>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.view.ViewGroup mFooterForgotPattern>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        return;
    }

    public void cleanUp()
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        com.android.internal.policy.impl.KeyguardUpdateMonitor $r1;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardUpdateMonitor mUpdateMonitor>;

        virtualinvoke $r1.<com.android.internal.policy.impl.KeyguardUpdateMonitor: void removeCallback(java.lang.Object)>($r0);

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        long $l0, $l1;
        byte $b2;
        com.android.internal.policy.impl.KeyguardScreenCallback $r2;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke $r0.<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $r0.<com.android.internal.policy.impl.UnlockScreen: long mLastPokeTime>;

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 6900L;

        if $b2 <= 0 goto label2;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r0.<com.android.internal.policy.impl.UnlockScreen: long mLastPokeTime> = $l0;

        $r2 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r2.<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock(int)>(7000);

        return $z0;

     label1:
        return $z0;

     label2:
        return $z0;
    }

    public boolean needsInput()
    {
        com.android.internal.policy.impl.UnlockScreen $r0;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        int $i0;
        android.view.KeyEvent $r1;
        com.android.internal.policy.impl.KeyguardScreenCallback $r2;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label1;

        $r2 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r2.<com.android.internal.policy.impl.KeyguardScreenCallback: void goToLockScreen()>();

        return 1;

     label1:
        return 0;
    }

    public void onKeyboardChange(boolean)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $z0 := @parameter0: boolean;

        return;
    }

    public void onOrientationChange(boolean)
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        boolean $z0, $z1;
        com.android.internal.policy.impl.KeyguardScreenCallback $r1;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<com.android.internal.policy.impl.UnlockScreen: boolean mCreatedInPortrait>;

        if $z0 == $z1 goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r1.<com.android.internal.policy.impl.KeyguardScreenCallback: void recreateMe()>();

        return;

     label1:
        return;
    }

    public void onPause()
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        android.os.CountDownTimer $r1;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.os.CountDownTimer mCountdownTimer>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.os.CountDownTimer mCountdownTimer>;

        virtualinvoke $r1.<android.os.CountDownTimer: void cancel()>();

        $r0.<com.android.internal.policy.impl.UnlockScreen: android.os.CountDownTimer mCountdownTimer> = null;

        return;

     label1:
        return;
    }

    public void onResume()
    {
        com.android.internal.policy.impl.UnlockScreen $r0;
        android.widget.TextView $r1;
        android.widget.ImageView $r2;
        com.android.internal.widget.LockPatternView $r3;
        android.widget.Button $r4;
        com.android.internal.policy.impl.KeyguardScreenCallback $r5;
        boolean $z0;
        byte $b0;
        com.android.internal.widget.LockPatternUtils $r6;
        long $l1;
        com.android.internal.policy.impl.UnlockScreen$FooterMode $r7;
        int $i2;
        android.view.View r8;

        $r0 := @this: com.android.internal.policy.impl.UnlockScreen;

        $r1 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.TextView mUnlockHeader>;

        virtualinvoke $r1.<android.widget.TextView: void setText(int)>(17039711);

        $r2 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.ImageView mUnlockIcon>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        virtualinvoke $r3.<com.android.internal.widget.LockPatternView: void enableInput()>();

        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        r8 = (android.view.View) $r3;

        virtualinvoke r8.<android.view.View: void setEnabled(boolean)>(1);

        $r3 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternView mLockPatternView>;

        virtualinvoke $r3.<com.android.internal.widget.LockPatternView: void clearPattern()>();

        $r4 = $r0.<com.android.internal.policy.impl.UnlockScreen: android.widget.Button mForgotPatternButton>;

        $r5 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        $z0 = interfaceinvoke $r5.<com.android.internal.policy.impl.KeyguardScreenCallback: boolean doesFallbackUnlockScreenExist()>();

        if $z0 == 0 goto label3;

        $b0 = 0;

     label1:
        virtualinvoke $r4.<android.view.View: void setVisibility(int)>($b0);

        $r6 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $l1 = virtualinvoke $r6.<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline()>();

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label2;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void handleAttemptLockout(long)>($l1);

     label2:
        $r5 = $r0.<com.android.internal.policy.impl.UnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        $z0 = interfaceinvoke $r5.<com.android.internal.policy.impl.KeyguardScreenCallback: boolean isVerifyUnlockOnly()>();

        if $z0 == 0 goto label4;

        $r7 = <com.android.internal.policy.impl.UnlockScreen$FooterMode: com.android.internal.policy.impl.UnlockScreen$FooterMode VerifyUnlocked>;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void updateFooter(com.android.internal.policy.impl.UnlockScreen$FooterMode)>($r7);

        return;

     label3:
        $b0 = 4;

        goto label1;

     label4:
        $i2 = $r0.<com.android.internal.policy.impl.UnlockScreen: int mTotalFailedPatternAttempts>;

        if $i2 >= 5 goto label5;

        $r7 = <com.android.internal.policy.impl.UnlockScreen$FooterMode: com.android.internal.policy.impl.UnlockScreen$FooterMode Normal>;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void updateFooter(com.android.internal.policy.impl.UnlockScreen$FooterMode)>($r7);

        return;

     label5:
        $r7 = <com.android.internal.policy.impl.UnlockScreen$FooterMode: com.android.internal.policy.impl.UnlockScreen$FooterMode ForgotLockPattern>;

        specialinvoke $r0.<com.android.internal.policy.impl.UnlockScreen: void updateFooter(com.android.internal.policy.impl.UnlockScreen$FooterMode)>($r7);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.impl.UnlockScreen: int UNLOCK_PATTERN_WAKE_INTERVAL_MS> = 7000;

        <com.android.internal.policy.impl.UnlockScreen: java.lang.String TAG> = "UnlockScreen";

        <com.android.internal.policy.impl.UnlockScreen: int PATTERN_CLEAR_TIMEOUT_MS> = 2000;

        return;
    }
}
