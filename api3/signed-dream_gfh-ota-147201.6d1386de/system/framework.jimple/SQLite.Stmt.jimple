public class SQLite.Stmt extends java.lang.Object
{
    protected int error_code;
    private long handle;

    static void <clinit>()
    {
        staticinvoke <SQLite.Stmt: void internal_init()>();

        return;
    }

    public void <init>()
    {
        SQLite.Stmt $r0;

        $r0 := @this: SQLite.Stmt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<SQLite.Stmt: long handle> = 0L;

        $r0.<SQLite.Stmt: int error_code> = 0;

        return;
    }

    private static native void internal_init();

    public native void bind(int) throws SQLite.Exception;

    public native void bind(int, double) throws SQLite.Exception;

    public native void bind(int, int) throws SQLite.Exception;

    public native void bind(int, long) throws SQLite.Exception;

    public native void bind(int, java.lang.String) throws SQLite.Exception;

    public native void bind(int, byte[]) throws SQLite.Exception;

    public native int bind_parameter_count() throws SQLite.Exception;

    public native int bind_parameter_index(java.lang.String) throws SQLite.Exception;

    public native java.lang.String bind_parameter_name(int) throws SQLite.Exception;

    public native void bind_zeroblob(int, int) throws SQLite.Exception;

    public native void clear_bindings() throws SQLite.Exception;

    public native void close() throws SQLite.Exception;

    public java.lang.Object column(int) throws SQLite.Exception
    {
        SQLite.Stmt $r0;
        int $i0, $i1;
        long $l2;
        double $d0;
        byte[] $r2;
        java.lang.String $r3;
        java.lang.Long r4;
        java.lang.Double r5;

        $r0 := @this: SQLite.Stmt;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<SQLite.Stmt: int column_type(int)>($i0);

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        r4 = new java.lang.Long;

        $l2 = virtualinvoke $r0.<SQLite.Stmt: long column_long(int)>($i0);

        specialinvoke r4.<java.lang.Long: void <init>(long)>($l2);

        return r4;

     label3:
        r5 = new java.lang.Double;

        $d0 = virtualinvoke $r0.<SQLite.Stmt: double column_double(int)>($i0);

        specialinvoke r5.<java.lang.Double: void <init>(double)>($d0);

        return r5;

     label4:
        $r2 = virtualinvoke $r0.<SQLite.Stmt: byte[] column_bytes(int)>($i0);

        return $r2;

     label5:
        $r3 = virtualinvoke $r0.<SQLite.Stmt: java.lang.String column_string(int)>($i0);

        return $r3;
    }

    public native byte[] column_bytes(int) throws SQLite.Exception;

    public native int column_count() throws SQLite.Exception;

    public native java.lang.String column_database_name(int) throws SQLite.Exception;

    public native java.lang.String column_decltype(int) throws SQLite.Exception;

    public native double column_double(int) throws SQLite.Exception;

    public native int column_int(int) throws SQLite.Exception;

    public native long column_long(int) throws SQLite.Exception;

    public native java.lang.String column_origin_name(int) throws SQLite.Exception;

    public native java.lang.String column_string(int) throws SQLite.Exception;

    public native java.lang.String column_table_name(int) throws SQLite.Exception;

    public native int column_type(int) throws SQLite.Exception;

    protected native void finalize();

    public native boolean prepare() throws SQLite.Exception;

    public native void reset() throws SQLite.Exception;

    public native boolean step() throws SQLite.Exception;
}
