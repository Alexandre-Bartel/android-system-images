public final class org.apache.harmony.awt.ContextStorage extends java.lang.Object
{
    private static final org.apache.harmony.awt.ContextStorage globalContext;
    private static volatile boolean multiContextMode;
    private org.apache.harmony.awt.ComponentInternals componentInternals;
    private final java.lang.Object contextLock;
    private java.awt.GraphicsEnvironment graphicsEnvironment;
    private volatile boolean shutdownPending;
    private final org.apache.harmony.awt.wtk.Synchronizer synchronizer;
    private java.awt.Toolkit toolkit;
    private org.apache.harmony.awt.wtk.WTK wtk;

    static void <clinit>()
    {
        org.apache.harmony.awt.ContextStorage $r0;

        <org.apache.harmony.awt.ContextStorage: boolean multiContextMode> = 0;

        $r0 = new org.apache.harmony.awt.ContextStorage;

        specialinvoke $r0.<org.apache.harmony.awt.ContextStorage: void <init>()>();

        <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage globalContext> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        org.apache.harmony.awt.ContextStorage$ContextLock $r1;
        org.apache.harmony.awt.wtk.Synchronizer $r2;

        $r0 := @this: org.apache.harmony.awt.ContextStorage;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.ContextStorage: boolean shutdownPending> = 0;

        $r1 = new org.apache.harmony.awt.ContextStorage$ContextLock;

        specialinvoke $r1.<org.apache.harmony.awt.ContextStorage$ContextLock: void <init>(org.apache.harmony.awt.ContextStorage,org.apache.harmony.awt.ContextStorage$1)>($r0, null);

        $r0.<org.apache.harmony.awt.ContextStorage: java.lang.Object contextLock> = $r1;

        $r2 = new org.apache.harmony.awt.wtk.Synchronizer;

        specialinvoke $r2.<org.apache.harmony.awt.wtk.Synchronizer: void <init>()>();

        $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.Synchronizer synchronizer> = $r2;

        return;
    }

    public static void activateMultiContextMode()
    {
        <org.apache.harmony.awt.ContextStorage: boolean multiContextMode> = 1;

        return;
    }

    public static org.apache.harmony.awt.ComponentInternals getComponentInternals()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        org.apache.harmony.awt.ComponentInternals r1;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        r1 = $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ComponentInternals componentInternals>;

        return r1;
    }

    public static java.lang.Object getContextLock()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        java.lang.Object r1;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        r1 = $r0.<org.apache.harmony.awt.ContextStorage: java.lang.Object contextLock>;

        return r1;
    }

    private static org.apache.harmony.awt.ContextThreadGroup getContextThreadGroup()
    {
        java.lang.Thread $r0;
        java.lang.ThreadGroup $r1;
        boolean $z0;
        org.apache.harmony.awt.ContextThreadGroup $r2;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

     label1:
        if $r1 == null goto label3;

        $z0 = $r1 instanceof org.apache.harmony.awt.ContextThreadGroup;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.harmony.awt.ContextThreadGroup) $r1;

        return $r2;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();

        goto label1;

     label3:
        $r3 = new java.lang.RuntimeException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.59");

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static org.apache.harmony.awt.ContextStorage getCurrentContext()
    {
        org.apache.harmony.awt.ContextThreadGroup $r0;
        boolean $z0;
        org.apache.harmony.awt.ContextStorage r1;

        $z0 = <org.apache.harmony.awt.ContextStorage: boolean multiContextMode>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextThreadGroup getContextThreadGroup()>();

        r1 = $r0.<org.apache.harmony.awt.ContextThreadGroup: org.apache.harmony.awt.ContextStorage context>;

        return r1;

     label1:
        r1 = <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage globalContext>;

        return r1;
    }

    public static java.awt.Toolkit getDefaultToolkit()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        java.awt.Toolkit r1;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        r1 = $r0.<org.apache.harmony.awt.ContextStorage: java.awt.Toolkit toolkit>;

        return r1;
    }

    public static java.awt.GraphicsEnvironment getGraphicsEnvironment()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        java.awt.GraphicsEnvironment r1;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        r1 = $r0.<org.apache.harmony.awt.ContextStorage: java.awt.GraphicsEnvironment graphicsEnvironment>;

        return r1;
    }

    public static org.apache.harmony.awt.wtk.NativeEventQueue getNativeEventQueue()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        org.apache.harmony.awt.wtk.WTK $r1;
        org.apache.harmony.awt.wtk.NativeEventQueue $r2;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1 = $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.WTK wtk>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.NativeEventQueue getNativeEventQueue()>();

        return $r2;
    }

    public static org.apache.harmony.awt.wtk.NativeIM getNativeIM()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        org.apache.harmony.awt.wtk.WTK $r1;
        org.apache.harmony.awt.wtk.NativeIM $r2;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1 = $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.WTK wtk>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.NativeIM getNativeIM()>();

        return $r2;
    }

    public static org.apache.harmony.awt.wtk.Synchronizer getSynchronizer()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        org.apache.harmony.awt.wtk.Synchronizer r1;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        r1 = $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.Synchronizer synchronizer>;

        return r1;
    }

    public static org.apache.harmony.awt.wtk.WindowFactory getWindowFactory()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        org.apache.harmony.awt.wtk.WTK $r1;
        org.apache.harmony.awt.wtk.WindowFactory $r2;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1 = $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.WTK wtk>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.WindowFactory getWindowFactory()>();

        return $r2;
    }

    static void setComponentInternals(org.apache.harmony.awt.ComponentInternals)
    {
        org.apache.harmony.awt.ComponentInternals $r0;
        org.apache.harmony.awt.ContextStorage $r1;

        $r0 := @parameter0: org.apache.harmony.awt.ComponentInternals;

        $r1 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ComponentInternals componentInternals> = $r0;

        return;
    }

    public static void setDefaultToolkit(java.awt.Toolkit)
    {
        java.awt.Toolkit $r0;
        org.apache.harmony.awt.ContextStorage $r1;

        $r0 := @parameter0: java.awt.Toolkit;

        $r1 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1.<org.apache.harmony.awt.ContextStorage: java.awt.Toolkit toolkit> = $r0;

        return;
    }

    public static void setGraphicsEnvironment(java.awt.GraphicsEnvironment)
    {
        java.awt.GraphicsEnvironment $r0;
        org.apache.harmony.awt.ContextStorage $r1;

        $r0 := @parameter0: java.awt.GraphicsEnvironment;

        $r1 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1.<org.apache.harmony.awt.ContextStorage: java.awt.GraphicsEnvironment graphicsEnvironment> = $r0;

        return;
    }

    public static void setWTK(org.apache.harmony.awt.wtk.WTK)
    {
        org.apache.harmony.awt.wtk.WTK $r0;
        org.apache.harmony.awt.ContextStorage $r1;

        $r0 := @parameter0: org.apache.harmony.awt.wtk.WTK;

        $r1 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        $r1.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.WTK wtk> = $r0;

        return;
    }

    public static boolean shutdownPending()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        boolean z0;

        $r0 = staticinvoke <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>();

        z0 = $r0.<org.apache.harmony.awt.ContextStorage: boolean shutdownPending>;

        return z0;
    }

    void shutdown()
    {
        org.apache.harmony.awt.ContextStorage $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        $r0 := @this: org.apache.harmony.awt.ContextStorage;

        $z0 = <org.apache.harmony.awt.ContextStorage: boolean multiContextMode>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r0.<org.apache.harmony.awt.ContextStorage: boolean shutdownPending> = 1;

        $r1 = $r0.<org.apache.harmony.awt.ContextStorage: java.lang.Object contextLock>;

        entermonitor $r1;

     label2:
        $r0.<org.apache.harmony.awt.ContextStorage: java.awt.Toolkit toolkit> = null;

        $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ComponentInternals componentInternals> = null;

        $r0.<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.WTK wtk> = null;

        $r0.<org.apache.harmony.awt.ContextStorage: java.awt.GraphicsEnvironment graphicsEnvironment> = null;

        exitmonitor $r1;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
