final class com.android.internal.policy.impl.PhoneWindow$PanelFeatureState extends java.lang.Object
{
    int background;
    android.view.View createdPanelView;
    com.android.internal.policy.impl.PhoneWindow$DecorView decorView;
    int featureId;
    android.os.Bundle frozenMenuState;
    int fullBackground;
    int gravity;
    boolean isHandled;
    boolean isInExpandedMode;
    boolean isOpen;
    boolean isPrepared;
    android.view.Menu menu;
    public boolean qwertyMode;
    boolean refreshDecorView;
    android.view.View shownPanelView;
    int windowAnimations;
    int x;
    int y;

    void <init>(int)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r0;
        int $i0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int featureId> = $i0;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean refreshDecorView> = 0;

        return;
    }

    void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r0;
        android.os.Parcelable $r1;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r2;
        int $i0;
        boolean $z0;
        android.os.Bundle $r3;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState) $r1;

        $i0 = $r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: int featureId>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int featureId> = $i0;

        $z0 = $r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isOpen>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isOpen> = $z0;

        $z0 = $r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isInExpandedMode>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isInExpandedMode> = $z0;

        $r3 = $r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: android.os.Bundle menuState>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.os.Bundle frozenMenuState> = $r3;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.view.Menu menu> = null;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.view.View createdPanelView> = null;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.view.View shownPanelView> = null;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: com.android.internal.policy.impl.PhoneWindow$DecorView decorView> = null;

        return;
    }

    android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState $r0;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r1;
        int $i0;
        boolean $z0;
        android.view.Menu $r2;
        android.os.Bundle $r3;
        com.android.internal.view.menu.MenuBuilder $r4;

        $r1 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState;

        $r0 = new com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState;

        specialinvoke $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: void <init>(com.android.internal.policy.impl.PhoneWindow$1)>(null);

        $i0 = $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int featureId>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: int featureId> = $i0;

        $z0 = $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isOpen>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isOpen> = $z0;

        $z0 = $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isInExpandedMode>;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: boolean isInExpandedMode> = $z0;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.view.Menu menu>;

        if $r2 == null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: android.os.Bundle menuState> = $r3;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.view.Menu menu>;

        $r4 = (com.android.internal.view.menu.MenuBuilder) $r2;

        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState: android.os.Bundle menuState>;

        virtualinvoke $r4.<com.android.internal.view.menu.MenuBuilder: void saveHierarchyState(android.os.Bundle)>($r3);

        return $r0;

     label1:
        return $r0;
    }

    void setMenu(android.view.Menu)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r0;
        android.view.Menu $r1;
        android.os.Bundle $r2;
        com.android.internal.view.menu.MenuBuilder $r3;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState;

        $r1 := @parameter0: android.view.Menu;

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.view.Menu menu> = $r1;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.os.Bundle frozenMenuState>;

        if $r2 == null goto label1;

        $r3 = (com.android.internal.view.menu.MenuBuilder) $r1;

        $r2 = $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.os.Bundle frozenMenuState>;

        virtualinvoke $r3.<com.android.internal.view.menu.MenuBuilder: void restoreHierarchyState(android.os.Bundle)>($r2);

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: android.os.Bundle frozenMenuState> = null;

        return;

     label1:
        return;
    }

    void setStyle(android.content.Context)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r0;
        android.content.Context $r1;
        int[] $r2;
        android.content.res.TypedArray $r3;
        int $i0;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState;

        $r1 := @parameter0: android.content.Context;

        $r2 = <com.android.internal.R$styleable: int[] Theme>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getResourceId(int,int)>(46, 0);

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int background> = $i0;

        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getResourceId(int,int)>(47, 0);

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int fullBackground> = $i0;

        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getResourceId(int,int)>(93, 0);

        $r0.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int windowAnimations> = $i0;

        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }
}
