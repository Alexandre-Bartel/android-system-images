public class com.android.internal.awt.ImageOutputStreamWrapper extends java.io.OutputStream
{
    private byte[] mBuff;
    protected javax.imageio.stream.ImageOutputStream mIos;

    public void <init>(javax.imageio.stream.ImageOutputStream)
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        javax.imageio.stream.ImageOutputStream $r1;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        $r1 := @parameter0: javax.imageio.stream.ImageOutputStream;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ImageOutputStream must not be null");

        throw $r2;

     label1:
        $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos> = $r1;

        $r3 = newarray (byte)[1];

        $r0.<com.android.internal.awt.ImageOutputStreamWrapper: byte[] mBuff> = $r3;

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        javax.imageio.stream.ImageOutputStream $r1;
        java.io.IOException $r2;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        $r1 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Stream already closed");

        throw $r2;

     label1:
        $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos> = null;

        return;
    }

    public void flush() throws java.io.IOException
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        javax.imageio.stream.ImageOutputStream $r1;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        $r1 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos>;

        interfaceinvoke $r1.<javax.imageio.stream.ImageOutputStream: void flush()>();

        return;
    }

    public javax.imageio.stream.ImageOutputStream getImageOutputStream()
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        javax.imageio.stream.ImageOutputStream r1;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        r1 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos>;

        return r1;
    }

    public void write(int) throws java.io.IOException
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        int $i0;
        byte[] $r1;
        byte $b1;
        javax.imageio.stream.ImageOutputStream $r2;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: byte[] mBuff>;

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        $r2 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos>;

        $r1 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: byte[] mBuff>;

        interfaceinvoke $r2.<javax.imageio.stream.ImageOutputStream: void write(byte[],int,int)>($r1, 0, 1);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        byte[] $r1;
        javax.imageio.stream.ImageOutputStream $r2;
        int $i0;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos>;

        $i0 = lengthof $r1;

        interfaceinvoke $r2.<javax.imageio.stream.ImageOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.android.internal.awt.ImageOutputStreamWrapper $r0;
        byte[] $r1;
        int $i0, $i1;
        javax.imageio.stream.ImageOutputStream $r2;

        $r0 := @this: com.android.internal.awt.ImageOutputStreamWrapper;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<com.android.internal.awt.ImageOutputStreamWrapper: javax.imageio.stream.ImageOutputStream mIos>;

        interfaceinvoke $r2.<javax.imageio.stream.ImageOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
}
