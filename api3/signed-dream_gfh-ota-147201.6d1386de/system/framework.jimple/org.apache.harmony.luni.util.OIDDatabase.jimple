public class org.apache.harmony.luni.util.OIDDatabase extends java.lang.Object
{
    private static org.apache.harmony.luni.util.OIDDatabase instance;
    private java.util.Set algorithms;
    private java.util.Set oids;

    static void <clinit>()
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;

        $r0 = new org.apache.harmony.luni.util.OIDDatabase;

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void <init>()>();

        <org.apache.harmony.luni.util.OIDDatabase: org.apache.harmony.luni.util.OIDDatabase instance> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        org.apache.harmony.luni.util.OIDDatabase$DBEntry $r1, $r3, $r4;
        java.util.HashSet $r2;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set oids> = $r2;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set algorithms> = $r2;

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.113549.1.1.2");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("MD2withRSA");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.113549.1.1.4");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("MD5withRSA");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.113549.1.1.5");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("SHA1withRSA");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.10040.4.3");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("SHA1withDSA");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.3.14.3.2.26");

        $r4 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r4.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("SHA");

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("SHA-1");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r3, $r4);

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r3, $r1);

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.113549.2.5");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("MD5");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.113549.1.1.1");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("RSA");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.10040.4.1");

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.3.14.3.2.12");

        $r4 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r4.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("DSA");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r3, $r4);

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r4);

        $r1 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("1.2.840.10046.2.1");

        $r3 = new org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        specialinvoke $r3.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void <init>(java.lang.String)>("DiffieHellman");

        specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry,org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1, $r3);

        return;
    }

    private java.util.Set getAllEquivalents(java.lang.String, java.util.Iterator)
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        java.lang.String $r1, $r6;
        java.util.Iterator $r2, $r8;
        java.util.HashSet $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.harmony.luni.util.OIDDatabase$DBEntry $r5;
        java.util.Set $r7;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Iterator;

        $r3 = null;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.harmony.luni.util.OIDDatabase$DBEntry) $r4;

        $r6 = virtualinvoke $r5.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: java.lang.String getValue()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke $r5.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: java.util.Set getAllEquivalents()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.harmony.luni.util.OIDDatabase$DBEntry) $r4;

        $r6 = virtualinvoke $r5.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: java.lang.String getValue()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        return $r3;
    }

    public static org.apache.harmony.luni.util.OIDDatabase getInstance()
    {
        org.apache.harmony.luni.util.OIDDatabase r0;

        r0 = <org.apache.harmony.luni.util.OIDDatabase: org.apache.harmony.luni.util.OIDDatabase instance>;

        return r0;
    }

    private void wireTogether(org.apache.harmony.luni.util.OIDDatabase$DBEntry, org.apache.harmony.luni.util.OIDDatabase$DBEntry)
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        org.apache.harmony.luni.util.OIDDatabase$DBEntry $r1, $r2;
        java.util.Set $r3;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        $r1 := @parameter0: org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        $r2 := @parameter1: org.apache.harmony.luni.util.OIDDatabase$DBEntry;

        $r3 = $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set oids>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        $r3 = $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set algorithms>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        virtualinvoke $r1.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void addEquivalent(org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r2);

        virtualinvoke $r2.<org.apache.harmony.luni.util.OIDDatabase$DBEntry: void addEquivalent(org.apache.harmony.luni.util.OIDDatabase$DBEntry)>($r1);

        return;
    }

    public java.util.Set getAllAlgorithmsForOID(java.lang.String)
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        java.lang.String $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set oids>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r2 = specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set getAllEquivalents(java.lang.String,java.util.Iterator)>($r1, $r3);

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown OID : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label1:
        return $r2;
    }

    public java.util.Set getAllOIDsForAlgorithm(java.lang.String)
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        java.lang.String $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set algorithms>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r2 = specialinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set getAllEquivalents(java.lang.String,java.util.Iterator)>($r1, $r3);

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported algorithm : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label1:
        return $r2;
    }

    public java.lang.String getFirstAlgorithmForOID(java.lang.String)
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        java.lang.String $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set getAllAlgorithmsForOID(java.lang.String)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r4;

        return $r1;

     label1:
        return null;
    }

    public java.lang.String getFirstOIDForAlgorithm(java.lang.String)
    {
        org.apache.harmony.luni.util.OIDDatabase $r0;
        java.lang.String $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @this: org.apache.harmony.luni.util.OIDDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.util.OIDDatabase: java.util.Set getAllOIDsForAlgorithm(java.lang.String)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r4;

        return $r1;

     label1:
        return null;
    }
}
