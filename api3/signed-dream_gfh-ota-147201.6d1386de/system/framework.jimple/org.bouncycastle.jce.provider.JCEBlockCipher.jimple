public class org.bouncycastle.jce.provider.JCEBlockCipher extends org.bouncycastle.jce.provider.WrapCipherSpi implements org.bouncycastle.jce.provider.PBE
{
    private java.lang.Class[] availableSpecs;
    private org.bouncycastle.crypto.BlockCipher baseEngine;
    private org.bouncycastle.crypto.BufferedBlockCipher cipher;
    private int ivLength;
    private org.bouncycastle.crypto.params.ParametersWithIV ivParam;
    private java.lang.String modeName;
    private boolean padded;
    private java.lang.String pbeAlgorithm;
    private javax.crypto.spec.PBEParameterSpec pbeSpec;

    protected void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        java.lang.Class[] $r2;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: void <init>()>();

        $r2 = newarray (java.lang.Class)[4];

        $r2[0] = class "javax/crypto/spec/RC2ParameterSpec";

        $r2[1] = class "javax/crypto/spec/RC5ParameterSpec";

        $r2[2] = class "javax/crypto/spec/IvParameterSpec";

        $r2[3] = class "javax/crypto/spec/PBEParameterSpec";

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = 0;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: boolean padded> = 1;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String pbeAlgorithm> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine> = $r1;

        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r1);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;
    }

    protected void <init>(org.bouncycastle.crypto.BlockCipher, int)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        int $i0;
        java.lang.Class[] $r2;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        $i0 := @parameter1: int;

        specialinvoke $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: void <init>()>();

        $r2 = newarray (java.lang.Class)[4];

        $r2[0] = class "javax/crypto/spec/RC2ParameterSpec";

        $r2[1] = class "javax/crypto/spec/RC5ParameterSpec";

        $r2[2] = class "javax/crypto/spec/IvParameterSpec";

        $r2[3] = class "javax/crypto/spec/PBEParameterSpec";

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = 0;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: boolean padded> = 1;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String pbeAlgorithm> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine> = $r1;

        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r1);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        $i0 = $i0 / 8;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        return;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, javax.crypto.ShortBufferException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.bouncycastle.crypto.BufferedBlockCipher $r3;
        javax.crypto.ShortBufferException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        org.bouncycastle.crypto.DataLengthException $r7;
        javax.crypto.IllegalBlockSizeException $r8;
        org.bouncycastle.crypto.InvalidCipherTextException $r9;
        javax.crypto.BadPaddingException $r10;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $i3 = 0;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i4 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int getOutputSize(int)>($i1);

        $i5 = $i4 + $i2;

        $i6 = lengthof $r2;

        if $i5 <= $i6 goto label1;

        $r4 = new javax.crypto.ShortBufferException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need at least ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        if $i1 == 0 goto label2;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i3 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r2, $i2);

     label2:
        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i0 = $i2 + $i3;

     label3:
        $i0 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int doFinal(byte[],int)>($r2, $i0);

     label4:
        $i0 = $i0 + $i3;

        return $i0;

     label5:
        $r7 := @caughtexception;

        $r8 = new javax.crypto.IllegalBlockSizeException;

        $r6 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r8.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label6:
        $r9 := @caughtexception;

        $r10 = new javax.crypto.BadPaddingException;

        $r6 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r10.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r6);

        throw $r10;

        catch org.bouncycastle.crypto.DataLengthException from label3 to label4 with label5;
        catch org.bouncycastle.crypto.InvalidCipherTextException from label3 to label4 with label6;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        org.bouncycastle.crypto.BufferedBlockCipher $r3;
        org.bouncycastle.crypto.DataLengthException $r4;
        javax.crypto.IllegalBlockSizeException $r5;
        java.lang.String $r6;
        org.bouncycastle.crypto.InvalidCipherTextException $r7;
        javax.crypto.BadPaddingException $r8;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

        $i3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int engineGetOutputSize(int)>($i1);

        $r2 = newarray (byte)[$i3];

        if $i1 == 0 goto label1;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i2 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r2, 0);

     label1:
        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

     label2:
        $i0 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int doFinal(byte[],int)>($r2, $i2);

     label3:
        $i0 = $i2 + $i0;

        $r1 = newarray (byte)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new javax.crypto.IllegalBlockSizeException;

        $r6 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r5.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label5:
        $r7 := @caughtexception;

        $r8 = new javax.crypto.BadPaddingException;

        $r6 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r8.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r6);

        throw $r8;

        catch org.bouncycastle.crypto.DataLengthException from label2 to label3 with label4;
        catch org.bouncycastle.crypto.InvalidCipherTextException from label2 to label3 with label5;
    }

    protected int engineGetBlockSize()
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    protected byte[] engineGetIV()
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        byte[] $r1;
        org.bouncycastle.crypto.params.ParametersWithIV $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r2 == null goto label1;

        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r1 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        return $r1;

     label1:
        return null;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        java.security.Key $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: java.security.Key;

        $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        $i0 = lengthof $r2;

        $i0 = $i0 * 8;

        return $i0;
    }

    protected int engineGetOutputSize(int)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        int $i0;
        org.bouncycastle.crypto.BufferedBlockCipher $r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.BufferedBlockCipher: int getOutputSize(int)>($i0);

        return $i0;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        java.security.AlgorithmParameters $r1;
        javax.crypto.spec.PBEParameterSpec $r2;
        java.lang.String $r3, $r8;
        java.lang.Exception $r4, $r10;
        org.bouncycastle.crypto.params.ParametersWithIV $r5;
        org.bouncycastle.crypto.BufferedBlockCipher $r6;
        org.bouncycastle.crypto.BlockCipher $r7;
        int $i0;
        byte[] $r9;
        java.lang.RuntimeException $r11;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 = $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams>;

        if $r1 != null goto label2;

        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        if $r2 == null goto label4;

     label1:
        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String pbeAlgorithm>;

        $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, "BC");

        $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams> = $r1;

        $r1 = $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams>;

        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        virtualinvoke $r1.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r2);

     label2:
        $r1 = $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams>;

        return $r1;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r5 == null goto label2;

        $r6 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r3 = interfaceinvoke $r7.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r8 = $r3;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(47);

        if $i0 < 0 goto label5;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(47);

        $r8 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label5:
        $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r8, "BC");

        $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams> = $r1;

        $r1 = $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams>;

        $r5 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r9 = virtualinvoke $r5.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        virtualinvoke $r1.<java.security.AlgorithmParameters: void init(byte[])>($r9);

     label6:
        goto label2;

     label7:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r3 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        int $i0, $i1, $i2;
        java.security.Key $r1;
        java.security.AlgorithmParameters $r2;
        java.security.SecureRandom $r3;
        java.security.spec.AlgorithmParameterSpec $r4;
        java.lang.Class[] $r5;
        java.lang.Class $r6;
        java.security.InvalidAlgorithmParameterException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Exception $r10;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.AlgorithmParameters;

        $r3 := @parameter3: java.security.SecureRandom;

        $r4 = null;

        if $r2 == null goto label5;

        $i1 = 0;

     label1:
        $r5 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.Class[] availableSpecs>;

        $i2 = lengthof $r5;

        if $i1 == $i2 goto label3;

     label2:
        $r5 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.Class[] availableSpecs>;

        $r6 = $r5[$i1];

        $r4 = virtualinvoke $r2.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>($r6);

     label3:
        if $r4 != null goto label5;

        $r7 = new java.security.InvalidAlgorithmParameterException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t handle parameter ");

        $r9 = virtualinvoke $r2.<java.security.AlgorithmParameters: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label4:
        $r10 := @caughtexception;

        $i1 = $i1 + 1;

        goto label1;

     label5:
        virtualinvoke $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($i0, $r1, $r4, $r3);

        $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams> = $r2;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        int $i0;
        java.security.Key $r1;
        java.security.SecureRandom $r2;
        java.lang.String $r3;
        java.security.InvalidAlgorithmParameterException $r4;
        java.security.InvalidKeyException $r5;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.SecureRandom;

     label1:
        virtualinvoke $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($i0, $r1, null, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.security.InvalidKeyException;

        $r3 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r5.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r3);

        throw $r5;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        int $i0, $i1, $i2;
        java.security.Key $r1;
        java.security.SecureRandom $r2, $r16, r31;
        byte[] $r3;
        java.security.spec.AlgorithmParameterSpec $r4;
        boolean $z0;
        java.lang.StringBuilder $r6, r27;
        java.lang.String $r7;
        org.bouncycastle.crypto.BlockCipher $r8;
        org.bouncycastle.jce.provider.JCEPBEKey $r10;
        org.bouncycastle.asn1.DERObjectIdentifier $r11;
        org.bouncycastle.crypto.CipherParameters $r12, $r13;
        javax.crypto.spec.PBEParameterSpec $r14, r30;
        org.bouncycastle.crypto.params.ParametersWithIV $r15, $r24;
        java.security.InvalidParameterException $r17, r33;
        java.lang.Exception $r18;
        org.bouncycastle.crypto.BufferedBlockCipher $r19;
        javax.crypto.spec.IvParameterSpec $r20;
        org.bouncycastle.crypto.params.KeyParameter $r21, r34;
        javax.crypto.spec.RC2ParameterSpec $r22, $r23;
        javax.crypto.spec.RC5ParameterSpec $r25, $r26;
        java.security.InvalidKeyException r28;
        java.security.InvalidAlgorithmParameterException r29;
        org.bouncycastle.crypto.params.ParametersWithRandom r32;
        org.bouncycastle.crypto.params.RC2Parameters r35;
        org.bouncycastle.crypto.params.RC5Parameters r36;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.Key;

        $r4 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        $r2 := @parameter3: java.security.SecureRandom;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String pbeAlgorithm> = null;

        $r0.<org.bouncycastle.jce.provider.WrapCipherSpi: java.security.AlgorithmParameters engineParams> = null;

        $z0 = $r1 instanceof javax.crypto.SecretKey;

        if $z0 != 0 goto label01;

        r28 = new java.security.InvalidKeyException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key for algorithm ");

        $r7 = interfaceinvoke $r1.<java.security.Key: java.lang.String getAlgorithm()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not suitable for symmetric enryption.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r7);

        throw r28;

     label01:
        if $r4 != null goto label02;

        $r8 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r7 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("RC5-64");

        if $z0 == 0 goto label02;

        r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("RC5 requires an RC5ParametersSpec to be passed in.");

        throw r29;

     label02:
        $z0 = $r1 instanceof org.bouncycastle.jce.provider.JCEPBEKey;

        if $z0 == 0 goto label16;

        $r10 = (org.bouncycastle.jce.provider.JCEPBEKey) $r1;

        $r11 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: org.bouncycastle.asn1.DERObjectIdentifier getOID()>();

        if $r11 == null goto label13;

        $r11 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: org.bouncycastle.asn1.DERObjectIdentifier getOID()>();

        $r7 = virtualinvoke $r11.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String pbeAlgorithm> = $r7;

     label03:
        $r12 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: org.bouncycastle.crypto.CipherParameters getParam()>();

        if $r12 == null goto label14;

        $r13 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: org.bouncycastle.crypto.CipherParameters getParam()>();

        r30 = new javax.crypto.spec.PBEParameterSpec;

        $r3 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: byte[] getSalt()>();

        $i1 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: int getIterationCount()>();

        specialinvoke r30.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, $i1);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = r30;

     label04:
        $z0 = $r13 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label05;

        $r15 = (org.bouncycastle.crypto.params.ParametersWithIV) $r13;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r15;

     label05:
        $i1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        if $i1 == 0 goto label34;

        $z0 = $r13 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z0 != 0 goto label34;

        $r16 = $r2;

        if $r2 != null goto label06;

        r31 = new java.security.SecureRandom;

        $r16 = r31;

        specialinvoke r31.<java.security.SecureRandom: void <init>()>();

     label06:
        if $i0 == 1 goto label07;

        if $i0 != 3 goto label28;

     label07:
        $i1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        $r3 = newarray (byte)[$i1];

        virtualinvoke $r16.<java.security.SecureRandom: void nextBytes(byte[])>($r3);

        $r15 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r12 = $r15;

        specialinvoke $r15.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r13, $r3);

        $r15 = (org.bouncycastle.crypto.params.ParametersWithIV) $r12;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r15;

     label08:
        if $r2 == null goto label33;

        $z0 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: boolean padded>;

        if $z0 == 0 goto label33;

        r32 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        $r13 = r32;

        specialinvoke r32.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>($r12, $r2);

     label09:
        lookupswitch($i0)
        {
            case 1: goto label29;
            case 2: goto label31;
            case 3: goto label29;
            case 4: goto label31;
            default: goto label10;
        };

     label10:
        r33 = new java.security.InvalidParameterException;

        $r17 = r33;

        r27 = new java.lang.StringBuilder;

        $r6 = r27;

     label11:
        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown opmode ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" passed");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r7);

        throw $r17;

     label12:
        $r18 := @caughtexception;

        r28 = new java.security.InvalidKeyException;

        $r7 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke r28.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r7);

        throw r28;

     label13:
        $r7 = virtualinvoke $r10.<org.bouncycastle.jce.provider.JCEPBEKey: java.lang.String getAlgorithm()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String pbeAlgorithm> = $r7;

        goto label03;

     label14:
        $z0 = $r4 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z0 == 0 goto label15;

        $r14 = (javax.crypto.spec.PBEParameterSpec) $r4;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = $r14;

        $r19 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r8 = virtualinvoke $r19.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r7 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r13 = staticinvoke <org.bouncycastle.jce.provider.PBE$Util: org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jce.provider.JCEPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)>($r10, $r4, $r7);

        goto label04;

     label15:
        r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("PBE requires PBE parameters to be set.");

        throw r29;

     label16:
        if $r4 != null goto label17;

        $r21 = new org.bouncycastle.crypto.params.KeyParameter;

        $r13 = $r21;

        $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r21.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r3);

        goto label05;

     label17:
        $z0 = $r4 instanceof javax.crypto.spec.IvParameterSpec;

        if $z0 == 0 goto label21;

        $i1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        if $i1 == 0 goto label19;

        $r20 = (javax.crypto.spec.IvParameterSpec) $r4;

        $r3 = virtualinvoke $r20.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        $i1 = lengthof $r3;

        $i2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        if $i1 == $i2 goto label18;

        r29 = new java.security.InvalidAlgorithmParameterException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV must be ");

        $i0 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes long.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r7);

        throw r29;

     label18:
        $r15 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r13 = $r15;

        r34 = new org.bouncycastle.crypto.params.KeyParameter;

        $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke r34.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r3);

        $r3 = virtualinvoke $r20.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r15.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>(r34, $r3);

        $r15 = (org.bouncycastle.crypto.params.ParametersWithIV) $r13;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r15;

        goto label05;

     label19:
        $r7 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        if $r7 == null goto label20;

        $r7 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z0 == 0 goto label20;

        r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ECB mode does not use an IV");

        throw r29;

     label20:
        $r21 = new org.bouncycastle.crypto.params.KeyParameter;

        $r13 = $r21;

        $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r21.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r3);

        goto label05;

     label21:
        $z0 = $r4 instanceof javax.crypto.spec.RC2ParameterSpec;

        if $z0 == 0 goto label23;

        $r22 = (javax.crypto.spec.RC2ParameterSpec) $r4;

        r35 = new org.bouncycastle.crypto.params.RC2Parameters;

        $r13 = r35;

        $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        $r23 = (javax.crypto.spec.RC2ParameterSpec) $r4;

        $i1 = virtualinvoke $r23.<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()>();

        specialinvoke r35.<org.bouncycastle.crypto.params.RC2Parameters: void <init>(byte[],int)>($r3, $i1);

        $r3 = virtualinvoke $r22.<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>();

        if $r3 == null goto label05;

        $i1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        if $i1 == 0 goto label05;

        $r24 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r15 = $r24;

        $r3 = virtualinvoke $r22.<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>();

        specialinvoke $r24.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r13, $r3);

        $r24 = (org.bouncycastle.crypto.params.ParametersWithIV) $r15;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r24;

     label22:
        $r13 = $r15;

        goto label05;

     label23:
        $z0 = $r4 instanceof javax.crypto.spec.RC5ParameterSpec;

        if $z0 == 0 goto label27;

        $r25 = (javax.crypto.spec.RC5ParameterSpec) $r4;

        r36 = new org.bouncycastle.crypto.params.RC5Parameters;

        $r13 = r36;

        $r3 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        $r26 = (javax.crypto.spec.RC5ParameterSpec) $r4;

        $i1 = virtualinvoke $r26.<javax.crypto.spec.RC5ParameterSpec: int getRounds()>();

        specialinvoke r36.<org.bouncycastle.crypto.params.RC5Parameters: void <init>(byte[],int)>($r3, $i1);

        $r8 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r7 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("RC5");

        if $z0 == 0 goto label25;

        $r8 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r7 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("RC5-32");

        if $z0 == 0 goto label24;

        $i1 = virtualinvoke $r25.<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>();

        if $i1 == 32 goto label26;

        r29 = new java.security.InvalidAlgorithmParameterException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RC5 already set up for a word size of 32 not ");

        $i0 = virtualinvoke $r25.<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r7);

        throw r29;

     label24:
        $r8 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r7 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("RC5-64");

        if $z0 == 0 goto label26;

        $i1 = virtualinvoke $r25.<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>();

        if $i1 == 64 goto label26;

        r29 = new java.security.InvalidAlgorithmParameterException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RC5 already set up for a word size of 64 not ");

        $i0 = virtualinvoke $r25.<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r7);

        throw r29;

     label25:
        r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("RC5 parameters passed to a cipher that is not RC5.");

        throw r29;

     label26:
        $r3 = virtualinvoke $r25.<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>();

        if $r3 == null goto label05;

        $i1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        if $i1 == 0 goto label05;

        $r24 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r15 = $r24;

        $r3 = virtualinvoke $r25.<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>();

        specialinvoke $r24.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r13, $r3);

        $r24 = (org.bouncycastle.crypto.params.ParametersWithIV) $r15;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r24;

        goto label22;

     label27:
        r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown parameter type.");

        throw r29;

     label28:
        $r19 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r8 = virtualinvoke $r19.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r7 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("PGPCFB");

        if $i1 >= 0 goto label34;

        r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("no IV set when one expected");

        throw r29;

     label29:
        $r19 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r19.<org.bouncycastle.crypto.BufferedBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r13);

     label30:
        return;

     label31:
        $r19 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r19.<org.bouncycastle.crypto.BufferedBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r13);

     label32:
        return;

     label33:
        $r13 = $r12;

        goto label09;

     label34:
        $r12 = $r13;

        goto label08;

        catch java.lang.Exception from label11 to label12 with label12;
        catch java.lang.Exception from label29 to label30 with label12;
        catch java.lang.Exception from label31 to label32 with label12;
    }

    protected void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r3;
        org.bouncycastle.crypto.BlockCipher $r4, $r7;
        int $i0;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r5;
        org.bouncycastle.crypto.modes.OFBBlockCipher $r6;
        org.bouncycastle.crypto.modes.CFBBlockCipher $r8;
        java.lang.IllegalArgumentException $r9;
        org.bouncycastle.crypto.BufferedBlockCipher $r10;
        org.bouncycastle.crypto.modes.SICBlockCipher $r11;
        org.bouncycastle.crypto.modes.GOFBBlockCipher $r12;
        org.bouncycastle.crypto.modes.CTSBlockCipher $r13;
        java.security.NoSuchAlgorithmException $r14;
        java.lang.StringBuilder $r15;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>($r1);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName> = $r2;

        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z0 == 0 goto label01;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = 0;

        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label01:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CBC");

        if $z0 == 0 goto label02;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r5 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r5.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r5);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label02:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("OFB");

        if $z0 == 0 goto label04;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $r1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 3 goto label03;

        $r1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r6 = new org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r6.<org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r4, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r6);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label03:
        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r6 = new org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r7 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r7.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i0 = $i0 * 8;

        specialinvoke $r6.<org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r4, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r6);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label04:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("CFB");

        if $z0 == 0 goto label06;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $r1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 3 goto label05;

        $r1 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r8 = new org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r8.<org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r4, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r8);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label05:
        $r3 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r8 = new org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r7 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r7.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i0 = $i0 * 8;

        specialinvoke $r8.<org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r4, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r8);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label06:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("SIC");

        if $z0 == 0 goto label08;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $i0 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength>;

        if $i0 >= 16 goto label07;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Warning: SIC-Mode can become a twotime-pad if the blocksize of the cipher is too small. Use a cipher with a block size of at least 128 bits (e.g. AES)");

        throw $r9;

     label07:
        $r10 = new org.bouncycastle.crypto.BufferedBlockCipher;

        $r11 = new org.bouncycastle.crypto.modes.SICBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r11.<org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        specialinvoke $r10.<org.bouncycastle.crypto.BufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r11);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r10;

        return;

     label08:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("CTR");

        if $z0 == 0 goto label09;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $r10 = new org.bouncycastle.crypto.BufferedBlockCipher;

        $r11 = new org.bouncycastle.crypto.modes.SICBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r11.<org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        specialinvoke $r10.<org.bouncycastle.crypto.BufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r11);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r10;

        return;

     label09:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("GOFB");

        if $z0 == 0 goto label10;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $r10 = new org.bouncycastle.crypto.BufferedBlockCipher;

        $r12 = new org.bouncycastle.crypto.modes.GOFBBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r12.<org.bouncycastle.crypto.modes.GOFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        specialinvoke $r10.<org.bouncycastle.crypto.BufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r12);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r10;

        return;

     label10:
        $r2 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("CTS");

        if $z0 == 0 goto label11;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: int ivLength> = $i0;

        $r13 = new org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r5 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r5.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        specialinvoke $r13.<org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r5);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r13;

        return;

     label11:
        $r14 = new java.security.NoSuchAlgorithmException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r1);

        throw $r14;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.bouncycastle.crypto.BufferedBlockCipher $r3, $r4;
        org.bouncycastle.crypto.BlockCipher $r5;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r6;
        org.bouncycastle.crypto.paddings.ZeroBytePadding $r7;
        org.bouncycastle.crypto.paddings.ISO10126d2Padding $r8;
        org.bouncycastle.crypto.paddings.X923Padding $r9;
        org.bouncycastle.crypto.paddings.ISO7816d4Padding $r10;
        org.bouncycastle.crypto.paddings.TBCPadding $r11;
        org.bouncycastle.crypto.modes.CTSBlockCipher $r12;
        javax.crypto.NoSuchPaddingException $r13;
        java.lang.StringBuilder $r14;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label01;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: boolean padded> = 0;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $z0 = $r3 instanceof org.bouncycastle.crypto.modes.CTSBlockCipher;

        if $z0 != 0 goto label13;

        $r3 = new org.bouncycastle.crypto.BufferedBlockCipher;

        $r4 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r5);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r3;

        return;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS5PADDING");

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS7PADDING");

        if $z0 == 0 goto label03;

     label02:
        $r6 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r6.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r5);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r6;

        return;

     label03:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ZEROBYTEPADDING");

        if $z0 == 0 goto label04;

        $r6 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r7 = new org.bouncycastle.crypto.paddings.ZeroBytePadding;

        specialinvoke $r7.<org.bouncycastle.crypto.paddings.ZeroBytePadding: void <init>()>();

        specialinvoke $r6.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r5, $r7);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r6;

        return;

     label04:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126PADDING");

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126-2PADDING");

        if $z0 == 0 goto label06;

     label05:
        $r6 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r8 = new org.bouncycastle.crypto.paddings.ISO10126d2Padding;

        specialinvoke $r8.<org.bouncycastle.crypto.paddings.ISO10126d2Padding: void <init>()>();

        specialinvoke $r6.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r5, $r8);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r6;

        return;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("X9.23PADDING");

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("X923PADDING");

        if $z0 == 0 goto label08;

     label07:
        $r6 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r9 = new org.bouncycastle.crypto.paddings.X923Padding;

        specialinvoke $r9.<org.bouncycastle.crypto.paddings.X923Padding: void <init>()>();

        specialinvoke $r6.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r5, $r9);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r6;

        return;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO7816-4PADDING");

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO9797-1PADDING");

        if $z0 == 0 goto label10;

     label09:
        $r6 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r10 = new org.bouncycastle.crypto.paddings.ISO7816d4Padding;

        specialinvoke $r10.<org.bouncycastle.crypto.paddings.ISO7816d4Padding: void <init>()>();

        specialinvoke $r6.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r5, $r10);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r6;

        return;

     label10:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("TBCPADDING");

        if $z0 == 0 goto label11;

        $r6 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r11 = new org.bouncycastle.crypto.paddings.TBCPadding;

        specialinvoke $r11.<org.bouncycastle.crypto.paddings.TBCPadding: void <init>()>();

        specialinvoke $r6.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r5, $r11);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r6;

        return;

     label11:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("WITHCTS");

        if $z0 == 0 goto label12;

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: boolean padded> = 0;

        $r12 = new org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r12.<org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r5);

        $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r12;

        return;

     label12:
        $r13 = new javax.crypto.NoSuchPaddingException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Padding ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown.");

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label13:
        return;
    }

    protected int engineUpdate(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.BufferedBlockCipher $r3;
        org.bouncycastle.crypto.DataLengthException $r4;
        javax.crypto.ShortBufferException $r5;
        java.lang.String $r6;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

     label1:
        $i0 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r2, $i2);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new javax.crypto.ShortBufferException;

        $r6 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r5.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        org.bouncycastle.jce.provider.JCEBlockCipher $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.BufferedBlockCipher $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JCEBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i2 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int getUpdateOutputSize(int)>($i1);

        if $i2 <= 0 goto label3;

        $r2 = newarray (byte)[$i2];

        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i0 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r2, 0);

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof $r2;

        if $i0 == $i1 goto label2;

        $r1 = newarray (byte)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;

     label2:
        return $r2;

     label3:
        $r3 = $r0.<org.bouncycastle.jce.provider.JCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, null, 0);

        return null;
    }
}
