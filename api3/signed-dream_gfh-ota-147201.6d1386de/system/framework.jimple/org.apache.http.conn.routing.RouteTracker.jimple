public final class org.apache.http.conn.routing.RouteTracker extends java.lang.Object implements java.lang.Cloneable, org.apache.http.conn.routing.RouteInfo
{
    private boolean connected;
    private org.apache.http.conn.routing.RouteInfo$LayerType layered;
    private final java.net.InetAddress localAddress;
    private org.apache.http.HttpHost[] proxyChain;
    private boolean secure;
    private final org.apache.http.HttpHost targetHost;
    private org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled;

    public void <init>(org.apache.http.HttpHost, java.net.InetAddress)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost $r1;
        java.net.InetAddress $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r4;
        org.apache.http.conn.routing.RouteInfo$LayerType $r5;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 := @parameter0: org.apache.http.HttpHost;

        $r2 := @parameter1: java.net.InetAddress;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null.");

        throw $r3;

     label1:
        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost> = $r1;

        $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress> = $r2;

        $r4 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN>;

        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled> = $r4;

        $r5 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType PLAIN>;

        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered> = $r5;

        return;
    }

    public void <init>(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.HttpHost $r2;
        java.net.InetAddress $r3;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = virtualinvoke $r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        $r3 = virtualinvoke $r1.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>();

        specialinvoke $r0.<org.apache.http.conn.routing.RouteTracker: void <init>(org.apache.http.HttpHost,java.net.InetAddress)>($r2, $r3);

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        java.lang.Object $r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public final void connectProxy(org.apache.http.HttpHost, boolean)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost $r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r3;
        org.apache.http.HttpHost[] $r4;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 := @parameter0: org.apache.http.HttpHost;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy host may not be null.");

        throw $r2;

     label1:
        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected.");

        throw $r3;

     label2:
        $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected> = 1;

        $r4 = newarray (org.apache.http.HttpHost)[1];

        $r4[0] = $r1;

        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain> = $r4;

        $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = $z0;

        return;
    }

    public final void connectTarget(boolean)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected.");

        throw $r1;

     label1:
        $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected> = 1;

        $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = $z0;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.http.conn.routing.RouteTracker $r0, $r2;
        java.lang.Object $r1;
        boolean $z0, $z1, $z2;
        org.apache.http.HttpHost $r3, $r4;
        java.net.InetAddress $r5, $r6;
        org.apache.http.HttpHost[] $r7, $r8;
        int $i0, $i1;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r9, $r10;
        org.apache.http.conn.routing.RouteInfo$LayerType $r11, $r12;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label01;

        return 1;

     label01:
        $z0 = $r1 instanceof org.apache.http.conn.routing.RouteTracker;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = (org.apache.http.conn.routing.RouteTracker) $r1;

        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        $r4 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $r6 = $r2.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r5 == $r6 goto label03;

        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r5 == null goto label09;

        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $r6 = $r2.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $z1 = virtualinvoke $r5.<java.net.InetAddress: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label09;

     label03:
        $z1 = 1;

     label04:
        $z0 = $z0 & $z1;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r8 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r7 == $r8 goto label05;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r7 == null goto label10;

        $r7 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r7 == null goto label10;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r7;

        $r7 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i1 = lengthof $r7;

        if $i0 != $i1 goto label10;

     label05:
        $z1 = 1;

     label06:
        $z0 = $z0 & $z1;

        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        $z2 = $r2.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != $z2 goto label11;

        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        $z2 = $r2.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        if $z1 != $z2 goto label11;

        $r9 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r10 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        if $r9 != $r10 goto label11;

        $r11 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r12 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        if $r11 != $r12 goto label11;

        $z1 = 1;

     label07:
        $z0 = $z0 & $z1;

        if $z0 == 0 goto label12;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r7 == null goto label12;

        $i0 = 0;

     label08:
        if $z0 == 0 goto label12;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label12;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r3 = $r7[$i0];

        $r7 = $r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r4 = $r7[$i0];

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label08;

     label09:
        $z1 = 0;

        goto label04;

     label10:
        $z1 = 0;

        goto label06;

     label11:
        $z1 = 0;

        goto label07;

     label12:
        return $z0;
    }

    public final int getHopCount()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        int $i0;
        boolean $z0;
        org.apache.http.HttpHost[] $r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        return $i0;

     label2:
        return 0;
    }

    public final org.apache.http.HttpHost getHopTarget(int)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.apache.http.HttpHost[] $r4;
        org.apache.http.HttpHost $r5;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hop index must not be negative: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i1 = virtualinvoke $r0.<org.apache.http.conn.routing.RouteTracker: int getHopCount()>();

        if $i0 < $i1 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hop index ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds tracked route length ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label3;

        $r4 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r5 = $r4[$i0];

        return $r5;

     label3:
        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        return $r5;
    }

    public final org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.conn.routing.RouteInfo$LayerType r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        return r1;
    }

    public final java.net.InetAddress getLocalAddress()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        java.net.InetAddress r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        return r1;
    }

    public final org.apache.http.HttpHost getProxyHost()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost[] $r1;
        org.apache.http.HttpHost $r2;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r2 = $r1[0];

        return $r2;
    }

    public final org.apache.http.HttpHost getTargetHost()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        return r1;
    }

    public final org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.conn.routing.RouteInfo$TunnelType r1;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        return r1;
    }

    public final int hashCode()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost $r1;
        int $i0, $i1, $i2;
        java.net.InetAddress $r2;
        org.apache.http.HttpHost[] $r3;
        boolean $z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r4;
        org.apache.http.conn.routing.RouteInfo$LayerType $r5;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        $i0 = virtualinvoke $r1.<org.apache.http.HttpHost: int hashCode()>();

        $i1 = $i0;

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r2 == null goto label1;

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $i1 = virtualinvoke $r2.<java.net.InetAddress: int hashCode()>();

        $i1 = $i0 ^ $i1;

     label1:
        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r3 == null goto label3;

        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r3;

        $i1 = $i1 ^ $i0;

        $i0 = 0;

     label2:
        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i2 = lengthof $r3;

        if $i0 >= $i2 goto label3;

        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r1 = $r3[$i0];

        $i2 = virtualinvoke $r1.<org.apache.http.HttpHost: int hashCode()>();

        $i1 = $i1 ^ $i2;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 == 0 goto label4;

        $i1 = $i1 ^ 286331153;

     label4:
        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        if $z0 == 0 goto label5;

        $i1 = $i1 ^ 572662306;

     label5:
        $r4 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $i0 = virtualinvoke $r4.<java.lang.Enum: int hashCode()>();

        $i1 = $i1 ^ $i0;

        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $i0 = virtualinvoke $r5.<java.lang.Enum: int hashCode()>();

        $i1 = $i1 ^ $i0;

        return $i1;
    }

    public final boolean isConnected()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        boolean z0;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        return z0;
    }

    public final boolean isLayered()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.conn.routing.RouteInfo$LayerType $r1, $r2;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r1 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isSecure()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        boolean z0;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        return z0;
    }

    public final boolean isTunnelled()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r1, $r2;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r1 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void layerProtocol(boolean)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        org.apache.http.conn.routing.RouteInfo$LayerType $r2;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No layered protocol unless connected.");

        throw $r1;

     label1:
        $r2 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered> = $r2;

        $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = $z0;

        return;
    }

    public final org.apache.http.conn.routing.HttpRoute toRoute()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost $r1;
        java.net.InetAddress $r2;
        org.apache.http.HttpHost[] $r3;
        boolean $z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r4;
        org.apache.http.conn.routing.RouteInfo$LayerType $r5;
        org.apache.http.conn.routing.HttpRoute $r6;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = new org.apache.http.conn.routing.HttpRoute;

        $r1 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        $r4 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        specialinvoke $r6.<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>($r1, $r2, $r3, $z0, $r4, $r5);

        return $r6;
    }

    public final java.lang.String toString()
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        boolean $z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r3, $r4;
        org.apache.http.conn.routing.RouteInfo$LayerType $r5, $r6;
        org.apache.http.HttpHost[] $r7;
        org.apache.http.HttpHost $r8;
        java.lang.String $r9;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<org.apache.http.conn.routing.RouteTracker: int getHopCount()>();

        $i0 = $i0 * 30;

        $i0 = $i0 + 50;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RouteTracker[");

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r2 == null goto label1;

        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

     label1:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(99);

     label2:
        $r3 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r4 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if $r3 != $r4 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(116);

     label3:
        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r6 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        if $r5 != $r6 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(108);

     label4:
        $z0 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        if $z0 == 0 goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115);

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}->");

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r7 == null goto label7;

        $i0 = 0;

     label6:
        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label7;

        $r7 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r8 = $r7[$i0];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r8 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final void tunnelProxy(org.apache.http.HttpHost, boolean)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        org.apache.http.HttpHost $r1;
        boolean $z0, $z1;
        org.apache.http.HttpHost[] $r2, $r5, $r6;
        java.lang.IllegalArgumentException $r3;
        java.lang.IllegalStateException $r4;
        int $i0;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 := @parameter0: org.apache.http.HttpHost;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy host may not be null.");

        throw $r3;

     label1:
        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tunnel unless connected.");

        throw $r4;

     label2:
        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r2 != null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No proxy tunnel without proxy.");

        throw $r4;

     label3:
        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r2;

        $i0 = $i0 + 1;

        $r2 = newarray (org.apache.http.HttpHost)[$i0];

        $r5 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r6 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r2, 0, $i0);

        $i0 = lengthof $r2;

        $i0 = $i0 - 1;

        $r2[$i0] = $r1;

        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain> = $r2;

        $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = $z0;

        return;
    }

    public final void tunnelTarget(boolean)
    {
        org.apache.http.conn.routing.RouteTracker $r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        org.apache.http.HttpHost[] $r2;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r3;

        $r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tunnel unless connected.");

        throw $r1;

     label1:
        $r2 = $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r2 != null goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tunnel without proxy.");

        throw $r1;

     label2:
        $r3 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        $r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled> = $r3;

        $r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = $z0;

        return;
    }
}
