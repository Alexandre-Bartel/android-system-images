public class org.bouncycastle.crypto.modes.CFBBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private byte[] IV;
    private int blockSize;
    private byte[] cfbOutV;
    private byte[] cfbV;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private boolean encrypting;

    public void <init>(org.bouncycastle.crypto.BlockCipher, int)
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        int $i0;
        byte[] $r2;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = null;

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = $r1;

        $i0 = $i0 / 8;

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize> = $i0;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV> = $r2;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV> = $r2;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV> = $r2;

        return;
    }

    public int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        byte[] $r1, $r2, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        org.bouncycastle.crypto.DataLengthException $r3;
        org.bouncycastle.crypto.BlockCipher $r4;
        byte $b5, $b6;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i3 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i3 = $i3 + $i0;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label1;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r3;

     label1:
        $i3 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i3 = $i3 + $i1;

        $i2 = lengthof $r2;

        if $i3 <= $i2 goto label2;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r3;

     label2:
        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i3 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r7 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i4 = lengthof $r7;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i2 = $i4 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i3, $r6, 0, $i2);

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i3 = lengthof $r6;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i3 = $i3 - $i2;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r5, $i3, $i2);

        $i3 = 0;

     label3:
        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        if $i3 >= $i2 goto label4;

        $i2 = $i1 + $i3;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        $b5 = $r5[$i3];

        $i4 = $i0 + $i3;

        $b6 = $r1[$i4];

        $b5 = $b5 ^ $b6;

        $b5 = (byte) $b5;

        $r2[$i2] = $b5;

        $i3 = $i3 + 1;

        goto label3;

     label4:
        $i0 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        return $i0;
    }

    public int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        byte[] $r1, $r2, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i5;
        org.bouncycastle.crypto.DataLengthException $r3;
        org.bouncycastle.crypto.BlockCipher $r4;
        byte $b4, $b6;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i2 = $i2 + $i0;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label1;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r3;

     label1:
        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i2 = $i2 + $i1;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label2;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r3;

     label2:
        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        $i2 = 0;

     label3:
        $i3 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        if $i2 >= $i3 goto label4;

        $i3 = $i1 + $i2;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        $b4 = $r5[$i2];

        $i5 = $i0 + $i2;

        $b6 = $r1[$i5];

        $b4 = $b4 ^ $b6;

        $b4 = (byte) $b4;

        $r2[$i3] = $b4;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r1 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i0 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i3 = lengthof $r6;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i2 = $i3 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r5, 0, $i2);

        $r1 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i0 = lengthof $r5;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i0 = $i0 - $i2;

        $i2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, $i0, $i2);

        $i0 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        return $i0;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        java.lang.StringBuilder $r1;
        org.bouncycastle.crypto.BlockCipher $r2;
        java.lang.String $r3;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/CFB");

        $i0 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i0 = $i0 * 8;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        int i0;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        i0 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        return i0;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        org.bouncycastle.crypto.BlockCipher r1;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        r1 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r1;
        org.bouncycastle.crypto.params.ParametersWithIV $r2;
        byte[] $r3, $r4, $r5;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.BlockCipher $r6;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: boolean encrypting> = $z0;

        $z0 = $r1 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label4;

        $r2 = (org.bouncycastle.crypto.params.ParametersWithIV) $r1;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $i0 = lengthof $r3;

        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        $i1 = lengthof $r3;

        $i0 = $i0 - $i1;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, $i0, $i1);

        $i0 = 0;

     label1:
        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i1 = lengthof $r4;

        $i2 = lengthof $r3;

        $i1 = $i1 - $i2;

        if $i0 >= $i1 goto label3;

        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r4[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r5 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

     label3:
        virtualinvoke $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: void reset()>();

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r1 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r6.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r1);

        return;

     label4:
        virtualinvoke $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: void reset()>();

        $r6 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r1);

        return;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        byte[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $z0 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: boolean encrypting>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int encryptBlock(byte[],int,byte[],int)>($r1, $i0, $r2, $i1);

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int decryptBlock(byte[],int,byte[],int)>($r1, $i0, $r2, $i1);

        return $i0;
    }

    public void reset()
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r0;
        byte[] $r1, $r2, $r3;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r4;

        $r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r2 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r1 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r3 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r4 = $r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }
}
