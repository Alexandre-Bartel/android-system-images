class com.android.server.ConnectivityService$ConnectivityThread extends java.lang.Thread
{
    private android.content.Context mContext;

    private void <init>(android.content.Context)
    {
        com.android.server.ConnectivityService$ConnectivityThread $r0;
        android.content.Context $r1;

        $r0 := @this: com.android.server.ConnectivityService$ConnectivityThread;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>("ConnectivityThread");

        $r0.<com.android.server.ConnectivityService$ConnectivityThread: android.content.Context mContext> = $r1;

        return;
    }

    public static com.android.server.ConnectivityService getServiceInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.InterruptedException $r1;
        com.android.server.ConnectivityService$ConnectivityThread $r2;
        com.android.server.ConnectivityService $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = new com.android.server.ConnectivityService$ConnectivityThread;

        specialinvoke $r2.<com.android.server.ConnectivityService$ConnectivityThread: void <init>(android.content.Context)>($r0);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        entermonitor $r2;

     label01:
        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService access$000()>();

     label02:
        if $r3 != null goto label09;

     label03:
        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r1 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityService", "Unexpected InterruptedException while waiting for ConnectivityService thread");

        goto label01;

     label07:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label08:
        throw $r4;

     label09:
        exitmonitor $r2;

     label10:
        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService access$000()>();

        return $r3;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    public void run()
    {
        com.android.server.ConnectivityService$ConnectivityThread $r0;
        android.content.Context $r1;
        com.android.server.ConnectivityService $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.ConnectivityService$ConnectivityThread;

        staticinvoke <android.os.Looper: void prepare()>();

        entermonitor $r0;

     label1:
        $r2 = new com.android.server.ConnectivityService;

        $r1 = $r0.<com.android.server.ConnectivityService$ConnectivityThread: android.content.Context mContext>;

        specialinvoke $r2.<com.android.server.ConnectivityService: void <init>(android.content.Context,com.android.server.ConnectivityService$1)>($r1, null);

        staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService access$002(com.android.server.ConnectivityService)>($r2);

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label2:
        staticinvoke <android.os.Looper: void loop()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
