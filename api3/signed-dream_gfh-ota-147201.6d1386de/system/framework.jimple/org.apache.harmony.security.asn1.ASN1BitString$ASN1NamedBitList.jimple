public class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList extends org.apache.harmony.security.asn1.ASN1BitString
{
    private static final int INDEFINITE_SIZE;
    private static final byte[] SET_MASK;
    private static final org.apache.harmony.security.asn1.BitString emptyString;
    private final int maxBits;
    private final int minBits;

    static void <clinit>()
    {
        byte[] $r0;
        org.apache.harmony.security.asn1.BitString $r1;

        <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int INDEFINITE_SIZE> = -1;

        $r0 = newarray (byte)[8];

        $r0[0] = -128;

        $r0[1] = 64;

        $r0[2] = 32;

        $r0[3] = 16;

        $r0[4] = 8;

        $r0[5] = 4;

        $r0[6] = 2;

        $r0[7] = 1;

        <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: byte[] SET_MASK> = $r0;

        $r1 = new org.apache.harmony.security.asn1.BitString;

        $r0 = newarray (byte)[0];

        specialinvoke $r1.<org.apache.harmony.security.asn1.BitString: void <init>(byte[],int)>($r0, 0);

        <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: org.apache.harmony.security.asn1.BitString emptyString> = $r1;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList $r0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1BitString: void <init>()>();

        $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int minBits> = -1;

        $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int maxBits> = -1;

        return;
    }

    public void <init>(int)
    {
        org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList;

        $i0 := @parameter0: int;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1BitString: void <init>()>();

        $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int minBits> = $i0;

        $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int maxBits> = -1;

        return;
    }

    public void <init>(int, int)
    {
        org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1BitString: void <init>()>();

        $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int minBits> = $i0;

        $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int maxBits> = $i1;

        return;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList $r0;
        org.apache.harmony.security.asn1.BerInputStream $r1;
        int $i0, $i1, $i3, $i5;
        byte $b2, $b4, $b6;
        java.lang.String $r2;
        byte[] $r3;
        boolean[] $r4;
        org.apache.harmony.security.asn1.ASN1Exception $r5;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList;

        $r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r3 = $r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b2 = $r3[$i0];

        $i0 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i0 - 1;

        $i0 = $i0 * 8;

        $i0 = $i0 - $b2;

        $i1 = $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int maxBits>;

        if $i1 != -1 goto label04;

        $i1 = $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int minBits>;

        if $i1 != -1 goto label02;

        $r4 = newarray (boolean)[$i0];

     label01:
        if $i0 != 0 goto label06;

        return $r4;

     label02:
        $i1 = $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int minBits>;

        if $i0 <= $i1 goto label03;

        $r4 = newarray (boolean)[$i0];

        goto label01;

     label03:
        $i1 = $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int minBits>;

        $r4 = newarray (boolean)[$i1];

        goto label01;

     label04:
        $i1 = $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int maxBits>;

        if $i0 <= $i1 goto label05;

        $r5 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.97");

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r5;

     label05:
        $i1 = $r0.<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: int maxBits>;

        $r4 = newarray (boolean)[$i1];

        goto label01;

     label06:
        $i3 = 1;

        $i0 = 0;

        $r3 = $r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 1;

        $b4 = $r3[$i1];

        $i1 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i1 = $i1 - 1;

     label07:
        if $i3 >= $i1 goto label12;

        $i5 = 0;

     label08:
        if $i5 >= 8 goto label11;

        $r3 = <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: byte[] SET_MASK>;

        $b6 = $r3[$i5];

        $b6 = $b6 & $b4;

        if $b6 == 0 goto label10;

        $z0 = 1;

     label09:
        $r4[$i0] = $z0;

        $i5 = $i5 + 1;

        $i0 = $i0 + 1;

        goto label08;

     label10:
        $z0 = 0;

        goto label09;

     label11:
        $i3 = $i3 + 1;

        $r3 = $r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i5 = $r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i5 = $i5 + $i3;

        $b4 = $r3[$i5];

        $i3 = $i3 + 1;

        goto label07;

     label12:
        $i1 = 0;

     label13:
        $i3 = 8 - $b2;

        if $i1 >= $i3 goto label16;

        $r3 = <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: byte[] SET_MASK>;

        $b6 = $r3[$i1];

        $b6 = $b6 & $b4;

        if $b6 == 0 goto label15;

        $z0 = 1;

     label14:
        $r4[$i0] = $z0;

        $i1 = $i1 + 1;

        $i0 = $i0 + 1;

        goto label13;

     label15:
        $z0 = 0;

        goto label14;

     label16:
        return $r4;
    }

    public void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList $r2;
        java.lang.Object $r3;
        boolean[] $r4;
        boolean $z0;
        org.apache.harmony.security.asn1.BitString $r5;
        byte $b5, $b6;

        $r2 := @this: org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList;

        $r0 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r4 = (boolean[]) $r3;

        $r4 = (boolean[]) $r4;

        $i0 = lengthof $r4;

        $i1 = $i0 - 1;

     label01:
        if $i1 <= -1 goto label02;

        $z0 = $r4[$i1];

        if $z0 != 0 goto label02;

        $i1 = $i1 + -1;

        goto label01;

     label02:
        if $i1 != -1 goto label03;

        $r5 = <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: org.apache.harmony.security.asn1.BitString emptyString>;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = $r5;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length> = 1;

        return;

     label03:
        $i0 = $i1 % 8;

        $i0 = 7 - $i0;

        $i1 = $i1 / 8;

        $i1 = $i1 + 1;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

        $i2 = lengthof $r1;

        $i2 = $i2 - 1;

        $i3 = 0;

     label04:
        if $i3 >= $i2 goto label08;

        $i4 = 0;

     label05:
        if $i4 >= 8 goto label07;

        $z0 = $r4[$i1];

        if $z0 == 0 goto label06;

        $b5 = $r1[$i3];

        $r6 = <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: byte[] SET_MASK>;

        $b6 = $r6[$i4];

        $b5 = $b5 | $b6;

        $b5 = (byte) $b5;

        $r1[$i3] = $b5;

     label06:
        $i4 = $i4 + 1;

        $i1 = $i1 + 1;

        goto label05;

     label07:
        $i3 = $i3 + 1;

        goto label04;

     label08:
        $i3 = 0;

     label09:
        $i4 = 8 - $i0;

        if $i3 >= $i4 goto label11;

        $z0 = $r4[$i1];

        if $z0 == 0 goto label10;

        $b5 = $r1[$i2];

        $r6 = <org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: byte[] SET_MASK>;

        $b6 = $r6[$i3];

        $b5 = $b5 | $b6;

        $b5 = (byte) $b5;

        $r1[$i2] = $b5;

     label10:
        $i3 = $i3 + 1;

        $i1 = $i1 + 1;

        goto label09;

     label11:
        $r5 = new org.apache.harmony.security.asn1.BitString;

        specialinvoke $r5.<org.apache.harmony.security.asn1.BitString: void <init>(byte[],int)>($r1, $i0);

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = $r5;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length> = $i0;

        return;
    }
}
