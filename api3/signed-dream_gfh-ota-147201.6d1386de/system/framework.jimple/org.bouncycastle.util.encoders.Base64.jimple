public class org.bouncycastle.util.encoders.Base64 extends java.lang.Object
{
    private static final org.bouncycastle.util.encoders.Encoder encoder;

    static void <clinit>()
    {
        org.bouncycastle.util.encoders.Base64Encoder $r0;

        $r0 = new org.bouncycastle.util.encoders.Base64Encoder;

        specialinvoke $r0.<org.bouncycastle.util.encoders.Base64Encoder: void <init>()>();

        <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder> = $r0;

        return;
    }

    public void <init>()
    {
        org.bouncycastle.util.encoders.Base64 $r0;

        $r0 := @this: org.bouncycastle.util.encoders.Base64;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.OutputStream $r1;
        int $i0;
        org.bouncycastle.util.encoders.Encoder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder>;

        $i0 = interfaceinvoke $r2.<org.bouncycastle.util.encoders.Encoder: int decode(java.lang.String,java.io.OutputStream)>($r0, $r1);

        return $i0;
    }

    public static byte[] decode(java.lang.String)
    {
        java.lang.String $r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.util.encoders.Encoder $r2;
        byte[] $r3;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder>;

     label1:
        interfaceinvoke $r2.<org.bouncycastle.util.encoders.Encoder: int decode(java.lang.String,java.io.OutputStream)>($r0, $r1);

     label2:
        $r3 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception decoding base64 string: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static byte[] decode(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.util.encoders.Encoder $r2;
        int $i0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder>;

        $i0 = lengthof $r0;

     label1:
        interfaceinvoke $r2.<org.bouncycastle.util.encoders.Encoder: int decode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, $r1);

     label2:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception decoding base64 string: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static int encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r0;
        int $i0, $i1;
        java.io.OutputStream $r1;
        org.bouncycastle.util.encoders.Encoder $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.io.OutputStream;

        $r2 = <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder>;

        $i0 = interfaceinvoke $r2.<org.bouncycastle.util.encoders.Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r0, $i0, $i1, $r1);

        return $i0;
    }

    public static int encode(byte[], java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r0;
        java.io.OutputStream $r1;
        int $i0;
        org.bouncycastle.util.encoders.Encoder $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder>;

        $i0 = lengthof $r0;

        $i0 = interfaceinvoke $r2.<org.bouncycastle.util.encoders.Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, $r1);

        return $i0;
    }

    public static byte[] encode(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.util.encoders.Encoder $r2;
        int $i0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = <org.bouncycastle.util.encoders.Base64: org.bouncycastle.util.encoders.Encoder encoder>;

        $i0 = lengthof $r0;

     label1:
        interfaceinvoke $r2.<org.bouncycastle.util.encoders.Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, $r1);

     label2:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception encoding base64 string: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
