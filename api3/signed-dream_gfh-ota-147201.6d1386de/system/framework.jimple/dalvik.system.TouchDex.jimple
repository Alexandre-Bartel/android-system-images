public class dalvik.system.TouchDex extends java.lang.Object
{

    public void <init>()
    {
        dalvik.system.TouchDex $r0;

        $r0 := @this: dalvik.system.TouchDex;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String expandDirectories(java.lang.String)
    {
        dalvik.system.TouchDex$1 $r0;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r2, $r8;
        char $c2;
        java.lang.String[] $r3, $r5;
        java.io.File $r4;
        boolean $z0;
        java.io.PrintStream $r6;

        $r2 := @parameter0: java.lang.String;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r0 = new dalvik.system.TouchDex$1;

        specialinvoke $r0.<dalvik.system.TouchDex$1: void <init>()>();

        $i0 = lengthof $r3;

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label7;

        $r2 = $r3[$i3];

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label6;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r0);

        if $r5 != null goto label4;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O error with directory: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label2;

     label4:
        $i1 = lengthof $r5;

        $i4 = 0;

     label5:
        if $i4 >= $i1 goto label2;

        $r8 = $r5[$i4];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $c2 = <java.io.File: char separatorChar>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i4 = $i4 + 1;

        goto label5;

     label6:
        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label2;

     label7:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.io.BufferedReader $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.io.InputStreamReader $r4;
        java.io.InputStream $r5;
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        java.io.PrintStream $r8;

        $r0 := @parameter0: java.lang.String[];

        $r2 = "-";

        $r3 = $r0[0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r1 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r4, 256);

     label1:
        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 == null goto label5;

        staticinvoke <dalvik.system.TouchDex: void prepFiles(java.lang.String)>($r2);

     label2:
        goto label1;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error processing stdin");

        throw $r7;

     label4:
        $r2 = $r0[0];

        staticinvoke <dalvik.system.TouchDex: void prepFiles(java.lang.String)>($r2);

     label5:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(" Prep complete");

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void prepFiles(java.lang.String)
    {
        java.lang.String $r0, $r4;
        dalvik.system.TouchDexLoader $r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.lang.RuntimeException $r5;
        java.lang.ClassNotFoundException $r6;

        $r0 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Prepping: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r1 = new dalvik.system.TouchDexLoader;

        $r0 = staticinvoke <dalvik.system.TouchDex: java.lang.String expandDirectories(java.lang.String)>($r0);

        specialinvoke $r1.<dalvik.system.TouchDexLoader: void <init>(java.lang.String,java.lang.ClassLoader)>($r0, null);

     label1:
        virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.google.NonexistentClassNeverFound");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("nonexistent class loaded?!");

     label2:
        throw $r5;

     label3:
        $r6 := @caughtexception;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static int start(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.boot.class.path");

        $i0 = staticinvoke <dalvik.system.TouchDex: int trampoline(java.lang.String,java.lang.String)>($r0, $r1);

        return $i0;
    }

    private static native int trampoline(java.lang.String, java.lang.String);
}
