class org.apache.harmony.nio.internal.MappedByteBufferFactory extends java.lang.Object
{
    static final java.lang.reflect.Constructor constructor;

    static void <clinit>()
    {
        java.lang.Object $r0;
        org.apache.harmony.nio.internal.MappedByteBufferFactory$1 $r1;
        java.lang.reflect.Constructor $r2;

        $r1 = new org.apache.harmony.nio.internal.MappedByteBufferFactory$1;

        specialinvoke $r1.<org.apache.harmony.nio.internal.MappedByteBufferFactory$1: void <init>()>();

        $r0 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);

        $r2 = (java.lang.reflect.Constructor) $r0;

        <org.apache.harmony.nio.internal.MappedByteBufferFactory: java.lang.reflect.Constructor constructor> = $r2;

        return;
    }

    void <init>()
    {
        org.apache.harmony.nio.internal.MappedByteBufferFactory $r0;

        $r0 := @this: org.apache.harmony.nio.internal.MappedByteBufferFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.nio.MappedByteBuffer getBuffer(org.apache.harmony.luni.platform.PlatformAddress, int, long, int) throws java.lang.Exception
    {
        int $i0, $i2, $i3;
        long $l1;
        java.lang.reflect.Constructor $r0;
        java.lang.Object $r1;
        org.apache.harmony.luni.platform.PlatformAddress $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.nio.MappedByteBuffer $r5;

        $r2 := @parameter0: org.apache.harmony.luni.platform.PlatformAddress;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $i2 := @parameter3: int;

        $r0 = <org.apache.harmony.nio.internal.MappedByteBufferFactory: java.lang.reflect.Constructor constructor>;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = $r2;

        $r4 = new java.lang.Integer;

        $i3 = (int) $l1;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i3);

        $r3[1] = $r4;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i2);

        $r3[2] = $r4;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i0);

        $r3[3] = $r4;

        $r1 = virtualinvoke $r0.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        $r5 = (java.nio.MappedByteBuffer) $r1;

        return $r5;
    }
}
