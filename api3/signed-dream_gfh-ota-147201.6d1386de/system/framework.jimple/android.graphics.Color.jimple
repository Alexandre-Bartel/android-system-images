public class android.graphics.Color extends java.lang.Object
{
    public static final int BLACK;
    public static final int BLUE;
    public static final int CYAN;
    public static final int DKGRAY;
    public static final int GRAY;
    public static final int GREEN;
    public static final int LTGRAY;
    public static final int MAGENTA;
    public static final int RED;
    public static final int TRANSPARENT;
    public static final int WHITE;
    public static final int YELLOW;
    private static final java.util.HashMap sColorNameMap;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.Integer $r1;

        <android.graphics.Color: int YELLOW> = -256;

        <android.graphics.Color: int WHITE> = -1;

        <android.graphics.Color: int TRANSPARENT> = 0;

        <android.graphics.Color: int RED> = -65536;

        <android.graphics.Color: int MAGENTA> = -65281;

        <android.graphics.Color: int LTGRAY> = -3355444;

        <android.graphics.Color: int GREEN> = -16711936;

        <android.graphics.Color: int GRAY> = -7829368;

        <android.graphics.Color: int DKGRAY> = -12303292;

        <android.graphics.Color: int CYAN> = -16711681;

        <android.graphics.Color: int BLUE> = -16776961;

        <android.graphics.Color: int BLACK> = -16777216;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.graphics.Color: java.util.HashMap sColorNameMap> = $r0;

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16777216);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("black", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-12303292);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgray", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7829368);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("gray", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-3355444);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgray", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("white", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65536);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("red", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711936);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("green", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16776961);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("blue", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-256);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("yellow", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711681);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("cyan", $r1);

        $r0 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65281);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("magenta", $r1);

        return;
    }

    public void <init>()
    {
        android.graphics.Color $r0;

        $r0 := @this: android.graphics.Color;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int HSVToColor(int, float[])
    {
        int $i0, $i1;
        float[] $r0;
        java.lang.RuntimeException $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: float[];

        $i1 = lengthof $r0;

        if $i1 >= 3 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("3 components required for hsv");

        throw $r1;

     label1:
        $i0 = staticinvoke <android.graphics.Color: int nativeHSVToColor(int,float[])>($i0, $r0);

        return $i0;
    }

    public static int HSVToColor(float[])
    {
        float[] $r0;
        int $i0;

        $r0 := @parameter0: float[];

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(255, $r0);

        return $i0;
    }

    public static void RGBToHSV(int, int, int, float[])
    {
        int $i0, $i1, $i2, $i3;
        float[] $r0;
        java.lang.RuntimeException $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 := @parameter3: float[];

        $i3 = lengthof $r0;

        if $i3 >= 3 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("3 components required for hsv");

        throw $r1;

     label1:
        staticinvoke <android.graphics.Color: void nativeRGBToHSV(int,int,int,float[])>($i0, $i1, $i2, $r0);

        return;
    }

    public static int alpha(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 >>> 24;

        return $i0;
    }

    public static int argb(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i0 = $i0 << 24;

        $i1 = $i1 << 16;

        $i0 = $i0 | $i1;

        $i1 = $i2 << 8;

        $i0 = $i0 | $i1;

        $i0 = $i0 | $i3;

        return $i0;
    }

    public static int blue(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 & 255;

        return $i0;
    }

    public static void colorToHSV(int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: float[];

        $i1 = $i0 >> 16;

        $i1 = $i1 & 255;

        $i2 = $i0 >> 8;

        $i2 = $i2 & 255;

        $i0 = $i0 & 255;

        staticinvoke <android.graphics.Color: void RGBToHSV(int,int,int,float[])>($i1, $i2, $i0, $r0);

        return;
    }

    public static int green(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 >> 8;

        $i0 = $i0 & 255;

        return $i0;
    }

    private static native int nativeHSVToColor(int, float[]);

    private static native void nativeRGBToHSV(int, int, int, float[]);

    public static int parseColor(java.lang.String)
    {
        java.lang.String $r0, $r1;
        char $c0;
        long $l1, $l2;
        int $i3;
        java.lang.IllegalArgumentException $r2;
        java.util.HashMap $r3;
        java.util.Locale $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;

        $r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c0 != 35 goto label3;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r1, 16);

        $l2 = $l1;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i3 != 7 goto label2;

        $l2 = $l1 | -16777216L;

     label1:
        $i3 = (int) $l2;

        return $i3;

     label2:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i3 == 9 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color");

        throw $r2;

     label3:
        $r3 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r6 = (java.lang.Integer) $r5;

        if $r6 == null goto label4;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        return $i3;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color");

        throw $r2;
    }

    public static int red(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 >> 16;

        $i0 = $i0 & 255;

        return $i0;
    }

    public static int rgb(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = $i0 << 16;

        $i0 = -16777216 | $i0;

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i0 = $i0 | $i2;

        return $i0;
    }
}
