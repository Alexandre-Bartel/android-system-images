public class android.graphics.NinePatch extends java.lang.Object
{
    private final android.graphics.Bitmap mBitmap;
    private final byte[] mChunk;
    private android.graphics.Paint mPaint;
    private final android.graphics.Rect mRect;
    private java.lang.String mSrcName;

    public void <init>(android.graphics.Bitmap, byte[], java.lang.String)
    {
        android.graphics.NinePatch $r0;
        android.graphics.Bitmap $r1;
        byte[] $r2;
        java.lang.String $r3;
        int $i0;
        android.graphics.Rect $r4;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        $r0.<android.graphics.NinePatch: android.graphics.Rect mRect> = $r4;

        $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap> = $r1;

        $r0.<android.graphics.NinePatch: byte[] mChunk> = $r2;

        $r0.<android.graphics.NinePatch: java.lang.String mSrcName> = $r3;

        $r1 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        staticinvoke <android.graphics.NinePatch: void validateNinePatchChunk(int,byte[])>($i0, $r2);

        return;
    }

    public void <init>(android.graphics.NinePatch)
    {
        android.graphics.NinePatch $r0, $r1;
        int $i0;
        android.graphics.Rect $r2;
        android.graphics.Bitmap $r3;
        byte[] $r4;
        java.lang.String $r5;
        android.graphics.Paint $r6, $r7;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.NinePatch;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.graphics.NinePatch: android.graphics.Rect mRect> = $r2;

        $r3 = $r1.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap> = $r3;

        $r4 = $r1.<android.graphics.NinePatch: byte[] mChunk>;

        $r0.<android.graphics.NinePatch: byte[] mChunk> = $r4;

        $r5 = $r1.<android.graphics.NinePatch: java.lang.String mSrcName>;

        $r0.<android.graphics.NinePatch: java.lang.String mSrcName> = $r5;

        $r6 = new android.graphics.Paint;

        $r7 = $r1.<android.graphics.NinePatch: android.graphics.Paint mPaint>;

        specialinvoke $r6.<android.graphics.Paint: void <init>(android.graphics.Paint)>($r7);

        $r0.<android.graphics.NinePatch: android.graphics.Paint mPaint> = $r6;

        $r3 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int ni()>();

        $r4 = $r0.<android.graphics.NinePatch: byte[] mChunk>;

        staticinvoke <android.graphics.NinePatch: void validateNinePatchChunk(int,byte[])>($i0, $r4);

        return;
    }

    public static native boolean isNinePatchChunk(byte[]);

    private static native void nativeDraw(int, android.graphics.Rect, int, byte[], int);

    private static native void nativeDraw(int, android.graphics.RectF, int, byte[], int);

    private static native int nativeGetTransparentRegion(int, byte[], android.graphics.Rect);

    private static native void validateNinePatchChunk(int, byte[]);

    public void draw(android.graphics.Canvas, android.graphics.Rect)
    {
        android.graphics.NinePatch $r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2;
        byte[] $r3;
        android.graphics.Bitmap $r4;
        android.graphics.Paint $r5;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Rect;

        $i0 = $r1.<android.graphics.Canvas: int mNativeCanvas>;

        $r4 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i1 = virtualinvoke $r4.<android.graphics.Bitmap: int ni()>();

        $r3 = $r0.<android.graphics.NinePatch: byte[] mChunk>;

        $r5 = $r0.<android.graphics.NinePatch: android.graphics.Paint mPaint>;

        if $r5 == null goto label2;

        $r5 = $r0.<android.graphics.NinePatch: android.graphics.Paint mPaint>;

        $i2 = $r5.<android.graphics.Paint: int mNativePaint>;

     label1:
        staticinvoke <android.graphics.NinePatch: void nativeDraw(int,android.graphics.Rect,int,byte[],int)>($i0, $r2, $i1, $r3, $i2);

        return;

     label2:
        $i2 = 0;

        goto label1;
    }

    public void draw(android.graphics.Canvas, android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.NinePatch $r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2;
        android.graphics.Paint $r3;
        int $i0, $i1, $i2;
        byte[] $r4;
        android.graphics.Bitmap $r5;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.graphics.Paint;

        $i0 = $r1.<android.graphics.Canvas: int mNativeCanvas>;

        $r5 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int ni()>();

        $r4 = $r0.<android.graphics.NinePatch: byte[] mChunk>;

        if $r3 == null goto label2;

        $i2 = $r3.<android.graphics.Paint: int mNativePaint>;

     label1:
        staticinvoke <android.graphics.NinePatch: void nativeDraw(int,android.graphics.Rect,int,byte[],int)>($i0, $r2, $i1, $r4, $i2);

        return;

     label2:
        $i2 = 0;

        goto label1;
    }

    public void draw(android.graphics.Canvas, android.graphics.RectF)
    {
        android.graphics.NinePatch $r0;
        android.graphics.Canvas $r1;
        android.graphics.RectF $r2;
        int $i0, $i1, $i2;
        byte[] $r3;
        android.graphics.Bitmap $r4;
        android.graphics.Paint $r5;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.RectF;

        $i0 = $r1.<android.graphics.Canvas: int mNativeCanvas>;

        $r4 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i1 = virtualinvoke $r4.<android.graphics.Bitmap: int ni()>();

        $r3 = $r0.<android.graphics.NinePatch: byte[] mChunk>;

        $r5 = $r0.<android.graphics.NinePatch: android.graphics.Paint mPaint>;

        if $r5 == null goto label2;

        $r5 = $r0.<android.graphics.NinePatch: android.graphics.Paint mPaint>;

        $i2 = $r5.<android.graphics.Paint: int mNativePaint>;

     label1:
        staticinvoke <android.graphics.NinePatch: void nativeDraw(int,android.graphics.RectF,int,byte[],int)>($i0, $r2, $i1, $r3, $i2);

        return;

     label2:
        $i2 = 0;

        goto label1;
    }

    public int getHeight()
    {
        android.graphics.NinePatch $r0;
        int $i0;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.graphics.NinePatch;

        $r1 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        return $i0;
    }

    public final android.graphics.Region getTransparentRegion(android.graphics.Rect)
    {
        android.graphics.NinePatch $r0;
        android.graphics.Rect $r1;
        byte[] $r2;
        android.graphics.Bitmap $r3;
        int $i0;
        android.graphics.Region $r4;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.Rect;

        $r3 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int ni()>();

        $r2 = $r0.<android.graphics.NinePatch: byte[] mChunk>;

        $i0 = staticinvoke <android.graphics.NinePatch: int nativeGetTransparentRegion(int,byte[],android.graphics.Rect)>($i0, $r2, $r1);

        if $i0 == 0 goto label1;

        $r4 = new android.graphics.Region;

        specialinvoke $r4.<android.graphics.Region: void <init>(int)>($i0);

        return $r4;

     label1:
        return null;
    }

    public int getWidth()
    {
        android.graphics.NinePatch $r0;
        int $i0;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.graphics.NinePatch;

        $r1 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        return $i0;
    }

    public final boolean hasAlpha()
    {
        android.graphics.NinePatch $r0;
        boolean $z0;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.graphics.NinePatch;

        $r1 = $r0.<android.graphics.NinePatch: android.graphics.Bitmap mBitmap>;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean hasAlpha()>();

        return $z0;
    }

    public void setPaint(android.graphics.Paint)
    {
        android.graphics.NinePatch $r0;
        android.graphics.Paint $r1;

        $r0 := @this: android.graphics.NinePatch;

        $r1 := @parameter0: android.graphics.Paint;

        $r0.<android.graphics.NinePatch: android.graphics.Paint mPaint> = $r1;

        return;
    }
}
