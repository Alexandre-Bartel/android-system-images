public class org.apache.http.impl.io.SocketOutputBuffer extends org.apache.http.impl.io.AbstractSessionOutputBuffer
{

    public void <init>(java.net.Socket, int, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.io.SocketOutputBuffer $r0;
        java.net.Socket $r1;
        org.apache.http.params.HttpParams $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        java.io.OutputStream $r4;

        $r0 := @this: org.apache.http.impl.io.SocketOutputBuffer;

        $r1 := @parameter0: java.net.Socket;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.http.params.HttpParams;

        specialinvoke $r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket may not be null");

        throw $r3;

     label1:
        if $i0 >= 0 goto label2;

        $i1 = virtualinvoke $r1.<java.net.Socket: int getReceiveBufferSize()>();

        $i0 = $i1;

        if $i1 <= 8096 goto label2;

        $i0 = 8096;

     label2:
        if $i0 >= 1024 goto label3;

        $i0 = 1024;

     label3:
        $i1 = $i0 * 3;

        virtualinvoke $r1.<java.net.Socket: void setSendBufferSize(int)>($i1);

        $r4 = virtualinvoke $r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: void init(java.io.OutputStream,int,org.apache.http.params.HttpParams)>($r4, $i0, $r2);

        return;
    }
}
