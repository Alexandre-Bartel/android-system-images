class com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils extends com.android.internal.widget.LockPatternUtils
{
    boolean isLockPatternEnabled;
    public boolean isPermanentlyLocked;

    public void <init>()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils $r0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils;

        specialinvoke $r0.<com.android.internal.widget.LockPatternUtils: void <init>(android.content.ContentResolver)>(null);

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: boolean isLockPatternEnabled> = 1;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: boolean isPermanentlyLocked> = 0;

        return;
    }

    public boolean isLockPatternEnabled()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils $r0;
        boolean z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils;

        z0 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: boolean isLockPatternEnabled>;

        return z0;
    }

    public boolean isPermanentlyLocked()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils $r0;
        boolean z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils;

        z0 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: boolean isPermanentlyLocked>;

        return z0;
    }

    public void setLockPatternEnabled(boolean)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils;

        $z0 := @parameter0: boolean;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: boolean isLockPatternEnabled> = $z0;

        return;
    }

    public void setPermanentlyLocked(boolean)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils;

        $z0 := @parameter0: boolean;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: boolean isPermanentlyLocked> = $z0;

        return;
    }
}
