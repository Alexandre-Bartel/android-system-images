public abstract class android.graphics.drawable.DrawableContainer$DrawableContainerState extends android.graphics.drawable.Drawable$ConstantState
{
    boolean mCanConstantState;
    int mChangingConfigurations;
    boolean mCheckedConstantState;
    int mChildrenChangingConfigurations;
    boolean mComputedConstantSize;
    int mConstantHeight;
    int mConstantMinimumHeight;
    int mConstantMinimumWidth;
    android.graphics.Rect mConstantPadding;
    boolean mConstantSize;
    int mConstantWidth;
    android.graphics.drawable.Drawable[] mDrawables;
    boolean mHaveOpacity;
    boolean mHaveStateful;
    int mNumChildren;
    int mOpacity;
    final android.graphics.drawable.DrawableContainer mOwner;
    boolean mStateful;
    boolean mVariablePadding;

    void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState, android.graphics.drawable.DrawableContainer)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0, $r1;
        android.graphics.drawable.DrawableContainer $r2;
        int $i0, $i1;
        android.graphics.drawable.Drawable[] $r3, $r4;
        android.graphics.drawable.Drawable $r5;
        android.graphics.drawable.Drawable$ConstantState $r6;
        boolean $z0;
        android.graphics.Rect $r7, $r8;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r2 := @parameter1: android.graphics.drawable.DrawableContainer;

        specialinvoke $r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = null;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveOpacity> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveStateful> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner> = $r2;

        if $r1 == null goto label4;

        $i0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i0;

        $i0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i0;

        $r3 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i0 = lengthof $r3;

        $r4 = newarray (android.graphics.drawable.Drawable)[$i0];

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r4;

        $i0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i0;

        $i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r5 = $r3[$i1];

        $r6 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r5 = virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        $r4[$i1] = $r5;

        $r4 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r5 = $r4[$i1];

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = $z0;

        $r7 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        if $r7 == null goto label3;

        $r7 = new android.graphics.Rect;

        $r8 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        specialinvoke $r7.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r8);

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = $r7;

     label3:
        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = $z0;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = $z0;

        $i0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = $i0;

        $i0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = $i0;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveOpacity>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveOpacity> = $z0;

        $i0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = $i0;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveStateful>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveStateful> = $z0;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = $z0;

        return;

     label4:
        $r3 = newarray (android.graphics.drawable.Drawable)[10];

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r3;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 0;

        return;
    }

    private void computeConstantSize()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable[] $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = 1;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = 0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r1 = $r2[$i1];

        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        if $i2 <= $i3 goto label2;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = $i2;

     label2:
        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i3 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        if $i2 <= $i3 goto label3;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = $i2;

     label3:
        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        $i3 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        if $i2 <= $i3 goto label4;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = $i2;

     label4:
        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        $i3 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        if $i2 <= $i3 goto label5;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = $i2;

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return;
    }

    public final int addChild(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.DrawableContainer $r3;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        $i1 = $i0 + 10;

        virtualinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>($i0, $i1);

     label1:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1);

        $r3 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3);

        $r2 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r2[$i0] = $r1;

        $i1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $i1 = $i1 + 1;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i1;

        $i2 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i1 = $i2 | $i1;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i1;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveOpacity> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveStateful> = 0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = null;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = 0;

        return $i0;
    }

    public boolean canConstantState()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable$ConstantState $r1;
        boolean $z0;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState>;

        if $z0 != 0 goto label4;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

        $i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r3 = $r2[$i1];

        $r1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r1 != null goto label6;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 0;

     label3:
        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

     label4:
        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState>;

     label5:
        exitmonitor $r0;

        return $z0;

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label5 with label7;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        int i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        return i0;
    }

    public final int getChildCount()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        int i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        return i0;
    }

    public final android.graphics.drawable.Drawable[] getChildren()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        android.graphics.drawable.Drawable[] r1;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        return r1;
    }

    public final int getConstantHeight()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;
        int i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        return i0;
    }

    public final int getConstantMinimumHeight()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;
        int i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        return i0;
    }

    public final int getConstantMinimumWidth()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;
        int i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        return i0;
    }

    public final android.graphics.Rect getConstantPadding()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        android.graphics.Rect $r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable[] $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        return $r1;

     label2:
        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $i0 = virtualinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label8;

        $r3 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r4 = $r3[$i1];

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label7;

        $i2 = $r2.<android.graphics.Rect: int left>;

        $i3 = $r1.<android.graphics.Rect: int left>;

        if $i2 <= $i3 goto label4;

        $i2 = $r2.<android.graphics.Rect: int left>;

        $r1.<android.graphics.Rect: int left> = $i2;

     label4:
        $i2 = $r2.<android.graphics.Rect: int top>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        if $i2 <= $i3 goto label5;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $r1.<android.graphics.Rect: int top> = $i2;

     label5:
        $i2 = $r2.<android.graphics.Rect: int right>;

        $i3 = $r1.<android.graphics.Rect: int right>;

        if $i2 <= $i3 goto label6;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $r1.<android.graphics.Rect: int right> = $i2;

     label6:
        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i3 = $r1.<android.graphics.Rect: int bottom>;

        if $i2 <= $i3 goto label7;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $r1.<android.graphics.Rect: int bottom> = $i2;

     label7:
        $i1 = $i1 + 1;

        goto label3;

     label8:
        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = $r1;

        return $r1;
    }

    public final int getConstantWidth()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;
        int i0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        return i0;
    }

    public final int getOpacity()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable[] $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveOpacity>;

        if $z0 == 0 goto label1;

        $i0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        if $i0 <= 0 goto label4;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r2 = $r1[0];

        $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

     label2:
        $i1 = 1;

     label3:
        if $i1 >= $i0 goto label5;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r2 = $r1[$i1];

        $i3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        $i2 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>($i2, $i3);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = -2;

        goto label2;

     label5:
        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = $i2;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveOpacity> = 1;

        return $i2;
    }

    public void growArray(int, int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable[] $r1, $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = newarray (android.graphics.drawable.Drawable)[$i1];

        $r2 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r1;

        return;
    }

    public final boolean isConstantSize()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean z0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        return z0;
    }

    public final boolean isStateful()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0, $z1;
        int $i0, $i1;
        android.graphics.drawable.Drawable[] $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveStateful>;

        if $z0 == 0 goto label1;

        $z0 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        return $z0;

     label1:
        $z0 = 0;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r2 = $r1[$i1];

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label4;

        $z0 = 1;

     label3:
        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = $z0;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHaveStateful> = 1;

        return $z0;

     label4:
        $i1 = $i1 + 1;

        goto label2;
    }

    public final void setConstantSize(boolean)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 := @parameter0: boolean;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = $z0;

        return;
    }

    public final void setVariablePadding(boolean)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r0;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 := @parameter0: boolean;

        $r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = $z0;

        return;
    }
}
