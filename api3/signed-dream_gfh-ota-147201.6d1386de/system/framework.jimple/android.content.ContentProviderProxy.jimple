final class android.content.ContentProviderProxy extends java.lang.Object implements android.content.IContentProvider
{
    private android.os.IBinder mRemote;

    public void <init>(android.os.IBinder)
    {
        android.content.ContentProviderProxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.content.ContentProviderProxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.content.ContentProviderProxy;

        r1 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        return r1;
    }

    public int bulkInsert(android.net.Uri, android.content.ContentValues[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        android.content.ContentValues[] $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        int $i0;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues[];

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>($r2, 0);

        $r5 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, $r3, $r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r4);

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $i0;
    }

    public android.database.IBulkCursor bulkQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.database.IContentObserver, android.database.CursorWindow) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5, $r10;
        android.database.IContentObserver $r6;
        android.database.CursorWindow $r7;
        android.os.Parcel $r8, $r9;
        int $i0, $i1;
        android.os.IBinder $r11;
        android.database.IBulkCursor $r12;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: android.database.IContentObserver;

        $r7 := @parameter6: android.database.CursorWindow;

        $r8 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r8.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r8, 0);

        $i0 = 0;

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

     label1:
        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r10 = $r2[$i1];

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>($r10);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        if $r4 == null goto label6;

        $i0 = lengthof $r4;

     label4:
        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label7;

        $r3 = $r4[$i1];

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $i0 = 0;

        goto label4;

     label7:
        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r11 = interfaceinvoke $r6.<android.database.IContentObserver: android.os.IBinder asBinder()>();

        virtualinvoke $r8.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r11);

        virtualinvoke $r7.<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>($r8, 0);

        $r11 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r11.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r8, $r9, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r9);

        $r12 = null;

        $r11 = virtualinvoke $r9.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        if $r11 == null goto label8;

        $r12 = staticinvoke <android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)>($r11);

     label8:
        virtualinvoke $r8.<android.os.Parcel: void recycle()>();

        virtualinvoke $r9.<android.os.Parcel: void recycle()>();

        return $r12;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        android.os.Parcel $r4, $r5;
        android.os.IBinder $r6;
        int $i0;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        virtualinvoke $r4.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r3);

        $r6 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r4, $r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r5);

        $i0 = virtualinvoke $r5.<android.os.Parcel: int readInt()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        return $i0;
    }

    public android.content.ISyncAdapter getSyncAdapter() throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        android.content.ISyncAdapter $r4;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        $r3 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        $r3 = virtualinvoke $r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r4 = staticinvoke <android.content.ISyncAdapter$Stub: android.content.ISyncAdapter asInterface(android.os.IBinder)>($r3);

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public java.lang.String getType(android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r2, 0);

        $r4 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, $r3, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r3);

        $r5 = virtualinvoke $r3.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $r5;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r3, 0);

        virtualinvoke $r2.<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>($r3, 0);

        $r5 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r3, $r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r4);

        $r6 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r4);

        $r1 = (android.net.Uri) $r7;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $r1;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.net.Uri $r0;
        java.lang.String $r1;
        android.content.ContentProviderProxy $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.content.res.AssetFileDescriptor $r8;

        $r2 := @this: android.content.ContentProviderProxy;

        $r0 := @parameter0: android.net.Uri;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r0.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r5 = $r2.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, $r3, $r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>($r4);

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label2;

        $r6 = <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r4);

        $r8 = (android.content.res.AssetFileDescriptor) $r7;

     label1:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $r8;

     label2:
        $r8 = null;

        goto label1;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        int $i0;
        android.os.ParcelFileDescriptor $r6;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r5 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, $r3, $r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>($r4);

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label2;

        $r6 = virtualinvoke $r4.<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $r6;

     label2:
        $r6 = null;

        goto label1;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        android.database.CursorWindow $r6;
        android.database.BulkCursorToCursorAdaptor $r7;
        android.database.IContentObserver $r8;
        android.database.IBulkCursor $r9;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 = new android.database.CursorWindow;

        specialinvoke $r6.<android.database.CursorWindow: void <init>(boolean)>(0);

        $r7 = new android.database.BulkCursorToCursorAdaptor;

        specialinvoke $r7.<android.database.BulkCursorToCursorAdaptor: void <init>()>();

        $r8 = virtualinvoke $r7.<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>();

        $r9 = virtualinvoke $r0.<android.content.ContentProviderProxy: android.database.IBulkCursor bulkQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.database.IContentObserver,android.database.CursorWindow)>($r1, $r2, $r3, $r4, $r5, $r8, $r6);

        if $r9 != null goto label1;

        return null;

     label1:
        virtualinvoke $r7.<android.database.BulkCursorToCursorAdaptor: void set(android.database.IBulkCursor)>($r9);

        return $r7;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        android.os.Parcel $r5, $r6;
        android.os.IBinder $r7;
        int $i0;

        $r0 := @this: android.content.ContentProviderProxy;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r5, 0);

        virtualinvoke $r2.<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>($r5, 0);

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        virtualinvoke $r5.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r4);

        $r7 = $r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r5, $r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r6);

        $i0 = virtualinvoke $r6.<android.os.Parcel: int readInt()>();

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r6.<android.os.Parcel: void recycle()>();

        return $i0;
    }
}
