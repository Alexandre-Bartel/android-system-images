public class org.apache.harmony.luni.lang.reflect.GenericSignatureParser extends java.lang.Object
{
    char[] buffer;
    private boolean eof;
    public org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes;
    public java.lang.reflect.Type fieldType;
    public java.lang.reflect.TypeVariable[] formalTypeParameters;
    java.lang.reflect.GenericDeclaration genericDecl;
    java.lang.String identifier;
    public org.apache.harmony.luni.lang.reflect.ListOfTypes interfaceTypes;
    public java.lang.ClassLoader loader;
    public org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes;
    int pos;
    public java.lang.reflect.Type returnType;
    public java.lang.reflect.Type superclassType;
    char symbol;

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.ClassLoader $r1;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.ClassLoader loader> = $r1;

        return;
    }

    void expect(char)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        char $c0, $c1;
        java.lang.reflect.GenericSignatureFormatError $r1;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $c0 := @parameter0: char;

        $c1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c1 != $c0 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        return;

     label1:
        $r1 = new java.lang.reflect.GenericSignatureFormatError;

        specialinvoke $r1.<java.lang.reflect.GenericSignatureFormatError: void <init>()>();

        throw $r1;
    }

    boolean isStopSymbol(char)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        char $c0;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 46: goto label2;
            case 47: goto label2;
            case 58: goto label2;
            case 59: goto label2;
            case 60: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    void parseClassSignature()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.Type $r1;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r2;
        char $c0;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseOptFormalTypeParameters()>();

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type superclassType> = $r1;

        $r2 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r2.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(16);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes interfaceTypes> = $r2;

     label1:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 <= 0 goto label2;

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes interfaceTypes>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()>();

        virtualinvoke $r2.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r1);

        goto label1;

     label2:
        return;
    }

    java.lang.reflect.Type parseClassTypeSignature()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        org.apache.harmony.luni.lang.reflect.ImplForType $r1, $r7;
        java.lang.StringBuilder $r2, $r5;
        java.lang.ClassLoader $r3;
        char $c0;
        java.lang.String $r4;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r6;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(76);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanIdentifier()>();

     label1:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 47 goto label2;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r4 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanIdentifier()>();

        goto label1;

     label2:
        $r4 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()>();

        $r1 = new org.apache.harmony.luni.lang.reflect.ImplForType;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.ClassLoader loader>;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ImplForType: void <init>(org.apache.harmony.luni.lang.reflect.ImplForType,java.lang.String,org.apache.harmony.luni.lang.reflect.ListOfTypes,java.lang.ClassLoader)>(null, $r4, $r6, $r3);

        $r7 = $r1;

     label3:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 46 goto label4;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanIdentifier()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r4 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()>();

        $r7 = new org.apache.harmony.luni.lang.reflect.ImplForType;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.ClassLoader loader>;

        specialinvoke $r7.<org.apache.harmony.luni.lang.reflect.ImplForType: void <init>(org.apache.harmony.luni.lang.reflect.ImplForType,java.lang.String,org.apache.harmony.luni.lang.reflect.ListOfTypes,java.lang.ClassLoader)>($r1, $r4, $r6, $r3);

        goto label3;

     label4:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(59);

        return $r7;
    }

    java.lang.reflect.Type parseFieldTypeSignature()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        char $c0;
        java.lang.reflect.GenericSignatureFormatError $r1;
        java.lang.reflect.Type $r2;
        org.apache.harmony.luni.lang.reflect.ImplForArray $r3;
        org.apache.harmony.luni.lang.reflect.ImplForVariable $r4;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        lookupswitch($c0)
        {
            case 76: goto label2;
            case 84: goto label4;
            case 91: goto label3;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.reflect.GenericSignatureFormatError;

        specialinvoke $r1.<java.lang.reflect.GenericSignatureFormatError: void <init>()>();

        throw $r1;

     label2:
        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()>();

        return $r2;

     label3:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r3 = new org.apache.harmony.luni.lang.reflect.ImplForArray;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()>();

        specialinvoke $r3.<org.apache.harmony.luni.lang.reflect.ImplForArray: void <init>(java.lang.reflect.Type)>($r2);

        return $r3;

     label4:
        $r4 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()>();

        return $r4;
    }

    public void parseForClass(java.lang.reflect.GenericDeclaration, java.lang.String)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Class $r3, $r5;
        java.lang.reflect.TypeVariable[] $r4;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r6;
        java.lang.Class[] $r7;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 := @parameter0: java.lang.reflect.GenericDeclaration;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void setInput(java.lang.reflect.GenericDeclaration,java.lang.String)>($r1, $r2);

        $z0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof>;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseClassSignature()>();

        return;

     label1:
        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.Class) $r1;

        $r4 = <org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r4;

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type superclassType> = $r5;

        $r6 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        specialinvoke $r6.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(java.lang.reflect.Type[])>($r7);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes interfaceTypes> = $r6;

        return;

     label2:
        $r4 = <org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r4;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type superclassType> = class "java/lang/Object";

        $r6 = <org.apache.harmony.luni.lang.reflect.ListOfTypes: org.apache.harmony.luni.lang.reflect.ListOfTypes empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes interfaceTypes> = $r6;

        return;
    }

    public void parseForConstructor(java.lang.reflect.GenericDeclaration, java.lang.String)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.reflect.Constructor $r3;
        java.lang.reflect.TypeVariable[] $r4;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r5;
        java.lang.Class[] $r6;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 := @parameter0: java.lang.reflect.GenericDeclaration;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void setInput(java.lang.reflect.GenericDeclaration,java.lang.String)>($r1, $r2);

        $z0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof>;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseMethodTypeSignature()>();

        return;

     label1:
        $z0 = $r1 instanceof java.lang.reflect.Constructor;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.Constructor) $r1;

        $r4 = <org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r4;

        $r5 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        specialinvoke $r5.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(java.lang.reflect.Type[])>($r6);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes> = $r5;

        $r5 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        specialinvoke $r5.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(java.lang.reflect.Type[])>($r6);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes> = $r5;

        return;

     label2:
        $r4 = <org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r4;

        $r5 = <org.apache.harmony.luni.lang.reflect.ListOfTypes: org.apache.harmony.luni.lang.reflect.ListOfTypes empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes> = $r5;

        $r5 = <org.apache.harmony.luni.lang.reflect.ListOfTypes: org.apache.harmony.luni.lang.reflect.ListOfTypes empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes> = $r5;

        return;
    }

    public void parseForField(java.lang.reflect.GenericDeclaration, java.lang.String)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.String $r2;
        java.lang.reflect.Type $r3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 := @parameter0: java.lang.reflect.GenericDeclaration;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void setInput(java.lang.reflect.GenericDeclaration,java.lang.String)>($r1, $r2);

        $z0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof>;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type fieldType> = $r3;

        return;

     label1:
        return;
    }

    public void parseForMethod(java.lang.reflect.GenericDeclaration, java.lang.String)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.reflect.Method $r3;
        java.lang.reflect.TypeVariable[] $r4;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r5;
        java.lang.Class[] $r6;
        java.lang.Class $r7;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 := @parameter0: java.lang.reflect.GenericDeclaration;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void setInput(java.lang.reflect.GenericDeclaration,java.lang.String)>($r1, $r2);

        $z0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof>;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseMethodTypeSignature()>();

        return;

     label1:
        $z0 = $r1 instanceof java.lang.reflect.Method;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.Method) $r1;

        $r4 = <org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r4;

        $r5 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        specialinvoke $r5.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(java.lang.reflect.Type[])>($r6);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes> = $r5;

        $r5 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        specialinvoke $r5.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(java.lang.reflect.Type[])>($r6);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes> = $r5;

        $r7 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type returnType> = $r7;

        return;

     label2:
        $r4 = <org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r4;

        $r5 = <org.apache.harmony.luni.lang.reflect.ListOfTypes: org.apache.harmony.luni.lang.reflect.ListOfTypes empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes> = $r5;

        $r5 = <org.apache.harmony.luni.lang.reflect.ListOfTypes: org.apache.harmony.luni.lang.reflect.ListOfTypes empty>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes> = $r5;

        $r7 = <java.lang.Void: java.lang.Class TYPE>;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type returnType> = $r7;

        return;
    }

    org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1;
        java.lang.String $r2;
        char $c0;
        java.lang.reflect.Type $r3;
        org.apache.harmony.luni.lang.reflect.ImplForVariable $r4;
        java.lang.reflect.GenericDeclaration $r5;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanIdentifier()>();

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r1 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(8);

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(58);

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 == 76 goto label1;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 == 91 goto label1;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 84 goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r3);

     label2:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 58 goto label3;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r3 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r3);

        goto label2;

     label3:
        $r4 = new org.apache.harmony.luni.lang.reflect.ImplForVariable;

        $r5 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.GenericDeclaration genericDecl>;

        specialinvoke $r4.<org.apache.harmony.luni.lang.reflect.ImplForVariable: void <init>(java.lang.reflect.GenericDeclaration,java.lang.String,org.apache.harmony.luni.lang.reflect.ListOfTypes)>($r5, $r2, $r1);

        return $r4;
    }

    void parseMethodTypeSignature()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1;
        char $c0;
        java.lang.reflect.Type $r2;
        org.apache.harmony.luni.lang.reflect.ImplForVariable $r3;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseOptFormalTypeParameters()>();

        $r1 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(16);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes> = $r1;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(40);

     label1:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 == 41 goto label2;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 <= 0 goto label2;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parameterTypes>;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r2);

        goto label1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(41);

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseReturnType()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type returnType> = $r2;

        $r1 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(8);

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes> = $r1;

     label3:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 94 goto label5;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 84 goto label4;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes>;

        $r3 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r3);

        goto label3;

     label4:
        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes exceptionTypes>;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r2);

        goto label3;

     label5:
        return;
    }

    void parseOptFormalTypeParameters()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        org.apache.harmony.luni.lang.reflect.ListOfVariables $r1;
        char $c0;
        org.apache.harmony.luni.lang.reflect.ImplForVariable $r2;
        java.lang.reflect.TypeVariable[] $r3;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 = new org.apache.harmony.luni.lang.reflect.ListOfVariables;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfVariables: void <init>()>();

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 60 goto label3;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfVariables: void add(java.lang.reflect.TypeVariable)>($r2);

     label1:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 == 62 goto label2;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 <= 0 goto label2;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfVariables: void add(java.lang.reflect.TypeVariable)>($r2);

        goto label1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(62);

     label3:
        $r3 = virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] getArray()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.TypeVariable[] formalTypeParameters> = $r3;

        return;
    }

    org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1;
        char $c0;
        java.lang.reflect.Type $r2;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(8);

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 60 goto label3;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeArgument()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r2);

     label1:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 == 62 goto label2;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 <= 0 goto label2;

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeArgument()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r2);

        goto label1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(62);

        return $r1;

     label3:
        return $r1;
    }

    java.lang.reflect.Type parseReturnType()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.Type $r1;
        char $c0;
        java.lang.Class r2;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 == 86 goto label1;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()>();

        return $r1;

     label1:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Void: java.lang.Class TYPE>;

        return r2;
    }

    java.lang.reflect.Type parseTypeArgument()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r1, $r2;
        char $c0;
        org.apache.harmony.luni.lang.reflect.ImplForWildcard $r3;
        java.lang.reflect.Type $r4;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(1);

        $r2 = new org.apache.harmony.luni.lang.reflect.ListOfTypes;

        specialinvoke $r2.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void <init>(int)>(1);

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 42 goto label1;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>(class "java/lang/Object");

        $r3 = new org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        specialinvoke $r3.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: void <init>(org.apache.harmony.luni.lang.reflect.ListOfTypes,org.apache.harmony.luni.lang.reflect.ListOfTypes)>($r1, $r2);

        return $r3;

     label1:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 43 goto label2;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r4 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r4);

        $r3 = new org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        specialinvoke $r3.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: void <init>(org.apache.harmony.luni.lang.reflect.ListOfTypes,org.apache.harmony.luni.lang.reflect.ListOfTypes)>($r1, $r2);

        return $r3;

     label2:
        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        if $c0 != 45 goto label3;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        $r4 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        virtualinvoke $r2.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>($r4);

        virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ListOfTypes: void add(java.lang.reflect.Type)>(class "java/lang/Object");

        $r3 = new org.apache.harmony.luni.lang.reflect.ImplForWildcard;

        specialinvoke $r3.<org.apache.harmony.luni.lang.reflect.ImplForWildcard: void <init>(org.apache.harmony.luni.lang.reflect.ListOfTypes,org.apache.harmony.luni.lang.reflect.ListOfTypes)>($r1, $r2);

        return $r3;

     label3:
        $r4 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        return $r4;
    }

    java.lang.reflect.Type parseTypeSignature()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.Type $r1;
        char $c0;
        java.lang.Class r2;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        lookupswitch($c0)
        {
            case 66: goto label2;
            case 67: goto label3;
            case 68: goto label4;
            case 70: goto label5;
            case 73: goto label6;
            case 74: goto label7;
            case 83: goto label8;
            case 90: goto label9;
            default: goto label1;
        };

     label1:
        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>();

        return $r1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Byte: java.lang.Class TYPE>;

        return r2;

     label3:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Character: java.lang.Class TYPE>;

        return r2;

     label4:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Double: java.lang.Class TYPE>;

        return r2;

     label5:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Float: java.lang.Class TYPE>;

        return r2;

     label6:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Integer: java.lang.Class TYPE>;

        return r2;

     label7:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Long: java.lang.Class TYPE>;

        return r2;

     label8:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Short: java.lang.Class TYPE>;

        return r2;

     label9:
        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        return r2;
    }

    org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.String $r2;
        org.apache.harmony.luni.lang.reflect.ImplForVariable $r3;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(84);

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanIdentifier()>();

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void expect(char)>(59);

        $r3 = new org.apache.harmony.luni.lang.reflect.ImplForVariable;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.GenericDeclaration genericDecl>;

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier>;

        specialinvoke $r3.<org.apache.harmony.luni.lang.reflect.ImplForVariable: void <init>(java.lang.reflect.GenericDeclaration,java.lang.String)>($r1, $r2);

        return $r3;
    }

    void scanIdentifier()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        char $c0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        char[] $r2;
        int $i1, $i2;
        java.lang.String $r3;
        java.lang.reflect.GenericSignatureFormatError $r4;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $z0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof>;

        if $z0 != 0 goto label7;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(32);

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        $z0 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean isStopSymbol(char)>($c0);

        if $z0 != 0 goto label6;

        $c0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label1:
        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char[] buffer>;

        $i1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $c0 = $r2[$i1];

        if $c0 < 97 goto label2;

        if $c0 <= 122 goto label4;

     label2:
        if $c0 < 65 goto label3;

        if $c0 <= 90 goto label4;

     label3:
        $z0 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean isStopSymbol(char)>($c0);

        if $z0 != 0 goto label5;

     label4:
        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char[] buffer>;

        $i1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $c0 = $r2[$i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $i1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $i1 = $i1 + 1;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos> = $i1;

        $i1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $r2 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char[] buffer>;

        $i2 = lengthof $r2;

        if $i1 != $i2 goto label1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier> = $r3;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol> = 0;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof> = 1;

        return;

     label5:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.String identifier> = $r3;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        return;

     label6:
        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol> = 0;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof> = 1;

        $r4 = new java.lang.reflect.GenericSignatureFormatError;

        specialinvoke $r4.<java.lang.reflect.GenericSignatureFormatError: void <init>()>();

        throw $r4;

     label7:
        $r4 = new java.lang.reflect.GenericSignatureFormatError;

        specialinvoke $r4.<java.lang.reflect.GenericSignatureFormatError: void <init>()>();

        throw $r4;
    }

    void scanSymbol()
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        boolean $z0;
        int $i0, $i1;
        char[] $r1;
        char $c2;
        java.lang.reflect.GenericSignatureFormatError $r2;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $z0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof>;

        if $z0 != 0 goto label2;

        $i0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char[] buffer>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char[] buffer>;

        $i0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $c2 = $r1[$i0];

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol> = $c2;

        $i0 = $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: int pos> = $i0;

        return;

     label1:
        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char symbol> = 0;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof> = 1;

        return;

     label2:
        $r2 = new java.lang.reflect.GenericSignatureFormatError;

        specialinvoke $r2.<java.lang.reflect.GenericSignatureFormatError: void <init>()>();

        throw $r2;
    }

    void setInput(java.lang.reflect.GenericDeclaration, java.lang.String)
    {
        org.apache.harmony.luni.lang.reflect.GenericSignatureParser $r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.String $r2;
        char[] $r3;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.GenericSignatureParser;

        $r1 := @parameter0: java.lang.reflect.GenericDeclaration;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label1;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.GenericDeclaration genericDecl> = $r1;

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: char[] buffer> = $r3;

        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof> = 0;

        virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void scanSymbol()>();

        return;

     label1:
        $r0.<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: boolean eof> = 1;

        return;
    }
}
