public class org.apache.http.impl.DefaultHttpRequestFactory extends java.lang.Object implements org.apache.http.HttpRequestFactory
{
    private static final java.lang.String[] RFC2616_COMMON_METHODS;
    private static final java.lang.String[] RFC2616_ENTITY_ENC_METHODS;
    private static final java.lang.String[] RFC2616_SPECIAL_METHODS;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "GET";

        <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "POST";

        $r0[1] = "PUT";

        <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_ENTITY_ENC_METHODS> = $r0;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "HEAD";

        $r0[1] = "OPTIONS";

        $r0[2] = "DELETE";

        $r0[3] = "TRACE";

        <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_SPECIAL_METHODS> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.DefaultHttpRequestFactory $r0;

        $r0 := @this: org.apache.http.impl.DefaultHttpRequestFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean isOneOf(java.lang.String[], java.lang.String)
    {
        java.lang.String[] $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $r2 = $r0[$i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public org.apache.http.HttpRequest newHttpRequest(java.lang.String, java.lang.String) throws org.apache.http.MethodNotSupportedException
    {
        org.apache.http.impl.DefaultHttpRequestFactory $r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        boolean $z0;
        java.lang.StringBuilder $r6, r9;
        org.apache.http.message.BasicHttpRequest r7;
        org.apache.http.message.BasicHttpEntityEnclosingRequest r8;
        org.apache.http.MethodNotSupportedException r10;

        $r0 := @this: org.apache.http.impl.DefaultHttpRequestFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label1;

        r7 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke r7.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return r7;

     label1:
        $r3 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_ENTITY_ENC_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label2;

        r8 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        specialinvoke r8.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return r8;

     label2:
        $r3 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_SPECIAL_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label3;

        r7 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke r7.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return r7;

     label3:
        r10 = new org.apache.http.MethodNotSupportedException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method not supported");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<org.apache.http.MethodNotSupportedException: void <init>(java.lang.String)>($r1);

        throw r10;
    }

    public org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) throws org.apache.http.MethodNotSupportedException
    {
        org.apache.http.impl.DefaultHttpRequestFactory $r0;
        org.apache.http.RequestLine $r1;
        java.lang.String $r3;
        java.lang.String[] $r4;
        boolean $z0;
        java.lang.StringBuilder $r7, r11;
        java.lang.IllegalArgumentException r8;
        org.apache.http.message.BasicHttpRequest r9;
        org.apache.http.message.BasicHttpEntityEnclosingRequest r10;
        org.apache.http.MethodNotSupportedException r12;

        $r0 := @this: org.apache.http.impl.DefaultHttpRequestFactory;

        $r1 := @parameter0: org.apache.http.RequestLine;

        if $r1 != null goto label1;

        r8 = new java.lang.IllegalArgumentException;

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request line may not be null");

        throw r8;

     label1:
        $r3 = interfaceinvoke $r1.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $r4 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r4, $r3);

        if $z0 == 0 goto label2;

        r9 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke r9.<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>($r1);

        return r9;

     label2:
        $r4 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_ENTITY_ENC_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r4, $r3);

        if $z0 == 0 goto label3;

        r10 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        specialinvoke r10.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(org.apache.http.RequestLine)>($r1);

        return r10;

     label3:
        $r4 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_SPECIAL_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r4, $r3);

        if $z0 == 0 goto label4;

        r9 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke r9.<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>($r1);

        return r9;

     label4:
        r12 = new org.apache.http.MethodNotSupportedException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method not supported");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<org.apache.http.MethodNotSupportedException: void <init>(java.lang.String)>($r3);

        throw r12;
    }
}
