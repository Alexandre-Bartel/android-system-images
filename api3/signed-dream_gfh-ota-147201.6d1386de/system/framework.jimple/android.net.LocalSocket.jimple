public class android.net.LocalSocket extends java.lang.Object
{
    private android.net.LocalSocketImpl impl;
    private volatile boolean implCreated;
    private boolean isBound;
    private boolean isConnected;
    private android.net.LocalSocketAddress localAddress;

    public void <init>()
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;

        $r0 := @this: android.net.LocalSocket;

        $r1 = new android.net.LocalSocketImpl;

        specialinvoke $r1.<android.net.LocalSocketImpl: void <init>()>();

        specialinvoke $r0.<android.net.LocalSocket: void <init>(android.net.LocalSocketImpl)>($r1);

        $r0.<android.net.LocalSocket: boolean isBound> = 0;

        $r0.<android.net.LocalSocket: boolean isConnected> = 0;

        return;
    }

    void <init>(android.net.LocalSocketImpl)
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;

        $r0 := @this: android.net.LocalSocket;

        $r1 := @parameter0: android.net.LocalSocketImpl;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl> = $r1;

        $r0.<android.net.LocalSocket: boolean isConnected> = 0;

        $r0.<android.net.LocalSocket: boolean isBound> = 0;

        return;
    }

    private void implCreateIfNeeded() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        boolean $z0;
        android.net.LocalSocketImpl $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.net.LocalSocket;

        $z0 = $r0.<android.net.LocalSocket: boolean implCreated>;

        if $z0 != 0 goto label6;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.net.LocalSocket: boolean implCreated>;

        if $z0 != 0 goto label2;

        $r0.<android.net.LocalSocket: boolean implCreated> = 1;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void create(boolean)>(1);

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void bind(android.net.LocalSocketAddress) throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketAddress $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        android.net.LocalSocketImpl $r4;

        $r0 := @this: android.net.LocalSocket;

        $r1 := @parameter0: android.net.LocalSocketAddress;

        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.net.LocalSocket: boolean isBound>;

        if $z0 == 0 goto label4;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("already bound");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label3:
        throw $r3;

     label4:
        $r0.<android.net.LocalSocket: android.net.LocalSocketAddress localAddress> = $r1;

        $r4 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketAddress localAddress>;

        virtualinvoke $r4.<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>($r1);

        $r0.<android.net.LocalSocket: boolean isBound> = 1;

        exitmonitor $r0;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public void close() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;

        $r0 := @this: android.net.LocalSocket;

        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void close()>();

        return;
    }

    public void connect(android.net.LocalSocketAddress) throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketAddress $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        android.net.LocalSocketImpl $r4;

        $r0 := @this: android.net.LocalSocket;

        $r1 := @parameter0: android.net.LocalSocketAddress;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.net.LocalSocket: boolean isConnected>;

        if $z0 == 0 goto label4;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("already connected");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label3:
        throw $r3;

     label4:
        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r4 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r4.<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)>($r1, 0);

        $r0.<android.net.LocalSocket: boolean isConnected> = 1;

        $r0.<android.net.LocalSocket: boolean isBound> = 1;

        exitmonitor $r0;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public void connect(android.net.LocalSocketAddress, int) throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketAddress $r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: android.net.LocalSocket;

        $r1 := @parameter0: android.net.LocalSocketAddress;

        $i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.io.FileDescriptor[] getAncillaryFileDescriptors() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        java.io.FileDescriptor[] $r1;
        android.net.LocalSocketImpl $r2;

        $r0 := @this: android.net.LocalSocket;

        $r2 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = virtualinvoke $r2.<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>();

        return $r1;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.net.LocalSocket $r0;
        java.io.FileDescriptor $r1;
        android.net.LocalSocketImpl $r2;

        $r0 := @this: android.net.LocalSocket;

        $r2 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = virtualinvoke $r2.<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>();

        return $r1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        java.io.InputStream $r1;
        android.net.LocalSocketImpl $r2;

        $r0 := @this: android.net.LocalSocket;

        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r2 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = virtualinvoke $r2.<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>();

        return $r1;
    }

    public android.net.LocalSocketAddress getLocalSocketAddress()
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketAddress r1;

        $r0 := @this: android.net.LocalSocket;

        r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketAddress localAddress>;

        return r1;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        java.io.OutputStream $r1;
        android.net.LocalSocketImpl $r2;

        $r0 := @this: android.net.LocalSocket;

        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r2 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = virtualinvoke $r2.<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>();

        return $r1;
    }

    public android.net.Credentials getPeerCredentials() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.Credentials $r1;
        android.net.LocalSocketImpl $r2;

        $r0 := @this: android.net.LocalSocket;

        $r2 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = virtualinvoke $r2.<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>();

        return $r1;
    }

    public int getReceiveBufferSize() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        $r0 := @this: android.net.LocalSocket;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.lang.Object getOption(int)>(4098);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public android.net.LocalSocketAddress getRemoteSocketAddress()
    {
        android.net.LocalSocket $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public int getSendBufferSize() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        $r0 := @this: android.net.LocalSocket;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.lang.Object getOption(int)>(4097);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getSoTimeout() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        $r0 := @this: android.net.LocalSocket;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.lang.Object getOption(int)>(4102);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public boolean isBound()
    {
        android.net.LocalSocket $r0;
        java.lang.Throwable $r1;
        boolean z0;

        $r0 := @this: android.net.LocalSocket;

        entermonitor $r0;

     label1:
        z0 = $r0.<android.net.LocalSocket: boolean isBound>;

     label2:
        exitmonitor $r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isClosed()
    {
        android.net.LocalSocket $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean isConnected()
    {
        android.net.LocalSocket $r0;
        java.lang.Throwable $r1;
        boolean z0;

        $r0 := @this: android.net.LocalSocket;

        entermonitor $r0;

     label1:
        z0 = $r0.<android.net.LocalSocket: boolean isConnected>;

     label2:
        exitmonitor $r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isInputShutdown()
    {
        android.net.LocalSocket $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean isOutputShutdown()
    {
        android.net.LocalSocket $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void setFileDescriptorsForSend(java.io.FileDescriptor[])
    {
        android.net.LocalSocket $r0;
        java.io.FileDescriptor[] $r1;
        android.net.LocalSocketImpl $r2;

        $r0 := @this: android.net.LocalSocket;

        $r1 := @parameter0: java.io.FileDescriptor[];

        $r2 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r2.<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>($r1);

        return;
    }

    public void setReceiveBufferSize(int) throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        int $i0;
        android.net.LocalSocketImpl $r1;
        java.lang.Integer $r2;

        $r0 := @this: android.net.LocalSocket;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>(4098, $r2);

        return;
    }

    public void setSendBufferSize(int) throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        int $i0;
        android.net.LocalSocketImpl $r1;
        java.lang.Integer $r2;

        $r0 := @this: android.net.LocalSocket;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>(4097, $r2);

        return;
    }

    public void setSoTimeout(int) throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        int $i0;
        android.net.LocalSocketImpl $r1;
        java.lang.Integer $r2;

        $r0 := @this: android.net.LocalSocket;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>(4102, $r2);

        return;
    }

    public void shutdownInput() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;

        $r0 := @this: android.net.LocalSocket;

        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void shutdownInput()>();

        return;
    }

    public void shutdownOutput() throws java.io.IOException
    {
        android.net.LocalSocket $r0;
        android.net.LocalSocketImpl $r1;

        $r0 := @this: android.net.LocalSocket;

        specialinvoke $r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void shutdownOutput()>();

        return;
    }

    public java.lang.String toString()
    {
        android.net.LocalSocket $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.net.LocalSocketImpl $r3;

        $r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" impl:");

        $r3 = $r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
