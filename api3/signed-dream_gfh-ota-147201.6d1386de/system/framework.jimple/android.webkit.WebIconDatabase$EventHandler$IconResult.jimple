class android.webkit.WebIconDatabase$EventHandler$IconResult extends java.lang.Object
{
    private final android.graphics.Bitmap mIcon;
    private final android.webkit.WebIconDatabase$IconListener mListener;
    private final java.lang.String mUrl;
    final android.webkit.WebIconDatabase$EventHandler this$1;

    void <init>(android.webkit.WebIconDatabase$EventHandler, java.lang.String, android.graphics.Bitmap, android.webkit.WebIconDatabase$IconListener)
    {
        android.webkit.WebIconDatabase$EventHandler$IconResult $r0;
        android.webkit.WebIconDatabase$EventHandler $r1;
        java.lang.String $r2;
        android.graphics.Bitmap $r3;
        android.webkit.WebIconDatabase$IconListener $r4;

        $r0 := @this: android.webkit.WebIconDatabase$EventHandler$IconResult;

        $r1 := @parameter0: android.webkit.WebIconDatabase$EventHandler;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.graphics.Bitmap;

        $r4 := @parameter3: android.webkit.WebIconDatabase$IconListener;

        $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: android.webkit.WebIconDatabase$EventHandler this$1> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: java.lang.String mUrl> = $r2;

        $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: android.graphics.Bitmap mIcon> = $r3;

        $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: android.webkit.WebIconDatabase$IconListener mListener> = $r4;

        return;
    }

    void dispatch()
    {
        android.webkit.WebIconDatabase$EventHandler$IconResult $r0;
        android.webkit.WebIconDatabase$IconListener $r1;
        java.lang.String $r2;
        android.graphics.Bitmap $r3;

        $r0 := @this: android.webkit.WebIconDatabase$EventHandler$IconResult;

        $r1 = $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: android.webkit.WebIconDatabase$IconListener mListener>;

        $r2 = $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: java.lang.String mUrl>;

        $r3 = $r0.<android.webkit.WebIconDatabase$EventHandler$IconResult: android.graphics.Bitmap mIcon>;

        interfaceinvoke $r1.<android.webkit.WebIconDatabase$IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>($r2, $r3);

        return;
    }
}
