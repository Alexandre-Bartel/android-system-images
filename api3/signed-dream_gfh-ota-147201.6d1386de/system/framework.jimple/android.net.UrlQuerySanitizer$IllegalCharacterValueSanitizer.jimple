public class android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer extends java.lang.Object implements android.net.UrlQuerySanitizer$ValueSanitizer
{
    public static final int ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL;
    public static final int ALL_BUT_NUL_LEGAL;
    public static final int ALL_BUT_WHITESPACE_LEGAL;
    public static final int ALL_ILLEGAL;
    public static final int ALL_OK;
    public static final int ALL_WHITESPACE_OK;
    public static final int AMP_AND_SPACE_LEGAL;
    public static final int AMP_LEGAL;
    public static final int AMP_OK;
    public static final int DQUOTE_OK;
    public static final int GT_OK;
    private static final java.lang.String JAVASCRIPT_PREFIX;
    public static final int LT_OK;
    private static final int MIN_SCRIPT_PREFIX_LENGTH;
    public static final int NON_7_BIT_ASCII_OK;
    public static final int NUL_OK;
    public static final int OTHER_WHITESPACE_OK;
    public static final int PCT_OK;
    public static final int SCRIPT_URL_OK;
    public static final int SPACE_LEGAL;
    public static final int SPACE_OK;
    public static final int SQUOTE_OK;
    public static final int URL_AND_SPACE_LEGAL;
    public static final int URL_LEGAL;
    private static final java.lang.String VBSCRIPT_PREFIX;
    private int mFlags;

    static void <clinit>()
    {
        java.lang.String $r0;
        int $i0, $i1;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: java.lang.String VBSCRIPT_PREFIX> = "vbscript:";

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int URL_LEGAL> = 404;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int URL_AND_SPACE_LEGAL> = 405;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int SQUOTE_OK> = 16;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int SPACE_OK> = 1;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int SPACE_LEGAL> = 1;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int SCRIPT_URL_OK> = 1024;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int PCT_OK> = 256;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int OTHER_WHITESPACE_OK> = 2;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int NUL_OK> = 512;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int NON_7_BIT_ASCII_OK> = 4;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int LT_OK> = 32;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: java.lang.String JAVASCRIPT_PREFIX> = "javascript:";

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int GT_OK> = 64;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int DQUOTE_OK> = 8;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int AMP_OK> = 128;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int AMP_LEGAL> = 128;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int AMP_AND_SPACE_LEGAL> = 129;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int ALL_WHITESPACE_OK> = 3;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int ALL_OK> = 2047;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int ALL_ILLEGAL> = 0;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int ALL_BUT_WHITESPACE_LEGAL> = 1532;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int ALL_BUT_NUL_LEGAL> = 1535;

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL> = 1439;

        $r0 = "javascript:";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = "vbscript:";

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int MIN_SCRIPT_PREFIX_LENGTH> = $i0;

        return;
    }

    public void <init>(int)
    {
        android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer $r0;
        int $i0;

        $r0 := @this: android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags> = $i0;

        return;
    }

    private boolean characterIsLegal(char)
    {
        android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer $r0;
        char $c0;
        int $i1;

        $r0 := @this: android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 0: goto label20;
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label06;
            case 12: goto label06;
            case 13: goto label06;
            case 32: goto label04;
            case 34: goto label08;
            case 37: goto label18;
            case 38: goto label16;
            case 39: goto label10;
            case 60: goto label12;
            case 62: goto label14;
            default: goto label01;
        };

     label01:
        if $c0 < 32 goto label02;

        if $c0 < 127 goto label03;

     label02:
        if $c0 < 128 goto label22;

        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 4;

        if $i1 == 0 goto label22;

     label03:
        return 1;

     label04:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 2;

        if $i1 == 0 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 8;

        if $i1 == 0 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 16;

        if $i1 == 0 goto label11;

        return 1;

     label11:
        return 0;

     label12:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 32;

        if $i1 == 0 goto label13;

        return 1;

     label13:
        return 0;

     label14:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 64;

        if $i1 == 0 goto label15;

        return 1;

     label15:
        return 0;

     label16:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 128;

        if $i1 == 0 goto label17;

        return 1;

     label17:
        return 0;

     label18:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 256;

        if $i1 == 0 goto label19;

        return 1;

     label19:
        return 0;

     label20:
        $i1 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i1 = $i1 & 512;

        if $i1 == 0 goto label21;

        return 1;

     label21:
        return 0;

     label22:
        return 0;
    }

    private boolean isWhitespace(char)
    {
        android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer $r0;
        char $c0;

        $r0 := @this: android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private java.lang.String trimWhitespace(java.lang.String)
    {
        android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        char $c3;
        boolean $z0;

        $r0 := @this: android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        $r1 := @parameter0: java.lang.String;

        $i1 = 0;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $i2 = $i0;

     label1:
        if $i1 > $i0 goto label2;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $z0 = specialinvoke $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: boolean isWhitespace(char)>($c3);

        if $z0 == 0 goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 < $i1 goto label3;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $z0 = specialinvoke $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: boolean isWhitespace(char)>($c3);

        if $z0 == 0 goto label3;

        $i2 = $i2 + -1;

        goto label2;

     label3:
        if $i1 != 0 goto label4;

        if $i2 != $i0 goto label4;

        return $r1;

     label4:
        $i0 = $i2 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        return $r1;
    }

    public java.lang.String sanitize(java.lang.String)
    {
        android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        char $c3, $c4;

        $r0 := @this: android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i0;

        $i2 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i2 = $i2 & 1024;

        if $i2 == 0 goto label3;

        $i2 = <android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int MIN_SCRIPT_PREFIX_LENGTH>;

        if $i0 < $i2 goto label3;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("javascript:");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("vbscript:");

        if $z0 == 0 goto label3;

     label2:
        return "";

     label3:
        $i0 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i0 = $i0 & 3;

        if $i0 != 0 goto label4;

        $r3 = specialinvoke $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: java.lang.String trimWhitespace(java.lang.String)>($r2);

        $r2 = $r3;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i0 = 0;

     label5:
        if $i0 >= $i1 goto label8;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $c4 = $c3;

        $z0 = specialinvoke $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: boolean characterIsLegal(char)>($c3);

        if $z0 != 0 goto label6;

        $i2 = $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: int mFlags>;

        $i2 = $i2 & 1;

        if $i2 == 0 goto label7;

        $c4 = 32;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i0 = $i0 + 1;

        goto label5;

     label7:
        $c4 = 95;

        goto label6;

     label8:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
