class android.location.ILocationManager$Stub$Proxy extends java.lang.Object implements android.location.ILocationManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public boolean addGpsStatusListener(android.location.IGpsStatusListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.location.IGpsStatusListener $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: android.location.IGpsStatusListener;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        if $r1 == null goto label5;

        $r4 = interfaceinvoke $r1.<android.location.IGpsStatusListener: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label3:
        if $i0 == 0 goto label6;

        $z0 = 1;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label5:
        $r4 = null;

        goto label2;

     label6:
        $z0 = 0;

        goto label4;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label7;
    }

    public void addProximityAlert(double, double, float, long, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        double $d0, $d1;
        float $f0;
        long $l0;
        android.app.PendingIntent $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $f0 := @parameter2: float;

        $l0 := @parameter3: long;

        $r1 := @parameter4: android.app.PendingIntent;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeDouble(double)>($d0);

        virtualinvoke $r2.<android.os.Parcel: void writeDouble(double)>($d1);

        virtualinvoke $r2.<android.os.Parcel: void writeFloat(float)>($f0);

        virtualinvoke $r2.<android.os.Parcel: void writeLong(long)>($l0);

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1;
        android.os.Parcel $r2, $r3;
        byte $b2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z3 := @parameter4: boolean;

        $z4 := @parameter5: boolean;

        $z5 := @parameter6: boolean;

        $z6 := @parameter7: boolean;

        $i0 := @parameter8: int;

        $i1 := @parameter9: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

     label02:
        if $z0 == 0 goto label24;

     label03:
        $b2 = 1;

     label04:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label05:
        if $z1 == 0 goto label25;

     label06:
        $b2 = 1;

     label07:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label08:
        if $z2 == 0 goto label26;

     label09:
        $b2 = 1;

     label10:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label11:
        if $z3 == 0 goto label27;

     label12:
        $b2 = 1;

     label13:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label14:
        if $z4 == 0 goto label28;

     label15:
        $b2 = 1;

     label16:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label17:
        if $z5 == 0 goto label29;

     label18:
        $b2 = 1;

     label19:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label20:
        if $z6 == 0 goto label30;

     label21:
        $b2 = 1;

     label22:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label23:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label24:
        $b2 = 0;

        goto label04;

     label25:
        $b2 = 0;

        goto label07;

     label26:
        $b2 = 0;

        goto label10;

     label27:
        $b2 = 0;

        goto label13;

     label28:
        $b2 = 0;

        goto label16;

     label29:
        $b2 = 0;

        goto label19;

     label30:
        $b2 = 0;

        goto label22;

     label31:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label03 to label05 with label31;
        catch java.lang.Throwable from label06 to label08 with label31;
        catch java.lang.Throwable from label09 to label11 with label31;
        catch java.lang.Throwable from label12 to label14 with label31;
        catch java.lang.Throwable from label15 to label17 with label31;
        catch java.lang.Throwable from label18 to label20 with label31;
        catch java.lang.Throwable from label21 to label23 with label31;
    }

    public android.os.IBinder asBinder()
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void clearTestProviderEnabled(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clearTestProviderLocation(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clearTestProviderStatus(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getAllProviders() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.util.ArrayList $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r2.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>($r5);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getFromLocation(double, double, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        double $d0, $d1;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.util.List $r5;
        android.os.Parcel $r6, $r7;
        android.os.IBinder $r8;
        android.os.Parcelable$Creator $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        $r2 := @parameter4: java.lang.String;

        $r3 := @parameter5: java.lang.String;

        $r4 := @parameter6: java.lang.String;

        $r5 := @parameter7: java.util.List;

        $r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r6.<android.os.Parcel: void writeDouble(double)>($d0);

        virtualinvoke $r6.<android.os.Parcel: void writeDouble(double)>($d1);

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r8 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, $r6, $r7, 0);

        virtualinvoke $r7.<android.os.Parcel: void readException()>();

        $r1 = virtualinvoke $r7.<android.os.Parcel: java.lang.String readString()>();

        $r9 = <android.location.Address: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke $r7.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r5, $r9);

     label2:
        virtualinvoke $r7.<android.os.Parcel: void recycle()>();

        virtualinvoke $r6.<android.os.Parcel: void recycle()>();

        return $r1;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r7.<android.os.Parcel: void recycle()>();

        virtualinvoke $r6.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getFromLocationName(java.lang.String, double, double, double, double, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        double $d0, $d1, $d2, $d3;
        int $i0;
        java.util.List $r6;
        android.os.Parcel $r7, $r8;
        android.os.IBinder $r9;
        android.os.Parcelable$Creator $r10;
        java.lang.Throwable $r11;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $d3 := @parameter4: double;

        $i0 := @parameter5: int;

        $r2 := @parameter6: java.lang.String;

        $r3 := @parameter7: java.lang.String;

        $r4 := @parameter8: java.lang.String;

        $r5 := @parameter9: java.lang.String;

        $r6 := @parameter10: java.util.List;

        $r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r8 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r7.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r7.<android.os.Parcel: void writeDouble(double)>($d0);

        virtualinvoke $r7.<android.os.Parcel: void writeDouble(double)>($d1);

        virtualinvoke $r7.<android.os.Parcel: void writeDouble(double)>($d2);

        virtualinvoke $r7.<android.os.Parcel: void writeDouble(double)>($d3);

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r9 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, $r7, $r8, 0);

        virtualinvoke $r8.<android.os.Parcel: void readException()>();

        $r1 = virtualinvoke $r8.<android.os.Parcel: java.lang.String readString()>();

        $r10 = <android.location.Address: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke $r8.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r6, $r10);

     label2:
        virtualinvoke $r8.<android.os.Parcel: void recycle()>();

        virtualinvoke $r7.<android.os.Parcel: void recycle()>();

        return $r1;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r8.<android.os.Parcel: void recycle()>();

        virtualinvoke $r7.<android.os.Parcel: void recycle()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.location.ILocationManager$Stub$Proxy $r0;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        return "android.location.ILocationManager";
    }

    public android.location.Location getLastKnownLocation(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.location.Location $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r5 = <android.location.Location: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r3);

        $r7 = (android.location.Location) $r6;

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r7;

     label3:
        $r7 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public android.os.Bundle getProviderInfo(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.os.Bundle $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r5 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r3);

        $r7 = (android.os.Bundle) $r6;

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r7;

     label3:
        $r7 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.util.List getProviders(boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b0;
        android.os.IBinder $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.util.ArrayList $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r2.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>($r5);

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r6;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public boolean isProviderEnabled(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label2:
        if $i0 == 0 goto label4;

        $z0 = 1;

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void removeGpsStatusListener(android.location.IGpsStatusListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.location.IGpsStatusListener $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: android.location.IGpsStatusListener;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<android.location.IGpsStatusListener: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void removeProximityAlert(android.app.PendingIntent) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.app.PendingIntent $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void removeTestProvider(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeUpdates(android.location.ILocationListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.location.ILocationListener $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: android.location.ILocationListener;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<android.location.ILocationListener: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void removeUpdatesPI(android.app.PendingIntent) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.app.PendingIntent $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void requestLocationUpdates(java.lang.String, long, float, android.location.ILocationListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        long $l0;
        float $f0;
        android.location.ILocationListener $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.location.ILocationListener;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeLong(long)>($l0);

        virtualinvoke $r3.<android.os.Parcel: void writeFloat(float)>($f0);

        if $r2 == null goto label4;

        $r5 = interfaceinvoke $r2.<android.location.ILocationListener: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        $r5 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 = null;

        goto label2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void requestLocationUpdatesPI(java.lang.String, long, float, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        long $l0;
        float $f0;
        android.app.PendingIntent $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r2 := @parameter3: android.app.PendingIntent;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeLong(long)>($l0);

        virtualinvoke $r3.<android.os.Parcel: void writeFloat(float)>($f0);

        if $r2 == null goto label4;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        $r5 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1, $r2;
        android.os.Bundle $r3;
        android.os.Parcel $r4, $r5;
        android.os.IBinder $r6;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r7;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        if $r3 == null goto label07;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r4, 0);

     label02:
        $r6 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r4, $r5, 0);

        virtualinvoke $r5.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r5.<android.os.Parcel: int readInt()>();

     label03:
        if $i0 == 0 goto label10;

     label04:
        $z0 = 1;

     label05:
        $i0 = virtualinvoke $r5.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label06;

        virtualinvoke $r3.<android.os.Bundle: void readFromParcel(android.os.Parcel)>($r5);

     label06:
        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $z0;

     label07:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label02;

     label09:
        $r7 := @caughtexception;

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        throw $r7;

     label10:
        $z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void setTestProviderEnabled(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void setTestProviderLocation(java.lang.String, android.location.Location) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        android.location.Location $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.location.Location;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        if $r2 == null goto label4;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<android.location.Location: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        $r5 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Bundle $r2;
        long $l1;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $l1 := @parameter3: long;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        if $r2 == null goto label4;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeLong(long)>($l1);

        $r5 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void updateProviders() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = $r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
