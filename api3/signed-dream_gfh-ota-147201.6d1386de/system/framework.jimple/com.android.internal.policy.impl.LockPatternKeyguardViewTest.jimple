public class com.android.internal.policy.impl.LockPatternKeyguardViewTest extends android.test.AndroidTestCase
{
    private com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback;
    private com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV;
    private com.android.internal.widget.LockPatternUtils mLockPatternUtils;
    private com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor mUpdateMonitor;

    public void <init>()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        specialinvoke $r0.<android.test.AndroidTestCase: void <init>()>();

        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r1;
        com.android.internal.widget.LockPatternUtils $r2;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$1 $r3;
        android.content.Context $r4;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils $r5;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r6;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback $r7;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        specialinvoke $r0.<android.test.AndroidTestCase: void setUp()>();

        $r1 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        $r4 = virtualinvoke $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: android.content.Context getContext()>();

        specialinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: void <init>(android.content.Context,com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)>($r4, null);

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor mUpdateMonitor> = $r1;

        $r5 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils;

        specialinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockLockPatternUtils: void <init>()>();

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.widget.LockPatternUtils mLockPatternUtils> = $r5;

        $r6 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView;

        $r4 = virtualinvoke $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: android.content.Context getContext()>();

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor mUpdateMonitor>;

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $r3 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$1;

        specialinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$1: void <init>(com.android.internal.policy.impl.LockPatternKeyguardViewTest)>($r0);

        specialinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController,com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)>($r4, $r1, $r2, $r3, null);

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV> = $r6;

        $r7 = new com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback;

        specialinvoke $r7.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback: void <init>(com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)>(null);

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback> = $r7;

        $r6 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r7 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback>;

        virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void setCallback(com.android.internal.policy.impl.KeyguardViewCallback)>($r7);

        return;
    }

    public void testMenuDoesntGoToUnlockScreenOnWakeWhenPukLocked()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r1;
        com.android.internal.telephony.SimCard$State $r2;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r6, $r7;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor mUpdateMonitor>;

        $r2 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PUK_REQUIRED>;

        $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: com.android.internal.telephony.SimCard$State simState> = $r2;

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void wakeWhenReadyTq(int)>(82);

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r5;

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r5;

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r7.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(8, $i0);

        return;
    }

    public void testMenuGoesToLockScreenWhenDeviceNotSecure()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.widget.LockPatternUtils $r1;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r2;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r4;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r5, $r6;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        virtualinvoke $r1.<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)>(0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void wakeWhenReadyTq(int)>(82);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r4;

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r4;

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(8, $i0);

        return;
    }

    public void testScreenRequestsRecreation()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r4;
        com.android.internal.policy.impl.KeyguardScreenCallback $r5;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void wakeWhenReadyTq(int)>(0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void onScreenTurnedOn()>();

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r5 = $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: com.android.internal.policy.impl.KeyguardScreenCallback mKeyguardScreenCallback>;

        interfaceinvoke $r5.<com.android.internal.policy.impl.KeyguardScreenCallback: void recreateMe()>();

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(2, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(2, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        return;
    }

    public void testStateAfterCreatedWhileScreenOff()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r4, $r5;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback $r6;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r3;

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r4.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $r6 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback>;

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback: int getPokeWakelockCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $r6 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback>;

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback: int getKeyguardDoneCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        return;
    }

    public void testWokenByMenuKeyWhenPatternSet()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.widget.LockPatternUtils $r1;
        boolean $z0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r2;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback $r3;
        int $i0;
        java.util.List $r4;
        java.lang.Object $r5;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r6, $r7;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(boolean,boolean)>(1, $z0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void wakeWhenReadyTq(int)>(82);

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback>;

        $i0 = virtualinvoke $r3.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback: int getPokeWakelockCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r5;

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r4 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r5;

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(8, $i0);

        $i0 = virtualinvoke $r7.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        return;
    }

    public void testWokenByNonMenuKey()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest $r0;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView $r1;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback $r2;
        int $i0;
        java.util.List $r3;
        java.lang.Object $r4;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen $r5, $r6;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void wakeWhenReadyTq(int)>(0);

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback mKeyguardViewCallback>;

        $i0 = virtualinvoke $r2.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardCallback: int getPokeWakelockCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedLockScreens()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r4;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        $r3 = virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: java.util.List getInjectedUnlockScreens()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen) $r4;

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getVisibility()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(8, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest: com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView mLPKV>;

        virtualinvoke $r1.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$TestableLockPatternKeyguardView: void onScreenTurnedOn()>();

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(1, $i0);

        $i0 = virtualinvoke $r5.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnPauseCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getOnResumeCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        $i0 = virtualinvoke $r6.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockKeyguardScreen: int getCleanupCount()>();

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardViewTest: void assertEquals(int,int)>(0, $i0);

        return;
    }
}
