public class android.content.res.TypedArray extends java.lang.Object
{
    int[] mData;
    int[] mIndices;
    int mLength;
    private final android.content.res.Resources mResources;
    int[] mRsrcs;
    private android.util.TypedValue mValue;
    android.content.res.XmlBlock$Parser mXml;

    void <init>(android.content.res.Resources, int[], int[], int)
    {
        android.content.res.TypedArray $r0;
        android.content.res.Resources $r1;
        int[] $r2, $r3;
        int $i0;
        android.util.TypedValue $r4;

        $r0 := @this: android.content.res.TypedArray;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: int[];

        $r3 := @parameter2: int[];

        $i0 := @parameter3: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        $r0.<android.content.res.TypedArray: android.util.TypedValue mValue> = $r4;

        $r0.<android.content.res.TypedArray: android.content.res.Resources mResources> = $r1;

        $r0.<android.content.res.TypedArray: int[] mData> = $r2;

        $r0.<android.content.res.TypedArray: int[] mIndices> = $r3;

        $r0.<android.content.res.TypedArray: int mLength> = $i0;

        return;
    }

    private boolean getValueAt(int, android.util.TypedValue)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        android.util.TypedValue $r1;
        int[] $r2;
        java.lang.CharSequence $r3;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.util.TypedValue;

        $r2 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i0 + 0;

        $i1 = $r2[$i1];

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r1.<android.util.TypedValue: int type> = $i1;

        $i2 = $i0 + 1;

        $i2 = $r2[$i2];

        $r1.<android.util.TypedValue: int data> = $i2;

        $i2 = $i0 + 2;

        $i2 = $r2[$i2];

        $r1.<android.util.TypedValue: int assetCookie> = $i2;

        $i2 = $i0 + 3;

        $i2 = $r2[$i2];

        $r1.<android.util.TypedValue: int resourceId> = $i2;

        $i2 = $i0 + 4;

        $i2 = $r2[$i2];

        $r1.<android.util.TypedValue: int changingConfigurations> = $i2;

        if $i1 != 3 goto label2;

        $r3 = specialinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>($i0);

        $r1.<android.util.TypedValue: java.lang.CharSequence string> = $r3;

     label2:
        return 1;
    }

    private java.lang.CharSequence loadStringValueAt(int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1;
        int[] $r1;
        android.content.res.XmlBlock$Parser $r2;
        java.lang.CharSequence $r3;
        android.content.res.Resources $r4;
        android.content.res.AssetManager $r5;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i0 + 2;

        $i1 = $r1[$i1];

        if $i1 >= 0 goto label2;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        $i0 = $i0 + 1;

        $i0 = $r1[$i0];

        $r3 = virtualinvoke $r2.<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>($i0);

        return $r3;

     label1:
        return null;

     label2:
        $r4 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r5 = $r4.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i0 = $i0 + 1;

        $i0 = $r1[$i0];

        $r3 = virtualinvoke $r5.<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)>($i1, $i0);

        return $r3;
    }

    public boolean getBoolean(int, boolean)
    {
        android.content.res.TypedArray $r0;
        boolean $z0, $z1;
        int[] $r1;
        int $i0, $i1;
        android.util.TypedValue $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r1[$i0];

        if $i0 != 0 goto label1;

        return $z0;

     label1:
        if $i0 < 16 goto label3;

        if $i0 > 31 goto label3;

        $i1 = $i1 + 1;

        $i1 = $r1[$i1];

        if $i1 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r2 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z1 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, $r2);

        if $z1 == 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to boolean: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        $r5 = virtualinvoke $r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean convertValueToBoolean(java.lang.CharSequence,boolean)>($r5, $z0);

        return $z0;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBoolean of bad type: 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        return $z0;
    }

    public int getColor(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        android.util.TypedValue $r2;
        boolean $z0;
        android.content.res.Resources $r3;
        android.content.res.ColorStateList $r4;
        java.lang.UnsupportedOperationException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: android.content.res.TypedArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i2 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i2 + 0;

        $i1 = $r1[$i1];

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        if $i1 < 16 goto label2;

        if $i1 > 31 goto label2;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        return $i2;

     label2:
        if $i1 != 3 goto label4;

        $r2 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i2, $r2);

        if $z0 == 0 goto label3;

        $r3 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i2 = $r2.<android.util.TypedValue: int resourceId>;

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>($r2, $i2);

        $i2 = virtualinvoke $r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i2;

     label3:
        return $i0;

     label4:
        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to color: type=0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    public android.content.res.ColorStateList getColorStateList(int)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;
        android.content.res.Resources $r2;
        android.content.res.ColorStateList $r3;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i0 = $i0 * 5;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i0, $r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i0 = $r1.<android.util.TypedValue: int resourceId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>($r1, $i0);

        return $r3;

     label1:
        return null;
    }

    public float getDimension(int, float)
    {
        android.content.res.TypedArray $r0;
        float $f0;
        int[] $r1;
        int $i0, $i1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.UnsupportedOperationException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r1[$i0];

        if $i0 != 0 goto label1;

        return $f0;

     label1:
        if $i0 != 5 goto label2;

        $i1 = $i1 + 1;

        $i1 = $r1[$i1];

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $f0 = staticinvoke <android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>($i1, $r3);

        return $f0;

     label2:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to dimension: type=0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public int getDimensionPixelOffset(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.UnsupportedOperationException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: android.content.res.TypedArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i2 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i2 + 0;

        $i1 = $r1[$i1];

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        if $i1 != 5 goto label2;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i2 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>($i2, $r3);

        return $i2;

     label2:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to dimension: type=0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public int getDimensionPixelSize(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.UnsupportedOperationException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: android.content.res.TypedArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i2 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i2 + 0;

        $i1 = $r1[$i1];

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        if $i1 != 5 goto label2;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i2 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i2, $r3);

        return $i2;

     label2:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to dimension: type=0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;
        android.content.res.Resources $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i0 = $i0 * 5;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i0, $r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i0 = $r1.<android.util.TypedValue: int resourceId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>($r1, $i0);

        return $r3;

     label1:
        return null;
    }

    public float getFloat(int, float)
    {
        android.content.res.TypedArray $r0;
        float $f0;
        int[] $r1;
        int $i0, $i1;
        android.util.TypedValue $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r1[$i0];

        if $i0 != 0 goto label1;

        return $f0;

     label1:
        if $i0 != 4 goto label2;

        $i1 = $i1 + 1;

        $i1 = $r1[$i1];

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f0;

     label2:
        if $i0 < 16 goto label3;

        if $i0 > 31 goto label3;

        $i1 = $i1 + 1;

        $i1 = $r1[$i1];

        $f0 = (float) $i1;

        return $f0;

     label3:
        $r2 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, $r2);

        if $z0 == 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to float: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        $r5 = virtualinvoke $r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        if $r5 == null goto label4;

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        return $f0;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFloat of bad type: 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        return $f0;
    }

    public float getFraction(int, int, int, float)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        int[] $r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: android.content.res.TypedArray;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $i3 = $i3 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i2 = $i3 + 0;

        $i2 = $r1[$i2];

        if $i2 != 0 goto label1;

        return $f0;

     label1:
        if $i2 != 6 goto label2;

        $i3 = $i3 + 1;

        $i3 = $r1[$i3];

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = staticinvoke <android.util.TypedValue: float complexToFraction(int,float,float)>($i3, $f0, $f1);

        return $f0;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to fraction: type=0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public int getIndex(int)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        int[] $r1;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.TypedArray: int[] mIndices>;

        $i0 = $i0 + 1;

        $i0 = $r1[$i0];

        return $i0;
    }

    public int getIndexCount()
    {
        android.content.res.TypedArray $r0;
        int[] $r1;
        int $i0;

        $r0 := @this: android.content.res.TypedArray;

        $r1 = $r0.<android.content.res.TypedArray: int[] mIndices>;

        $i0 = $r1[0];

        return $i0;
    }

    public int getInt(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        android.util.TypedValue $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5;

        $r0 := @this: android.content.res.TypedArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i2 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i2 + 0;

        $i1 = $r1[$i1];

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        if $i1 < 16 goto label2;

        if $i1 > 31 goto label2;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        return $i2;

     label2:
        $r2 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i2, $r2);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to int: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        $r5 = virtualinvoke $r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        $i2 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>($r5, $i0);

        return $i2;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getInt of bad type: 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        return $i0;
    }

    public int getInteger(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: android.content.res.TypedArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i2 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i2 + 0;

        $i1 = $r1[$i1];

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        if $i1 < 16 goto label2;

        if $i1 > 31 goto label2;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        return $i2;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to integer: type=0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public int getLayoutDimension(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        $r0 := @this: android.content.res.TypedArray;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $i2 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = $i2 + 0;

        $i1 = $r1[$i1];

        if $i1 < 16 goto label1;

        if $i1 > 31 goto label1;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        return $i2;

     label1:
        if $i1 != 5 goto label2;

        $i2 = $i2 + 1;

        $i2 = $r1[$i2];

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i2 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i2, $r3);

        return $i2;

     label2:
        return $i0;
    }

    public int getLayoutDimension(int, java.lang.String)
    {
        android.content.res.TypedArray $r0;
        java.lang.String $r1, $r7;
        int[] $r2;
        int $i0, $i1;
        android.content.res.Resources $r3;
        android.util.DisplayMetrics $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 = $i1 * 5;

        $r2 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r2[$i0];

        if $i0 < 16 goto label1;

        if $i0 > 31 goto label1;

        $i1 = $i1 + 1;

        $i1 = $r2[$i1];

        return $i1;

     label1:
        if $i0 != 5 goto label2;

        $i1 = $i1 + 1;

        $i1 = $r2[$i1];

        $r3 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r4 = $r3.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i1 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i1, $r4);

        return $i1;

     label2:
        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": You must supply a ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute.");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r5;
    }

    public java.lang.String getNonResourceString(int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1;
        int[] $r1;
        android.content.res.XmlBlock$Parser $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r1[$i0];

        if $i0 != 3 goto label1;

        $i0 = $i1 + 2;

        $i0 = $r1[$i0];

        if $i0 >= 0 goto label1;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        $i1 = $i1 + 1;

        $i1 = $r1[$i1];

        $r3 = virtualinvoke $r2.<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getPositionDescription()
    {
        android.content.res.TypedArray $r0;
        java.lang.String $r1;
        android.content.res.XmlBlock$Parser $r2;

        $r0 := @this: android.content.res.TypedArray;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        $r1 = virtualinvoke $r2.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        return $r1;

     label1:
        return "<internal>";
    }

    public int getResourceId(int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i2 = $i1 + 0;

        $i2 = $r1[$i2];

        if $i2 == 0 goto label1;

        $i1 = $i1 + 3;

        $i1 = $r1[$i1];

        if $i1 == 0 goto label1;

        return $i1;

     label1:
        return $i0;
    }

    public android.content.res.Resources getResources()
    {
        android.content.res.TypedArray $r0;
        android.content.res.Resources r1;

        $r0 := @this: android.content.res.TypedArray;

        r1 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        return r1;
    }

    public java.lang.String getString(int)
    {
        android.content.res.TypedArray $r0;
        int[] $r1;
        int $i0, $i1;
        android.util.TypedValue $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r1[$i0];

        if $i0 != 0 goto label1;

        return null;

     label1:
        if $i0 != 3 goto label2;

        $r3 = specialinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label2:
        $r2 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, $r2);

        if $z0 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to string: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        $r3 = virtualinvoke $r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label3:
        return null;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getString of bad type: 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r4);

        return null;
    }

    public java.lang.CharSequence getText(int)
    {
        android.content.res.TypedArray $r0;
        int[] $r1;
        int $i0, $i1;
        android.util.TypedValue $r2;
        java.lang.CharSequence $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.res.TypedArray;

        $i1 := @parameter0: int;

        $i1 = $i1 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i1 + 0;

        $i0 = $r1[$i0];

        if $i0 != 0 goto label1;

        return null;

     label1:
        if $i0 != 3 goto label2;

        $r3 = specialinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>($i1);

        return $r3;

     label2:
        $r2 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, $r2);

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to string: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r5);

        $r3 = virtualinvoke $r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        return $r3;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getString of bad type: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r5);

        return null;
    }

    public java.lang.CharSequence[] getTextArray(int)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;
        android.content.res.Resources $r2;
        java.lang.CharSequence[] $r3;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i0 = $i0 * 5;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i0, $r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i0 = $r1.<android.util.TypedValue: int resourceId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>($i0);

        return $r3;

     label1:
        return null;
    }

    public boolean getValue(int, android.util.TypedValue)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.util.TypedValue;

        $i0 = $i0 * 5;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i0, $r1);

        return $z0;
    }

    public boolean hasValue(int)
    {
        android.content.res.TypedArray $r0;
        int[] $r1;
        int $i0;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $i0 = $i0 * 5;

        $r1 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = $i0 + 0;

        $i0 = $r1[$i0];

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int length()
    {
        android.content.res.TypedArray $r0;
        int i0;

        $r0 := @this: android.content.res.TypedArray;

        i0 = $r0.<android.content.res.TypedArray: int mLength>;

        return i0;
    }

    public android.util.TypedValue peekValue(int)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;

        $r0 := @this: android.content.res.TypedArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i0 = $i0 * 5;

        $z0 = specialinvoke $r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i0, $r1);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        return null;
    }

    public void recycle()
    {
        android.content.res.TypedArray $r0, $r1;
        android.content.res.Resources $r2;
        android.util.TypedValue $r3;
        int[] $r4;
        int $i0, $i1;
        java.lang.Throwable $r5;

        $r0 := @this: android.content.res.TypedArray;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r1 = $r2.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes>;

        if $r1 == null goto label2;

        $r4 = $r1.<android.content.res.TypedArray: int[] mData>;

        $i0 = lengthof $r4;

        $r4 = $r0.<android.content.res.TypedArray: int[] mData>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

     label2:
        $r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = null;

        $r2 = $r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r2.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = $r0;

     label3:
        exitmonitor $r3;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        android.content.res.TypedArray $r0;
        java.lang.String $r1;
        int[] $r2;

        $r0 := @this: android.content.res.TypedArray;

        $r2 = $r0.<android.content.res.TypedArray: int[] mData>;

        $r1 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r2);

        return $r1;
    }
}
