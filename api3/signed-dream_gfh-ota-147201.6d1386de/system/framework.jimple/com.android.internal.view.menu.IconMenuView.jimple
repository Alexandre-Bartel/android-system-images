public final class com.android.internal.view.menu.IconMenuView extends android.view.ViewGroup implements com.android.internal.view.menu.MenuBuilder$ItemInvoker, com.android.internal.view.menu.MenuView, java.lang.Runnable
{
    private static final int ITEM_CAPTION_CYCLE_DELAY;
    private int mAnimations;
    private boolean mHasStaleChildren;
    private android.graphics.drawable.Drawable mHorizontalDivider;
    private int mHorizontalDividerHeight;
    private java.util.ArrayList mHorizontalDividerRects;
    private android.graphics.drawable.Drawable mItemBackground;
    private boolean mLastChildrenCaptionMode;
    private int[] mLayout;
    private int mLayoutNumRows;
    private int mMaxItems;
    private int mMaxItemsPerRow;
    private int mMaxRows;
    private com.android.internal.view.menu.MenuBuilder mMenu;
    private boolean mMenuBeingLongpressed;
    private android.graphics.drawable.Drawable mMoreIcon;
    private com.android.internal.view.menu.IconMenuItemView mMoreItemView;
    private int mNumActualItemsShown;
    private int mRowHeight;
    private android.graphics.drawable.Drawable mVerticalDivider;
    private java.util.ArrayList mVerticalDividerRects;
    private int mVerticalDividerWidth;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;
        android.graphics.drawable.Drawable $r5;
        java.util.ArrayList $r6;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed> = 0;

        $r3 = <com.android.internal.R$styleable: int[] IconMenuView>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, 0);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 64);

        $r0.<com.android.internal.view.menu.IconMenuView: int mRowHeight> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(1, 2);

        $r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(4, 6);

        $r0.<com.android.internal.view.menu.IconMenuView: int mMaxItems> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(2, 3);

        $r0.<com.android.internal.view.menu.IconMenuView: int mMaxItemsPerRow> = $i0;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(3);

        $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mMoreIcon> = $r5;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r3 = <com.android.internal.R$styleable: int[] MenuView>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, 0);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(5);

        $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mItemBackground> = $r5;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects> = $r6;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(3);

        $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects> = $r6;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        $r0.<com.android.internal.view.menu.IconMenuView: int mAnimations> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r5 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r5 == null goto label1;

        $r5 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight> = $i0;

        $i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        if $i0 != -1 goto label1;

        $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight> = 1;

     label1:
        $r5 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r5 == null goto label2;

        $r5 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth> = $i0;

        $i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        if $i0 != -1 goto label2;

        $r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth> = 1;

     label2:
        $i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows>;

        $r3 = newarray (int)[$i0];

        $r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout> = $r3;

        virtualinvoke $r0.<android.view.View: void setWillNotDraw(boolean)>(0);

        virtualinvoke $r0.<android.view.View: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>(262144);

        return;
    }

    static com.android.internal.view.menu.MenuBuilder access$000(com.android.internal.view.menu.IconMenuView)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        com.android.internal.view.menu.MenuBuilder r1;

        $r0 := @parameter0: com.android.internal.view.menu.IconMenuView;

        r1 = $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu>;

        return r1;
    }

    private void addItemView(com.android.internal.view.menu.IconMenuItemView)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        com.android.internal.view.menu.IconMenuItemView $r1;
        android.graphics.drawable.Drawable $r2;
        android.graphics.drawable.Drawable$ConstantState $r3;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r4;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: com.android.internal.view.menu.IconMenuItemView;

        virtualinvoke $r1.<com.android.internal.view.menu.IconMenuItemView: void setIconMenuView(com.android.internal.view.menu.IconMenuView)>($r0);

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mItemBackground>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r2 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        virtualinvoke $r1.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r2);

        virtualinvoke $r1.<com.android.internal.view.menu.IconMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)>($r0);

        $r4 = virtualinvoke $r1.<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.IconMenuView$LayoutParams getTextAppropriateLayoutParams()>();

        virtualinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r4);

        return;
    }

    private void calculateItemFittingMetadata(int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r3;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.android.internal.view.menu.IconMenuView: int mMaxItemsPerRow>;

        $i3 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label5;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r2;

        $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int maxNumItemsOnRow> = 1;

        $i5 = $i1;

     label2:
        if $i5 <= 0 goto label3;

        $i6 = $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int desiredWidth>;

        $i2 = $i0 / $i5;

        if $i6 >= $i2 goto label4;

        $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int maxNumItemsOnRow> = $i5;

     label3:
        $i4 = $i4 + 1;

        goto label1;

     label4:
        $i5 = $i5 + -1;

        goto label2;

     label5:
        return;
    }

    private com.android.internal.view.menu.IconMenuItemView createMoreItemView()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        com.android.internal.view.menu.MenuBuilder $r1;
        com.android.internal.view.menu.MenuBuilder$MenuType $r2;
        android.view.LayoutInflater $r3;
        android.view.View $r4;
        com.android.internal.view.menu.IconMenuItemView $r5;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        java.lang.CharSequence $r8;
        android.graphics.drawable.Drawable $r9;
        com.android.internal.view.menu.IconMenuView$1 $r10;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu>;

        $r2 = virtualinvoke $r1.<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder$MenuType getMenuType(int)>(0);

        $r3 = virtualinvoke $r2.<com.android.internal.view.menu.MenuBuilder$MenuType: android.view.LayoutInflater getInflater()>();

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367080, null);

        $r5 = (com.android.internal.view.menu.IconMenuItemView) $r4;

        $r6 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17039764);

        $r9 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mMoreIcon>;

        virtualinvoke $r5.<com.android.internal.view.menu.IconMenuItemView: void initialize(java.lang.CharSequence,android.graphics.drawable.Drawable)>($r8, $r9);

        $r10 = new com.android.internal.view.menu.IconMenuView$1;

        specialinvoke $r10.<com.android.internal.view.menu.IconMenuView$1: void <init>(com.android.internal.view.menu.IconMenuView)>($r0);

        virtualinvoke $r5.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r10);

        return $r5;
    }

    private boolean doItemsFit()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r4;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i2 = 0;

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        $i1 = $r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label6;

        $i0 = $r1[$i3];

        if $i0 != 1 goto label3;

        $i2 = $i2 + 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        $i4 = $i0;

        $i5 = $i2;

     label4:
        if $i4 <= 0 goto label7;

        $i2 = $i5 + 1;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i5);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r3;

        $i5 = $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int maxNumItemsOnRow>;

        if $i5 >= $i0 goto label5;

        return 0;

     label5:
        $i4 = $i4 + -1;

        $i5 = $i2;

        goto label4;

     label6:
        return 1;

     label7:
        $i2 = $i5;

        goto label2;
    }

    private void layoutItems(int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int $i0, $i1, $i2;
        float $f0, $f1;
        double $d0;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $f0 = (float) $i0;

        $i1 = $r0.<com.android.internal.view.menu.IconMenuView: int mMaxItemsPerRow>;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        $i2 = $r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

     label1:
        $i2 = $r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows>;

        if $i1 > $i2 goto label3;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void layoutItemsUsingGravity(int,int)>($i1, $i0);

        if $i1 < $i0 goto label2;

        return;

     label2:
        $z0 = specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: boolean doItemsFit()>();

        if $z0 != 0 goto label4;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    private void layoutItemsUsingGravity(int, int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 / $i0;

        $i1 = $i1 % $i0;

        $i1 = $i0 - $i1;

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $r1[$i3] = $i2;

        if $i3 < $i1 goto label2;

        $i4 = $r1[$i3];

        $i4 = $i4 + 1;

        $r1[$i3] = $i4;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        $r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows> = $i0;

        return;
    }

    private void positionChildren(int, int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.drawable.Drawable $r1;
        java.util.ArrayList $r2;
        int[] $r3;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r4;
        android.view.View $r5;
        android.view.ViewGroup$LayoutParams $r6;
        android.graphics.Rect $r7;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r1 == null goto label1;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label1:
        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r1 == null goto label2;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label2:
        $i3 = $r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        $i2 = $i3 - 1;

        $r3 = $r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        $i4 = 0;

        $r4 = null;

        $f2 = 0.0F;

        $i5 = $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $i6 = $i3 - 1;

        $i5 = $i5 * $i6;

        $i1 = $i1 - $i5;

        $f0 = (float) $i1;

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $i1 = 0;

     label3:
        if $i1 >= $i3 goto label9;

        $f3 = 0.0F;

        $i5 = $r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        $i6 = $r3[$i1];

        $i6 = $i6 - 1;

        $i5 = $i5 * $i6;

        $i5 = $i0 - $i5;

        $f1 = (float) $i5;

        $i5 = $r3[$i1];

        $f4 = (float) $i5;

        $f1 = $f1 / $f4;

        $i5 = 0;

     label4:
        $i6 = $r3[$i1];

        if $i5 >= $i6 goto label6;

        $r5 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        $i6 = (int) $f1;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);

        $i7 = (int) $f0;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i7, 1073741824);

        virtualinvoke $r5.<android.view.View: void measure(int,int)>($i6, $i7);

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r6;

        $i6 = (int) $f3;

        $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int left> = $i6;

        $f4 = $f3 + $f1;

        $i6 = (int) $f4;

        $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int right> = $i6;

        $i6 = (int) $f2;

        $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int top> = $i6;

        $f4 = $f2 + $f0;

        $i6 = (int) $f4;

        $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int bottom> = $i6;

        $f3 = $f3 + $f1;

        $i4 = $i4 + 1;

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r1 == null goto label5;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        $r7 = new android.graphics.Rect;

        $i6 = (int) $f3;

        $i7 = (int) $f2;

        $i8 = $r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        $f4 = (float) $i8;

        $f4 = $f4 + $f3;

        $i8 = (int) $f4;

        $f4 = $f2 + $f0;

        $i9 = (int) $f4;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>($i6, $i7, $i8, $i9);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label5:
        $i6 = $r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        $f4 = (float) $i6;

        $f3 = $f3 + $f4;

        $i5 = $i5 + 1;

        goto label4;

     label6:
        if $r4 == null goto label7;

        $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int right> = $i0;

     label7:
        $f2 = $f2 + $f0;

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r1 == null goto label8;

        if $i1 >= $i2 goto label8;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        $r7 = new android.graphics.Rect;

        $i5 = (int) $f2;

        $i6 = $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $f1 = (float) $i6;

        $f1 = $f1 + $f2;

        $i6 = (int) $f1;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(0, $i5, $i0, $i6);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i5 = $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $f1 = (float) $i5;

        $f2 = $f2 + $f1;

     label8:
        $i1 = $i1 + 1;

        goto label3;

     label9:
        return;
    }

    private void setChildrenCaptionMode(boolean)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;
        int $i0;
        android.view.View $r1;
        com.android.internal.view.menu.IconMenuItemView $r2;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 := @parameter0: boolean;

        $r0.<com.android.internal.view.menu.IconMenuView: boolean mLastChildrenCaptionMode> = $z0;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $r2 = (com.android.internal.view.menu.IconMenuItemView) $r1;

        virtualinvoke $r2.<com.android.internal.view.menu.IconMenuItemView: void setCaptionMode(boolean)>($z0);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void setCycleShortcutCaptionMode(boolean)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r0);

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setChildrenCaptionMode(boolean)>(0);

        $r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed> = 0;

        return;

     label1:
        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setChildrenCaptionMode(boolean)>(1);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof com.android.internal.view.menu.IconMenuView$LayoutParams;

        return $z0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.view.KeyEvent $r1;
        int $i0;
        long $l1;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 82 goto label1;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label2;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r0);

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l1 = (long) $i0;

        virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r0, $l1);

     label1:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label2:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 1 goto label1;

        $z0 = $r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed>;

        if $z0 == 0 goto label3;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(0);

        return 1;

     label3:
        virtualinvoke $r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r0);

        goto label1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.util.AttributeSet $r1;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r2;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }

    public com.android.internal.view.menu.IconMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.util.AttributeSet $r1;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.android.internal.view.menu.IconMenuView$LayoutParams;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    public int[] getLayout()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int[] r1;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 = $r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        return r1;
    }

    public int getLayoutNumRows()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int i0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        return i0;
    }

    int getNumActualItemsShown()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int i0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mNumActualItemsShown>;

        return i0;
    }

    public int getWindowAnimations()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int i0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mAnimations>;

        return i0;
    }

    public void initialize(com.android.internal.view.menu.MenuBuilder, int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        com.android.internal.view.menu.MenuBuilder $r1;
        int $i0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        $i0 := @parameter1: int;

        $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu> = $r1;

        virtualinvoke $r0.<com.android.internal.view.menu.IconMenuView: void updateChildren(boolean)>(1);

        return;
    }

    public boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        com.android.internal.view.menu.MenuItemImpl $r1;
        boolean $z0;
        com.android.internal.view.menu.MenuBuilder $r2;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu>;

        $z0 = virtualinvoke $r2.<com.android.internal.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>($r1, 0);

        return $z0;
    }

    void markStaleChildren()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 = $r0.<com.android.internal.view.menu.IconMenuView: boolean mHasStaleChildren>;

        if $z0 != 0 goto label1;

        $r0.<com.android.internal.view.menu.IconMenuView: boolean mHasStaleChildren> = 1;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label1:
        return;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.view.menu.IconMenuView $r0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        specialinvoke $r0.<android.view.View: void onAttachedToWindow()>();

        virtualinvoke $r0.<android.view.View: boolean requestFocus()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.view.menu.IconMenuView $r0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(0);

        specialinvoke $r0.<android.view.View: void onDetachedFromWindow()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.Object $r4;
        android.graphics.Rect $r5;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r2 == null goto label2;

        $r3 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label2;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        $r3 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (android.graphics.Rect) $r4;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r5);

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r2 == null goto label4;

        $r3 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label3:
        if $i0 < 0 goto label5;

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        $r3 = $r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (android.graphics.Rect) $r4;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r5);

        $r2 = $r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $i0 = $i0 + -1;

        goto label3;

     label4:
        return;

     label5:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r3;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = $i0 - 1;

     label1:
        if $i2 < 0 goto label2;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r2;

        $i3 = $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int left>;

        $i4 = $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int top>;

        $i0 = $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int right>;

        $i1 = $r3.<com.android.internal.view.menu.IconMenuView$LayoutParams: int bottom>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i3, $i4, $i0, $i1);

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = $r0.<com.android.internal.view.menu.IconMenuView: boolean mHasStaleChildren>;

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.view.menu.IconMenuView: boolean mHasStaleChildren> = 0;

        virtualinvoke $r0.<com.android.internal.view.menu.IconMenuView: void updateChildren(boolean)>(0);

     label1:
        $i0 = staticinvoke <com.android.internal.view.menu.IconMenuView: int resolveSize(int,int)>(2147483647, $i0);

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void calculateItemFittingMetadata(int)>($i0);

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void layoutItems(int)>($i0);

        $i2 = $r0.<com.android.internal.view.menu.IconMenuView: int mRowHeight>;

        $i3 = $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $i2 = $i2 + $i3;

        $i3 = $r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        $i2 = $i2 * $i3;

        $i3 = $r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $i2 = $i2 - $i3;

        $i1 = staticinvoke <com.android.internal.view.menu.IconMenuView: int resolveSize(int,int)>($i2, $i1);

        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i0, $i1);

        $i0 = $r0.<android.view.View: int mMeasuredWidth>;

        $i1 = $r0.<android.view.View: int mMeasuredHeight>;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void positionChildren(int,int)>($i0, $i1);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.os.Parcelable $r1;
        com.android.internal.view.menu.IconMenuView$SavedState $r2;
        int $i0, $i1;
        android.view.View $r3;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (com.android.internal.view.menu.IconMenuView$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $i0 = $r2.<com.android.internal.view.menu.IconMenuView$SavedState: int focusedPosition>;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 < $i1 goto label1;

        return;

     label1:
        $i0 = $r2.<com.android.internal.view.menu.IconMenuView$SavedState: int focusedPosition>;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        if $r3 == null goto label2;

        virtualinvoke $r3.<android.view.View: boolean requestFocus()>();

        return;

     label2:
        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        android.os.Parcelable $r1;
        android.view.View $r2, $r3;
        int $i0;
        com.android.internal.view.menu.IconMenuView$SavedState $r4;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        if $r3 != $r2 goto label2;

        $r4 = new com.android.internal.view.menu.IconMenuView$SavedState;

        specialinvoke $r4.<com.android.internal.view.menu.IconMenuView$SavedState: void <init>(android.os.Parcelable,int)>($r1, $i0);

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r4 = new com.android.internal.view.menu.IconMenuView$SavedState;

        specialinvoke $r4.<com.android.internal.view.menu.IconMenuView$SavedState: void <init>(android.os.Parcelable,int)>($r1, -1);

        return $r4;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(0);

     label1:
        specialinvoke $r0.<android.view.View: void onWindowFocusChanged(boolean)>($z0);

        return;
    }

    public void run()
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 = $r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed>;

        if $z0 == 0 goto label4;

        $z0 = $r0.<com.android.internal.view.menu.IconMenuView: boolean mLastChildrenCaptionMode>;

        if $z0 != 0 goto label3;

        $z0 = 1;

     label1:
        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setChildrenCaptionMode(boolean)>($z0);

     label2:
        virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r0, 1000L);

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed> = 1;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(1);

        goto label2;
    }

    public void updateChildren(boolean)
    {
        com.android.internal.view.menu.IconMenuView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        com.android.internal.view.menu.MenuBuilder $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.internal.view.menu.MenuItemImpl $r4;
        android.view.View $r5;
        com.android.internal.view.menu.IconMenuItemView $r6;

        $r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 := @parameter0: boolean;

        virtualinvoke $r0.<android.view.ViewGroup: void removeAllViews()>();

        $r1 = $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu>;

        $r2 = virtualinvoke $r1.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>();

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i0 = $r0.<com.android.internal.view.menu.IconMenuView: int mMaxItems>;

        $i2 = $i0 - 1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r4 = (com.android.internal.view.menu.MenuItemImpl) $r3;

        $r5 = virtualinvoke $r4.<com.android.internal.view.menu.MenuItemImpl: android.view.View getItemView(int,android.view.ViewGroup)>(0, $r0);

        $r6 = (com.android.internal.view.menu.IconMenuItemView) $r5;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void addItemView(com.android.internal.view.menu.IconMenuItemView)>($r6);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        if $i1 <= $i0 goto label4;

        $r6 = $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView mMoreItemView>;

        if $r6 != null goto label3;

        $r6 = specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView createMoreItemView()>();

        $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView mMoreItemView> = $r6;

     label3:
        $r6 = $r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView mMoreItemView>;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void addItemView(com.android.internal.view.menu.IconMenuItemView)>($r6);

        $i0 = $i0 - 1;

        $r0.<com.android.internal.view.menu.IconMenuView: int mNumActualItemsShown> = $i0;

        return;

     label4:
        if $i1 != $i0 goto label5;

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.internal.view.menu.MenuItemImpl) $r3;

        $r5 = virtualinvoke $r4.<com.android.internal.view.menu.MenuItemImpl: android.view.View getItemView(int,android.view.ViewGroup)>(0, $r0);

        $r6 = (com.android.internal.view.menu.IconMenuItemView) $r5;

        specialinvoke $r0.<com.android.internal.view.menu.IconMenuView: void addItemView(com.android.internal.view.menu.IconMenuItemView)>($r6);

        $r0.<com.android.internal.view.menu.IconMenuView: int mNumActualItemsShown> = $i0;

        return;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.menu.IconMenuView: int ITEM_CAPTION_CYCLE_DELAY> = 1000;

        return;
    }
}
