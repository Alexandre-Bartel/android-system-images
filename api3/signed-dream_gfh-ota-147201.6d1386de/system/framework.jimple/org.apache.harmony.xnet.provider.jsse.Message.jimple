public abstract class org.apache.harmony.xnet.provider.jsse.Message extends java.lang.Object
{
    protected int length;

    public void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.Message $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.Message;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fatalAlert(byte, java.lang.String)
    {
        org.apache.harmony.xnet.provider.jsse.Message $r0;
        byte $b0;
        java.lang.String $r1;
        org.apache.harmony.xnet.provider.jsse.AlertException $r2;
        javax.net.ssl.SSLHandshakeException $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.Message;

        $b0 := @parameter0: byte;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.apache.harmony.xnet.provider.jsse.AlertException;

        $r3 = new javax.net.ssl.SSLHandshakeException;

        specialinvoke $r3.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.apache.harmony.xnet.provider.jsse.AlertException: void <init>(byte,javax.net.ssl.SSLException)>($b0, $r3);

        throw $r2;
    }

    protected void fatalAlert(byte, java.lang.String, java.lang.Throwable)
    {
        org.apache.harmony.xnet.provider.jsse.Message $r0;
        byte $b0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        org.apache.harmony.xnet.provider.jsse.AlertException $r3;
        javax.net.ssl.SSLException $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.Message;

        $b0 := @parameter0: byte;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new org.apache.harmony.xnet.provider.jsse.AlertException;

        $r4 = new javax.net.ssl.SSLException;

        specialinvoke $r4.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        specialinvoke $r3.<org.apache.harmony.xnet.provider.jsse.AlertException: void <init>(byte,javax.net.ssl.SSLException)>($b0, $r4);

        throw $r3;
    }

    abstract int getType();

    public int length()
    {
        org.apache.harmony.xnet.provider.jsse.Message $r0;
        int i0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.Message;

        i0 = $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length>;

        return i0;
    }

    abstract void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream);
}
