public class org.bouncycastle.crypto.generators.DESedeKeyGenerator extends org.bouncycastle.crypto.generators.DESKeyGenerator
{

    public void <init>()
    {
        org.bouncycastle.crypto.generators.DESedeKeyGenerator $r0;

        $r0 := @this: org.bouncycastle.crypto.generators.DESedeKeyGenerator;

        specialinvoke $r0.<org.bouncycastle.crypto.generators.DESKeyGenerator: void <init>()>();

        return;
    }

    public byte[] generateKey()
    {
        org.bouncycastle.crypto.generators.DESedeKeyGenerator $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        java.security.SecureRandom $r2;

        $r0 := @this: org.bouncycastle.crypto.generators.DESedeKeyGenerator;

        $i0 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength>;

        $r1 = newarray (byte)[$i0];

     label1:
        $r2 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: java.security.SecureRandom random>;

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1);

        staticinvoke <org.bouncycastle.crypto.params.DESedeParameters: void setOddParity(byte[])>($r1);

        $i0 = lengthof $r1;

        $z0 = staticinvoke <org.bouncycastle.crypto.params.DESedeParameters: boolean isWeakKey(byte[],int,int)>($r1, 0, $i0);

        if $z0 != 0 goto label1;

        return $r1;
    }

    public void init(org.bouncycastle.crypto.KeyGenerationParameters)
    {
        org.bouncycastle.crypto.generators.DESedeKeyGenerator $r0;
        org.bouncycastle.crypto.KeyGenerationParameters $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: org.bouncycastle.crypto.generators.DESedeKeyGenerator;

        $r1 := @parameter0: org.bouncycastle.crypto.KeyGenerationParameters;

        specialinvoke $r0.<org.bouncycastle.crypto.CipherKeyGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r1);

        $i0 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength>;

        if $i0 == 0 goto label1;

        $i0 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength>;

        if $i0 != 21 goto label2;

     label1:
        $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength> = 24;

        return;

     label2:
        $i0 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength>;

        if $i0 != 14 goto label3;

        $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength> = 16;

        return;

     label3:
        $i0 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength>;

        if $i0 == 24 goto label4;

        $i0 = $r0.<org.bouncycastle.crypto.CipherKeyGenerator: int strength>;

        if $i0 == 16 goto label5;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DESede key must be 192 or 128 bits long.");

        throw $r2;

     label4:
        return;

     label5:
        return;
    }
}
