public class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl extends java.security.SecureRandomSpi implements java.io.Serializable, org.apache.harmony.security.provider.crypto.SHA1_Data
{
    private static final int COUNTER_BASE;
    private static final int[] END_FLAGS;
    private static final int EXTRAFRAME_OFFSET;
    private static final int FRAME_LENGTH;
    private static final int FRAME_OFFSET;
    private static final int HASHBYTES_TO_USE;
    private static final int HASHCOPY_OFFSET;
    private static final int[] LEFT;
    private static final int[] MASK;
    private static final int MAX_BYTES;
    private static final int NEXT_BYTES;
    private static final int[] RIGHT1;
    private static final int[] RIGHT2;
    private static final int SET_SEED;
    private static final int UNDEFINED;
    private static org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom;
    private static final long serialVersionUID;
    private transient int[] copies;
    private transient long counter;
    private transient int nextBIndex;
    private transient byte[] nextBytes;
    private transient int[] seed;
    private transient long seedLength;
    private transient int state;

    static void <clinit>()
    {
        int[] $r0;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long serialVersionUID> = 283736797212159675L;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int UNDEFINED> = 0;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int SET_SEED> = 1;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int NEXT_BYTES> = 2;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int MAX_BYTES> = 48;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int HASHCOPY_OFFSET> = 0;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int HASHBYTES_TO_USE> = 20;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int FRAME_OFFSET> = 21;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int FRAME_LENGTH> = 16;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int EXTRAFRAME_OFFSET> = 5;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int COUNTER_BASE> = 0;

        $r0 = newarray (int)[4];

        $r0[0] = -2147483648;

        $r0[1] = 8388608;

        $r0[2] = 32768;

        $r0[3] = 128;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] END_FLAGS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 0;

        $r0[1] = 40;

        $r0[2] = 48;

        $r0[3] = 56;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT1> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 0;

        $r0[1] = 8;

        $r0[2] = 16;

        $r0[3] = 24;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT2> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 0;

        $r0[1] = 24;

        $r0[2] = 16;

        $r0[3] = 8;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] LEFT> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = -1;

        $r0[1] = 16777215;

        $r0[2] = 65535;

        $r0[3] = 255;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] MASK> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        int[] $r1;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        specialinvoke $r0.<java.security.SecureRandomSpi: void <init>()>();

        $r1 = newarray (int)[87];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed> = $r1;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r1[82] = 1732584193;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r1[83] = -271733879;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r1[84] = -1732584194;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r1[85] = 271733878;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r1[86] = -1009589776;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength> = 0L;

        $r1 = newarray (int)[37];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies> = $r1;

        $r2 = newarray (byte)[20];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes> = $r2;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 20;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter> = 0L;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = 0;

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        java.io.ObjectInputStream $r1;
        int $i0, $i2, $i3, $i4;
        int[] $r2;
        byte[] $r3;
        long $l1;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = newarray (int)[87];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed> = $r2;

        $r2 = newarray (int)[37];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies> = $r2;

        $r3 = newarray (byte)[20];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes> = $r3;

        $l1 = virtualinvoke $r1.<java.io.ObjectInputStream: long readLong()>();

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength> = $l1;

        $l1 = virtualinvoke $r1.<java.io.ObjectInputStream: long readLong()>();

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter> = $l1;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = $i0;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[81] = $i0;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i0 = $r2[81];

        $i0 = $i0 + 3;

        $i0 = $i0 >> 2;

        $i2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i2 == 2 goto label04;

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label02;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $i0 = 0;

     label03:
        if $i0 >= 5 goto label13;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = $i0 + 82;

        $i3 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[$i2] = $i3;

        $i0 = $i0 + 1;

        goto label03;

     label04:
        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = $r2[81];

        if $i2 < 48 goto label05;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[16] = $i2;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[17] = $i2;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[30] = $i2;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[31] = $i2;

     label05:
        $i2 = 0;

     label06:
        if $i2 >= 16 goto label07;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label06;

     label07:
        $i2 = 0;

     label08:
        if $i2 >= $i0 goto label09;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $i3 = $i2 + 21;

        $i4 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[$i3] = $i4;

        $i2 = $i2 + 1;

        goto label08;

     label09:
        $i0 = 0;

     label10:
        if $i0 >= 5 goto label11;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $i2 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label10;

     label11:
        $i0 = 0;

     label12:
        if $i0 >= 5 goto label13;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = $i0 + 82;

        $i3 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r2[$i2] = $i3;

        $i0 = $i0 + 1;

        goto label12;

     label13:
        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = $i0;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i2 = 20 - $i2;

        virtualinvoke $r1.<java.io.ObjectInputStream: int read(byte[],int,int)>($r3, $i0, $i2);

        return;
    }

    private void updateSeed(byte[])
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        byte[] $r1;
        int[] $r2;
        int $i0;
        long $l1, $l2;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i0 = lengthof $r1;

        $i0 = $i0 - 1;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void updateHash(int[],byte[],int,int)>($r2, $r1, 0, $i0);

        $l1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength>;

        $i0 = lengthof $r1;

        $l2 = (long) $i0;

        $l1 = $l1 + $l2;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength> = $l1;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        java.io.ObjectOutputStream $r1;
        int $i0, $i2, $i3;
        long $l1;
        int[] $r2, $r3;
        byte[] $r4;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $l1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeLong(long)>($l1);

        $l1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeLong(long)>($l1);

        $i0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i0 = $r2[81];

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i0 = $r2[81];

        $i0 = $i0 + 3;

        $i0 = $i0 >> 2;

        $i2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i2 == 2 goto label3;

        $i2 = $i0 + 5;

        $r2 = newarray (int)[$i2];

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 82, $r2, $i0, 5);

     label1:
        $i0 = 0;

     label2:
        $i2 = lengthof $r2;

        if $i0 >= $i2 goto label6;

        $i2 = $r2[$i0];

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $i2 = 0;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = $r2[81];

        if $i3 >= 48 goto label5;

        $i3 = $i0 + 26;

        $r2 = newarray (int)[$i3];

     label4:
        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, $i2, 16);

        $i2 = $i2 + 16;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 21, $r2, $i2, $i0);

        $i0 = $i2 + $i0;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, $i0, 5);

        $i0 = $i0 + 5;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 82, $r2, $i0, 5);

        goto label1;

     label5:
        $i2 = $i0 + 42;

        $r2 = newarray (int)[$i2];

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = $r3[16];

        $r2[0] = $i2;

        $i2 = 0 + 1;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = $r3[17];

        $r2[$i2] = $i3;

        $i2 = 0 + 2;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = $r3[30];

        $r2[$i2] = $i3;

        $i2 = 0 + 3;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = $r3[31];

        $r2[$i2] = $i3;

        $i2 = 0 + 4;

        goto label4;

     label6:
        $i0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i2 = 20 - $i2;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void write(byte[],int,int)>($r4, $i0, $i2);

        return;
    }

    protected byte[] engineGenerateSeed(int)
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        int $i0;
        byte[] $r1;
        java.lang.NegativeArraySizeException $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.NegativeArraySizeException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.171", $i0);

        specialinvoke $r2.<java.lang.NegativeArraySizeException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        if $i0 != 0 goto label2;

        $r1 = newarray (byte)[0];

        return $r1;

     label2:
        $r0 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom>;

        if $r0 != null goto label3;

        $r0 = new org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void <init>()>();

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom> = $r0;

        $r0 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom>;

        $r1 = staticinvoke <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getRandomBits(int)>(20);

        virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void engineSetSeed(byte[])>($r1);

     label3:
        $r1 = newarray (byte)[$i0];

        $r0 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom>;

        virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void engineNextBytes(byte[])>($r1);

        return $r1;
    }

    protected void engineNextBytes(byte[])
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        byte[] $r1, $r5;
        long $l0, $l4;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10;
        java.lang.NullPointerException $r2;
        java.lang.String $r3;
        int[] $r4, $r6;
        byte $b9;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.83", "bytes");

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label01:
        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = $r4[81];

        if $i2 != 0 goto label04;

        $i2 = 0;

     label02:
        $i3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i3 != 0 goto label05;

        $r5 = staticinvoke <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getRandomBits(int)>(20);

        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void updateSeed(byte[])>($r5);

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 20;

     label03:
        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = 2;

        $i3 = lengthof $r1;

        if $i3 != 0 goto label10;

        return;

     label04:
        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i2 = $r4[81];

        $i2 = $i2 + 7;

        $i2 = $i2 >> 2;

        goto label02;

     label05:
        $i3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i3 != 1 goto label03;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r6 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 82, $r6, 0, 5);

        $i3 = $i2 + 3;

     label06:
        if $i3 >= 18 goto label07;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r4[$i3] = 0;

        $i3 = $i3 + 1;

        goto label06;

     label07:
        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength>;

        $l0 = $l0 << 67;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i3 = $r4[81];

        if $i3 >= 48 goto label09;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $l4 = $l0 >>> 32;

        $i3 = (int) $l4;

        $r4[14] = $i3;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $l0 = -1L & $l0;

        $i3 = (int) $l0;

        $r4[15] = $i3;

     label08:
        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 20;

        goto label03;

     label09:
        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $l4 = $l0 >>> 32;

        $i3 = (int) $l4;

        $r4[19] = $i3;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $l0 = -1L & $l0;

        $i3 = (int) $l0;

        $r4[20] = $i3;

        goto label08;

     label10:
        $i3 = 0;

        $i5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i5 = 20 - $i5;

        $i6 = lengthof $r1;

        $i6 = $i6 - 0;

        if $i5 >= $i6 goto label18;

        $i5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i5 = 20 - $i5;

     label11:
        if $i5 <= 0 goto label12;

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i3, $r1, 0, $i5);

        $i3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i3 = $i3 + $i5;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = $i3;

        $i3 = 0 + $i5;

     label12:
        $i5 = lengthof $r1;

        if $i3 >= $i5 goto label24;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i5 = $r4[81];

        $i5 = $i5 & 3;

     label13:
        if $i5 != 0 goto label19;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $l0 = $l0 >>> 32;

        $i6 = (int) $l0;

        $r4[$i2] = $i6;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $i2 + 1;

        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $l0 = $l0 & -1L;

        $i7 = (int) $l0;

        $r4[$i6] = $i7;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $i2 + 2;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] END_FLAGS>;

        $i7 = $r6[0];

        $r4[$i6] = $i7;

     label14:
        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r4[81];

        if $i6 <= 48 goto label15;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r6 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r6[16];

        $r4[5] = $i6;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r6 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r6[17];

        $r4[6] = $i6;

     label15:
        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r4);

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r4[81];

        if $i6 <= 48 goto label16;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r6 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r6, 21, 16);

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r6 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 5, $r6, 0, 16);

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r4);

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r6 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 21, $r6, 0, 16);

     label16:
        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $l0 = $l0 + 1L;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter> = $l0;

        $i6 = 0;

        $i7 = 0;

     label17:
        if $i7 >= 5 goto label20;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i1 = $i7 + 82;

        $i1 = $r4[$i1];

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i8 = $i1 >>> 24;

        $b9 = (byte) $i8;

        $r5[$i6] = $b9;

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i8 = $i6 + 1;

        $i10 = $i1 >>> 16;

        $b9 = (byte) $i10;

        $r5[$i8] = $b9;

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i8 = $i6 + 2;

        $i10 = $i1 >>> 8;

        $b9 = (byte) $i10;

        $r5[$i8] = $b9;

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i8 = $i6 + 3;

        $b9 = (byte) $i1;

        $r5[$i8] = $b9;

        $i6 = $i6 + 4;

        $i7 = $i7 + 1;

        goto label17;

     label18:
        $i5 = lengthof $r1;

        $i5 = $i5 - 0;

        goto label11;

     label19:
        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r4[$i2];

        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT1>;

        $i7 = $r6[$i5];

        $l0 = $l0 >>> $i7;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] MASK>;

        $i7 = $r6[$i5];

        $l4 = (long) $i7;

        $l0 = $l0 & $l4;

        $i7 = (int) $l0;

        $i6 = $i6 | $i7;

        $r4[$i2] = $i6;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $i2 + 1;

        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT2>;

        $i7 = $r6[$i5];

        $l0 = $l0 >>> $i7;

        $l0 = $l0 & -1L;

        $i7 = (int) $l0;

        $r4[$i6] = $i7;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $i2 + 2;

        $l0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] LEFT>;

        $i7 = $r6[$i5];

        $l0 = $l0 << $i7;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] END_FLAGS>;

        $i7 = $r6[$i5];

        $l4 = (long) $i7;

        $l0 = $l0 | $l4;

        $i7 = (int) $l0;

        $r4[$i6] = $i7;

        goto label14;

     label20:
        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 0;

        $i6 = lengthof $r1;

        $i6 = $i6 - $i3;

        if 20 >= $i6 goto label23;

        $i6 = 20;

     label21:
        if $i6 <= 0 goto label22;

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r1, $i3, $i6);

        $i3 = $i3 + $i6;

        $i7 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i6 = $i7 + $i6;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = $i6;

     label22:
        $i6 = lengthof $r1;

        if $i3 < $i6 goto label13;

        return;

     label23:
        $i6 = lengthof $r1;

        $i6 = $i6 - $i3;

        goto label21;

     label24:
        return;
    }

    protected void engineSetSeed(byte[])
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl $r0;
        byte[] $r1;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;
        int $i0;
        int[] $r4, $r5;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.83", "seed");

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $i0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i0 != 2 goto label2;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 82, 5);

     label2:
        $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = 1;

        $i0 = lengthof $r1;

        if $i0 == 0 goto label3;

        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void updateSeed(byte[])>($r1);

        return;

     label3:
        return;
    }
}
