class com.android.server.AlarmManagerService$UninstallReceiver extends android.content.BroadcastReceiver
{
    final com.android.server.AlarmManagerService this$0;

    public void <init>(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService$UninstallReceiver $r0;
        com.android.server.AlarmManagerService $r1;
        android.content.IntentFilter $r2;
        android.content.Context $r3;

        $r0 := @this: com.android.server.AlarmManagerService$UninstallReceiver;

        $r1 := @parameter0: com.android.server.AlarmManagerService;

        $r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0> = $r1;

        specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>();

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke $r2.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r3 = staticinvoke <com.android.server.AlarmManagerService: android.content.Context access$400(com.android.server.AlarmManagerService)>($r1);

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r0, $r2);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.AlarmManagerService$UninstallReceiver $r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        com.android.server.AlarmManagerService $r3;
        java.lang.Object $r4;
        android.net.Uri $r5;
        java.lang.String $r6;
        java.util.HashMap $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.AlarmManagerService$UninstallReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = $r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        $r4 = staticinvoke <com.android.server.AlarmManagerService: java.lang.Object access$500(com.android.server.AlarmManagerService)>($r3);

        entermonitor $r4;

     label1:
        $r5 = virtualinvoke $r2.<android.content.Intent: android.net.Uri getData()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $r3 = $r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r3.<com.android.server.AlarmManagerService: void removeLocked(java.lang.String)>($r6);

        $r3 = $r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        $r7 = staticinvoke <com.android.server.AlarmManagerService: java.util.HashMap access$1900(com.android.server.AlarmManagerService)>($r3);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

     label2:
        exitmonitor $r4;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
