public class org.bouncycastle.jce.provider.JCESecretKeyFactory extends javax.crypto.SecretKeyFactorySpi implements org.bouncycastle.jce.provider.PBE
{
    protected java.lang.String algName;
    protected org.bouncycastle.asn1.DERObjectIdentifier algOid;

    protected void <init>(java.lang.String, org.bouncycastle.asn1.DERObjectIdentifier)
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory $r0;
        java.lang.String $r1;
        org.bouncycastle.asn1.DERObjectIdentifier $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r0.<javax.crypto.SecretKeyFactorySpi: void <init>()>();

        $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: java.lang.String algName> = $r1;

        $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: org.bouncycastle.asn1.DERObjectIdentifier algOid> = $r2;

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory $r0;
        java.security.spec.KeySpec $r1;
        boolean $z0;
        javax.crypto.SecretKey $r2;
        java.security.spec.InvalidKeySpecException $r3;

        $r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory;

        $r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = $r1 instanceof javax.crypto.spec.SecretKeySpec;

        if $z0 == 0 goto label1;

        $r2 = (javax.crypto.SecretKey) $r1;

        return $r2;

     label1:
        $r3 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Invalid KeySpec");

        throw $r3;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        javax.crypto.SecretKey $r0;
        java.lang.Class $r1, $r7;
        java.lang.Object[] $r2;
        java.lang.Class[] $r3;
        java.lang.String $r4;
        org.bouncycastle.jce.provider.JCESecretKeyFactory $r5;
        java.security.spec.InvalidKeySpecException $r6;
        boolean $z0;
        javax.crypto.spec.SecretKeySpec $r8;
        byte[] $r9;
        java.lang.reflect.Constructor $r10;
        java.lang.Object $r11;
        java.security.spec.KeySpec $r12;
        java.lang.Exception $r13;

        $r5 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory;

        $r0 := @parameter0: javax.crypto.SecretKey;

        $r1 := @parameter1: java.lang.Class;

        if $r1 != null goto label1;

        $r6 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("keySpec parameter is null");

        throw $r6;

     label1:
        if $r0 != null goto label2;

        $r6 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key parameter is null");

        throw $r6;

     label2:
        $r7 = class "javax/crypto/spec/SecretKeySpec";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label3;

        $r8 = new javax.crypto.spec.SecretKeySpec;

        $r9 = interfaceinvoke $r0.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r4 = $r5.<org.bouncycastle.jce.provider.JCESecretKeyFactory: java.lang.String algName>;

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r4);

        return $r8;

     label3:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "[B";

        $r10 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r2 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke $r0.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r2[0] = $r9;

        $r11 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

        $r12 = (java.security.spec.KeySpec) $r11;

     label4:
        return $r12;

     label5:
        $r13 := @caughtexception;

        $r6 = new java.security.spec.InvalidKeySpecException;

        $r4 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r4);

        throw $r6;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory $r0;
        javax.crypto.SecretKey $r1;
        java.security.InvalidKeyException $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        javax.crypto.spec.SecretKeySpec $r6;
        byte[] $r7;

        $r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory;

        $r1 := @parameter0: javax.crypto.SecretKey;

        if $r1 != null goto label1;

        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key parameter is null");

        throw $r2;

     label1:
        $r3 = interfaceinvoke $r1.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r4 = $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: java.lang.String algName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 != 0 goto label2;

        $r2 = new java.security.InvalidKeyException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key not of type ");

        $r3 = $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: java.lang.String algName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $r6 = new javax.crypto.spec.SecretKeySpec;

        $r7 = interfaceinvoke $r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r3 = $r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: java.lang.String algName>;

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r3);

        return $r6;
    }
}
