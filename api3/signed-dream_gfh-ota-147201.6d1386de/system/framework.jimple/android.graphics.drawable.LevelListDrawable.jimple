public class android.graphics.drawable.LevelListDrawable extends android.graphics.drawable.DrawableContainer
{
    private final android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.LevelListDrawable $r0;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        specialinvoke $r0.<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState)>(null);

        return;
    }

    private void <init>(android.graphics.drawable.LevelListDrawable$LevelListState)
    {
        android.graphics.drawable.LevelListDrawable $r0;
        android.graphics.drawable.LevelListDrawable$LevelListState $r1, $r2;
        int $i0;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        $r1 := @parameter0: android.graphics.drawable.LevelListDrawable$LevelListState;

        specialinvoke $r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        $r2 = new android.graphics.drawable.LevelListDrawable$LevelListState;

        specialinvoke $r2.<android.graphics.drawable.LevelListDrawable$LevelListState: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable)>($r1, $r0);

        $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState> = $r2;

        virtualinvoke $r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r2);

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        virtualinvoke $r0.<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>($i0);

        return;
    }

    void <init>(android.graphics.drawable.LevelListDrawable$LevelListState, android.graphics.drawable.LevelListDrawable$1)
    {
        android.graphics.drawable.LevelListDrawable $r0;
        android.graphics.drawable.LevelListDrawable$LevelListState $r1;
        android.graphics.drawable.LevelListDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        $r1 := @parameter0: android.graphics.drawable.LevelListDrawable$LevelListState;

        $r2 := @parameter1: android.graphics.drawable.LevelListDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState)>($r1);

        return;
    }

    public void addLevel(int, int, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LevelListDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.LevelListDrawable$LevelListState $r2;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        virtualinvoke $r2.<android.graphics.drawable.LevelListDrawable$LevelListState: void addLevel(int,int,android.graphics.drawable.Drawable)>($i0, $i1, $r1);

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        virtualinvoke $r0.<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>($i0);

        return;

     label1:
        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LevelListDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        org.xmlpull.v1.XmlPullParserException $r7;
        java.lang.StringBuilder $r8;
        android.graphics.drawable.Drawable $r9;
        android.graphics.drawable.LevelListDrawable$LevelListState $r10;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

     label1:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label7;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label2;

        if $i1 == 3 goto label7;

     label2:
        if $i1 != 2 goto label1;

        if $i2 > $i0 goto label1;

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label1;

        $r5 = <com.android.internal.R$styleable: int[] LevelListDrawableItem>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r5);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        if $i2 >= 0 goto label3;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'maxLevel\' attribute");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label3:
        if $i3 == 0 goto label5;

        $r9 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i3);

     label4:
        $r10 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        virtualinvoke $r10.<android.graphics.drawable.LevelListDrawable$LevelListState: void addLevel(int,int,android.graphics.drawable.Drawable)>($i1, $i2, $r9);

        goto label1;

     label5:
        $i3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 4 goto label5;

        if $i3 == 2 goto label6;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child tag defining a drawable");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label6:
        $r9 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        goto label4;

     label7:
        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        virtualinvoke $r0.<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>($i0);

        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.LevelListDrawable $r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.LevelListDrawable$LevelListState $r2, $r3;
        int[] $r4;
        java.lang.Object $r5;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        $z0 = $r0.<android.graphics.drawable.LevelListDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != $r0 goto label2;

        $r2 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        $r3 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        $r4 = staticinvoke <android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$000(android.graphics.drawable.LevelListDrawable$LevelListState)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (int[]) $r5;

        staticinvoke <android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$002(android.graphics.drawable.LevelListDrawable$LevelListState,int[])>($r2, $r4);

        $r2 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        $r3 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        $r4 = staticinvoke <android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$100(android.graphics.drawable.LevelListDrawable$LevelListState)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (int[]) $r5;

        staticinvoke <android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$102(android.graphics.drawable.LevelListDrawable$LevelListState,int[])>($r2, $r4);

        $r0.<android.graphics.drawable.LevelListDrawable: boolean mMutated> = 1;

        return $r0;

     label1:
        return $r0;

     label2:
        return $r0;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.LevelListDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.LevelListDrawable$LevelListState $r1;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.LevelListDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.LevelListDrawable$LevelListState: int indexOfLevel(int)>($i0);

        $z0 = virtualinvoke $r0.<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>($i1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>($i0);

        return $z0;
    }
}
