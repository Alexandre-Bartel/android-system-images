public class org.bouncycastle.jce.provider.JCERSAPrivateCrtKey extends org.bouncycastle.jce.provider.JCERSAPrivateKey implements java.security.interfaces.RSAPrivateCrtKey
{
    private java.math.BigInteger crtCoefficient;
    private java.math.BigInteger primeExponentP;
    private java.math.BigInteger primeExponentQ;
    private java.math.BigInteger primeP;
    private java.math.BigInteger primeQ;
    private java.math.BigInteger publicExponent;

    void <init>(java.security.interfaces.RSAPrivateCrtKey)
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.security.interfaces.RSAPrivateCrtKey $r1;
        java.math.BigInteger $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 := @parameter0: java.security.interfaces.RSAPrivateCrtKey;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: void <init>()>();

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getModulus()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger modulus> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger publicExponent> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrivateExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger privateExponent> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeP()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeP> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeQ> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentP> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentQ> = $r2;

        $r2 = interfaceinvoke $r1.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger crtCoefficient> = $r2;

        return;
    }

    void <init>(java.security.spec.RSAPrivateCrtKeySpec)
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.security.spec.RSAPrivateCrtKeySpec $r1;
        java.math.BigInteger $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 := @parameter0: java.security.spec.RSAPrivateCrtKeySpec;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: void <init>()>();

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger modulus> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPublicExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger publicExponent> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger privateExponent> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeP()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeP> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeQ()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeQ> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentP> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentQ> = $r2;

        $r2 = virtualinvoke $r1.<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger crtCoefficient> = $r2;

        return;
    }

    void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure $r2;
        org.bouncycastle.asn1.DERObject $r3;
        org.bouncycastle.asn1.ASN1Sequence $r4;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 := @parameter0: org.bouncycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = new org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r3 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        $r4 = (org.bouncycastle.asn1.ASN1Sequence) $r3;

        specialinvoke $r2.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r4);

        specialinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: void <init>(org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure)>($r2);

        return;
    }

    void <init>(org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure)
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure $r1;
        java.math.BigInteger $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 := @parameter0: org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: void <init>()>();

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getModulus()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger modulus> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPublicExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger publicExponent> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrivateExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger privateExponent> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime1()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeP> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime2()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeQ> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent1()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentP> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent2()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentQ> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getCoefficient()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger crtCoefficient> = $r2;

        return;
    }

    void <init>(org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters)
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters $r1;
        java.math.BigInteger $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 := @parameter0: org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: void <init>(org.bouncycastle.crypto.params.RSAKeyParameters)>($r1);

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getPublicExponent()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger publicExponent> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getP()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeP> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getQ()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeQ> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getDP()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentP> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getDQ()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentQ> = $r2;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getQInv()>();

        $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger crtCoefficient> = $r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.security.interfaces.RSAPrivateCrtKey $r2;
        java.math.BigInteger $r3, $r4;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.security.interfaces.RSAPrivateCrtKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if $r1 != $r0 goto label2;

        return 1;

     label2:
        $r2 = (java.security.interfaces.RSAPrivateCrtKey) $r1;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger getModulus()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getModulus()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger getPrivateExponent()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrivateExponent()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeP()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeP()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>();

        $r4 = interfaceinvoke $r2.<java.security.interfaces.RSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.math.BigInteger getCrtCoefficient()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r1 = $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger crtCoefficient>;

        return r1;
    }

    public byte[] getEncoded()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.bouncycastle.asn1.DERObjectIdentifier $r3;
        org.bouncycastle.asn1.DERNull $r4;
        org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure $r5;
        java.math.BigInteger $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.bouncycastle.asn1.DERObject $r14;
        byte[] $r15;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 = new org.bouncycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier rsaEncryption>;

        $r4 = <org.bouncycastle.asn1.DERNull: org.bouncycastle.asn1.DERNull THE_ONE>;

        specialinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r3, $r4);

        $r5 = new org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r6 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger getModulus()>();

        $r7 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>();

        $r8 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger getPrivateExponent()>();

        $r9 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeP()>();

        $r10 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>();

        $r11 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>();

        $r12 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>();

        $r13 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>();

        specialinvoke $r5.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13);

        $r14 = virtualinvoke $r5.<org.bouncycastle.asn1.ASN1Encodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        specialinvoke $r1.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERObject)>($r2, $r14);

        $r15 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Encodable: byte[] getDEREncoded()>();

        return $r15;
    }

    public java.lang.String getFormat()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        return "PKCS#8";
    }

    public java.math.BigInteger getPrimeExponentP()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r1 = $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentP>;

        return r1;
    }

    public java.math.BigInteger getPrimeExponentQ()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r1 = $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeExponentQ>;

        return r1;
    }

    public java.math.BigInteger getPrimeP()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r1 = $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeP>;

        return r1;
    }

    public java.math.BigInteger getPrimeQ()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r1 = $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger primeQ>;

        return r1;
    }

    public java.math.BigInteger getPublicExponent()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.math.BigInteger r1;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r1 = $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger publicExponent>;

        return r1;
    }

    public java.lang.String toString()
    {
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey $r0;
        java.lang.StringBuffer $r1, $r3;
        java.lang.String $r2, $r5;
        java.math.BigInteger $r4;

        $r0 := @this: org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RSA Private CRT Key");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            modulus: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger getModulus()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    public exponent: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   private exponent: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateKey: java.math.BigInteger getPrivateExponent()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("             primeP: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeP()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("             primeQ: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     primeExponentP: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     primeExponentQ: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     crtCoefficient: ");

        $r4 = virtualinvoke $r0.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
