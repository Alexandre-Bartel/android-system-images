final class com.android.server.WindowManagerService$H extends android.os.Handler
{
    public static final int ADD_STARTING;
    public static final int ANIMATE;
    public static final int APP_FREEZE_TIMEOUT;
    public static final int APP_TRANSITION_TIMEOUT;
    public static final int COMPUTE_AND_SEND_NEW_CONFIGURATION;
    public static final int ENABLE_SCREEN;
    public static final int FINISHED_STARTING;
    public static final int FORCE_GC;
    public static final int HOLD_SCREEN_CHANGED;
    public static final int PERSIST_ANIMATION_SCALE;
    public static final int REMOVE_STARTING;
    public static final int REPORT_APPLICATION_TOKEN_WINDOWS;
    public static final int REPORT_FOCUS_CHANGE;
    public static final int REPORT_LOSING_FOCUS;
    public static final int WINDOW_FREEZE_TIMEOUT;
    private com.android.server.WindowManagerService$Session mLastReportedHold;
    final com.android.server.WindowManagerService this$0;

    public void <init>(com.android.server.WindowManagerService)
    {
        com.android.server.WindowManagerService$H $r0;
        com.android.server.WindowManagerService $r1;

        $r0 := @this: com.android.server.WindowManagerService$H;

        $r1 := @parameter0: com.android.server.WindowManagerService;

        $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0> = $r1;

        specialinvoke $r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.WindowManagerService$H $r0, $r40;
        android.os.Message $r1;
        int $i0, $i1, $i2;
        com.android.server.WindowManagerService $r2;
        java.util.HashMap $r3;
        com.android.server.WindowManagerService$WindowState $r4, $r5;
        java.lang.Throwable $r6, $r12, $r13, $r23, $r25, $r26, $r31, $r36, $r37, $r41, $r43;
        boolean $z0, $z1;
        java.util.ArrayList $r7, $r10;
        android.view.IWindow $r8;
        android.os.RemoteException $r9, $r29, $r35, $r45, $r46;
        java.lang.Object $r11;
        com.android.server.WindowManagerService$AppWindowToken $r14;
        com.android.server.WindowManagerService$StartingData $r15;
        android.view.View $r16;
        android.view.WindowManagerPolicy $r17;
        android.os.IBinder $r18;
        java.lang.String $r19;
        java.lang.CharSequence $r20;
        java.lang.Exception $r21, $r22, $r24, $r27;
        android.view.IApplicationToken $r28;
        java.lang.StringBuilder $r30;
        com.android.server.WindowManagerService$Session $r32, $r33;
        com.android.internal.app.IBatteryStats $r34;
        android.content.Context $r38;
        android.content.ContentResolver $r39;
        float $f0;
        java.lang.Runtime $r42;
        android.content.res.Configuration $r44;

        $r0 := @this: com.android.server.WindowManagerService$H;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 2: goto label002;
            case 3: goto label015;
            case 4: goto label026;
            case 5: goto label031;
            case 6: goto label045;
            case 7: goto label055;
            case 8: goto label066;
            case 9: goto label001;
            case 10: goto label001;
            case 11: goto label076;
            case 12: goto label083;
            case 13: goto label094;
            case 14: goto label100;
            case 15: goto label101;
            case 16: goto label110;
            case 17: goto label111;
            case 18: goto label118;
            default: goto label001;
        };

     label001:
        return;

     label002:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label003:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r4 = $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$WindowState mLastFocus>;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r5 = $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$WindowState mCurrentFocus>;

        if $r4 != $r5 goto label007;

        exitmonitor $r3;

     label004:
        return;

     label005:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label006:
        throw $r6;

     label007:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$WindowState mLastFocus> = $r5;

        if $r5 == null goto label008;

        if $r4 == null goto label008;

        $z0 = virtualinvoke $r5.<com.android.server.WindowManagerService$WindowState: boolean isDisplayedLw()>();

        if $z0 != 0 goto label008;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mLosingFocus>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = null;

     label008:
        exitmonitor $r3;

     label009:
        if $r4 == $r5 goto label121;

        if $r5 == null goto label011;

        $r8 = $r5.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $z0 = $r2.<com.android.server.WindowManagerService: boolean mInTouchMode>;

     label010:
        interfaceinvoke $r8.<android.view.IWindow: void windowFocusChanged(boolean,boolean)>(1, $z0);

     label011:
        if $r4 == null goto label122;

        $r8 = $r4.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $z0 = $r2.<com.android.server.WindowManagerService: boolean mInTouchMode>;

     label012:
        interfaceinvoke $r8.<android.view.IWindow: void windowFocusChanged(boolean,boolean)>(0, $z0);

     label013:
        return;

     label014:
        $r9 := @caughtexception;

        return;

     label015:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label016:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mLosingFocus>;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r2.<com.android.server.WindowManagerService: java.util.ArrayList mLosingFocus> = $r10;

        exitmonitor $r3;

     label017:
        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label018:
        if $i1 >= $i0 goto label123;

     label019:
        $r11 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

     label020:
        $r4 = (com.android.server.WindowManagerService$WindowState) $r11;

        $r8 = $r4.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

     label021:
        $z0 = $r2.<com.android.server.WindowManagerService: boolean mInTouchMode>;

        interfaceinvoke $r8.<android.view.IWindow: void windowFocusChanged(boolean,boolean)>(0, $z0);

     label022:
        $i1 = $i1 + 1;

        goto label018;

     label023:
        $r12 := @caughtexception;

     label024:
        exitmonitor $r3;

     label025:
        throw $r12;

     label026:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label027:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r2.<com.android.server.WindowManagerService: boolean mAnimationPending> = 0;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$1800(com.android.server.WindowManagerService)>($r2);

        exitmonitor $r3;

     label028:
        return;

     label029:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label030:
        throw $r13;

     label031:
        $r11 = $r1.<android.os.Message: java.lang.Object obj>;

        $r14 = (com.android.server.WindowManagerService$AppWindowToken) $r11;

        $r15 = $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData>;

        if $r15 == null goto label124;

        $r16 = null;

     label032:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r17 = $r2.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r18 = $r14.<com.android.server.WindowManagerService$WindowToken: android.os.IBinder token>;

        $r19 = $r15.<com.android.server.WindowManagerService$StartingData: java.lang.String pkg>;

        $i0 = $r15.<com.android.server.WindowManagerService$StartingData: int theme>;

        $r20 = $r15.<com.android.server.WindowManagerService$StartingData: java.lang.CharSequence nonLocalizedLabel>;

        $i1 = $r15.<com.android.server.WindowManagerService$StartingData: int labelRes>;

        $i2 = $r15.<com.android.server.WindowManagerService$StartingData: int icon>;

        $r16 = interfaceinvoke $r17.<android.view.WindowManagerPolicy: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int)>($r18, $r19, $i0, $r20, $i1, $i2);

     label033:
        if $r16 == null goto label125;

        $z0 = 0;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label034:
        $z1 = $r14.<com.android.server.WindowManagerService$AppWindowToken: boolean removed>;

        if $z1 != 0 goto label035;

        $r15 = $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData>;

        if $r15 != null goto label042;

     label035:
        $r4 = $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow>;

        if $r4 == null goto label036;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow> = null;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData> = null;

        $z0 = 1;

     label036:
        exitmonitor $r3;

     label037:
        if $z0 == 0 goto label126;

     label038:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r17 = $r2.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r18 = $r14.<com.android.server.WindowManagerService$WindowToken: android.os.IBinder token>;

        interfaceinvoke $r17.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>($r18, $r16);

     label039:
        return;

     label040:
        $r21 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", $r21);

        return;

     label041:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when adding starting window", $r22);

        goto label033;

     label042:
        $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.View startingView> = $r16;

        goto label036;

     label043:
        $r23 := @caughtexception;

        exitmonitor $r3;

     label044:
        throw $r23;

     label045:
        $r11 = $r1.<android.os.Message: java.lang.Object obj>;

        $r14 = (com.android.server.WindowManagerService$AppWindowToken) $r11;

        $r18 = null;

        $r16 = null;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label046:
        $r4 = $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow>;

        if $r4 == null goto label047;

        $r16 = $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.View startingView>;

        $r18 = $r14.<com.android.server.WindowManagerService$WindowToken: android.os.IBinder token>;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData> = null;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.View startingView> = null;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow> = null;

     label047:
        exitmonitor $r3;

     label048:
        if $r16 == null goto label127;

     label049:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r17 = $r2.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r17.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>($r18, $r16);

     label050:
        return;

     label051:
        $r24 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", $r24);

        return;

     label052:
        $r25 := @caughtexception;

     label053:
        exitmonitor $r3;

     label054:
        throw $r25;

     label055:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label056:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label060;

        exitmonitor $r3;

     label057:
        return;

     label058:
        $r26 := @caughtexception;

        exitmonitor $r3;

     label059:
        throw $r26;

     label060:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $i0 = $i0 - 1;

        $r11 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r14 = (com.android.server.WindowManagerService$AppWindowToken) $r11;

        $r4 = $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow>;

        if $r4 != null goto label062;

        exitmonitor $r3;

     label061:
        goto label055;

     label062:
        $r16 = $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.View startingView>;

        $r18 = $r14.<com.android.server.WindowManagerService$WindowToken: android.os.IBinder token>;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$StartingData startingData> = null;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.View startingView> = null;

        $r14.<com.android.server.WindowManagerService$AppWindowToken: com.android.server.WindowManagerService$WindowState startingWindow> = null;

        exitmonitor $r3;

     label063:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r17 = $r2.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r17.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>($r18, $r16);

     label064:
        goto label055;

     label065:
        $r27 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", $r27);

        goto label055;

     label066:
        $r11 = $r1.<android.os.Message: java.lang.Object obj>;

        $r14 = (com.android.server.WindowManagerService$AppWindowToken) $r11;

        $i0 = $r1.<android.os.Message: int arg1>;

        if $i0 == 0 goto label072;

        $z0 = 1;

     label067:
        $i0 = $r1.<android.os.Message: int arg2>;

        if $i0 == 0 goto label073;

     label068:
        if $z0 == 0 goto label074;

        $r28 = $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.IApplicationToken appToken>;

     label069:
        interfaceinvoke $r28.<android.view.IApplicationToken: void windowsVisible()>();

     label070:
        return;

     label071:
        $r29 := @caughtexception;

        return;

     label072:
        $z0 = 0;

        goto label067;

     label073:
        goto label068;

     label074:
        $r28 = $r14.<com.android.server.WindowManagerService$AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r28.<android.view.IApplicationToken: void windowsGone()>();

     label075:
        return;

     label076:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label077:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", "Window freeze timeout expired.");

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mWindows>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label078:
        if $i0 <= 0 goto label081;

        $i0 = $i0 + -1;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mWindows>;

        $r11 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.WindowManagerService$WindowState) $r11;

        $z0 = $r4.<com.android.server.WindowManagerService$WindowState: boolean mOrientationChanging>;

        if $z0 == 0 goto label078;

        $r4.<com.android.server.WindowManagerService$WindowState: boolean mOrientationChanging> = 0;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force clearing orientation change: ");

        $r30 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r19 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r19);

        goto label078;

     label079:
        $r31 := @caughtexception;

        exitmonitor $r3;

     label080:
        throw $r31;

     label081:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$1800(com.android.server.WindowManagerService)>($r2);

        exitmonitor $r3;

     label082:
        return;

     label083:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label084:
        $r32 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService$Session mLastReportedHold>;

        $r11 = $r1.<android.os.Message: java.lang.Object obj>;

        $r33 = (com.android.server.WindowManagerService$Session) $r11;

        $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService$Session mLastReportedHold> = $r33;

        exitmonitor $r3;

     label085:
        if $r32 == $r33 goto label128;

        if $r32 == null goto label087;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r34 = $r2.<com.android.server.WindowManagerService: com.android.internal.app.IBatteryStats mBatteryStats>;

        $i0 = $r32.<com.android.server.WindowManagerService$Session: int mUid>;

     label086:
        interfaceinvoke $r34.<com.android.internal.app.IBatteryStats: void noteStopWakelock(int,java.lang.String,int)>($i0, "window", 2);

     label087:
        if $r33 == null goto label129;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r34 = $r2.<com.android.server.WindowManagerService: com.android.internal.app.IBatteryStats mBatteryStats>;

     label088:
        $i0 = $r33.<com.android.server.WindowManagerService$Session: int mUid>;

        interfaceinvoke $r34.<com.android.internal.app.IBatteryStats: void noteStartWakelock(int,java.lang.String,int)>($i0, "window", 2);

     label089:
        return;

     label090:
        $r35 := @caughtexception;

        return;

     label091:
        $r36 := @caughtexception;

     label092:
        exitmonitor $r3;

     label093:
        throw $r36;

     label094:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label095:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $i0 = $r2.<com.android.server.WindowManagerService: int mNextAppTransition>;

        if $i0 == 0 goto label096;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r2.<com.android.server.WindowManagerService: boolean mAppTransitionReady> = 1;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r2.<com.android.server.WindowManagerService: boolean mAppTransitionTimeout> = 1;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$1800(com.android.server.WindowManagerService)>($r2);

     label096:
        exitmonitor $r3;

     label097:
        return;

     label098:
        $r37 := @caughtexception;

        exitmonitor $r3;

     label099:
        throw $r37;

     label100:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r38 = $r2.<com.android.server.WindowManagerService: android.content.Context mContext>;

        $r39 = virtualinvoke $r38.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $f0 = $r2.<com.android.server.WindowManagerService: float mWindowAnimationScale>;

        staticinvoke <android.provider.Settings$System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r39, "window_animation_scale", $f0);

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r38 = $r2.<com.android.server.WindowManagerService: android.content.Context mContext>;

        $r39 = virtualinvoke $r38.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $f0 = $r2.<com.android.server.WindowManagerService: float mTransitionAnimationScale>;

        staticinvoke <android.provider.Settings$System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r39, "transition_animation_scale", $f0);

        return;

     label101:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label102:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $z0 = $r2.<com.android.server.WindowManagerService: boolean mAnimationPending>;

        if $z0 == 0 goto label106;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r40 = $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$H mH>;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r0 = $r2.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$H mH>;

        $r1 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int)>(15);

        virtualinvoke $r40.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, 2000L);

        exitmonitor $r3;

     label103:
        return;

     label104:
        $r41 := @caughtexception;

        exitmonitor $r3;

     label105:
        throw $r41;

     label106:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $z0 = $r2.<com.android.server.WindowManagerService: boolean mDisplayFrozen>;

        if $z0 == 0 goto label108;

        exitmonitor $r3;

     label107:
        return;

     label108:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r2.<com.android.server.WindowManagerService: long mFreezeGcPending> = 0L;

        exitmonitor $r3;

     label109:
        $r42 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r42.<java.lang.Runtime: void gc()>();

        return;

     label110:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void performEnableScreen()>();

        return;

     label111:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r3 = $r2.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r3;

     label112:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", "App freeze timeout expired.");

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mAppTokens>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label113:
        if $i0 <= 0 goto label116;

        $i0 = $i0 + -1;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r7 = $r2.<com.android.server.WindowManagerService: java.util.ArrayList mAppTokens>;

        $r11 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r14 = (com.android.server.WindowManagerService$AppWindowToken) $r11;

        $z0 = $r14.<com.android.server.WindowManagerService$AppWindowToken: boolean freezingScreen>;

        if $z0 == 0 goto label113;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force clearing freeze: ");

        $r30 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r19 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r19);

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void unsetAppFreezingScreenLocked(com.android.server.WindowManagerService$AppWindowToken,boolean,boolean)>($r14, 1, 1);

        goto label113;

     label114:
        $r43 := @caughtexception;

        exitmonitor $r3;

     label115:
        throw $r43;

     label116:
        exitmonitor $r3;

     label117:
        return;

     label118:
        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        $r44 = virtualinvoke $r2.<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>(null, null);

        if $r44 == null goto label130;

        $r2 = $r0.<com.android.server.WindowManagerService$H: com.android.server.WindowManagerService this$0>;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void sendNewConfiguration()>();

        return;

     label119:
        $r45 := @caughtexception;

        goto label022;

     label120:
        $r46 := @caughtexception;

        goto label011;

     label121:
        return;

     label122:
        return;

     label123:
        return;

     label124:
        return;

     label125:
        return;

     label126:
        return;

     label127:
        return;

     label128:
        return;

     label129:
        return;

     label130:
        return;

        catch java.lang.Throwable from label003 to label004 with label005;
        catch java.lang.Throwable from label005 to label006 with label005;
        catch java.lang.Throwable from label007 to label009 with label005;
        catch android.os.RemoteException from label010 to label011 with label120;
        catch android.os.RemoteException from label012 to label013 with label014;
        catch java.lang.Throwable from label016 to label017 with label023;
        catch android.os.RemoteException from label019 to label020 with label119;
        catch android.os.RemoteException from label021 to label022 with label119;
        catch java.lang.Throwable from label024 to label025 with label023;
        catch java.lang.Throwable from label027 to label028 with label029;
        catch java.lang.Throwable from label029 to label030 with label029;
        catch java.lang.Exception from label032 to label033 with label041;
        catch java.lang.Throwable from label034 to label037 with label043;
        catch java.lang.Exception from label038 to label039 with label040;
        catch java.lang.Throwable from label042 to label044 with label043;
        catch java.lang.Throwable from label046 to label048 with label052;
        catch java.lang.Exception from label049 to label050 with label051;
        catch java.lang.Throwable from label053 to label054 with label052;
        catch java.lang.Throwable from label056 to label057 with label058;
        catch java.lang.Throwable from label058 to label059 with label058;
        catch java.lang.Throwable from label060 to label061 with label058;
        catch java.lang.Throwable from label062 to label063 with label058;
        catch java.lang.Exception from label063 to label064 with label065;
        catch android.os.RemoteException from label069 to label070 with label071;
        catch android.os.RemoteException from label074 to label075 with label071;
        catch java.lang.Throwable from label077 to label080 with label079;
        catch java.lang.Throwable from label081 to label082 with label079;
        catch java.lang.Throwable from label084 to label085 with label091;
        catch android.os.RemoteException from label086 to label087 with label090;
        catch android.os.RemoteException from label088 to label089 with label090;
        catch java.lang.Throwable from label092 to label093 with label091;
        catch java.lang.Throwable from label095 to label097 with label098;
        catch java.lang.Throwable from label098 to label099 with label098;
        catch java.lang.Throwable from label102 to label103 with label104;
        catch java.lang.Throwable from label104 to label105 with label104;
        catch java.lang.Throwable from label106 to label107 with label104;
        catch java.lang.Throwable from label108 to label109 with label104;
        catch java.lang.Throwable from label112 to label115 with label114;
        catch java.lang.Throwable from label116 to label117 with label114;
    }

    public static void <clinit>()
    {
        <com.android.server.WindowManagerService$H: int WINDOW_FREEZE_TIMEOUT> = 11;

        <com.android.server.WindowManagerService$H: int REPORT_LOSING_FOCUS> = 3;

        <com.android.server.WindowManagerService$H: int REPORT_FOCUS_CHANGE> = 2;

        <com.android.server.WindowManagerService$H: int REPORT_APPLICATION_TOKEN_WINDOWS> = 8;

        <com.android.server.WindowManagerService$H: int REMOVE_STARTING> = 6;

        <com.android.server.WindowManagerService$H: int PERSIST_ANIMATION_SCALE> = 14;

        <com.android.server.WindowManagerService$H: int HOLD_SCREEN_CHANGED> = 12;

        <com.android.server.WindowManagerService$H: int FORCE_GC> = 15;

        <com.android.server.WindowManagerService$H: int FINISHED_STARTING> = 7;

        <com.android.server.WindowManagerService$H: int ENABLE_SCREEN> = 16;

        <com.android.server.WindowManagerService$H: int COMPUTE_AND_SEND_NEW_CONFIGURATION> = 18;

        <com.android.server.WindowManagerService$H: int APP_TRANSITION_TIMEOUT> = 13;

        <com.android.server.WindowManagerService$H: int APP_FREEZE_TIMEOUT> = 17;

        <com.android.server.WindowManagerService$H: int ANIMATE> = 4;

        <com.android.server.WindowManagerService$H: int ADD_STARTING> = 5;

        return;
    }
}
