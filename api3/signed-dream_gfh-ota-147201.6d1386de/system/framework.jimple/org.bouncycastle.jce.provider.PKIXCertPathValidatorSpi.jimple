public class org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi extends java.security.cert.CertPathValidatorSpi
{
    private static final java.lang.String ANY_POLICY;
    private static final java.lang.String BASIC_CONSTRAINTS;
    private static final java.lang.String CERTIFICATE_POLICIES;
    private static final java.lang.String CRL_NUMBER;
    private static final int CRL_SIGN;
    private static final java.lang.String DELTA_CRL_INDICATOR;
    private static final java.lang.String INHIBIT_ANY_POLICY;
    private static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    private static final int KEY_CERT_SIGN;
    private static final java.lang.String KEY_USAGE;
    private static final java.lang.String NAME_CONSTRAINTS;
    private static final java.lang.String POLICY_CONSTRAINTS;
    private static final java.lang.String POLICY_MAPPINGS;
    private static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    private static final java.lang.String[] crlReasons;

    static void <clinit>()
    {
        org.bouncycastle.asn1.DERObjectIdentifier $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: int KEY_CERT_SIGN> = 5;

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: int CRL_SIGN> = 6;

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CertificatePolicies>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier PolicyMappings>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_MAPPINGS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier InhibitAnyPolicy>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String INHIBIT_ANY_POLICY> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier IssuingDistributionPoint>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier DeltaCRLIndicator>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String DELTA_CRL_INDICATOR> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier PolicyConstraints>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_CONSTRAINTS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier BasicConstraints>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String BASIC_CONSTRAINTS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier SubjectAlternativeName>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier NameConstraints>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String NAME_CONSTRAINTS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier KeyUsage>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String KEY_USAGE> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CRLNumber>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CRL_NUMBER> = $r1;

        $r2 = newarray (java.lang.String)[11];

        $r2[0] = "unspecified";

        $r2[1] = "keyCompromise";

        $r2[2] = "cACompromise";

        $r2[3] = "affiliationChanged";

        $r2[4] = "superseded";

        $r2[5] = "cessationOfOperation";

        $r2[6] = "certificateHold";

        $r2[7] = "unknown";

        $r2[8] = "removeFromCRL";

        $r2[9] = "privilegeWithdrawn";

        $r2[10] = "aACompromise";

        <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String[] crlReasons> = $r2;

        return;
    }

    public void <init>()
    {
        org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi $r0;

        $r0 := @this: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi;

        specialinvoke $r0.<java.security.cert.CertPathValidatorSpi: void <init>()>();

        return;
    }

    private void checkCRLs(java.security.cert.PKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.PKIXParameters $r0;
        java.security.cert.X509Certificate $r1, $r3;
        java.util.Date $r2, $r14, $r15;
        java.security.PublicKey $r4;
        java.security.cert.X509CRLSelector $r5;
        org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi $r6;
        javax.security.auth.x500.X500Principal $r7;
        byte[] $r8;
        java.util.List $r9;
        java.util.Collection $r10;
        java.util.Iterator $r11, $r33;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12;
        java.security.cert.X509CRL $r13;
        boolean[] $r16;
        int $i0;
        org.bouncycastle.jce.provider.AnnotatedException $r17;
        java.lang.StringBuilder $r18;
        java.lang.String $r19, $r24, $r28;
        java.io.IOException $r20, $r34;
        java.math.BigInteger $r21, $r32;
        java.security.cert.X509CRLEntry $r22;
        org.bouncycastle.asn1.DERObjectIdentifier $r23;
        org.bouncycastle.asn1.DERObject $r25, $r30;
        org.bouncycastle.asn1.DEREnumerated $r26;
        java.lang.String[] $r27;
        java.lang.Exception $r29;
        org.bouncycastle.asn1.DERInteger $r31;
        org.bouncycastle.asn1.x509.IssuingDistributionPoint $r35;
        org.bouncycastle.asn1.x509.BasicConstraints $r36;

        $r6 := @this: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi;

        $r0 := @parameter0: java.security.cert.PKIXParameters;

        $r1 := @parameter1: java.security.cert.X509Certificate;

        $r2 := @parameter2: java.util.Date;

        $r3 := @parameter3: java.security.cert.X509Certificate;

        $r4 := @parameter4: java.security.PublicKey;

        $r5 = new java.security.cert.X509CRLSelector;

        specialinvoke $r5.<java.security.cert.X509CRLSelector: void <init>()>();

     label01:
        $r7 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.security.cert.X509Certificate)>($r1);

        $r8 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r5.<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>($r8);

     label02:
        virtualinvoke $r5.<java.security.cert.X509CRLSelector: void setCertificateChecking(java.security.cert.X509Certificate)>($r1);

        $r9 = virtualinvoke $r0.<java.security.cert.PKIXParameters: java.util.List getCertStores()>();

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(java.security.cert.X509CRLSelector,java.util.List)>($r5, $r9);

        $r11 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = 0;

     label03:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.security.cert.X509CRL) $r12;

        $r14 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        $r15 = virtualinvoke $r13.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        $z1 = virtualinvoke $r14.<java.util.Date: boolean after(java.util.Date)>($r15);

        if $z1 == 0 goto label03;

        $r14 = virtualinvoke $r13.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        if $r14 == null goto label04;

        $r14 = virtualinvoke $r13.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        $z1 = virtualinvoke $r2.<java.util.Date: boolean before(java.util.Date)>($r14);

        if $z1 == 0 goto label05;

     label04:
        $z0 = 1;

     label05:
        if $r3 == null goto label08;

        $r16 = virtualinvoke $r3.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r16 == null goto label08;

        $i0 = lengthof $r16;

        if $i0 < 7 goto label06;

        $z1 = $r16[6];

        if $z1 != 0 goto label08;

     label06:
        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issuer certificate keyusage extension does not permit crl signing.\n");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r19);

        throw $r17;

     label07:
        $r20 := @caughtexception;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot extract issuer from certificate: ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Exception)>($r19, $r20);

        throw $r17;

     label08:
        virtualinvoke $r13.<java.security.cert.X509CRL: void verify(java.security.PublicKey,java.lang.String)>($r4, "BC");

     label09:
        $r21 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $r22 = virtualinvoke $r13.<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r21);

        if $r22 == null goto label13;

        $r14 = virtualinvoke $r22.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        $z1 = virtualinvoke $r2.<java.util.Date: boolean before(java.util.Date)>($r14);

        if $z1 != 0 goto label13;

        $r19 = null;

        $z0 = virtualinvoke $r22.<java.security.cert.X509CRLEntry: boolean hasExtensions()>();

        if $z0 == 0 goto label10;

        $r23 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier ReasonCode>;

        $r24 = virtualinvoke $r23.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r25 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r22, $r24);

        $r26 = staticinvoke <org.bouncycastle.asn1.DEREnumerated: org.bouncycastle.asn1.DEREnumerated getInstance(java.lang.Object)>($r25);

        if $r26 == null goto label10;

        $r27 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String[] crlReasons>;

        $r21 = virtualinvoke $r26.<org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r21.<java.math.BigInteger: int intValue()>();

        $r19 = $r27[$i0];

     label10:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate revocation after ");

        $r2 = virtualinvoke $r22.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = $r24;

        if $r19 == null goto label11;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r28 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r28);

        throw $r17;

     label12:
        $r29 := @caughtexception;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t verify CRL: ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Exception)>($r19, $r29);

        throw $r17;

     label13:
        $r19 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r25 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r19);

        $r19 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String DELTA_CRL_INDICATOR>;

        $r30 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r19);

        if $r30 == null goto label20;

        $r5 = new java.security.cert.X509CRLSelector;

        specialinvoke $r5.<java.security.cert.X509CRLSelector: void <init>()>();

     label14:
        $r7 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>($r13);

        $r8 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r5.<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>($r8);

     label15:
        $r31 = (org.bouncycastle.asn1.DERInteger) $r30;

        $r21 = virtualinvoke $r31.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getPositiveValue()>();

        virtualinvoke $r5.<java.security.cert.X509CRLSelector: void setMinCRLNumber(java.math.BigInteger)>($r21);

        $r19 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CRL_NUMBER>;

        $r30 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r19);

        $r31 = (org.bouncycastle.asn1.DERInteger) $r30;

        $r21 = virtualinvoke $r31.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getPositiveValue()>();

        $r32 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r21 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r32);

        virtualinvoke $r5.<java.security.cert.X509CRLSelector: void setMaxCRLNumber(java.math.BigInteger)>($r21);

        $z1 = 0;

        $r9 = virtualinvoke $r0.<java.security.cert.PKIXParameters: java.util.List getCertStores()>();

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(java.security.cert.X509CRLSelector,java.util.List)>($r5, $r9);

        $r33 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r12 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.security.cert.X509CRL) $r12;

        $r19 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r30 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r19);

        if $r25 != null goto label19;

        if $r30 != null goto label16;

        $z1 = 1;

     label17:
        if $z1 != 0 goto label20;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No base CRL for delta CRL");

        throw $r17;

     label18:
        $r34 := @caughtexception;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t extract issuer from certificate: ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Exception)>($r19, $r34);

        throw $r17;

     label19:
        $z2 = virtualinvoke $r25.<org.bouncycastle.asn1.DERObject: boolean equals(java.lang.Object)>($r30);

        if $z2 == 0 goto label16;

        $z1 = 1;

        goto label17;

     label20:
        if $r25 == null goto label03;

        $r35 = staticinvoke <org.bouncycastle.asn1.x509.IssuingDistributionPoint: org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r25);

        $r19 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String BASIC_CONSTRAINTS>;

        $r25 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r1, $r19);

        $r36 = staticinvoke <org.bouncycastle.asn1.x509.BasicConstraints: org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r25);

        $z1 = virtualinvoke $r35.<org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts()>();

        if $z1 == 0 goto label21;

        if $r36 == null goto label21;

        $z1 = virtualinvoke $r36.<org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z1 == 0 goto label21;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CA Cert CRL only contains user certificates");

        throw $r17;

     label21:
        $z1 = virtualinvoke $r35.<org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsCACerts()>();

        if $z1 == 0 goto label23;

        if $r36 == null goto label22;

        $z1 = virtualinvoke $r36.<org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z1 != 0 goto label23;

     label22:
        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("End CRL only contains CA certificates");

        throw $r17;

     label23:
        $z1 = virtualinvoke $r35.<org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts()>();

        if $z1 == 0 goto label03;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("onlyContainsAttributeCerts boolean is asserted");

        throw $r17;

     label24:
        if $z0 != 0 goto label25;

        $r17 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("no valid CRL found");

        throw $r17;

     label25:
        return;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.io.IOException from label14 to label15 with label18;
    }

    public java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) throws java.security.cert.CertPathValidatorException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.CertPath $r0;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r1, $r22, $r61, r84;
        java.util.ArrayList $r2, $r4, r83;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.HashSet $r3, $r8, $r65, r86;
        org.bouncycastle.asn1.ASN1InputStream $r5, r82;
        java.util.HashMap $r6, r85;
        org.bouncycastle.asn1.x509.NameConstraints $r7, r87;
        org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi $r9;
        java.security.cert.CertPathParameters $r10;
        boolean $z0, $z1, $z2;
        java.security.cert.PKIXParameters $r12;
        java.util.Set $r13, $r19, $r23, $r24, $r25, $r26, $r27, $r60, $r62;
        java.util.List $r14, $r39;
        java.security.cert.CertPathValidatorException $r15, $r74, r88;
        java.util.Date $r16;
        java.lang.Object $r17;
        java.security.cert.X509Certificate $r18, $r28, $r29;
        java.security.cert.TrustAnchor $r20;
        java.util.ArrayList[] $r21;
        javax.security.auth.x500.X500Principal $r30, $r32;
        java.security.PublicKey $r31, $r33;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r34;
        java.security.cert.CertSelector $r35;
        java.lang.String $r36, $r59, $r66;
        java.lang.IllegalArgumentException $r37, $r76;
        java.lang.StringBuilder $r38, r81;
        java.util.Iterator $r40, $r63;
        java.security.cert.PKIXCertPathChecker $r41;
        org.bouncycastle.jce.provider.AnnotatedException $r42, $r78;
        java.lang.Exception $r43;
        java.security.GeneralSecurityException $r44;
        java.security.cert.CertificateExpiredException $r45;
        java.security.cert.CertificateNotYetValidException $r46;
        byte[] $r47;
        org.bouncycastle.asn1.DERObject $r48;
        org.bouncycastle.asn1.ASN1Sequence $r49, $r54;
        org.bouncycastle.asn1.DEREncodable $r50;
        org.bouncycastle.asn1.ASN1TaggedObject $r51;
        java.io.IOException $r52;
        org.bouncycastle.asn1.DERIA5String $r53;
        org.bouncycastle.asn1.ASN1OctetString $r55;
        java.util.Enumeration $r56;
        org.bouncycastle.asn1.x509.PolicyInformation $r57;
        org.bouncycastle.asn1.DERObjectIdentifier $r58, $r64;
        java.security.cert.PolicyNode $r67;
        org.bouncycastle.asn1.x509.GeneralSubtree $r68;
        org.bouncycastle.asn1.x509.GeneralName $r69;
        org.bouncycastle.asn1.DERInteger $r70;
        java.math.BigInteger $r71;
        org.bouncycastle.asn1.x509.BasicConstraints $r72;
        boolean[] $r73;
        java.lang.Throwable $r75;
        java.security.Principal $r77;
        java.security.InvalidAlgorithmParameterException r80;
        java.security.cert.PKIXCertPathValidatorResult r89;

        $r9 := @this: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi;

        $r0 := @parameter0: java.security.cert.CertPath;

        $r10 := @parameter1: java.security.cert.CertPathParameters;

        $z0 = $r10 instanceof java.security.cert.PKIXParameters;

        if $z0 != 0 goto label001;

        r80 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r80.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params must be a PKIXParameters instance");

        throw r80;

     label001:
        $r12 = (java.security.cert.PKIXParameters) $r10;

        $r13 = virtualinvoke $r12.<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>();

        if $r13 != null goto label002;

        r80 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke r80.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("trustAnchors is null, this is not allowed for path validation");

        throw r80;

     label002:
        $r14 = virtualinvoke $r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

        $z0 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label003;

        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("CertPath is empty", null, $r0, 0);

        throw $r74;

     label003:
        $r16 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>($r12);

        $r13 = virtualinvoke $r12.<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()>();

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        $i2 = $i2 - 1;

        $r17 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i2);

        $r18 = (java.security.cert.X509Certificate) $r17;

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        $i2 = $i2 - 1;

        $r19 = virtualinvoke $r12.<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>();

        $r20 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.security.cert.CertPath,int,java.util.Set)>($r18, $r0, $i2, $r19);

        if $r20 != null goto label004;

        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("TrustAnchor for CertPath not found.", null, $r0, -1);

        throw $r74;

     label004:
        $i2 = $i1 + 1;

        $r21 = newarray (java.util.ArrayList)[$i2];

        $i2 = 0;

     label005:
        $i3 = lengthof $r21;

        if $i2 >= $i3 goto label006;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r21[$i2] = $r2;

        $i2 = $i2 + 1;

        goto label005;

     label006:
        $r3 = new java.util.HashSet;

        $r8 = $r3;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("2.5.29.32.0");

        $r61 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r22 = $r61;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r65 = new java.util.HashSet;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

        specialinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r2, 0, $r8, null, $r65, "2.5.29.32.0", 0);

        $r4 = $r21[0];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r8 = new java.util.HashSet;

        $r19 = $r8;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r8 = new java.util.HashSet;

        $r23 = $r8;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r8 = new java.util.HashSet;

        $r24 = $r8;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r8 = new java.util.HashSet;

        $r25 = $r8;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r8 = new java.util.HashSet;

        $r26 = $r8;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r8 = new java.util.HashSet;

        $r27 = $r8;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r8 = null;

        $z0 = virtualinvoke $r12.<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z0 == 0 goto label013;

        $i2 = 0;

     label007:
        $z0 = virtualinvoke $r12.<java.security.cert.PKIXParameters: boolean isAnyPolicyInhibited()>();

        if $z0 == 0 goto label014;

        $i4 = 0;

     label008:
        $z0 = virtualinvoke $r12.<java.security.cert.PKIXParameters: boolean isPolicyMappingInhibited()>();

        if $z0 == 0 goto label015;

        $i5 = 0;

     label009:
        $r28 = virtualinvoke $r20.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $r29 = $r28;

        if $r28 == null goto label016;

     label010:
        $r30 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>($r28);

        $r31 = virtualinvoke $r28.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

     label011:
        $z0 = 0;

        $r32 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>($r18);

        $z1 = virtualinvoke $r30.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r32);

        if $z1 == 0 goto label012;

        $r33 = virtualinvoke $r18.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $z1 = virtualinvoke $r31.<java.lang.Object: boolean equals(java.lang.Object)>($r33);

        if $z1 == 0 goto label012;

        $z0 = 1;

     label012:
        $r34 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>($r31);

        virtualinvoke $r34.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        virtualinvoke $r34.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $i6 = $i1;

        $r35 = virtualinvoke $r12.<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()>();

        if $r35 == null goto label020;

        $r35 = virtualinvoke $r12.<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()>();

        $r17 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (java.security.cert.X509Certificate) $r17;

        $z1 = interfaceinvoke $r35.<java.security.cert.CertSelector: boolean match(java.security.cert.Certificate)>($r18);

        if $z1 != 0 goto label020;

        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("target certificate in certpath does not match targetcertconstraints", null, $r0, 0);

        throw $r74;

     label013:
        $i2 = $i1 + 1;

        goto label007;

     label014:
        $i4 = $i1 + 1;

        goto label008;

     label015:
        $i5 = $i1 + 1;

        goto label009;

     label016:
        $r32 = new javax.security.auth.x500.X500Principal;

        $r30 = $r32;

     label017:
        $r36 = virtualinvoke $r20.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r32.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r36);

        $r31 = virtualinvoke $r20.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label018:
        goto label011;

     label019:
        $r37 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrustAnchor subjectDN: ");

        $r36 = virtualinvoke $r37.<java.lang.Throwable: java.lang.String toString()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r36);

        throw $r74;

     label020:
        $r39 = virtualinvoke $r12.<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()>();

        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label021:
        $z1 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label022;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r41 = (java.security.cert.PKIXCertPathChecker) $r17;

        virtualinvoke $r41.<java.security.cert.PKIXCertPathChecker: void init(boolean)>(0);

        goto label021;

     label022:
        $r18 = null;

        $i3 = interfaceinvoke $r14.<java.util.List: int size()>();

        $i3 = $i3 - 1;

     label023:
        if $i3 < 0 goto label266;

        $i0 = $i1 - $i3;

     label024:
        $r17 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i3);

     label025:
        $r28 = (java.security.cert.X509Certificate) $r17;

        $r18 = $r28;

     label026:
        virtualinvoke $r28.<java.security.cert.Certificate: void verify(java.security.PublicKey,java.lang.String)>($r31, "BC");

     label027:
        virtualinvoke $r28.<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>($r16);

     label028:
        $z1 = virtualinvoke $r12.<java.security.cert.PKIXParameters: boolean isRevocationEnabled()>();

        if $z1 == 0 goto label029;

        specialinvoke $r9.<org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey)>($r12, $r28, $r16, $r29, $r31);

     label029:
        $r32 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.security.cert.X509Certificate)>($r28);

        $z1 = virtualinvoke $r32.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r30);

        if $z1 != 0 goto label043;

     label030:
        $r74 = new java.security.cert.CertPathValidatorException;

        r81 = new java.lang.StringBuilder;

     label031:
        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IssuerName(");

        $r32 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.security.cert.X509Certificate)>($r28);

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not match SubjectName(");

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") of signing certificate");

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, null, $r0, $i3);

     label032:
        throw $r74;

     label033:
        $r42 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

        $r36 = virtualinvoke $r42.<java.lang.Throwable: java.lang.String getMessage()>();

        $r43 = virtualinvoke $r42.<org.bouncycastle.jce.provider.AnnotatedException: java.lang.Exception getUnderlyingException()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, $r43, $r0, $i3);

        throw $r74;

     label034:
        $r44 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

     label035:
        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not validate certificate signature.", $r44, $r0, $i3);

     label036:
        throw $r74;

     label037:
        $r45 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

        r81 = new java.lang.StringBuilder;

     label038:
        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not validate certificate: ");

        $r36 = virtualinvoke $r45.<java.lang.Throwable: java.lang.String getMessage()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, $r45, $r0, $i3);

     label039:
        throw $r74;

     label040:
        $r46 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

        r81 = new java.lang.StringBuilder;

     label041:
        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not validate certificate: ");

        $r36 = virtualinvoke $r46.<java.lang.Throwable: java.lang.String getMessage()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, $r46, $r0, $i3);

     label042:
        throw $r74;

     label043:
        $z1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r28);

        if $z1 == 0 goto label044;

        if $i0 < $i1 goto label064;

     label044:
        $r30 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>($r28);

     label045:
        r82 = new org.bouncycastle.asn1.ASN1InputStream;

     label046:
        $r5 = r82;

        $r47 = virtualinvoke $r30.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke r82.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r47);

     label047:
        $r48 = virtualinvoke $r5.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

     label048:
        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

     label049:
        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkPermittedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)>($r19, $r49);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkExcludedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)>($r25, $r49);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

     label050:
        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

        if $r49 == null goto label064;

     label051:
        $i7 = 0;

     label052:
        $i8 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        if $i7 >= $i8 goto label064;

        $r50 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i7);

        $r51 = (org.bouncycastle.asn1.ASN1TaggedObject) $r50;

        $i8 = virtualinvoke $r51.<org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i8)
        {
            case 1: goto label058;
            case 4: goto label060;
            case 7: goto label062;
            default: goto label053;
        };

     label053:
        $i7 = $i7 + 1;

     label054:
        goto label052;

     label055:
        $r52 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

     label056:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("exception extracting subject name when checking subtrees");

     label057:
        throw $r15;

     label058:
        $r53 = staticinvoke <org.bouncycastle.asn1.DERIA5String: org.bouncycastle.asn1.DERIA5String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)>($r51, 1);

        $r36 = virtualinvoke $r53.<org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkPermittedEmail(java.util.Set,java.lang.String)>($r23, $r36);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkExcludedEmail(java.util.Set,java.lang.String)>($r26, $r36);

     label059:
        goto label053;

     label060:
        $r54 = staticinvoke <org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.ASN1Sequence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)>($r51, 1);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkPermittedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)>($r19, $r54);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkExcludedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)>($r25, $r54);

     label061:
        goto label053;

     label062:
        $r55 = staticinvoke <org.bouncycastle.asn1.ASN1OctetString: org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)>($r51, 1);

        $r47 = virtualinvoke $r55.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkPermittedIP(java.util.Set,byte[])>($r24, $r47);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void checkExcludedIP(java.util.Set,byte[])>($r27, $r47);

     label063:
        goto label053;

     label064:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

     label065:
        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

        if $r49 == null goto label116;

     label066:
        if $r22 == null goto label116;

        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label067:
        $r65 = new java.util.HashSet;

     label068:
        $r3 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

     label069:
        $z1 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label070;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r57 = staticinvoke <org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r17);

        $r58 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.DERObjectIdentifier getPolicyIdentifier()>();

        $r36 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r36);

        $r36 = "2.5.29.32.0";

        $r59 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z1 != 0 goto label069;

        $r54 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        $r60 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)>($r54);

        $z1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean processCertD1i(int,java.util.List[],org.bouncycastle.asn1.DERObjectIdentifier,java.util.Set)>($i0, $r21, $r58, $r60);

        if $z1 != 0 goto label069;

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void processCertD1ii(int,java.util.List[],org.bouncycastle.asn1.DERObjectIdentifier,java.util.Set)>($i0, $r21, $r58, $r60);

        goto label069;

     label070:
        if $r8 == null goto label071;

        $z1 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z1 == 0 goto label084;

     label071:
        $r8 = $r3;

     label072:
        if $i4 > 0 goto label073;

        if $i0 >= $i1 goto label099;

        $z1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r28);

        if $z1 == 0 goto label099;

     label073:
        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label074:
        $z1 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label099;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r57 = staticinvoke <org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r17);

        $r36 = "2.5.29.32.0";

        $r58 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.DERObjectIdentifier getPolicyIdentifier()>();

        $r59 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z1 == 0 goto label074;

        $r54 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        $r60 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)>($r54);

     label075:
        $i7 = $i0 - 1;

        $r4 = $r21[$i7];

     label076:
        $i7 = 0;

     label077:
        $i8 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i7 >= $i8 goto label099;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i7);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r62 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r40 = interfaceinvoke $r62.<java.util.Set: java.util.Iterator iterator()>();

     label078:
        $z1 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label097;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

     label079:
        $z1 = $r17 instanceof java.lang.String;

        if $z1 == 0 goto label089;

        $r36 = (java.lang.String) $r17;

     label080:
        $z1 = 0;

        $r63 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label081:
        $z2 = interfaceinvoke $r63.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label092;

        $r17 = interfaceinvoke $r63.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r59 = virtualinvoke $r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z2 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z2 == 0 goto label081;

     label082:
        $z1 = 1;

     label083:
        goto label081;

     label084:
        $r40 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label085:
        $r65 = new java.util.HashSet;

     label086:
        $r8 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

     label087:
        $z1 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label088;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r17);

        if $z1 == 0 goto label087;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label087;

     label088:
        goto label072;

     label089:
        $z1 = $r17 instanceof org.bouncycastle.asn1.DERObjectIdentifier;

     label090:
        if $z1 == 0 goto label078;

        $r58 = (org.bouncycastle.asn1.DERObjectIdentifier) $r17;

        $r36 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

     label091:
        goto label080;

     label092:
        if $z1 != 0 goto label078;

     label093:
        $r65 = new java.util.HashSet;

     label094:
        $r3 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r36);

     label095:
        r84 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r1 = r84;

        r83 = new java.util.ArrayList;

     label096:
        specialinvoke r83.<java.util.ArrayList: void <init>()>();

        specialinvoke r84.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>(r83, $i0, $r3, $r61, $r60, $r36, 0);

        virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r1);

        $r2 = $r21[$i0];

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label078;

     label097:
        $i7 = $i7 + 1;

     label098:
        goto label077;

     label099:
        $i7 = $i0 - 1;

     label100:
        if $i7 < 0 goto label108;

     label101:
        $r4 = $r21[$i7];

     label102:
        $i8 = 0;

     label103:
        $i9 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i8 >= $i9 goto label105;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i8);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $z1 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z1 != 0 goto label106;

        $r61 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r22, $r21, $r61);

     label104:
        $r22 = $r61;

        if $r61 != null goto label106;

     label105:
        $i7 = $i7 + -1;

        goto label100;

     label106:
        $i8 = $i8 + 1;

     label107:
        goto label103;

     label108:
        $r60 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

     label109:
        if $r60 == null goto label116;

     label110:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES>;

        $z1 = interfaceinvoke $r60.<java.util.Set: boolean contains(java.lang.Object)>($r36);

     label111:
        $r4 = $r21[$i0];

     label112:
        $i7 = 0;

     label113:
        $i8 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i7 >= $i8 goto label116;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i7);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: void setCritical(boolean)>($z1);

     label114:
        $i7 = $i7 + 1;

     label115:
        goto label113;

     label116:
        if $r49 != null goto label117;

        $r22 = null;

     label117:
        if $i2 > 0 goto label120;

        if $r22 != null goto label120;

        $r74 = new java.security.cert.CertPathValidatorException;

     label118:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("No valid policy tree found when one expected.");

     label119:
        throw $r15;

     label120:
        if $i0 == $i1 goto label258;

     label121:
        if $r28 == null goto label126;

        $i7 = virtualinvoke $r28.<java.security.cert.X509Certificate: int getVersion()>();

     label122:
        if $i7 != 1 goto label126;

        if $i0 != 1 goto label123;

        if $z0 != 0 goto label126;

     label123:
        $r74 = new java.security.cert.CertPathValidatorException;

     label124:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Version 1 certs can\'t be used as intermediate certificates");

     label125:
        throw $r15;

     label126:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_MAPPINGS>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

     label127:
        if $r48 == null goto label141;

        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

     label128:
        $i7 = 0;

     label129:
        $i8 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        if $i7 >= $i8 goto label141;

        $r50 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i7);

        $r54 = (org.bouncycastle.asn1.ASN1Sequence) $r50;

        $r50 = virtualinvoke $r54.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r58 = (org.bouncycastle.asn1.DERObjectIdentifier) $r50;

        $r50 = virtualinvoke $r54.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(1);

     label130:
        $r64 = (org.bouncycastle.asn1.DERObjectIdentifier) $r50;

     label131:
        $r36 = "2.5.29.32.0";

        $r59 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

     label132:
        if $z1 == 0 goto label135;

        $r74 = new java.security.cert.CertPathValidatorException;

     label133:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("IssuerDomainPolicy is anyPolicy");

     label134:
        throw $r15;

     label135:
        $r36 = "2.5.29.32.0";

        $r59 = virtualinvoke $r64.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

     label136:
        if $z1 == 0 goto label139;

        $r74 = new java.security.cert.CertPathValidatorException;

     label137:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("SubjectDomainPolicy is anyPolicy");

     label138:
        throw $r15;

     label139:
        $i7 = $i7 + 1;

     label140:
        goto label129;

     label141:
        if $r48 == null goto label182;

        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

        r85 = new java.util.HashMap;

     label142:
        $r6 = r85;

        specialinvoke r85.<java.util.HashMap: void <init>()>();

     label143:
        $r65 = new java.util.HashSet;

     label144:
        $r3 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

        $i7 = 0;

     label145:
        $i8 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        if $i7 >= $i8 goto label152;

        $r50 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i7);

        $r54 = (org.bouncycastle.asn1.ASN1Sequence) $r50;

        $r50 = virtualinvoke $r54.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r58 = (org.bouncycastle.asn1.DERObjectIdentifier) $r50;

        $r36 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r50 = virtualinvoke $r54.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(1);

        $r58 = (org.bouncycastle.asn1.DERObjectIdentifier) $r50;

        $r59 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r36);

        if $z1 != 0 goto label150;

     label146:
        r86 = new java.util.HashSet;

     label147:
        $r65 = r86;

        specialinvoke r86.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r65.<java.util.Set: boolean add(java.lang.Object)>($r59);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r65);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r36);

     label148:
        $i7 = $i7 + 1;

     label149:
        goto label145;

     label150:
        $r17 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36);

        $r60 = (java.util.Set) $r17;

        interfaceinvoke $r60.<java.util.Set: boolean add(java.lang.Object)>($r59);

     label151:
        goto label148;

     label152:
        $r40 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label153:
        $z1 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label182;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

     label154:
        $r36 = (java.lang.String) $r17;

        if $i5 <= 0 goto label171;

        $z1 = 0;

     label155:
        $r4 = $r21[$i0];

        $r63 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label156:
        $z2 = interfaceinvoke $r63.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label158;

        $r17 = interfaceinvoke $r63.<java.util.Iterator: java.lang.Object next()>();

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r59 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z2 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z2 == 0 goto label156;

        $z1 = 1;

        $r17 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36);

     label157:
        $r60 = (java.util.Set) $r17;

        $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r60;

     label158:
        if $z1 != 0 goto label153;

        $r4 = $r21[$i0];

        $r63 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label159:
        $z1 = interfaceinvoke $r63.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label153;

        $r17 = interfaceinvoke $r63.<java.util.Iterator: java.lang.Object next()>();

     label160:
        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

     label161:
        $r59 = "2.5.29.32.0";

        $r66 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z1 == 0 goto label159;

     label162:
        $r60 = null;

     label163:
        $r59 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r59);

        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label164:
        $z1 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label165;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r57 = staticinvoke <org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r17);

        $r59 = "2.5.29.32.0";

        $r58 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.DERObjectIdentifier getPolicyIdentifier()>();

        $r66 = virtualinvoke $r58.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z1 == 0 goto label164;

        $r49 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        $r60 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)>($r49);

     label165:
        $z1 = 0;

        $r62 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r62 == null goto label166;

        $r62 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r59 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES>;

        $z1 = interfaceinvoke $r62.<java.util.Set: boolean contains(java.lang.Object)>($r59);

     label166:
        $r67 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

     label167:
        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r67;

     label168:
        $r59 = "2.5.29.32.0";

        $r66 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z2 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z2 == 0 goto label153;

     label169:
        r84 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r1 = r84;

        $r2 = new java.util.ArrayList;

     label170:
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r17 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36);

        $r62 = (java.util.Set) $r17;

        specialinvoke r84.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r2, $i0, $r62, $r61, $r60, $r36, $z1);

        virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r1);

        $r4 = $r21[$i0];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label153;

     label171:
        if $i5 > 0 goto label153;

        $r4 = $r21[$i0];

        $r63 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label172:
        $z1 = interfaceinvoke $r63.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label153;

        $r17 = interfaceinvoke $r63.<java.util.Iterator: java.lang.Object next()>();

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r59 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z1 == 0 goto label172;

        $r67 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r1 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r67;

        virtualinvoke $r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r61);

        interfaceinvoke $r63.<java.util.Iterator: void remove()>();

     label173:
        $i7 = $i0 - 1;

     label174:
        if $i7 < 0 goto label172;

     label175:
        $r4 = $r21[$i7];

     label176:
        $i8 = 0;

     label177:
        $i9 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i8 >= $i9 goto label179;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i8);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $z1 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z1 != 0 goto label180;

        $r61 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r22, $r21, $r61);

     label178:
        $r22 = $r61;

        if $r61 != null goto label180;

     label179:
        $i7 = $i7 + -1;

        goto label174;

     label180:
        $i8 = $i8 + 1;

     label181:
        goto label177;

     label182:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String NAME_CONSTRAINTS>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

     label183:
        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

     label184:
        if $r49 == null goto label204;

     label185:
        r87 = new org.bouncycastle.asn1.x509.NameConstraints;

     label186:
        $r7 = r87;

        specialinvoke r87.<org.bouncycastle.asn1.x509.NameConstraints: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r49);

        $r49 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.NameConstraints: org.bouncycastle.asn1.ASN1Sequence getPermittedSubtrees()>();

        if $r49 == null goto label195;

        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label187:
        $z1 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label195;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r68 = staticinvoke <org.bouncycastle.asn1.x509.GeneralSubtree: org.bouncycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)>($r17);

        $r69 = virtualinvoke $r68.<org.bouncycastle.asn1.x509.GeneralSubtree: org.bouncycastle.asn1.x509.GeneralName getBase()>();

        $i7 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        lookupswitch($i7)
        {
            case 1: goto label189;
            case 4: goto label191;
            case 7: goto label193;
            default: goto label188;
        };

     label188:
        goto label187;

     label189:
        $r50 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r53 = staticinvoke <org.bouncycastle.asn1.DERIA5String: org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r50);

        $r36 = virtualinvoke $r53.<org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        $r23 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set intersectEmail(java.util.Set,java.lang.String)>($r23, $r36);

     label190:
        goto label187;

     label191:
        $r50 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r50;

        $r19 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set intersectDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)>($r19, $r49);

     label192:
        goto label187;

     label193:
        $r50 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r55 = staticinvoke <org.bouncycastle.asn1.ASN1OctetString: org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r50);

        $r47 = virtualinvoke $r55.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r24 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set intersectIP(java.util.Set,byte[])>($r24, $r47);

     label194:
        goto label187;

     label195:
        $r49 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.NameConstraints: org.bouncycastle.asn1.ASN1Sequence getExcludedSubtrees()>();

        if $r49 == null goto label204;

        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label196:
        $z1 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label204;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r68 = staticinvoke <org.bouncycastle.asn1.x509.GeneralSubtree: org.bouncycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)>($r17);

        $r69 = virtualinvoke $r68.<org.bouncycastle.asn1.x509.GeneralSubtree: org.bouncycastle.asn1.x509.GeneralName getBase()>();

        $i7 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        lookupswitch($i7)
        {
            case 1: goto label198;
            case 4: goto label200;
            case 7: goto label202;
            default: goto label197;
        };

     label197:
        goto label196;

     label198:
        $r50 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r53 = staticinvoke <org.bouncycastle.asn1.DERIA5String: org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r50);

        $r36 = virtualinvoke $r53.<org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        $r26 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set unionEmail(java.util.Set,java.lang.String)>($r26, $r36);

     label199:
        goto label196;

     label200:
        $r50 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r50;

        $r25 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set unionDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)>($r25, $r49);

     label201:
        goto label196;

     label202:
        $r50 = virtualinvoke $r69.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r55 = staticinvoke <org.bouncycastle.asn1.ASN1OctetString: org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r50);

        $r47 = virtualinvoke $r55.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r27 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set unionIP(java.util.Set,byte[])>($r27, $r47);

     label203:
        goto label196;

     label204:
        $z1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r28);

     label205:
        if $z1 != 0 goto label208;

        if $i2 == 0 goto label206;

        $i2 = $i2 + -1;

     label206:
        if $i5 == 0 goto label207;

        $i5 = $i5 + -1;

     label207:
        if $i4 == 0 goto label208;

        $i4 = $i4 + -1;

     label208:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_CONSTRAINTS>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

     label209:
        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

     label210:
        if $r49 == null goto label219;

        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label211:
        $z1 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label219;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r51 = (org.bouncycastle.asn1.ASN1TaggedObject) $r17;

        $i7 = virtualinvoke $r51.<org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i7)
        {
            case 0: goto label213;
            case 1: goto label216;
            default: goto label212;
        };

     label212:
        goto label211;

     label213:
        $r70 = staticinvoke <org.bouncycastle.asn1.DERInteger: org.bouncycastle.asn1.DERInteger getInstance(java.lang.Object)>($r51);

        $r71 = virtualinvoke $r70.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i7 = virtualinvoke $r71.<java.math.BigInteger: int intValue()>();

        if $i7 >= $i2 goto label211;

     label214:
        $i2 = $i7;

     label215:
        goto label211;

     label216:
        $r70 = staticinvoke <org.bouncycastle.asn1.DERInteger: org.bouncycastle.asn1.DERInteger getInstance(java.lang.Object)>($r51);

        $r71 = virtualinvoke $r70.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i7 = virtualinvoke $r71.<java.math.BigInteger: int intValue()>();

        if $i7 >= $i5 goto label211;

     label217:
        $i5 = $i7;

     label218:
        goto label211;

     label219:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String INHIBIT_ANY_POLICY>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

     label220:
        $r70 = (org.bouncycastle.asn1.DERInteger) $r48;

     label221:
        if $r70 == null goto label223;

        $r71 = virtualinvoke $r70.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i7 = virtualinvoke $r71.<java.math.BigInteger: int intValue()>();

     label222:
        if $i7 >= $i4 goto label223;

        $i4 = $i7;

     label223:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String BASIC_CONSTRAINTS>;

        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r28, $r36);

        $r72 = staticinvoke <org.bouncycastle.asn1.x509.BasicConstraints: org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r48);

        if $r72 == null goto label227;

        $z1 = virtualinvoke $r72.<org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z1 != 0 goto label232;

     label224:
        $r74 = new java.security.cert.CertPathValidatorException;

     label225:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Not a CA certificate");

     label226:
        throw $r15;

     label227:
        if $i0 != 1 goto label229;

     label228:
        if $z0 != 0 goto label232;

     label229:
        $r74 = new java.security.cert.CertPathValidatorException;

     label230:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Intermediate certificate lacks BasicConstraints");

     label231:
        throw $r15;

     label232:
        $z1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r28);

     label233:
        if $z1 != 0 goto label237;

        if $i6 > 0 goto label236;

        $r74 = new java.security.cert.CertPathValidatorException;

     label234:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Max path length not greater than zero");

     label235:
        throw $r15;

     label236:
        $i6 = $i6 + -1;

     label237:
        if $r72 == null goto label238;

        $r71 = virtualinvoke $r72.<org.bouncycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        if $r71 == null goto label238;

        $i0 = virtualinvoke $r71.<java.math.BigInteger: int intValue()>();

        if $i0 >= $i6 goto label238;

        $i6 = $i0;

     label238:
        $r73 = virtualinvoke $r28.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r73 == null goto label244;

     label239:
        $z1 = $r73[5];

     label240:
        if $z1 != 0 goto label244;

     label241:
        $r74 = new java.security.cert.CertPathValidatorException;

     label242:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Issuer certificate keyusage extension is critical an does not permit key signing.\n", null, $r0, $i3);

     label243:
        throw $r15;

     label244:
        $r60 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

     label245:
        if $r60 == null goto label258;

        $r65 = new java.util.HashSet;

     label246:
        $r3 = $r65;

        $r60 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        specialinvoke $r65.<java.util.HashSet: void <init>(java.util.Collection)>($r60);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String KEY_USAGE>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_MAPPINGS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String INHIBIT_ANY_POLICY>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_CONSTRAINTS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String BASIC_CONSTRAINTS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String NAME_CONSTRAINTS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label247:
        $z1 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

     label248:
        if $z1 == 0 goto label254;

     label249:
        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r41 = (java.security.cert.PKIXCertPathChecker) $r17;

        virtualinvoke $r41.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>($r28, $r3);

     label250:
        goto label247;

     label251:
        $r15 := @caughtexception;

        r88 = new java.security.cert.CertPathValidatorException;

     label252:
        $r36 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String getMessage()>();

        $r75 = virtualinvoke $r15.<java.lang.Throwable: java.lang.Throwable getCause()>();

        specialinvoke r88.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, $r75, $r0, $i3);

     label253:
        throw r88;

     label254:
        $z1 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

     label255:
        if $z1 != 0 goto label258;

        $r74 = new java.security.cert.CertPathValidatorException;

     label256:
        $r15 = $r74;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certificate has unsupported critical extension", null, $r0, $i3);

     label257:
        throw $r15;

     label258:
        $r29 = $r28;

        $r33 = virtualinvoke $r28.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

     label259:
        $r31 = $r33;

     label260:
        $r30 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>($r28);

     label261:
        $r34 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>($r33);

        virtualinvoke $r34.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        virtualinvoke $r34.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

     label262:
        $i3 = $i3 + -1;

        goto label023;

     label263:
        $r76 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

        r81 = new java.lang.StringBuilder;

     label264:
        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r36 = interfaceinvoke $r77.<java.security.Principal: java.lang.String getName()>();

        $r38 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r36 = virtualinvoke $r76.<java.lang.Throwable: java.lang.String toString()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r36);

     label265:
        throw $r74;

     label266:
        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r18);

        if $z0 != 0 goto label267;

        if $i2 == 0 goto label267;

        $i2 = $i2 + -1;

     label267:
        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_CONSTRAINTS>;

     label268:
        $r48 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r18, $r36);

     label269:
        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

     label270:
        if $r49 == null goto label276;

        $r56 = virtualinvoke $r49.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label271:
        $z0 = interfaceinvoke $r56.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label276;

        $r17 = interfaceinvoke $r56.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r51 = (org.bouncycastle.asn1.ASN1TaggedObject) $r17;

        $i4 = virtualinvoke $r51.<org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i4)
        {
            case 0: goto label273;
            default: goto label272;
        };

     label272:
        goto label271;

     label273:
        $r70 = staticinvoke <org.bouncycastle.asn1.DERInteger: org.bouncycastle.asn1.DERInteger getInstance(java.lang.Object)>($r51);

        $r71 = virtualinvoke $r70.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r71.<java.math.BigInteger: int intValue()>();

     label274:
        if $i4 != 0 goto label271;

        $i2 = 0;

        goto label271;

     label275:
        $r78 := @caughtexception;

        $r74 = new java.security.cert.CertPathValidatorException;

        $r36 = virtualinvoke $r78.<java.lang.Throwable: java.lang.String getMessage()>();

        $r43 = virtualinvoke $r78.<org.bouncycastle.jce.provider.AnnotatedException: java.lang.Exception getUnderlyingException()>();

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, $r43, $r0, $i3);

        throw $r74;

     label276:
        $r19 = virtualinvoke $r18.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r19 == null goto label282;

        $r65 = new java.util.HashSet;

        $r3 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>(java.util.Collection)>($r19);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String KEY_USAGE>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String CERTIFICATE_POLICIES>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_MAPPINGS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String INHIBIT_ANY_POLICY>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String POLICY_CONSTRAINTS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String BASIC_CONSTRAINTS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r36 = <org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi: java.lang.String NAME_CONSTRAINTS>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r36);

     label277:
        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label278:
        $z0 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label283;

     label279:
        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r41 = (java.security.cert.PKIXCertPathChecker) $r17;

        virtualinvoke $r41.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>($r18, $r3);

     label280:
        goto label278;

     label281:
        $r74 := @caughtexception;

        r88 = new java.security.cert.CertPathValidatorException;

        $r36 = virtualinvoke $r74.<java.lang.Throwable: java.lang.String getMessage()>();

        $r75 = virtualinvoke $r74.<java.lang.Throwable: java.lang.Throwable getCause()>();

        specialinvoke r88.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r36, $r75, $r0, $i3);

        throw r88;

     label282:
        $r65 = new java.util.HashSet;

        $r3 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

        goto label277;

     label283:
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label284;

        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certificate has unsupported critical extension", null, $r0, $i3);

        throw $r74;

     label284:
        if $r22 != null goto label288;

        $z0 = virtualinvoke $r12.<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z0 == 0 goto label285;

        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Explicit policy requested but none available.");

        throw $r74;

     label285:
        $r22 = null;

     label286:
        if $i2 > 0 goto label287;

        if $r22 == null goto label317;

     label287:
        r89 = new java.security.cert.PKIXCertPathValidatorResult;

        specialinvoke r89.<java.security.cert.PKIXCertPathValidatorResult: void <init>(java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>($r20, $r22, $r31);

        return r89;

     label288:
        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isAnyPolicy(java.util.Set)>($r13);

        if $z0 == 0 goto label303;

        $z0 = virtualinvoke $r12.<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z0 == 0 goto label302;

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label289;

        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Explicit policy requested but none available.");

        throw $r74;

     label289:
        $r65 = new java.util.HashSet;

        $r3 = $r65;

        specialinvoke $r65.<java.util.HashSet: void <init>()>();

        $i4 = 0;

     label290:
        $i5 = lengthof $r21;

        if $i4 >= $i5 goto label295;

        $r4 = $r21[$i4];

        $i5 = 0;

     label291:
        $i6 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i5 >= $i6 goto label294;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r36 = "2.5.29.32.0";

        $r59 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z0 == 0 goto label293;

        $r40 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label292:
        $z0 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label293;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label292;

     label293:
        $i5 = $i5 + 1;

        goto label291;

     label294:
        $i4 = $i4 + 1;

        goto label290;

     label295:
        $r40 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label296:
        $z0 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label297;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r36 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r36);

        if $z0 != 0 goto label296;

        goto label296;

     label297:
        if $r22 == null goto label302;

        $i1 = $i1 - 1;

     label298:
        if $i1 < 0 goto label302;

        $r4 = $r21[$i1];

        $i4 = 0;

     label299:
        $i5 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i4 >= $i5 goto label301;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i4);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $z0 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z0 != 0 goto label300;

        $r22 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r22, $r21, $r61);

     label300:
        $i4 = $i4 + 1;

        goto label299;

     label301:
        $i1 = $i1 + -1;

        goto label298;

     label302:
        goto label286;

     label303:
        $r3 = new java.util.HashSet;

        $r8 = $r3;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $i4 = 0;

     label304:
        $i5 = lengthof $r21;

        if $i4 >= $i5 goto label309;

        $r4 = $r21[$i4];

        $i5 = 0;

     label305:
        $i6 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i5 >= $i6 goto label308;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r36 = "2.5.29.32.0";

        $r59 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z0 == 0 goto label307;

        $r40 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label306:
        $z0 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label307;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r36 = "2.5.29.32.0";

        $r59 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z0 != 0 goto label306;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r61);

        goto label306;

     label307:
        $i5 = $i5 + 1;

        goto label305;

     label308:
        $i4 = $i4 + 1;

        goto label304;

     label309:
        $r40 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label310:
        $z0 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label311;

        $r17 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r36 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = interfaceinvoke $r13.<java.util.Set: boolean contains(java.lang.Object)>($r36);

        if $z0 != 0 goto label310;

        $r22 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r22, $r21, $r61);

        goto label310;

     label311:
        if $r22 == null goto label316;

        $i1 = $i1 - 1;

     label312:
        if $i1 < 0 goto label316;

        $r4 = $r21[$i1];

        $i4 = 0;

     label313:
        $i5 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i4 >= $i5 goto label315;

        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i4);

        $r61 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $z0 = virtualinvoke $r61.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z0 != 0 goto label314;

        $r22 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r22, $r21, $r61);

     label314:
        $i4 = $i4 + 1;

        goto label313;

     label315:
        $i1 = $i1 + -1;

        goto label312;

     label316:
        goto label286;

     label317:
        $r74 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r74.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Path processing failed on policy.", null, $r0, $i3);

        throw $r74;

        catch java.lang.IllegalArgumentException from label010 to label011 with label019;
        catch java.lang.IllegalArgumentException from label017 to label018 with label019;
        catch org.bouncycastle.jce.provider.AnnotatedException from label024 to label025 with label033;
        catch java.security.GeneralSecurityException from label026 to label027 with label034;
        catch org.bouncycastle.jce.provider.AnnotatedException from label026 to label027 with label033;
        catch java.security.cert.CertificateExpiredException from label027 to label028 with label037;
        catch java.security.cert.CertificateNotYetValidException from label027 to label028 with label040;
        catch org.bouncycastle.jce.provider.AnnotatedException from label027 to label028 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label028 to label030 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label031 to label032 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label035 to label036 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label038 to label039 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label041 to label042 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label043 to label045 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label046 to label047 with label033;
        catch java.io.IOException from label047 to label048 with label055;
        catch org.bouncycastle.jce.provider.AnnotatedException from label047 to label048 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label049 to label050 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label051 to label053 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label054 to label055 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label056 to label057 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label058 to label059 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label060 to label061 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label062 to label063 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label064 to label065 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label066 to label067 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label068 to label071 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label072 to label075 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label076 to label079 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label080 to label082 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label083 to label085 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label086 to label088 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label090 to label091 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label092 to label093 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label094 to label095 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label096 to label097 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label098 to label099 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label100 to label101 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label102 to label104 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label107 to label109 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label110 to label111 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label112 to label114 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label115 to label116 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label118 to label119 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label121 to label122 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label124 to label125 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label126 to label127 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label128 to label130 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label131 to label132 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label133 to label134 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label135 to label136 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label137 to label138 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label140 to label141 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label142 to label143 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label144 to label146 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label147 to label148 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label149 to label151 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label152 to label154 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label155 to label157 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label158 to label160 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label161 to label162 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label163 to label165 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label165 to label167 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label168 to label169 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label170 to label173 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label174 to label175 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label176 to label178 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label181 to label183 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label184 to label185 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label186 to label190 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label190 to label192 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label192 to label194 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label194 to label199 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label199 to label201 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label201 to label203 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label203 to label205 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label208 to label209 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label210 to label214 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label215 to label217 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label218 to label220 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label221 to label222 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label223 to label224 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label225 to label226 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label228 to label229 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label230 to label231 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label232 to label233 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label234 to label235 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label237 to label239 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label240 to label241 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label242 to label243 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label244 to label245 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label246 to label248 with label033;
        catch java.security.cert.CertPathValidatorException from label249 to label250 with label251;
        catch org.bouncycastle.jce.provider.AnnotatedException from label249 to label250 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label252 to label253 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label254 to label255 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label256 to label257 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label258 to label259 with label033;
        catch java.lang.IllegalArgumentException from label260 to label261 with label263;
        catch org.bouncycastle.jce.provider.AnnotatedException from label260 to label261 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label261 to label262 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label264 to label265 with label033;
        catch org.bouncycastle.jce.provider.AnnotatedException from label268 to label269 with label275;
        catch org.bouncycastle.jce.provider.AnnotatedException from label270 to label274 with label275;
        catch java.security.cert.CertPathValidatorException from label279 to label280 with label281;
    }
}
