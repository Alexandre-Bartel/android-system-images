public final class org.apache.harmony.awt.internal.nls.MsgHelp extends java.lang.Object
{
    private static final java.lang.String RESOURCE_NAME;
    private static final java.util.ResourceBundle THE_BUNDLE;

    static void <clinit>()
    {
        java.util.PropertyResourceBundle $r0, $r1;
        java.lang.Class $r2;
        java.io.InputStream $r3;
        java.io.IOException $r4;
        java.util.logging.Logger $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r8;

        <org.apache.harmony.awt.internal.nls.MsgHelp: java.lang.String RESOURCE_NAME> = "/org/apache/harmony/awt/internal/nls/messages.properties";

        $r1 = null;

        $r2 = class "org/apache/harmony/awt/internal/nls/MsgHelp";

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/apache/harmony/awt/internal/nls/messages.properties");

        $r0 = new java.util.PropertyResourceBundle;

        specialinvoke $r0.<java.util.PropertyResourceBundle: void <init>(java.io.InputStream)>($r3);

     label2:
        $r1 = $r0;

     label3:
        <org.apache.harmony.awt.internal.nls.MsgHelp: java.util.ResourceBundle THE_BUNDLE> = $r1;

        return;

     label4:
        $r4 := @caughtexception;

        $r5 = <java.util.logging.Logger: java.util.logging.Logger global>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t read resource bundle: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void warning(java.lang.String)>($r7);

        goto label3;

     label5:
        $r8 := @caughtexception;

        $r5 = <java.util.logging.Logger: java.util.logging.Logger global>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find resource bundle: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void warning(java.lang.String)>($r7);

        goto label3;

        return;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public void <init>()
    {
        org.apache.harmony.awt.internal.nls.MsgHelp $r0;

        $r0 := @this: org.apache.harmony.awt.internal.nls.MsgHelp;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getString(java.lang.String)
    {
        java.lang.String $r0;
        java.util.ResourceBundle $r1;
        java.util.MissingResourceException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.harmony.awt.internal.nls.MsgHelp: java.util.ResourceBundle THE_BUNDLE>;

        if $r1 != null goto label1;

        return $r0;

     label1:
        $r1 = <org.apache.harmony.awt.internal.nls.MsgHelp: java.util.ResourceBundle THE_BUNDLE>;

     label2:
        $r0 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r0);

     label3:
        return $r0;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing message: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

        catch java.util.MissingResourceException from label2 to label3 with label4;
    }

    public static java.lang.String getString(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0, $r2;
        java.lang.Object[] $r1;
        java.util.ResourceBundle $r3;
        java.util.MissingResourceException $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $r2 = $r0;

        $r3 = <org.apache.harmony.awt.internal.nls.MsgHelp: java.util.ResourceBundle THE_BUNDLE>;

        if $r3 == null goto label3;

        $r3 = <org.apache.harmony.awt.internal.nls.MsgHelp: java.util.ResourceBundle THE_BUNDLE>;

     label1:
        $r0 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r0);

     label2:
        $r2 = $r0;

     label3:
        $r0 = staticinvoke <org.apache.harmony.luni.util.MsgHelp: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r1);

        return $r0;

     label4:
        $r4 := @caughtexception;

        goto label3;

        catch java.util.MissingResourceException from label1 to label2 with label4;
    }
}
