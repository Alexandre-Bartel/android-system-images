final class android.app.ActivityThread$ApplicationThread extends android.app.ApplicationThreadNative
{
    private static final int ACTIVITY_THREAD_CHECKIN_VERSION;
    private static final java.lang.String HEAP_COLUMN;
    private static final java.lang.String ONE_COUNT_COLUMN;
    private static final java.lang.String TWO_COUNT_COLUMNS;
    final android.app.ActivityThread this$0;

    private void <init>(android.app.ActivityThread)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.app.ActivityThread $r1;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.app.ActivityThread;

        $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0> = $r1;

        specialinvoke $r0.<android.app.ApplicationThreadNative: void <init>()>();

        return;
    }

    void <init>(android.app.ActivityThread, android.app.ActivityThread$1)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.app.ActivityThread $r1;
        android.app.ActivityThread$1 $r2;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.app.ActivityThread;

        $r2 := @parameter1: android.app.ActivityThread$1;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void <init>(android.app.ActivityThread)>($r1);

        return;
    }

    private transient void printRow(java.io.PrintWriter, java.lang.String, java.lang.Object[])
    {
        android.app.ActivityThread$ApplicationThread $r0;
        java.io.PrintWriter $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: java.io.PrintWriter;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r3);

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    public final void bindApplication(java.lang.String, android.content.pm.ApplicationInfo, java.util.List, android.content.ComponentName, java.lang.String, android.os.Bundle, android.app.IInstrumentationWatcher, int, android.content.res.Configuration, java.util.Map)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        java.lang.String $r1, $r5;
        android.content.pm.ApplicationInfo $r2;
        java.util.List $r3;
        android.content.ComponentName $r4;
        android.os.Bundle $r6;
        android.app.IInstrumentationWatcher $r7;
        int $i0;
        android.content.res.Configuration $r8;
        java.util.Map $r9;
        android.app.ActivityThread$AppBindData $r10;
        android.app.ActivityThread $r11;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.ApplicationInfo;

        $r3 := @parameter2: java.util.List;

        $r4 := @parameter3: android.content.ComponentName;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: android.os.Bundle;

        $r7 := @parameter6: android.app.IInstrumentationWatcher;

        $i0 := @parameter7: int;

        $r8 := @parameter8: android.content.res.Configuration;

        $r9 := @parameter9: java.util.Map;

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>($r1);

        if $r9 == null goto label1;

        staticinvoke <android.os.ServiceManager: void initServiceCache(java.util.Map)>($r9);

     label1:
        $r10 = new android.app.ActivityThread$AppBindData;

        specialinvoke $r10.<android.app.ActivityThread$AppBindData: void <init>(android.app.ActivityThread$1)>(null);

        $r10.<android.app.ActivityThread$AppBindData: java.lang.String processName> = $r1;

        $r10.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo> = $r2;

        $r10.<android.app.ActivityThread$AppBindData: java.util.List providers> = $r3;

        $r10.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName> = $r4;

        $r10.<android.app.ActivityThread$AppBindData: java.lang.String profileFile> = $r5;

        $r10.<android.app.ActivityThread$AppBindData: android.os.Bundle instrumentationArgs> = $r6;

        $r10.<android.app.ActivityThread$AppBindData: android.app.IInstrumentationWatcher instrumentationWatcher> = $r7;

        $r10.<android.app.ActivityThread$AppBindData: int debugMode> = $i0;

        $r10.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config> = $r8;

        $r11 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r11, 110, $r10);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3;
        java.lang.String $r4, $r8;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l13, $l14, $l15, $l16;
        android.os.Debug$MemoryInfo $r5;
        android.database.sqlite.SQLiteDebug$PagerStats $r6;
        int $i7, $i8, $i9, $i10, $i11, $i12, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.Runtime $r7;
        boolean $z0, $z1;
        android.app.ActivityThread $r9;
        android.app.ActivityThread$AppBindData $r10;
        java.lang.Object[] $r11;
        java.lang.Long $r12;
        java.lang.Integer $r13;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        $l4 = staticinvoke <android.os.Debug: long getNativeHeapSize()>();

        $l5 = $l4 / 1024L;

        $l4 = staticinvoke <android.os.Debug: long getNativeHeapAllocatedSize()>();

        $l3 = $l4 / 1024L;

        $l4 = staticinvoke <android.os.Debug: long getNativeHeapFreeSize()>();

        $l4 = $l4 / 1024L;

        $r5 = new android.os.Debug$MemoryInfo;

        specialinvoke $r5.<android.os.Debug$MemoryInfo: void <init>()>();

        staticinvoke <android.os.Debug: void getMemoryInfo(android.os.Debug$MemoryInfo)>($r5);

        $i7 = $r5.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        $i8 = $r5.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        $i9 = $r5.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        $i10 = $r5.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $i11 = $r5.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i12 = $r5.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l13 = virtualinvoke $r7.<java.lang.Runtime: long totalMemory()>();

        $l2 = $l13 / 1024L;

        $l13 = virtualinvoke $r7.<java.lang.Runtime: long freeMemory()>();

        $l1 = $l13 / 1024L;

        $l0 = $l2 - $l1;

        $l13 = staticinvoke <android.view.ViewDebug: long getViewInstanceCount()>();

        $l14 = staticinvoke <android.view.ViewDebug: long getViewRootInstanceCount()>();

        $l15 = staticinvoke <android.app.ApplicationContext: long getInstanceCount()>();

        $l16 = staticinvoke <android.app.Activity: long getInstanceCount()>();

        $i17 = staticinvoke <android.content.res.AssetManager: int getGlobalAssetCount()>();

        $i18 = staticinvoke <android.content.res.AssetManager: int getGlobalAssetManagerCount()>();

        $i19 = staticinvoke <android.os.Debug: int getBinderLocalObjectCount()>();

        $i20 = staticinvoke <android.os.Debug: int getBinderProxyObjectCount()>();

        $i21 = staticinvoke <android.os.Debug: int getBinderDeathObjectCount()>();

        $i22 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getInstanceCount()>();

        $l6 = staticinvoke <android.database.sqlite.SQLiteDebug: long getHeapAllocatedSize()>();

        $l6 = $l6 / 1024L;

        $r6 = new android.database.sqlite.SQLiteDebug$PagerStats;

        specialinvoke $r6.<android.database.sqlite.SQLiteDebug$PagerStats: void <init>()>();

        staticinvoke <android.database.sqlite.SQLiteDebug: void getPagerStats(android.database.sqlite.SQLiteDebug$PagerStats)>($r6);

        $z0 = 0;

        if $r3 == null goto label3;

        $i23 = lengthof $r3;

        $i24 = 0;

     label1:
        if $i24 >= $i23 goto label3;

        $r4 = $r3[$i24];

        $r8 = "-c";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $z0 = 1;

     label2:
        $i24 = $i24 + 1;

        goto label1;

     label3:
        if $z0 == 0 goto label6;

        $r9 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r10 = $r9.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r10 == null goto label5;

        $r9 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r10 = $r9.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r4 = $r10.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

     label4:
        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i23 = staticinvoke <android.os.Process: int myPid()>();

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l5);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l2);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l5 = $l5 + $l2;

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l5);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l3 = $l3 + $l0;

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l4 = $l4 + $l1;

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i23 = $r5.<android.os.Debug$MemoryInfo: int nativePss>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i23 = $r5.<android.os.Debug$MemoryInfo: int dalvikPss>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i23 = $r5.<android.os.Debug$MemoryInfo: int otherPss>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i23 = $r5.<android.os.Debug$MemoryInfo: int nativePss>;

        $i24 = $r5.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $i23 = $i23 + $i24;

        $i24 = $r5.<android.os.Debug$MemoryInfo: int otherPss>;

        $i23 = $i23 + $i24;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i9);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i7 = $i7 + $i8;

        $i9 = $i7 + $i9;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i9);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i11);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i12);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i10 = $i10 + $i11;

        $i12 = $i10 + $i12;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i12);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l13);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l14);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l15);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l16);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i17);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i18);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i19);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i20);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i21);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i22);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l6);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $l4 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long databaseBytes>;

        $l4 = $l4 / 1024L;

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $i17 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: int numPagers>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>($i17);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $l4 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long totalBytes>;

        $l13 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long referencedBytes>;

        $l4 = $l4 - $l13;

        $l4 = $l4 / 1024L;

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(44);

        $l4 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long referencedBytes>;

        $l4 = $l4 / 1024L;

        virtualinvoke $r2.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(char)>(10);

        return;

     label5:
        $r4 = "unknown";

        goto label4;

     label6:
        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "";

        $r11[1] = "native";

        $r11[2] = "dalvik";

        $r11[3] = "other";

        $r11[4] = "total";

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "size:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r11[1] = $r12;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r11[2] = $r12;

        $r11[3] = "N/A";

        $l5 = $l5 + $l2;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r11[4] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "allocated:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r11[1] = $r12;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r11[2] = $r12;

        $r11[3] = "N/A";

        $l3 = $l3 + $l0;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r11[4] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "free:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11[1] = $r12;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r11[2] = $r12;

        $r11[3] = "N/A";

        $l4 = $l4 + $l1;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11[4] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "(Pss):";

        $i23 = $r5.<android.os.Debug$MemoryInfo: int nativePss>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r11[1] = $r13;

        $i23 = $r5.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r11[2] = $r13;

        $i23 = $r5.<android.os.Debug$MemoryInfo: int otherPss>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r11[3] = $r13;

        $i23 = $r5.<android.os.Debug$MemoryInfo: int nativePss>;

        $i24 = $r5.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $i23 = $i23 + $i24;

        $i24 = $r5.<android.os.Debug$MemoryInfo: int otherPss>;

        $i23 = $i23 + $i24;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r11[4] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "(shared dirty):";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r11[1] = $r13;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r11[2] = $r13;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r11[3] = $r13;

        $i7 = $i7 + $i8;

        $i9 = $i7 + $i9;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r11[4] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = "(priv dirty):";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r11[1] = $r13;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r11[2] = $r13;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r11[3] = $r13;

        $i10 = $i10 + $i11;

        $i12 = $i10 + $i12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r11[4] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8s %8s %8s %8s", $r11);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" Objects");

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "Views:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        $r11[1] = $r12;

        $r11[2] = "ViewRoots:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l14);

        $r11[3] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d %17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "AppContexts:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l15);

        $r11[1] = $r12;

        $r11[2] = "Activities:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l16);

        $r11[3] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d %17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "Assets:";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r11[1] = $r13;

        $r11[2] = "AssetManagers:";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r11[3] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d %17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "Local Binders:";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r11[1] = $r13;

        $r11[2] = "Proxy Binders:";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r11[3] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d %17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "Death Recipients:";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r11[1] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "OpenSSL Sockets:";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        $r11[1] = $r13;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d", $r11);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" SQL");

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "heap:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r11[1] = $r12;

        $r11[2] = "dbFiles:";

        $l4 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long databaseBytes>;

        $l4 = $l4 / 1024L;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11[3] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d %17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "numPagers:";

        $i17 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: int numPagers>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r11[1] = $r13;

        $r11[2] = "inactivePageKB:";

        $l4 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long totalBytes>;

        $l13 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long referencedBytes>;

        $l4 = $l4 - $l13;

        $l4 = $l4 / 1024L;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11[3] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d %17s %8d", $r11);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "activePageKB:";

        $l4 = $r6.<android.database.sqlite.SQLiteDebug$PagerStats: long referencedBytes>;

        $l4 = $l4 / 1024L;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11[1] = $r12;

        specialinvoke $r0.<android.app.ActivityThread$ApplicationThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>($r2, "%17s %8d", $r11);

        return;
    }

    public void dumpService(java.io.FileDescriptor, android.os.IBinder, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread $r0;
        java.io.FileDescriptor $r1;
        android.os.IBinder $r2;
        java.lang.String[] $r3;
        android.app.ActivityThread$DumpServiceInfo $r4;
        android.app.ActivityThread $r5;
        boolean $z0;
        java.lang.InterruptedException $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: java.lang.String[];

        $r4 = new android.app.ActivityThread$DumpServiceInfo;

        specialinvoke $r4.<android.app.ActivityThread$DumpServiceInfo: void <init>(android.app.ActivityThread$1)>(null);

        $r4.<android.app.ActivityThread$DumpServiceInfo: java.io.FileDescriptor fd> = $r1;

        $r4.<android.app.ActivityThread$DumpServiceInfo: android.os.IBinder service> = $r2;

        $r4.<android.app.ActivityThread$DumpServiceInfo: java.lang.String[] args> = $r3;

        $r4.<android.app.ActivityThread$DumpServiceInfo: boolean dumped> = 0;

        $r5 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r5, 123, $r4);

        entermonitor $r4;

     label1:
        $z0 = $r4.<android.app.ActivityThread$DumpServiceInfo: boolean dumped>;

     label2:
        if $z0 != 0 goto label6;

     label3:
        virtualinvoke $r4.<java.lang.Object: void wait()>();

     label4:
        goto label1;

     label5:
        $r6 := @caughtexception;

        goto label1;

     label6:
        exitmonitor $r4;

     label7:
        return;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void processInBackground()
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.Message $r1;
        android.app.ActivityThread $r2;
        android.app.ActivityThread$H $r3, $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r3 = $r2.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(120);

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r3 = $r2.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r4 = $r2.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r1 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(120);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;
    }

    public void profilerControl(boolean, java.lang.String)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        boolean $z0;
        java.lang.String $r1;
        android.app.ActivityThread $r2;
        byte $b0;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$900(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 127, $r1, $b0);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    public void requestPss()
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.app.IActivityManager $r1;
        int $i0;
        long $l1;
        android.os.RemoteException $r2;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

     label1:
        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $l1 = staticinvoke <android.os.Process: long getPss(int)>($i0);

        $i0 = (int) $l1;

        interfaceinvoke $r1.<android.app.IActivityManager: void reportPss(android.app.IApplicationThread,int)>($r0, $i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestThumbnail(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        android.app.ActivityThread $r2;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r2, 117, $r1);

        return;
    }

    public void scheduleActivityConfigurationChanged(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        android.app.ActivityThread $r2;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r2, 125, $r1);

        return;
    }

    public final void scheduleBindService(android.os.IBinder, android.content.Intent, boolean)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        android.content.Intent $r2;
        boolean $z0;
        android.app.ActivityThread$BindServiceData $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.content.Intent;

        $z0 := @parameter2: boolean;

        $r3 = new android.app.ActivityThread$BindServiceData;

        specialinvoke $r3.<android.app.ActivityThread$BindServiceData: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$BindServiceData: android.os.IBinder token> = $r1;

        $r3.<android.app.ActivityThread$BindServiceData: android.content.Intent intent> = $r2;

        $r3.<android.app.ActivityThread$BindServiceData: boolean rebind> = $z0;

        $r4 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r4, 121, $r3);

        return;
    }

    public void scheduleConfigurationChanged(android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.content.res.Configuration $r1;
        android.app.ActivityThread $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r3 = $r2.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r2.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = $r1;

        exitmonitor $r3;

     label2:
        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r2, 118, $r1);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor $r3;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void scheduleCreateService(android.os.IBinder, android.content.pm.ServiceInfo)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        android.content.pm.ServiceInfo $r2;
        android.app.ActivityThread$CreateServiceData $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.content.pm.ServiceInfo;

        $r3 = new android.app.ActivityThread$CreateServiceData;

        specialinvoke $r3.<android.app.ActivityThread$CreateServiceData: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token> = $r1;

        $r3.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info> = $r2;

        $r4 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r4, 114, $r3);

        return;
    }

    public final void scheduleDestroyActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        boolean $z0;
        int $i0;
        android.app.ActivityThread $r2;
        byte $b1;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if $z0 == 0 goto label2;

        $b1 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$700(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, 109, $r1, $b1, $i0);

        return;

     label2:
        $b1 = 0;

        goto label1;
    }

    public final void scheduleExit()
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.app.ActivityThread $r1;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r1, 111, null);

        return;
    }

    public final void scheduleLaunchActivity(android.content.Intent, android.os.IBinder, android.content.pm.ActivityInfo, android.os.Bundle, java.util.List, java.util.List, boolean, boolean)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.content.Intent $r1;
        android.os.IBinder $r2;
        android.content.pm.ActivityInfo $r3;
        android.os.Bundle $r4;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        android.app.ActivityThread$ActivityRecord $r7;
        android.app.ActivityThread $r8;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: android.content.pm.ActivityInfo;

        $r4 := @parameter3: android.os.Bundle;

        $r5 := @parameter4: java.util.List;

        $r6 := @parameter5: java.util.List;

        $z0 := @parameter6: boolean;

        $z1 := @parameter7: boolean;

        $r7 = new android.app.ActivityThread$ActivityRecord;

        specialinvoke $r7.<android.app.ActivityThread$ActivityRecord: void <init>()>();

        $r7.<android.app.ActivityThread$ActivityRecord: android.os.IBinder token> = $r2;

        $r7.<android.app.ActivityThread$ActivityRecord: android.content.Intent intent> = $r1;

        $r7.<android.app.ActivityThread$ActivityRecord: android.content.pm.ActivityInfo activityInfo> = $r3;

        $r7.<android.app.ActivityThread$ActivityRecord: android.os.Bundle state> = $r4;

        $r7.<android.app.ActivityThread$ActivityRecord: java.util.List pendingResults> = $r5;

        $r7.<android.app.ActivityThread$ActivityRecord: java.util.List pendingIntents> = $r6;

        $r7.<android.app.ActivityThread$ActivityRecord: boolean startsNotResumed> = $z0;

        $r7.<android.app.ActivityThread$ActivityRecord: boolean isForward> = $z1;

        $r8 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r8, 100, $r7);

        return;
    }

    public void scheduleLowMemory()
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.app.ActivityThread $r1;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r1, 124, null);

        return;
    }

    public final void scheduleNewIntent(java.util.List, android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        java.util.List $r1;
        android.os.IBinder $r2;
        android.app.ActivityThread$NewIntentData $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: android.os.IBinder;

        $r3 = new android.app.ActivityThread$NewIntentData;

        specialinvoke $r3.<android.app.ActivityThread$NewIntentData: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$NewIntentData: java.util.List intents> = $r1;

        $r3.<android.app.ActivityThread$NewIntentData: android.os.IBinder token> = $r2;

        $r4 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r4, 112, $r3);

        return;
    }

    public final void schedulePauseActivity(android.os.IBinder, boolean, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        boolean $z0, $z1;
        int $i0;
        android.app.ActivityThread $r2;
        byte $b1, $b2;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if $z0 == 0 goto label3;

        $b1 = 102;

     label1:
        if $z1 == 0 goto label4;

        $b2 = 1;

     label2:
        staticinvoke <android.app.ActivityThread: void access$700(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, $b1, $r1, $b2, $i0);

        return;

     label3:
        $b1 = 101;

        goto label1;

     label4:
        $b2 = 0;

        goto label2;
    }

    public final void scheduleReceiver(android.content.Intent, android.content.pm.ActivityInfo, int, java.lang.String, android.os.Bundle, boolean)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.content.Intent $r1;
        android.content.pm.ActivityInfo $r2;
        int $i0;
        java.lang.String $r3;
        android.os.Bundle $r4;
        boolean $z0;
        android.app.ActivityThread$ReceiverData $r5;
        android.app.ActivityThread $r6;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.content.pm.ActivityInfo;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: android.os.Bundle;

        $z0 := @parameter5: boolean;

        $r5 = new android.app.ActivityThread$ReceiverData;

        specialinvoke $r5.<android.app.ActivityThread$ReceiverData: void <init>(android.app.ActivityThread$1)>(null);

        $r5.<android.app.ActivityThread$ReceiverData: android.content.Intent intent> = $r1;

        $r5.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info> = $r2;

        $r5.<android.app.ActivityThread$ReceiverData: int resultCode> = $i0;

        $r5.<android.app.ActivityThread$ReceiverData: java.lang.String resultData> = $r3;

        $r5.<android.app.ActivityThread$ReceiverData: android.os.Bundle resultExtras> = $r4;

        $r5.<android.app.ActivityThread$ReceiverData: boolean sync> = $z0;

        $r6 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r6, 113, $r5);

        return;
    }

    public void scheduleRegisteredReceiver(android.app.IIntentReceiver, android.content.Intent, int, java.lang.String, android.os.Bundle, boolean) throws android.os.RemoteException
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.app.IIntentReceiver $r1;
        android.content.Intent $r2;
        int $i0;
        java.lang.String $r3;
        android.os.Bundle $r4;
        boolean $z0;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.app.IIntentReceiver;

        $r2 := @parameter1: android.content.Intent;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: android.os.Bundle;

        $z0 := @parameter5: boolean;

        interfaceinvoke $r1.<android.app.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean)>($r2, $i0, $r3, $r4, $z0);

        return;
    }

    public final void scheduleRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, boolean)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        java.util.List $r2, $r3;
        int $i0;
        boolean $z0;
        android.app.ActivityThread$ActivityRecord $r4;
        android.app.ActivityThread $r5;
        java.util.ArrayList $r6, $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r4 = new android.app.ActivityThread$ActivityRecord;

        specialinvoke $r4.<android.app.ActivityThread$ActivityRecord: void <init>()>();

        $r4.<android.app.ActivityThread$ActivityRecord: android.os.IBinder token> = $r1;

        $r4.<android.app.ActivityThread$ActivityRecord: java.util.List pendingResults> = $r2;

        $r4.<android.app.ActivityThread$ActivityRecord: java.util.List pendingIntents> = $r3;

        $r4.<android.app.ActivityThread$ActivityRecord: boolean startsNotResumed> = $z0;

        $r5 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r6 = $r5.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        entermonitor $r6;

     label1:
        $r5 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r7 = $r5.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        exitmonitor $r6;

     label2:
        $r5 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$900(android.app.ActivityThread,int,java.lang.Object,int)>($r5, 126, $r4, $i0);

        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor $r6;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void scheduleResumeActivity(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.app.ActivityThread $r2;
        byte $b0;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$900(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 107, $r1, $b0);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    public final void scheduleSendResult(android.os.IBinder, java.util.List)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        java.util.List $r2;
        android.app.ActivityThread$ResultData $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.util.List;

        $r3 = new android.app.ActivityThread$ResultData;

        specialinvoke $r3.<android.app.ActivityThread$ResultData: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$ResultData: android.os.IBinder token> = $r1;

        $r3.<android.app.ActivityThread$ResultData: java.util.List results> = $r2;

        $r4 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r4, 108, $r3);

        return;
    }

    public final void scheduleServiceArgs(android.os.IBinder, int, android.content.Intent)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        int $i0;
        android.content.Intent $r2;
        android.app.ActivityThread$ServiceArgsData $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.Intent;

        $r3 = new android.app.ActivityThread$ServiceArgsData;

        specialinvoke $r3.<android.app.ActivityThread$ServiceArgsData: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token> = $r1;

        $r3.<android.app.ActivityThread$ServiceArgsData: int startId> = $i0;

        $r3.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args> = $r2;

        $r4 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r4, 115, $r3);

        return;
    }

    public final void scheduleStopActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        boolean $z0;
        int $i0;
        android.app.ActivityThread $r2;
        byte $b1;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if $z0 == 0 goto label2;

        $b1 = 103;

     label1:
        staticinvoke <android.app.ActivityThread: void access$700(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, $b1, $r1, 0, $i0);

        return;

     label2:
        $b1 = 104;

        goto label1;
    }

    public final void scheduleStopService(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        android.app.ActivityThread $r2;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r2, 116, $r1);

        return;
    }

    public final void scheduleUnbindService(android.os.IBinder, android.content.Intent)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        android.content.Intent $r2;
        android.app.ActivityThread$BindServiceData $r3;
        android.app.ActivityThread $r4;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.content.Intent;

        $r3 = new android.app.ActivityThread$BindServiceData;

        specialinvoke $r3.<android.app.ActivityThread$BindServiceData: void <init>(android.app.ActivityThread$1)>(null);

        $r3.<android.app.ActivityThread$BindServiceData: android.os.IBinder token> = $r1;

        $r3.<android.app.ActivityThread$BindServiceData: android.content.Intent intent> = $r2;

        $r4 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r4, 122, $r3);

        return;
    }

    public final void scheduleWindowVisibility(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread $r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.app.ActivityThread $r2;
        byte $b0;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if $z0 == 0 goto label2;

        $b0 = 105;

     label1:
        staticinvoke <android.app.ActivityThread: void access$800(android.app.ActivityThread,int,java.lang.Object)>($r2, $b0, $r1);

        return;

     label2:
        $b0 = 106;

        goto label1;
    }

    public void updateTimeZone()
    {
        android.app.ActivityThread$ApplicationThread $r0;

        $r0 := @this: android.app.ActivityThread$ApplicationThread;

        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        return;
    }

    public static void <clinit>()
    {
        <android.app.ActivityThread$ApplicationThread: java.lang.String TWO_COUNT_COLUMNS> = "%17s %8d %17s %8d";

        <android.app.ActivityThread$ApplicationThread: java.lang.String ONE_COUNT_COLUMN> = "%17s %8d";

        <android.app.ActivityThread$ApplicationThread: java.lang.String HEAP_COLUMN> = "%17s %8s %8s %8s %8s";

        <android.app.ActivityThread$ApplicationThread: int ACTIVITY_THREAD_CHECKIN_VERSION> = 1;

        return;
    }
}
