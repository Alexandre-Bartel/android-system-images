public class android.text.util.Linkify extends java.lang.Object
{
    public static final int ALL;
    public static final int EMAIL_ADDRESSES;
    public static final int MAP_ADDRESSES;
    public static final int PHONE_NUMBERS;
    private static final int PHONE_NUMBER_MINIMUM_DIGITS;
    public static final int WEB_URLS;
    public static final android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter;
    public static final android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter;
    public static final android.text.util.Linkify$MatchFilter sUrlMatchFilter;

    static void <clinit>()
    {
        android.text.util.Linkify$1 $r0;
        android.text.util.Linkify$2 $r1;
        android.text.util.Linkify$3 $r2;

        <android.text.util.Linkify: int WEB_URLS> = 1;

        <android.text.util.Linkify: int PHONE_NUMBER_MINIMUM_DIGITS> = 5;

        <android.text.util.Linkify: int PHONE_NUMBERS> = 4;

        <android.text.util.Linkify: int MAP_ADDRESSES> = 8;

        <android.text.util.Linkify: int EMAIL_ADDRESSES> = 2;

        <android.text.util.Linkify: int ALL> = 15;

        $r0 = new android.text.util.Linkify$1;

        specialinvoke $r0.<android.text.util.Linkify$1: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter> = $r0;

        $r1 = new android.text.util.Linkify$2;

        specialinvoke $r1.<android.text.util.Linkify$2: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter> = $r1;

        $r2 = new android.text.util.Linkify$3;

        specialinvoke $r2.<android.text.util.Linkify$3: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter> = $r2;

        return;
    }

    public void <init>()
    {
        android.text.util.Linkify $r0;

        $r0 := @this: android.text.util.Linkify;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final void addLinkMovementMethod(android.widget.TextView)
    {
        android.widget.TextView $r0;
        android.text.method.MovementMethod $r1;
        boolean $z0;

        $r0 := @parameter0: android.widget.TextView;

        $r1 = virtualinvoke $r0.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        if $r1 == null goto label1;

        $z0 = $r1 instanceof android.text.method.LinkMovementMethod;

        if $z0 != 0 goto label2;

     label1:
        $z0 = virtualinvoke $r0.<android.widget.TextView: boolean getLinksClickable()>();

        if $z0 == 0 goto label3;

        $r1 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke $r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r1);

        return;

     label2:
        return;

     label3:
        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String)
    {
        android.widget.TextView $r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.widget.TextView;

        $r1 := @parameter1: java.util.regex.Pattern;

        $r2 := @parameter2: java.lang.String;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r0, $r1, $r2, null, null);

        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.widget.TextView $r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        android.text.util.Linkify$MatchFilter $r3;
        android.text.util.Linkify$TransformFilter $r4;
        java.lang.CharSequence $r5;
        android.text.SpannableString $r6;
        boolean $z0;

        $r0 := @parameter0: android.widget.TextView;

        $r1 := @parameter1: java.util.regex.Pattern;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.text.util.Linkify$MatchFilter;

        $r4 := @parameter4: android.text.util.Linkify$TransformFilter;

        $r5 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r6 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($r5);

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r6, $r1, $r2, $r3, $r4);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>($r0);

        return;

     label1:
        return;
    }

    public static final boolean addLinks(android.text.Spannable, int)
    {
        android.text.Spannable $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object[] $r2;
        android.text.style.URLSpan[] $r3;
        android.text.style.URLSpan $r4;
        java.util.regex.Pattern $r5;
        java.lang.String[] $r6;
        android.text.util.Linkify$MatchFilter $r7;
        android.text.util.Linkify$TransformFilter $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        android.text.util.LinkSpec $r11;
        java.lang.String $r12;

        $r0 := @parameter0: android.text.Spannable;

        $i0 := @parameter1: int;

        if $i0 != 0 goto label01;

        return 0;

     label01:
        $i1 = interfaceinvoke $r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke $r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/style/URLSpan");

        $r3 = (android.text.style.URLSpan[]) $r2;

        $i1 = lengthof $r3;

        $i1 = $i1 - 1;

     label02:
        if $i1 < 0 goto label03;

        $r4 = $r3[$i1];

        interfaceinvoke $r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r4);

        $i1 = $i1 + -1;

        goto label02;

     label03:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label04;

        $r5 = <android.text.util.Regex: java.util.regex.Pattern WEB_URL_PATTERN>;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "http://";

        $r6[1] = "https://";

        $r7 = <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter>;

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r1, $r0, $r5, $r6, $r7, null);

     label04:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label05;

        $r5 = <android.text.util.Regex: java.util.regex.Pattern EMAIL_ADDRESS_PATTERN>;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "mailto:";

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r1, $r0, $r5, $r6, null, null);

     label05:
        $i1 = $i0 & 4;

        if $i1 == 0 goto label06;

        $r5 = <android.text.util.Regex: java.util.regex.Pattern PHONE_PATTERN>;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "tel:";

        $r7 = <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter>;

        $r8 = <android.text.util.Linkify: android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter>;

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r1, $r0, $r5, $r6, $r7, $r8);

     label06:
        $i0 = $i0 & 8;

        if $i0 == 0 goto label07;

        staticinvoke <android.text.util.Linkify: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)>($r1, $r0);

     label07:
        staticinvoke <android.text.util.Linkify: void pruneOverlaps(java.util.ArrayList)>($r1);

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label08;

        return 0;

     label08:
        $r9 = virtualinvoke $r1.<java.util.AbstractList: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.text.util.LinkSpec) $r10;

        $r12 = $r11.<android.text.util.LinkSpec: java.lang.String url>;

        $i0 = $r11.<android.text.util.LinkSpec: int start>;

        $i1 = $r11.<android.text.util.LinkSpec: int end>;

        staticinvoke <android.text.util.Linkify: void applyLink(java.lang.String,int,int,android.text.Spannable)>($r12, $i0, $i1, $r0);

        goto label09;

     label10:
        return 1;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String)
    {
        android.text.Spannable $r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.text.Spannable;

        $r1 := @parameter1: java.util.regex.Pattern;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>($r0, $r1, $r2, null, null);

        return $z0;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.text.Spannable $r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2, $r6;
        android.text.util.Linkify$MatchFilter $r3;
        android.text.util.Linkify$TransformFilter $r4;
        boolean $z0, $z1;
        java.util.regex.Matcher $r5;
        int $i0, $i1;
        java.lang.String[] $r7;

        $r0 := @parameter0: android.text.Spannable;

        $r1 := @parameter1: java.util.regex.Pattern;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.text.util.Linkify$MatchFilter;

        $r4 := @parameter4: android.text.util.Linkify$TransformFilter;

        $z0 = 0;

        if $r2 != null goto label4;

        $r2 = "";

     label1:
        $r5 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

     label2:
        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r5.<java.util.regex.Matcher: int start()>();

        $i1 = virtualinvoke $r5.<java.util.regex.Matcher: int end()>();

        $z1 = 1;

        if $r3 == null goto label3;

        $z1 = interfaceinvoke $r3.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>($r0, $i0, $i1);

     label3:
        if $z1 == 0 goto label2;

        $r6 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = $r2;

        $r6 = staticinvoke <android.text.util.Linkify: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($r6, $r7, $r5, $r4);

        staticinvoke <android.text.util.Linkify: void applyLink(java.lang.String,int,int,android.text.Spannable)>($r6, $i0, $i1, $r0);

        $z0 = 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        goto label1;

     label5:
        return $z0;
    }

    public static final boolean addLinks(android.widget.TextView, int)
    {
        android.widget.TextView $r0;
        int $i0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Spannable $r2;
        android.text.SpannableString $r3;

        $r0 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        $r2 = (android.text.Spannable) $r1;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($r2, $i0);

        if $z0 == 0 goto label2;

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>($r0);

        return 1;

     label2:
        return 0;

     label3:
        $r3 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($r1);

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($r3, $i0);

        if $z0 == 0 goto label4;

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>($r0);

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        return 1;

     label4:
        return 0;
    }

    private static final void applyLink(java.lang.String, int, int, android.text.Spannable)
    {
        java.lang.String $r0;
        int $i0, $i1;
        android.text.Spannable $r1;
        android.text.style.URLSpan $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.text.Spannable;

        $r2 = new android.text.style.URLSpan;

        specialinvoke $r2.<android.text.style.URLSpan: void <init>(java.lang.String)>($r0);

        interfaceinvoke $r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r2, $i0, $i1, 33);

        return;
    }

    private static final void gatherLinks(java.util.ArrayList, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        java.util.ArrayList $r0;
        android.text.Spannable $r1;
        java.util.regex.Pattern $r2;
        java.lang.String[] $r3;
        android.text.util.Linkify$MatchFilter $r4;
        android.text.util.Linkify$TransformFilter $r5;
        android.text.util.LinkSpec $r6;
        java.util.regex.Matcher $r7;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r8;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: android.text.Spannable;

        $r2 := @parameter2: java.util.regex.Pattern;

        $r3 := @parameter3: java.lang.String[];

        $r4 := @parameter4: android.text.util.Linkify$MatchFilter;

        $r5 := @parameter5: android.text.util.Linkify$TransformFilter;

        $r7 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

     label1:
        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r7.<java.util.regex.Matcher: int start()>();

        $i1 = virtualinvoke $r7.<java.util.regex.Matcher: int end()>();

        if $r4 == null goto label2;

        $z0 = interfaceinvoke $r4.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        if $z0 == 0 goto label1;

     label2:
        $r6 = new android.text.util.LinkSpec;

        specialinvoke $r6.<android.text.util.LinkSpec: void <init>()>();

        $r8 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r8 = staticinvoke <android.text.util.Linkify: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($r8, $r3, $r7, $r5);

        $r6.<android.text.util.LinkSpec: java.lang.String url> = $r8;

        $r6.<android.text.util.LinkSpec: int start> = $i0;

        $r6.<android.text.util.LinkSpec: int end> = $i1;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label1;

     label3:
        return;
    }

    private static final void gatherMapLinks(java.util.ArrayList, android.text.Spannable)
    {
        java.util.ArrayList $r0;
        android.text.Spannable $r1;
        int $i0, $i1, $i2;
        android.text.util.LinkSpec $r2;
        java.lang.String $r3, $r4;
        java.lang.StringBuilder $r5;
        java.io.UnsupportedEncodingException $r6;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: android.text.Spannable;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $i1 = 0;

     label1:
        $r4 = staticinvoke <android.webkit.WebView: java.lang.String findAddress(java.lang.String)>($r3);

        if $r4 == null goto label6;

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r4);

        if $i2 >= 0 goto label2;

        return;

     label2:
        $r2 = new android.text.util.LinkSpec;

        specialinvoke $r2.<android.text.util.LinkSpec: void <init>()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i2 + $i0;

        $i2 = $i1 + $i2;

        $r2.<android.text.util.LinkSpec: int start> = $i2;

        $i2 = $i1 + $i0;

        $r2.<android.text.util.LinkSpec: int end> = $i2;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        $i1 = $i1 + $i0;

     label3:
        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF-8");

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo:0,0?q=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<android.text.util.LinkSpec: java.lang.String url> = $r4;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label5:
        $r6 := @caughtexception;

        goto label1;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private static final java.lang.String makeUrl(java.lang.String, java.lang.String[], java.util.regex.Matcher, android.text.util.Linkify$TransformFilter)
    {
        java.lang.String[] $r0;
        java.util.regex.Matcher $r1;
        android.text.util.Linkify$TransformFilter $r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.StringBuilder $r6;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String[];

        $r1 := @parameter2: java.util.regex.Matcher;

        $r2 := @parameter3: android.text.util.Linkify$TransformFilter;

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<android.text.util.Linkify$TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>($r1, $r3);

     label1:
        $z0 = 0;

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $r4 = $r0[$i0];

        $r5 = $r0[$i0];

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, $r4, 0, $i1);

        if $z1 == 0 goto label4;

        $z0 = 1;

        $r4 = $r0[$i0];

        $r5 = $r0[$i0];

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(0, 0, $r4, 0, $i1);

        if $z1 != 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r0[$i0];

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = $r0[$i0];

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        if $z0 != 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r0[0];

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        return $r3;
    }

    private static final void pruneOverlaps(java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        android.text.util.Linkify$4 $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r2;
        android.text.util.LinkSpec $r3, $r4;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 = new android.text.util.Linkify$4;

        specialinvoke $r1.<android.text.util.Linkify$4: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r1);

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        $i2 = $i0 - 1;

        if $i1 >= $i2 goto label6;

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (android.text.util.LinkSpec) $r2;

        $i2 = $i1 + 1;

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (android.text.util.LinkSpec) $r2;

        $i2 = -1;

        $i3 = $r3.<android.text.util.LinkSpec: int start>;

        $i4 = $r4.<android.text.util.LinkSpec: int start>;

        if $i3 > $i4 goto label5;

        $i3 = $r3.<android.text.util.LinkSpec: int end>;

        $i4 = $r4.<android.text.util.LinkSpec: int start>;

        if $i3 <= $i4 goto label5;

        $i3 = $r4.<android.text.util.LinkSpec: int end>;

        $i4 = $r3.<android.text.util.LinkSpec: int end>;

        if $i3 > $i4 goto label3;

        $i2 = $i1 + 1;

     label2:
        if $i2 == -1 goto label5;

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object remove(int)>($i2);

        $i0 = $i0 + -1;

        goto label1;

     label3:
        $i3 = $r3.<android.text.util.LinkSpec: int end>;

        $i4 = $r3.<android.text.util.LinkSpec: int start>;

        $i3 = $i3 - $i4;

        $i4 = $r4.<android.text.util.LinkSpec: int end>;

        $i5 = $r4.<android.text.util.LinkSpec: int start>;

        $i4 = $i4 - $i5;

        if $i3 <= $i4 goto label4;

        $i2 = $i1 + 1;

        goto label2;

     label4:
        $i3 = $r3.<android.text.util.LinkSpec: int end>;

        $i4 = $r3.<android.text.util.LinkSpec: int start>;

        $i3 = $i3 - $i4;

        $i4 = $r4.<android.text.util.LinkSpec: int end>;

        $i5 = $r4.<android.text.util.LinkSpec: int start>;

        $i4 = $i4 - $i5;

        if $i3 >= $i4 goto label2;

        $i2 = $i1;

        goto label2;

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return;
    }
}
