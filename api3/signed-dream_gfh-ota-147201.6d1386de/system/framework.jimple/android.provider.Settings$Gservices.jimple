public final class android.provider.Settings$Gservices extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ANR_BUGREPORT_RECIPIENT;
    public static final java.lang.String AUTOTEST_CHECKIN_SECONDS;
    public static final java.lang.String AUTOTEST_REBOOT_SECONDS;
    public static final java.lang.String AUTOTEST_SUITES_FILE;
    public static final java.lang.String BATTERY_DISCHARGE_DURATION_THRESHOLD;
    public static final java.lang.String BATTERY_DISCHARGE_THRESHOLD;
    public static final java.lang.String CHANGED_ACTION;
    public static final java.lang.String CHECKIN_DUMPSYS_LIST;
    public static final java.lang.String CHECKIN_EVENTS;
    public static final java.lang.String CHECKIN_INTERVAL;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DISK_FREE_CHANGE_REPORTING_THRESHOLD;
    public static final java.lang.String GLS_PUBLIC_KEY;
    public static final java.lang.String GMAIL_BUFFER_SERVER_RESPONSE;
    public static final java.lang.String GMAIL_CONFIG_INFO_MIN_SERVER_VERSION;
    public static final java.lang.String GMAIL_DISALLOW_IMAGE_PREVIEWS;
    public static final java.lang.String GMAIL_MAX_ATTACHMENT_SIZE;
    public static final java.lang.String GMAIL_SEND_IMMEDIATELY;
    public static final java.lang.String GMAIL_TIMEOUT_MS;
    public static final java.lang.String GOOGLE_LOGIN_GENERIC_AUTH_SERVICE;
    public static final java.lang.String GOOGLE_SERVICES_PREFIX;
    public static final java.lang.String GPRS_REGISTER_CHECK_PERIOD_MS;
    public static final java.lang.String GTALK_DATA_MESSAGE_WAKELOCK_MS;
    public static final java.lang.String GTALK_SERVICE_ACTIVE_HEARTBEAT_INTERVAL_MS;
    public static final java.lang.String GTALK_SERVICE_AWAY_HEARTBEAT_INTERVAL_MS;
    public static final java.lang.String GTALK_SERVICE_CONNECT_ON_AUTO_SYNC;
    public static final java.lang.String GTALK_SERVICE_HEARTBEAT_ACK_TIMEOUT_MS;
    public static final java.lang.String GTALK_SERVICE_HOSTNAME;
    public static final java.lang.String GTALK_SERVICE_IDLE_TIMEOUT_MS;
    public static final java.lang.String GTALK_SERVICE_MAX_RECONNECT_DELAY;
    public static final java.lang.String GTALK_SERVICE_MIN_RECONNECT_DELAY_LONG;
    public static final java.lang.String GTALK_SERVICE_MIN_RECONNECT_DELAY_SHORT;
    public static final java.lang.String GTALK_SERVICE_NOSYNC_HEARTBEAT_INTERVAL_MS;
    public static final java.lang.String GTALK_SERVICE_RECONNECT_VARIANT_LONG;
    public static final java.lang.String GTALK_SERVICE_RECONNECT_VARIANT_SHORT;
    public static final java.lang.String GTALK_SERVICE_RMQ_ACK_INTERVAL;
    public static final java.lang.String GTALK_SERVICE_SECURE_PORT;
    public static final java.lang.String GTALK_SERVICE_SHORT_NETWORK_DOWNTIME;
    public static final java.lang.String GTALK_SERVICE_SYNC_HEARTBEAT_INTERVAL_MS;
    public static final java.lang.String GTALK_SSL_HANDSHAKE_TIMEOUT_MS;
    public static final java.lang.String MARKET_FORCE_CHECKIN;
    public static final java.lang.String MEMCHECK_EXEC_END_TIME;
    public static final java.lang.String MEMCHECK_EXEC_START_TIME;
    public static final java.lang.String MEMCHECK_INTERVAL;
    public static final java.lang.String MEMCHECK_LOG_REALTIME_INTERVAL;
    public static final java.lang.String MEMCHECK_MIN_ALARM;
    public static final java.lang.String MEMCHECK_MIN_SCREEN_OFF;
    public static final java.lang.String MEMCHECK_PHONE_ENABLED;
    public static final java.lang.String MEMCHECK_PHONE_HARD_THRESHOLD;
    public static final java.lang.String MEMCHECK_PHONE_SOFT_THRESHOLD;
    public static final java.lang.String MEMCHECK_RECHECK_INTERVAL;
    public static final java.lang.String MEMCHECK_SYSTEM_ENABLED;
    public static final java.lang.String MEMCHECK_SYSTEM_HARD_THRESHOLD;
    public static final java.lang.String MEMCHECK_SYSTEM_SOFT_THRESHOLD;
    public static final java.lang.String MMS_MAXIMUM_MESSAGE_SIZE;
    public static final java.lang.String MMS_X_WAP_PROFILE_URL;
    public static final java.lang.String PARENTAL_CONTROL_APPS_LIST;
    public static final java.lang.String PARENTAL_CONTROL_CHECK_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_EXPECTED_RESPONSE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_REGEX;
    public static final java.lang.String PARENTAL_CONTROL_TIMEOUT_IN_MS;
    public static final java.lang.String PDP_WATCHDOG_ERROR_POLL_COUNT;
    public static final java.lang.String PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS;
    public static final java.lang.String PDP_WATCHDOG_LONG_POLL_INTERVAL_MS;
    public static final java.lang.String PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT;
    public static final java.lang.String PDP_WATCHDOG_PING_ADDRESS;
    public static final java.lang.String PDP_WATCHDOG_PING_DEADLINE;
    public static final java.lang.String PDP_WATCHDOG_POLL_INTERVAL_MS;
    public static final java.lang.String PDP_WATCHDOG_TRIGGER_PACKET_COUNT;
    public static final java.lang.String PROVISIONING_DIGEST;
    public static final java.lang.String PROVISIONING_OVERRIDE;
    public static final java.lang.String REBOOT_INTERVAL;
    public static final java.lang.String REBOOT_START_TIME;
    public static final java.lang.String REBOOT_WINDOW;
    public static final java.lang.String SETTINGS_CONTRIBUTORS_PRETTY_URL;
    public static final java.lang.String SETTINGS_CONTRIBUTORS_URL;
    public static final java.lang.String SETTINGS_TOS_PRETTY_URL;
    public static final java.lang.String SETTINGS_TOS_URL;
    public static final java.lang.String SETUP_ANDROID_PRIVACY_URL;
    public static final java.lang.String SETUP_GOOGLE_PRIVACY_URL;
    public static final java.lang.String SETUP_GOOGLE_TOS_URL;
    public static final java.lang.String SHORT_KEYLIGHT_DELAY_MS;
    public static final java.lang.String SMS_OUTGOING_CEHCK_INTERVAL_MS;
    public static final java.lang.String SMS_OUTGOING_CEHCK_MAX_COUNT;
    public static final java.lang.String SSL_SESSION_CACHE;
    public static final java.lang.String SYNC_MAX_RETRY_DELAY_IN_SECONDS;
    public static final java.lang.String SYNC_MIN_GZIP_BYTES;
    public static final java.lang.String SYS_FREE_STORAGE_LOG_INTERVAL;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String SYS_STORAGE_THRESHOLD_PERCENTAGE;
    public static final java.lang.String USE_MSISDN_TOKEN;
    public static final java.lang.String VENDING_DEFAULT_FILTER;
    public static final java.lang.String VENDING_REQUIRE_SIM_FOR_PURCHASE;
    public static final java.lang.String VENDING_SUPPORT_URL;
    public static final java.lang.String VENDING_SYNC_FREQUENCY_MS;
    public static final java.lang.String VENDING_TAB_1_RANKING_TYPE;
    public static final java.lang.String VENDING_TAB_1_TITLE;
    public static final java.lang.String VENDING_TAB_2_RANKING_TYPE;
    public static final java.lang.String VENDING_TAB_2_TITLE;
    public static final java.lang.String VENDING_TOS_URL;
    public static final java.lang.String VENDING_TOS_VERSION;
    public static final java.lang.String VENDING_USE_CHECKOUT_QA_SERVICE;
    public static final java.lang.String VOICE_SEARCH_ENABLE_AGC;
    public static final java.lang.String VOICE_SEARCH_ENABLE_IIR;
    public static final java.lang.String VOICE_SEARCH_ENABLE_NS;
    public static final java.lang.String VOICE_SEARCH_ENCODING_THREE_G;
    public static final java.lang.String VOICE_SEARCH_ENCODING_WIFI;
    public static final java.lang.String VOICE_SEARCH_URL;
    public static final java.lang.String WIFI_IDLE_MS;
    public static final java.lang.String YOUTUBE_USE_PROXY;
    private static volatile android.provider.Settings$NameValueCache mNameValueCache;
    private static final java.lang.Object mNameValueCacheLock;

    static void <clinit>()
    {
        android.net.Uri $r0;
        java.lang.Object $r1;

        <android.provider.Settings$Gservices: java.lang.String YOUTUBE_USE_PROXY> = "youtube_use_proxy";

        <android.provider.Settings$Gservices: java.lang.String WIFI_IDLE_MS> = "wifi_idle_ms";

        <android.provider.Settings$Gservices: java.lang.String VOICE_SEARCH_URL> = "voice_search_url";

        <android.provider.Settings$Gservices: java.lang.String VOICE_SEARCH_ENCODING_WIFI> = "voice_search_encoding_wifi";

        <android.provider.Settings$Gservices: java.lang.String VOICE_SEARCH_ENCODING_THREE_G> = "voice_search_encoding_three_g";

        <android.provider.Settings$Gservices: java.lang.String VOICE_SEARCH_ENABLE_NS> = "voice_search_enable_ns";

        <android.provider.Settings$Gservices: java.lang.String VOICE_SEARCH_ENABLE_IIR> = "voice_search_enable_iir";

        <android.provider.Settings$Gservices: java.lang.String VOICE_SEARCH_ENABLE_AGC> = "voice_search_enable_agc";

        <android.provider.Settings$Gservices: java.lang.String VENDING_USE_CHECKOUT_QA_SERVICE> = "vending_use_checkout_qa_service";

        <android.provider.Settings$Gservices: java.lang.String VENDING_TOS_VERSION> = "vending_tos_version";

        <android.provider.Settings$Gservices: java.lang.String VENDING_TOS_URL> = "vending_tos_url";

        <android.provider.Settings$Gservices: java.lang.String VENDING_TAB_2_TITLE> = "vending_tab_2_title";

        <android.provider.Settings$Gservices: java.lang.String VENDING_TAB_2_RANKING_TYPE> = "vending_tab_2_ranking_type";

        <android.provider.Settings$Gservices: java.lang.String VENDING_TAB_1_TITLE> = "vending_tab_1_title";

        <android.provider.Settings$Gservices: java.lang.String VENDING_TAB_1_RANKING_TYPE> = "vending_tab_1_ranking_type";

        <android.provider.Settings$Gservices: java.lang.String VENDING_SYNC_FREQUENCY_MS> = "vending_sync_frequency_ms";

        <android.provider.Settings$Gservices: java.lang.String VENDING_SUPPORT_URL> = "vending_support_url";

        <android.provider.Settings$Gservices: java.lang.String VENDING_REQUIRE_SIM_FOR_PURCHASE> = "vending_require_sim_for_purchase";

        <android.provider.Settings$Gservices: java.lang.String VENDING_DEFAULT_FILTER> = "vending_default_filter";

        <android.provider.Settings$Gservices: java.lang.String USE_MSISDN_TOKEN> = "use_msisdn_token";

        <android.provider.Settings$Gservices: java.lang.String SYS_STORAGE_THRESHOLD_PERCENTAGE> = "sys_storage_threshold_percentage";

        <android.provider.Settings$Gservices: java.lang.String SYS_PROP_SETTING_VERSION> = "sys.settings_gservices_version";

        <android.provider.Settings$Gservices: java.lang.String SYS_FREE_STORAGE_LOG_INTERVAL> = "sys_free_storage_log_interval";

        <android.provider.Settings$Gservices: java.lang.String SYNC_MIN_GZIP_BYTES> = "sync_min_gzip_bytes";

        <android.provider.Settings$Gservices: java.lang.String SYNC_MAX_RETRY_DELAY_IN_SECONDS> = "sync_max_retry_delay_in_seconds";

        <android.provider.Settings$Gservices: java.lang.String SSL_SESSION_CACHE> = "ssl_session_cache";

        <android.provider.Settings$Gservices: java.lang.String SMS_OUTGOING_CEHCK_MAX_COUNT> = "sms_outgoing_check_max_count";

        <android.provider.Settings$Gservices: java.lang.String SMS_OUTGOING_CEHCK_INTERVAL_MS> = "sms_outgoing_check_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String SHORT_KEYLIGHT_DELAY_MS> = "short_keylight_delay_ms";

        <android.provider.Settings$Gservices: java.lang.String SETUP_GOOGLE_TOS_URL> = "setup_google_tos_url";

        <android.provider.Settings$Gservices: java.lang.String SETUP_GOOGLE_PRIVACY_URL> = "setup_google_privacy_url";

        <android.provider.Settings$Gservices: java.lang.String SETUP_ANDROID_PRIVACY_URL> = "setup_android_privacy_url";

        <android.provider.Settings$Gservices: java.lang.String SETTINGS_TOS_URL> = "settings_tos_url";

        <android.provider.Settings$Gservices: java.lang.String SETTINGS_TOS_PRETTY_URL> = "settings_tos_pretty_url";

        <android.provider.Settings$Gservices: java.lang.String SETTINGS_CONTRIBUTORS_URL> = "settings_contributors_url";

        <android.provider.Settings$Gservices: java.lang.String SETTINGS_CONTRIBUTORS_PRETTY_URL> = "settings_contributors_pretty_url";

        <android.provider.Settings$Gservices: java.lang.String REBOOT_WINDOW> = "reboot_window";

        <android.provider.Settings$Gservices: java.lang.String REBOOT_START_TIME> = "reboot_start_time";

        <android.provider.Settings$Gservices: java.lang.String REBOOT_INTERVAL> = "reboot_interval";

        <android.provider.Settings$Gservices: java.lang.String PROVISIONING_OVERRIDE> = "override";

        <android.provider.Settings$Gservices: java.lang.String PROVISIONING_DIGEST> = "digest";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_TRIGGER_PACKET_COUNT> = "pdp_watchdog_trigger_packet_count";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_POLL_INTERVAL_MS> = "pdp_watchdog_poll_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_PING_DEADLINE> = "pdp_watchdog_ping_deadline";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_PING_ADDRESS> = "pdp_watchdog_ping_address";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT> = "pdp_watchdog_max_pdp_reset_fail_count";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_LONG_POLL_INTERVAL_MS> = "pdp_watchdog_long_poll_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS> = "pdp_watchdog_error_poll_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String PDP_WATCHDOG_ERROR_POLL_COUNT> = "pdp_watchdog_error_poll_count";

        <android.provider.Settings$Gservices: java.lang.String PARENTAL_CONTROL_TIMEOUT_IN_MS> = "parental_control_timeout_in_ms";

        <android.provider.Settings$Gservices: java.lang.String PARENTAL_CONTROL_REDIRECT_REGEX> = "parental_control_redirect_regex";

        <android.provider.Settings$Gservices: java.lang.String PARENTAL_CONTROL_EXPECTED_RESPONSE> = "parental_control_expected_response";

        <android.provider.Settings$Gservices: java.lang.String PARENTAL_CONTROL_CHECK_ENABLED> = "parental_control_check_enabled";

        <android.provider.Settings$Gservices: java.lang.String PARENTAL_CONTROL_APPS_LIST> = "parental_control_apps_list";

        <android.provider.Settings$Gservices: java.lang.String MMS_X_WAP_PROFILE_URL> = "mms_x_wap_profile_url";

        <android.provider.Settings$Gservices: java.lang.String MMS_MAXIMUM_MESSAGE_SIZE> = "mms_maximum_message_size";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_SYSTEM_SOFT_THRESHOLD> = "memcheck_system_soft";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_SYSTEM_HARD_THRESHOLD> = "memcheck_system_hard";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_SYSTEM_ENABLED> = "memcheck_system_enabled";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_RECHECK_INTERVAL> = "memcheck_recheck_interval";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_PHONE_SOFT_THRESHOLD> = "memcheck_phone_soft";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_PHONE_HARD_THRESHOLD> = "memcheck_phone_hard";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_PHONE_ENABLED> = "memcheck_phone_enabled";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_MIN_SCREEN_OFF> = "memcheck_min_screen_off";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_MIN_ALARM> = "memcheck_min_alarm";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_LOG_REALTIME_INTERVAL> = "memcheck_log_realtime_interval";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_INTERVAL> = "memcheck_interval";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_EXEC_START_TIME> = "memcheck_exec_start_time";

        <android.provider.Settings$Gservices: java.lang.String MEMCHECK_EXEC_END_TIME> = "memcheck_exec_end_time";

        <android.provider.Settings$Gservices: java.lang.String MARKET_FORCE_CHECKIN> = "market_force_checkin";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SSL_HANDSHAKE_TIMEOUT_MS> = "gtalk_ssl_handshake_timeout_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_SYNC_HEARTBEAT_INTERVAL_MS> = "gtalk_sync_heartbeat_ping_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_SHORT_NETWORK_DOWNTIME> = "gtalk_short_network_downtime";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_SECURE_PORT> = "gtalk_secure_port";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_RMQ_ACK_INTERVAL> = "gtalk_rmq_ack_interval";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_RECONNECT_VARIANT_SHORT> = "gtalk_reconnect_variant_short";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_RECONNECT_VARIANT_LONG> = "gtalk_reconnect_variant_long";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_NOSYNC_HEARTBEAT_INTERVAL_MS> = "gtalk_nosync_heartbeat_ping_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_MIN_RECONNECT_DELAY_SHORT> = "gtalk_min_reconnect_delay_short";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_MIN_RECONNECT_DELAY_LONG> = "gtalk_min_reconnect_delay_long";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_MAX_RECONNECT_DELAY> = "gtalk_max_reconnect_delay";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_IDLE_TIMEOUT_MS> = "gtalk_idle_timeout_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_HOSTNAME> = "gtalk_hostname";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_HEARTBEAT_ACK_TIMEOUT_MS> = "gtalk_heartbeat_ack_timeout_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_CONNECT_ON_AUTO_SYNC> = "gtalk_connect_on_auto_sync";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_AWAY_HEARTBEAT_INTERVAL_MS> = "gtalk_heartbeat_ping_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_SERVICE_ACTIVE_HEARTBEAT_INTERVAL_MS> = "gtalk_active_heartbeat_ping_interval_ms";

        <android.provider.Settings$Gservices: java.lang.String GTALK_DATA_MESSAGE_WAKELOCK_MS> = "gtalk_data_message_wakelock_ms";

        <android.provider.Settings$Gservices: java.lang.String GPRS_REGISTER_CHECK_PERIOD_MS> = "gprs_register_check_period_ms";

        <android.provider.Settings$Gservices: java.lang.String GOOGLE_SERVICES_PREFIX> = "google_services:";

        <android.provider.Settings$Gservices: java.lang.String GOOGLE_LOGIN_GENERIC_AUTH_SERVICE> = "google_login_generic_auth_service";

        <android.provider.Settings$Gservices: java.lang.String GMAIL_TIMEOUT_MS> = "gmail_timeout_ms";

        <android.provider.Settings$Gservices: java.lang.String GMAIL_SEND_IMMEDIATELY> = "gmail_send_immediately";

        <android.provider.Settings$Gservices: java.lang.String GMAIL_MAX_ATTACHMENT_SIZE> = "gmail_max_attachment_size_bytes";

        <android.provider.Settings$Gservices: java.lang.String GMAIL_DISALLOW_IMAGE_PREVIEWS> = "gmail_disallow_image_previews";

        <android.provider.Settings$Gservices: java.lang.String GMAIL_CONFIG_INFO_MIN_SERVER_VERSION> = "gmail_config_info_min_server_version";

        <android.provider.Settings$Gservices: java.lang.String GMAIL_BUFFER_SERVER_RESPONSE> = "gmail_buffer_server_response";

        <android.provider.Settings$Gservices: java.lang.String GLS_PUBLIC_KEY> = "google_login_public_key";

        <android.provider.Settings$Gservices: java.lang.String DISK_FREE_CHANGE_REPORTING_THRESHOLD> = "disk_free_change_reporting_threshold";

        <android.provider.Settings$Gservices: java.lang.String CHECKIN_INTERVAL> = "checkin_interval";

        <android.provider.Settings$Gservices: java.lang.String CHECKIN_EVENTS> = "checkin_events";

        <android.provider.Settings$Gservices: java.lang.String CHECKIN_DUMPSYS_LIST> = "checkin_dumpsys_list";

        <android.provider.Settings$Gservices: java.lang.String CHANGED_ACTION> = "com.google.gservices.intent.action.GSERVICES_CHANGED";

        <android.provider.Settings$Gservices: java.lang.String BATTERY_DISCHARGE_THRESHOLD> = "battery_discharge_threshold";

        <android.provider.Settings$Gservices: java.lang.String BATTERY_DISCHARGE_DURATION_THRESHOLD> = "battery_discharge_duration_threshold";

        <android.provider.Settings$Gservices: java.lang.String AUTOTEST_SUITES_FILE> = "autotest_suites_file";

        <android.provider.Settings$Gservices: java.lang.String AUTOTEST_REBOOT_SECONDS> = "autotest_reboot_seconds";

        <android.provider.Settings$Gservices: java.lang.String AUTOTEST_CHECKIN_SECONDS> = "autotest_checkin_seconds";

        <android.provider.Settings$Gservices: java.lang.String ANR_BUGREPORT_RECIPIENT> = "anr_bugreport_recipient";

        <android.provider.Settings$Gservices: android.provider.Settings$NameValueCache mNameValueCache> = null;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.provider.Settings$Gservices: java.lang.Object mNameValueCacheLock> = $r1;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/gservices");

        <android.provider.Settings$Gservices: android.net.Uri CONTENT_URI> = $r0;

        return;
    }

    public void <init>()
    {
        android.provider.Settings$Gservices $r0;

        $r0 := @this: android.provider.Settings$Gservices;

        specialinvoke $r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = staticinvoke <android.provider.Settings$Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        return $i0;

     label4:
        $r2 := @caughtexception;

        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        long $l0;
        java.lang.NumberFormatException $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r1 = staticinvoke <android.provider.Settings$Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        if $r1 == null goto label3;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l0;

     label3:
        return $l0;

     label4:
        $r2 := @caughtexception;

        return $l0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        android.net.Uri $r3;
        android.provider.Settings$NameValueCache $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r2 = <android.provider.Settings$Gservices: java.lang.Object mNameValueCacheLock>;

        entermonitor $r2;

     label1:
        $r4 = <android.provider.Settings$Gservices: android.provider.Settings$NameValueCache mNameValueCache>;

        if $r4 != null goto label2;

        $r4 = new android.provider.Settings$NameValueCache;

        $r3 = <android.provider.Settings$Gservices: android.net.Uri CONTENT_URI>;

        specialinvoke $r4.<android.provider.Settings$NameValueCache: void <init>(java.lang.String,android.net.Uri)>("sys.settings_gservices_version", $r3);

        <android.provider.Settings$Gservices: android.provider.Settings$NameValueCache mNameValueCache> = $r4;

     label2:
        $r4 = <android.provider.Settings$Gservices: android.provider.Settings$NameValueCache mNameValueCache>;

        $r1 = virtualinvoke $r4.<android.provider.Settings$NameValueCache: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r0, $r1);

        exitmonitor $r2;

     label3:
        return $r1;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String $r0;
        android.net.Uri $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <android.provider.Settings$Gservices: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <android.provider.Settings$Gservices: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r1, $r0);

        return $r1;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.net.Uri $r3;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = <android.provider.Settings$Gservices: android.net.Uri CONTENT_URI>;

        $z0 = staticinvoke <android.provider.Settings$Gservices: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r3, $r1, $r2);

        return $z0;
    }
}
