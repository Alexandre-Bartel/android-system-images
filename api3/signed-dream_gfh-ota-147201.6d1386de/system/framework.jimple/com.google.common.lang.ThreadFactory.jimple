public class com.google.common.lang.ThreadFactory extends java.lang.Object
{
    private int created;
    private int running;

    public void <init>()
    {
        com.google.common.lang.ThreadFactory $r0;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.lang.ThreadFactory: int created> = 0;

        $r0.<com.google.common.lang.ThreadFactory: int running> = 0;

        return;
    }

    static void access$000(com.google.common.lang.ThreadFactory)
    {
        com.google.common.lang.ThreadFactory $r0;

        $r0 := @parameter0: com.google.common.lang.ThreadFactory;

        specialinvoke $r0.<com.google.common.lang.ThreadFactory: void incrementCreatedCount()>();

        return;
    }

    static void access$100(com.google.common.lang.ThreadFactory)
    {
        com.google.common.lang.ThreadFactory $r0;

        $r0 := @parameter0: com.google.common.lang.ThreadFactory;

        specialinvoke $r0.<com.google.common.lang.ThreadFactory: void incrementRunningCount()>();

        return;
    }

    static void access$200(com.google.common.lang.ThreadFactory)
    {
        com.google.common.lang.ThreadFactory $r0;

        $r0 := @parameter0: com.google.common.lang.ThreadFactory;

        specialinvoke $r0.<com.google.common.lang.ThreadFactory: void decrementRunningCount()>();

        return;
    }

    private void decrementRunningCount()
    {
        com.google.common.lang.ThreadFactory $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.lang.ThreadFactory: int running>;

        $i0 = $i0 - 1;

        $r0.<com.google.common.lang.ThreadFactory: int running> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void incrementCreatedCount()
    {
        com.google.common.lang.ThreadFactory $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.lang.ThreadFactory: int created>;

        $i0 = $i0 + 1;

        $r0.<com.google.common.lang.ThreadFactory: int created> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void incrementRunningCount()
    {
        com.google.common.lang.ThreadFactory $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.lang.ThreadFactory: int running>;

        $i0 = $i0 + 1;

        $r0.<com.google.common.lang.ThreadFactory: int running> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Thread createThread(java.lang.String, java.lang.Runnable)
    {
        com.google.common.lang.ThreadFactory $r0;
        java.lang.String $r1;
        java.lang.Runnable $r2;
        com.google.common.lang.ThreadFactory$ThreadImpl $r3;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = new com.google.common.lang.ThreadFactory$ThreadImpl;

        specialinvoke $r3.<com.google.common.lang.ThreadFactory$ThreadImpl: void <init>(com.google.common.lang.ThreadFactory,java.lang.String,java.lang.Runnable)>($r0, $r1, $r2);

        return $r3;
    }

    public void debug()
    {
        com.google.common.lang.ThreadFactory $r0;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        entermonitor $r0;

        exitmonitor $r0;

        return;
    }

    public int getCreatedCount()
    {
        com.google.common.lang.ThreadFactory $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        entermonitor $r0;

     label1:
        i0 = $r0.<com.google.common.lang.ThreadFactory: int created>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getRunningCount()
    {
        com.google.common.lang.ThreadFactory $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: com.google.common.lang.ThreadFactory;

        entermonitor $r0;

     label1:
        i0 = $r0.<com.google.common.lang.ThreadFactory: int running>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
