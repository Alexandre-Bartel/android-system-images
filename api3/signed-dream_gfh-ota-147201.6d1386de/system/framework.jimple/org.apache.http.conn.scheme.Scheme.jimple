public final class org.apache.http.conn.scheme.Scheme extends java.lang.Object
{
    private final int defaultPort;
    private final boolean layered;
    private final java.lang.String name;
    private final org.apache.http.conn.scheme.SocketFactory socketFactory;
    private java.lang.String stringRep;

    public void <init>(java.lang.String, org.apache.http.conn.scheme.SocketFactory, int)
    {
        org.apache.http.conn.scheme.Scheme $r0;
        java.lang.String $r1;
        org.apache.http.conn.scheme.SocketFactory $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.util.Locale $r5;
        boolean $z0;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.http.conn.scheme.SocketFactory;

        $i0 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme name may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket factory may not be null");

        throw $r3;

     label2:
        if $i0 <= 0 goto label3;

        if $i0 <= 65535 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Port is invalid: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label4:
        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name> = $r1;

        $r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory> = $r2;

        $r0.<org.apache.http.conn.scheme.Scheme: int defaultPort> = $i0;

        $z0 = $r2 instanceof org.apache.http.conn.scheme.LayeredSocketFactory;

        $r0.<org.apache.http.conn.scheme.Scheme: boolean layered> = $z0;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.http.conn.scheme.Scheme $r0, $r2;
        java.lang.Object $r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;
        int $i0, $i1;
        org.apache.http.conn.scheme.SocketFactory $r5, $r6;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        if $r0 != $r1 goto label2;

        return 1;

     label2:
        $z0 = $r1 instanceof org.apache.http.conn.scheme.Scheme;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = (org.apache.http.conn.scheme.Scheme) $r1;

        $r3 = $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        $r4 = $r2.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $i0 = $r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        $i1 = $r2.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        if $i0 != $i1 goto label4;

        $z0 = $r0.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        $z1 = $r2.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        if $z0 != $z1 goto label4;

        $r5 = $r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        $r6 = $r2.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public final int getDefaultPort()
    {
        org.apache.http.conn.scheme.Scheme $r0;
        int i0;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        i0 = $r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        return i0;
    }

    public final java.lang.String getName()
    {
        org.apache.http.conn.scheme.Scheme $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        r1 = $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        return r1;
    }

    public final org.apache.http.conn.scheme.SocketFactory getSocketFactory()
    {
        org.apache.http.conn.scheme.Scheme $r0;
        org.apache.http.conn.scheme.SocketFactory r1;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        r1 = $r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        return r1;
    }

    public int hashCode()
    {
        org.apache.http.conn.scheme.Scheme $r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        org.apache.http.conn.scheme.SocketFactory $r2;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        $i0 = $r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,int)>(17, $i0);

        $r1 = $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r1);

        $z0 = $r0.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,boolean)>($i0, $z0);

        $r2 = $r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r2);

        return $i0;
    }

    public final boolean isLayered()
    {
        org.apache.http.conn.scheme.Scheme $r0;
        boolean z0;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        z0 = $r0.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        return z0;
    }

    public final int resolvePort(int)
    {
        org.apache.http.conn.scheme.Scheme $r0;
        int $i0;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        $i0 := @parameter0: int;

        if $i0 <= 0 goto label1;

        if $i0 <= 65535 goto label2;

     label1:
        $i0 = $r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        return $i0;

     label2:
        return $i0;
    }

    public final java.lang.String toString()
    {
        org.apache.http.conn.scheme.Scheme $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: org.apache.http.conn.scheme.Scheme;

        $r2 = $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String stringRep>;

        if $r2 != null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i0 = $r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String stringRep> = $r2;

     label1:
        $r2 = $r0.<org.apache.http.conn.scheme.Scheme: java.lang.String stringRep>;

        return $r2;
    }
}
