public class com.google.common.LongVector extends java.lang.Object
{
    public static final int CAPACITY_INCREMENT;
    public static final int INITIAL_CAPACITY;
    private long[] elements;
    private int size;

    public void <init>()
    {
        com.google.common.LongVector $r0;
        long[] $r1;

        $r0 := @this: com.google.common.LongVector;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[16];

        $r0.<com.google.common.LongVector: long[] elements> = $r1;

        return;
    }

    public void <init>(int)
    {
        com.google.common.LongVector $r0;
        int $i0;
        long[] $r1;

        $r0 := @this: com.google.common.LongVector;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[$i0];

        $r0.<com.google.common.LongVector: long[] elements> = $r1;

        return;
    }

    public static com.google.common.LongVector unmarshal(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        java.io.DataInputStream $r1;
        long $l0;
        int $i1, $i2;
        java.io.IOException $r2;
        com.google.common.LongVector $r3;
        java.io.ByteArrayInputStream $r4;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i1 = $i1 % 8;

        if $i1 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Buffer length not divisible by 8.");

        throw $r2;

     label1:
        $i1 = lengthof $r0;

        $i1 = $i1 / 8;

        $r3 = new com.google.common.LongVector;

        specialinvoke $r3.<com.google.common.LongVector: void <init>(int)>($i1);

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r1 = new java.io.DataInputStream;

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label3;

        $l0 = virtualinvoke $r1.<java.io.DataInputStream: long readLong()>();

        virtualinvoke $r3.<com.google.common.LongVector: void addElement(long)>($l0);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return $r3;
    }

    private void verifyArrayIndex(int)
    {
        com.google.common.LongVector $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;

        $r0 := @this: com.google.common.LongVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        if $i0 <= $i1 goto label2;

     label1:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        return;
    }

    public void addElement(long)
    {
        com.google.common.LongVector $r0;
        long $l0;
        int $i1, $i2;
        long[] $r1;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 + 1;

        virtualinvoke $r0.<com.google.common.LongVector: void ensureCapacity(int)>($i1);

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i2 = $i1 + 1;

        $r0.<com.google.common.LongVector: int size> = $i2;

        $r1[$i1] = $l0;

        return;
    }

    public int capacity()
    {
        com.google.common.LongVector $r0;
        long[] $r1;
        int $i0;

        $r0 := @this: com.google.common.LongVector;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean contains(long)
    {
        com.google.common.LongVector $r0;
        long $l0, $l2;
        int $i1;
        long[] $r1;
        byte $b3;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $l2 = $r1[$i1];

        $b3 = $l2 cmp $l0;

        if $b3 != 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public void copyInto(long[])
    {
        com.google.common.LongVector $r0;
        long[] $r1, $r2;
        int $i0;

        $r0 := @this: com.google.common.LongVector;

        $r1 := @parameter0: long[];

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return;
    }

    public long elementAt(int)
    {
        com.google.common.LongVector $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        long[] $r2;
        long $l2;

        $r0 := @this: com.google.common.LongVector;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        if $i0 < $i1 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l2 = $r2[$i0];

        return $l2;
    }

    public void ensureCapacity(int)
    {
        com.google.common.LongVector $r0;
        int $i0, $i1;
        long[] $r1, $r2;

        $r0 := @this: com.google.common.LongVector;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label2;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i1 = lengthof $r1;

        $i1 = $i1 + 16;

        if $i1 >= $i0 goto label1;

        $i1 = $i0;

     label1:
        $r2 = newarray (long)[$i1];

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $r0.<com.google.common.LongVector: long[] elements> = $r2;

        return;

     label2:
        return;
    }

    public long firstElement()
    {
        com.google.common.LongVector $r0;
        int $i0;
        java.util.NoSuchElementException $r1;
        long[] $r2;
        long $l1;

        $r0 := @this: com.google.common.LongVector;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        if $i0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l1 = $r2[0];

        return $l1;
    }

    public int indexOf(long)
    {
        com.google.common.LongVector $r0;
        long $l0, $l3;
        int $i1, $i2;
        long[] $r1;
        byte $b4;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 = 0;

     label1:
        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 >= $i2 goto label3;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r1[$i1];

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int indexOf(long, int)
    {
        com.google.common.LongVector $r0;
        long $l0, $l3;
        int $i1, $i2;
        long[] $r1;
        byte $b4;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        specialinvoke $r0.<com.google.common.LongVector: void verifyArrayIndex(int)>($i1);

        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 < $i2 goto label4;

        return -1;

     label1:
        $i1 = $i1 + 1;

     label2:
        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 >= $i2 goto label3;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r1[$i1];

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label1;

        return $i1;

     label3:
        return -1;

     label4:
        goto label2;
    }

    public void insertElementAt(long, int)
    {
        com.google.common.LongVector $r0;
        long $l0;
        int $i1, $i2, $i3;
        long[] $r1, $r2;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        specialinvoke $r0.<com.google.common.LongVector: void verifyArrayIndex(int)>($i1);

        $i2 = $r0.<com.google.common.LongVector: int size>;

        $i2 = $i2 + 1;

        virtualinvoke $r0.<com.google.common.LongVector: void ensureCapacity(int)>($i2);

        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 >= $i2 goto label1;

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i2 = $i1 + 1;

        $i3 = $r0.<com.google.common.LongVector: int size>;

        $i3 = $i3 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, $i2, $i3);

     label1:
        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $r1[$i1] = $l0;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 + 1;

        $r0.<com.google.common.LongVector: int size> = $i1;

        return;
    }

    public boolean isEmpty()
    {
        com.google.common.LongVector $r0;
        int $i0;

        $r0 := @this: com.google.common.LongVector;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public long lastElement()
    {
        com.google.common.LongVector $r0;
        int $i0;
        java.util.NoSuchElementException $r1;
        long[] $r2;
        long $l1;

        $r0 := @this: com.google.common.LongVector;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        if $i0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        $i0 = $i0 - 1;

        $l1 = $r2[$i0];

        return $l1;
    }

    public int lastIndexOf(long)
    {
        com.google.common.LongVector $r0;
        long $l0, $l2;
        int $i1;
        long[] $r1;
        byte $b3;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $l2 = $r1[$i1];

        $b3 = $l2 cmp $l0;

        if $b3 != 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int lastIndexOf(long, int)
    {
        com.google.common.LongVector $r0;
        long $l0, $l3;
        int $i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        long[] $r2;
        byte $b4;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 < $i2 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r2[$i1];

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + -1;

        if $i1 >= 0 goto label1;

        return -1;
    }

    public byte[] marshal() throws java.io.IOException
    {
        com.google.common.LongVector $r0;
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2;
        int $i0, $i1;
        java.io.DataOutputStream $r3;
        long[] $r4;
        long $l2;

        $r0 := @this: com.google.common.LongVector;

        $r2 = new java.io.ByteArrayOutputStream;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        $i0 = $i0 * 8;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        $i0 = 0;

     label1:
        $i1 = $r0.<com.google.common.LongVector: int size>;

        if $i0 >= $i1 goto label2;

        $r4 = $r0.<com.google.common.LongVector: long[] elements>;

        $l2 = $r4[$i0];

        virtualinvoke $r3.<java.io.DataOutputStream: void writeLong(long)>($l2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r1;
    }

    public long max()
    {
        com.google.common.LongVector $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        long $l0, $l3;
        int $i1, $i2;
        long[] $r2;
        byte $b4;

        $r0 := @this: com.google.common.LongVector;

        $z0 = virtualinvoke $r0.<com.google.common.LongVector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $l0 = -9223372036854775808L;

        $i1 = 0;

     label2:
        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 >= $i2 goto label4;

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r2[$i1];

        $b4 = $l0 cmp $l3;

        if $b4 >= 0 goto label3;

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l0 = $r2[$i1];

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $l0;
    }

    public long min()
    {
        com.google.common.LongVector $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        long $l0, $l3;
        int $i1, $i2;
        long[] $r2;
        byte $b4;

        $r0 := @this: com.google.common.LongVector;

        $z0 = virtualinvoke $r0.<com.google.common.LongVector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $l0 = 9223372036854775807L;

        $i1 = 0;

     label2:
        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 >= $i2 goto label4;

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r2[$i1];

        $b4 = $l0 cmp $l3;

        if $b4 <= 0 goto label3;

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $l0 = $r2[$i1];

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $l0;
    }

    public void removeAllElements()
    {
        com.google.common.LongVector $r0;

        $r0 := @this: com.google.common.LongVector;

        $r0.<com.google.common.LongVector: int size> = 0;

        return;
    }

    public boolean removeElement(long)
    {
        com.google.common.LongVector $r0;
        long $l0, $l3;
        int $i1, $i2, $i5;
        long[] $r1, $r2;
        byte $b4;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i2 = 0;

     label1:
        $i1 = $r0.<com.google.common.LongVector: int size>;

        if $i2 >= $i1 goto label3;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r1[$i2];

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label2;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 - 1;

        $r0.<com.google.common.LongVector: int size> = $i1;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i1 = $i2 + 1;

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $i5 = $r0.<com.google.common.LongVector: int size>;

        $i5 = $i5 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i2, $i5);

        return 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void removeElementAt(int)
    {
        com.google.common.LongVector $r0;
        int $i0, $i1, $i2;
        long[] $r1, $r3;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        $r0 := @this: com.google.common.LongVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = $r0.<com.google.common.LongVector: int size>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 - 1;

        $r0.<com.google.common.LongVector: int size> = $i1;

        $r3 = $r0.<com.google.common.LongVector: long[] elements>;

        $i1 = $i0 + 1;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i2 = $r0.<com.google.common.LongVector: int size>;

        $i2 = $i2 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r1, $i0, $i2);

        return;
    }

    public void setElementAt(long, int)
    {
        com.google.common.LongVector $r0;
        long $l0;
        int $i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        long[] $r2;

        $r0 := @this: com.google.common.LongVector;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 < $i2 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $r2[$i1] = $l0;

        return;
    }

    public void setSize(int)
    {
        com.google.common.LongVector $r0;
        int $i0, $i1;
        long[] $r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        $r0 := @this: com.google.common.LongVector;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke $r0.<com.google.common.LongVector: void ensureCapacity(int)>($i0);

        $i1 = $r0.<com.google.common.LongVector: int size>;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $r1[$i1] = 0L;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r0.<com.google.common.LongVector: int size> = $i0;

        return;
    }

    public int size()
    {
        com.google.common.LongVector $r0;
        int i0;

        $r0 := @this: com.google.common.LongVector;

        i0 = $r0.<com.google.common.LongVector: int size>;

        return i0;
    }

    public long sum()
    {
        com.google.common.LongVector $r0;
        long $l0, $l3;
        int $i1, $i2;
        long[] $r1;

        $r0 := @this: com.google.common.LongVector;

        $l0 = 0L;

        $i1 = 0;

     label1:
        $i2 = $r0.<com.google.common.LongVector: int size>;

        if $i1 >= $i2 goto label2;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $l3 = $r1[$i1];

        $l0 = $l0 + $l3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $l0;
    }

    public java.lang.String toString()
    {
        com.google.common.LongVector $r0;
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        long[] $r3;
        long $l2;

        $r0 := @this: com.google.common.LongVector;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $i0 = 0;

     label1:
        $i1 = $r0.<com.google.common.LongVector: int size>;

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<com.google.common.LongVector: long[] elements>;

        $l2 = $r3[$i0];

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l2);

        $i1 = $r0.<com.google.common.LongVector: int size>;

        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public void trimToSize()
    {
        com.google.common.LongVector $r0;
        int $i0, $i1;
        long[] $r1, $r2;

        $r0 := @this: com.google.common.LongVector;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        $r1 = $r0.<com.google.common.LongVector: long[] elements>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        $r1 = newarray (long)[$i0];

        $r2 = $r0.<com.google.common.LongVector: long[] elements>;

        $i0 = $r0.<com.google.common.LongVector: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r0.<com.google.common.LongVector: long[] elements> = $r1;

        return;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.google.common.LongVector: int INITIAL_CAPACITY> = 16;

        <com.google.common.LongVector: int CAPACITY_INCREMENT> = 16;

        return;
    }
}
