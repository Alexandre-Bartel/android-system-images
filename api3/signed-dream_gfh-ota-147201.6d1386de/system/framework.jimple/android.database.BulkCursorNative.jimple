public abstract class android.database.BulkCursorNative extends android.os.Binder implements android.database.IBulkCursor
{

    public void <init>()
    {
        android.database.BulkCursorNative $r0;

        $r0 := @this: android.database.BulkCursorNative;

        specialinvoke $r0.<android.os.Binder: void <init>()>();

        virtualinvoke $r0.<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>($r0, "android.content.IBulkCursor");

        return;
    }

    public static android.database.IBulkCursor asInterface(android.os.IBinder)
    {
        android.os.IBinder $r0;
        android.os.IInterface $r1;
        android.database.BulkCursorProxy $r2;
        android.database.IBulkCursor $r3;

        $r0 := @parameter0: android.os.IBinder;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.content.IBulkCursor");

        $r3 = (android.database.IBulkCursor) $r1;

        if $r3 == null goto label2;

        return $r3;

     label2:
        $r2 = new android.database.BulkCursorProxy;

        specialinvoke $r2.<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>($r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.database.BulkCursorNative $r0;

        $r0 := @this: android.database.BulkCursorNative;

        return $r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.database.BulkCursorNative $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        boolean $z0;
        android.database.CursorWindow $r3;
        java.lang.String[] $r4;
        java.lang.String $r5;
        android.os.IBinder $r6;
        android.database.IContentObserver $r7;
        android.os.Parcelable$Creator $r8;
        java.lang.Object $r9;
        android.os.Bundle $r10;
        java.util.HashMap $r11;
        byte $b2;
        java.lang.Exception $r12;

        $r0 := @this: android.database.BulkCursorNative;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label19;
            case 5: goto label26;
            case 6: goto label13;
            case 7: goto label17;
            case 8: goto label33;
            case 9: goto label35;
            case 10: goto label42;
            case 11: goto label44;
            case 12: goto label15;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke $r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i1);

        return $z0;

     label02:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke $r0.<android.database.BulkCursorNative: android.database.CursorWindow getWindow(int)>($i0);

        if $r3 != null goto label04;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        return 1;

     label04:
        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r3.<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label05:
        return 1;

     label06:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $i0 = virtualinvoke $r0.<android.database.BulkCursorNative: int count()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

     label07:
        return 1;

     label08:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $r4 = virtualinvoke $r0.<android.database.BulkCursorNative: java.lang.String[] getColumnNames()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        $i0 = lengthof $r4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $i0 = lengthof $r4;

     label09:
        $i1 = 0;

     label10:
        if $i1 >= $i0 goto label12;

        $r5 = $r4[$i1];

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r5);

     label11:
        $i1 = $i1 + 1;

        goto label10;

     label12:
        return 1;

     label13:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r0.<android.database.BulkCursorNative: void deactivate()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

     label14:
        return 1;

     label15:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r0.<android.database.BulkCursorNative: void close()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

     label16:
        return 1;

     label17:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $r6 = virtualinvoke $r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r7 = staticinvoke <android.database.IContentObserver$Stub: android.database.IContentObserver asInterface(android.os.IBinder)>($r6);

        $r8 = <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r1);

        $r3 = (android.database.CursorWindow) $r9;

        $i0 = virtualinvoke $r0.<android.database.BulkCursorNative: int requery(android.database.IContentObserver,android.database.CursorWindow)>($r7, $r3);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r10 = virtualinvoke $r0.<android.database.BulkCursorNative: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r10);

     label18:
        return 1;

     label19:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $r11 = virtualinvoke $r1.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>(null);

        $z0 = virtualinvoke $r0.<android.database.BulkCursorNative: boolean updateRows(java.util.Map)>($r11);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

     label20:
        if $z0 != 1 goto label24;

     label21:
        $b2 = 1;

     label22:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label23:
        return 1;

     label24:
        $b2 = 0;

     label25:
        goto label22;

     label26:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $z0 = virtualinvoke $r0.<android.database.BulkCursorNative: boolean deleteRow(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

     label27:
        if $z0 != 1 goto label31;

     label28:
        $b2 = 1;

     label29:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label30:
        return 1;

     label31:
        $b2 = 0;

     label32:
        goto label29;

     label33:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r0.<android.database.BulkCursorNative: void onMove(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

     label34:
        return 1;

     label35:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $z0 = virtualinvoke $r0.<android.database.BulkCursorNative: boolean getWantsAllOnMoveCalls()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

     label36:
        if $z0 == 0 goto label40;

     label37:
        $b2 = 1;

     label38:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

     label39:
        return 1;

     label40:
        $b2 = 0;

     label41:
        goto label38;

     label42:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $r10 = virtualinvoke $r0.<android.database.BulkCursorNative: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke $r2.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r10);

     label43:
        return 1;

     label44:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IBulkCursor");

        $r10 = virtualinvoke $r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        $r10 = virtualinvoke $r0.<android.database.BulkCursorNative: android.os.Bundle respond(android.os.Bundle)>($r10);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke $r2.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r10);

     label45:
        return 1;

     label46:
        $r12 := @caughtexception;

        staticinvoke <android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>($r2, $r12);

        return 1;

        catch java.lang.Exception from label02 to label03 with label46;
        catch java.lang.Exception from label04 to label05 with label46;
        catch java.lang.Exception from label06 to label07 with label46;
        catch java.lang.Exception from label08 to label09 with label46;
        catch java.lang.Exception from label10 to label11 with label46;
        catch java.lang.Exception from label13 to label14 with label46;
        catch java.lang.Exception from label15 to label16 with label46;
        catch java.lang.Exception from label17 to label18 with label46;
        catch java.lang.Exception from label19 to label20 with label46;
        catch java.lang.Exception from label21 to label23 with label46;
        catch java.lang.Exception from label25 to label27 with label46;
        catch java.lang.Exception from label28 to label30 with label46;
        catch java.lang.Exception from label32 to label34 with label46;
        catch java.lang.Exception from label35 to label36 with label46;
        catch java.lang.Exception from label37 to label39 with label46;
        catch java.lang.Exception from label41 to label43 with label46;
        catch java.lang.Exception from label44 to label45 with label46;
    }
}
