public class org.apache.http.client.utils.URLEncodedUtils extends java.lang.Object
{
    public static final java.lang.String CONTENT_TYPE;
    private static final java.lang.String NAME_VALUE_SEPARATOR;
    private static final java.lang.String PARAMETER_SEPARATOR;

    public void <init>()
    {
        org.apache.http.client.utils.URLEncodedUtils $r0;

        $r0 := @this: org.apache.http.client.utils.URLEncodedUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String decode(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.UnsupportedEncodingException $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label3;

     label1:
        $r0 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return $r0;

     label3:
        $r1 = "ISO-8859-1";

        goto label1;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    private static java.lang.String encode(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.UnsupportedEncodingException $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label3;

     label1:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return $r0;

     label3:
        $r1 = "ISO-8859-1";

        goto label1;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String format(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r6, $r7;
        java.lang.StringBuilder $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.http.NameValuePair $r5;
        int $i0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.http.NameValuePair) $r4;

        $r6 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r6 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)>($r6, $r1);

        $r7 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        if $r7 == null goto label4;

        $r7 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)>($r7, $r1);

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label4:
        $r7 = "";

        goto label2;

     label5:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static boolean isEncoded(org.apache.http.HttpEntity)
    {
        org.apache.http.HttpEntity $r0;
        org.apache.http.Header $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: org.apache.http.HttpEntity;

        $r1 = interfaceinvoke $r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("application/x-www-form-urlencoded");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.util.List parse(java.net.URI, java.lang.String)
    {
        java.net.URI $r0;
        java.lang.String $r1, $r4;
        java.util.List $r2;
        java.util.ArrayList $r3;
        int $i0;
        java.util.Scanner $r5;

        $r0 := @parameter0: java.net.URI;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r4 = virtualinvoke $r0.<java.net.URI: java.lang.String getRawQuery()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.Scanner;

        specialinvoke $r5.<java.util.Scanner: void <init>(java.lang.String)>($r4);

        staticinvoke <org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>($r3, $r5, $r1);

        return $r3;

     label1:
        return $r2;

     label2:
        return $r2;
    }

    public static java.util.List parse(org.apache.http.HttpEntity) throws java.io.IOException
    {
        org.apache.http.HttpEntity $r0;
        java.util.List $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.String $r3;
        org.apache.http.Header $r4;
        int $i0;
        java.util.Scanner $r5;

        $r0 := @parameter0: org.apache.http.HttpEntity;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $z0 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)>($r0);

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r0);

        $r4 = interfaceinvoke $r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        if $r3 == null goto label4;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.Scanner;

        specialinvoke $r5.<java.util.Scanner: void <init>(java.lang.String)>($r3);

        if $r4 == null goto label2;

        $r3 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getValue()>();

     label1:
        staticinvoke <org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>($r2, $r5, $r3);

        return $r2;

     label2:
        $r3 = null;

        goto label1;

     label3:
        return $r1;

     label4:
        return $r1;

     label5:
        return $r1;
    }

    public static void parse(java.util.List, java.util.Scanner, java.lang.String)
    {
        java.util.List $r0;
        java.util.Scanner $r1;
        java.lang.String $r2, $r3, $r6;
        boolean $z0;
        java.lang.String[] $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        org.apache.http.message.BasicNameValuePair $r7;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.util.Scanner;

        $r2 := @parameter2: java.lang.String;

        virtualinvoke $r1.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("&");

     label1:
        $z0 = virtualinvoke $r1.<java.util.Scanner: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke $r1.<java.util.Scanner: java.lang.String next()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i0 = lengthof $r4;

        if $i0 == 0 goto label2;

        $i0 = lengthof $r4;

        if $i0 <= 2 goto label3;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad parameter");

        throw $r5;

     label3:
        $r3 = $r4[0];

        $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String decode(java.lang.String,java.lang.String)>($r3, $r2);

        $r6 = null;

        $i0 = lengthof $r4;

        if $i0 != 2 goto label4;

        $r6 = $r4[1];

        $r6 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String decode(java.lang.String,java.lang.String)>($r6, $r2);

     label4:
        $r7 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r7.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r3, $r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.http.client.utils.URLEncodedUtils: java.lang.String PARAMETER_SEPARATOR> = "&";

        <org.apache.http.client.utils.URLEncodedUtils: java.lang.String NAME_VALUE_SEPARATOR> = "=";

        <org.apache.http.client.utils.URLEncodedUtils: java.lang.String CONTENT_TYPE> = "application/x-www-form-urlencoded";

        return;
    }
}
