public class android.graphics.Path extends java.lang.Object
{
    private static final android.graphics.Path$FillType[] sFillTypeArray;
    private final int mNativePath;

    static void <clinit>()
    {
        android.graphics.Path$FillType[] $r0;
        android.graphics.Path$FillType $r1;

        $r0 = newarray (android.graphics.Path$FillType)[4];

        $r1 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        $r0[0] = $r1;

        $r1 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        $r0[1] = $r1;

        $r1 = <android.graphics.Path$FillType: android.graphics.Path$FillType INVERSE_WINDING>;

        $r0[2] = $r1;

        $r1 = <android.graphics.Path$FillType: android.graphics.Path$FillType INVERSE_EVEN_ODD>;

        $r0[3] = $r1;

        <android.graphics.Path: android.graphics.Path$FillType[] sFillTypeArray> = $r0;

        return;
    }

    public void <init>()
    {
        android.graphics.Path $r0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <android.graphics.Path: int init1()>();

        $r0.<android.graphics.Path: int mNativePath> = $i0;

        return;
    }

    public void <init>(android.graphics.Path)
    {
        android.graphics.Path $r0, $r1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Path;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = 0;

        if $r1 == null goto label1;

        $i0 = $r1.<android.graphics.Path: int mNativePath>;

     label1:
        $i0 = staticinvoke <android.graphics.Path: int init2(int)>($i0);

        $r0.<android.graphics.Path: int mNativePath> = $i0;

        return;
    }

    private static native void finalizer(int);

    private static native int init1();

    private static native int init2(int);

    private static native void native_addArc(int, android.graphics.RectF, float, float);

    private static native void native_addCircle(int, float, float, float, int);

    private static native void native_addOval(int, android.graphics.RectF, int);

    private static native void native_addPath(int, int);

    private static native void native_addPath(int, int, float, float);

    private static native void native_addPath(int, int, int);

    private static native void native_addRect(int, float, float, float, float, int);

    private static native void native_addRect(int, android.graphics.RectF, int);

    private static native void native_addRoundRect(int, android.graphics.RectF, float, float, int);

    private static native void native_addRoundRect(int, android.graphics.RectF, float[], int);

    private static native void native_arcTo(int, android.graphics.RectF, float, float, boolean);

    private static native void native_close(int);

    private static native void native_computeBounds(int, android.graphics.RectF, int);

    private static native void native_cubicTo(int, float, float, float, float, float, float);

    private static native int native_getFillType(int);

    private static native void native_incReserve(int, int);

    private static native boolean native_isEmpty(int);

    private static native boolean native_isRect(int, android.graphics.RectF);

    private static native void native_lineTo(int, float, float);

    private static native void native_moveTo(int, float, float);

    private static native void native_offset(int, float, float);

    private static native void native_offset(int, float, float, int);

    private static native void native_quadTo(int, float, float, float, float);

    private static native void native_rCubicTo(int, float, float, float, float, float, float);

    private static native void native_rLineTo(int, float, float);

    private static native void native_rMoveTo(int, float, float);

    private static native void native_rQuadTo(int, float, float, float, float);

    private static native void native_reset(int);

    private static native void native_rewind(int);

    private static native void native_set(int, int);

    private static native void native_setFillType(int, int);

    private static native void native_setLastPoint(int, float, float);

    private static native void native_transform(int, int);

    private static native void native_transform(int, int, int);

    public void addArc(android.graphics.RectF, float, float)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        float $f0, $f1;
        java.lang.NullPointerException $r2;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("need oval parameter");

        throw $r2;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_addArc(int,android.graphics.RectF,float,float)>($i0, $r1, $f0, $f1);

        return;
    }

    public void addCircle(float, float, float, android.graphics.Path$Direction)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2;
        android.graphics.Path$Direction $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 := @parameter3: android.graphics.Path$Direction;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path$Direction: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_addCircle(int,float,float,float,int)>($i0, $f0, $f1, $f2, $i1);

        return;
    }

    public void addOval(android.graphics.RectF, android.graphics.Path$Direction)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        android.graphics.Path$Direction $r2;
        java.lang.NullPointerException $r3;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Path$Direction;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("need oval parameter");

        throw $r3;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r2.<android.graphics.Path$Direction: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_addOval(int,android.graphics.RectF,int)>($i0, $r1, $i1);

        return;
    }

    public void addPath(android.graphics.Path)
    {
        android.graphics.Path $r0, $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_addPath(int,int)>($i0, $i1);

        return;
    }

    public void addPath(android.graphics.Path, float, float)
    {
        android.graphics.Path $r0, $r1;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Path;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_addPath(int,int,float,float)>($i0, $i1, $f0, $f1);

        return;
    }

    public void addPath(android.graphics.Path, android.graphics.Matrix)
    {
        android.graphics.Path $r0, $r1;
        android.graphics.Matrix $r2;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Path;

        $r2 := @parameter1: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path: int mNativePath>;

        $i2 = $r2.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Path: void native_addPath(int,int,int)>($i0, $i1, $i2);

        return;
    }

    public void addRect(float, float, float, float, android.graphics.Path$Direction)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Path$Direction $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 := @parameter4: android.graphics.Path$Direction;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path$Direction: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_addRect(int,float,float,float,float,int)>($i0, $f0, $f1, $f2, $f3, $i1);

        return;
    }

    public void addRect(android.graphics.RectF, android.graphics.Path$Direction)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        android.graphics.Path$Direction $r2;
        java.lang.NullPointerException $r3;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Path$Direction;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("need rect parameter");

        throw $r3;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r2.<android.graphics.Path$Direction: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_addRect(int,android.graphics.RectF,int)>($i0, $r1, $i1);

        return;
    }

    public void addRoundRect(android.graphics.RectF, float, float, android.graphics.Path$Direction)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        float $f0, $f1;
        android.graphics.Path$Direction $r2;
        java.lang.NullPointerException $r3;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 := @parameter3: android.graphics.Path$Direction;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("need rect parameter");

        throw $r3;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r2.<android.graphics.Path$Direction: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_addRoundRect(int,android.graphics.RectF,float,float,int)>($i0, $r1, $f0, $f1, $i1);

        return;
    }

    public void addRoundRect(android.graphics.RectF, float[], android.graphics.Path$Direction)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        float[] $r2;
        android.graphics.Path$Direction $r3;
        java.lang.NullPointerException $r4;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: float[];

        $r3 := @parameter2: android.graphics.Path$Direction;

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("need rect parameter");

        throw $r4;

     label1:
        $i0 = lengthof $r2;

        if $i0 >= 8 goto label2;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("radii[] needs 8 values");

        throw $r5;

     label2:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r3.<android.graphics.Path$Direction: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_addRoundRect(int,android.graphics.RectF,float[],int)>($i0, $r1, $r2, $i1);

        return;
    }

    public void arcTo(android.graphics.RectF, float, float)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_arcTo(int,android.graphics.RectF,float,float,boolean)>($i0, $r1, $f0, $f1, 0);

        return;
    }

    public void arcTo(android.graphics.RectF, float, float, boolean)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_arcTo(int,android.graphics.RectF,float,float,boolean)>($i0, $r1, $f0, $f1, $z0);

        return;
    }

    public void close()
    {
        android.graphics.Path $r0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_close(int)>($i0);

        return;
    }

    public void computeBounds(android.graphics.RectF, boolean)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        boolean $z0;
        int $i0;
        byte $b1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $z0 := @parameter1: boolean;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        if $z0 == 0 goto label2;

        $b1 = 1;

     label1:
        staticinvoke <android.graphics.Path: void native_computeBounds(int,android.graphics.RectF,int)>($i0, $r1, $b1);

        return;

     label2:
        $b1 = 0;

        goto label1;
    }

    public void cubicTo(float, float, float, float, float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f4 := @parameter4: float;

        $f5 := @parameter5: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_cubicTo(int,float,float,float,float,float,float)>($i0, $f0, $f1, $f2, $f3, $f4, $f5);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Path $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: android.graphics.Path;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void finalizer(int)>($i0);

     label2:
        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r1 := @caughtexception;

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.graphics.Path$FillType getFillType()
    {
        android.graphics.Path $r0;
        int $i0;
        android.graphics.Path$FillType[] $r1;
        android.graphics.Path$FillType $r2;

        $r0 := @this: android.graphics.Path;

        $r1 = <android.graphics.Path: android.graphics.Path$FillType[] sFillTypeArray>;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i0 = staticinvoke <android.graphics.Path: int native_getFillType(int)>($i0);

        $r2 = $r1[$i0];

        return $r2;
    }

    public void incReserve(int)
    {
        android.graphics.Path $r0;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_incReserve(int,int)>($i1, $i0);

        return;
    }

    public boolean isEmpty()
    {
        android.graphics.Path $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $z0 = staticinvoke <android.graphics.Path: boolean native_isEmpty(int)>($i0);

        return $z0;
    }

    public boolean isInverseFillType()
    {
        android.graphics.Path $r0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i0 = staticinvoke <android.graphics.Path: int native_getFillType(int)>($i0);

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRect(android.graphics.RectF)
    {
        android.graphics.Path $r0;
        android.graphics.RectF $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.RectF;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $z0 = staticinvoke <android.graphics.Path: boolean native_isRect(int,android.graphics.RectF)>($i0, $r1);

        return $z0;
    }

    public void lineTo(float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_lineTo(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void moveTo(float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_moveTo(int,float,float)>($i0, $f0, $f1);

        return;
    }

    final int ni()
    {
        android.graphics.Path $r0;
        int i0;

        $r0 := @this: android.graphics.Path;

        i0 = $r0.<android.graphics.Path: int mNativePath>;

        return i0;
    }

    public void offset(float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_offset(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void offset(float, float, android.graphics.Path)
    {
        android.graphics.Path $r0, $r1;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: android.graphics.Path;

        $i1 = 0;

        if $r1 == null goto label1;

        $i1 = $r1.<android.graphics.Path: int mNativePath>;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_offset(int,float,float,int)>($i0, $f0, $f1, $i1);

        return;
    }

    public void quadTo(float, float, float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_quadTo(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return;
    }

    public void rCubicTo(float, float, float, float, float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f4 := @parameter4: float;

        $f5 := @parameter5: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_rCubicTo(int,float,float,float,float,float,float)>($i0, $f0, $f1, $f2, $f3, $f4, $f5);

        return;
    }

    public void rLineTo(float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_rLineTo(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void rMoveTo(float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_rMoveTo(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void rQuadTo(float, float, float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_rQuadTo(int,float,float,float,float)>($i0, $f0, $f1, $f2, $f3);

        return;
    }

    public void reset()
    {
        android.graphics.Path $r0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_reset(int)>($i0);

        return;
    }

    public void rewind()
    {
        android.graphics.Path $r0;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_rewind(int)>($i0);

        return;
    }

    public void set(android.graphics.Path)
    {
        android.graphics.Path $r0, $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Path;

        if $r0 == $r1 goto label1;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_set(int,int)>($i0, $i1);

        return;

     label1:
        return;
    }

    public void setFillType(android.graphics.Path$FillType)
    {
        android.graphics.Path $r0;
        android.graphics.Path$FillType $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Path$FillType;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Path$FillType: int nativeInt>;

        staticinvoke <android.graphics.Path: void native_setFillType(int,int)>($i0, $i1);

        return;
    }

    public void setLastPoint(float, float)
    {
        android.graphics.Path $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: android.graphics.Path;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_setLastPoint(int,float,float)>($i0, $f0, $f1);

        return;
    }

    public void toggleInverseFillType()
    {
        android.graphics.Path $r0;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i0 = staticinvoke <android.graphics.Path: int native_getFillType(int)>($i0);

        $i0 = $i0 ^ 2;

        $i1 = $r0.<android.graphics.Path: int mNativePath>;

        staticinvoke <android.graphics.Path: void native_setFillType(int,int)>($i1, $i0);

        return;
    }

    public void transform(android.graphics.Matrix)
    {
        android.graphics.Path $r0;
        android.graphics.Matrix $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Path: void native_transform(int,int)>($i0, $i1);

        return;
    }

    public void transform(android.graphics.Matrix, android.graphics.Path)
    {
        android.graphics.Path $r0, $r2;
        android.graphics.Matrix $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Path;

        $r1 := @parameter0: android.graphics.Matrix;

        $r2 := @parameter1: android.graphics.Path;

        $i2 = 0;

        if $r2 == null goto label1;

        $i2 = $r2.<android.graphics.Path: int mNativePath>;

     label1:
        $i0 = $r0.<android.graphics.Path: int mNativePath>;

        $i1 = $r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Path: void native_transform(int,int,int)>($i0, $i1, $i2);

        return;
    }
}
