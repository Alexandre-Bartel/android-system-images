public class junit.textui.TestRunner extends junit.runner.BaseTestRunner
{
    public static final int EXCEPTION_EXIT;
    public static final int FAILURE_EXIT;
    public static final int SUCCESS_EXIT;
    private junit.textui.ResultPrinter fPrinter;

    public void <init>()
    {
        junit.textui.TestRunner $r0;
        java.io.PrintStream $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r0.<junit.textui.TestRunner: void <init>(java.io.PrintStream)>($r1);

        return;
    }

    public void <init>(java.io.PrintStream)
    {
        junit.textui.TestRunner $r0;
        java.io.PrintStream $r1;
        junit.textui.ResultPrinter $r2;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: java.io.PrintStream;

        $r2 = new junit.textui.ResultPrinter;

        specialinvoke $r2.<junit.textui.ResultPrinter: void <init>(java.io.PrintStream)>($r1);

        specialinvoke $r0.<junit.textui.TestRunner: void <init>(junit.textui.ResultPrinter)>($r2);

        return;
    }

    public void <init>(junit.textui.ResultPrinter)
    {
        junit.textui.TestRunner $r0;
        junit.textui.ResultPrinter $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: junit.textui.ResultPrinter;

        specialinvoke $r0.<junit.runner.BaseTestRunner: void <init>()>();

        $r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter> = $r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        junit.textui.TestRunner $r1;
        junit.framework.TestResult $r2;
        boolean $z0;
        java.lang.Exception $r3;
        java.io.PrintStream $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new junit.textui.TestRunner;

        specialinvoke $r1.<junit.textui.TestRunner: void <init>()>();

     label1:
        $r2 = virtualinvoke $r1.<junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>($r0);

        $z0 = virtualinvoke $r2.<junit.framework.TestResult: boolean wasSuccessful()>();

        if $z0 != 0 goto label2;

        staticinvoke <java.lang.System: void exit(int)>(1);

     label2:
        staticinvoke <java.lang.System: void exit(int)>(0);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);

        staticinvoke <java.lang.System: void exit(int)>(2);

        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public static junit.framework.TestResult run(junit.framework.Test)
    {
        junit.framework.Test $r0;
        junit.textui.TestRunner $r1;
        junit.framework.TestResult $r2;

        $r0 := @parameter0: junit.framework.Test;

        $r1 = new junit.textui.TestRunner;

        specialinvoke $r1.<junit.textui.TestRunner: void <init>()>();

        $r2 = virtualinvoke $r1.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>($r0);

        return $r2;
    }

    public static void run(java.lang.Class)
    {
        java.lang.Class $r0;
        junit.framework.TestSuite $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = new junit.framework.TestSuite;

        specialinvoke $r1.<junit.framework.TestSuite: void <init>(java.lang.Class)>($r0);

        staticinvoke <junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>($r1);

        return;
    }

    public static void runAndWait(junit.framework.Test)
    {
        junit.framework.Test $r0;
        junit.textui.TestRunner $r1;

        $r0 := @parameter0: junit.framework.Test;

        $r1 = new junit.textui.TestRunner;

        specialinvoke $r1.<junit.textui.TestRunner: void <init>()>();

        virtualinvoke $r1.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>($r0, 1);

        return;
    }

    protected junit.framework.TestResult createTestResult()
    {
        junit.textui.TestRunner $r0;
        junit.framework.TestResult $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 = new junit.framework.TestResult;

        specialinvoke $r1.<junit.framework.TestResult: void <init>()>();

        return $r1;
    }

    public junit.framework.TestResult doRun(junit.framework.Test)
    {
        junit.textui.TestRunner $r0;
        junit.framework.Test $r1;
        junit.framework.TestResult $r2;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: junit.framework.Test;

        $r2 = virtualinvoke $r0.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>($r1, 0);

        return $r2;
    }

    public junit.framework.TestResult doRun(junit.framework.Test, boolean)
    {
        junit.textui.TestRunner $r0;
        junit.framework.Test $r1;
        boolean $z0;
        long $l0, $l1;
        junit.framework.TestResult $r2;
        junit.textui.ResultPrinter $r3;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: junit.framework.Test;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r0.<junit.textui.TestRunner: junit.framework.TestResult createTestResult()>();

        $r3 = $r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter>;

        virtualinvoke $r2.<junit.framework.TestResult: void addListener(junit.framework.TestListener)>($r3);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke $r1.<junit.framework.Test: void run(junit.framework.TestResult)>($r2);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $r3 = $r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter>;

        virtualinvoke $r3.<junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>($r2, $l0);

        virtualinvoke $r0.<junit.textui.TestRunner: void pause(boolean)>($z0);

        return $r2;
    }

    public junit.runner.TestSuiteLoader getLoader()
    {
        junit.textui.TestRunner $r0;
        junit.runner.StandardTestSuiteLoader $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 = new junit.runner.StandardTestSuiteLoader;

        specialinvoke $r1.<junit.runner.StandardTestSuiteLoader: void <init>()>();

        return $r1;
    }

    protected void pause(boolean)
    {
        junit.textui.TestRunner $r0;
        boolean $z0;
        junit.textui.ResultPrinter $r1;
        java.io.InputStream $r2;
        java.lang.Exception $r3;

        $r0 := @this: junit.textui.TestRunner;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = $r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter>;

        virtualinvoke $r1.<junit.textui.ResultPrinter: void printWaitPrompt()>();

        $r2 = <java.lang.System: java.io.InputStream in>;

     label2:
        virtualinvoke $r2.<java.io.InputStream: int read()>();

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void runFailed(java.lang.String)
    {
        junit.textui.TestRunner $r0;
        java.lang.String $r1;
        java.io.PrintStream $r2;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    public void setPrinter(junit.textui.ResultPrinter)
    {
        junit.textui.TestRunner $r0;
        junit.textui.ResultPrinter $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: junit.textui.ResultPrinter;

        $r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter> = $r1;

        return;
    }

    protected junit.framework.TestResult start(java.lang.String[]) throws java.lang.Exception
    {
        junit.textui.TestRunner $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5;
        java.lang.Exception $r6, $r9;
        junit.framework.Test $r7;
        junit.framework.TestResult $r8;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: java.lang.String[];

        $r2 = "";

        $z0 = 0;

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        $r3 = $r1[$i0];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-wait");

        if $z1 == 0 goto label3;

        $z0 = 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r3 = $r1[$i0];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z1 == 0 goto label4;

        $i0 = $i0 + 1;

        $r2 = $r1[$i0];

        $r2 = virtualinvoke $r0.<junit.runner.BaseTestRunner: java.lang.String extractClassName(java.lang.String)>($r2);

        goto label2;

     label4:
        $r3 = $r1[$i0];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z1 == 0 goto label5;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit ");

        $r3 = staticinvoke <junit.runner.Version: java.lang.String id()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by Kent Beck and Erich Gamma");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

        goto label2;

     label5:
        $r2 = $r1[$i0];

        goto label2;

     label6:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label7;

        $r6 = new java.lang.Exception;

        specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>("Usage: TestRunner [-wait] testCaseName, where name is the name of the TestCase class");

        throw $r6;

     label7:
        $r7 = virtualinvoke $r0.<junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>($r2);

        $r8 = virtualinvoke $r0.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>($r7, $z0);

     label8:
        return $r8;

     label9:
        $r6 := @caughtexception;

        $r9 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create and run test suite: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        throw $r9;

        catch java.lang.Exception from label7 to label8 with label9;
    }

    public void testEnded(java.lang.String)
    {
        junit.textui.TestRunner $r0;
        java.lang.String $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void testFailed(int, junit.framework.Test, java.lang.Throwable)
    {
        junit.textui.TestRunner $r0;
        int $i0;
        junit.framework.Test $r1;
        java.lang.Throwable $r2;

        $r0 := @this: junit.textui.TestRunner;

        $i0 := @parameter0: int;

        $r1 := @parameter1: junit.framework.Test;

        $r2 := @parameter2: java.lang.Throwable;

        return;
    }

    public void testStarted(java.lang.String)
    {
        junit.textui.TestRunner $r0;
        java.lang.String $r1;

        $r0 := @this: junit.textui.TestRunner;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public static void <clinit>()
    {
        <junit.textui.TestRunner: int FAILURE_EXIT> = 1;

        <junit.textui.TestRunner: int EXCEPTION_EXIT> = 2;

        return;
    }
}
