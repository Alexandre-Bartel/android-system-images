public class org.apache.harmony.security.utils.AlgNameMapper extends java.lang.Object
{
    private static final java.util.Map alg2OidMap;
    private static final java.util.Map algAliasesMap;
    private static final java.lang.String[][] knownAlgMappings;
    private static final java.util.Map oid2AlgMap;
    private static final java.lang.String[] serviceName;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.String[][] $r1;
        java.util.HashMap $r2;
        int $i0, $i1;
        java.lang.String $r3, $r5;
        java.util.Map $r4;
        java.security.Provider[] $r6;
        java.security.Provider $r7;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "Cipher";

        $r0[1] = "AlgorithmParameters";

        $r0[2] = "Signature";

        <org.apache.harmony.security.utils.AlgNameMapper: java.lang.String[] serviceName> = $r0;

        $r1 = newarray (java.lang.String[])[20];

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.10040.4.1";

        $r0[1] = "DSA";

        $r1[0] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.10040.4.3";

        $r0[1] = "SHA1withDSA";

        $r1[1] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.1.1";

        $r0[1] = "RSA";

        $r1[2] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.1.2";

        $r0[1] = "MD2withRSA";

        $r1[3] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.1.4";

        $r0[1] = "MD5withRSA";

        $r1[4] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.1.5";

        $r0[1] = "SHA1withRSA";

        $r1[5] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.3.1";

        $r0[1] = "DiffieHellman";

        $r1[6] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.5.3";

        $r0[1] = "pbeWithMD5AndDES-CBC";

        $r1[7] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.12.1.3";

        $r0[1] = "pbeWithSHAAnd3-KeyTripleDES-CBC";

        $r1[8] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.1.12.1.6";

        $r0[1] = "pbeWithSHAAnd40BitRC2-CBC";

        $r1[9] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.2";

        $r0[1] = "RC2-CBC";

        $r1[10] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.3";

        $r0[1] = "RC2-EBC";

        $r1[11] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.4";

        $r0[1] = "RC4";

        $r1[12] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.5";

        $r0[1] = "RC4WithMAC";

        $r1[13] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.6";

        $r0[1] = "DESx-CBC";

        $r1[14] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.7";

        $r0[1] = "TripleDES-CBC";

        $r1[15] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.8";

        $r0[1] = "rc5CBC";

        $r1[16] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.9";

        $r0[1] = "RC5-CBC";

        $r1[17] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "1.2.840.113549.3.10";

        $r0[1] = "DESCDMF";

        $r1[18] = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "2.23.42.9.11.4.1";

        $r0[1] = "ECDSA";

        $r1[19] = $r0;

        <org.apache.harmony.security.utils.AlgNameMapper: java.lang.String[][] knownAlgMappings> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map alg2OidMap> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map oid2AlgMap> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap> = $r2;

        $r1 = <org.apache.harmony.security.utils.AlgNameMapper: java.lang.String[][] knownAlgMappings>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r0 = $r1[$i1];

        $r3 = $r0[1];

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map alg2OidMap>;

        $r5 = $r0[0];

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r4 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map oid2AlgMap>;

        $r5 = $r0[0];

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

        $r4 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        $r5 = $r0[1];

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r6 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r7 = $r6[$i1];

        staticinvoke <org.apache.harmony.security.utils.AlgNameMapper: void selectEntries(java.security.Provider)>($r7);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void <init>()
    {
        org.apache.harmony.security.utils.AlgNameMapper $r0;

        $r0 := @this: org.apache.harmony.security.utils.AlgNameMapper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String dump()
    {
        java.lang.StringBuffer $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("alg2OidMap: ");

        $r2 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map alg2OidMap>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\noid2AlgMap: ");

        $r2 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map oid2AlgMap>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nalgAliasesMap: ");

        $r2 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getStandardName(java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r2;

        return $r1;
    }

    public static boolean isOID(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.harmony.security.utils.AlgNameMapper: java.lang.String normalize(java.lang.String)>($r0);

        $z0 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: boolean isOID(java.lang.String)>($r0);

        return $z0;
    }

    public static java.lang.String map2AlgName(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Map $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map oid2AlgMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r2;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r2;

        return $r0;
    }

    public static java.lang.String map2OID(java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map alg2OidMap>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r2;

        return $r1;
    }

    public static java.lang.String normalize(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("OID.");

        if $z0 == 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(4);

        return $r0;

     label1:
        return $r0;
    }

    private static void selectEntries(java.security.Provider)
    {
        java.lang.String[] $r0;
        int $i0, $i1, $i2;
        java.security.Provider $r1;
        java.util.Set $r2;
        java.lang.String $r3, $r8, $r9, $r10;
        java.lang.StringBuilder $r4;
        java.util.Iterator $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        java.util.Map $r11;

        $r1 := @parameter0: java.security.Provider;

        $r2 = virtualinvoke $r1.<java.security.Provider: java.util.Set entrySet()>();

        $r0 = <org.apache.harmony.security.utils.AlgNameMapper: java.lang.String[] serviceName>;

        $i0 = lengthof $r0;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label09;

        $r3 = $r0[$i1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label02;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i2);

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.String) $r6;

        $r10 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = staticinvoke <org.apache.harmony.security.utils.AlgNameMapper: boolean isOID(java.lang.String)>($r9);

        if $z0 == 0 goto label07;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("OID.");

        if $z0 == 0 goto label10;

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(4);

     label03:
        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map oid2AlgMap>;

        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map alg2OidMap>;

        $z1 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r10);

        if $z0 == 0 goto label04;

        if $z1 != 0 goto label02;

     label04:
        if $z0 != 0 goto label05;

        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map oid2AlgMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

     label05:
        if $z1 != 0 goto label06;

        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map alg2OidMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

     label06:
        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r8);

        goto label02;

     label07:
        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r10);

        if $z0 != 0 goto label02;

        $r11 = <org.apache.harmony.security.utils.AlgNameMapper: java.util.Map algAliasesMap>;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r8);

        goto label02;

     label08:
        $i1 = $i1 + 1;

        goto label01;

     label09:
        return;

     label10:
        goto label03;
    }
}
