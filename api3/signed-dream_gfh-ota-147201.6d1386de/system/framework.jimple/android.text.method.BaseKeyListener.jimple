public abstract class android.text.method.BaseKeyListener extends android.text.method.MetaKeyKeyListener implements android.text.method.KeyListener
{
    static final java.lang.Object OLD_SEL_START;

    static void <clinit>()
    {
        android.text.NoCopySpan$Concrete $r0;

        $r0 = new android.text.NoCopySpan$Concrete;

        specialinvoke $r0.<android.text.NoCopySpan$Concrete: void <init>()>();

        <android.text.method.BaseKeyListener: java.lang.Object OLD_SEL_START> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.method.BaseKeyListener $r0;

        $r0 := @this: android.text.method.BaseKeyListener;

        specialinvoke $r0.<android.text.method.MetaKeyKeyListener: void <init>()>();

        return;
    }

    private boolean altBackspace(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener $r0;
        android.text.Editable $r1;
        int $i0, $i1;
        android.view.KeyEvent $r2;
        android.view.View $r3;
        boolean $z0;
        android.widget.TextView $r4;
        android.text.Layout $r5;

        $r0 := @this: android.text.method.BaseKeyListener;

        $r3 := @parameter0: android.view.View;

        $r1 := @parameter1: android.text.Editable;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.view.KeyEvent;

        $i0 = staticinvoke <android.text.method.BaseKeyListener: int getMetaState(java.lang.CharSequence,int)>($r1, 2);

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $z0 = $r3 instanceof android.widget.TextView;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = (android.widget.TextView) $r3;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r5 != null goto label3;

        return 0;

     label3:
        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        $i1 = virtualinvoke $r5.<android.text.Layout: int getLineForOffset(int)>($i0);

        $i0 = virtualinvoke $r5.<android.text.Layout: int getLineStart(int)>($i1);

        $i1 = virtualinvoke $r5.<android.text.Layout: int getLineEnd(int)>($i1);

        if $i1 != $i0 goto label4;

        return 0;

     label4:
        interfaceinvoke $r1.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i1);

        return 1;
    }

    static int makeTextContentType(android.text.method.TextKeyListener$Capitalize, boolean)
    {
        android.text.method.TextKeyListener$Capitalize $r0;
        boolean $z0;
        int $i0;
        char $c1;
        int[] $r1;

        $r0 := @parameter0: android.text.method.TextKeyListener$Capitalize;

        $z0 := @parameter1: boolean;

        $c1 = 1;

        $r1 = <android.text.method.BaseKeyListener$1: int[] $SwitchMap$android$text$method$TextKeyListener$Capitalize>;

        $i0 = virtualinvoke $r0.<java.lang.Enum: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        if $z0 == 0 goto label5;

        $c1 = $c1 | 32768;

        return $c1;

     label2:
        $c1 = 1 | 4096;

        goto label1;

     label3:
        $c1 = 1 | 8192;

        goto label1;

     label4:
        $c1 = 1 | 16384;

        goto label1;

     label5:
        return $c1;
    }

    public boolean backspace(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener $r0;
        android.view.View $r1;
        android.text.Editable $r2;
        int $i0, $i1, $i2, $i3;
        android.view.KeyEvent $r3;
        boolean $z0, $z1;

        $r0 := @this: android.text.method.BaseKeyListener;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.text.Editable;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.view.KeyEvent;

        $z0 = 1;

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        if $i3 == $i1 goto label2;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>($i3, $i1);

     label1:
        if $z0 == 0 goto label5;

        staticinvoke <android.text.method.BaseKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>($r2);

        return $z0;

     label2:
        $z1 = specialinvoke $r0.<android.text.method.BaseKeyListener: boolean altBackspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r1, $r2, $i0, $r3);

        if $z1 == 0 goto label3;

        $z0 = 1;

        goto label1;

     label3:
        $i3 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r2, $i1);

        if $i3 == $i1 goto label4;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i1);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i1);

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i3);

        goto label1;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        return $z0;
    }

    public boolean onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener $r0;
        android.view.View $r1;
        android.text.Editable $r2;
        int $i0;
        android.view.KeyEvent $r3;
        boolean $z0;

        $r0 := @this: android.text.method.BaseKeyListener;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.text.Editable;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.view.KeyEvent;

        if $i0 != 67 goto label1;

        virtualinvoke $r0.<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r1, $r2, $i0, $r3);

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>($r1, $r2, $i0, $r3);

        return $z0;
    }

    public boolean onKeyOther(android.view.View, android.text.Editable, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener $r0;
        android.view.View $r1;
        android.text.Editable $r2;
        android.view.KeyEvent $r3;
        int $i0, $i1, $i2;
        java.lang.String $r4;

        $r0 := @this: android.text.method.BaseKeyListener;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.text.Editable;

        $r3 := @parameter2: android.view.KeyEvent;

        $i0 = virtualinvoke $r3.<android.view.KeyEvent: int getAction()>();

        if $i0 != 2 goto label1;

        $i0 = virtualinvoke $r3.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $r4 = virtualinvoke $r3.<android.view.KeyEvent: java.lang.String getCharacters()>();

        if $r4 != null goto label3;

        return 0;

     label3:
        interfaceinvoke $r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i0, $i1, $r4);

        return 1;
    }
}
