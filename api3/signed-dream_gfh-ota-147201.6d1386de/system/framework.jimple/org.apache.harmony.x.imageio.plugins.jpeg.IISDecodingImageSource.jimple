public class org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource extends org.apache.harmony.awt.gl.image.DecodingImageSource
{
    private final java.io.InputStream is;

    public void <init>(javax.imageio.stream.ImageInputStream)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource $r0;
        javax.imageio.stream.ImageInputStream $r1;
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource;

        $r1 := @parameter0: javax.imageio.stream.ImageInputStream;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.DecodingImageSource: void <init>()>();

        $r2 = new org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        specialinvoke $r2.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: void <init>(javax.imageio.stream.ImageInputStream)>($r1);

        $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource: java.io.InputStream is> = $r2;

        return;
    }

    protected boolean checkConnection()
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource $r0;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource;

        return 1;
    }

    protected java.io.InputStream getInputStream()
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource $r0;
        java.io.InputStream r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource;

        r1 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource: java.io.InputStream is>;

        return r1;
    }
}
