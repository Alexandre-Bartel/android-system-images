public final class com.android.internal.os.BatteryStatsImpl$Timer extends android.os.BatteryStats$Timer implements com.android.internal.os.BatteryStatsImpl$Unpluggable
{
    long mAcquireTime;
    int mCount;
    int mLastCount;
    long mLastTime;
    int mLoadedCount;
    long mLoadedTime;
    int mNesting;
    final java.util.ArrayList mTimerPool;
    long mTotalTime;
    final int mType;
    int mUnpluggedCount;
    long mUnpluggedTime;
    long mUpdateTime;

    void <init>(int, java.util.ArrayList, java.util.ArrayList)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        int $i0;
        java.util.ArrayList $r1, $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.util.ArrayList;

        specialinvoke $r0.<android.os.BatteryStats$Timer: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mType> = $i0;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool> = $r1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        return;
    }

    void <init>(int, java.util.ArrayList, java.util.ArrayList, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        int $i0;
        java.util.ArrayList $r1, $r2;
        android.os.Parcel $r3;
        long $l1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.util.ArrayList;

        $r3 := @parameter3: android.os.Parcel;

        specialinvoke $r0.<android.os.BatteryStats$Timer: void <init>()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mType> = $i0;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool> = $r1;

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i0;

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLoadedCount> = $i0;

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLastCount> = $i0;

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mUnpluggedCount> = $i0;

        $l1 = virtualinvoke $r3.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l1;

        $l1 = virtualinvoke $r3.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLoadedTime> = $l1;

        $l1 = virtualinvoke $r3.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLastTime> = $l1;

        $l1 = virtualinvoke $r3.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime> = $l1;

        $l1 = virtualinvoke $r3.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUnpluggedTime> = $l1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        return;
    }

    private long computeRunTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        long $l0, $l2, $l3;
        int $i1;
        java.util.ArrayList $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $l0 := @parameter0: long;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting>;

        if $i1 <= 0 goto label4;

        $l3 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime>;

        $l0 = $l0 - $l3;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        if $r1 == null goto label3;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label1:
        $l3 = (long) $i1;

        $l0 = $l0 / $l3;

     label2:
        $l0 = $l2 + $l0;

        return $l0;

     label3:
        $i1 = 1;

        goto label1;

     label4:
        $l0 = 0L;

        goto label2;
    }

    private static void refreshTimersLocked(com.android.internal.os.BatteryStatsImpl, java.util.ArrayList)
    {
        com.android.internal.os.BatteryStatsImpl $r0;
        java.util.ArrayList $r1;
        long $l0, $l1, $l4, $l6;
        int $i2, $i3;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Timer $r3;
        byte $b5;

        $r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $r1 := @parameter1: java.util.ArrayList;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $l1 * 1000L;

        $l1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l1);

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

     label1:
        if $i3 < 0 goto label3;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Timer) $r2;

        $l4 = $r3.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime>;

        $l0 = $l1 - $l4;

        $b5 = $l0 cmp 0L;

        if $b5 <= 0 goto label2;

        $l4 = $r3.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        $l6 = (long) $i2;

        $l0 = $l0 / $l6;

        $l4 = $l4 + $l0;

        $r3.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l4;

     label2:
        $r3.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime> = $l1;

        $i3 = $i3 + -1;

        goto label1;

     label3:
        return;
    }

    public static void writeTimerToParcel(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$Timer, long)
    {
        android.os.Parcel $r0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;
        long $l0;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: com.android.internal.os.BatteryStatsImpl$Timer;

        $l0 := @parameter2: long;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>($r0, $l0);

        return;
    }

    public int getCount(int)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        int $i0, $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLastCount>;

        return $i0;

     label1:
        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        if $i0 != 3 goto label2;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mUnpluggedCount>;

        $i1 = $i1 - $i0;

        return $i1;

     label2:
        if $i0 == 0 goto label3;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLoadedCount>;

        $i1 = $i1 - $i0;

        return $i1;

     label3:
        return $i1;
    }

    public long getTotalTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        long $l0, $l2;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        if $i1 != 1 goto label1;

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLastTime>;

        return $l0;

     label1:
        $l0 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l0);

        if $i1 != 3 goto label2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUnpluggedTime>;

        $l0 = $l0 - $l2;

        return $l0;

     label2:
        if $i1 == 0 goto label3;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLoadedTime>;

        $l0 = $l0 - $l2;

        return $l0;

     label3:
        return $l0;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        android.util.Printer $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0;
        long $l1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 := @parameter0: android.util.Printer;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNesting=");

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCount=");

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLoadedCount=");

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLoadedCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastCount=");

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLastCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedCount=");

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mUnpluggedCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTotalTime=");

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLoadedTime=");

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLoadedTime>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastTime=");

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLastTime>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedTime=");

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUnpluggedTime>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUpdateTime=");

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAcquireTime=");

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mAcquireTime>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>($r2);

        return;
    }

    public void plug(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        long $l0, $l1;
        int $i2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting>;

        if $i2 <= 0 goto label1;

        $l0 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l1);

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l0;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime> = $l1;

        return;

     label1:
        return;
    }

    void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        android.os.Parcel $r1;
        long $l0;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 := @parameter0: android.os.Parcel;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $l0 = $l0 * 1000L;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLoadedTime> = $l0;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l0;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $l0 = $l0 * 1000L;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLastTime> = $l0;

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUnpluggedTime> = $l0;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLoadedCount> = $i1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i1;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLastCount> = $i1;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mUnpluggedCount> = $i1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting> = 0;

        return;
    }

    void startRunningLocked(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        int $i0, $i1;
        long $l2;
        java.util.ArrayList $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting>;

        $i0 = $i1 + 1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting> = $i0;

        if $i1 != 0 goto label2;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l2 * 1000L;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime> = $l2;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void refreshTimersLocked(com.android.internal.os.BatteryStatsImpl,java.util.ArrayList)>($r1, $r2);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

     label1:
        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i0;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mAcquireTime> = $l2;

        return;

     label2:
        return;
    }

    void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        long $l0, $l2;
        int $i1;
        java.util.ArrayList $r2;
        byte $b3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting>;

        if $i1 != 0 goto label1;

        return;

     label1:
        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting>;

        $i1 = $i1 - 1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting> = $i1;

        if $i1 != 0 goto label4;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        if $r2 == null goto label3;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void refreshTimersLocked(com.android.internal.os.BatteryStatsImpl,java.util.ArrayList)>($r1, $r2);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r0);

     label2:
        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mAcquireTime>;

        $b3 = $l0 cmp $l2;

        if $b3 != 0 goto label5;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        $i1 = $i1 - 1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i1;

        return;

     label3:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l0 = $l0 * 1000L;

        $l0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l0);

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting> = 1;

        $l0 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l0);

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l0;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mNesting> = 0;

        goto label2;

     label4:
        return;

     label5:
        return;
    }

    public void unplug(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        long $l0, $l1;
        int $i2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l0 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l1);

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUnpluggedTime> = $l0;

        $i2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mUnpluggedCount> = $i2;

        return;
    }

    void writeSummaryFromParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        android.os.Parcel $r1;
        long $l0, $l2;
        int $i1, $i3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 := @parameter0: android.os.Parcel;

        $l0 := @parameter1: long;

        $l0 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l0);

        $l2 = $l0 + 500L;

        $l2 = $l2 / 1000L;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLoadedTime>;

        $l0 = $l0 - $l2;

        $l0 = $l0 + 500L;

        $l0 = $l0 / 1000L;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i3 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLoadedCount>;

        $i1 = $i3 - $i1;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer $r0;
        android.os.Parcel $r1;
        long $l0;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 := @parameter0: android.os.Parcel;

        $l0 := @parameter1: long;

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLoadedCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mLastCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mUnpluggedCount>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l0 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l0);

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLoadedTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mLastTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUpdateTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mUnpluggedTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        return;
    }
}
