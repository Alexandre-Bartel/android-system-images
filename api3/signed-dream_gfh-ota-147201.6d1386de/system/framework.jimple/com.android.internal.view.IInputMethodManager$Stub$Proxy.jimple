class com.android.internal.view.IInputMethodManager$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputMethodManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public void addClient(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        com.android.internal.view.IInputContext $r2;
        int $i0, $i1;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 := @parameter1: com.android.internal.view.IInputContext;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label5;

        $r5 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        if $r2 == null goto label6;

        $r5 = interfaceinvoke $r2.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i1);

        $r5 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r5 = null;

        goto label2;

     label6:
        $r5 = null;

        goto label3;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label7;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void finishInput(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public java.util.List getEnabledInputMethodList() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        android.os.Parcelable$Creator $r4;
        java.util.ArrayList $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r3 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = <android.view.inputmethod.InputMethodInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke $r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r5;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getInputMethodList() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        android.os.Parcelable$Creator $r4;
        java.util.ArrayList $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r3 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = <android.view.inputmethod.InputMethodInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke $r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r5;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        return "com.android.internal.view.IInputMethodManager";
    }

    public void hideMySoftInput(android.os.IBinder, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        int $i0;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r1 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hideSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        int $i0;
        android.os.ResultReceiver $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.ResultReceiver;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label06;

        $r5 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label02:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        if $r2 == null goto label07;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label03:
        $r5 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

     label04:
        if $i0 == 0 goto label10;

        $z0 = 1;

     label05:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $z0;

     label06:
        $r5 = null;

        goto label02;

     label07:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label03;

     label09:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

     label10:
        $z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void removeClient(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void setInputMethod(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        android.os.Parcel $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r1 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setInputMethodEnabled(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        java.lang.String $r1;
        boolean $z0;
        android.os.Parcel $r2, $r3;
        byte $b0;
        android.os.IBinder $r4;
        int $i1;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

     label2:
        if $z0 == 0 goto label7;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label5:
        if $i1 == 0 goto label8;

        $z0 = 1;

     label6:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label7:
        $b0 = 0;

        goto label4;

     label8:
        $z0 = 0;

        goto label6;

     label9:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label5 with label9;
    }

    public void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label4;

        $r4 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void showMySoftInput(android.os.IBinder, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        int $i0;
        android.os.Parcel $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        $r1 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean showSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        int $i0;
        android.os.ResultReceiver $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.ResultReceiver;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label06;

        $r5 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label02:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        if $r2 == null goto label07;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label03:
        $r5 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

     label04:
        if $i0 == 0 goto label10;

        $z0 = 1;

     label05:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $z0;

     label06:
        $r5 = null;

        goto label02;

     label07:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label03;

     label09:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

     label10:
        $z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo, boolean, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        com.android.internal.view.IInputContext $r2;
        android.view.inputmethod.EditorInfo $r3;
        boolean $z0, $z1;
        android.os.Parcel $r4, $r5;
        android.os.IBinder $r6;
        byte $b0;
        int $i1;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        com.android.internal.view.InputBindResult $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 := @parameter1: com.android.internal.view.IInputContext;

        $r3 := @parameter2: android.view.inputmethod.EditorInfo;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label11;

        $r6 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label02:
        virtualinvoke $r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        if $r2 == null goto label12;

        $r6 = interfaceinvoke $r2.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label03:
        virtualinvoke $r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        if $r3 == null goto label13;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r3.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>($r4, 0);

     label04:
        if $z0 == 0 goto label16;

     label05:
        $b0 = 1;

     label06:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b0);

     label07:
        if $z1 == 0 goto label17;

     label08:
        $b0 = 1;

     label09:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b0);

        $r6 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r4, $r5, 0);

        virtualinvoke $r5.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke $r5.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label18;

        $r7 = <com.android.internal.view.InputBindResult: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r5);

        $r9 = (com.android.internal.view.InputBindResult) $r8;

     label10:
        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $r9;

     label11:
        $r6 = null;

        goto label02;

     label12:
        $r6 = null;

        goto label03;

     label13:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        goto label04;

     label15:
        $r10 := @caughtexception;

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        throw $r10;

     label16:
        $b0 = 0;

        goto label06;

     label17:
        $b0 = 0;

        goto label09;

     label18:
        $r9 = null;

        goto label10;

        catch java.lang.Throwable from label01 to label04 with label15;
        catch java.lang.Throwable from label05 to label07 with label15;
        catch java.lang.Throwable from label08 to label10 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void updateStatusIcon(android.os.IBinder, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        int $i0;
        android.os.Parcel $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        $r1 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r1.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void windowGainedFocus(com.android.internal.view.IInputMethodClient, android.os.IBinder, boolean, boolean, int, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy $r0;
        com.android.internal.view.IInputMethodClient $r1;
        android.os.IBinder $r2, $r5;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        android.os.Parcel $r3, $r4;
        byte $b2;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $r2 := @parameter1: android.os.IBinder;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $i0 := @parameter4: int;

        $z2 := @parameter5: boolean;

        $i1 := @parameter6: int;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        if $r1 == null goto label13;

        $r5 = interfaceinvoke $r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label02:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

     label03:
        if $z0 == 0 goto label14;

     label04:
        $b2 = 1;

     label05:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($b2);

     label06:
        if $z1 == 0 goto label15;

     label07:
        $b2 = 1;

     label08:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($b2);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

     label09:
        if $z2 == 0 goto label16;

     label10:
        $b2 = 1;

     label11:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($b2);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = $r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r5 = null;

        goto label02;

     label14:
        $b2 = 0;

        goto label05;

     label15:
        $b2 = 0;

        goto label08;

     label16:
        $b2 = 0;

        goto label11;

     label17:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label04 to label06 with label17;
        catch java.lang.Throwable from label07 to label09 with label17;
        catch java.lang.Throwable from label10 to label12 with label17;
    }
}
