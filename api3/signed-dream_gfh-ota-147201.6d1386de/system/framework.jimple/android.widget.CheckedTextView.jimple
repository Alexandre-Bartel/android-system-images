public abstract class android.widget.CheckedTextView extends android.widget.TextView implements android.widget.Checkable
{
    private static final int[] CHECKED_STATE_SET;
    private int mBasePaddingRight;
    private android.graphics.drawable.Drawable mCheckMarkDrawable;
    private int mCheckMarkResource;
    private int mCheckMarkWidth;
    private boolean mChecked;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <android.widget.CheckedTextView: int[] CHECKED_STATE_SET> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.CheckedTextView $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.CheckedTextView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.CheckedTextView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.CheckedTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.CheckedTextView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.graphics.drawable.Drawable $r5;
        boolean $z0;

        $r0 := @this: android.widget.CheckedTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = <com.android.internal.R$styleable: int[] CheckedTextView>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if $r5 == null goto label1;

        virtualinvoke $r0.<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>($r5);

     label1:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke $r0.<android.widget.CheckedTextView: void setChecked(boolean)>($z0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.CheckedTextView $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.widget.CheckedTextView;

        specialinvoke $r0.<android.widget.TextView: void drawableStateChanged()>();

        $r2 = $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $r2 = $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public boolean isChecked()
    {
        android.widget.CheckedTextView $r0;
        boolean z0;

        $r0 := @this: android.widget.CheckedTextView;

        z0 = $r0.<android.widget.CheckedTextView: boolean mChecked>;

        return z0;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.CheckedTextView $r0;
        int $i0;
        int[] $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.CheckedTextView;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $r1 = specialinvoke $r0.<android.view.View: int[] onCreateDrawableState(int)>($i0);

        $z0 = virtualinvoke $r0.<android.widget.CheckedTextView: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <android.widget.CheckedTextView: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.CheckedTextView: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

        return $r1;

     label1:
        return $r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.CheckedTextView $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.widget.CheckedTextView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if $r2 == null goto label4;

        $i1 = virtualinvoke $r0.<android.widget.TextView: int getGravity()>();

        $i0 = $i1 & 112;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = 0;

        lookupswitch($i0)
        {
            case 16: goto label3;
            case 80: goto label2;
            default: goto label1;
        };

     label1:
        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i3 = $r0.<android.widget.CheckedTextView: int mCheckMarkWidth>;

        $i3 = $i0 - $i3;

        $i4 = $r0.<android.widget.CheckedTextView: int mBasePaddingRight>;

        $i3 = $i3 - $i4;

        $i4 = $r0.<android.widget.CheckedTextView: int mBasePaddingRight>;

        $i0 = $i0 - $i4;

        $i1 = $i2 + $i1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i2, $i0, $i1);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label2:
        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i2 = $i2 - $i1;

        goto label1;

     label3:
        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i2 = $i2 - $i1;

        $i2 = $i2 / 2;

        goto label1;

     label4:
        return;
    }

    public void setCheckMarkDrawable(int)
    {
        android.widget.CheckedTextView $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;
        android.content.res.Resources $r2;

        $r0 := @this: android.widget.CheckedTextView;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $i1 = $r0.<android.widget.CheckedTextView: int mCheckMarkResource>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r0.<android.widget.CheckedTextView: int mCheckMarkResource> = $i0;

        $r1 = null;

        $i0 = $r0.<android.widget.CheckedTextView: int mCheckMarkResource>;

        if $i0 == 0 goto label2;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $i0 = $r0.<android.widget.CheckedTextView: int mCheckMarkResource>;

        $r1 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label2:
        virtualinvoke $r0.<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setCheckMarkDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.CheckedTextView $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        int[] $r3;

        $r0 := @this: android.widget.CheckedTextView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label5;

        $r2 = $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r2 = $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        virtualinvoke $r0.<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r2);

     label1:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        $i0 = virtualinvoke $r0.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 0);

        $r3 = <android.widget.CheckedTextView: int[] CHECKED_STATE_SET>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r0.<android.widget.TextView: void setMinHeight(int)>($i0);

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r0.<android.widget.CheckedTextView: int mCheckMarkWidth> = $i0;

        $i0 = $r0.<android.widget.CheckedTextView: int mCheckMarkWidth>;

        $i1 = $r0.<android.widget.CheckedTextView: int mBasePaddingRight>;

        $i0 = $i0 + $i1;

        $r0.<android.view.View: int mPaddingRight> = $i0;

        $r3 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        $r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable> = $r1;

     label3:
        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $i0 = $r0.<android.widget.CheckedTextView: int mBasePaddingRight>;

        $r0.<android.view.View: int mPaddingRight> = $i0;

        goto label3;
    }

    public void setChecked(boolean)
    {
        android.widget.CheckedTextView $r0;
        boolean $z0, $z1;

        $r0 := @this: android.widget.CheckedTextView;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.widget.CheckedTextView: boolean mChecked>;

        if $z1 == $z0 goto label1;

        $r0.<android.widget.CheckedTextView: boolean mChecked> = $z0;

        virtualinvoke $r0.<android.view.View: void refreshDrawableState()>();

        return;

     label1:
        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.widget.CheckedTextView $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.CheckedTextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        $i0 = $r0.<android.view.View: int mPaddingRight>;

        $r0.<android.widget.CheckedTextView: int mBasePaddingRight> = $i0;

        return;
    }

    public void toggle()
    {
        android.widget.CheckedTextView $r0;
        boolean $z0;

        $r0 := @this: android.widget.CheckedTextView;

        $z0 = $r0.<android.widget.CheckedTextView: boolean mChecked>;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r0.<android.widget.CheckedTextView: void setChecked(boolean)>($z0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
}
