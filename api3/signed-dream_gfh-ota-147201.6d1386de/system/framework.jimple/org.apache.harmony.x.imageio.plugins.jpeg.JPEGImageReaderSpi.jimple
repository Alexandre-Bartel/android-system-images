public class org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi extends javax.imageio.spi.ImageReaderSpi
{

    public void <init>()
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi $r0;
        java.lang.String[] $r1, $r2, $r3, $r5, $r8, $r9, $r10, $r11;
        java.lang.Class[] $r4;
        java.lang.String $r6, $r7;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi;

        $r1 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] names>;

        $r2 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] suffixes>;

        $r3 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] MIMETypes>;

        $r4 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi: java.lang.Class[] STANDARD_INPUT_TYPE>;

        $r5 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] writerSpiNames>;

        $r6 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String nativeStreamMetadataFormatName>;

        $r7 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String nativeStreamMetadataFormatClassName>;

        $r8 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraStreamMetadataFormatNames>;

        $r9 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraStreamMetadataFormatClassNames>;

        $r10 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraImageMetadataFormatNames>;

        $r11 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraImageMetadataFormatClassNames>;

        specialinvoke $r0.<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>("Intel Corporation", "0.1 beta", $r1, $r2, $r3, "org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader", $r4, $r5, 0, $r6, $r7, $r8, $r9, 0, "org.apache.harmony.x.imageio.plugins.jpeg.MyFormatMetadata_1.0", "org.apache.harmony.x.imageio.plugins.jpeg.MyFormatMetadata", $r10, $r11);

        return;
    }

    public boolean canDecodeInput(java.lang.Object) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi $r0;
        java.lang.Object $r1;
        byte[] $r2;
        javax.imageio.stream.ImageInputStream $r3;
        byte $b0;
        short $s1;
        java.io.IOException $r4;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi;

        $r1 := @parameter0: java.lang.Object;

        $r3 = (javax.imageio.stream.ImageInputStream) $r1;

     label1:
        interfaceinvoke $r3.<javax.imageio.stream.ImageInputStream: void mark()>();

        $r2 = newarray (byte)[3];

        interfaceinvoke $r3.<javax.imageio.stream.ImageInputStream: void seek(long)>(0L);

        interfaceinvoke $r3.<javax.imageio.stream.ImageInputStream: int read(byte[],int,int)>($r2, 0, 3);

        interfaceinvoke $r3.<javax.imageio.stream.ImageInputStream: void reset()>();

     label2:
        $b0 = $r2[0];

        $s1 = $b0 & 255;

        if $s1 != 255 goto label4;

        $b0 = $r2[1];

        $s1 = $b0 & 255;

        if $s1 != 216 goto label4;

        $b0 = $r2[2];

        $s1 = $b0 & 255;

        if $s1 != 255 goto label4;

        return 1;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public javax.imageio.ImageReader createReaderInstance(java.lang.Object) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi $r0;
        java.lang.Object $r1;
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader;

        specialinvoke $r2.<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: void <init>(javax.imageio.spi.ImageReaderSpi)>($r0);

        return $r2;
    }

    public java.lang.String getDescription(java.util.Locale)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi $r0;
        java.util.Locale $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi;

        $r1 := @parameter0: java.util.Locale;

        return "DRL JPEG decoder";
    }

    public void onRegistration(javax.imageio.spi.ServiceRegistry, java.lang.Class)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi $r0;
        javax.imageio.spi.ServiceRegistry $r1;
        java.lang.Class $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi;

        $r1 := @parameter0: javax.imageio.spi.ServiceRegistry;

        $r2 := @parameter1: java.lang.Class;

        return;
    }
}
