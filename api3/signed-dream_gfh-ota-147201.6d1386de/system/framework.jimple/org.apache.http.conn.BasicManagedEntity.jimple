public class org.apache.http.conn.BasicManagedEntity extends org.apache.http.entity.HttpEntityWrapper implements org.apache.http.conn.ConnectionReleaseTrigger, org.apache.http.conn.EofSensorWatcher
{
    protected final boolean attemptReuse;
    protected org.apache.http.conn.ManagedClientConnection managedConn;

    public void <init>(org.apache.http.HttpEntity, org.apache.http.conn.ManagedClientConnection, boolean)
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        org.apache.http.HttpEntity $r1;
        org.apache.http.conn.ManagedClientConnection $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 := @parameter0: org.apache.http.HttpEntity;

        $r2 := @parameter1: org.apache.http.conn.ManagedClientConnection;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<org.apache.http.entity.HttpEntityWrapper: void <init>(org.apache.http.HttpEntity)>($r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null.");

        throw $r3;

     label1:
        $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn> = $r2;

        $r0.<org.apache.http.conn.BasicManagedEntity: boolean attemptReuse> = $z0;

        return;
    }

    public void abortConnection() throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        org.apache.http.conn.ManagedClientConnection $r1;
        java.lang.Throwable $r2;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r1 == null goto label4;

     label1:
        $r1 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void abortConnection()>();

     label2:
        $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        return;

     label3:
        $r2 := @caughtexception;

        $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        throw $r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void consumeContent() throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        org.apache.http.conn.ManagedClientConnection $r1;
        boolean $z0;
        org.apache.http.HttpEntity $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = $r0.<org.apache.http.conn.BasicManagedEntity: boolean attemptReuse>;

        if $z0 == 0 goto label2;

        $r2 = $r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        interfaceinvoke $r2.<org.apache.http.HttpEntity: void consumeContent()>();

        $r1 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label2:
        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean eofDetected(java.io.InputStream) throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.http.conn.ManagedClientConnection $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        $z0 = $r0.<org.apache.http.conn.BasicManagedEntity: boolean attemptReuse>;

        if $z0 == 0 goto label2;

        $r2 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r2 == null goto label2;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        $r2 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r2.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label2:
        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>();

        return 0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.io.InputStream getContent() throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        org.apache.http.conn.EofSensorInputStream $r1;
        java.io.InputStream $r2;
        org.apache.http.HttpEntity $r3;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 = new org.apache.http.conn.EofSensorInputStream;

        $r3 = $r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $r2 = interfaceinvoke $r3.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke $r1.<org.apache.http.conn.EofSensorInputStream: void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher)>($r2, $r0);

        return $r1;
    }

    public boolean isRepeatable()
    {
        org.apache.http.conn.BasicManagedEntity $r0;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        return 0;
    }

    public void releaseConnection() throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void consumeContent()>();

        return;
    }

    protected void releaseManagedConnection() throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        org.apache.http.conn.ManagedClientConnection $r1;
        java.lang.Throwable $r2;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r1 == null goto label4;

     label1:
        $r1 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label2:
        $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        return;

     label3:
        $r2 := @caughtexception;

        $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        throw $r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean streamAbort(java.io.InputStream) throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        java.io.InputStream $r1;
        org.apache.http.conn.ManagedClientConnection $r2;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r2 == null goto label1;

        $r2 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r2.<org.apache.http.conn.ManagedClientConnection: void abortConnection()>();

     label1:
        return 0;
    }

    public boolean streamClosed(java.io.InputStream) throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        java.io.InputStream $r1;
        boolean $z0;
        org.apache.http.conn.ManagedClientConnection $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        $z0 = $r0.<org.apache.http.conn.BasicManagedEntity: boolean attemptReuse>;

        if $z0 == 0 goto label2;

        $r2 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r2 == null goto label2;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        $r2 = $r0.<org.apache.http.conn.BasicManagedEntity: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r2.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label2:
        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>();

        return 0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.http.conn.BasicManagedEntity $r0;
        java.io.OutputStream $r1;

        $r0 := @this: org.apache.http.conn.BasicManagedEntity;

        $r1 := @parameter0: java.io.OutputStream;

        specialinvoke $r0.<org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)>($r1);

        virtualinvoke $r0.<org.apache.http.conn.BasicManagedEntity: void consumeContent()>();

        return;
    }
}
