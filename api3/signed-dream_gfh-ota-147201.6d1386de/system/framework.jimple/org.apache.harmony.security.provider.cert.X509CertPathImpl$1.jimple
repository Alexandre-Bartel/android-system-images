class org.apache.harmony.security.provider.cert.X509CertPathImpl$1 extends org.apache.harmony.security.asn1.ASN1SequenceOf
{

    void <init>(org.apache.harmony.security.asn1.ASN1Type) throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertPathImpl$1 $r0;
        org.apache.harmony.security.asn1.ASN1Type $r1;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertPathImpl$1;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Type;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1SequenceOf: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r1);

        return;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        java.util.ArrayList $r1;
        org.apache.harmony.security.provider.cert.X509CertPathImpl$1 $r2;
        java.lang.Object $r3;
        java.util.List $r4;
        int $i0, $i1;
        org.apache.harmony.security.provider.cert.X509CertImpl $r5;
        org.apache.harmony.security.asn1.ASN1Sequence $r6;
        byte[] $r7;
        org.apache.harmony.security.x509.Certificate $r8;
        org.apache.harmony.security.provider.cert.X509CertPathImpl $r9;

        $r2 := @this: org.apache.harmony.security.provider.cert.X509CertPathImpl$1;

        $r0 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content>;

        $r4 = (java.util.List) $r3;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        $r6 = <org.apache.harmony.security.x509.Certificate: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r3 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (byte[]) $r3;

        $r7 = (byte[]) $r7;

        $r3 = virtualinvoke $r6.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r7);

        $r8 = (org.apache.harmony.security.x509.Certificate) $r3;

        specialinvoke $r5.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(org.apache.harmony.security.x509.Certificate)>($r8);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r9 = new org.apache.harmony.security.provider.cert.X509CertPathImpl;

        $r7 = virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] getEncoded()>();

        specialinvoke $r9.<org.apache.harmony.security.provider.cert.X509CertPathImpl: void <init>(java.util.List,int,byte[],org.apache.harmony.security.provider.cert.X509CertPathImpl$1)>($r1, 0, $r7, null);

        return $r9;
    }

    public java.util.Collection getValues(java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.ArrayList $r1;
        org.apache.harmony.security.provider.cert.X509CertPathImpl$1 $r2;
        org.apache.harmony.security.provider.cert.X509CertPathImpl $r3;
        java.util.List $r4;
        int $i0, $i1;
        java.security.cert.X509Certificate $r5;
        byte[] $r6;
        java.security.cert.CertificateEncodingException $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;

        $r2 := @this: org.apache.harmony.security.provider.cert.X509CertPathImpl$1;

        $r0 := @parameter0: java.lang.Object;

        $r3 = (org.apache.harmony.security.provider.cert.X509CertPathImpl) $r0;

        $r4 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List access$100(org.apache.harmony.security.provider.cert.X509CertPathImpl)>($r3);

        if $r4 != null goto label1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;

     label1:
        $r4 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List access$100(org.apache.harmony.security.provider.cert.X509CertPathImpl)>($r3);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label6;

     label3:
        $r4 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List access$100(org.apache.harmony.security.provider.cert.X509CertPathImpl)>($r3);

        $r0 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (java.security.cert.X509Certificate) $r0;

        $r6 = virtualinvoke $r5.<java.security.cert.Certificate: byte[] getEncoded()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.161");

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label6:
        return $r1;

        catch java.security.cert.CertificateEncodingException from label3 to label4 with label5;
    }
}
