public class com.android.server.WifiWatchdogService extends java.lang.Object
{
    private static final boolean D;
    private static final java.lang.String SYSTEMPROPERTY_KEY_DNS;
    private static final java.lang.String TAG;
    private static final boolean V;
    private android.content.ContentResolver mContentResolver;
    private android.content.Context mContext;
    private com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler;
    private int mNumApsChecked;
    private android.content.BroadcastReceiver mReceiver;
    private boolean mShouldCancel;
    private java.lang.String mSsid;
    private com.android.server.WifiWatchdogService$WatchdogState mState;
    private com.android.server.WifiWatchdogService$WifiWatchdogThread mThread;
    private android.net.wifi.WifiManager mWifiManager;
    private android.net.wifi.WifiStateTracker mWifiStateTracker;

    void <init>(android.content.Context, android.net.wifi.WifiStateTracker)
    {
        com.android.server.WifiWatchdogService $r0;
        android.content.Context $r1;
        android.net.wifi.WifiStateTracker $r2;
        com.android.server.WifiWatchdogService$WatchdogState $r3;
        com.android.server.WifiWatchdogService$2 $r4;
        android.content.ContentResolver $r5;
        java.lang.Object $r6;
        android.net.wifi.WifiManager $r7;
        boolean $z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.wifi.WifiStateTracker;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState IDLE>;

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState> = $r3;

        $r4 = new com.android.server.WifiWatchdogService$2;

        specialinvoke $r4.<com.android.server.WifiWatchdogService$2: void <init>(com.android.server.WifiWatchdogService)>($r0);

        $r0.<com.android.server.WifiWatchdogService: android.content.BroadcastReceiver mReceiver> = $r4;

        $r0.<com.android.server.WifiWatchdogService: android.content.Context mContext> = $r1;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver> = $r5;

        $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiStateTracker mWifiStateTracker> = $r2;

        $r6 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r7 = (android.net.wifi.WifiManager) $r6;

        $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager> = $r7;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void createThread()>();

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void registerForSettingsChanges()>();

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean isWatchdogEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void registerForWifiBroadcasts()>();

        return;

     label1:
        return;
    }

    static boolean access$000(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean isWatchdogEnabled()>();

        return $z0;
    }

    static void access$100(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void registerForWifiBroadcasts()>();

        return;
    }

    static void access$1000(com.android.server.WifiWatchdogService, java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleSleep(java.lang.String)>($r1);

        return;
    }

    static void access$1100(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleIdle()>();

        return;
    }

    static void access$1200(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleDisconnected()>();

        return;
    }

    static void access$1300(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleReset()>();

        return;
    }

    static android.net.wifi.WifiManager access$1400(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;
        android.net.wifi.WifiManager r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        r1 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager>;

        return r1;
    }

    static void access$1500(com.android.server.WifiWatchdogService, java.lang.String, java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void onConnected(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    static void access$1600(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void onDisconnected()>();

        return;
    }

    static void access$1700(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void onEnabled()>();

        return;
    }

    static void access$200(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void unregisterForWifiBroadcasts()>();

        return;
    }

    static com.android.server.WifiWatchdogService$WifiWatchdogHandler access$300(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        r1 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        return r1;
    }

    static com.android.server.WifiWatchdogService$WifiWatchdogHandler access$302(com.android.server.WifiWatchdogService, com.android.server.WifiWatchdogService$WifiWatchdogHandler)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $r1 := @parameter1: com.android.server.WifiWatchdogService$WifiWatchdogHandler;

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler> = $r1;

        return $r1;
    }

    static boolean access$500(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean isBackgroundCheckEnabled()>();

        return $z0;
    }

    static int access$600(com.android.server.WifiWatchdogService)
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $i0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getBackgroundCheckDelayMs()>();

        return $i0;
    }

    static void access$700(com.android.server.WifiWatchdogService, java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleNetworkChanged(java.lang.String)>($r1);

        return;
    }

    static void access$800(com.android.server.WifiWatchdogService, com.android.server.WifiWatchdogService$AccessPoint)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$AccessPoint $r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $r1 := @parameter1: com.android.server.WifiWatchdogService$AccessPoint;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;
    }

    static void access$900(com.android.server.WifiWatchdogService, com.android.server.WifiWatchdogService$AccessPoint)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$AccessPoint $r1;

        $r0 := @parameter0: com.android.server.WifiWatchdogService;

        $r1 := @parameter1: com.android.server.WifiWatchdogService$AccessPoint;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleBackgroundCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;
    }

    private boolean backgroundCheckDnsConnectivity()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $i0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getDns()>();

        if $i0 != -1 goto label1;

        return 0;

     label1:
        $i1 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getBackgroundCheckTimeoutMs()>();

        $z0 = staticinvoke <com.android.server.WifiWatchdogService$DnsPinger: boolean isDnsReachable(int,int)>($i0, $i1);

        return $z0;
    }

    private void blacklistAp(java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1;
        boolean $z0;
        android.net.wifi.WifiStateTracker $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 != 0 goto label3;

        $r2 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiStateTracker mWifiStateTracker>;

        $z0 = virtualinvoke $r2.<android.net.wifi.WifiStateTracker: boolean addToBlacklist(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blacklisting ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r1);

        return;

     label3:
        return;
    }

    private void cancelCurrentAction()
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r0.<com.android.server.WifiWatchdogService: boolean mShouldCancel> = 1;

        return;
    }

    private boolean checkDnsConnectivity()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        long $l8;
        boolean $z0;
        java.lang.InterruptedException $r1, $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $i1 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getDns()>();

        if $i1 != -1 goto label01;

        return 0;

     label01:
        $i2 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getInitialIgnoredPingCount()>();

        $i0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getPingCount()>();

        $i3 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getPingDelayMs()>();

        $i4 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getAcceptablePacketLossPercentage()>();

        $i5 = 0;

        $i6 = 0;

        $i7 = 0;

        if $i0 != 0 goto label05;

        return 1;

     label02:
        $l8 = (long) $i3;

     label03:
        staticinvoke <java.lang.Thread: void sleep(long)>($l8);

     label04:
        $i5 = $i5 + 1;

     label05:
        if $i5 >= $i2 goto label12;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 == 0 goto label06;

        return 0;

     label06:
        $i9 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getPingTimeoutMs()>();

        $z0 = staticinvoke <com.android.server.WifiWatchdogService$DnsPinger: boolean isDnsReachable(int,int)>($i1, $i9);

        if $z0 == 0 goto label07;

        $i6 = $i6 + 1;

        $i7 = $i7 + 1;

     label07:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 == 0 goto label02;

        return 0;

     label08:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WifiWatchdogService", "Interrupted while pausing between pings", $r1);

        goto label04;

     label09:
        $l8 = (long) $i3;

     label10:
        staticinvoke <java.lang.Thread: void sleep(long)>($l8);

     label11:
        $i6 = $i6 + 1;

     label12:
        if $i6 >= $i0 goto label16;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 == 0 goto label13;

        return 0;

     label13:
        $i2 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getPingTimeoutMs()>();

        $z0 = staticinvoke <com.android.server.WifiWatchdogService$DnsPinger: boolean isDnsReachable(int,int)>($i1, $i2);

        if $z0 == 0 goto label14;

        $i7 = $i7 + 1;

     label14:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 == 0 goto label09;

        return 0;

     label15:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WifiWatchdogService", "Interrupted while pausing between pings", $r2);

        goto label11;

     label16:
        $i1 = $i0 - $i7;

        $i1 = $i1 * 100;

        $i0 = $i1 / $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("% packet loss (acceptable is ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%)");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiWatchdogService", $r4);

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 != 0 goto label17;

        if $i0 > $i4 goto label17;

        return 1;

     label17:
        return 0;

        catch java.lang.InterruptedException from label03 to label04 with label08;
        catch java.lang.InterruptedException from label10 to label11 with label15;
    }

    private void createThread()
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$WifiWatchdogThread $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = new com.android.server.WifiWatchdogService$WifiWatchdogThread;

        specialinvoke $r1.<com.android.server.WifiWatchdogService$WifiWatchdogThread: void <init>(com.android.server.WifiWatchdogService)>($r0);

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogThread mThread> = $r1;

        $r1 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogThread mThread>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void waitForHandlerCreation()>();

        return;
    }

    private int getAcceptablePacketLossPercentage()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_acceptable_packet_loss_percentage", 25);

        return $i0;
    }

    private int getApCount()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_ap_count", 2);

        return $i0;
    }

    private int getBackgroundCheckDelayMs()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_background_check_delay_ms", 60000);

        return $i0;
    }

    private int getBackgroundCheckTimeoutMs()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_background_check_timeout_ms", 1000);

        return $i0;
    }

    private int getDns()
    {
        com.android.server.WifiWatchdogService $r0;
        android.net.DhcpInfo $r1;
        android.net.wifi.WifiManager $r2;
        int i0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r2 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager>;

        $r1 = virtualinvoke $r2.<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>();

        if $r1 == null goto label1;

        i0 = $r1.<android.net.DhcpInfo: int dns1>;

        return i0;

     label1:
        return -1;
    }

    private int getInitialIgnoredPingCount()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_initial_ignored_ping_count", 2);

        return $i0;
    }

    private int getMaxApChecks()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_max_ap_checks", 7);

        return $i0;
    }

    private int getPingCount()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_ping_count", 4);

        return $i0;
    }

    private int getPingDelayMs()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_ping_delay_ms", 250);

        return $i0;
    }

    private int getPingTimeoutMs()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_ping_timeout_ms", 500);

        return $i0;
    }

    private java.lang.String getWatchList()
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1;
        android.content.ContentResolver $r2;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r2 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "wifi_watchdog_watch_list");

        return $r1;
    }

    private void handleApAlive(com.android.server.WifiWatchdogService$AccessPoint)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$AccessPoint $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r4;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: com.android.server.WifiWatchdogService$AccessPoint;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<com.android.server.WifiWatchdogService: void setIdleState(boolean)>(0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AP is alive: ");

        $r3 = virtualinvoke $r1.<com.android.server.WifiWatchdogService$AccessPoint: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r3);

        $r4 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r4.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void backgroundCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;
    }

    private void handleApUnresponsive(com.android.server.WifiWatchdogService$AccessPoint)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$AccessPoint $r1;
        boolean $z0;
        com.android.server.WifiWatchdogService$WatchdogState $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: com.android.server.WifiWatchdogService$AccessPoint;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState SWITCHING_AP>;

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AP is dead: ");

        $r4 = virtualinvoke $r1.<com.android.server.WifiWatchdogService$AccessPoint: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r4);

        $r4 = $r1.<com.android.server.WifiWatchdogService$AccessPoint: java.lang.String bssid>;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void blacklistAp(java.lang.String)>($r4);

        return;
    }

    private void handleBackgroundCheckAp(com.android.server.WifiWatchdogService$AccessPoint)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$AccessPoint $r1;
        com.android.server.WifiWatchdogService$WatchdogState $r2, $r3;
        android.net.wifi.WifiManager $r4;
        android.net.wifi.WifiInfo $r5;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: com.android.server.WifiWatchdogService$AccessPoint;

        $r0.<com.android.server.WifiWatchdogService: boolean mShouldCancel> = 0;

        $r2 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState>;

        $r3 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState SLEEP>;

        if $r2 != $r3 goto label1;

        return;

     label1:
        $r4 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager>;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        if $r6 == null goto label3;

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        $r7 = $r1.<com.android.server.WifiWatchdogService$AccessPoint: java.lang.String ssid>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        if $r6 == null goto label5;

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        $r7 = $r1.<com.android.server.WifiWatchdogService$AccessPoint: java.lang.String bssid>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label6;

        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean backgroundCheckDnsConnectivity()>();

        $z1 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean shouldCancel()>();

        if $z1 != 0 goto label7;

        if $z0 == 0 goto label2;

        $r8 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r8.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void backgroundCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background check failed for ");

        $r6 = virtualinvoke $r1.<com.android.server.WifiWatchdogService$AccessPoint: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r6);

        $r8 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r8.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void checkAp(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;

     label3:
        return;

     label4:
        return;

     label5:
        return;

     label6:
        return;

     label7:
        return;
    }

    private void handleCheckAp(com.android.server.WifiWatchdogService$AccessPoint)
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$AccessPoint $r1;
        com.android.server.WifiWatchdogService$WatchdogState $r2, $r3;
        int $i0, $i1;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r4;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: com.android.server.WifiWatchdogService$AccessPoint;

        $r0.<com.android.server.WifiWatchdogService: boolean mShouldCancel> = 0;

        $r2 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState>;

        $r3 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState SLEEP>;

        if $r2 != $r3 goto label1;

        return;

     label1:
        $r2 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState CHECKING_AP>;

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState> = $r2;

        $i0 = $r0.<com.android.server.WifiWatchdogService: int mNumApsChecked>;

        $i0 = $i0 + 1;

        $r0.<com.android.server.WifiWatchdogService: int mNumApsChecked> = $i0;

        $i0 = $r0.<com.android.server.WifiWatchdogService: int mNumApsChecked>;

        $i1 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getMaxApChecks()>();

        if $i0 <= $i1 goto label2;

        $r4 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        $r5 = $r0.<com.android.server.WifiWatchdogService: java.lang.String mSsid>;

        virtualinvoke $r4.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void sleep(java.lang.String)>($r5);

        return;

     label2:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean checkDnsConnectivity()>();

        if $z0 == 0 goto label3;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleApAlive(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;

     label3:
        specialinvoke $r0.<com.android.server.WifiWatchdogService: void handleApUnresponsive(com.android.server.WifiWatchdogService$AccessPoint)>($r1);

        return;
    }

    private void handleDisconnected()
    {
        com.android.server.WifiWatchdogService $r0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void setIdleState(boolean)>(0);

        return;
    }

    private void handleIdle()
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$WatchdogState $r1, $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r0.<com.android.server.WifiWatchdogService: boolean mShouldCancel> = 0;

        $r1 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState>;

        $r2 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState SLEEP>;

        if $r1 != $r2 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Sleeping (in ");

        $r4 = $r0.<com.android.server.WifiWatchdogService: java.lang.String mSsid>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), so returning");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("WifiWatchdogService", $r4);

        return;

     label1:
        specialinvoke $r0.<com.android.server.WifiWatchdogService: void setIdleState(boolean)>(0);

        return;
    }

    private void handleNetworkChanged(java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.android.server.WifiWatchdogService: java.lang.String mSsid> = $r1;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void setIdleState(boolean)>(1);

        return;
    }

    private void handleReset()
    {
        com.android.server.WifiWatchdogService $r0;
        android.net.wifi.WifiStateTracker $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiStateTracker mWifiStateTracker>;

        virtualinvoke $r1.<android.net.wifi.WifiStateTracker: boolean clearBlacklist()>();

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void setIdleState(boolean)>(1);

        return;
    }

    private void handleSleep(java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.android.server.WifiWatchdogService$WatchdogState $r3;
        java.lang.StringBuilder $r4;
        android.net.wifi.WifiStateTracker $r5;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = $r0.<com.android.server.WifiWatchdogService: java.lang.String mSsid>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState SLEEP>;

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Going to sleep for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r1);

        $r5 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiStateTracker mWifiStateTracker>;

        $z0 = virtualinvoke $r5.<android.net.wifi.WifiStateTracker: boolean clearBlacklist()>();

        if $z0 != 0 goto label3;

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    private boolean hasRequiredNumberOfAps(java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1, $r6;
        android.net.wifi.WifiManager $r2;
        java.util.List $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        android.net.wifi.ScanResult $r5;
        boolean $z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager>;

        $r3 = virtualinvoke $r2.<android.net.wifi.WifiManager: java.util.List getScanResults()>();

        if $r3 != null goto label1;

        return 0;

     label1:
        $i0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: int getApCount()>();

        $i1 = 0;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r5 = (android.net.wifi.ScanResult) $r4;

        if $r5 != null goto label4;

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $r6 = $r5.<android.net.wifi.ScanResult: java.lang.String SSID>;

        if $r6 == null goto label3;

        $r6 = $r5.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $i1 = $i1 + 1;

        if $i1 < $i0 goto label3;

        return 1;

     label5:
        return 0;
    }

    private boolean isBackgroundCheckEnabled()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_background_check_enabled", 1);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isOnWatchList(java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        boolean $z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = specialinvoke $r0.<com.android.server.WifiWatchdogService: java.lang.String getWatchList()>();

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(" *, *");

        $i0 = lengthof $r3;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r2 = $r3[$i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    private boolean isWatchdogEnabled()
    {
        com.android.server.WifiWatchdogService $r0;
        int $i0;
        android.content.ContentResolver $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.ContentResolver mContentResolver>;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "wifi_watchdog_on", 1);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static void myLogD(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.lang.StringBuilder $r1;
        java.lang.Thread $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiWatchdogService", $r0);

        return;
    }

    private static void myLogV(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.lang.StringBuilder $r1;
        java.lang.Thread $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("WifiWatchdogService", $r0);

        return;
    }

    private void onConnected(java.lang.String, java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r4;
        java.lang.StringBuilder $r5;
        com.android.server.WifiWatchdogService$AccessPoint $r6;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void cancelCurrentAction()>();

        $r3 = $r0.<com.android.server.WifiWatchdogService: java.lang.String mSsid>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.android.server.WifiWatchdogService: java.lang.String mSsid>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

     label1:
        $r4 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r4.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void dispatchNetworkChanged(java.lang.String)>($r1);

     label2:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean requiresWatchdog(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires the watchdog");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r3);

        $r4 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        $r6 = new com.android.server.WifiWatchdogService$AccessPoint;

        specialinvoke $r6.<com.android.server.WifiWatchdogService$AccessPoint: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r4.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void checkAp(com.android.server.WifiWatchdogService$AccessPoint)>($r6);

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not require the watchdog");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.WifiWatchdogService: void myLogD(java.lang.String)>($r1);

        $r4 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r4.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void idle()>();

        return;
    }

    private void onDisconnected()
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void cancelCurrentAction()>();

        $r1 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r1.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void dispatchDisconnected()>();

        $r1 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r1.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void idle()>();

        return;
    }

    private void onEnabled()
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r1;

        $r0 := @this: com.android.server.WifiWatchdogService;

        specialinvoke $r0.<com.android.server.WifiWatchdogService: void cancelCurrentAction()>();

        $r1 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        virtualinvoke $r1.<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void reset()>();

        return;
    }

    private void registerForSettingsChanges()
    {
        com.android.server.WifiWatchdogService $r0;
        com.android.server.WifiWatchdogService$1 $r1;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        android.net.Uri $r5;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r3 = $r0.<com.android.server.WifiWatchdogService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("wifi_watchdog_on");

        $r1 = new com.android.server.WifiWatchdogService$1;

        $r2 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

        specialinvoke $r1.<com.android.server.WifiWatchdogService$1: void <init>(com.android.server.WifiWatchdogService,android.os.Handler)>($r0, $r2);

        virtualinvoke $r4.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r5, 0, $r1);

        return;
    }

    private void registerForWifiBroadcasts()
    {
        com.android.server.WifiWatchdogService $r0;
        android.content.IntentFilter $r1;
        android.content.BroadcastReceiver $r2;
        android.content.Context $r3;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.supplicant.CONNECTION_CHANGE");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.WIFI_STATE_CHANGED");

        $r3 = $r0.<com.android.server.WifiWatchdogService: android.content.Context mContext>;

        $r2 = $r0.<com.android.server.WifiWatchdogService: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r1);

        return;
    }

    private boolean requiresWatchdog(java.lang.String, java.lang.String)
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.String $r1, $r2, $r6;
        android.net.wifi.WifiInfo $r3, $r5;
        android.net.wifi.WifiManager $r4;
        boolean $z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = null;

        if $r1 != null goto label1;

        $r4 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager>;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r3 = $r5;

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        $r1 = $r6;

        if $r6 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label3;

        if $r3 != null goto label2;

        $r4 = $r0.<com.android.server.WifiWatchdogService: android.net.wifi.WifiManager mWifiManager>;

        $r3 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

     label2:
        $r2 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label3;

        return 0;

     label3:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean isOnWatchList(java.lang.String)>($r1);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $z0 = specialinvoke $r0.<com.android.server.WifiWatchdogService: boolean hasRequiredNumberOfAps(java.lang.String)>($r1);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    private void setIdleState(boolean)
    {
        com.android.server.WifiWatchdogService $r0;
        boolean $z0;
        com.android.server.WifiWatchdogService$WatchdogState $r1, $r2;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r2 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState>;

        $r1 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState SLEEP>;

        if $r2 == $r1 goto label2;

     label1:
        $r1 = <com.android.server.WifiWatchdogService$WatchdogState: com.android.server.WifiWatchdogService$WatchdogState IDLE>;

        $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WatchdogState mState> = $r1;

     label2:
        $r0.<com.android.server.WifiWatchdogService: int mNumApsChecked> = 0;

        return;
    }

    private boolean shouldCancel()
    {
        com.android.server.WifiWatchdogService $r0;
        boolean z0;

        $r0 := @this: com.android.server.WifiWatchdogService;

        z0 = $r0.<com.android.server.WifiWatchdogService: boolean mShouldCancel>;

        return z0;
    }

    private void unregisterForWifiBroadcasts()
    {
        com.android.server.WifiWatchdogService $r0;
        android.content.Context $r1;
        android.content.BroadcastReceiver $r2;

        $r0 := @this: com.android.server.WifiWatchdogService;

        $r1 = $r0.<com.android.server.WifiWatchdogService: android.content.Context mContext>;

        $r2 = $r0.<com.android.server.WifiWatchdogService: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        return;
    }

    private void waitForHandlerCreation()
    {
        com.android.server.WifiWatchdogService $r0;
        java.lang.InterruptedException $r1;
        com.android.server.WifiWatchdogService$WifiWatchdogHandler $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.WifiWatchdogService;

        entermonitor $r0;

     label01:
        $r2 = $r0.<com.android.server.WifiWatchdogService: com.android.server.WifiWatchdogService$WifiWatchdogHandler mHandler>;

     label02:
        if $r2 != null goto label09;

     label03:
        virtualinvoke $r0.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r1 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiWatchdogService", "Interrupted while waiting on handler.");

        goto label01;

     label07:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label08:
        throw $r3;

     label09:
        exitmonitor $r0;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    public static void <clinit>()
    {
        <com.android.server.WifiWatchdogService: java.lang.String TAG> = "WifiWatchdogService";

        <com.android.server.WifiWatchdogService: java.lang.String SYSTEMPROPERTY_KEY_DNS> = "dhcp.tiwlan0.dns1";

        <com.android.server.WifiWatchdogService: boolean D> = 1;

        return;
    }
}
