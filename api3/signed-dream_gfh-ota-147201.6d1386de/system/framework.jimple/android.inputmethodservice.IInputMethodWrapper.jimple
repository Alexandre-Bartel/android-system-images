class android.inputmethodservice.IInputMethodWrapper extends com.android.internal.view.IInputMethod$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private static final boolean DEBUG;
    private static final int DO_ATTACH_TOKEN;
    private static final int DO_CREATE_SESSION;
    private static final int DO_DUMP;
    private static final int DO_HIDE_SOFT_INPUT;
    private static final int DO_RESTART_INPUT;
    private static final int DO_REVOKE_SESSION;
    private static final int DO_SET_INPUT_CONTEXT;
    private static final int DO_SET_SESSION_ENABLED;
    private static final int DO_SHOW_SOFT_INPUT;
    private static final int DO_START_INPUT;
    private static final int DO_UNSET_INPUT_CONTEXT;
    private static final java.lang.String TAG;
    final com.android.internal.os.HandlerCaller mCaller;
    final android.view.inputmethod.InputMethod mInputMethod;
    final android.inputmethodservice.AbstractInputMethodService mTarget;

    public void <init>(android.inputmethodservice.AbstractInputMethodService, android.view.inputmethod.InputMethod)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        android.inputmethodservice.AbstractInputMethodService $r1;
        android.view.inputmethod.InputMethod $r2;
        com.android.internal.os.HandlerCaller $r3;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: android.inputmethodservice.AbstractInputMethodService;

        $r2 := @parameter1: android.view.inputmethod.InputMethod;

        specialinvoke $r0.<com.android.internal.view.IInputMethod$Stub: void <init>()>();

        $r0.<android.inputmethodservice.IInputMethodWrapper: android.inputmethodservice.AbstractInputMethodService mTarget> = $r1;

        $r3 = new com.android.internal.os.HandlerCaller;

        specialinvoke $r3.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,com.android.internal.os.HandlerCaller$Callback)>($r1, $r0);

        $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller> = $r3;

        $r0.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod> = $r2;

        return;
    }

    public void attachToken(android.os.IBinder)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        android.os.IBinder $r1;
        com.android.internal.os.HandlerCaller $r2, $r4;
        android.os.Message $r3;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: android.os.IBinder;

        $r2 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(10, $r1);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void bindInput(android.view.inputmethod.InputBinding)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        android.view.inputmethod.InputBinding $r1, $r3;
        com.android.internal.view.InputConnectionWrapper $r2;
        android.os.IBinder $r4;
        com.android.internal.view.IInputContext $r5;
        com.android.internal.os.HandlerCaller $r6, $r7;
        android.os.Message $r8;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: android.view.inputmethod.InputBinding;

        $r2 = new com.android.internal.view.InputConnectionWrapper;

        $r4 = virtualinvoke $r1.<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>();

        $r5 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>($r4);

        specialinvoke $r2.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>($r5);

        $r3 = new android.view.inputmethod.InputBinding;

        specialinvoke $r3.<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>($r2, $r1);

        $r6 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(20, $r3);

        virtualinvoke $r6.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r8);

        return;
    }

    public void createSession(com.android.internal.view.IInputMethodCallback)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        com.android.internal.view.IInputMethodCallback $r1;
        com.android.internal.os.HandlerCaller $r2, $r4;
        android.os.Message $r3;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: com.android.internal.view.IInputMethodCallback;

        $r2 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(40, $r1);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3;
        java.util.concurrent.CountDownLatch $r4;
        com.android.internal.os.HandlerCaller $r5, $r9;
        android.inputmethodservice.AbstractInputMethodService $r6;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        android.os.Message $r10;
        java.util.concurrent.TimeUnit $r11;
        boolean $z0;
        java.lang.InterruptedException $r12;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        $r6 = $r0.<android.inputmethodservice.IInputMethodWrapper: android.inputmethodservice.AbstractInputMethodService mTarget>;

        $i0 = virtualinvoke $r6.<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump InputMethodManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return;

     label1:
        $r4 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r4.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r5 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r9 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r10 = virtualinvoke $r9.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, $r1, $r2, $r3, $r4);

        virtualinvoke $r5.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r10);

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label2:
        $z0 = virtualinvoke $r4.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r11);

        if $z0 != 0 goto label5;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Timeout waiting for dump");

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Interrupted waiting for dump");

        return;

     label5:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public void executeMessage(android.os.Message)
    {
        android.os.Message $r0;
        android.inputmethodservice.IInputMethodWrapper $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Object $r4, $r10;
        com.android.internal.os.HandlerCaller$SomeArgs $r5;
        android.inputmethodservice.AbstractInputMethodService $r6;
        java.io.FileDescriptor $r7;
        java.io.PrintWriter $r8;
        java.lang.String[] $r9;
        java.util.concurrent.CountDownLatch $r11;
        java.lang.Throwable $r12;
        java.lang.RuntimeException $r13;
        android.view.inputmethod.InputMethod $r14;
        android.os.IBinder $r15;
        android.view.inputmethod.InputBinding $r16;
        com.android.internal.view.IInputContext $r17;
        com.android.internal.view.InputConnectionWrapper $r18;
        android.view.inputmethod.EditorInfo $r19;
        android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper $r20;
        com.android.internal.os.HandlerCaller $r21;
        android.content.Context $r22;
        com.android.internal.view.IInputMethodCallback $r23;
        android.view.inputmethod.InputMethodSession $r24;
        boolean $z0;
        android.os.ResultReceiver $r25;

        $r1 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r0 := @parameter0: android.os.Message;

        $i0 = $r0.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 10: goto label10;
            case 20: goto label11;
            case 30: goto label12;
            case 32: goto label13;
            case 34: goto label16;
            case 40: goto label19;
            case 45: goto label20;
            case 50: goto label23;
            case 60: goto label24;
            case 70: goto label25;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i0 = $r0.<android.os.Message: int what>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r3);

        return;

     label02:
        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r5 = (com.android.internal.os.HandlerCaller$SomeArgs) $r4;

     label03:
        $r6 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.inputmethodservice.AbstractInputMethodService mTarget>;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg1>;

        $r7 = (java.io.FileDescriptor) $r4;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg2>;

        $r8 = (java.io.PrintWriter) $r4;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg3>;

        $r9 = (java.lang.String[]) $r4;

        $r9 = (java.lang.String[]) $r9;

        virtualinvoke $r6.<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r7, $r8, $r9);

     label04:
        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg4>;

        entermonitor $r4;

     label05:
        $r10 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg4>;

        $r11 = (java.util.concurrent.CountDownLatch) $r10;

        virtualinvoke $r11.<java.util.concurrent.CountDownLatch: void countDown()>();

        exitmonitor $r4;

     label06:
        return;

     label07:
        $r12 := @caughtexception;

        exitmonitor $r4;

     label08:
        throw $r12;

     label09:
        $r13 := @caughtexception;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg2>;

        $r8 = (java.io.PrintWriter) $r4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        goto label04;

     label10:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r15 = (android.os.IBinder) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>($r15);

        return;

     label11:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r16 = (android.view.inputmethod.InputBinding) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>($r16);

        return;

     label12:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void unbindInput()>();

        return;

     label13:
        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r5 = (com.android.internal.os.HandlerCaller$SomeArgs) $r4;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg1>;

        $r17 = (com.android.internal.view.IInputContext) $r4;

        if $r17 == null goto label15;

        $r18 = new com.android.internal.view.InputConnectionWrapper;

        specialinvoke $r18.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>($r17);

     label14:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg2>;

        $r19 = (android.view.inputmethod.EditorInfo) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>($r18, $r19);

        return;

     label15:
        $r18 = null;

        goto label14;

     label16:
        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r5 = (com.android.internal.os.HandlerCaller$SomeArgs) $r4;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg1>;

        $r17 = (com.android.internal.view.IInputContext) $r4;

        if $r17 == null goto label18;

        $r18 = new com.android.internal.view.InputConnectionWrapper;

        specialinvoke $r18.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>($r17);

     label17:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r4 = $r5.<com.android.internal.os.HandlerCaller$SomeArgs: java.lang.Object arg2>;

        $r19 = (android.view.inputmethod.EditorInfo) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>($r18, $r19);

        return;

     label18:
        $r18 = null;

        goto label17;

     label19:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r20 = new android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper;

        $r21 = $r1.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r22 = $r21.<com.android.internal.os.HandlerCaller: android.content.Context mContext>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r23 = (com.android.internal.view.IInputMethodCallback) $r4;

        specialinvoke $r20.<android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper: void <init>(android.content.Context,com.android.internal.view.IInputMethodCallback)>($r22, $r23);

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod$SessionCallback)>($r20);

        return;

     label20:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r24 = (android.view.inputmethod.InputMethodSession) $r4;

        $i0 = $r0.<android.os.Message: int arg1>;

        if $i0 == 0 goto label22;

        $z0 = 1;

     label21:
        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>($r24, $z0);

        return;

     label22:
        $z0 = 0;

        goto label21;

     label23:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r24 = (android.view.inputmethod.InputMethodSession) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>($r24);

        return;

     label24:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $i0 = $r0.<android.os.Message: int arg1>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r25 = (android.os.ResultReceiver) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>($i0, $r25);

        return;

     label25:
        $r14 = $r1.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        $i0 = $r0.<android.os.Message: int arg1>;

        $r4 = $r0.<android.os.Message: java.lang.Object obj>;

        $r25 = (android.os.ResultReceiver) $r4;

        interfaceinvoke $r14.<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>($i0, $r25);

        return;

        catch java.lang.RuntimeException from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public android.view.inputmethod.InputMethod getInternalInputMethod()
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        android.view.inputmethod.InputMethod r1;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 = $r0.<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod mInputMethod>;

        return r1;
    }

    public void hideSoftInput(int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        int $i0;
        android.os.ResultReceiver $r1;
        com.android.internal.os.HandlerCaller $r2, $r4;
        android.os.Message $r3;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.ResultReceiver;

        $r2 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(70, $i0, $r1);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void restartInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        com.android.internal.view.IInputContext $r1;
        android.view.inputmethod.EditorInfo $r2;
        com.android.internal.os.HandlerCaller $r3, $r5;
        android.os.Message $r4;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: com.android.internal.view.IInputContext;

        $r2 := @parameter1: android.view.inputmethod.EditorInfo;

        $r3 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(34, $r1, $r2);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void revokeSession(com.android.internal.view.IInputMethodSession)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        com.android.internal.view.IInputMethodSession $r1;
        android.inputmethodservice.IInputMethodSessionWrapper $r2;
        android.view.inputmethod.InputMethodSession $r3;
        com.android.internal.os.HandlerCaller $r4, $r5;
        android.os.Message $r6;
        java.lang.ClassCastException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: com.android.internal.view.IInputMethodSession;

     label1:
        $r2 = (android.inputmethodservice.IInputMethodSessionWrapper) $r1;

        $r3 = virtualinvoke $r2.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

     label2:
        $r4 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

     label3:
        $r5 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r6 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(50, $r3);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r6);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r9, $r7);

        return;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    public void setSessionEnabled(com.android.internal.view.IInputMethodSession, boolean)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        com.android.internal.view.IInputMethodSession $r1;
        boolean $z0;
        android.inputmethodservice.IInputMethodSessionWrapper $r2;
        android.view.inputmethod.InputMethodSession $r3;
        com.android.internal.os.HandlerCaller $r4, $r5;
        byte $b0;
        android.os.Message $r6;
        java.lang.ClassCastException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: com.android.internal.view.IInputMethodSession;

        $z0 := @parameter1: boolean;

     label1:
        $r2 = (android.inputmethodservice.IInputMethodSessionWrapper) $r1;

        $r3 = virtualinvoke $r2.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

     label2:
        $r4 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        $r6 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(45, $b0, $r3);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r6);

     label5:
        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r9, $r7);

        return;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label5 with label7;
    }

    public void showSoftInput(int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        int $i0;
        android.os.ResultReceiver $r1;
        com.android.internal.os.HandlerCaller $r2, $r4;
        android.os.Message $r3;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.ResultReceiver;

        $r2 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(60, $i0, $r1);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void startInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        com.android.internal.view.IInputContext $r1;
        android.view.inputmethod.EditorInfo $r2;
        com.android.internal.os.HandlerCaller $r3, $r5;
        android.os.Message $r4;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 := @parameter0: com.android.internal.view.IInputContext;

        $r2 := @parameter1: android.view.inputmethod.EditorInfo;

        $r3 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(32, $r1, $r2);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void unbindInput()
    {
        android.inputmethodservice.IInputMethodWrapper $r0;
        com.android.internal.os.HandlerCaller $r1, $r3;
        android.os.Message $r2;

        $r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = $r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(30);

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.IInputMethodWrapper: java.lang.String TAG> = "InputMethodWrapper";

        <android.inputmethodservice.IInputMethodWrapper: int DO_UNSET_INPUT_CONTEXT> = 30;

        <android.inputmethodservice.IInputMethodWrapper: int DO_START_INPUT> = 32;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SHOW_SOFT_INPUT> = 60;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_SESSION_ENABLED> = 45;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_INPUT_CONTEXT> = 20;

        <android.inputmethodservice.IInputMethodWrapper: int DO_REVOKE_SESSION> = 50;

        <android.inputmethodservice.IInputMethodWrapper: int DO_RESTART_INPUT> = 34;

        <android.inputmethodservice.IInputMethodWrapper: int DO_HIDE_SOFT_INPUT> = 70;

        <android.inputmethodservice.IInputMethodWrapper: int DO_DUMP> = 1;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CREATE_SESSION> = 40;

        <android.inputmethodservice.IInputMethodWrapper: int DO_ATTACH_TOKEN> = 10;

        <android.inputmethodservice.IInputMethodWrapper: boolean DEBUG> = 0;

        return;
    }
}
