public class android.widget.DatePicker extends android.widget.FrameLayout
{
    private static final int DEFAULT_END_YEAR;
    private static final int DEFAULT_START_YEAR;
    private int mDay;
    private final com.android.internal.widget.NumberPicker mDayPicker;
    private int mMonth;
    private final com.android.internal.widget.NumberPicker mMonthPicker;
    private android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener;
    private int mYear;
    private final com.android.internal.widget.NumberPicker mYearPicker;

    public void <init>(android.content.Context)
    {
        android.widget.DatePicker $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.DatePicker;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.DatePicker $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.DatePicker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.DatePicker $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        java.text.DateFormatSymbols $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        android.view.LayoutInflater $r5;
        android.view.View $r6;
        com.android.internal.widget.NumberPicker $r7;
        com.android.internal.widget.NumberPicker$Formatter $r8;
        android.widget.DatePicker$1 $r9;
        java.lang.String[] $r10;
        android.widget.DatePicker$2 $r11;
        android.widget.DatePicker$3 $r12;
        int[] $r13;
        android.content.res.TypedArray $r14;
        java.util.Calendar $r15;
        boolean $z0;

        $r0 := @this: android.widget.DatePicker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r5 = (android.view.LayoutInflater) $r4;

        virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(17367072, $r0, 1);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908657);

        $r7 = (com.android.internal.widget.NumberPicker) $r6;

        $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker> = $r7;

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        $r8 = <com.android.internal.widget.NumberPicker: com.android.internal.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER>;

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setFormatter(com.android.internal.widget.NumberPicker$Formatter)>($r8);

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setSpeed(long)>(100L);

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        $r9 = new android.widget.DatePicker$1;

        specialinvoke $r9.<android.widget.DatePicker$1: void <init>(android.widget.DatePicker)>($r0);

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setOnChangeListener(com.android.internal.widget.NumberPicker$OnChangedListener)>($r9);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908656);

        $r7 = (com.android.internal.widget.NumberPicker) $r6;

        $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker> = $r7;

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        $r8 = <com.android.internal.widget.NumberPicker: com.android.internal.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER>;

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setFormatter(com.android.internal.widget.NumberPicker$Formatter)>($r8);

        $r3 = new java.text.DateFormatSymbols;

        specialinvoke $r3.<java.text.DateFormatSymbols: void <init>()>();

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        $r10 = virtualinvoke $r3.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setRange(int,int,java.lang.String[])>(1, 12, $r10);

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setSpeed(long)>(200L);

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        $r11 = new android.widget.DatePicker$2;

        specialinvoke $r11.<android.widget.DatePicker$2: void <init>(android.widget.DatePicker)>($r0);

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setOnChangeListener(com.android.internal.widget.NumberPicker$OnChangedListener)>($r11);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908658);

        $r7 = (com.android.internal.widget.NumberPicker) $r6;

        $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker> = $r7;

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker>;

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setSpeed(long)>(100L);

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker>;

        $r12 = new android.widget.DatePicker$3;

        specialinvoke $r12.<android.widget.DatePicker$3: void <init>(android.widget.DatePicker)>($r0);

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setOnChangeListener(com.android.internal.widget.NumberPicker$OnChangedListener)>($r12);

        $r13 = <com.android.internal.R$styleable: int[] DatePicker>;

        $r14 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r13);

        $i0 = virtualinvoke $r14.<android.content.res.TypedArray: int getInt(int,int)>(0, 1900);

        $i1 = virtualinvoke $r14.<android.content.res.TypedArray: int getInt(int,int)>(1, 2100);

        $r7 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker>;

        virtualinvoke $r7.<com.android.internal.widget.NumberPicker: void setRange(int,int)>($i0, $i1);

        virtualinvoke $r14.<android.content.res.TypedArray: void recycle()>();

        $r15 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i0 = virtualinvoke $r15.<java.util.Calendar: int get(int)>(1);

        $i1 = virtualinvoke $r15.<java.util.Calendar: int get(int)>(2);

        $i2 = virtualinvoke $r15.<java.util.Calendar: int get(int)>(5);

        virtualinvoke $r0.<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>($i0, $i1, $i2, null);

        specialinvoke $r0.<android.widget.DatePicker: void reorderPickers()>();

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<android.widget.DatePicker: void setEnabled(boolean)>(0);

        return;

     label1:
        return;
    }

    static int access$000(android.widget.DatePicker)
    {
        android.widget.DatePicker $r0;
        int i0;

        $r0 := @parameter0: android.widget.DatePicker;

        i0 = $r0.<android.widget.DatePicker: int mDay>;

        return i0;
    }

    static int access$002(android.widget.DatePicker, int)
    {
        android.widget.DatePicker $r0;
        int $i0;

        $r0 := @parameter0: android.widget.DatePicker;

        $i0 := @parameter1: int;

        $r0.<android.widget.DatePicker: int mDay> = $i0;

        return $i0;
    }

    static android.widget.DatePicker$OnDateChangedListener access$100(android.widget.DatePicker)
    {
        android.widget.DatePicker $r0;
        android.widget.DatePicker$OnDateChangedListener r1;

        $r0 := @parameter0: android.widget.DatePicker;

        r1 = $r0.<android.widget.DatePicker: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener>;

        return r1;
    }

    static int access$200(android.widget.DatePicker)
    {
        android.widget.DatePicker $r0;
        int i0;

        $r0 := @parameter0: android.widget.DatePicker;

        i0 = $r0.<android.widget.DatePicker: int mYear>;

        return i0;
    }

    static int access$202(android.widget.DatePicker, int)
    {
        android.widget.DatePicker $r0;
        int $i0;

        $r0 := @parameter0: android.widget.DatePicker;

        $i0 := @parameter1: int;

        $r0.<android.widget.DatePicker: int mYear> = $i0;

        return $i0;
    }

    static int access$300(android.widget.DatePicker)
    {
        android.widget.DatePicker $r0;
        int i0;

        $r0 := @parameter0: android.widget.DatePicker;

        i0 = $r0.<android.widget.DatePicker: int mMonth>;

        return i0;
    }

    static int access$302(android.widget.DatePicker, int)
    {
        android.widget.DatePicker $r0;
        int $i0;

        $r0 := @parameter0: android.widget.DatePicker;

        $i0 := @parameter1: int;

        $r0.<android.widget.DatePicker: int mMonth> = $i0;

        return $i0;
    }

    static void access$400(android.widget.DatePicker)
    {
        android.widget.DatePicker $r0;

        $r0 := @parameter0: android.widget.DatePicker;

        specialinvoke $r0.<android.widget.DatePicker: void updateDaySpinner()>();

        return;
    }

    private void reorderPickers()
    {
        android.widget.DatePicker $r0;
        char $c0;
        int $i1, $i2;
        android.content.Context $r1;
        char[] $r2;
        android.view.View $r3;
        android.widget.LinearLayout $r4;
        com.android.internal.widget.NumberPicker $r5;

        $r0 := @this: android.widget.DatePicker;

        $r1 = $r0.<android.view.View: android.content.Context mContext>;

        $r2 = staticinvoke <android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>($r1);

        $c0 = $r2[0];

        if $c0 != 77 goto label1;

        $c0 = $r2[1];

        if $c0 != 100 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908655);

        $r4 = (android.widget.LinearLayout) $r3;

        virtualinvoke $r4.<android.view.ViewGroup: void removeAllViews()>();

        $i1 = lengthof $r2;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label6;

        $c0 = $r2[$i2];

        if $c0 != 100 goto label4;

        $r5 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View)>($r5);

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        if $c0 != 77 goto label5;

        $r5 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View)>($r5);

        goto label3;

     label5:
        $r5 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View)>($r5);

        goto label3;

     label6:
        return;
    }

    private void updateDaySpinner()
    {
        android.widget.DatePicker $r0;
        int $i0, $i1, $i2;
        java.util.Calendar $r1;
        com.android.internal.widget.NumberPicker $r2;

        $r0 := @this: android.widget.DatePicker;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i1 = $r0.<android.widget.DatePicker: int mYear>;

        $i2 = $r0.<android.widget.DatePicker: int mMonth>;

        $i0 = $r0.<android.widget.DatePicker: int mDay>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int,int)>($i1, $i2, $i0);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getActualMaximum(int)>(5);

        $r2 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        virtualinvoke $r2.<com.android.internal.widget.NumberPicker: void setRange(int,int)>(1, $i0);

        $r2 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        $i0 = $r0.<android.widget.DatePicker: int mDay>;

        virtualinvoke $r2.<com.android.internal.widget.NumberPicker: void setCurrent(int)>($i0);

        return;
    }

    private void updateSpinners()
    {
        android.widget.DatePicker $r0;
        com.android.internal.widget.NumberPicker $r1;
        int $i0;

        $r0 := @this: android.widget.DatePicker;

        specialinvoke $r0.<android.widget.DatePicker: void updateDaySpinner()>();

        $r1 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker>;

        $i0 = $r0.<android.widget.DatePicker: int mYear>;

        virtualinvoke $r1.<com.android.internal.widget.NumberPicker: void setCurrent(int)>($i0);

        $r1 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        $i0 = $r0.<android.widget.DatePicker: int mMonth>;

        $i0 = $i0 + 1;

        virtualinvoke $r1.<com.android.internal.widget.NumberPicker: void setCurrent(int)>($i0);

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.widget.DatePicker $r0;
        android.util.SparseArray $r1;

        $r0 := @this: android.widget.DatePicker;

        $r1 := @parameter0: android.util.SparseArray;

        virtualinvoke $r0.<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>($r1);

        return;
    }

    public int getDayOfMonth()
    {
        android.widget.DatePicker $r0;
        int i0;

        $r0 := @this: android.widget.DatePicker;

        i0 = $r0.<android.widget.DatePicker: int mDay>;

        return i0;
    }

    public int getMonth()
    {
        android.widget.DatePicker $r0;
        int i0;

        $r0 := @this: android.widget.DatePicker;

        i0 = $r0.<android.widget.DatePicker: int mMonth>;

        return i0;
    }

    public int getYear()
    {
        android.widget.DatePicker $r0;
        int i0;

        $r0 := @this: android.widget.DatePicker;

        i0 = $r0.<android.widget.DatePicker: int mYear>;

        return i0;
    }

    public void init(int, int, int, android.widget.DatePicker$OnDateChangedListener)
    {
        android.widget.DatePicker $r0;
        int $i0, $i1, $i2;
        android.widget.DatePicker$OnDateChangedListener $r1;

        $r0 := @this: android.widget.DatePicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: android.widget.DatePicker$OnDateChangedListener;

        $r0.<android.widget.DatePicker: int mYear> = $i0;

        $r0.<android.widget.DatePicker: int mMonth> = $i1;

        $r0.<android.widget.DatePicker: int mDay> = $i2;

        $r0.<android.widget.DatePicker: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener> = $r1;

        specialinvoke $r0.<android.widget.DatePicker: void updateSpinners()>();

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.DatePicker $r0;
        android.os.Parcelable $r1;
        android.widget.DatePicker$SavedState $r2;
        int $i0;

        $r0 := @this: android.widget.DatePicker;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (android.widget.DatePicker$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $i0 = virtualinvoke $r2.<android.widget.DatePicker$SavedState: int getYear()>();

        $r0.<android.widget.DatePicker: int mYear> = $i0;

        $i0 = virtualinvoke $r2.<android.widget.DatePicker$SavedState: int getMonth()>();

        $r0.<android.widget.DatePicker: int mMonth> = $i0;

        $i0 = virtualinvoke $r2.<android.widget.DatePicker$SavedState: int getDay()>();

        $r0.<android.widget.DatePicker: int mDay> = $i0;

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.widget.DatePicker $r0;
        android.widget.DatePicker$SavedState $r1;
        int $i0, $i1, $i2;
        android.os.Parcelable $r2;

        $r0 := @this: android.widget.DatePicker;

        $r2 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new android.widget.DatePicker$SavedState;

        $i0 = $r0.<android.widget.DatePicker: int mYear>;

        $i1 = $r0.<android.widget.DatePicker: int mMonth>;

        $i2 = $r0.<android.widget.DatePicker: int mDay>;

        specialinvoke $r1.<android.widget.DatePicker$SavedState: void <init>(android.os.Parcelable,int,int,int,android.widget.DatePicker$1)>($r2, $i0, $i1, $i2, null);

        return $r1;
    }

    public void setEnabled(boolean)
    {
        android.widget.DatePicker $r0;
        boolean $z0;
        com.android.internal.widget.NumberPicker $r1;

        $r0 := @this: android.widget.DatePicker;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.View: void setEnabled(boolean)>($z0);

        $r1 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mDayPicker>;

        virtualinvoke $r1.<com.android.internal.widget.NumberPicker: void setEnabled(boolean)>($z0);

        $r1 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mMonthPicker>;

        virtualinvoke $r1.<com.android.internal.widget.NumberPicker: void setEnabled(boolean)>($z0);

        $r1 = $r0.<android.widget.DatePicker: com.android.internal.widget.NumberPicker mYearPicker>;

        virtualinvoke $r1.<com.android.internal.widget.NumberPicker: void setEnabled(boolean)>($z0);

        return;
    }

    public void updateDate(int, int, int)
    {
        android.widget.DatePicker $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.DatePicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0.<android.widget.DatePicker: int mYear> = $i0;

        $r0.<android.widget.DatePicker: int mMonth> = $i1;

        $r0.<android.widget.DatePicker: int mDay> = $i2;

        specialinvoke $r0.<android.widget.DatePicker: void updateSpinners()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.DatePicker: int DEFAULT_START_YEAR> = 1900;

        <android.widget.DatePicker: int DEFAULT_END_YEAR> = 2100;

        return;
    }
}
