public class com.android.internal.telephony.gsm.SpnOverride extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final java.lang.String PARTNER_SPN_OVERRIDE_PATH;
    private java.util.HashMap CarrierSpnMap;

    void <init>()
    {
        com.android.internal.telephony.gsm.SpnOverride $r0;
        java.util.HashMap $r1;

        $r0 := @this: com.android.internal.telephony.gsm.SpnOverride;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.SpnOverride: java.util.HashMap CarrierSpnMap> = $r1;

        specialinvoke $r0.<com.android.internal.telephony.gsm.SpnOverride: void loadSpnOverrides()>();

        return;
    }

    private void loadSpnOverrides()
    {
        com.android.internal.telephony.gsm.SpnOverride $r0;
        java.io.File $r1, $r3;
        java.io.FileReader $r2;
        org.xmlpull.v1.XmlPullParser $r4;
        java.lang.String $r5, $r6;
        boolean $z0;
        java.io.FileNotFoundException $r7;
        java.lang.StringBuilder $r8;
        java.util.HashMap $r9;
        org.xmlpull.v1.XmlPullParserException $r10;
        java.io.IOException $r11;

        $r0 := @this: com.android.internal.telephony.gsm.SpnOverride;

        $r1 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "etc/spn-conf.xml");

        $r2 = new java.io.FileReader;

     label1:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.io.File)>($r1);

     label2:
        $r4 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r2);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r4, "spnOverrides");

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>($r4);

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "spnOverride";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label4:
        if $z0 != 0 goto label6;

        return;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t open ");

        $r1 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("etc/spn-conf.xml");

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GSM", $r5);

        return;

     label6:
        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "numeric");

        $r6 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "spn");

        $r9 = $r0.<com.android.internal.telephony.gsm.SpnOverride: java.util.HashMap CarrierSpnMap>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label7:
        goto label3;

     label8:
        $r10 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in spn-conf parser ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GSM", $r5);

        return;

     label9:
        $r11 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in spn-conf parser ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GSM", $r5);

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch org.xmlpull.v1.XmlPullParserException from label2 to label4 with label8;
        catch java.io.IOException from label2 to label4 with label9;
        catch org.xmlpull.v1.XmlPullParserException from label6 to label7 with label8;
        catch java.io.IOException from label6 to label7 with label9;
    }

    boolean containsCarrier(java.lang.String)
    {
        com.android.internal.telephony.gsm.SpnOverride $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.HashMap $r2;

        $r0 := @this: com.android.internal.telephony.gsm.SpnOverride;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.internal.telephony.gsm.SpnOverride: java.util.HashMap CarrierSpnMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    java.lang.String getSpn(java.lang.String)
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        com.android.internal.telephony.gsm.SpnOverride $r3;

        $r3 := @this: com.android.internal.telephony.gsm.SpnOverride;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r3.<com.android.internal.telephony.gsm.SpnOverride: java.util.HashMap CarrierSpnMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r2;

        return $r0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.SpnOverride: java.lang.String PARTNER_SPN_OVERRIDE_PATH> = "etc/spn-conf.xml";

        <com.android.internal.telephony.gsm.SpnOverride: java.lang.String LOG_TAG> = "GSM";

        return;
    }
}
