public class android.graphics.Movie extends java.lang.Object
{
    private final int mNativeMovie;

    private void <init>(int)
    {
        android.graphics.Movie $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: android.graphics.Movie;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i0 != 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("native movie creation failed");

        throw $r1;

     label1:
        $r0.<android.graphics.Movie: int mNativeMovie> = $i0;

        return;
    }

    public static native android.graphics.Movie decodeByteArray(byte[], int, int);

    public static android.graphics.Movie decodeFile(java.lang.String)
    {
        java.lang.String $r0;
        java.io.FileInputStream $r1;
        android.graphics.Movie $r2;
        java.io.FileNotFoundException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.FileInputStream;

     label1:
        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label2:
        $r2 = staticinvoke <android.graphics.Movie: android.graphics.Movie decodeTempStream(java.io.InputStream)>($r1);

        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public static native android.graphics.Movie decodeStream(java.io.InputStream);

    private static android.graphics.Movie decodeTempStream(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.io.IOException $r1;
        android.graphics.Movie $r2, $r3;

        $r0 := @parameter0: java.io.InputStream;

        $r3 = null;

     label1:
        $r2 = staticinvoke <android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>($r0);

        $r3 = $r2;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void draw(android.graphics.Canvas, float, float)
    {
        android.graphics.Movie $r0;
        android.graphics.Canvas $r1;
        float $f0, $f1;

        $r0 := @this: android.graphics.Movie;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        virtualinvoke $r0.<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>($r1, $f0, $f1, null);

        return;
    }

    public native void draw(android.graphics.Canvas, float, float, android.graphics.Paint);

    public native int duration();

    public native int height();

    public native boolean isOpaque();

    public native boolean setTime(int);

    public native int width();
}
