class org.apache.harmony.luni.internal.reflect.ProxyConstantPool extends java.lang.Object implements org.apache.harmony.luni.internal.reflect.ProxyConstants
{
    public static final int CLASS_INITIAL_SIZE;
    public static final int CONSTANTPOOL_GROW_SIZE;
    public static final int CONSTANTPOOL_INITIAL_SIZE;
    public static final int FIELD_INITIAL_SIZE;
    public static final int INTERFACE_INITIAL_SIZE;
    public static final int METHOD_INITIAL_SIZE;
    public static final int NAMEANDTYPE_INITIAL_SIZE;
    public static final int STRING_INITIAL_SIZE;
    public static final int UTF8_INITIAL_SIZE;
    org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache UTF8Cache;
    org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache classNameCache;
    int currentIndex;
    int currentOffset;
    org.apache.harmony.luni.internal.reflect.ProxyObjectCache fieldCache;
    org.apache.harmony.luni.internal.reflect.ProxyObjectCache interfaceMethodCache;
    org.apache.harmony.luni.internal.reflect.ProxyObjectCache methodCache;
    org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache nameAndTypeCache;
    byte[] poolContent;
    org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache stringCache;

    void <init>(org.apache.harmony.luni.internal.reflect.ProxyClassFile)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r1;
        org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache $r2;
        org.apache.harmony.luni.internal.reflect.ProxyObjectCache $r3;
        org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache $r4;
        byte[] $r5;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache;

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: void <init>(int)>(50);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache UTF8Cache> = $r2;

        $r2 = new org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache;

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: void <init>(int)>(21);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache stringCache> = $r2;

        $r2 = new org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache;

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: void <init>(int)>(21);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache classNameCache> = $r2;

        $r3 = new org.apache.harmony.luni.internal.reflect.ProxyObjectCache;

        specialinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: void <init>(int)>(7);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache fieldCache> = $r3;

        $r3 = new org.apache.harmony.luni.internal.reflect.ProxyObjectCache;

        specialinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: void <init>(int)>(21);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache methodCache> = $r3;

        $r3 = new org.apache.harmony.luni.internal.reflect.ProxyObjectCache;

        specialinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: void <init>(int)>(21);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache interfaceMethodCache> = $r3;

        $r4 = new org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache;

        specialinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache: void <init>(int)>(21);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache nameAndTypeCache> = $r4;

        $r5 = $r1.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent> = $r5;

        $i0 = $r1.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i0;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = 1;

        return;
    }

    private int literalIndexForNameAndType(int, int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache $r2;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = newarray (int)[2];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache nameAndTypeCache>;

        $i2 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache: int get(int[])>($r1);

        if $i2 != -1 goto label1;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache nameAndTypeCache>;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i3 = $i2 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i3;

        $i2 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyNameAndTypeCache: int put(int[],int)>($r1, $i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(12);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i1);

        return $i2;

     label1:
        return $i2;
    }

    private final void writeU1(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        int $i0, $i1, $i2;
        byte[] $r1, $r3;
        byte $b3;
        java.lang.IndexOutOfBoundsException $r2;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i2;

        $b3 = (byte) $i0;

     label1:
        $r1[$i1] = $b3;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = lengthof $r1;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i2 = $i1 + 1000;

        $r3 = newarray (byte)[$i2];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i1);

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i1 = $i1 - 1;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    private final void writeU2(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        int $i0, $i1, $i2;
        byte[] $r1, $r3;
        byte $b3;
        java.lang.IndexOutOfBoundsException $r2, $r4;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i2;

        $i2 = $i0 >> 8;

        $b3 = (byte) $i2;

     label1:
        $r1[$i1] = $b3;

     label2:
        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i2;

        $b3 = (byte) $i0;

     label3:
        $r1[$i1] = $b3;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = lengthof $r1;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i2 = $i1 + 1000;

        $r3 = newarray (byte)[$i2];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i1);

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i1 = $i1 - 1;

        $i2 = $i0 >> 8;

        $b3 = (byte) $i2;

        $r1[$i1] = $b3;

        goto label2;

     label6:
        $r4 := @caughtexception;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = lengthof $r1;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i2 = $i1 + 1000;

        $r3 = newarray (byte)[$i2];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i1);

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i1 = $i1 - 1;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label5;
        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label6;
    }

    int literalIndex(java.lang.String)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        char[] $r2;
        org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache $r3;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache stringCache>;

        $i2 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int get(char[])>($r2);

        if $i2 >= 0 goto label1;

        $i2 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r2);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache stringCache>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i1;

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int put(char[],int)>($r2, $i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(8);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i2);

        return $i0;

     label1:
        return $i2;
    }

    int literalIndex(java.lang.reflect.Constructor)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        java.lang.reflect.Constructor $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.luni.internal.reflect.ProxyObjectCache $r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        char[] $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache methodCache>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int get(java.lang.Object)>($r1);

        if $i1 >= 0 goto label1;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $i1 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r4);

        $r5 = <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: char[] Init>;

        $i2 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $r5 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.reflect.Constructor)>($r1);

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $i2 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndexForNameAndType(int,int)>($i2, $i0);

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache methodCache>;

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i0 = $i3 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i0;

        $i0 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int put(java.lang.Object,int)>($r1, $i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(10);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i2);

        return $i0;

     label1:
        return $i1;
    }

    int literalIndex(java.lang.reflect.Field)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        java.lang.reflect.Field $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.luni.internal.reflect.ProxyObjectCache $r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        char[] $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: java.lang.reflect.Field;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache fieldCache>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int get(java.lang.Object)>($r1);

        if $i1 >= 0 goto label1;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $i1 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r4);

        $r4 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i2 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $r3 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r5 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.Class)>($r3);

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $i2 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndexForNameAndType(int,int)>($i2, $i0);

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache fieldCache>;

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i0 = $i3 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i0;

        $i0 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int put(java.lang.Object,int)>($r1, $i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(9);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i2);

        return $i0;

     label1:
        return $i1;
    }

    int literalIndex(java.lang.reflect.Method)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2;
        boolean $z0;
        org.apache.harmony.luni.internal.reflect.ProxyObjectCache $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;
        char[] $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache interfaceMethodCache>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int get(java.lang.Object)>($r1);

        if $i0 >= 0 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r4);

        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i1 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $r5 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.reflect.Method)>($r1);

        $i2 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $i1 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndexForNameAndType(int,int)>($i1, $i2);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache interfaceMethodCache>;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i3 = $i2 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i3;

        $i2 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int put(java.lang.Object,int)>($r1, $i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(11);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i1);

        return $i2;

     label1:
        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache methodCache>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int get(java.lang.Object)>($r1);

        if $i0 >= 0 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r4);

        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i1 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $r5 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.reflect.Method)>($r1);

        $i2 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        $i1 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndexForNameAndType(int,int)>($i1, $i2);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyObjectCache methodCache>;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i3 = $i2 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i3;

        $i2 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyObjectCache: int put(java.lang.Object,int)>($r1, $i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(10);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i1);

        return $i2;

     label2:
        return $i0;

     label3:
        return $i0;
    }

    int literalIndex(char[])
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        char[] $r1;
        char $c0, $c5;
        int $i1, $i2, $i3, $i4;
        org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache $r2;
        byte[] $r3, $r4;
        byte $b6;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: char[];

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache UTF8Cache>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int get(char[])>($r1);

        $i2 = $i1;

        if $i1 >= 0 goto label8;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(1);

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i3 = $i3 + 2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i2 = lengthof $r3;

        if $i3 < $i2 goto label1;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i3 = lengthof $r3;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i2 = $i3 + 1000;

        $r4 = newarray (byte)[$i2];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i3);

     label1:
        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i3 = $i3 + 2;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i3;

        $i3 = 0;

        $i2 = 0;

     label2:
        $i4 = lengthof $r1;

        if $i2 >= $i4 goto label6;

        $c0 = $r1[$i2];

        if $c0 < 1 goto label4;

        if $c0 > 127 goto label4;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c0);

        $i3 = $i3 + 1;

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        if $c0 <= 2047 goto label5;

        $i3 = $i3 + 3;

        $c5 = $c0 >> 12;

        $c5 = $c5 & 15;

        $c5 = $c5 | 224;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c5);

        $c5 = $c0 >> 6;

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c5);

        $c0 = $c0 & 63;

        $c0 = $c0 | 128;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c0);

        goto label3;

     label5:
        $i3 = $i3 + 2;

        $c5 = $c0 >> 6;

        $c5 = $c5 & 31;

        $c5 = $c5 | 192;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c5);

        $c0 = $c0 & 63;

        $c0 = $c0 | 128;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c0);

        goto label3;

     label6:
        if $i3 < 65535 goto label7;

        $i1 = $i1 - 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i1;

        return -1;

     label7:
        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache UTF8Cache>;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i4 = $i2 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i4;

        $i2 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int put(char[],int)>($r1, $i2);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i4 = $i3 >> 8;

        $b6 = (byte) $i4;

        $r3[$i1] = $b6;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $i1 + 1;

        $b6 = (byte) $i3;

        $r3[$i1] = $b6;

     label8:
        return $i2;
    }

    int literalIndexForLdc(char[])
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        char[] $r1;
        char $c0, $c5;
        int $i1, $i2, $i3, $i4;
        org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache $r2;
        byte[] $r3, $r4;
        byte $b6;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: char[];

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache stringCache>;

        $i2 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int get(char[])>($r1);

        $i1 = $i2;

        if $i2 >= 0 goto label10;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache UTF8Cache>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int get(char[])>($r1);

        $i2 = $i1;

        if $i1 >= 0 goto label09;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(1);

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i2 = $i2 + 2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i3 = lengthof $r3;

        if $i2 < $i3 goto label01;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i2 = lengthof $r3;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i3 = $i2 + 1000;

        $r4 = newarray (byte)[$i3];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i2);

     label01:
        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $i2 = $i2 + 2;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i2;

        $i3 = 0;

        $i2 = 0;

     label02:
        $i4 = lengthof $r1;

        if $i2 >= $i4 goto label06;

        $c0 = $r1[$i2];

        if $c0 < 1 goto label04;

        if $c0 > 127 goto label04;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c0);

        $i3 = $i3 + 1;

     label03:
        $i2 = $i2 + 1;

        goto label02;

     label04:
        if $c0 <= 2047 goto label05;

        $i3 = $i3 + 3;

        $c5 = $c0 >> 12;

        $c5 = $c5 & 15;

        $c5 = $c5 | 224;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c5);

        $c5 = $c0 >> 6;

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c5);

        $c0 = $c0 & 63;

        $c0 = $c0 | 128;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c0);

        goto label03;

     label05:
        $i3 = $i3 + 2;

        $c5 = $c0 >> 6;

        $c5 = $c5 & 31;

        $c5 = $c5 | 192;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c5);

        $c0 = $c0 & 63;

        $c0 = $c0 | 128;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>($c0);

        goto label03;

     label06:
        if $i3 < 65535 goto label07;

        $i1 = $i1 - 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset> = $i1;

        return -1;

     label07:
        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache UTF8Cache>;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i4 = $i2 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i4;

        $i2 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int put(char[],int)>($r1, $i2);

        if $i3 <= 65535 goto label08;

        return 0;

     label08:
        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i4 = $i3 >> 8;

        $b6 = (byte) $i4;

        $r3[$i1] = $b6;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $i1 = $i1 + 1;

        $b6 = (byte) $i3;

        $r3[$i1] = $b6;

     label09:
        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache stringCache>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i3;

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int put(char[],int)>($r1, $i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(8);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i2);

     label10:
        return $i1;
    }

    int typeIndex(java.lang.String)
    {
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        char[] $r2;
        org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache $r3;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

        if $i0 == -1 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache classNameCache>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int get(char[])>($r2);

        if $i0 >= 0 goto label2;

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r2);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache classNameCache>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex> = $i2;

        $i1 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyCharArrayCache: int put(char[],int)>($r2, $i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU1(int)>(7);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void writeU2(int)>($i0);

        return $i1;

     label2:
        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int UTF8_INITIAL_SIZE> = 50;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int STRING_INITIAL_SIZE> = 21;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int NAMEANDTYPE_INITIAL_SIZE> = 21;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int METHOD_INITIAL_SIZE> = 21;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int INTERFACE_INITIAL_SIZE> = 21;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int FIELD_INITIAL_SIZE> = 7;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int CONSTANTPOOL_INITIAL_SIZE> = 500;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int CONSTANTPOOL_GROW_SIZE> = 1000;

        <org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int CLASS_INITIAL_SIZE> = 21;

        return;
    }
}
