public class org.apache.harmony.xnet.provider.jsse.SSLStreamedInput extends org.apache.harmony.xnet.provider.jsse.SSLInputStream
{
    private java.io.InputStream in;

    public void <init>(java.io.InputStream)
    {
        org.apache.harmony.xnet.provider.jsse.SSLStreamedInput $r0;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLStreamedInput;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: void <init>()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.SSLStreamedInput: java.io.InputStream in> = $r1;

        return;
    }

    public int available() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLStreamedInput $r0;
        int $i0;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLStreamedInput;

        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.SSLStreamedInput: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLStreamedInput $r0;
        int $i0;
        java.io.InputStream $r1;
        org.apache.harmony.xnet.provider.jsse.EndOfSourceException $r2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLStreamedInput;

        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.SSLStreamedInput: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 >= 0 goto label1;

        $r2 = new org.apache.harmony.xnet.provider.jsse.EndOfSourceException;

        specialinvoke $r2.<org.apache.harmony.xnet.provider.jsse.EndOfSourceException: void <init>()>();

        throw $r2;

     label1:
        return $i0;
    }
}
