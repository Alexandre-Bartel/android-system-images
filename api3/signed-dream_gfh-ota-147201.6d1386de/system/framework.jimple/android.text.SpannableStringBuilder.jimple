public class android.text.SpannableStringBuilder extends java.lang.Object implements android.text.Editable, android.text.GetChars, android.text.GraphicsOperations, android.text.Spannable, java.lang.Appendable, java.lang.CharSequence
{
    private static final int END_MASK;
    private static final int MARK;
    private static final android.text.InputFilter[] NO_FILTERS;
    private static final int PARAGRAPH;
    private static final int POINT;
    private static final int START_MASK;
    private static final int START_SHIFT;
    private android.text.InputFilter[] mFilters;
    private int mGapLength;
    private int mGapStart;
    private int mSpanCount;
    private int[] mSpanEnds;
    private int[] mSpanFlags;
    private int[] mSpanStarts;
    private java.lang.Object[] mSpans;
    private char[] mText;

    static void <clinit>()
    {
        android.text.InputFilter[] $r0;

        <android.text.SpannableStringBuilder: int START_SHIFT> = 4;

        <android.text.SpannableStringBuilder: int START_MASK> = 240;

        <android.text.SpannableStringBuilder: int POINT> = 2;

        <android.text.SpannableStringBuilder: int PARAGRAPH> = 3;

        <android.text.SpannableStringBuilder: int MARK> = 1;

        <android.text.SpannableStringBuilder: int END_MASK> = 15;

        $r0 = newarray (android.text.InputFilter)[0];

        <android.text.SpannableStringBuilder: android.text.InputFilter[] NO_FILTERS> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.SpannableStringBuilder $r0;

        $r0 := @this: android.text.SpannableStringBuilder;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>("");

        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke $r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.text.InputFilter[] $r2;
        char[] $r3;
        java.lang.Object[] $r4;
        int[] $r5;
        boolean $z0;
        android.text.Spanned $r6;
        java.lang.Object $r7;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <android.text.SpannableStringBuilder: android.text.InputFilter[] NO_FILTERS>;

        $r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters> = $r2;

        $i2 = $i1 - $i0;

        $i3 = $i2 + 1;

        $i3 = staticinvoke <com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>($i3);

        $r3 = newarray (char)[$i3];

        $r0.<android.text.SpannableStringBuilder: char[] mText> = $r3;

        $r0.<android.text.SpannableStringBuilder: int mGapStart> = $i2;

        $i2 = $i3 - $i2;

        $r0.<android.text.SpannableStringBuilder: int mGapLength> = $i2;

        $r3 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r1, $i0, $i1, $r3, 0);

        $r0.<android.text.SpannableStringBuilder: int mSpanCount> = 0;

        $i2 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>(0);

        $r4 = newarray (java.lang.Object)[$i2];

        $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans> = $r4;

        $r5 = newarray (int)[$i2];

        $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts> = $r5;

        $r5 = newarray (int)[$i2];

        $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds> = $r5;

        $r5 = newarray (int)[$i2];

        $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags> = $r5;

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label8;

        $r6 = (android.text.Spanned) $r1;

        $r4 = interfaceinvoke $r6.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "java/lang/Object");

        $i2 = 0;

     label1:
        $i3 = lengthof $r4;

        if $i2 >= $i3 goto label9;

        $r7 = $r4[$i2];

        $z0 = $r7 instanceof android.text.NoCopySpan;

        if $z0 == 0 goto label3;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r7 = $r4[$i2];

        $i3 = interfaceinvoke $r6.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r7);

        $i3 = $i3 - $i0;

        $r7 = $r4[$i2];

        $i4 = interfaceinvoke $r6.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r7);

        $i4 = $i4 - $i0;

        $r7 = $r4[$i2];

        $i5 = interfaceinvoke $r6.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r7);

        if $i3 >= 0 goto label4;

        $i3 = 0;

     label4:
        $i6 = $i1 - $i0;

        if $i3 <= $i6 goto label5;

        $i3 = $i1 - $i0;

     label5:
        if $i4 >= 0 goto label6;

        $i4 = 0;

     label6:
        $i6 = $i1 - $i0;

        if $i4 <= $i6 goto label7;

        $i4 = $i1 - $i0;

     label7:
        $r7 = $r4[$i2];

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r7, $i3, $i4, $i5);

        goto label2;

     label8:
        return;

     label9:
        return;
    }

    private int change(int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.CharSequence;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = specialinvoke $r0.<android.text.SpannableStringBuilder: int change(boolean,int,int,java.lang.CharSequence,int,int)>(1, $i0, $i1, $r1, $i2, $i3);

        return $i0;
    }

    private int change(boolean, int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.CharSequence $r1;
        android.text.TextWatcher[] $r2;
        int[] $r3, $r11;
        char $c12;
        java.lang.Object[] $r4, $r10;
        java.lang.Object $r5, $r9;
        char[] $r6;
        java.lang.Exception $r7;
        android.text.Spanned $r8;

        $r0 := @this: android.text.SpannableStringBuilder;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.CharSequence;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("replace", $i0, $i1);

        $i6 = $i3 - $i2;

        $r2 = null;

        if $z0 == 0 goto label01;

        $i7 = $i1 - $i0;

        $i8 = $i3 - $i2;

        $r2 = specialinvoke $r0.<android.text.SpannableStringBuilder: android.text.TextWatcher[] sendTextWillChange(int,int,int)>($i0, $i7, $i8);

     label01:
        $i7 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i7 = $i7 - 1;

     label02:
        if $i7 < 0 goto label13;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i8 = $r3[$i7];

        $i8 = $i8 & 51;

        if $i8 != 51 goto label10;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $r3[$i7];

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i8 <= $i9 goto label03;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = $i8 - $i9;

     label03:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i9 = $r3[$i7];

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i9 <= $i4 goto label04;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i9 = $i9 - $i4;

     label04:
        $i5 = $i8;

        $i4 = $i9;

        $i10 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i8 <= $i0 goto label06;

        if $i8 > $i1 goto label06;

        $i8 = $i1;

     label05:
        if $i8 >= $i10 goto label06;

        if $i8 <= $i1 goto label11;

        $i11 = $i8 - 1;

        $c12 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i11);

        if $c12 != 10 goto label11;

     label06:
        if $i9 <= $i0 goto label08;

        if $i9 > $i1 goto label08;

        $i9 = $i1;

     label07:
        if $i9 >= $i10 goto label08;

        if $i9 <= $i1 goto label12;

        $i11 = $i9 - 1;

        $c12 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i11);

        if $c12 != 10 goto label12;

     label08:
        if $i8 != $i5 goto label09;

        if $i9 == $i4 goto label10;

     label09:
        $r4 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r5 = $r4[$i7];

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i4 = $r3[$i7];

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r5, $i8, $i9, $i4);

     label10:
        $i7 = $i7 + -1;

        goto label02;

     label11:
        $i8 = $i8 + 1;

        goto label05;

     label12:
        $i9 = $i9 + 1;

        goto label07;

     label13:
        specialinvoke $r0.<android.text.SpannableStringBuilder: void moveGapTo(int)>($i1);

        $i7 = $i3 - $i2;

        $i8 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i9 = $i1 - $i0;

        $i8 = $i8 + $i9;

        if $i7 < $i8 goto label14;

        $r6 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i7 = lengthof $r6;

        $i8 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i7 = $i7 - $i8;

        $i7 = $i7 + $i3;

        $i7 = $i7 - $i2;

        $i8 = $i1 - $i0;

        $i7 = $i7 - $i8;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void resizeFor(int)>($i7);

     label14:
        $i7 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i8 = $i3 - $i2;

        $i9 = $i1 - $i0;

        $i8 = $i8 - $i9;

        $i7 = $i7 + $i8;

        $r0.<android.text.SpannableStringBuilder: int mGapStart> = $i7;

        $i7 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = $i3 - $i2;

        $i9 = $i1 - $i0;

        $i8 = $i8 - $i9;

        $i7 = $i7 - $i8;

        $r0.<android.text.SpannableStringBuilder: int mGapLength> = $i7;

        $i7 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $i7 >= 1 goto label15;

        $r7 = new java.lang.Exception;

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>("mGapLength < 1");

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace()>();

     label15:
        $r6 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r1, $i2, $i3, $r6, $i0);

        $z1 = $r1 instanceof android.text.Spanned;

        if $z1 == 0 goto label20;

        $r8 = (android.text.Spanned) $r1;

        $r4 = interfaceinvoke $r8.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i2, $i3, class "java/lang/Object");

        $i7 = 0;

     label16:
        $i8 = lengthof $r4;

        if $i7 >= $i8 goto label20;

        $r5 = $r4[$i7];

        $i4 = interfaceinvoke $r8.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r5);

        $i9 = $i4;

        $r5 = $r4[$i7];

        $i5 = interfaceinvoke $r8.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r5);

        $i8 = $i5;

        if $i4 >= $i2 goto label17;

        $i9 = $i2;

     label17:
        if $i5 <= $i3 goto label18;

        $i8 = $i3;

     label18:
        $r5 = $r4[$i7];

        $i4 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r5);

        if $i4 >= 0 goto label19;

        $r5 = $r4[$i7];

        $i9 = $i9 - $i2;

        $i9 = $i9 + $i0;

        $i8 = $i8 - $i2;

        $i8 = $i8 + $i0;

        $r9 = $r4[$i7];

        $i4 = interfaceinvoke $r8.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r9);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r5, $i9, $i8, $i4);

     label19:
        $i7 = $i7 + 1;

        goto label16;

     label20:
        if $i3 <= $i2 goto label21;

        $i7 = $i1 - $i0;

        if $i7 != 0 goto label21;

        if $z0 == 0 goto label33;

        $i1 = $i1 - $i0;

        $i2 = $i3 - $i2;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendTextChange(android.text.TextWatcher[],int,int,int)>($r2, $i0, $i1, $i2);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendTextHasChanged(android.text.TextWatcher[])>($r2);

        return $i6;

     label21:
        $i7 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i8 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i7 = $i7 + $i8;

        $r6 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i8 = lengthof $r6;

        if $i7 != $i8 goto label29;

        $z1 = 1;

     label22:
        $i7 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i7 = $i7 - 1;

     label23:
        if $i7 < 0 goto label32;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $r3[$i7];

        if $i8 < $i0 goto label25;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $r3[$i7];

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i9 = $i9 + $i4;

        if $i8 >= $i9 goto label25;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i8 = $r3[$i7];

        $i8 = $i8 & 240;

        $i8 = $i8 >> 4;

        if $i8 == 2 goto label24;

        if $i8 != 3 goto label30;

        if $z1 == 0 goto label30;

     label24:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = $i8 + $i9;

        $r3[$i7] = $i8;

     label25:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r3[$i7];

        if $i8 < $i0 goto label27;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r3[$i7];

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i9 = $i9 + $i4;

        if $i8 >= $i9 goto label27;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i8 = $r3[$i7];

        $i8 = $i8 & 15;

        if $i8 == 2 goto label26;

        if $i8 != 3 goto label31;

        if $z1 == 0 goto label31;

     label26:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = $i8 + $i9;

        $r3[$i7] = $i8;

     label27:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r3[$i7];

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i9 = $r3[$i7];

        if $i8 >= $i9 goto label28;

        $r4 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i8 = $i7 + 1;

        $r10 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i4 = $i7 + 1;

        $i9 = $i9 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i8, $r10, $i7, $i9);

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $i7 + 1;

        $r11 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i4 = $i7 + 1;

        $i9 = $i9 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i8, $r11, $i7, $i9);

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $i7 + 1;

        $r11 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i4 = $i7 + 1;

        $i9 = $i9 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i8, $r11, $i7, $i9);

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i8 = $i7 + 1;

        $r11 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i4 = $i7 + 1;

        $i9 = $i9 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i8, $r11, $i7, $i9);

        $i8 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i8 = $i8 - 1;

        $r0.<android.text.SpannableStringBuilder: int mSpanCount> = $i8;

     label28:
        $i7 = $i7 + -1;

        goto label23;

     label29:
        $z1 = 0;

        goto label22;

     label30:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r3[$i7] = $i0;

        goto label25;

     label31:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r3[$i7] = $i0;

        goto label27;

     label32:
        if $z0 == 0 goto label34;

        $i1 = $i1 - $i0;

        $i2 = $i3 - $i2;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendTextChange(android.text.TextWatcher[],int,int,int)>($r2, $i0, $i1, $i2);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendTextHasChanged(android.text.TextWatcher[])>($r2);

        return $i6;

     label33:
        return $i6;

     label34:
        return $i6;
    }

    private void checkRange(java.lang.String, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 >= $i0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r1 = staticinvoke <android.text.SpannableStringBuilder: java.lang.String region(int,int)>($i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has end before start");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $i2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i0 > $i2 goto label2;

        if $i1 <= $i2 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r1 = staticinvoke <android.text.SpannableStringBuilder: java.lang.String region(int,int)>($i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ends beyond length ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label3:
        if $i0 < 0 goto label4;

        if $i1 >= 0 goto label5;

     label4:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r1 = staticinvoke <android.text.SpannableStringBuilder: java.lang.String region(int,int)>($i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starts before 0");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label5:
        return;
    }

    private boolean isprint(char)
    {
        android.text.SpannableStringBuilder $r0;
        char $c0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $c0 := @parameter0: char;

        if $c0 < 32 goto label1;

        if $c0 > 126 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void moveGapTo(int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        char[] $r1, $r2;
        int[] $r3;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 != $i1 goto label01;

        return;

     label01:
        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i0 != $i1 goto label09;

        $z0 = 1;

     label02:
        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 >= $i1 goto label10;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i1 = $i1 - $i0;

        $r1 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i3;

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i2, $i1);

     label03:
        $i1 = 0;

     label04:
        $i2 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if $i1 >= $i2 goto label15;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i2 = $r3[$i1];

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i3 = $r3[$i1];

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i2 <= $i4 goto label05;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 - $i4;

     label05:
        if $i2 <= $i0 goto label11;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i4;

     label06:
        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i3 <= $i4 goto label07;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 - $i4;

     label07:
        if $i3 <= $i0 goto label13;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 + $i4;

     label08:
        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r3[$i1] = $i2;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r3[$i1] = $i3;

        $i1 = $i1 + 1;

        goto label04;

     label09:
        $z0 = 0;

        goto label02;

     label10:
        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i1 = $i0 - $i1;

        $r1 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i0;

        $i2 = $i2 - $i1;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r2, $i3, $i1);

        goto label03;

     label11:
        if $i2 != $i0 goto label06;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i4 = $r3[$i1];

        $i4 = $i4 & 240;

        $i4 = $i4 >> 4;

        if $i4 == 2 goto label12;

        if $z0 == 0 goto label06;

        if $i4 != 3 goto label06;

     label12:
        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i4;

        goto label06;

     label13:
        if $i3 != $i0 goto label08;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i4 = $r3[$i1];

        $i4 = $i4 & 15;

        if $i4 == 2 goto label14;

        if $z0 == 0 goto label08;

        if $i4 != 3 goto label08;

     label14:
        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 + $i4;

        goto label08;

     label15:
        $r0.<android.text.SpannableStringBuilder: int mGapStart> = $i0;

        return;
    }

    private static java.lang.String region(int, int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private void resizeFor(int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1, $r2, $r3;
        int[] $r4;
        java.lang.Exception $r5;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>($i0);

        $r1 = newarray (char)[$i0];

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = lengthof $r2;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i3;

        $i1 = $i1 - $i2;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i2);

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $r3 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = lengthof $r3;

        $i2 = $i2 - $i1;

        $i3 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i3, $i1);

        $i1 = 0;

     label1:
        $i2 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if $i1 >= $i2 goto label4;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i2 = $r4[$i1];

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i2 <= $i3 goto label2;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i2 = $r4[$i1];

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = lengthof $r2;

        $i3 = $i0 - $i3;

        $i2 = $i2 + $i3;

        $r4[$i1] = $i2;

     label2:
        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i2 = $r4[$i1];

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i2 <= $i3 goto label3;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i2 = $r4[$i1];

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = lengthof $r2;

        $i3 = $i0 - $i3;

        $i2 = $i2 + $i3;

        $r4[$i1] = $i2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = lengthof $r2;

        $r0.<android.text.SpannableStringBuilder: char[] mText> = $r1;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $r1 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = lengthof $r1;

        $i1 = $i2 - $i1;

        $i0 = $i0 + $i1;

        $r0.<android.text.SpannableStringBuilder: int mGapLength> = $i0;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $i0 >= 1 goto label5;

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>("mGapLength < 1");

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        return;

     label5:
        return;
    }

    private void sendSpanAdded(java.lang.Object, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2;
        android.text.SpanWatcher[] $r3;
        android.text.SpanWatcher $r4;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "android/text/SpanWatcher");

        $r3 = (android.text.SpanWatcher[]) $r2;

        $i2 = lengthof $r3;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r4 = $r3[$i3];

        interfaceinvoke $r4.<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>($r0, $r1, $i0, $i1);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanChanged(java.lang.Object, int, int, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r2;
        android.text.SpanWatcher[] $r3;
        android.text.SpanWatcher $r4;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i3);

        $r2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i4, $i5, class "android/text/SpanWatcher");

        $r3 = (android.text.SpanWatcher[]) $r2;

        $i4 = lengthof $r3;

        $i5 = 0;

     label1:
        if $i5 >= $i4 goto label2;

        $r4 = $r3[$i5];

        interfaceinvoke $r4.<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>($r0, $r1, $i0, $i1, $i2, $i3);

        $i5 = $i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanRemoved(java.lang.Object, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2;
        android.text.SpanWatcher[] $r3;
        android.text.SpanWatcher $r4;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "android/text/SpanWatcher");

        $r3 = (android.text.SpanWatcher[]) $r2;

        $i2 = lengthof $r3;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r4 = $r3[$i3];

        interfaceinvoke $r4.<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>($r0, $r1, $i0, $i1);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendTextChange(android.text.TextWatcher[], int, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        android.text.TextWatcher[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.TextWatcher $r2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: android.text.TextWatcher[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 = lengthof $r1;

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label2;

        $r2 = $r1[$i4];

        interfaceinvoke $r2.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>($r0, $i0, $i1, $i2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendTextHasChanged(android.text.TextWatcher[])
    {
        android.text.SpannableStringBuilder $r0;
        android.text.TextWatcher[] $r1;
        int $i0, $i1;
        android.text.TextWatcher $r2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: android.text.TextWatcher[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        interfaceinvoke $r2.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>($r0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private android.text.TextWatcher[] sendTextWillChange(int, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r1;
        android.text.TextWatcher[] $r2;
        android.text.TextWatcher $r3;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i0 + $i1;

        $r1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i3, class "android/text/TextWatcher");

        $r2 = (android.text.TextWatcher[]) $r1;

        $i3 = lengthof $r2;

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label2;

        $r3 = $r2[$i4];

        interfaceinvoke $r3.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>($r0, $i0, $i1, $i2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private void setSpan(boolean, java.lang.Object, int, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        boolean $z0;
        java.lang.Object $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        char $c6;
        java.lang.RuntimeException $r2;
        java.lang.Object[] $r3, $r8;
        int[] $r5, $r6, $r7, $r9;

        $r0 := @this: android.text.SpannableStringBuilder;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        $i3 := @parameter2: int;

        $i4 := @parameter3: int;

        $i0 := @parameter4: int;

        $i1 = $i3;

        $i2 = $i4;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("setSpan", $i3, $i4);

        $i5 = $i0 & 240;

        if $i5 != 48 goto label01;

        if $i3 == 0 goto label01;

        $i5 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i3 == $i5 goto label01;

        $i5 = $i3 - 1;

        $c6 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i5);

        if $c6 == 10 goto label01;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("PARAGRAPH span must start at paragraph boundary");

        throw $r2;

     label01:
        $i5 = $i0 & 15;

        if $i5 != 3 goto label02;

        if $i4 == 0 goto label02;

        $i5 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i4 == $i5 goto label02;

        $i5 = $i4 - 1;

        $c6 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i5);

        if $c6 == 10 goto label02;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("PARAGRAPH span must end at paragraph boundary");

        throw $r2;

     label02:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i3 <= $i5 goto label08;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 + $i5;

     label03:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i4 <= $i5 goto label10;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i4 = $i4 + $i5;

     label04:
        $i7 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r3 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i5 = 0;

     label05:
        if $i5 >= $i7 goto label13;

        $r4 = $r3[$i5];

        if $r4 != $r1 goto label12;

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i7 = $r5[$i5];

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r5[$i5];

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i7 <= $i9 goto label06;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i7 = $i7 - $i9;

     label06:
        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i8 <= $i9 goto label07;

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = $i8 - $i9;

     label07:
        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r5[$i5] = $i3;

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r5[$i5] = $i4;

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $r5[$i5] = $i0;

        if $z0 == 0 goto label15;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendSpanChanged(java.lang.Object,int,int,int,int)>($r1, $i7, $i8, $i1, $i2);

        return;

     label08:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i3 != $i5 goto label03;

        $i5 = $i0 & 240;

        $i5 = $i5 >> 4;

        if $i5 == 2 goto label09;

        if $i5 != 3 goto label03;

        $i5 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i3 != $i5 goto label03;

     label09:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 + $i5;

        goto label03;

     label10:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i4 != $i5 goto label04;

        $i5 = $i0 & 15;

        if $i5 == 2 goto label11;

        if $i5 != 3 goto label04;

        $i5 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i4 != $i5 goto label04;

     label11:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i4 = $i4 + $i5;

        goto label04;

     label12:
        $i5 = $i5 + 1;

        goto label05;

     label13:
        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i5 = $i5 + 1;

        $r3 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i7 = lengthof $r3;

        if $i5 < $i7 goto label14;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i5 = $i5 + 1;

        $i5 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i5);

        $r3 = newarray (java.lang.Object)[$i5];

        $r5 = newarray (int)[$i5];

        $r6 = newarray (int)[$i5];

        $r7 = newarray (int)[$i5];

        $r8 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r3, 0, $i5);

        $r9 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r5, 0, $i5);

        $r9 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r6, 0, $i5);

        $r9 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r7, 0, $i5);

        $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans> = $r3;

        $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts> = $r5;

        $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds> = $r6;

        $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags> = $r7;

     label14:
        $r3 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r3[$i5] = $r1;

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i5 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r5[$i5] = $i3;

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r5[$i3] = $i4;

        $r5 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r5[$i3] = $i0;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i3 = $i3 + 1;

        $r0.<android.text.SpannableStringBuilder: int mSpanCount> = $i3;

        if $z0 == 0 goto label16;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendSpanAdded(java.lang.Object,int,int)>($r1, $i1, $i2);

        return;

     label15:
        return;

     label16:
        return;
    }

    public static android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        android.text.SpannableStringBuilder $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 = $r0 instanceof android.text.SpannableStringBuilder;

        if $z0 == 0 goto label1;

        $r1 = (android.text.SpannableStringBuilder) $r0;

        return $r1;

     label1:
        $r1 = new android.text.SpannableStringBuilder;

        specialinvoke $r1.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r0);

        return $r1;
    }

    public volatile android.text.Editable append(char)
    {
        android.text.SpannableStringBuilder $r0;
        char $c0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $c0 := @parameter0: char;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>($c0);

        return $r0;
    }

    public volatile android.text.Editable append(java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r1);

        return $r0;
    }

    public volatile android.text.Editable append(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return $r0;
    }

    public android.text.SpannableStringBuilder append(char)
    {
        android.text.SpannableStringBuilder $r0;
        char $c0;
        java.lang.String $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r1);

        return $r0;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i0, $i0, $r1, 0, $i1);

        return $r0;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i2, $i2, $r1, $i0, $i1);

        return $r0;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        android.text.SpannableStringBuilder $r0;
        char $c0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $c0 := @parameter0: char;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>($c0);

        return $r0;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r1);

        return $r0;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return $r0;
    }

    public char charAt(int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        char[] $r4;
        char $c2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charAt: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        if $i0 < $i1 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charAt: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= length ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 < $i1 goto label3;

        $r4 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i0 = $i1 + $i0;

        $c2 = $r4[$i0];

        return $c2;

     label3:
        $r4 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $c2 = $r4[$i0];

        return $c2;
    }

    public void clear()
    {
        android.text.SpannableStringBuilder $r0;
        int $i0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(0, $i0, "", 0, 0);

        return;
    }

    public void clearSpans()
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2;
        int[] $r3;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r1 = $r2[$i0];

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i1 = $r3[$i0];

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i2 = $r3[$i0];

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i1 <= $i3 goto label2;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i1 = $i1 - $i3;

     label2:
        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i2 <= $i3 goto label3;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 - $i3;

     label3:
        $r0.<android.text.SpannableStringBuilder: int mSpanCount> = $i0;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r2[$i0] = null;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendSpanRemoved(java.lang.Object,int,int)>($r1, $i1, $i2);

        $i0 = $i0 + -1;

        goto label1;

     label4:
        return;
    }

    public volatile android.text.Editable delete(int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i0, $i1);

        return $r0;
    }

    public android.text.SpannableStringBuilder delete(int, int)
    {
        android.text.SpannableStringBuilder $r0, $r1;
        int $i0, $i1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i0, $i1, "", 0, 0);

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $i1 = $i1 * 2;

        if $i0 <= $i1 goto label1;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        specialinvoke $r0.<android.text.SpannableStringBuilder: void resizeFor(int)>($i0);

        return $r1;

     label1:
        return $r1;
    }

    public void drawText(android.graphics.Canvas, int, int, float, float, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2;
        float $f0, $f1;
        android.graphics.Paint $r2;
        char[] $r3;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r2 := @parameter5: android.graphics.Paint;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("drawText", $i0, $i1);

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i1 > $i2 goto label1;

        $r3 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = $i1 - $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>($r3, $i0, $i1, $f0, $f1, $r2);

        return;

     label1:
        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 < $i2 goto label2;

        $r3 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i0 + $i2;

        $i0 = $i1 - $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>($r3, $i2, $i0, $f0, $f1, $r2);

        return;

     label2:
        $i2 = $i1 - $i0;

        $r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i2);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>($i0, $i1, $r3, 0);

        $i0 = $i1 - $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>($r3, 0, $i0, $f0, $f1, $r2);

        staticinvoke <android.text.TextUtils: void recycle(char[])>($r3);

        return;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r1, $r2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: char[];

        $i2 := @parameter3: int;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("getChars", $i0, $i1);

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i1 > $i3 goto label1;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i2, $i1);

        return;

     label1:
        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 < $i3 goto label2;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 + $i0;

        $i0 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r1, $i2, $i0);

        return;

     label2:
        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i3 = $i3 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i2, $i3);

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 + $i4;

        $i4 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i0 = $i4 - $i0;

        $i0 = $i0 + $i2;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i1 = $i1 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r1, $i0, $i1);

        return;
    }

    public android.text.InputFilter[] getFilters()
    {
        android.text.SpannableStringBuilder $r0;
        android.text.InputFilter[] r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        r1 = $r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters>;

        return r1;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1;
        java.lang.Object[] $r2;
        int[] $r4;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = $r2[$i0];

        if $r3 != $r1 goto label3;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i0 = $r4[$i0];

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 <= $i1 goto label2;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i0 = $i0 - $i1;

     label2:
        return $i0;

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        return -1;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1, $r3;
        int $i0;
        java.lang.Object[] $r2;
        int[] $r4;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r3 = $r2[$i0];

        if $r3 != $r1 goto label2;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i0 = $r4[$i0];

        return $i0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return 0;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1;
        java.lang.Object[] $r2;
        int[] $r4;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = $r2[$i0];

        if $r3 != $r1 goto label3;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i0 = $r4[$i0];

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 <= $i1 goto label2;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i0 = $i0 - $i1;

     label2:
        return $i0;

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        return -1;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Class $r0;
        android.text.SpannableStringBuilder $r1;
        java.lang.Object[] $r2, $r6, $r9;
        int[] $r3, $r4, $r5;
        java.lang.Object $r7, $r8;
        boolean $z0;

        $r1 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: java.lang.Class;

        $i4 = $r1.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r2 = $r1.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r3 = $r1.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r4 = $r1.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r5 = $r1.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i5 = $r1.<android.text.SpannableStringBuilder: int mGapStart>;

        $i6 = $r1.<android.text.SpannableStringBuilder: int mGapLength>;

        $r6 = null;

        $i7 = 0;

        $r7 = null;

        $i8 = 0;

     label01:
        if $i7 >= $i4 goto label16;

        $i9 = $r3[$i7];

        $i3 = $r4[$i7];

        if $i9 <= $i5 goto label02;

        $i9 = $i9 - $i6;

     label02:
        if $i3 <= $i5 goto label03;

        $i3 = $i3 - $i6;

     label03:
        if $i9 <= $i1 goto label05;

        $i9 = $i8;

     label04:
        $i7 = $i7 + 1;

        $i8 = $i9;

        goto label01;

     label05:
        if $i3 >= $i0 goto label06;

        $i9 = $i8;

        goto label04;

     label06:
        if $i9 == $i3 goto label08;

        if $i0 == $i1 goto label08;

        if $i9 != $i1 goto label07;

        $i9 = $i8;

        goto label04;

     label07:
        if $i3 != $i0 goto label08;

        $i9 = $i8;

        goto label04;

     label08:
        if $r0 == null goto label09;

        $r8 = $r2[$i7];

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r8);

        if $z0 != 0 goto label09;

        $i9 = $i8;

        goto label04;

     label09:
        if $i8 != 0 goto label10;

        $i9 = $i8 + 1;

        $r7 = $r2[$i7];

        goto label04;

     label10:
        if $i8 != 1 goto label11;

        $i9 = $i4 - $i7;

        $i9 = $i9 + 1;

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, $i9);

        $r6 = (java.lang.Object[]) $r8;

        $r9 = (java.lang.Object[]) $r6;

        $r6 = $r9;

        $r9[0] = $r7;

     label11:
        $i9 = $r5[$i7];

        $i3 = $i9 & 16711680;

        if $i3 == 0 goto label15;

        $i9 = 0;

     label12:
        if $i9 >= $i8 goto label13;

        $r8 = $r6[$i9];

        $i2 = virtualinvoke $r1.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>($r8);

        $i2 = $i2 & 16711680;

        if $i3 <= $i2 goto label14;

     label13:
        $i3 = $i9 + 1;

        $i2 = $i8 - $i9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i9, $r6, $i3, $i2);

        $r8 = $r2[$i7];

        $r6[$i9] = $r8;

        $i9 = $i8 + 1;

        goto label04;

     label14:
        $i9 = $i9 + 1;

        goto label12;

     label15:
        $i9 = $i8 + 1;

        $r8 = $r2[$i7];

        $r6[$i8] = $r8;

        goto label04;

     label16:
        if $i8 != 0 goto label17;

        $r6 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>($r0);

        $r6 = (java.lang.Object[]) $r6;

        return $r6;

     label17:
        if $i8 != 1 goto label18;

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, 1);

        $r6 = (java.lang.Object[]) $r8;

        $r6 = (java.lang.Object[]) $r6;

        $r6[0] = $r7;

        $r6 = (java.lang.Object[]) $r6;

        return $r6;

     label18:
        $i0 = lengthof $r6;

        if $i8 != $i0 goto label19;

        $r6 = (java.lang.Object[]) $r6;

        return $r6;

     label19:
        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, $i8);

        $r2 = (java.lang.Object[]) $r7;

        $r2 = (java.lang.Object[]) $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r2, 0, $i8);

        $r6 = (java.lang.Object[]) $r2;

        return $r6;
    }

    public int getTextWidths(int, int, float[], android.graphics.Paint)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        float[] $r1;
        android.graphics.Paint $r2;
        char[] $r3;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: float[];

        $r2 := @parameter3: android.graphics.Paint;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("getTextWidths", $i0, $i1);

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i1 > $i2 goto label1;

        $r3 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = $i1 - $i0;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>($r3, $i0, $i1, $r1);

        return $i0;

     label1:
        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 < $i2 goto label2;

        $r3 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i0;

        $i0 = $i1 - $i0;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>($r3, $i2, $i0, $r1);

        return $i0;

     label2:
        $i2 = $i1 - $i0;

        $r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i2);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>($i0, $i1, $r3, 0);

        $i0 = $i1 - $i0;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>($r3, 0, $i0, $r1);

        staticinvoke <android.text.TextUtils: void recycle(char[])>($r3);

        return $i0;
    }

    public volatile android.text.Editable insert(int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>($i0, $r1);

        return $r0;
    }

    public volatile android.text.Editable insert(int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>($i0, $r1, $i1, $i2);

        return $r0;
    }

    public android.text.SpannableStringBuilder insert(int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i0, $i0, $r1, 0, $i1);

        return $r0;
    }

    public android.text.SpannableStringBuilder insert(int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i0, $i0, $r1, $i1, $i2);

        return $r0;
    }

    public int length()
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;
        char[] $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = lengthof $r1;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public float measureText(int, int, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        android.graphics.Paint $r1;
        char[] $r2;
        float $f0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Paint;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("measureText", $i0, $i1);

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i1 > $i2 goto label1;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = $i1 - $i0;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float measureText(char[],int,int)>($r2, $i0, $i1);

        return $f0;

     label1:
        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i0 < $i2 goto label2;

        $r2 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i2 + $i0;

        $i0 = $i1 - $i0;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float measureText(char[],int,int)>($r2, $i2, $i0);

        return $f0;

     label2:
        $i2 = $i1 - $i0;

        $r2 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i2);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>($i0, $i1, $r2, 0);

        $i0 = $i1 - $i0;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float measureText(char[],int,int)>($r2, 0, $i0);

        staticinvoke <android.text.TextUtils: void recycle(char[])>($r2);

        return $f0;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r1, $r3;
        java.lang.Object[] $r2;
        java.lang.Class $r4;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i4 := @parameter1: int;

        $r4 := @parameter2: java.lang.Class;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r3 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r1 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $r4 != null goto label1;

        $r4 = class "java/lang/Object";

     label1:
        $i5 = 0;

     label2:
        if $i5 >= $i1 goto label7;

        $i6 = $r3[$i5];

        $i7 = $r1[$i5];

        if $i6 <= $i3 goto label3;

        $i6 = $i6 - $i2;

     label3:
        if $i7 <= $i3 goto label4;

        $i7 = $i7 - $i2;

     label4:
        if $i6 <= $i0 goto label5;

        if $i6 >= $i4 goto label5;

        $r5 = $r2[$i5];

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $i4 = $i6;

     label5:
        if $i7 <= $i0 goto label6;

        if $i7 >= $i4 goto label6;

        $r5 = $r2[$i5];

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $i4 = $i7;

     label6:
        $i5 = $i5 + 1;

        goto label2;

     label7:
        return $i4;
    }

    public void removeSpan(java.lang.Object)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r2, $r5;
        int[] $r4, $r6;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i1 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i2 = $i1 - 1;

     label1:
        if $i2 < 0 goto label5;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r3 = $r2[$i2];

        if $r3 != $r1 goto label4;

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i1 = $r4[$i2];

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i3 = $r4[$i2];

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i1 <= $i0 goto label2;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i1 = $i1 - $i0;

     label2:
        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i3 <= $i0 goto label3;

        $i0 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 - $i0;

     label3:
        $i0 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i4 = $i2 + 1;

        $i0 = $i0 - $i4;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i4 = $i2 + 1;

        $r5 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, $r5, $i2, $i0);

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i4 = $i2 + 1;

        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, $r6, $i2, $i0);

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i4 = $i2 + 1;

        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, $r6, $i2, $i0);

        $r4 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i4 = $i2 + 1;

        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, $r6, $i2, $i0);

        $i2 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i2 = $i2 - 1;

        $r0.<android.text.SpannableStringBuilder: int mSpanCount> = $i2;

        $r2 = $r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i2 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r2[$i2] = null;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendSpanRemoved(java.lang.Object,int,int)>($r1, $i1, $i3);

        return;

     label4:
        $i2 = $i2 + -1;

        goto label1;

     label5:
        return;
    }

    public volatile android.text.Editable replace(int, int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.CharSequence;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>($i0, $i1, $r1);

        return $r0;
    }

    public volatile android.text.Editable replace(int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.CharSequence;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i0, $i1, $r1, $i2, $i3);

        return $r0;
    }

    public android.text.SpannableStringBuilder replace(int, int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.CharSequence;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>($i0, $i1, $r1, 0, $i2);

        return $r0;
    }

    public android.text.SpannableStringBuilder replace(int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.CharSequence $r1, $r4;
        android.text.InputFilter[] $r2;
        android.text.InputFilter $r3;
        android.text.TextWatcher[] $r5;
        int[] $r6;
        char[] $r7;
        java.lang.Exception $r8;
        long $l10, $l11;
        java.lang.Object $r9;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.CharSequence;

        $i4 := @parameter3: int;

        $i5 := @parameter4: int;

        $r2 = $r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters>;

        $i2 = lengthof $r2;

        $i6 = 0;

     label01:
        if $i6 >= $i2 goto label03;

        $r2 = $r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters>;

        $r3 = $r2[$i6];

        $r4 = interfaceinvoke $r3.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>($r1, $i4, $i5, $r0, $i0, $i1);

        if $r4 == null goto label02;

        $r1 = $r4;

        $i4 = 0;

        $i5 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

     label02:
        $i6 = $i6 + 1;

        goto label01;

     label03:
        if $i1 != $i0 goto label04;

        if $i4 != $i5 goto label04;

        return $r0;

     label04:
        if $i1 == $i0 goto label05;

        if $i4 != $i5 goto label06;

     label05:
        specialinvoke $r0.<android.text.SpannableStringBuilder: int change(int,int,java.lang.CharSequence,int,int)>($i0, $i1, $r1, $i4, $i5);

        return $r0;

     label06:
        $i7 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r0);

        $i6 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r0);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("replace", $i0, $i1);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void moveGapTo(int)>($i1);

        $i2 = $i1 - $i0;

        $i3 = $i5 - $i4;

        $r5 = specialinvoke $r0.<android.text.SpannableStringBuilder: android.text.TextWatcher[] sendTextWillChange(int,int,int)>($i0, $i2, $i3);

        $i2 = $i1 - $i0;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $i3 >= 2 goto label07;

        $i3 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $i3 = $i3 + 1;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void resizeFor(int)>($i3);

     label07:
        $i3 = $r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i3 = $i3 - 1;

     label08:
        if $i3 < 0 goto label11;

        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $r6[$i3];

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i8 != $i9 goto label09;

        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i8 = $r6[$i3];

        $i8 = $i8 + 1;

        $r6[$i3] = $i8;

     label09:
        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r6[$i3];

        $i9 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i8 != $i9 goto label10;

        $r6 = $r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i8 = $r6[$i3];

        $i8 = $i8 + 1;

        $r6[$i3] = $i8;

     label10:
        $i3 = $i3 + -1;

        goto label08;

     label11:
        $r7 = $r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $r7[$i3] = 32;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i3 = $i3 + 1;

        $r0.<android.text.SpannableStringBuilder: int mGapStart> = $i3;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = $i3 - 1;

        $r0.<android.text.SpannableStringBuilder: int mGapLength> = $i3;

        $i3 = $r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $i3 >= 1 goto label12;

        $r8 = new java.lang.Exception;

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>("mGapLength < 1");

        virtualinvoke $r8.<java.lang.Throwable: void printStackTrace()>();

     label12:
        $i3 = $i1 + 1;

        $i3 = $i3 - $i0;

        $i8 = $i0 + 1;

        $i9 = $i0 + 1;

        $i4 = specialinvoke $r0.<android.text.SpannableStringBuilder: int change(boolean,int,int,java.lang.CharSequence,int,int)>(0, $i8, $i9, $r1, $i4, $i5);

        $i5 = $i0 + 1;

        specialinvoke $r0.<android.text.SpannableStringBuilder: int change(boolean,int,int,java.lang.CharSequence,int,int)>(0, $i0, $i5, "", 0, 0);

        $i5 = $i0 + $i4;

        $i8 = $i0 + $i4;

        $i3 = $i8 + $i3;

        $i3 = $i3 - 1;

        specialinvoke $r0.<android.text.SpannableStringBuilder: int change(boolean,int,int,java.lang.CharSequence,int,int)>(0, $i5, $i3, "", 0, 0);

        if $i7 <= $i0 goto label15;

        if $i7 >= $i1 goto label15;

        $i5 = $i7 - $i0;

        $l10 = (long) $i5;

        $l11 = (long) $i4;

        $l10 = $l11 * $l10;

        $i5 = $i1 - $i0;

        $l11 = (long) $i5;

        $l10 = $l10 / $l11;

        $i5 = (int) $l10;

        $i5 = $i5 + $i0;

        $r9 = <android.text.Selection: java.lang.Object SELECTION_START>;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r9, $i5, $i5, 34);

     label13:
        if $i6 <= $i0 goto label14;

        if $i6 >= $i1 goto label14;

        $i5 = $i6 - $i0;

        $l10 = (long) $i5;

        $l11 = (long) $i4;

        $l10 = $l11 * $l10;

        $i1 = $i1 - $i0;

        $l11 = (long) $i1;

        $l10 = $l10 / $l11;

        $i1 = (int) $l10;

        $i1 = $i1 + $i0;

        $r9 = <android.text.Selection: java.lang.Object SELECTION_END>;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r9, $i1, $i1, 34);

     label14:
        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendTextChange(android.text.TextWatcher[],int,int,int)>($r5, $i0, $i2, $i4);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void sendTextHasChanged(android.text.TextWatcher[])>($r5);

        return $r0;

     label15:
        goto label13;
    }

    public void setFilters(android.text.InputFilter[])
    {
        android.text.SpannableStringBuilder $r0;
        android.text.InputFilter[] $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: android.text.InputFilter[];

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters> = $r1;

        return;
    }

    public void setSpan(java.lang.Object, int, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        specialinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(1, $r1, $i0, $i1, $i2);

        return;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.SpannableStringBuilder $r0, $r1;
        int $i0, $i1;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new android.text.SpannableStringBuilder;

        specialinvoke $r1.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public java.lang.String toString()
    {
        android.text.SpannableStringBuilder $r0;
        char[] $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r1 = newarray (char)[$i0];

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(0, $i0, $r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
}
