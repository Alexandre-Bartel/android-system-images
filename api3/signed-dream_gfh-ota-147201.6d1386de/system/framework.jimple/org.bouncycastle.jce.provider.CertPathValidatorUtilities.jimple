public class org.bouncycastle.jce.provider.CertPathValidatorUtilities extends java.lang.Object
{
    protected static final java.lang.String ANY_POLICY;
    protected static final java.lang.String BASIC_CONSTRAINTS;
    protected static final java.lang.String CERTIFICATE_POLICIES;
    protected static final java.lang.String CRL_NUMBER;
    protected static final int CRL_SIGN;
    protected static final java.lang.String DELTA_CRL_INDICATOR;
    protected static final java.lang.String INHIBIT_ANY_POLICY;
    protected static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    protected static final int KEY_CERT_SIGN;
    protected static final java.lang.String KEY_USAGE;
    protected static final java.lang.String NAME_CONSTRAINTS;
    protected static final java.lang.String POLICY_CONSTRAINTS;
    protected static final java.lang.String POLICY_MAPPINGS;
    protected static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    protected static final java.lang.String[] crlReasons;

    static void <clinit>()
    {
        org.bouncycastle.asn1.DERObjectIdentifier $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: int KEY_CERT_SIGN> = 5;

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: int CRL_SIGN> = 6;

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CertificatePolicies>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier BasicConstraints>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String BASIC_CONSTRAINTS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier PolicyMappings>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_MAPPINGS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier SubjectAlternativeName>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier NameConstraints>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String NAME_CONSTRAINTS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier KeyUsage>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String KEY_USAGE> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier InhibitAnyPolicy>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String INHIBIT_ANY_POLICY> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier IssuingDistributionPoint>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier DeltaCRLIndicator>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String DELTA_CRL_INDICATOR> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier PolicyConstraints>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_CONSTRAINTS> = $r1;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CRLNumber>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER> = $r1;

        $r2 = newarray (java.lang.String)[11];

        $r2[0] = "unspecified";

        $r2[1] = "keyCompromise";

        $r2[2] = "cACompromise";

        $r2[3] = "affiliationChanged";

        $r2[4] = "superseded";

        $r2[5] = "cessationOfOperation";

        $r2[6] = "certificateHold";

        $r2[7] = "unknown";

        $r2[8] = "removeFromCRL";

        $r2[9] = "privilegeWithdrawn";

        $r2[10] = "aACompromise";

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String[] crlReasons> = $r2;

        return;
    }

    public void <init>()
    {
        org.bouncycastle.jce.provider.CertPathValidatorUtilities $r0;

        $r0 := @this: org.bouncycastle.jce.provider.CertPathValidatorUtilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void checkExcludedDN(java.util.Set, org.bouncycastle.asn1.ASN1Sequence) throws java.security.cert.CertPathValidatorException
    {
        java.util.Set $r0;
        org.bouncycastle.asn1.ASN1Sequence $r1, $r4;
        boolean $z0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.security.cert.CertPathValidatorException $r5;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: org.bouncycastle.asn1.ASN1Sequence;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.bouncycastle.asn1.ASN1Sequence) $r3;

        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)>($r1, $r4);

        if $z0 == 0 goto label2;

        $r5 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r5.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Subject distinguished name is from an excluded subtree");

        throw $r5;

     label3:
        return;
    }

    protected static void checkExcludedEmail(java.util.Set, java.lang.String) throws java.security.cert.CertPathValidatorException
    {
        java.util.Set $r0;
        java.lang.String $r1, $r4;
        boolean $z0;
        int $i0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.security.cert.CertPathValidatorException $r5;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r5 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r5.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Subject email address is from an excluded subtree");

        throw $r5;

     label3:
        return;
    }

    protected static void checkExcludedIP(java.util.Set, byte[]) throws java.security.cert.CertPathValidatorException
    {
        java.util.Set $r0;
        byte[] $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: byte[];

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        return;
    }

    protected static void checkPermittedDN(java.util.Set, org.bouncycastle.asn1.ASN1Sequence) throws java.security.cert.CertPathValidatorException
    {
        java.util.Set $r0;
        org.bouncycastle.asn1.ASN1Sequence $r1, $r4;
        boolean $z0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.security.cert.CertPathValidatorException $r5;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: org.bouncycastle.asn1.ASN1Sequence;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.bouncycastle.asn1.ASN1Sequence) $r3;

        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)>($r1, $r4);

        if $z0 == 0 goto label2;

        return;

     label3:
        $r5 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r5.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Subject distinguished name is not from a permitted subtree");

        throw $r5;
    }

    protected static void checkPermittedEmail(java.util.Set, java.lang.String) throws java.security.cert.CertPathValidatorException
    {
        java.util.Set $r0;
        java.lang.String $r1, $r4;
        boolean $z0;
        int $i0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.security.cert.CertPathValidatorException $r5;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        return;

     label3:
        $r5 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r5.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Subject email address is not from a permitted subtree");

        throw $r5;
    }

    protected static void checkPermittedIP(java.util.Set, byte[]) throws java.security.cert.CertPathValidatorException
    {
        java.util.Set $r0;
        byte[] $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: byte[];

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        return;
    }

    protected static final java.util.Collection findCRLs(java.security.cert.X509CRLSelector, java.util.List) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRLSelector $r0;
        java.util.List $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.security.cert.CertStore $r5;
        java.util.Collection $r6;
        java.security.cert.CertStoreException $r7;
        org.bouncycastle.jce.provider.AnnotatedException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        $r0 := @parameter0: java.security.cert.X509CRLSelector;

        $r1 := @parameter1: java.util.List;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.security.cert.CertStore) $r4;

     label2:
        $r6 = virtualinvoke $r5.<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)>($r0);

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

     label3:
        goto label1;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot extract crl: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Exception)>($r10, $r7);

        throw $r8;

     label5:
        return $r2;

        catch java.security.cert.CertStoreException from label2 to label3 with label4;
    }

    protected static final java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.security.cert.CertPath, int, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate $r0, $r11;
        java.security.cert.CertPath $r1;
        int $i0;
        java.util.Set $r2;
        javax.security.auth.x500.X500Principal $r3, $r16;
        java.security.cert.X509CertSelector $r4;
        java.util.Iterator $r5;
        java.security.cert.TrustAnchor $r6;
        java.security.PublicKey $r7, $r15;
        java.lang.Exception $r8;
        byte[] $r9;
        boolean $z0;
        java.lang.Object $r10;
        java.io.IOException $r12;
        java.security.cert.CertPathValidatorException $r13;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r17;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 := @parameter1: java.security.cert.CertPath;

        $i0 := @parameter2: int;

        $r2 := @parameter3: java.util.Set;

        $r5 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = null;

        $r7 = null;

        $r8 = null;

        $r4 = new java.security.cert.X509CertSelector;

        specialinvoke $r4.<java.security.cert.X509CertSelector: void <init>()>();

     label01:
        $r3 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.security.cert.X509Certificate)>($r0);

        $r9 = virtualinvoke $r3.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r4.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r9);

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        if $r6 != null goto label15;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.security.cert.TrustAnchor) $r10;

        $r11 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if $r11 == null goto label09;

        $r11 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z0 = virtualinvoke $r4.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>($r11);

        if $z0 == 0 goto label08;

        $r11 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $r7 = virtualinvoke $r11.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

     label03:
        if $r7 == null goto label02;

     label04:
        virtualinvoke $r0.<java.security.cert.Certificate: void verify(java.security.PublicKey)>($r7);

     label05:
        goto label02;

     label06:
        $r8 := @caughtexception;

        $r6 = null;

        goto label02;

     label07:
        $r12 := @caughtexception;

        $r13 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r13.<java.security.cert.CertPathValidatorException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label08:
        $r6 = null;

        goto label03;

     label09:
        $r14 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        if $r14 == null goto label14;

        $r15 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        if $r15 == null goto label14;

     label10:
        $r16 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.security.cert.X509Certificate)>($r0);

        $r3 = new javax.security.auth.x500.X500Principal;

        $r14 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r14);

        $z0 = virtualinvoke $r16.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label12;

        $r7 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label11:
        goto label03;

     label12:
        $r6 = null;

        goto label03;

     label13:
        $r17 := @caughtexception;

        $r6 = null;

        goto label03;

     label14:
        $r6 = null;

        goto label03;

     label15:
        if $r6 != null goto label16;

        if $r8 == null goto label17;

        $r13 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r13.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("TrustAnchor found but certificate validation failed.", $r8, $r1, $i0);

        throw $r13;

     label16:
        return $r6;

     label17:
        return $r6;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.IllegalArgumentException from label10 to label11 with label13;
    }

    protected static org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey) throws java.security.cert.CertPathValidatorException
    {
        java.security.PublicKey $r0;
        org.bouncycastle.asn1.ASN1InputStream $r1;
        byte[] $r2;
        org.bouncycastle.asn1.DERObject $r3;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r4;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r5;
        java.io.IOException $r6;
        java.security.cert.CertPathValidatorException $r7;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 = new org.bouncycastle.asn1.ASN1InputStream;

     label1:
        $r2 = interfaceinvoke $r0.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r2);

        $r3 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r4 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r7.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("exception processing public key");

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected static javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate $r0;
        javax.security.auth.x500.X500Principal $r1;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke $r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r1;
    }

    protected static org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension, java.lang.String) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Extension $r0;
        java.lang.String $r1;
        byte[] $r2;
        org.bouncycastle.asn1.DERObject $r3;

        $r0 := @parameter0: java.security.cert.X509Extension;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<java.security.cert.X509Extension: byte[] getExtensionValue(java.lang.String)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getObject(java.lang.String,byte[])>($r1, $r2);

        return $r3;
    }

    protected static javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL $r0;
        javax.security.auth.x500.X500Principal $r1;

        $r0 := @parameter0: java.security.cert.X509CRL;

        $r1 = virtualinvoke $r0.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r1;
    }

    private static org.bouncycastle.asn1.DERObject getObject(java.lang.String, byte[]) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.lang.String $r0;
        byte[] $r1;
        org.bouncycastle.asn1.ASN1InputStream $r2;
        org.bouncycastle.asn1.DERObject $r3;
        org.bouncycastle.asn1.ASN1OctetString $r4;
        java.io.IOException $r5;
        org.bouncycastle.jce.provider.AnnotatedException $r6;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = new org.bouncycastle.asn1.ASN1InputStream;

     label1:
        specialinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r1);

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

     label2:
        $r4 = (org.bouncycastle.asn1.ASN1OctetString) $r3;

     label3:
        $r2 = new org.bouncycastle.asn1.ASN1InputStream;

        $r1 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r1);

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing extension ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Exception)>($r0, $r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    protected static final java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence) throws java.security.cert.CertPathValidatorException
    {
        org.bouncycastle.asn1.ASN1Sequence $r0;
        org.bouncycastle.asn1.ASN1OutputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        java.util.HashSet $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.security.cert.PolicyQualifierInfo $r6;
        byte[] $r7;
        java.io.IOException $r8;
        java.security.cert.CertPathValidatorException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Sequence;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        if $r0 != null goto label1;

        return $r3;

     label1:
        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r2);

        $r4 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label6;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r5);

        $r6 = new java.security.cert.PolicyQualifierInfo;

        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>($r7);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r6);

     label4:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        goto label2;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.security.cert.CertPathValidatorException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception building qualifier set: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label6:
        return $r3;

        catch java.io.IOException from label3 to label4 with label5;
    }

    protected static javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate $r0;
        javax.security.auth.x500.X500Principal $r1;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke $r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r1;
    }

    protected static java.util.Date getValidDate(java.security.cert.PKIXParameters)
    {
        java.security.cert.PKIXParameters $r0;
        java.util.Date $r1;

        $r0 := @parameter0: java.security.cert.PKIXParameters;

        $r1 = virtualinvoke $r0.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        if $r1 != null goto label1;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        return $r1;

     label1:
        return $r1;
    }

    protected static java.util.Set intersectDN(java.util.Set, org.bouncycastle.asn1.ASN1Sequence)
    {
        java.util.Set $r0;
        org.bouncycastle.asn1.ASN1Sequence $r1, $r5;
        java.util.HashSet $r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: org.bouncycastle.asn1.ASN1Sequence;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return $r0;

     label1:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)>($r1, $r5);

        if $z0 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label2;

     label3:
        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)>($r5, $r1);

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label2;

     label4:
        return $r2;
    }

    protected static java.util.Set intersectEmail(java.util.Set, java.lang.String)
    {
        java.util.Set $r0;
        java.lang.String $r1, $r5;
        java.util.HashSet $r2;
        int $i0;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return $r0;

     label1:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label2;

     label3:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label2;

     label4:
        return $r2;
    }

    protected static java.util.Set intersectIP(java.util.Set, byte[])
    {
        java.util.Set $r0;
        byte[] $r1;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: byte[];

        return $r0;
    }

    protected static boolean isAnyPolicy(java.util.Set)
    {
        java.util.Set $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        if $r0 == null goto label1;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected static boolean isSelfIssued(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate $r0;
        java.security.Principal $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r2 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    protected static void prepareNextCertB1(int, java.util.List[], java.lang.String, java.util.Map, java.security.cert.X509Certificate) throws org.bouncycastle.jce.provider.AnnotatedException, java.security.cert.CertPathValidatorException
    {
        java.util.List[] $r0;
        java.lang.String $r1, $r8, $r10;
        java.util.Map $r2;
        int $i0;
        java.security.cert.X509Certificate $r3;
        boolean $z0, $z1;
        java.util.List $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r7, $r18;
        java.util.Set $r9, $r16;
        org.bouncycastle.asn1.DERObject $r11;
        org.bouncycastle.asn1.ASN1Sequence $r12;
        java.util.Enumeration $r13;
        org.bouncycastle.asn1.x509.PolicyInformation $r14;
        org.bouncycastle.asn1.DERObjectIdentifier $r15;
        java.security.cert.PolicyNode $r17;
        java.util.ArrayList $r19;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.List[];

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.util.Map;

        $r3 := @parameter4: java.security.cert.X509Certificate;

        $z0 = 0;

        $r4 = $r0[$i0];

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r6;

        $r8 = virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $z0 = 1;

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (java.util.Set) $r6;

        $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r9;

     label2:
        if $z0 != 0 goto label8;

        $r4 = $r0[$i0];

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r6;

        $r8 = "2.5.29.32.0";

        $r10 = virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label3;

        $r9 = null;

        $r8 = <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r11 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r3, $r8);

        $r12 = (org.bouncycastle.asn1.ASN1Sequence) $r11;

        $r13 = virtualinvoke $r12.<org.bouncycastle.asn1.ASN1Collection: java.util.Enumeration getObjects()>();

     label4:
        $z0 = interfaceinvoke $r13.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r13.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r14 = staticinvoke <org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r6);

        $r8 = "2.5.29.32.0";

        $r15 = virtualinvoke $r14.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.DERObjectIdentifier getPolicyIdentifier()>();

        $r10 = virtualinvoke $r15.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label4;

        $r12 = virtualinvoke $r14.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        $r9 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)>($r12);

     label5:
        $z0 = 0;

        $r16 = virtualinvoke $r3.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r16 == null goto label6;

        $r16 = virtualinvoke $r3.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r8 = <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $z0 = interfaceinvoke $r16.<java.util.Set: boolean contains(java.lang.Object)>($r8);

     label6:
        $r17 = virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r7 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r8 = "2.5.29.32.0";

        $r10 = virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label7;

        $r18 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r16 = (java.util.Set) $r6;

        specialinvoke $r18.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r19, $i0, $r16, $r7, $r9, $r1, $z0);

        virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r18);

        $r4 = $r0[$i0];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r18);

        return;

     label7:
        return;

     label8:
        return;
    }

    protected static org.bouncycastle.jce.provider.PKIXPolicyNode prepareNextCertB2(int, java.util.List[], java.lang.String, org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        int $i0, $i1, $i2, $i3;
        java.util.List[] $r0;
        java.lang.String $r1, $r7;
        java.util.List $r2;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r3, $r6, $r9;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.security.cert.PolicyNode $r8;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.List[];

        $r1 := @parameter2: java.lang.String;

        $r3 := @parameter3: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r2 = $r0[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r5;

        $r7 = virtualinvoke $r6.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke $r6.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r9 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r8;

        virtualinvoke $r9.<org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r6);

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $i1 = $i0 - 1;

     label2:
        if $i1 < 0 goto label1;

        $r2 = $r0[$i1];

        $i2 = 0;

     label3:
        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 >= $i3 goto label4;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r6 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r5;

        $z0 = virtualinvoke $r6.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z0 != 0 goto label5;

        $r6 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r3, $r0, $r6);

        $r3 = $r6;

        if $r6 != null goto label5;

     label4:
        $i1 = $i1 + -1;

        goto label2;

     label5:
        $i2 = $i2 + 1;

        goto label3;

     label6:
        return $r3;
    }

    protected static boolean processCertD1i(int, java.util.List[], org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        int $i0, $i1, $i2;
        java.util.List[] $r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        java.util.Set $r2, $r8;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r3, $r7;
        java.util.HashSet $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        java.lang.String $r9;
        boolean $z0;
        java.util.ArrayList $r10;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.List[];

        $r1 := @parameter2: org.bouncycastle.asn1.DERObjectIdentifier;

        $r2 := @parameter3: java.util.Set;

        $i1 = $i0 - 1;

        $r5 = $r0[$i1];

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r6;

        $r8 = virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r9 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r9 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r3 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r9 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r3.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r10, $i0, $r4, $r7, $r2, $r9, 0);

        virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r3);

        $r5 = $r0[$i0];

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected static void processCertD1ii(int, java.util.List[], org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        int $i0, $i1, $i2;
        java.util.List[] $r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        java.util.Set $r2;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r3, $r7;
        java.util.HashSet $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        java.lang.String $r8, $r9;
        boolean $z0;
        java.util.ArrayList $r10;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.List[];

        $r1 := @parameter2: org.bouncycastle.asn1.DERObjectIdentifier;

        $r2 := @parameter3: java.util.Set;

        $i1 = $i0 - 1;

        $r5 = $r0[$i1];

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r6;

        virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r8 = "2.5.29.32.0";

        $r9 = virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r8 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

        $r3 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r3.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r10, $i0, $r4, $r7, $r2, $r8, 0);

        virtualinvoke $r7.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r3);

        $r5 = $r0[$i0];

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected static org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.List[], org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        org.bouncycastle.jce.provider.PKIXPolicyNode $r0, $r2, $r4;
        java.util.List[] $r1;
        java.security.cert.PolicyNode $r3;
        int $i0, $i1;
        java.util.ArrayList $r5;

        $r0 := @parameter0: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r1 := @parameter1: java.util.List[];

        $r2 := @parameter2: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r3 = virtualinvoke $r2.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r4 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r3;

        if $r0 != null goto label1;

        return null;

     label1:
        if $r4 != null goto label4;

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r1[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return null;

     label4:
        virtualinvoke $r4.<org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r2);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r1, $r2);

        return $r0;
    }

    private static void removePolicyNodeRecurse(java.util.List[], org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        java.util.List[] $r0;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r1;
        int $i0;
        java.util.List $r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.List[];

        $r1 := @parameter1: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $i0 = virtualinvoke $r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: int getDepth()>();

        $r2 = $r0[$i0];

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        $z0 = virtualinvoke $r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r4;

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>($r0, $r1);

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    protected static java.util.Set unionDN(java.util.Set, org.bouncycastle.asn1.ASN1Sequence)
    {
        java.util.Set $r0;
        org.bouncycastle.asn1.ASN1Sequence $r1, $r5;
        java.util.HashSet $r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: org.bouncycastle.asn1.ASN1Sequence;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return $r0;

     label1:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)>($r1, $r5);

        if $z0 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $z0 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)>($r5, $r1);

        if $z0 == 0 goto label4;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label2;

     label4:
        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label2;

     label5:
        return $r2;
    }

    protected static java.util.Set unionEmail(java.util.Set, java.lang.String)
    {
        java.util.Set $r0;
        java.lang.String $r1, $r5;
        java.util.HashSet $r2;
        int $i0;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return $r0;

     label1:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label2;

     label4:
        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label2;

     label5:
        return $r2;
    }

    protected static java.util.Set unionIP(java.util.Set, byte[])
    {
        java.util.Set $r0;
        byte[] $r1;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: byte[];

        return $r0;
    }

    private static boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.ASN1Sequence)
    {
        org.bouncycastle.asn1.ASN1Sequence $r0, $r1;
        int $i0, $i1;
        org.bouncycastle.asn1.DEREncodable $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: org.bouncycastle.asn1.ASN1Sequence;

        $r1 := @parameter1: org.bouncycastle.asn1.ASN1Sequence;

        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        $i1 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        if $i0 <= $i1 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Collection: int size()>();

        $i0 = $i0 - 1;

     label3:
        if $i0 < 0 goto label5;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i0);

        $r3 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1Collection: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>($i0);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $i0 = $i0 + -1;

        goto label3;

     label5:
        return 1;
    }
}
