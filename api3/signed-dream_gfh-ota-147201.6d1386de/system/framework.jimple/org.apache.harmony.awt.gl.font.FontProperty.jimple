public class org.apache.harmony.awt.gl.font.FontProperty extends java.lang.Object
{
    java.lang.String encoding;
    int[] exclRange;
    java.lang.String fileName;
    java.lang.String name;
    int style;

    public void <init>()
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String fileName> = null;

        $r0.<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String encoding> = null;

        $r0.<org.apache.harmony.awt.gl.font.FontProperty: int[] exclRange> = null;

        $r0.<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String name> = null;

        $r0.<org.apache.harmony.awt.gl.font.FontProperty: int style> = -1;

        return;
    }

    public java.lang.String getEncoding()
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String encoding>;

        return r1;
    }

    public int[] getExclusionRange()
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;
        int[] r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: int[] exclRange>;

        return r1;
    }

    public java.lang.String getFileName()
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String fileName>;

        return r1;
    }

    public java.lang.String getName()
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String name>;

        return r1;
    }

    public int getStyle()
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        i0 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: int style>;

        return i0;
    }

    public boolean isCharExcluded(char)
    {
        org.apache.harmony.awt.gl.font.FontProperty $r0;
        char $c0;
        int $i1, $i2, $i3;
        int[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontProperty;

        $c0 := @parameter0: char;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: int[] exclRange>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i3 = 0;

     label2:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: int[] exclRange>;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label3;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: int[] exclRange>;

        $i1 = $i3 + 1;

        $i2 = $r1[$i3];

        $r1 = $r0.<org.apache.harmony.awt.gl.font.FontProperty: int[] exclRange>;

        $i3 = $i1 + 1;

        $i1 = $r1[$i1];

        if $c0 < $i2 goto label2;

        if $c0 > $i1 goto label2;

        return 1;

     label3:
        return 0;
    }
}
