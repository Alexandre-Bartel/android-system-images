public final class android.view.VelocityTracker extends java.lang.Object
{
    static final boolean DEBUG;
    static final int LONGEST_PAST_TIME;
    static final int NUM_PAST;
    static final java.lang.String TAG;
    static final boolean localLOGV;
    static final android.view.VelocityTracker[] mPool;
    final long[] mPastTime;
    final float[] mPastX;
    final float[] mPastY;
    float mXVelocity;
    float mYVelocity;

    static void <clinit>()
    {
        android.view.VelocityTracker[] $r0;

        <android.view.VelocityTracker: java.lang.String TAG> = "VelocityTracker";

        <android.view.VelocityTracker: int NUM_PAST> = 10;

        <android.view.VelocityTracker: int LONGEST_PAST_TIME> = 200;

        <android.view.VelocityTracker: boolean DEBUG> = 0;

        $r0 = newarray (android.view.VelocityTracker)[1];

        <android.view.VelocityTracker: android.view.VelocityTracker[] mPool> = $r0;

        return;
    }

    private void <init>()
    {
        android.view.VelocityTracker $r0;
        float[] $r1;
        long[] $r2;

        $r0 := @this: android.view.VelocityTracker;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[10];

        $r0.<android.view.VelocityTracker: float[] mPastX> = $r1;

        $r1 = newarray (float)[10];

        $r0.<android.view.VelocityTracker: float[] mPastY> = $r1;

        $r2 = newarray (long)[10];

        $r0.<android.view.VelocityTracker: long[] mPastTime> = $r2;

        return;
    }

    private void addPoint(float, float, long)
    {
        android.view.VelocityTracker $r0;
        float $f0, $f1;
        long $l0, $l5, $l7;
        int $i1, $i2, $i3, $i4;
        long[] $r1;
        float[] $r2, $r3;
        byte $b6;

        $r0 := @this: android.view.VelocityTracker;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $l0 := @parameter2: long;

        $i3 = -1;

        $r1 = $r0.<android.view.VelocityTracker: long[] mPastTime>;

        $i4 = 0;

     label1:
        if $i4 >= 10 goto label2;

        $l5 = $r1[$i4];

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label6;

     label2:
        if $i4 != 10 goto label3;

        if $i3 >= 0 goto label3;

        $i3 = 0;

     label3:
        if $i3 != $i4 goto label4;

        $i3 = $i3 + -1;

     label4:
        $r2 = $r0.<android.view.VelocityTracker: float[] mPastX>;

        $r3 = $r0.<android.view.VelocityTracker: float[] mPastY>;

        if $i3 < 0 goto label5;

        $i2 = $i3 + 1;

        $i1 = 10 - $i3;

        $i1 = $i1 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r2, 0, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i2, $r3, 0, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r1, 0, $i1);

        $i2 = $i3 + 1;

        $i4 = $i4 - $i2;

     label5:
        $r2[$i4] = $f0;

        $r3[$i4] = $f1;

        $r1[$i4] = $l0;

        $i4 = $i4 + 1;

        if $i4 >= 10 goto label8;

        $r1[$i4] = 0L;

        return;

     label6:
        $l5 = $r1[$i4];

        $l7 = $l0 - 200L;

        $b6 = $l5 cmp $l7;

        if $b6 >= 0 goto label7;

        $i3 = $i4;

     label7:
        $i4 = $i4 + 1;

        goto label1;

     label8:
        return;
    }

    public static android.view.VelocityTracker obtain()
    {
        android.view.VelocityTracker $r0;
        android.view.VelocityTracker[] $r1, $r2;
        java.lang.Throwable $r3;

        $r1 = <android.view.VelocityTracker: android.view.VelocityTracker[] mPool>;

        entermonitor $r1;

     label1:
        $r2 = <android.view.VelocityTracker: android.view.VelocityTracker[] mPool>;

        $r0 = $r2[0];

        if $r0 == null goto label3;

        virtualinvoke $r0.<android.view.VelocityTracker: void clear()>();

        $r2 = <android.view.VelocityTracker: android.view.VelocityTracker[] mPool>;

        $r2[0] = null;

        exitmonitor $r1;

     label2:
        return $r0;

     label3:
        $r0 = new android.view.VelocityTracker;

        specialinvoke $r0.<android.view.VelocityTracker: void <init>()>();

        exitmonitor $r1;

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void addMovement(android.view.MotionEvent)
    {
        android.view.VelocityTracker $r0;
        android.view.MotionEvent $r1;
        long $l0, $l3;
        int $i1, $i2;
        float $f0, $f1;

        $r0 := @this: android.view.VelocityTracker;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 = virtualinvoke $r1.<android.view.MotionEvent: long getEventTime()>();

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getHistorySize()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getHistoricalX(int)>($i2);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getHistoricalY(int)>($i2);

        $l3 = virtualinvoke $r1.<android.view.MotionEvent: long getHistoricalEventTime(int)>($i2);

        specialinvoke $r0.<android.view.VelocityTracker: void addPoint(float,float,long)>($f0, $f1, $l3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        specialinvoke $r0.<android.view.VelocityTracker: void addPoint(float,float,long)>($f0, $f1, $l0);

        return;
    }

    public void clear()
    {
        android.view.VelocityTracker $r0;
        long[] $r1;

        $r0 := @this: android.view.VelocityTracker;

        $r1 = $r0.<android.view.VelocityTracker: long[] mPastTime>;

        $r1[0] = 0L;

        return;
    }

    public void computeCurrentVelocity(int)
    {
        android.view.VelocityTracker $r0;
        int $i0, $i2, $i5, $i6;
        long $l1, $l3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        float[] $r1, $r2;
        long[] $r3;
        byte $b4;

        $r0 := @this: android.view.VelocityTracker;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.view.VelocityTracker: float[] mPastX>;

        $r2 = $r0.<android.view.VelocityTracker: float[] mPastY>;

        $r3 = $r0.<android.view.VelocityTracker: long[] mPastTime>;

        $f0 = $r1[0];

        $f1 = $r2[0];

        $l1 = $r3[0];

        $f2 = 0.0F;

        $f3 = 0.0F;

        $i2 = 0;

     label01:
        if $i2 >= 10 goto label02;

        $l3 = $r3[$i2];

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label06;

     label02:
        if $i2 <= 3 goto label03;

        $i2 = $i2 + -1;

     label03:
        $i5 = 1;

     label04:
        if $i5 >= $i2 goto label11;

        $l3 = $r3[$i5];

        $l3 = $l3 - $l1;

        $i6 = (int) $l3;

        if $i6 != 0 goto label07;

     label05:
        $i5 = $i5 + 1;

        goto label04;

     label06:
        $i2 = $i2 + 1;

        goto label01;

     label07:
        $f4 = $r1[$i5];

        $f4 = $f4 - $f0;

        $f5 = (float) $i6;

        $f4 = $f4 / $f5;

        $f5 = (float) $i0;

        $f4 = $f4 * $f5;

        $b4 = $f2 cmpl 0.0F;

        if $b4 != 0 goto label09;

        $f2 = $f4;

     label08:
        $f4 = $r2[$i5];

        $f4 = $f4 - $f1;

        $f5 = (float) $i6;

        $f4 = $f4 / $f5;

        $f5 = (float) $i0;

        $f4 = $f4 * $f5;

        $b4 = $f3 cmpl 0.0F;

        if $b4 != 0 goto label10;

        $f3 = $f4;

        goto label05;

     label09:
        $f2 = $f2 + $f4;

        $f2 = $f2 * 0.5F;

        goto label08;

     label10:
        $f3 = $f3 + $f4;

        $f3 = $f3 * 0.5F;

        goto label05;

     label11:
        $r0.<android.view.VelocityTracker: float mXVelocity> = $f2;

        $r0.<android.view.VelocityTracker: float mYVelocity> = $f3;

        return;
    }

    public float getXVelocity()
    {
        android.view.VelocityTracker $r0;
        float f0;

        $r0 := @this: android.view.VelocityTracker;

        f0 = $r0.<android.view.VelocityTracker: float mXVelocity>;

        return f0;
    }

    public float getYVelocity()
    {
        android.view.VelocityTracker $r0;
        float f0;

        $r0 := @this: android.view.VelocityTracker;

        f0 = $r0.<android.view.VelocityTracker: float mYVelocity>;

        return f0;
    }

    public void recycle()
    {
        android.view.VelocityTracker $r0;
        android.view.VelocityTracker[] $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.view.VelocityTracker;

        $r1 = <android.view.VelocityTracker: android.view.VelocityTracker[] mPool>;

        entermonitor $r1;

     label1:
        $r2 = <android.view.VelocityTracker: android.view.VelocityTracker[] mPool>;

        $r2[0] = $r0;

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
