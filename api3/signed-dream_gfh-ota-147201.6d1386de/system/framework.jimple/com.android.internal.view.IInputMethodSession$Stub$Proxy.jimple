class com.android.internal.view.IInputMethodSession$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputMethodSession
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public void appPrivateCommand(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.Parcel $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        if $r2 == null goto label4;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        $r4 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r3, null, 1);

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        r1 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void dispatchKeyEvent(int, android.view.KeyEvent, com.android.internal.view.IInputMethodCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        int $i0;
        android.view.KeyEvent $r1;
        com.android.internal.view.IInputMethodCallback $r2;
        android.os.Parcel $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 := @parameter2: com.android.internal.view.IInputMethodCallback;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        if $r1 == null goto label5;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        if $r2 == null goto label8;

        $r4 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodCallback: android.os.IBinder asBinder()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r3, null, 1);

     label4:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        goto label2;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

     label8:
        $r4 = null;

        goto label3;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void dispatchTrackballEvent(int, android.view.MotionEvent, com.android.internal.view.IInputMethodCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        int $i0;
        android.view.MotionEvent $r1;
        com.android.internal.view.IInputMethodCallback $r2;
        android.os.Parcel $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.MotionEvent;

        $r2 := @parameter2: com.android.internal.view.IInputMethodCallback;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

        if $r1 == null goto label5;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        if $r2 == null goto label8;

        $r4 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodCallback: android.os.IBinder asBinder()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r3, null, 1);

     label4:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        goto label2;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r5;

     label8:
        $r4 = null;

        goto label3;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void displayCompletions(android.view.inputmethod.CompletionInfo[]) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        android.view.inputmethod.CompletionInfo[] $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $r1 := @parameter0: android.view.inputmethod.CompletionInfo[];

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>($r1, 0);

        $r3 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r2, null, 1);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void finishInput() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        $r2 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        return "com.android.internal.view.IInputMethodSession";
    }

    public void toggleSoftInput(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void updateCursor(android.graphics.Rect) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        android.graphics.Rect $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r3 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r2, null, 1);

     label3:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void updateExtractedText(int, android.view.inputmethod.ExtractedText) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        int $i0;
        android.view.inputmethod.ExtractedText $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.inputmethod.ExtractedText;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r3 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, null, 1);

     label3:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void updateSelection(int, int, int, int, int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodSession$Stub$Proxy $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.internal.view.IInputMethodSession$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodSession");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i4);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r2 = $r0.<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
