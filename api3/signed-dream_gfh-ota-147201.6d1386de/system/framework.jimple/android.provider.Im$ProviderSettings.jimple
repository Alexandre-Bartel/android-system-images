public class android.provider.Im$ProviderSettings extends java.lang.Object implements android.provider.Im$ProviderSettingsColumns
{
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String LAST_RMQ_RECEIVED;
    public static final java.lang.String SETTING_AUTOMATICALLY_CONNECT_GTALK;
    public static final java.lang.String SETTING_AUTOMATICALLY_START_SERVICE;
    public static final java.lang.String SETTING_ENABLE_NOTIFICATION;
    public static final java.lang.String SETTING_HIDE_OFFLINE_CONTACTS;
    public static final java.lang.String SETTING_RINGTONE;
    public static final java.lang.String SETTING_RINGTONE_DEFAULT;
    public static final java.lang.String SETTING_SHOW_MOBILE_INDICATOR;
    public static final java.lang.String SETTING_VIBRATE;
    public static final java.lang.String SHOW_OFFLINE_CONTACTS;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <android.provider.Im$ProviderSettings: java.lang.String SHOW_OFFLINE_CONTACTS> = "show_offline_contacts";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_VIBRATE> = "vibrate";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_SHOW_MOBILE_INDICATOR> = "mobile_indicator";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_RINGTONE_DEFAULT> = "content://settings/system/notification_sound";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_RINGTONE> = "ringtone";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_HIDE_OFFLINE_CONTACTS> = "hide_offline_contacts";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_ENABLE_NOTIFICATION> = "enable_notification";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_AUTOMATICALLY_START_SERVICE> = "auto_start_service";

        <android.provider.Im$ProviderSettings: java.lang.String SETTING_AUTOMATICALLY_CONNECT_GTALK> = "gtalk_auto_connect";

        <android.provider.Im$ProviderSettings: java.lang.String LAST_RMQ_RECEIVED> = "last_rmq_rec";

        <android.provider.Im$ProviderSettings: java.lang.String CONTENT_TYPE> = "vnd.android-dir/im-providerSettings";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://im/providerSettings");

        <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI> = $r0;

        return;
    }

    private void <init>()
    {
        android.provider.Im$ProviderSettings $r0;

        $r0 := @this: android.provider.Im$ProviderSettings;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean getBooleanValue(android.content.ContentResolver, long, java.lang.String)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String $r1;
        boolean $z0;
        android.database.Cursor $r2;
        int $i1;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <android.provider.Im$ProviderSettings: android.database.Cursor getSettingValue(android.content.ContentResolver,long,java.lang.String)>($r0, $l0, $r1);

        if $r2 == null goto label3;

        $i1 = interfaceinvoke $r2.<android.database.Cursor: int getInt(int)>(0);

        if $i1 == 0 goto label2;

        $z0 = 1;

     label1:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return $z0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return 0;
    }

    private static android.database.Cursor getSettingValue(android.content.ContentResolver, long, java.lang.String)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String $r1;
        java.lang.String[] $r2, $r4;
        android.net.Uri $r3;
        android.database.Cursor $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $r3 = <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI>;

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r3, $l0);

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "value";

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        $r5 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, $r2, "name=?", $r4, null);

        if $r5 == null goto label1;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label1;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return null;

     label1:
        return $r5;
    }

    public static java.lang.String getStringValue(android.content.ContentResolver, long, java.lang.String)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String $r1;
        android.database.Cursor $r2;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <android.provider.Im$ProviderSettings: android.database.Cursor getSettingValue(android.content.ContentResolver,long,java.lang.String)>($r0, $l0, $r1);

        if $r2 == null goto label1;

        $r1 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return $r1;

     label1:
        return null;
    }

    public static void putBooleanValue(android.content.ContentResolver, long, java.lang.String, boolean)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String $r1;
        boolean $z0;
        android.content.ContentValues $r2;
        java.lang.Long $r3;
        android.net.Uri $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(3);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("provider", $r3);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r1);

        $r1 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", $r1);

        $r4 = <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI>;

        virtualinvoke $r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r4, $r2);

        return;
    }

    public static void putLongValue(android.content.ContentResolver, long, java.lang.String, long)
    {
        android.content.ContentResolver $r0;
        long $l0, $l1;
        java.lang.String $r1;
        android.content.ContentValues $r2;
        java.lang.Long $r3;
        android.net.Uri $r4;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $l1 := @parameter3: long;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(3);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("provider", $r3);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r1);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("value", $r3);

        $r4 = <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI>;

        virtualinvoke $r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r4, $r2);

        return;
    }

    public static void putStringValue(android.content.ContentResolver, long, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String $r1, $r2;
        android.content.ContentValues $r3;
        java.lang.Long $r4;
        android.net.Uri $r5;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>(int)>(3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("provider", $r4);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", $r2);

        $r5 = <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI>;

        virtualinvoke $r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, $r3);

        return;
    }

    public static java.util.HashMap queryProviderSettings(android.content.ContentResolver, long)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String[] $r1;
        java.util.HashMap $r2;
        android.net.Uri $r3;
        android.database.Cursor $r4;
        boolean $z0;
        java.lang.String $r5, $r6;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "name";

        $r1[1] = "value";

        $r3 = <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI>;

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r3, $l0);

        $r4 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, $r1, null, null, null);

        if $r4 != null goto label1;

        return null;

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r6 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label1;

     label2:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r2;
    }

    public static void setAutomaticallyConnectGTalk(android.content.ContentResolver, long, boolean)
    {
        android.content.ContentResolver $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <android.provider.Im$ProviderSettings: void putBooleanValue(android.content.ContentResolver,long,java.lang.String,boolean)>($r0, $l0, "gtalk_auto_connect", $z0);

        return;
    }

    public static void setEnableNotification(android.content.ContentResolver, long, boolean)
    {
        android.content.ContentResolver $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <android.provider.Im$ProviderSettings: void putBooleanValue(android.content.ContentResolver,long,java.lang.String,boolean)>($r0, $l0, "enable_notification", $z0);

        return;
    }

    public static void setHideOfflineContacts(android.content.ContentResolver, long, boolean)
    {
        android.content.ContentResolver $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <android.provider.Im$ProviderSettings: void putBooleanValue(android.content.ContentResolver,long,java.lang.String,boolean)>($r0, $l0, "hide_offline_contacts", $z0);

        return;
    }

    public static void setRingtoneURI(android.content.ContentResolver, long, java.lang.String)
    {
        android.content.ContentResolver $r0;
        long $l0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        staticinvoke <android.provider.Im$ProviderSettings: void putStringValue(android.content.ContentResolver,long,java.lang.String,java.lang.String)>($r0, $l0, "ringtone", $r1);

        return;
    }

    public static void setShowMobileIndicator(android.content.ContentResolver, long, boolean)
    {
        android.content.ContentResolver $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <android.provider.Im$ProviderSettings: void putBooleanValue(android.content.ContentResolver,long,java.lang.String,boolean)>($r0, $l0, "mobile_indicator", $z0);

        return;
    }

    public static void setVibrate(android.content.ContentResolver, long, boolean)
    {
        android.content.ContentResolver $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <android.provider.Im$ProviderSettings: void putBooleanValue(android.content.ContentResolver,long,java.lang.String,boolean)>($r0, $l0, "vibrate", $z0);

        return;
    }
}
