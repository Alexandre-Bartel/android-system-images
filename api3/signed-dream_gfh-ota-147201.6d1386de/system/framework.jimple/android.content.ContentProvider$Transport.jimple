class android.content.ContentProvider$Transport extends android.content.ContentProviderNative
{
    final android.content.ContentProvider this$0;

    void <init>(android.content.ContentProvider)
    {
        android.content.ContentProvider$Transport $r0;
        android.content.ContentProvider $r1;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.content.ContentProvider;

        $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0> = $r1;

        specialinvoke $r0.<android.content.ContentProviderNative: void <init>()>();

        return;
    }

    private void checkReadPermission(android.net.Uri)
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        android.content.ContentProvider $r2;
        java.lang.String $r3, $r7;
        int $i0, $i1;
        android.content.Context $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.SecurityException $r8;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r3 = virtualinvoke $r2.<android.content.ContentProvider: java.lang.String getReadPermission()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r4 = virtualinvoke $r2.<android.content.ContentProvider: android.content.Context getContext()>();

        $i0 = virtualinvoke $r4.<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>($r1, $r3, null, $i0, $i1, 1);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: reading ");

        $r2 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r8;
    }

    private void checkWritePermission(android.net.Uri)
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        android.content.ContentProvider $r2;
        java.lang.String $r3, $r7;
        int $i0, $i1;
        android.content.Context $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.SecurityException $r8;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r3 = virtualinvoke $r2.<android.content.ContentProvider: java.lang.String getWritePermission()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r4 = virtualinvoke $r2.<android.content.ContentProvider: android.content.Context getContext()>();

        $i0 = virtualinvoke $r4.<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>($r1, null, $r3, $i0, $i1, 2);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: writing ");

        $r2 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r8;
    }

    public int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        android.content.ContentValues[] $r2;
        int $i0;
        android.content.ContentProvider $r3;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues[];

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>($r1);

        $r3 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $i0 = virtualinvoke $r3.<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>($r1, $r2);

        return $i0;
    }

    public android.database.IBulkCursor bulkQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.database.IContentObserver, android.database.CursorWindow)
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        android.database.IContentObserver $r6;
        android.database.CursorWindow $r7;
        android.content.ContentProvider $r8;
        android.database.Cursor $r9;
        android.database.CursorToBulkCursorAdaptor $r10;
        java.lang.Class $r11;
        android.content.Context $r12;
        int $i0;
        boolean $z0;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: android.database.IContentObserver;

        $r7 := @parameter6: android.database.CursorWindow;

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkReadPermission(android.net.Uri)>($r1);

        $r8 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r9 = virtualinvoke $r8.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        if $r9 != null goto label1;

        return null;

     label1:
        $r8 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r5 = virtualinvoke $r8.<android.content.ContentProvider: java.lang.String getWritePermission()>();

        $r10 = new android.database.CursorToBulkCursorAdaptor;

        $r8 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r11 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        if $r5 == null goto label2;

        $r8 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r12 = virtualinvoke $r8.<android.content.ContentProvider: android.content.Context getContext()>();

        $r8 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r5 = virtualinvoke $r8.<android.content.ContentProvider: java.lang.String getWritePermission()>();

        $i0 = virtualinvoke $r12.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r5);

        if $i0 != 0 goto label4;

     label2:
        $z0 = 1;

     label3:
        specialinvoke $r10.<android.database.CursorToBulkCursorAdaptor: void <init>(android.database.Cursor,android.database.IContentObserver,java.lang.String,boolean,android.database.CursorWindow)>($r9, $r6, $r3, $z0, $r7);

        return $r10;

     label4:
        $z0 = 0;

        goto label3;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        int $i0;
        android.content.ContentProvider $r4;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>($r1);

        $r4 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $i0 = virtualinvoke $r4.<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r1, $r2, $r3);

        return $i0;
    }

    android.content.ContentProvider getContentProvider()
    {
        android.content.ContentProvider$Transport $r0;
        android.content.ContentProvider r1;

        $r0 := @this: android.content.ContentProvider$Transport;

        r1 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        return r1;
    }

    public android.content.ISyncAdapter getSyncAdapter()
    {
        android.content.ContentProvider$Transport $r0;
        android.content.ContentProvider $r1;
        android.content.SyncAdapter $r2;
        android.content.ISyncAdapter $r3;

        $r0 := @this: android.content.ContentProvider$Transport;

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>(null);

        $r1 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r2 = virtualinvoke $r1.<android.content.ContentProvider: android.content.SyncAdapter getSyncAdapter()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<android.content.SyncAdapter: android.content.ISyncAdapter getISyncAdapter()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        android.content.ContentProvider $r3;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r3 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r2 = virtualinvoke $r3.<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>($r1);

        return $r2;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        android.content.ContentProvider $r3;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>($r1);

        $r3 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r1 = virtualinvoke $r3.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r1, $r2);

        return $r1;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        boolean $z0;
        android.content.ContentProvider $r3;
        android.content.res.AssetFileDescriptor $r4;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("rw");

        if $z0 == 0 goto label2;

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>($r1);

     label1:
        $r3 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r4 = virtualinvoke $r3.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>($r1, $r2);

        return $r4;

     label2:
        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkReadPermission(android.net.Uri)>($r1);

        goto label1;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        boolean $z0;
        android.content.ContentProvider $r3;
        android.os.ParcelFileDescriptor $r4;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("rw");

        if $z0 == 0 goto label2;

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>($r1);

     label1:
        $r3 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r4 = virtualinvoke $r3.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>($r1, $r2);

        return $r4;

     label2:
        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkReadPermission(android.net.Uri)>($r1);

        goto label1;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        android.database.Cursor $r6;
        android.content.ContentProvider $r7;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkReadPermission(android.net.Uri)>($r1);

        $r7 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r6 = virtualinvoke $r7.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        return $r6;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.content.ContentProvider$Transport $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        int $i0;
        android.content.ContentProvider $r5;

        $r0 := @this: android.content.ContentProvider$Transport;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        specialinvoke $r0.<android.content.ContentProvider$Transport: void checkWritePermission(android.net.Uri)>($r1);

        $r5 = $r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $i0 = virtualinvoke $r5.<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r1, $r2, $r3, $r4);

        return $i0;
    }
}
