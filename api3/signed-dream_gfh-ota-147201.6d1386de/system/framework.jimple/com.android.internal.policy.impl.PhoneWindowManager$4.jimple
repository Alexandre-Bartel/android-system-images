class com.android.internal.policy.impl.PhoneWindowManager$4 extends android.content.BroadcastReceiver
{
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    void <init>(com.android.internal.policy.impl.PhoneWindowManager)
    {
        com.android.internal.policy.impl.PhoneWindowManager$4 $r0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$4;

        $r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        $r0.<com.android.internal.policy.impl.PhoneWindowManager$4: com.android.internal.policy.impl.PhoneWindowManager this$0> = $r1;

        specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.internal.policy.impl.PhoneWindowManager$4 $r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        com.android.internal.policy.impl.PhoneWindowManager $r3;
        android.os.PowerManager$WakeLock $r4;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$4;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$4: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r4 = $r3.<com.android.internal.policy.impl.PhoneWindowManager: android.os.PowerManager$WakeLock mBroadcastWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        return;
    }
}
