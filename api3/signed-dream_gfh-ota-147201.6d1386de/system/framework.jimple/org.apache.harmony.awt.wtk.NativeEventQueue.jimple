public abstract class org.apache.harmony.awt.wtk.NativeEventQueue extends java.lang.Object
{
    private final java.lang.Object eventMonitor;
    private final java.util.LinkedList eventQueue;
    private org.apache.harmony.awt.wtk.ShutdownWatchdog shutdownWatchdog;

    public void <init>()
    {
        org.apache.harmony.awt.wtk.NativeEventQueue $r0;
        org.apache.harmony.awt.wtk.NativeEventQueue$EventMonitor $r1;
        java.util.LinkedList $r2;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeEventQueue;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.harmony.awt.wtk.NativeEventQueue$EventMonitor;

        specialinvoke $r1.<org.apache.harmony.awt.wtk.NativeEventQueue$EventMonitor: void <init>(org.apache.harmony.awt.wtk.NativeEventQueue,org.apache.harmony.awt.wtk.NativeEventQueue$1)>($r0, null);

        $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.lang.Object eventMonitor> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue> = $r2;

        return;
    }

    protected void addEvent(org.apache.harmony.awt.wtk.NativeEvent)
    {
        org.apache.harmony.awt.wtk.NativeEventQueue $r0;
        org.apache.harmony.awt.wtk.NativeEvent $r1;
        java.util.LinkedList $r2, $r3;
        org.apache.harmony.awt.wtk.ShutdownWatchdog $r4;
        java.lang.Object $r5, $r6;
        java.lang.Throwable $r7, $r8;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeEventQueue;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.NativeEvent;

        $r2 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r1);

        $r4 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: org.apache.harmony.awt.wtk.ShutdownWatchdog shutdownWatchdog>;

        virtualinvoke $r4.<org.apache.harmony.awt.wtk.ShutdownWatchdog: void setNativeQueueEmpty(boolean)>(0);

        exitmonitor $r2;

     label02:
        $r5 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.lang.Object eventMonitor>;

        entermonitor $r5;

     label03:
        $r6 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.lang.Object eventMonitor>;

        virtualinvoke $r6.<java.lang.Object: void notify()>();

        exitmonitor $r5;

     label04:
        return;

     label05:
        $r7 := @caughtexception;

     label06:
        exitmonitor $r2;

     label07:
        throw $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor $r5;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public abstract void awake();

    public abstract void dispatchEvent();

    public final java.lang.Object getEventMonitor()
    {
        org.apache.harmony.awt.wtk.NativeEventQueue $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeEventQueue;

        r1 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.lang.Object eventMonitor>;

        return r1;
    }

    public abstract long getJavaWindow();

    public org.apache.harmony.awt.wtk.NativeEvent getNextEvent()
    {
        org.apache.harmony.awt.wtk.NativeEventQueue $r0;
        java.util.LinkedList $r1, $r2;
        boolean $z0;
        org.apache.harmony.awt.wtk.ShutdownWatchdog $r3;
        java.lang.Object $r4;
        org.apache.harmony.awt.wtk.NativeEvent $r5;
        java.lang.Throwable $r6;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeEventQueue;

        $r1 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        $z0 = virtualinvoke $r2.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r3 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: org.apache.harmony.awt.wtk.ShutdownWatchdog shutdownWatchdog>;

        virtualinvoke $r3.<org.apache.harmony.awt.wtk.ShutdownWatchdog: void setNativeQueueEmpty(boolean)>(1);

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r2 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        $r4 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object remove(int)>(0);

        $r5 = (org.apache.harmony.awt.wtk.NativeEvent) $r4;

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isEmpty()
    {
        org.apache.harmony.awt.wtk.NativeEventQueue $r0;
        java.util.LinkedList $r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeEventQueue;

        $r1 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        $z0 = virtualinvoke $r2.<java.util.AbstractCollection: boolean isEmpty()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public abstract void performLater(org.apache.harmony.awt.wtk.NativeEventQueue$Task);

    public abstract void performTask(org.apache.harmony.awt.wtk.NativeEventQueue$Task);

    public final void setShutdownWatchdog(org.apache.harmony.awt.wtk.ShutdownWatchdog)
    {
        org.apache.harmony.awt.wtk.NativeEventQueue $r0;
        org.apache.harmony.awt.wtk.ShutdownWatchdog $r1;
        java.util.LinkedList $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeEventQueue;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.ShutdownWatchdog;

        $r2 = $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.util.LinkedList eventQueue>;

        entermonitor $r2;

     label1:
        $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: org.apache.harmony.awt.wtk.ShutdownWatchdog shutdownWatchdog> = $r1;

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public abstract boolean waitEvent();
}
