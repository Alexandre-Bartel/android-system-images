public class android.graphics.BitmapFactory extends java.lang.Object
{

    public void <init>()
    {
        android.graphics.BitmapFactory $r0;

        $r0 := @this: android.graphics.BitmapFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap decodeByteArray(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, $i0, $i1, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeByteArray(byte[], int, int, android.graphics.BitmapFactory$Options)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.BitmapFactory$Options $r1;
        android.graphics.Bitmap $r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.graphics.BitmapFactory$Options;

        $i2 = $i0 | $i1;

        if $i2 < 0 goto label1;

        $i3 = lengthof $r0;

        $i2 = $i0 + $i1;

        if $i3 >= $i2 goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label2:
        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, $i0, $i1, $r1);

        return $r2;
    }

    public static android.graphics.Bitmap decodeFile(java.lang.String)
    {
        java.lang.String $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeFile(java.lang.String, android.graphics.BitmapFactory$Options)
    {
        java.lang.String $r0;
        android.graphics.BitmapFactory$Options $r1;
        java.io.FileInputStream $r2, $r5;
        java.io.IOException $r3, $r6, $r8;
        android.graphics.Bitmap $r4;
        java.lang.Exception $r7, $r10;
        java.lang.Throwable $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.graphics.BitmapFactory$Options;

        $r5 = null;

     label01:
        $r2 = new java.io.FileInputStream;

     label02:
        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label03:
        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r2, null, $r1);

     label04:
        if $r2 == null goto label20;

     label05:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label06:
        return $r4;

     label07:
        $r6 := @caughtexception;

        return $r4;

     label08:
        $r7 := @caughtexception;

     label09:
        if $r5 == null goto label21;

     label10:
        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

     label11:
        return null;

     label12:
        $r8 := @caughtexception;

        return null;

     label13:
        $r9 := @caughtexception;

     label14:
        if $r5 == null goto label16;

     label15:
        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

     label16:
        throw $r9;

     label17:
        $r3 := @caughtexception;

        goto label16;

     label18:
        $r9 := @caughtexception;

        $r5 = $r2;

        goto label14;

     label19:
        $r10 := @caughtexception;

        $r5 = $r2;

        goto label09;

     label20:
        return $r4;

     label21:
        return null;

        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label15 to label16 with label17;
    }

    public static android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)
    {
        java.io.FileDescriptor $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.io.FileDescriptor;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r0, null, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        java.io.FileDescriptor $r0;
        android.graphics.Rect $r1;
        android.graphics.BitmapFactory$Options $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: java.io.FileDescriptor;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 := @parameter2: android.graphics.BitmapFactory$Options;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r0, $r1, $r2);

        return $r3;
    }

    public static android.graphics.Bitmap decodeResource(android.content.res.Resources, int)
    {
        android.content.res.Resources $r0;
        int $i0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>($r0, $i0, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeResource(android.content.res.Resources, int, android.graphics.BitmapFactory$Options)
    {
        android.content.res.Resources $r0;
        int $i0;
        android.graphics.BitmapFactory$Options $r1;
        android.util.TypedValue $r2;
        android.graphics.Bitmap $r3, $r5;
        java.io.InputStream $r4;
        java.io.IOException $r6;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.BitmapFactory$Options;

        $r3 = null;

        $r2 = new android.util.TypedValue;

     label1:
        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>($i0, $r2);

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r0, $r2, $r4, null, $r1);

        $r3 = $r5;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap decodeStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        android.graphics.Rect $r0;
        android.content.res.Resources $r1;
        android.util.TypedValue $r2;
        java.io.InputStream $r3;
        android.graphics.BitmapFactory$Options $r4;
        android.graphics.Bitmap $r5, $r8;
        byte[] $r6;
        boolean $z0, $z1;
        int $i0, $i1;
        float $f0, $f1;
        android.util.DisplayMetrics $r7;
        byte $b2;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.util.TypedValue;

        $r3 := @parameter2: java.io.InputStream;

        $r0 := @parameter3: android.graphics.Rect;

        $r4 := @parameter4: android.graphics.BitmapFactory$Options;

        if $r4 != null goto label1;

        $r4 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r4.<android.graphics.BitmapFactory$Options: void <init>()>();

     label1:
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r3, $r0, $r4);

        if $r5 == null goto label8;

        if $r1 == null goto label8;

        if $r2 == null goto label8;

        $r6 = virtualinvoke $r5.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        if $r6 == null goto label6;

        $z0 = staticinvoke <android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>($r6);

        if $z0 == 0 goto label6;

        $z0 = 1;

     label2:
        $i0 = $r2.<android.util.TypedValue: int density>;

        $i1 = $r4.<android.graphics.BitmapFactory$Options: int inDensity>;

        if $i1 != 0 goto label4;

        if $i0 != 0 goto label3;

        $i0 = 160;

     label3:
        $r4.<android.graphics.BitmapFactory$Options: int inDensity> = $i0;

     label4:
        $i0 = $r4.<android.graphics.BitmapFactory$Options: int inDensity>;

        $f0 = (float) $i0;

        $f0 = $f0 / 160.0F;

        $z1 = $r4.<android.graphics.BitmapFactory$Options: boolean inScaled>;

        if $z1 != 0 goto label5;

        if $z0 == 0 goto label7;

     label5:
        virtualinvoke $r5.<android.graphics.Bitmap: void setDensityScale(float)>(1.0F);

        virtualinvoke $r5.<android.graphics.Bitmap: void setAutoScalingEnabled(boolean)>(0);

        $r7 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r7.<android.util.DisplayMetrics: float density>;

        $f0 = $f1 / $f0;

        $b2 = $f0 cmpl 1.0F;

        if $b2 == 0 goto label8;

        $i0 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $f1 = $f1 + 0.5F;

        $i0 = (int) $f1;

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i1;

        $f1 = $f1 * $f0;

        $f1 = $f1 + 0.5F;

        $i1 = (int) $f1;

        $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r5, $i0, $i1, 1);

        virtualinvoke $r5.<android.graphics.Bitmap: void recycle()>();

        if $z0 == 0 goto label9;

        $r6 = staticinvoke <android.graphics.BitmapFactory: byte[] nativeScaleNinePatch(byte[],float,android.graphics.Rect)>($r6, $f0, $r0);

        virtualinvoke $r8.<android.graphics.Bitmap: void setNinePatchChunk(byte[])>($r6);

        return $r8;

     label6:
        $z0 = 0;

        goto label2;

     label7:
        virtualinvoke $r5.<android.graphics.Bitmap: void setDensityScale(float)>($f0);

        virtualinvoke $r5.<android.graphics.Bitmap: void setAutoScalingEnabled(boolean)>(1);

     label8:
        return $r5;

     label9:
        return $r8;
    }

    public static android.graphics.Bitmap decodeStream(java.io.InputStream)
    {
        java.io.InputStream $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r0, null, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeStream(java.io.InputStream, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        android.graphics.Rect $r0;
        android.graphics.BitmapFactory$Options $r1;
        java.io.BufferedInputStream $r2;
        java.io.InputStream $r3;
        boolean $z0;
        android.content.res.AssetManager$AssetInputStream $r4;
        int $i0;
        android.graphics.Bitmap $r5;
        byte[] $r6;

        $r3 := @parameter0: java.io.InputStream;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.BitmapFactory$Options;

        if $r3 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r3.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label2;

        $r2 = new java.io.BufferedInputStream;

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r3, 16384);

        $r3 = $r2;

     label2:
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(1024);

        $z0 = $r3 instanceof android.content.res.AssetManager$AssetInputStream;

        if $z0 == 0 goto label4;

        $r4 = (android.content.res.AssetManager$AssetInputStream) $r3;

        $i0 = virtualinvoke $r4.<android.content.res.AssetManager$AssetInputStream: int getAssetInt()>();

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeAsset(int,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($i0, $r0, $r1);

     label3:
        return $r5;

     label4:
        $r6 = null;

        if $r1 == null goto label5;

        $r6 = $r1.<android.graphics.BitmapFactory$Options: byte[] inTempStorage>;

     label5:
        if $r6 != null goto label6;

        $r6 = newarray (byte)[16384];

     label6:
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r3, $r6, $r0, $r1);

        goto label3;
    }

    private static native android.graphics.Bitmap nativeDecodeAsset(int, android.graphics.Rect, android.graphics.BitmapFactory$Options);

    private static native android.graphics.Bitmap nativeDecodeByteArray(byte[], int, int, android.graphics.BitmapFactory$Options);

    private static native android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor, android.graphics.Rect, android.graphics.BitmapFactory$Options);

    private static native android.graphics.Bitmap nativeDecodeStream(java.io.InputStream, byte[], android.graphics.Rect, android.graphics.BitmapFactory$Options);

    private static native byte[] nativeScaleNinePatch(byte[], float, android.graphics.Rect);
}
