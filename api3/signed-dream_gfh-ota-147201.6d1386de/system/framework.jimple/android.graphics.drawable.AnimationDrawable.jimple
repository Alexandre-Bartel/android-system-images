public class android.graphics.drawable.AnimationDrawable extends android.graphics.drawable.DrawableContainer implements java.lang.Runnable
{
    private final android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState;
    private int mCurFrame;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.AnimationDrawable $r0;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState)>(null);

        return;
    }

    private void <init>(android.graphics.drawable.AnimationDrawable$AnimationState)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 := @parameter0: android.graphics.drawable.AnimationDrawable$AnimationState;

        specialinvoke $r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        $r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = -1;

        $r2 = new android.graphics.drawable.AnimationDrawable$AnimationState;

        specialinvoke $r2.<android.graphics.drawable.AnimationDrawable$AnimationState: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable)>($r1, $r0);

        $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState> = $r2;

        virtualinvoke $r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r2);

        if $r1 == null goto label1;

        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

        return;

     label1:
        return;
    }

    void <init>(android.graphics.drawable.AnimationDrawable$AnimationState, android.graphics.drawable.AnimationDrawable$1)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        android.graphics.drawable.AnimationDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 := @parameter0: android.graphics.drawable.AnimationDrawable$AnimationState;

        $r2 := @parameter1: android.graphics.drawable.AnimationDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        return;
    }

    private void nextFrame(boolean)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        boolean $z0, $z1;
        int $i0, $i1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        $i0 = $i0 + 1;

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        if $i0 < $i1 goto label1;

        $i0 = 0;

     label1:
        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z1 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        if $z1 == 0 goto label2;

        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label4;

     label2:
        $z1 = 1;

     label3:
        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>($i0, $z0, $z1);

        return;

     label4:
        $z1 = 0;

        goto label3;
    }

    private void setFrame(int, boolean, boolean)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        long $l2, $l3;
        int[] $r2;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        if $i0 < $i1 goto label1;

        return;

     label1:
        $r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = $i0;

        virtualinvoke $r0.<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>($i0);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>($r0);

     label2:
        if $z1 == 0 goto label3;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r2 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        $i0 = $r2[$i0];

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>($r0, $l2);

        return;

     label3:
        return;
    }

    public void addFrame(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        virtualinvoke $r2.<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>($r1, $i0);

        return;
    }

    public int getDuration(int)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        int $i0;
        int[] $r1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r1 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        $i0 = $r1[$i0];

        return $i0;
    }

    public android.graphics.drawable.Drawable getFrame(int)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        int $i0;
        android.graphics.drawable.Drawable[] $r1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r1 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>();

        $r3 = $r1[$i0];

        return $r3;
    }

    public int getNumberOfFrames()
    {
        android.graphics.drawable.AnimationDrawable $r0;
        int $i0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

        return $i0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimationDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int $i0, $i1, $i2;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.graphics.drawable.AnimationDrawable$AnimationState $r6;
        boolean $z0;
        java.lang.String $r7;
        org.xmlpull.v1.XmlPullParserException $r8;
        java.lang.StringBuilder $r9;
        android.graphics.drawable.Drawable $r10;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 = <com.android.internal.R$styleable: int[] AnimationDrawable>;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>($r1, $r2, $r5, 0);

        $r6 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        virtualinvoke $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)>($z0);

        $r6 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>($r6, $z0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

     label1:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label7;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label2;

        if $i1 == 3 goto label7;

     label2:
        if $i1 != 2 goto label1;

        if $i2 > $i0 goto label1;

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label1;

        $r4 = <com.android.internal.R$styleable: int[] AnimationDrawableItem>;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if $i1 >= 0 goto label3;

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'duration\' attribute");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        throw $r8;

     label3:
        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        if $i2 == 0 goto label5;

        $r10 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i2);

     label4:
        $r6 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        virtualinvoke $r6.<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>($r10, $i1);

        if $r10 == null goto label1;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        goto label1;

     label5:
        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 4 goto label5;

        if $i2 == 2 goto label6;

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defining a drawable");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        throw $r8;

     label6:
        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        goto label4;

     label7:
        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

        return;
    }

    public boolean isOneShot()
    {
        android.graphics.drawable.AnimationDrawable $r0;
        boolean $z0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        return $z0;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimationDrawable $r0;
        int $i0;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $i0 = $r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        if $i0 <= -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.AnimationDrawable $r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r3;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;
        int[] $r4;
        java.lang.Object $r5;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = $r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke $r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r2 != $r0 goto label2;

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r3 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r4 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (int[]) $r5;

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$002(android.graphics.drawable.AnimationDrawable$AnimationState,int[])>($r1, $r4);

        $r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated> = 1;

        return $r0;

     label1:
        return $r0;

     label2:
        return $r0;
    }

    public void run()
    {
        android.graphics.drawable.AnimationDrawable $r0;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void nextFrame(boolean)>(0);

        return;
    }

    public void setOneShot(boolean)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        boolean $z0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>($r1, $z0);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        boolean $z0, $z1, $z2;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = specialinvoke $r0.<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>($z0, $z1);

        if $z0 == 0 goto label2;

        if $z2 != 0 goto label1;

        if $z1 == 0 goto label3;

     label1:
        specialinvoke $r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 1);

        return $z2;

     label2:
        virtualinvoke $r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>($r0);

        return $z2;

     label3:
        return $z2;
    }

    public void start()
    {
        android.graphics.drawable.AnimationDrawable $r0;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = virtualinvoke $r0.<android.graphics.drawable.AnimationDrawable: boolean isRunning()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<android.graphics.drawable.AnimationDrawable: void run()>();

        return;

     label1:
        return;
    }

    public void stop()
    {
        android.graphics.drawable.AnimationDrawable $r0;
        boolean $z0;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = virtualinvoke $r0.<android.graphics.drawable.AnimationDrawable: boolean isRunning()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>($r0);

        return;

     label1:
        return;
    }

    public void unscheduleSelf(java.lang.Runnable)
    {
        android.graphics.drawable.AnimationDrawable $r0;
        java.lang.Runnable $r1;

        $r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 := @parameter0: java.lang.Runnable;

        $r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = -1;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>($r1);

        return;
    }
}
