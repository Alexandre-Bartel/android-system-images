class org.apache.harmony.xml.ExpatPullParser$NamespaceStack extends java.lang.Object
{
    static final org.apache.harmony.xml.ExpatPullParser$NamespaceStack EMPTY;
    private final int depth;
    private final int index;
    private final org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent;
    private final java.lang.String prefix;
    private final java.lang.String uri;

    static void <clinit>()
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;

        $r0 = new org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        specialinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: void <init>()>();

        <org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack EMPTY> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent> = null;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String prefix> = null;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String uri> = null;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index> = -1;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int depth> = 0;

        return;
    }

    private void <init>(org.apache.harmony.xml.ExpatPullParser$NamespaceStack, java.lang.String, java.lang.String, int)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0, $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $r1 := @parameter0: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent> = $r1;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String prefix> = $r2;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String uri> = $r3;

        $i1 = $r1.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index>;

        $i1 = $i1 + 1;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index> = $i1;

        $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int depth> = $i0;

        return;
    }

    void <init>(org.apache.harmony.xml.ExpatPullParser$NamespaceStack, java.lang.String, java.lang.String, int, org.apache.harmony.xml.ExpatPullParser$1)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0, $r1;
        java.lang.String $r2, $r3;
        int $i0;
        org.apache.harmony.xml.ExpatPullParser$1 $r4;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $r1 := @parameter0: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: org.apache.harmony.xml.ExpatPullParser$1;

        specialinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: void <init>(org.apache.harmony.xml.ExpatPullParser$NamespaceStack,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $i0);

        return;
    }

    static int access$100(org.apache.harmony.xml.ExpatPullParser$NamespaceStack)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;
        int i0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        i0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int depth>;

        return i0;
    }

    static org.apache.harmony.xml.ExpatPullParser$NamespaceStack access$200(org.apache.harmony.xml.ExpatPullParser$NamespaceStack)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $r0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent>;

        return $r0;
    }

    private org.apache.harmony.xml.ExpatPullParser$NamespaceStack nodeAt(int)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index>;

        if $i0 <= $i1 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Index > size.");

        throw $r1;

     label1:
        if $i0 >= 0 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Index < 0.");

        throw $r1;

     label2:
        $i1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index>;

        if $i0 == $i1 goto label3;

        $r0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent>;

        goto label2;

     label3:
        return $r0;
    }

    int countAt(int)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int depth>;

        if $i0 <= $i1 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Depth > maximum.");

        throw $r1;

     label1:
        if $i0 >= 0 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Depth < 0.");

        throw $r1;

     label2:
        $i1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int depth>;

        if $i0 >= $i1 goto label3;

        $r0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent>;

        goto label2;

     label3:
        $i0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index>;

        $i0 = $i0 + 1;

        return $i0;
    }

    java.lang.String prefixAt(int)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;
        int $i0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $i0 := @parameter0: int;

        $r0 = specialinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack nodeAt(int)>($i0);

        r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String prefix>;

        return r1;
    }

    java.lang.String uriAt(int)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;
        int $i0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $i0 := @parameter0: int;

        $r0 = specialinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack nodeAt(int)>($i0);

        r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String uri>;

        return r1;
    }

    java.lang.String uriFor(java.lang.String)
    {
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$NamespaceStack;

        $r1 := @parameter0: java.lang.String;

     label1:
        $i0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: int index>;

        if $i0 < 0 goto label3;

        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String prefix>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: java.lang.String uri>;

        return $r1;

     label2:
        $r0 = $r0.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack: org.apache.harmony.xml.ExpatPullParser$NamespaceStack parent>;

        goto label1;

     label3:
        return null;
    }
}
