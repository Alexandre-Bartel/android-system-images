public class android.ddm.DdmHandleAppName extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    public static final int CHUNK_APNM;
    private static volatile java.lang.String mAppName;
    private static android.ddm.DdmHandleAppName mInstance;

    static void <clinit>()
    {
        int $i0;
        android.ddm.DdmHandleAppName $r0;

        $i0 = staticinvoke <android.ddm.DdmHandleAppName: int type(java.lang.String)>("APNM");

        <android.ddm.DdmHandleAppName: int CHUNK_APNM> = $i0;

        <android.ddm.DdmHandleAppName: java.lang.String mAppName> = "";

        $r0 = new android.ddm.DdmHandleAppName;

        specialinvoke $r0.<android.ddm.DdmHandleAppName: void <init>()>();

        <android.ddm.DdmHandleAppName: android.ddm.DdmHandleAppName mInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleAppName $r0;

        $r0 := @this: android.ddm.DdmHandleAppName;

        specialinvoke $r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    public static java.lang.String getAppName()
    {
        java.lang.String r0;

        r0 = <android.ddm.DdmHandleAppName: java.lang.String mAppName>;

        return r0;
    }

    public static void register()
    {
        return;
    }

    private static void sendAPNM(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;
        int $i0;
        java.nio.ByteBuffer $r2;
        java.nio.ByteOrder $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 * 2;

        $i0 = $i0 + 4;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        $r3 = <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.nio.ByteOrder CHUNK_ORDER>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        staticinvoke <android.ddm.DdmHandleAppName: void putString(java.nio.ByteBuffer,java.lang.String)>($r2, $r0);

        $r1 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i0 = <android.ddm.DdmHandleAppName: int CHUNK_APNM>;

        specialinvoke $r1.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,java.nio.ByteBuffer)>($i0, $r2);

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void sendChunk(org.apache.harmony.dalvik.ddmc.Chunk)>($r1);

        return;
    }

    public static void setAppName(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        <android.ddm.DdmHandleAppName: java.lang.String mAppName> = $r0;

        staticinvoke <android.ddm.DdmHandleAppName: void sendAPNM(java.lang.String)>($r0);

        return;

     label2:
        return;
    }

    public void connected()
    {
        android.ddm.DdmHandleAppName $r0;

        $r0 := @this: android.ddm.DdmHandleAppName;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleAppName $r0;

        $r0 := @this: android.ddm.DdmHandleAppName;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleAppName $r0;
        org.apache.harmony.dalvik.ddmc.Chunk $r1;

        $r0 := @this: android.ddm.DdmHandleAppName;

        $r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        return null;
    }
}
