public final class android.os.Parcel extends java.lang.Object
{
    private static final boolean DEBUG_RECYCLE;
    private static final int EX_BAD_PARCELABLE;
    private static final int EX_ILLEGAL_ARGUMENT;
    private static final int EX_ILLEGAL_STATE;
    private static final int EX_NULL_POINTER;
    private static final int EX_SECURITY;
    private static final int POOL_SIZE;
    public static final android.os.Parcelable$Creator STRING_CREATOR;
    private static final int VAL_BOOLEAN;
    private static final int VAL_BOOLEANARRAY;
    private static final int VAL_BUNDLE;
    private static final int VAL_BYTE;
    private static final int VAL_BYTEARRAY;
    private static final int VAL_CHARSEQUENCE;
    private static final int VAL_DOUBLE;
    private static final int VAL_FLOAT;
    private static final int VAL_IBINDER;
    private static final int VAL_INTARRAY;
    private static final int VAL_INTEGER;
    private static final int VAL_LIST;
    private static final int VAL_LONG;
    private static final int VAL_LONGARRAY;
    private static final int VAL_MAP;
    private static final int VAL_NULL;
    private static final int VAL_OBJECTARRAY;
    private static final int VAL_PARCELABLE;
    private static final int VAL_PARCELABLEARRAY;
    private static final int VAL_SERIALIZABLE;
    private static final int VAL_SHORT;
    private static final int VAL_SPARSEARRAY;
    private static final int VAL_SPARSEBOOLEANARRAY;
    private static final int VAL_STRING;
    private static final int VAL_STRINGARRAY;
    private static final java.util.HashMap mCreators;
    private static final android.os.Parcel[] sHolderPool;
    private static final android.os.Parcel[] sOwnedPool;
    private int mObject;
    private int mOwnObject;
    private java.lang.RuntimeException mStack;

    static void <clinit>()
    {
        android.os.Parcel[] $r0;
        android.os.Parcel$1 $r1;
        java.util.HashMap $r2;

        <android.os.Parcel: int VAL_STRINGARRAY> = 14;

        <android.os.Parcel: int VAL_STRING> = 0;

        <android.os.Parcel: int VAL_SPARSEBOOLEANARRAY> = 22;

        <android.os.Parcel: int VAL_SPARSEARRAY> = 12;

        <android.os.Parcel: int VAL_SHORT> = 5;

        <android.os.Parcel: int VAL_SERIALIZABLE> = 21;

        <android.os.Parcel: int VAL_PARCELABLEARRAY> = 16;

        <android.os.Parcel: int VAL_PARCELABLE> = 4;

        <android.os.Parcel: int VAL_OBJECTARRAY> = 17;

        <android.os.Parcel: int VAL_NULL> = -1;

        <android.os.Parcel: int VAL_MAP> = 2;

        <android.os.Parcel: int VAL_LONGARRAY> = 19;

        <android.os.Parcel: int VAL_LONG> = 6;

        <android.os.Parcel: int VAL_LIST> = 11;

        <android.os.Parcel: int VAL_INTEGER> = 1;

        <android.os.Parcel: int VAL_INTARRAY> = 18;

        <android.os.Parcel: int VAL_IBINDER> = 15;

        <android.os.Parcel: int VAL_FLOAT> = 7;

        <android.os.Parcel: int VAL_DOUBLE> = 8;

        <android.os.Parcel: int VAL_CHARSEQUENCE> = 10;

        <android.os.Parcel: int VAL_BYTEARRAY> = 13;

        <android.os.Parcel: int VAL_BYTE> = 20;

        <android.os.Parcel: int VAL_BUNDLE> = 3;

        <android.os.Parcel: int VAL_BOOLEANARRAY> = 23;

        <android.os.Parcel: int VAL_BOOLEAN> = 9;

        <android.os.Parcel: int POOL_SIZE> = 6;

        <android.os.Parcel: int EX_SECURITY> = -1;

        <android.os.Parcel: int EX_NULL_POINTER> = -4;

        <android.os.Parcel: int EX_ILLEGAL_STATE> = -5;

        <android.os.Parcel: int EX_ILLEGAL_ARGUMENT> = -3;

        <android.os.Parcel: int EX_BAD_PARCELABLE> = -2;

        <android.os.Parcel: boolean DEBUG_RECYCLE> = 0;

        $r0 = newarray (android.os.Parcel)[6];

        <android.os.Parcel: android.os.Parcel[] sOwnedPool> = $r0;

        $r0 = newarray (android.os.Parcel)[6];

        <android.os.Parcel: android.os.Parcel[] sHolderPool> = $r0;

        $r1 = new android.os.Parcel$1;

        specialinvoke $r1.<android.os.Parcel$1: void <init>()>();

        <android.os.Parcel: android.os.Parcelable$Creator STRING_CREATOR> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.os.Parcel: java.util.HashMap mCreators> = $r2;

        return;
    }

    private void <init>(int)
    {
        android.os.Parcel $r0;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        specialinvoke $r0.<android.os.Parcel: void init(int)>($i0);

        return;
    }

    static native void closeFileDescriptor(java.io.FileDescriptor) throws java.io.IOException;

    private native void destroy();

    private native void freeBuffer();

    private native void init(int);

    private native java.io.FileDescriptor internalReadFileDescriptor();

    public static android.os.Parcel obtain()
    {
        android.os.Parcel $r0;
        android.os.Parcel[] $r1;
        int $i0;
        java.lang.Throwable $r2;

        $r1 = <android.os.Parcel: android.os.Parcel[] sOwnedPool>;

        entermonitor $r1;

        $i0 = 0;

     label1:
        if $i0 >= 6 goto label5;

     label2:
        $r0 = $r1[$i0];

        if $r0 == null goto label4;

        $r1[$i0] = null;

        exitmonitor $r1;

     label3:
        return $r0;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        exitmonitor $r1;

     label6:
        $r0 = new android.os.Parcel;

        specialinvoke $r0.<android.os.Parcel: void <init>(int)>(0);

        return $r0;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor $r1;

     label9:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected static final android.os.Parcel obtain(int)
    {
        int $i0, $i1;
        android.os.Parcel $r0;
        android.os.Parcel[] $r1;
        java.lang.Throwable $r2;

        $i0 := @parameter0: int;

        $r1 = <android.os.Parcel: android.os.Parcel[] sHolderPool>;

        entermonitor $r1;

        $i1 = 0;

     label1:
        if $i1 >= 6 goto label5;

     label2:
        $r0 = $r1[$i1];

        if $r0 == null goto label4;

        $r1[$i1] = null;

        specialinvoke $r0.<android.os.Parcel: void init(int)>($i0);

        exitmonitor $r1;

     label3:
        return $r0;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        exitmonitor $r1;

     label6:
        $r0 = new android.os.Parcel;

        specialinvoke $r0.<android.os.Parcel: void <init>(int)>($i0);

        return $r0;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor $r1;

     label9:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static native java.io.FileDescriptor openFileDescriptor(java.lang.String, int) throws java.io.FileNotFoundException;

    private void readArrayInternal(java.lang.Object[], int, java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.ClassLoader $r2;
        java.lang.Object $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.ClassLoader;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>($r2);

        $r1[$i1] = $r3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void readListInternal(java.util.List, int, java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        java.lang.ClassLoader $r2;
        java.lang.Object $r3;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if $i0 <= 0 goto label2;

        $r3 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>($r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void readMapInternal(java.util.Map, int, java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.util.Map $r1;
        java.lang.ClassLoader $r2;
        int $i0;
        java.lang.Object $r3, $r4;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if $i0 <= 0 goto label2;

        $r3 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>($r2);

        $r4 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>($r2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void readSparseArrayInternal(android.util.SparseArray, int, java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        android.util.SparseArray $r1;
        java.lang.ClassLoader $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.util.SparseArray;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if $i0 <= 0 goto label2;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>($r2);

        virtualinvoke $r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i1, $r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void readSparseBooleanArrayInternal(android.util.SparseBooleanArray, int)
    {
        android.os.Parcel $r0;
        android.util.SparseBooleanArray $r1;
        int $i0, $i1;
        byte $b2;
        boolean $z0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.util.SparseBooleanArray;

        $i0 := @parameter1: int;

     label1:
        if $i0 <= 0 goto label4;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $b2 = virtualinvoke $r0.<android.os.Parcel: byte readByte()>();

        if $b2 != 1 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke $r1.<android.util.SparseBooleanArray: void append(int,boolean)>($i1, $z0);

        $i0 = $i0 + -1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return;
    }

    private void writeMapInternal(java.util.Map)
    {
        android.os.Parcel $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.Map;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r4);

        goto label2;

     label3:
        return;
    }

    private native void writeNative(byte[], int, int);

    public final native void appendFrom(android.os.Parcel, int, int);

    public final android.os.IBinder[] createBinderArray()
    {
        android.os.Parcel $r0;
        android.os.IBinder[] $r1;
        int $i0, $i1;
        android.os.IBinder $r2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $r1 = newarray (android.os.IBinder)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final java.util.ArrayList createBinderArrayList()
    {
        android.os.Parcel $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        android.os.IBinder $r2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

     label2:
        if $i1 <= 0 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return $r1;
    }

    public final boolean[] createBooleanArray()
    {
        android.os.Parcel $r0;
        boolean[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label5;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataAvail()>();

        $i1 = $i1 >> 2;

        if $i0 > $i1 goto label5;

        $r1 = newarray (boolean)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label3;

        $z0 = 1;

     label2:
        $r1[$i1] = $z0;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return $r1;

     label5:
        return null;
    }

    public final native byte[] createByteArray();

    public final char[] createCharArray()
    {
        android.os.Parcel $r0;
        char[] $r1;
        int $i0, $i1, $i2;
        char $c3;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataAvail()>();

        $i1 = $i1 >> 2;

        if $i0 > $i1 goto label3;

        $r1 = newarray (char)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $c3 = (char) $i2;

        $r1[$i1] = $c3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final double[] createDoubleArray()
    {
        android.os.Parcel $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataAvail()>();

        $i1 = $i1 >> 3;

        if $i0 > $i1 goto label3;

        $r1 = newarray (double)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = virtualinvoke $r0.<android.os.Parcel: double readDouble()>();

        $r1[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final float[] createFloatArray()
    {
        android.os.Parcel $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataAvail()>();

        $i1 = $i1 >> 2;

        if $i0 > $i1 goto label3;

        $r1 = newarray (float)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = virtualinvoke $r0.<android.os.Parcel: float readFloat()>();

        $r1[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final int[] createIntArray()
    {
        android.os.Parcel $r0;
        int[] $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataAvail()>();

        $i1 = $i1 >> 2;

        if $i0 > $i1 goto label3;

        $r1 = newarray (int)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final long[] createLongArray()
    {
        android.os.Parcel $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataAvail()>();

        $i1 = $i1 >> 3;

        if $i0 > $i1 goto label3;

        $r1 = newarray (long)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = virtualinvoke $r0.<android.os.Parcel: long readLong()>();

        $r1[$i1] = $l2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final java.lang.String[] createStringArray()
    {
        android.os.Parcel $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label3;

        $r1 = newarray (java.lang.String)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    public final java.util.ArrayList createStringArrayList()
    {
        android.os.Parcel $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

     label2:
        if $i1 <= 0 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return $r1;
    }

    public final java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel $r0;
        android.os.Parcelable$Creator $r1;
        int $i0, $i1, $i2;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Parcelable$Creator;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object[] newArray(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        $r2[$i1] = $r3;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $r2;
    }

    public final java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)
    {
        android.os.Parcel $r0;
        android.os.Parcelable$Creator $r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Parcelable$Creator;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

     label2:
        if $i1 <= 0 goto label5;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label4;

        $r3 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label3:
        $i1 = $i1 + -1;

        goto label2;

     label4:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label3;

     label5:
        return $r2;
    }

    public final native int dataAvail();

    public final native int dataCapacity();

    public final native int dataPosition();

    public final native int dataSize();

    public final native void enforceInterface(java.lang.String);

    protected void finalize() throws java.lang.Throwable
    {
        android.os.Parcel $r0;

        $r0 := @this: android.os.Parcel;

        specialinvoke $r0.<android.os.Parcel: void destroy()>();

        return;
    }

    public final native boolean hasFileDescriptors();

    public final native byte[] marshall();

    public final java.lang.Object[] readArray(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        java.lang.Object[] $r2;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = newarray (java.lang.Object)[$i0];

        specialinvoke $r0.<android.os.Parcel: void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader)>($r2, $i0, $r1);

        return $r2;
    }

    public final java.util.ArrayList readArrayList(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        java.util.ArrayList $r2;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        specialinvoke $r0.<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>($r2, $i0, $r1);

        return $r2;
    }

    public final void readBinderArray(android.os.IBinder[])
    {
        android.os.Parcel $r0;
        android.os.IBinder[] $r1;
        int $i0, $i1;
        android.os.IBinder $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.IBinder[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r3;

     label3:
        return;
    }

    public final void readBinderList(java.util.List)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        android.os.IBinder $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        if $i2 >= $i1 goto label2;

        $r2 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r2);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i2 >= $i1 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        if $i2 >= $i0 goto label4;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        return;
    }

    public final void readBooleanArray(boolean[])
    {
        android.os.Parcel $r0;
        boolean[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: boolean[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label3;

        $z0 = 1;

     label2:
        $r1[$i1] = $z0;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label5:
        return;
    }

    public final android.os.Bundle readBundle()
    {
        android.os.Parcel $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke $r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(null);

        return $r1;
    }

    public final android.os.Bundle readBundle(java.lang.ClassLoader)
    {
        android.os.Parcel $r0, $r3;
        java.lang.ClassLoader $r1;
        android.os.Bundle $r2;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r4;
        java.lang.String $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i1 >= 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i2 == 1279544898 goto label2;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Bundle", "readBundle: bad magic number");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readBundle: trace = ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Bundle", $r5);

     label2:
        $i2 = $i0 + $i1;

        $i2 = $i2 + 4;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i2);

        $r3 = new android.os.Parcel;

        specialinvoke $r3.<android.os.Parcel: void <init>(int)>(0);

        virtualinvoke $r3.<android.os.Parcel: void setDataPosition(int)>(0);

        $i1 = $i1 + 4;

        virtualinvoke $r3.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r0, $i0, $i1);

        virtualinvoke $r3.<android.os.Parcel: void setDataPosition(int)>(0);

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Parcel)>($r3);

        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r1);

     label3:
        return $r2;
    }

    android.os.Bundle readBundleUnpacked(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        android.os.Bundle $r2;
        int $i0;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;
        java.lang.StringBuilder $r5;
        java.util.Map $r6;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 != -1 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 == 1279544898 goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Bundle", "readBundleUnpacked: bad magic number");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readBundleUnpacked: trace = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Bundle", $r4);

     label2:
        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(java.lang.ClassLoader)>($r1);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label3;

        return null;

     label3:
        $r6 = $r2.<android.os.Bundle: java.util.Map mMap>;

        specialinvoke $r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>($r6, $i0, $r1);

        return $r2;
    }

    public final byte readByte()
    {
        android.os.Parcel $r0;
        int $i0;
        byte $b1;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i0 = $i0 & 255;

        $b1 = (byte) $i0;

        return $b1;
    }

    public final void readByteArray(byte[])
    {
        android.os.Parcel $r0;
        byte[] $r1, $r2;
        int $i0, $i1;
        java.lang.RuntimeException $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: byte[];

        $r2 = virtualinvoke $r0.<android.os.Parcel: byte[] createByteArray()>();

        $i0 = lengthof $r2;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label1;

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r3;
    }

    public final void readCharArray(char[])
    {
        android.os.Parcel $r0;
        char[] $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: char[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $c3 = (char) $i2;

        $r1[$i1] = $c3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final native double readDouble();

    public final void readDoubleArray(double[])
    {
        android.os.Parcel $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: double[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = virtualinvoke $r0.<android.os.Parcel: double readDouble()>();

        $r1[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readException()
    {
        android.os.Parcel $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r0.<android.os.Parcel: void readException(int,java.lang.String)>($i0, $r1);

        return;
    }

    public final void readException(int, java.lang.String)
    {
        android.os.Parcel $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r4;
        android.os.BadParcelableException $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.NullPointerException $r7;
        java.lang.IllegalStateException $r8;

        $r0 := @this: android.os.Parcel;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        lookupswitch($i0)
        {
            case -5: goto label6;
            case -4: goto label5;
            case -3: goto label4;
            case -2: goto label3;
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown exception code: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msg ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label3:
        $r5 = new android.os.BadParcelableException;

        specialinvoke $r5.<android.os.BadParcelableException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label5:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label6:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r8;
    }

    public final android.os.ParcelFileDescriptor readFileDescriptor()
    {
        android.os.Parcel $r0;
        java.io.FileDescriptor $r1;
        android.os.ParcelFileDescriptor $r2;

        $r0 := @this: android.os.Parcel;

        $r1 = specialinvoke $r0.<android.os.Parcel: java.io.FileDescriptor internalReadFileDescriptor()>();

        if $r1 == null goto label1;

        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r1);

        return $r2;

     label1:
        return null;
    }

    public final native float readFloat();

    public final void readFloatArray(float[])
    {
        android.os.Parcel $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: float[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = virtualinvoke $r0.<android.os.Parcel: float readFloat()>();

        $r1[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final java.util.HashMap readHashMap(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        java.util.HashMap $r2;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i0);

        specialinvoke $r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>($r2, $i0, $r1);

        return $r2;
    }

    public final native int readInt();

    public final void readIntArray(int[])
    {
        android.os.Parcel $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: int[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r1[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readList(java.util.List, java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        java.lang.ClassLoader $r2;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        specialinvoke $r0.<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>($r1, $i0, $r2);

        return;
    }

    public final native long readLong();

    public final void readLongArray(long[])
    {
        android.os.Parcel $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.RuntimeException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: long[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = virtualinvoke $r0.<android.os.Parcel: long readLong()>();

        $r1[$i1] = $l2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readMap(java.util.Map, java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.util.Map $r1;
        java.lang.ClassLoader $r2;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        specialinvoke $r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>($r1, $i0, $r2);

        return;
    }

    public final android.os.Parcelable readParcelable(java.lang.ClassLoader)
    {
        java.lang.ClassLoader $r0;
        android.os.Parcel $r1;
        java.lang.String $r2, $r14;
        java.util.HashMap $r3, $r4, $r6;
        java.lang.Object $r5;
        android.os.Parcelable$Creator $r7;
        java.lang.Class $r8;
        java.lang.reflect.Field $r9;
        android.os.BadParcelableException $r10;
        java.lang.StringBuilder $r11;
        java.lang.Throwable $r12;
        java.lang.IllegalAccessException $r13;
        java.lang.ClassNotFoundException $r15;
        java.lang.ClassCastException $r16;
        java.lang.NoSuchFieldException $r17;
        android.os.Parcelable $r18;

        $r1 := @this: android.os.Parcel;

        $r0 := @parameter0: java.lang.ClassLoader;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        if $r2 != null goto label01;

        return null;

     label01:
        $r3 = <android.os.Parcel: java.util.HashMap mCreators>;

        entermonitor $r3;

     label02:
        $r4 = <android.os.Parcel: java.util.HashMap mCreators>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (java.util.HashMap) $r5;

        if $r4 != null goto label03;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r6 = <android.os.Parcel: java.util.HashMap mCreators>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4);

     label03:
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (android.os.Parcelable$Creator) $r5;

     label04:
        if $r7 != null goto label20;

        if $r0 != null goto label12;

     label05:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

     label06:
        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("CREATOR");

        $r5 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label07:
        $r7 = (android.os.Parcelable$Creator) $r5;

     label08:
        if $r7 != null goto label19;

     label09:
        $r10 = new android.os.BadParcelableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.os.BadParcelableException: void <init>(java.lang.String)>($r2);

        throw $r10;

     label10:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r12;

     label12:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r2, 1, $r0);

     label13:
        goto label06;

     label14:
        $r13 := @caughtexception;

     label15:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found when unmarshalling: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", e: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Parcel", $r14);

        $r10 = new android.os.BadParcelableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException when unmarshalling: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.os.BadParcelableException: void <init>(java.lang.String)>($r2);

        throw $r10;

     label16:
        $r15 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found when unmarshalling: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", e: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Parcel", $r14);

        $r10 = new android.os.BadParcelableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassNotFoundException when unmarshalling: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.os.BadParcelableException: void <init>(java.lang.String)>($r2);

        throw $r10;

     label17:
        $r16 := @caughtexception;

        $r10 = new android.os.BadParcelableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.os.BadParcelableException: void <init>(java.lang.String)>($r2);

        throw $r10;

     label18:
        $r17 := @caughtexception;

        $r10 = new android.os.BadParcelableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.os.BadParcelableException: void <init>(java.lang.String)>($r2);

        throw $r10;

     label19:
        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r7);

     label20:
        exitmonitor $r3;

     label21:
        $r5 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r1);

        $r18 = (android.os.Parcelable) $r5;

        return $r18;

        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label07 with label14;
        catch java.lang.ClassNotFoundException from label05 to label07 with label16;
        catch java.lang.ClassCastException from label05 to label08 with label17;
        catch java.lang.NoSuchFieldException from label05 to label07 with label18;
        catch java.lang.Throwable from label05 to label08 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
        catch java.lang.IllegalAccessException from label12 to label13 with label14;
        catch java.lang.ClassNotFoundException from label12 to label13 with label16;
        catch java.lang.ClassCastException from label12 to label13 with label17;
        catch java.lang.NoSuchFieldException from label12 to label13 with label18;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.lang.Throwable from label15 to label21 with label10;
    }

    public final android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        android.os.Parcelable[] $r2;
        int $i0, $i1;
        android.os.Parcelable $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = newarray (android.os.Parcelable)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r3 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r1);

        $r2[$i1] = $r3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r2;
    }

    public final java.io.Serializable readSerializable()
    {
        java.io.ByteArrayInputStream $r0;
        java.io.ObjectInputStream $r1;
        android.os.Parcel $r2;
        java.lang.String $r3;
        byte[] $r4;
        java.lang.Object $r5;
        java.io.Serializable $r6;
        java.io.IOException $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;
        java.lang.ClassNotFoundException $r10;

        $r2 := @this: android.os.Parcel;

        $r3 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r2.<android.os.Parcel: byte[] createByteArray()>();

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r1 = new java.io.ObjectInputStream;

     label2:
        specialinvoke $r1.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r0);

        $r5 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label3:
        $r6 = (java.io.Serializable) $r5;

        return $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered IOException reading a Serializable object (name = ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r7);

        throw $r8;

     label5:
        $r10 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encounteredClassNotFoundException reading a Serializable object (name = ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r10);

        throw $r8;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.ClassNotFoundException from label2 to label3 with label5;
    }

    public final android.util.SparseArray readSparseArray(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        android.util.SparseArray $r2;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>(int)>($i0);

        specialinvoke $r0.<android.os.Parcel: void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader)>($r2, $i0, $r1);

        return $r2;
    }

    public final android.util.SparseBooleanArray readSparseBooleanArray()
    {
        android.os.Parcel $r0;
        android.util.SparseBooleanArray $r1;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = new android.util.SparseBooleanArray;

        specialinvoke $r1.<android.util.SparseBooleanArray: void <init>(int)>($i0);

        specialinvoke $r0.<android.os.Parcel: void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int)>($r1, $i0);

        return $r1;
    }

    public final native java.lang.String readString();

    public final void readStringArray(java.lang.String[])
    {
        android.os.Parcel $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.String[];

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r3;

     label3:
        return;
    }

    public final java.lang.String[] readStringArray()
    {
        android.os.Parcel $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 < 0 goto label2;

        $r1 = newarray (java.lang.String)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return null;

     label3:
        return $r1;
    }

    public final void readStringList(java.util.List)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        if $i2 >= $i1 goto label2;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r2);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i2 >= $i1 goto label3;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        if $i2 >= $i0 goto label4;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        return;
    }

    public final native android.os.IBinder readStrongBinder();

    public final void readTypedArray(java.lang.Object[], android.os.Parcelable$Creator)
    {
        android.os.Parcel $r0;
        java.lang.Object[] $r1;
        android.os.Parcelable$Creator $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $i2 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        $r1[$i1] = $r3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r1[$i1] = null;

        goto label2;

     label4:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r4;

     label5:
        return;
    }

    public final java.lang.Object[] readTypedArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel $r0;
        android.os.Parcelable$Creator $r1;
        java.lang.Object[] $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Parcelable$Creator;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r1);

        return $r2;
    }

    public final void readTypedList(java.util.List, android.os.Parcelable$Creator)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        android.os.Parcelable$Creator $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: android.os.Parcelable$Creator;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label4;

        if $i2 >= $i1 goto label4;

        $i3 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r3);

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, null);

        goto label2;

     label4:
        if $i2 >= $i1 goto label7;

        $i3 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label5:
        $i2 = $i2 + 1;

        goto label4;

     label6:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label5;

     label7:
        if $i2 >= $i0 goto label8;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $i2 = $i2 + 1;

        goto label7;

     label8:
        return;
    }

    public final java.lang.Object readValue(java.lang.ClassLoader)
    {
        android.os.Parcel $r0;
        java.lang.ClassLoader $r1;
        int $i0, $i1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Integer $r5;
        java.util.HashMap $r6;
        android.os.Parcelable $r7;
        short $s2;
        java.lang.Short $r8;
        long $l3;
        java.lang.Long $r9;
        float $f0;
        java.lang.Float $r10;
        double $d0;
        java.lang.Double $r11;
        boolean $z0;
        java.lang.Boolean $r12;
        android.os.Parcelable$Creator $r13;
        java.lang.Object $r14;
        java.util.ArrayList $r15;
        boolean[] $r16;
        byte[] $r17;
        java.lang.String[] $r18;
        android.os.IBinder $r19;
        java.lang.Object[] $r20;
        int[] $r21;
        long[] $r22;
        byte $b4;
        java.lang.Byte $r23;
        java.io.Serializable $r24;
        android.os.Parcelable[] $r25;
        android.util.SparseArray $r26;
        android.util.SparseBooleanArray $r27;
        android.os.Bundle $r28;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.ClassLoader;

        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        lookupswitch($i1)
        {
            case -1: goto label02;
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label28;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label26;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label25;
            case 17: goto label20;
            case 18: goto label21;
            case 19: goto label22;
            case 20: goto label23;
            case 21: goto label24;
            case 22: goto label27;
            case 23: goto label16;
            default: goto label01;
        };

     label01:
        $i0 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $i0 = $i0 - 4;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unmarshalling unknown type code ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at offset ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label02:
        return null;

     label03:
        $r4 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        return $r4;

     label04:
        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r5;

     label05:
        $r6 = virtualinvoke $r0.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>($r1);

        return $r6;

     label06:
        $r7 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r1);

        return $r7;

     label07:
        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $s2 = (short) $i1;

        $r8 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r8;

     label08:
        $l3 = virtualinvoke $r0.<android.os.Parcel: long readLong()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r9;

     label09:
        $f0 = virtualinvoke $r0.<android.os.Parcel: float readFloat()>();

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r10;

     label10:
        $d0 = virtualinvoke $r0.<android.os.Parcel: double readDouble()>();

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r11;

     label11:
        $i1 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i1 != 1 goto label13;

        $z0 = 1;

     label12:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r12;

     label13:
        $z0 = 0;

        goto label12;

     label14:
        $r13 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r0);

        return $r14;

     label15:
        $r15 = virtualinvoke $r0.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>($r1);

        return $r15;

     label16:
        $r16 = virtualinvoke $r0.<android.os.Parcel: boolean[] createBooleanArray()>();

        return $r16;

     label17:
        $r17 = virtualinvoke $r0.<android.os.Parcel: byte[] createByteArray()>();

        return $r17;

     label18:
        $r18 = virtualinvoke $r0.<android.os.Parcel: java.lang.String[] readStringArray()>();

        return $r18;

     label19:
        $r19 = virtualinvoke $r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        return $r19;

     label20:
        $r20 = virtualinvoke $r0.<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>($r1);

        return $r20;

     label21:
        $r21 = virtualinvoke $r0.<android.os.Parcel: int[] createIntArray()>();

        return $r21;

     label22:
        $r22 = virtualinvoke $r0.<android.os.Parcel: long[] createLongArray()>();

        return $r22;

     label23:
        $b4 = virtualinvoke $r0.<android.os.Parcel: byte readByte()>();

        $r23 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        return $r23;

     label24:
        $r24 = virtualinvoke $r0.<android.os.Parcel: java.io.Serializable readSerializable()>();

        return $r24;

     label25:
        $r25 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>($r1);

        return $r25;

     label26:
        $r26 = virtualinvoke $r0.<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>($r1);

        return $r26;

     label27:
        $r27 = virtualinvoke $r0.<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>();

        return $r27;

     label28:
        $r28 = virtualinvoke $r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>($r1);

        return $r28;
    }

    public final void recycle()
    {
        android.os.Parcel $r0, $r2;
        int $i0;
        android.os.Parcel[] $r1;
        java.lang.Throwable $r3;

        $r0 := @this: android.os.Parcel;

        specialinvoke $r0.<android.os.Parcel: void freeBuffer()>();

        $i0 = $r0.<android.os.Parcel: int mOwnObject>;

        if $i0 == 0 goto label05;

        $r1 = <android.os.Parcel: android.os.Parcel[] sOwnedPool>;

     label01:
        entermonitor $r1;

        $i0 = 0;

     label02:
        if $i0 >= 6 goto label07;

     label03:
        $r2 = $r1[$i0];

        if $r2 != null goto label06;

        $r1[$i0] = $r0;

        exitmonitor $r1;

     label04:
        return;

     label05:
        $r1 = <android.os.Parcel: android.os.Parcel[] sHolderPool>;

        goto label01;

     label06:
        $i0 = $i0 + 1;

        goto label02;

     label07:
        exitmonitor $r1;

     label08:
        return;

     label09:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final native void setDataCapacity(int);

    public final native void setDataPosition(int);

    public final native void setDataSize(int);

    public final native void unmarshall(byte[], int, int);

    public final void writeArray(java.lang.Object[])
    {
        android.os.Parcel $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.Object[];

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeBinderArray(android.os.IBinder[])
    {
        android.os.Parcel $r0;
        android.os.IBinder[] $r1;
        int $i0, $i1;
        android.os.IBinder $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.IBinder[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final void writeBinderList(java.util.List)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        android.os.IBinder $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (android.os.IBinder) $r2;

        virtualinvoke $r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeBooleanArray(boolean[])
    {
        android.os.Parcel $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0;
        byte $b2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: boolean[];

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $z0 = $r1[$i1];

        if $z0 == 0 goto label3;

        $b2 = 1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($b2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $b2 = 0;

        goto label2;

     label4:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label5:
        return;
    }

    public final void writeBundle(android.os.Bundle)
    {
        android.os.Parcel $r0, $r2;
        android.os.Bundle $r1;
        int $i0, $i1, $i2;
        java.util.Map $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Bundle;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $r2 = $r1.<android.os.Bundle: android.os.Parcel mParcelledData>;

        if $r2 == null goto label2;

        $r2 = $r1.<android.os.Bundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r2.<android.os.Parcel: int dataSize()>();

        $r2 = $r1.<android.os.Bundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r0.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r2, 0, $i0);

        return;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        $i1 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1279544898);

        $r3 = $r1.<android.os.Bundle: java.util.Map mMap>;

        specialinvoke $r0.<android.os.Parcel: void writeMapInternal(java.util.Map)>($r3);

        $i0 = virtualinvoke $r0.<android.os.Parcel: int dataPosition()>();

        $i2 = $i1 - 4;

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i2);

        $i1 = $i0 - $i1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke $r0.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;
    }

    public final void writeByte(byte)
    {
        android.os.Parcel $r0;
        byte $b0;

        $r0 := @this: android.os.Parcel;

        $b0 := @parameter0: byte;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($b0);

        return;
    }

    public final void writeByteArray(byte[])
    {
        android.os.Parcel $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeByteArray(byte[],int,int)>($r1, 0, $i0);

        return;

     label2:
        $i0 = 0;

        goto label1;
    }

    public final void writeByteArray(byte[], int, int)
    {
        android.os.Parcel $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i3 = lengthof $r1;

        $i2 = $i0 + $i1;

        if $i3 < $i2 goto label2;

        if $i1 < 0 goto label2;

        if $i0 >= 0 goto label3;

     label2:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label3:
        specialinvoke $r0.<android.os.Parcel: void writeNative(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final void writeCharArray(char[])
    {
        android.os.Parcel $r0;
        char[] $r1;
        int $i0, $i1;
        char $c2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: char[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($c2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final native void writeDouble(double);

    public final void writeDoubleArray(double[])
    {
        android.os.Parcel $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: double[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeDouble(double)>($d0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final void writeException(java.lang.Exception)
    {
        android.os.Parcel $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        byte $b0;
        boolean $z0;
        java.lang.RuntimeException $r3;

        $r0 := @this: android.os.Parcel;

        $r2 := @parameter0: java.lang.Exception;

        $b0 = 0;

        $z0 = $r2 instanceof java.lang.SecurityException;

        if $z0 == 0 goto label2;

        $b0 = -1;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($b0);

        if $b0 != 0 goto label7;

        $z0 = $r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label6;

        $r3 = (java.lang.RuntimeException) $r2;

        throw $r3;

     label2:
        $z0 = $r2 instanceof android.os.BadParcelableException;

        if $z0 == 0 goto label3;

        $b0 = -2;

        goto label1;

     label3:
        $z0 = $r2 instanceof java.lang.IllegalArgumentException;

        if $z0 == 0 goto label4;

        $b0 = -3;

        goto label1;

     label4:
        $z0 = $r2 instanceof java.lang.NullPointerException;

        if $z0 == 0 goto label5;

        $b0 = -4;

        goto label1;

     label5:
        $z0 = $r2 instanceof java.lang.IllegalStateException;

        if $z0 == 0 goto label1;

        $b0 = -5;

        goto label1;

     label6:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label7:
        $r1 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        return;
    }

    public final native void writeFileDescriptor(java.io.FileDescriptor);

    public final native void writeFloat(float);

    public final void writeFloatArray(float[])
    {
        android.os.Parcel $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: float[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeFloat(float)>($f0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final native void writeInt(int);

    public final void writeIntArray(int[])
    {
        android.os.Parcel $r0;
        int[] $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: int[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final native void writeInterfaceToken(java.lang.String);

    public final void writeList(java.util.List)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke $r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final native void writeLong(long);

    public final void writeLongArray(long[])
    {
        android.os.Parcel $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: long[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeLong(long)>($l2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final void writeMap(java.util.Map)
    {
        android.os.Parcel $r0;
        java.util.Map $r1;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.Map;

        specialinvoke $r0.<android.os.Parcel: void writeMapInternal(java.util.Map)>($r1);

        return;
    }

    public final void writeNoException()
    {
        android.os.Parcel $r0;

        $r0 := @this: android.os.Parcel;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        return;
    }

    public final void writeParcelable(android.os.Parcelable, int)
    {
        android.os.Parcel $r0;
        android.os.Parcelable $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Parcelable;

        $i0 := @parameter1: int;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        interfaceinvoke $r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>($r0, $i0);

        return;
    }

    public final void writeParcelableArray(android.os.Parcelable[], int)
    {
        android.os.Parcel $r0;
        android.os.Parcelable[] $r1;
        int $i0, $i1, $i2;
        android.os.Parcelable $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Parcelable[];

        $i0 := @parameter1: int;

        if $r1 == null goto label2;

        $i1 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r2 = $r1[$i2];

        virtualinvoke $r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, $i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final void writeSerializable(java.io.Serializable)
    {
        android.os.Parcel $r0;
        java.io.Serializable $r1;
        java.io.ByteArrayOutputStream $r2;
        java.io.ObjectOutputStream $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        byte[] $r6;
        java.io.IOException $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.io.Serializable;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = new java.io.ObjectOutputStream;

     label2:
        specialinvoke $r3.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r2);

        virtualinvoke $r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.io.ObjectOutputStream: void close()>();

        $r6 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r0.<android.os.Parcel: void writeByteArray(byte[])>($r6);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered IOException writing serializable object (name = ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r7);

        throw $r8;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public final void writeSparseArray(android.util.SparseArray)
    {
        android.os.Parcel $r0;
        android.util.SparseArray $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.util.SparseArray;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $i2 = virtualinvoke $r1.<android.util.SparseArray: int keyAt(int)>($i1);

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i2);

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        virtualinvoke $r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final void writeSparseBooleanArray(android.util.SparseBooleanArray)
    {
        android.os.Parcel $r0;
        android.util.SparseBooleanArray $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        byte $b3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.util.SparseBooleanArray;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = virtualinvoke $r1.<android.util.SparseBooleanArray: int size()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $i2 = virtualinvoke $r1.<android.util.SparseBooleanArray: int keyAt(int)>($i1);

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i2);

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean valueAt(int)>($i1);

        if $z0 == 0 goto label4;

        $z0 = 1;

     label3:
        $b3 = (byte) $z0;

        virtualinvoke $r0.<android.os.Parcel: void writeByte(byte)>($b3);

        $i1 = $i1 + 1;

        goto label2;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        return;
    }

    public final native void writeString(java.lang.String);

    public final void writeStringArray(java.lang.String[])
    {
        android.os.Parcel $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.String[];

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label3:
        return;
    }

    public final void writeStringList(java.util.List)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (java.lang.String) $r2;

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public final native void writeStrongBinder(android.os.IBinder);

    public final void writeStrongInterface(android.os.IInterface)
    {
        android.os.Parcel $r0;
        android.os.IInterface $r1;
        android.os.IBinder $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.IInterface;

        if $r1 != null goto label2;

        $r2 = null;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        return;

     label2:
        $r2 = interfaceinvoke $r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        goto label1;
    }

    public final void writeTypedArray(android.os.Parcelable[], int)
    {
        android.os.Parcel $r0;
        android.os.Parcelable[] $r1;
        int $i0, $i1, $i2;
        android.os.Parcelable $r2;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: android.os.Parcelable[];

        $i0 := @parameter1: int;

        if $r1 == null goto label4;

        $i1 = lengthof $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $r2 = $r1[$i2];

        if $r2 == null goto label3;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke $r2.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>($r0, $i0);

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        goto label2;

     label4:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label5:
        return;
    }

    public final void writeTypedList(java.util.List)
    {
        android.os.Parcel $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        android.os.Parcelable $r3;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.util.List;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $i1 >= $i0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (android.os.Parcelable) $r2;

        if $r3 == null goto label4;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke $r3.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>($r0, 0);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        goto label3;

     label5:
        return;
    }

    public final void writeValue(java.lang.Object)
    {
        android.os.Parcel $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r2;
        java.lang.Integer $r3;
        int $i0;
        java.util.Map $r4;
        android.os.Bundle $r5;
        android.os.Parcelable $r6;
        java.lang.Short $r7;
        java.lang.Long $r8;
        long $l1;
        java.lang.Float $r9;
        float $f0;
        java.lang.Double $r10;
        double $d0;
        java.lang.Boolean $r11;
        byte $b2;
        java.lang.CharSequence $r12;
        java.util.List $r13;
        android.util.SparseArray $r14;
        boolean[] $r15;
        byte[] $r16;
        java.lang.String[] $r17;
        android.os.IBinder $r18;
        android.os.Parcelable[] $r19;
        java.lang.Object[] $r20;
        int[] $r21;
        long[] $r22;
        java.lang.Byte $r23;
        java.io.Serializable $r24;
        java.lang.RuntimeException $r25;
        java.lang.StringBuilder $r26;

        $r0 := @this: android.os.Parcel;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label01:
        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        $r2 = (java.lang.String) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        return;

     label02:
        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label03;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1);

        $r3 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        return;

     label03:
        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label04;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(2);

        $r4 = (java.util.Map) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeMap(java.util.Map)>($r4);

        return;

     label04:
        $z0 = $r1 instanceof android.os.Bundle;

        if $z0 == 0 goto label05;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(3);

        $r5 = (android.os.Bundle) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r5);

        return;

     label05:
        $z0 = $r1 instanceof android.os.Parcelable;

        if $z0 == 0 goto label06;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(4);

        $r6 = (android.os.Parcelable) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, 0);

        return;

     label06:
        $z0 = $r1 instanceof java.lang.Short;

        if $z0 == 0 goto label07;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(5);

        $r7 = (java.lang.Short) $r1;

        $i0 = virtualinvoke $r7.<java.lang.Short: int intValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($i0);

        return;

     label07:
        $z0 = $r1 instanceof java.lang.Long;

        if $z0 == 0 goto label08;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(6);

        $r8 = (java.lang.Long) $r1;

        $l1 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeLong(long)>($l1);

        return;

     label08:
        $z0 = $r1 instanceof java.lang.Float;

        if $z0 == 0 goto label09;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(7);

        $r9 = (java.lang.Float) $r1;

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeFloat(float)>($f0);

        return;

     label09:
        $z0 = $r1 instanceof java.lang.Double;

        if $z0 == 0 goto label10;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(8);

        $r10 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeDouble(double)>($d0);

        return;

     label10:
        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label13;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(9);

        $r11 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label12;

        $b2 = 1;

     label11:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($b2);

        return;

     label12:
        $b2 = 0;

        goto label11;

     label13:
        $z0 = $r1 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label14;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(10);

        $r12 = (java.lang.CharSequence) $r1;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r12, $r0, 0);

        return;

     label14:
        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label15;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(11);

        $r13 = (java.util.List) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeList(java.util.List)>($r13);

        return;

     label15:
        $z0 = $r1 instanceof android.util.SparseArray;

        if $z0 == 0 goto label16;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(12);

        $r14 = (android.util.SparseArray) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>($r14);

        return;

     label16:
        $z0 = $r1 instanceof boolean[];

        if $z0 == 0 goto label17;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(23);

        $r15 = (boolean[]) $r1;

        $r15 = (boolean[]) $r15;

        virtualinvoke $r0.<android.os.Parcel: void writeBooleanArray(boolean[])>($r15);

        return;

     label17:
        $z0 = $r1 instanceof byte[];

        if $z0 == 0 goto label18;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(13);

        $r16 = (byte[]) $r1;

        $r16 = (byte[]) $r16;

        virtualinvoke $r0.<android.os.Parcel: void writeByteArray(byte[])>($r16);

        return;

     label18:
        $z0 = $r1 instanceof java.lang.String[];

        if $z0 == 0 goto label19;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(14);

        $r17 = (java.lang.String[]) $r1;

        $r17 = (java.lang.String[]) $r17;

        virtualinvoke $r0.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r17);

        return;

     label19:
        $z0 = $r1 instanceof android.os.IBinder;

        if $z0 == 0 goto label20;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(15);

        $r18 = (android.os.IBinder) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r18);

        return;

     label20:
        $z0 = $r1 instanceof android.os.Parcelable[];

        if $z0 == 0 goto label21;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(16);

        $r19 = (android.os.Parcelable[]) $r1;

        $r19 = (android.os.Parcelable[]) $r19;

        virtualinvoke $r0.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>($r19, 0);

        return;

     label21:
        $z0 = $r1 instanceof java.lang.Object[];

        if $z0 == 0 goto label22;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(17);

        $r20 = (java.lang.Object[]) $r1;

        $r20 = (java.lang.Object[]) $r20;

        virtualinvoke $r0.<android.os.Parcel: void writeArray(java.lang.Object[])>($r20);

        return;

     label22:
        $z0 = $r1 instanceof int[];

        if $z0 == 0 goto label23;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(18);

        $r21 = (int[]) $r1;

        $r21 = (int[]) $r21;

        virtualinvoke $r0.<android.os.Parcel: void writeIntArray(int[])>($r21);

        return;

     label23:
        $z0 = $r1 instanceof long[];

        if $z0 == 0 goto label24;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(19);

        $r22 = (long[]) $r1;

        $r22 = (long[]) $r22;

        virtualinvoke $r0.<android.os.Parcel: void writeLongArray(long[])>($r22);

        return;

     label24:
        $z0 = $r1 instanceof java.lang.Byte;

        if $z0 == 0 goto label25;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(20);

        $r23 = (java.lang.Byte) $r1;

        $b2 = virtualinvoke $r23.<java.lang.Byte: byte byteValue()>();

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($b2);

        return;

     label25:
        $z0 = $r1 instanceof java.io.Serializable;

        if $z0 == 0 goto label26;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(21);

        $r24 = (java.io.Serializable) $r1;

        virtualinvoke $r0.<android.os.Parcel: void writeSerializable(java.io.Serializable)>($r24);

        return;

     label26:
        $r25 = new java.lang.RuntimeException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel: unable to marshal value ");

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r25;
    }
}
