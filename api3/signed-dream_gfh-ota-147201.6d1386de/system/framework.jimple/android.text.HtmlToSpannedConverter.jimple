class android.text.HtmlToSpannedConverter extends java.lang.Object implements org.xml.sax.ContentHandler
{
    private static final float[] HEADER_SIZES;
    private android.text.Html$ImageGetter mImageGetter;
    private org.xml.sax.XMLReader mReader;
    private java.lang.String mSource;
    private android.text.SpannableStringBuilder mSpannableStringBuilder;
    private android.text.Html$TagHandler mTagHandler;

    static void <clinit>()
    {
        float[] $r0;

        $r0 = newarray (float)[6];

        $r0[0] = 1.5F;

        $r0[1] = 1.4F;

        $r0[2] = 1.3F;

        $r0[3] = 1.2F;

        $r0[4] = 1.1F;

        $r0[5] = 1.0F;

        <android.text.HtmlToSpannedConverter: float[] HEADER_SIZES> = $r0;

        return;
    }

    public void <init>(java.lang.String, android.text.Html$ImageGetter, android.text.Html$TagHandler, org.ccil.cowan.tagsoup.Parser)
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1;
        android.text.Html$ImageGetter $r2;
        android.text.Html$TagHandler $r3;
        org.ccil.cowan.tagsoup.Parser $r4;
        android.text.SpannableStringBuilder r6;
        org.xml.sax.XMLReader r7;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.text.Html$ImageGetter;

        $r3 := @parameter2: android.text.Html$TagHandler;

        $r4 := @parameter3: org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.HtmlToSpannedConverter: java.lang.String mSource> = $r1;

        r6 = new android.text.SpannableStringBuilder;

        specialinvoke r6.<android.text.SpannableStringBuilder: void <init>()>();

        $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder> = r6;

        $r0.<android.text.HtmlToSpannedConverter: android.text.Html$ImageGetter mImageGetter> = $r2;

        $r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler> = $r3;

        r7 = (org.xml.sax.XMLReader) $r4;

        $r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader> = r7;

        return;
    }

    private static void end(android.text.SpannableStringBuilder, java.lang.Class, java.lang.Object)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Class $r1;
        java.lang.Object $r2, $r3;
        int $i0, $i1;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $r1 := @parameter1: java.lang.Class;

        $r2 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r3 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>($r0, $r1);

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r3);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r3);

        if $i1 == $i0 goto label1;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r2, $i1, $i0, 33);

        return;

     label1:
        return;
    }

    private static void endA(android.text.SpannableStringBuilder)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        android.text.HtmlToSpannedConverter$Href $r2;
        java.lang.String $r3;
        android.text.style.URLSpan $r4;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>($r0, class "android/text/HtmlToSpannedConverter$Href");

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r1);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r1);

        if $i1 == $i0 goto label1;

        $r2 = (android.text.HtmlToSpannedConverter$Href) $r1;

        $r3 = $r2.<android.text.HtmlToSpannedConverter$Href: java.lang.String mHref>;

        if $r3 == null goto label2;

        $r4 = new android.text.style.URLSpan;

        $r3 = $r2.<android.text.HtmlToSpannedConverter$Href: java.lang.String mHref>;

        specialinvoke $r4.<android.text.style.URLSpan: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r4, $i1, $i0, 33);

        return;

     label1:
        return;

     label2:
        return;
    }

    private static void endFont(android.text.SpannableStringBuilder)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        android.text.HtmlToSpannedConverter$Font $r2;
        java.lang.String $r3;
        boolean $z0;
        android.text.style.ForegroundColorSpan $r4;
        android.text.style.TypefaceSpan $r5;
        java.lang.NumberFormatException $r6;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>($r0, class "android/text/HtmlToSpannedConverter$Font");

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r1);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r1);

        if $i1 == $i0 goto label22;

        $r2 = (android.text.HtmlToSpannedConverter$Font) $r1;

        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        if $r3 == null goto label02;

        $i2 = -1;

        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("aqua");

        if $z0 == 0 goto label03;

        $i2 = 65535;

     label01:
        if $i2 == -1 goto label02;

        $r4 = new android.text.style.ForegroundColorSpan;

        $i2 = -16777216 | $i2;

        specialinvoke $r4.<android.text.style.ForegroundColorSpan: void <init>(int)>($i2);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r4, $i1, $i0, 33);

     label02:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mFace>;

        if $r3 == null goto label23;

        $r5 = new android.text.style.TypefaceSpan;

        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mFace>;

        specialinvoke $r5.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r5, $i1, $i0, 33);

        return;

     label03:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("black");

        if $z0 == 0 goto label04;

        $i2 = 0;

        goto label01;

     label04:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("blue");

        if $z0 == 0 goto label05;

        $i2 = 255;

        goto label01;

     label05:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("fuchsia");

        if $z0 == 0 goto label06;

        $i2 = 16711935;

        goto label01;

     label06:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("green");

        if $z0 == 0 goto label07;

        $i2 = 32768;

        goto label01;

     label07:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("grey");

        if $z0 == 0 goto label08;

        $i2 = 8421504;

        goto label01;

     label08:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lime");

        if $z0 == 0 goto label09;

        $i2 = 65280;

        goto label01;

     label09:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("maroon");

        if $z0 == 0 goto label10;

        $i2 = 8388608;

        goto label01;

     label10:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("navy");

        if $z0 == 0 goto label11;

        $i2 = 128;

        goto label01;

     label11:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("olive");

        if $z0 == 0 goto label12;

        $i2 = 8421376;

        goto label01;

     label12:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("purple");

        if $z0 == 0 goto label13;

        $i2 = 8388736;

        goto label01;

     label13:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("red");

        if $z0 == 0 goto label14;

        $i2 = 16711680;

        goto label01;

     label14:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("silver");

        if $z0 == 0 goto label15;

        $i2 = 12632256;

        goto label01;

     label15:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("teal");

        if $z0 == 0 goto label16;

        $i2 = 32896;

        goto label01;

     label16:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("white");

        if $z0 == 0 goto label17;

        $i2 = 16777215;

        goto label01;

     label17:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yellow");

        if $z0 == 0 goto label18;

        $i2 = 16776960;

        goto label01;

     label18:
        $r3 = $r2.<android.text.HtmlToSpannedConverter$Font: java.lang.String mColor>;

     label19:
        $i2 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>($r3, -1);

     label20:
        goto label01;

     label21:
        $r6 := @caughtexception;

        goto label01;

     label22:
        return;

     label23:
        return;

        catch java.lang.NumberFormatException from label19 to label20 with label21;
    }

    private static void endHeader(android.text.SpannableStringBuilder)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        char $c3;
        android.text.HtmlToSpannedConverter$Header $r2;
        android.text.style.RelativeSizeSpan $r3;
        float[] $r4;
        float $f0;
        android.text.style.StyleSpan $r5;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r1 = staticinvoke <android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)>($r0, class "android/text/HtmlToSpannedConverter$Header");

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r1);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r1);

     label1:
        if $i0 <= $i1 goto label2;

        $i2 = $i0 - 1;

        $c3 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i2);

        if $c3 != 10 goto label2;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        if $i1 == $i0 goto label3;

        $r2 = (android.text.HtmlToSpannedConverter$Header) $r1;

        $r3 = new android.text.style.RelativeSizeSpan;

        $r4 = <android.text.HtmlToSpannedConverter: float[] HEADER_SIZES>;

        $i2 = staticinvoke <android.text.HtmlToSpannedConverter$Header: int access$900(android.text.HtmlToSpannedConverter$Header)>($r2);

        $f0 = $r4[$i2];

        specialinvoke $r3.<android.text.style.RelativeSizeSpan: void <init>(float)>($f0);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, $i1, $i0, 33);

        $r5 = new android.text.style.StyleSpan;

        specialinvoke $r5.<android.text.style.StyleSpan: void <init>(int)>(1);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r5, $i1, $i0, 33);

        return;

     label3:
        return;
    }

    private static java.lang.Object getLast(android.text.Spanned, java.lang.Class)
    {
        android.text.Spanned $r0;
        java.lang.Class $r1;
        int $i0;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: android.text.Spanned;

        $r1 := @parameter1: java.lang.Class;

        $i0 = interfaceinvoke $r0.<android.text.Spanned: int length()>();

        $r2 = interfaceinvoke $r0.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, $r1);

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i0 = lengthof $r2;

        $i0 = $i0 - 1;

        $r3 = $r2[$i0];

        return $r3;
    }

    private static void handleBr(android.text.SpannableStringBuilder)
    {
        android.text.SpannableStringBuilder $r0;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");

        return;
    }

    private void handleEndTag(java.lang.String)
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1;
        boolean $z0;
        android.text.SpannableStringBuilder $r2;
        android.text.style.StyleSpan $r3;
        android.text.style.RelativeSizeSpan $r4;
        android.text.style.QuoteSpan $r5;
        android.text.style.TypefaceSpan $r6;
        android.text.style.UnderlineSpan $r7;
        android.text.style.SuperscriptSpan $r8;
        android.text.style.SubscriptSpan $r9;
        int $i0;
        char $c1;
        android.text.Html$TagHandler $r10;
        org.xml.sax.XMLReader $r11;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("br");

        if $z0 == 0 goto label01;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleBr(android.text.SpannableStringBuilder)>($r2);

        return;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("p");

        if $z0 == 0 goto label02;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r2);

        return;

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("div");

        if $z0 == 0 goto label03;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r2);

        return;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("em");

        if $z0 == 0 goto label04;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = new android.text.style.StyleSpan;

        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(1);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Bold", $r3);

        return;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("b");

        if $z0 == 0 goto label05;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = new android.text.style.StyleSpan;

        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(1);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Bold", $r3);

        return;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("strong");

        if $z0 == 0 goto label06;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = new android.text.style.StyleSpan;

        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Italic", $r3);

        return;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cite");

        if $z0 == 0 goto label07;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = new android.text.style.StyleSpan;

        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Italic", $r3);

        return;

     label07:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dfn");

        if $z0 == 0 goto label08;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = new android.text.style.StyleSpan;

        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Italic", $r3);

        return;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("i");

        if $z0 == 0 goto label09;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r3 = new android.text.style.StyleSpan;

        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(2);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Italic", $r3);

        return;

     label09:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("big");

        if $z0 == 0 goto label10;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r4 = new android.text.style.RelativeSizeSpan;

        specialinvoke $r4.<android.text.style.RelativeSizeSpan: void <init>(float)>(1.25F);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Big", $r4);

        return;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("small");

        if $z0 == 0 goto label11;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r4 = new android.text.style.RelativeSizeSpan;

        specialinvoke $r4.<android.text.style.RelativeSizeSpan: void <init>(float)>(0.8F);

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Small", $r4);

        return;

     label11:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("font");

        if $z0 == 0 goto label12;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endFont(android.text.SpannableStringBuilder)>($r2);

        return;

     label12:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("blockquote");

        if $z0 == 0 goto label13;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r2);

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r5 = new android.text.style.QuoteSpan;

        specialinvoke $r5.<android.text.style.QuoteSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Blockquote", $r5);

        return;

     label13:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tt");

        if $z0 == 0 goto label14;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r6 = new android.text.style.TypefaceSpan;

        specialinvoke $r6.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("monospace");

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Monospace", $r6);

        return;

     label14:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("a");

        if $z0 == 0 goto label15;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endA(android.text.SpannableStringBuilder)>($r2);

        return;

     label15:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("u");

        if $z0 == 0 goto label16;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r7 = new android.text.style.UnderlineSpan;

        specialinvoke $r7.<android.text.style.UnderlineSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Underline", $r7);

        return;

     label16:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sup");

        if $z0 == 0 goto label17;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = new android.text.style.SuperscriptSpan;

        specialinvoke $r8.<android.text.style.SuperscriptSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Super", $r8);

        return;

     label17:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sub");

        if $z0 == 0 goto label18;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r9 = new android.text.style.SubscriptSpan;

        specialinvoke $r9.<android.text.style.SubscriptSpan: void <init>()>();

        staticinvoke <android.text.HtmlToSpannedConverter: void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object)>($r2, class "android/text/HtmlToSpannedConverter$Sub", $r9);

        return;

     label18:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 2 goto label19;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        if $c1 != 104 goto label19;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        if $c1 < 49 goto label19;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        if $c1 > 54 goto label19;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r2);

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void endHeader(android.text.SpannableStringBuilder)>($r2);

        return;

     label19:
        $r10 = $r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler>;

        if $r10 == null goto label20;

        $r10 = $r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler>;

        $r2 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r11 = $r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        interfaceinvoke $r10.<android.text.Html$TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>(0, $r1, $r2, $r11);

        return;

     label20:
        return;
    }

    private static void handleP(android.text.SpannableStringBuilder)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        if $i0 < 1 goto label2;

        $i1 = $i0 - 1;

        $c2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i1);

        if $c2 != 10 goto label2;

        if $i0 < 2 goto label1;

        $i0 = $i0 - 2;

        $c2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i0);

        if $c2 != 10 goto label1;

        return;

     label1:
        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");

        return;

     label2:
        if $i0 == 0 goto label3;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n\n");

        return;

     label3:
        return;
    }

    private void handleStartTag(java.lang.String, org.xml.sax.Attributes)
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1;
        org.xml.sax.Attributes $r2;
        boolean $z0;
        android.text.SpannableStringBuilder $r3;
        android.text.HtmlToSpannedConverter$Bold $r4;
        android.text.HtmlToSpannedConverter$Italic $r5;
        android.text.HtmlToSpannedConverter$Big $r6;
        android.text.HtmlToSpannedConverter$Small $r7;
        android.text.HtmlToSpannedConverter$Blockquote $r8;
        android.text.HtmlToSpannedConverter$Monospace $r9;
        android.text.HtmlToSpannedConverter$Underline $r10;
        android.text.HtmlToSpannedConverter$Super $r11;
        android.text.HtmlToSpannedConverter$Sub $r12;
        int $i0;
        char $c1;
        android.text.HtmlToSpannedConverter$Header $r13;
        android.text.Html$ImageGetter $r14;
        android.text.Html$TagHandler $r15;
        org.xml.sax.XMLReader $r16;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.xml.sax.Attributes;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("br");

        if $z0 == 0 goto label01;

        return;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("p");

        if $z0 == 0 goto label02;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r3);

        return;

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("div");

        if $z0 == 0 goto label03;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r3);

        return;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("em");

        if $z0 == 0 goto label04;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r4 = new android.text.HtmlToSpannedConverter$Bold;

        specialinvoke $r4.<android.text.HtmlToSpannedConverter$Bold: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r4);

        return;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("b");

        if $z0 == 0 goto label05;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r4 = new android.text.HtmlToSpannedConverter$Bold;

        specialinvoke $r4.<android.text.HtmlToSpannedConverter$Bold: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r4);

        return;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("strong");

        if $z0 == 0 goto label06;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r5 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r5.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r5);

        return;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cite");

        if $z0 == 0 goto label07;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r5 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r5.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r5);

        return;

     label07:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dfn");

        if $z0 == 0 goto label08;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r5 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r5.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r5);

        return;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("i");

        if $z0 == 0 goto label09;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r5 = new android.text.HtmlToSpannedConverter$Italic;

        specialinvoke $r5.<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r5);

        return;

     label09:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("big");

        if $z0 == 0 goto label10;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r6 = new android.text.HtmlToSpannedConverter$Big;

        specialinvoke $r6.<android.text.HtmlToSpannedConverter$Big: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r6);

        return;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("small");

        if $z0 == 0 goto label11;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r7 = new android.text.HtmlToSpannedConverter$Small;

        specialinvoke $r7.<android.text.HtmlToSpannedConverter$Small: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r7);

        return;

     label11:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("font");

        if $z0 == 0 goto label12;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void startFont(android.text.SpannableStringBuilder,org.xml.sax.Attributes)>($r3, $r2);

        return;

     label12:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("blockquote");

        if $z0 == 0 goto label13;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r3);

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = new android.text.HtmlToSpannedConverter$Blockquote;

        specialinvoke $r8.<android.text.HtmlToSpannedConverter$Blockquote: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r8);

        return;

     label13:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tt");

        if $z0 == 0 goto label14;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r9 = new android.text.HtmlToSpannedConverter$Monospace;

        specialinvoke $r9.<android.text.HtmlToSpannedConverter$Monospace: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r9);

        return;

     label14:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("a");

        if $z0 == 0 goto label15;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void startA(android.text.SpannableStringBuilder,org.xml.sax.Attributes)>($r3, $r2);

        return;

     label15:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("u");

        if $z0 == 0 goto label16;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r10 = new android.text.HtmlToSpannedConverter$Underline;

        specialinvoke $r10.<android.text.HtmlToSpannedConverter$Underline: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r10);

        return;

     label16:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sup");

        if $z0 == 0 goto label17;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r11 = new android.text.HtmlToSpannedConverter$Super;

        specialinvoke $r11.<android.text.HtmlToSpannedConverter$Super: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r11);

        return;

     label17:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sub");

        if $z0 == 0 goto label18;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r12 = new android.text.HtmlToSpannedConverter$Sub;

        specialinvoke $r12.<android.text.HtmlToSpannedConverter$Sub: void <init>(android.text.HtmlToSpannedConverter$1)>(null);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r12);

        return;

     label18:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 2 goto label19;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        if $c1 != 104 goto label19;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        if $c1 < 49 goto label19;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        if $c1 > 54 goto label19;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        staticinvoke <android.text.HtmlToSpannedConverter: void handleP(android.text.SpannableStringBuilder)>($r3);

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r13 = new android.text.HtmlToSpannedConverter$Header;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        $i0 = $c1 - 49;

        specialinvoke $r13.<android.text.HtmlToSpannedConverter$Header: void <init>(int)>($i0);

        staticinvoke <android.text.HtmlToSpannedConverter: void start(android.text.SpannableStringBuilder,java.lang.Object)>($r3, $r13);

        return;

     label19:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("img");

        if $z0 == 0 goto label20;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r14 = $r0.<android.text.HtmlToSpannedConverter: android.text.Html$ImageGetter mImageGetter>;

        staticinvoke <android.text.HtmlToSpannedConverter: void startImg(android.text.SpannableStringBuilder,org.xml.sax.Attributes,android.text.Html$ImageGetter)>($r3, $r2, $r14);

        return;

     label20:
        $r15 = $r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler>;

        if $r15 == null goto label21;

        $r15 = $r0.<android.text.HtmlToSpannedConverter: android.text.Html$TagHandler mTagHandler>;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r16 = $r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        interfaceinvoke $r15.<android.text.Html$TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>(1, $r1, $r3, $r16);

        return;

     label21:
        return;
    }

    private static void start(android.text.SpannableStringBuilder, java.lang.Object)
    {
        android.text.SpannableStringBuilder $r0;
        java.lang.Object $r1;
        int $i0;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r1, $i0, $i0, 17);

        return;
    }

    private static void startA(android.text.SpannableStringBuilder, org.xml.sax.Attributes)
    {
        android.text.SpannableStringBuilder $r0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2;
        int $i0;
        android.text.HtmlToSpannedConverter$Href $r3;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $r1 := @parameter1: org.xml.sax.Attributes;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "href");

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r3 = new android.text.HtmlToSpannedConverter$Href;

        specialinvoke $r3.<android.text.HtmlToSpannedConverter$Href: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, $i0, $i0, 17);

        return;
    }

    private static void startFont(android.text.SpannableStringBuilder, org.xml.sax.Attributes)
    {
        android.text.SpannableStringBuilder $r0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2, $r3;
        int $i0;
        android.text.HtmlToSpannedConverter$Font $r4;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $r1 := @parameter1: org.xml.sax.Attributes;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "color");

        $r3 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "face");

        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        $r4 = new android.text.HtmlToSpannedConverter$Font;

        specialinvoke $r4.<android.text.HtmlToSpannedConverter$Font: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r4, $i0, $i0, 17);

        return;
    }

    private static void startImg(android.text.SpannableStringBuilder, org.xml.sax.Attributes, android.text.Html$ImageGetter)
    {
        android.text.SpannableStringBuilder $r0;
        org.xml.sax.Attributes $r1;
        android.text.Html$ImageGetter $r2;
        java.lang.String $r3;
        android.graphics.drawable.Drawable $r4, $r6;
        android.content.res.Resources $r5;
        int $i0, $i1;
        android.text.style.ImageSpan $r7;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $r1 := @parameter1: org.xml.sax.Attributes;

        $r2 := @parameter2: android.text.Html$ImageGetter;

        $r3 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("", "src");

        $r4 = null;

        if $r2 == null goto label1;

        $r4 = interfaceinvoke $r2.<android.text.Html$ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>($r3);

     label1:
        if $r4 != null goto label2;

        $r5 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302143);

        $r4 = $r6;

        $i0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        $i0 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\ufffc");

        $r7 = new android.text.style.ImageSpan;

        specialinvoke $r7.<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>($r4, $r3);

        $i1 = virtualinvoke $r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke $r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r7, $i0, $i1, 33);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        char[] $r1;
        int $i0, $i1, $i3, $i4;
        char $c2;
        java.lang.StringBuilder $r2;
        android.text.SpannableStringBuilder $r3;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i4 = 0;

     label1:
        if $i4 >= $i1 goto label8;

        $i3 = $i4 + $i0;

        $c2 = $r1[$i3];

        if $c2 == 32 goto label2;

        if $c2 != 10 goto label7;

     label2:
        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i3 != 0 goto label6;

        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i3 = virtualinvoke $r3.<android.text.SpannableStringBuilder: int length()>();

        if $i3 != 0 goto label5;

        $c2 = 10;

     label3:
        if $c2 == 32 goto label4;

        if $c2 == 10 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label4:
        $i4 = $i4 + 1;

        goto label1;

     label5:
        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i3 = $i3 - 1;

        $c2 = virtualinvoke $r3.<android.text.SpannableStringBuilder: char charAt(int)>($i3);

        goto label3;

     label6:
        $i3 = $i3 - 1;

        $c2 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i3);

        goto label3;

     label7:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label4;

     label8:
        $r3 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r2);

        return;
    }

    public android.text.Spanned convert()
    {
        android.text.HtmlToSpannedConverter $r0;
        org.xml.sax.XMLReader $r1;
        org.xml.sax.InputSource $r2;
        java.io.StringReader $r3;
        java.lang.String $r4;
        android.text.SpannableStringBuilder $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        char $c5;
        java.io.IOException $r9;
        java.lang.RuntimeException $r10;
        org.xml.sax.SAXException $r11;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 = $r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r0);

        $r1 = $r0.<android.text.HtmlToSpannedConverter: org.xml.sax.XMLReader mReader>;

        $r2 = new org.xml.sax.InputSource;

        $r3 = new java.io.StringReader;

        $r4 = $r0.<android.text.HtmlToSpannedConverter: java.lang.String mSource>;

     label1:
        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r4);

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r3);

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r2);

     label2:
        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r6 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i0 = virtualinvoke $r6.<android.text.SpannableStringBuilder: int length()>();

        $r7 = virtualinvoke $r5.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/style/ParagraphStyle");

        $i0 = 0;

     label3:
        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label9;

        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = $r7[$i0];

        $i1 = virtualinvoke $r5.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r8);

        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = $r7[$i0];

        $i2 = virtualinvoke $r5.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>($r8);

        $i3 = $i2;

        $i4 = $i2 - 2;

        if $i4 < 0 goto label4;

        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i4 = $i2 - 1;

        $c5 = virtualinvoke $r5.<android.text.SpannableStringBuilder: char charAt(int)>($i4);

        if $c5 != 10 goto label4;

        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $i4 = $i2 - 2;

        $c5 = virtualinvoke $r5.<android.text.SpannableStringBuilder: char charAt(int)>($i4);

        if $c5 != 10 goto label4;

        $i3 = $i2 + -1;

     label4:
        if $i3 != $i1 goto label8;

        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = $r7[$i0];

        virtualinvoke $r5.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r8);

     label5:
        $i0 = $i0 + 1;

        goto label3;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label7:
        $r11 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r10;

     label8:
        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        $r8 = $r7[$i0];

        virtualinvoke $r5.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r8, $i1, $i3, 51);

        goto label5;

     label9:
        $r5 = $r0.<android.text.HtmlToSpannedConverter: android.text.SpannableStringBuilder mSpannableStringBuilder>;

        return $r5;

        catch java.io.IOException from label1 to label2 with label6;
        catch org.xml.sax.SAXException from label1 to label2 with label7;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1, $r2, $r3;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke $r0.<android.text.HtmlToSpannedConverter: void handleEndTag(java.lang.String)>($r2);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        char[] $r1;
        int $i0, $i1;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        android.text.HtmlToSpannedConverter $r0;
        org.xml.sax.Locator $r1;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1, $r2, $r3;
        org.xml.sax.Attributes $r4;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        specialinvoke $r0.<android.text.HtmlToSpannedConverter: void handleStartTag(java.lang.String,org.xml.sax.Attributes)>($r2, $r4);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        android.text.HtmlToSpannedConverter $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: android.text.HtmlToSpannedConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        return;
    }
}
