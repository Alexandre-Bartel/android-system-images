public abstract class android.text.Layout extends java.lang.Object
{
    static final android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT;
    static final android.text.Layout$Directions DIRS_ALL_RIGHT_TO_LEFT;
    public static final int DIR_LEFT_TO_RIGHT;
    public static final int DIR_RIGHT_TO_LEFT;
    static final android.emoji.EmojiFactory EMOJI_FACTORY;
    static final int MAX_EMOJI;
    static final int MIN_EMOJI;
    private static final int TAB_INCREMENT;
    private static android.graphics.Rect sTempRect;
    private android.text.Layout$Alignment mAlignment;
    private android.graphics.RectF mEmojiRect;
    private android.text.TextPaint mPaint;
    private float mSpacingAdd;
    private float mSpacingMult;
    private boolean mSpannedText;
    private java.lang.CharSequence mText;
    private int mWidth;
    android.text.TextPaint mWorkPaint;

    static void <clinit>()
    {
        android.emoji.EmojiFactory $r0;
        int $i0;
        android.graphics.Rect $r1;
        android.text.Layout$Directions $r2;
        short[] $r3;

        <android.text.Layout: int TAB_INCREMENT> = 20;

        <android.text.Layout: int DIR_RIGHT_TO_LEFT> = -1;

        <android.text.Layout: int DIR_LEFT_TO_RIGHT> = 1;

        $r0 = staticinvoke <android.emoji.EmojiFactory: android.emoji.EmojiFactory newAvailableInstance()>();

        <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY> = $r0;

        $r0 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        if $r0 == null goto label2;

        $r0 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        $i0 = virtualinvoke $r0.<android.emoji.EmojiFactory: int getMinimumAndroidPua()>();

        <android.text.Layout: int MIN_EMOJI> = $i0;

        $r0 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        $i0 = virtualinvoke $r0.<android.emoji.EmojiFactory: int getMaximumAndroidPua()>();

        <android.text.Layout: int MAX_EMOJI> = $i0;

     label1:
        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        <android.text.Layout: android.graphics.Rect sTempRect> = $r1;

        $r2 = new android.text.Layout$Directions;

        $r3 = newarray (short)[1];

        $r3[0] = 32767;

        specialinvoke $r2.<android.text.Layout$Directions: void <init>(short[])>($r3);

        <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT> = $r2;

        $r2 = new android.text.Layout$Directions;

        $r3 = newarray (short)[2];

        $r3[0] = 0;

        $r3[1] = 32767;

        specialinvoke $r2.<android.text.Layout$Directions: void <init>(short[])>($r3);

        <android.text.Layout: android.text.Layout$Directions DIRS_ALL_RIGHT_TO_LEFT> = $r2;

        return;

     label2:
        <android.text.Layout: int MIN_EMOJI> = -1;

        <android.text.Layout: int MAX_EMOJI> = -1;

        goto label1;

        return;
    }

    protected void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float)
    {
        android.text.Layout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0;
        android.text.Layout$Alignment $r3, $r4;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0;

        $r0 := @this: android.text.Layout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment> = $r4;

        if $i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Layout: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r0.<android.text.Layout: java.lang.CharSequence mText> = $r1;

        $r0.<android.text.Layout: android.text.TextPaint mPaint> = $r2;

        $r2 = new android.text.TextPaint;

        specialinvoke $r2.<android.text.TextPaint: void <init>()>();

        $r0.<android.text.Layout: android.text.TextPaint mWorkPaint> = $r2;

        $r0.<android.text.Layout: int mWidth> = $i0;

        $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment> = $r3;

        $r0.<android.text.Layout: float mSpacingMult> = $f0;

        $r0.<android.text.Layout: float mSpacingAdd> = $f1;

        $z0 = $r1 instanceof android.text.Spanned;

        $r0.<android.text.Layout: boolean mSpannedText> = $z0;

        return;
    }

    static void access$100(android.text.Layout, int, int, int, char[], int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;

        $r0 := @parameter0: android.text.Layout;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: char[];

        $i3 := @parameter5: int;

        specialinvoke $r0.<android.text.Layout: void ellipsize(int,int,int,char[],int)>($i0, $i1, $i2, $r1, $i3);

        return;
    }

    private void addSelection(int, int, int, int, int, android.graphics.Path)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11;
        android.graphics.Path $r1;
        android.graphics.Path$Direction $r2;
        android.text.Layout$Directions $r3;
        java.lang.CharSequence $r4;
        char $c9;
        short[] $r5;
        short $s10;
        float $f0, $f1, $f2, $f3;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $r1 := @parameter5: android.graphics.Path;

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        $i6 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i0);

        $i7 = $i6;

        $r3 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i0);

        if $i6 <= $i5 goto label1;

        $r4 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i8 = $i6 - 1;

        $c9 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i8);

        if $c9 != 10 goto label1;

        $i7 = $i6 + -1;

     label1:
        $i8 = $i5;

        $i5 = 0;

     label2:
        $r5 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r3);

        $i6 = lengthof $r5;

        if $i5 >= $i6 goto label5;

        $r5 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r3);

        $s10 = $r5[$i5];

        $i6 = $i8 + $s10;

        if $i6 <= $i7 goto label3;

        $i6 = $i7;

     label3:
        if $i1 > $i6 goto label4;

        if $i2 < $i8 goto label4;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i8);

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i6);

        if $i8 == $i11 goto label4;

        $f0 = specialinvoke $r0.<android.text.Layout: float getHorizontal(int,boolean,boolean,int)>($i8, 0, 0, $i0);

        $f1 = specialinvoke $r0.<android.text.Layout: float getHorizontal(int,boolean,boolean,int)>($i11, 1, 0, $i0);

        $f2 = (float) $i3;

        $f3 = (float) $i4;

        $r2 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r1.<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>($f0, $f2, $f1, $f3, $r2);

     label4:
        $i8 = $i6;

        $i5 = $i5 + 1;

        goto label2;

     label5:
        return;
    }

    private void drawText(android.graphics.Canvas, java.lang.CharSequence, int, int, int, android.text.Layout$Directions, float, int, int, int, android.text.TextPaint, android.text.TextPaint, boolean, java.lang.Object[])
    {
        android.text.Layout $r0;
        android.graphics.Canvas $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13;
        android.text.Layout$Directions $r3, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.text.TextPaint $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r6;
        char[] $r8, $r10;
        short[] $r9;
        short $s9;
        char $c11;
        android.emoji.EmojiFactory $r11;
        android.graphics.Bitmap $r12;
        android.graphics.RectF $r13;

        $r0 := @this: android.text.Layout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r3 := @parameter5: android.text.Layout$Directions;

        $f0 := @parameter6: float;

        $i3 := @parameter7: int;

        $i4 := @parameter8: int;

        $i5 := @parameter9: int;

        $r4 := @parameter10: android.text.TextPaint;

        $r5 := @parameter11: android.text.TextPaint;

        $z0 := @parameter12: boolean;

        $r6 := @parameter13: java.lang.Object[];

        if $z0 != 0 goto label11;

        $r7 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r3 != $r7 goto label01;

        staticinvoke <android.text.Styled: float drawText(android.graphics.Canvas,java.lang.CharSequence,int,int,int,boolean,float,int,int,int,android.text.TextPaint,android.text.TextPaint,boolean)>($r1, $r2, $i0, $i1, $i2, 0, $f0, $i3, $i4, $i5, $r4, $r5, 0);

        return;

     label01:
        $r8 = null;

     label02:
        $f2 = 0.0F;

        $i6 = 0;

        $i7 = 0;

     label03:
        $r9 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r3);

        $i8 = lengthof $r9;

        if $i7 >= $i8 goto label22;

        $r9 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r3);

        $s9 = $r9[$i7];

        $i8 = $i6 + $s9;

        $i10 = $i1 - $i0;

        if $i8 <= $i10 goto label04;

        $i8 = $i1 - $i0;

     label04:
        $i10 = $i6;

        if $z0 == 0 goto label12;

     label05:
        if $i6 > $i8 goto label21;

        if $i6 == $i8 goto label06;

        $c11 = $r8[$i6];

        if $c11 != 9 goto label15;

     label06:
        $i10 = $i0 + $i10;

        $i12 = $i0 + $i6;

        $i13 = $i7 & 1;

        if $i13 == 0 goto label13;

        $z1 = 1;

     label07:
        $f1 = $f0 + $f2;

        $i13 = $i0 + $i6;

        if $i13 == $i1 goto label14;

        $z2 = 1;

     label08:
        $f1 = staticinvoke <android.text.Styled: float drawText(android.graphics.Canvas,java.lang.CharSequence,int,int,int,boolean,float,int,int,int,android.text.TextPaint,android.text.TextPaint,boolean)>($r1, $r2, $i10, $i12, $i2, $z1, $f1, $i3, $i4, $i5, $r4, $r5, $z2);

        $f2 = $f2 + $f1;

        if $i6 == $i8 goto label09;

        $c11 = $r8[$i6];

        if $c11 != 9 goto label09;

        $f1 = (float) $i2;

        $f3 = (float) $i2;

        $f2 = $f3 * $f2;

        $f2 = staticinvoke <android.text.Layout: float nextTab(java.lang.CharSequence,int,int,float,java.lang.Object[])>($r2, $i0, $i1, $f2, $r6);

        $f2 = $f1 * $f2;

     label09:
        $i10 = $i6 + 1;

     label10:
        $i6 = $i6 + 1;

        goto label05;

     label11:
        $i7 = $i1 - $i0;

        $r10 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i7);

        $r8 = $r10;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r2, $i0, $i1, $r10, 0);

        goto label02;

     label12:
        $i6 = $i8;

        goto label05;

     label13:
        $z1 = 0;

        goto label07;

     label14:
        $z2 = 0;

        goto label08;

     label15:
        if $z0 == 0 goto label10;

        $c11 = $r8[$i6];

        if $c11 < 55296 goto label10;

        $c11 = $r8[$i6];

        if $c11 > 57343 goto label10;

        $i12 = $i6 + 1;

        if $i12 >= $i8 goto label10;

        $i12 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>($r8, $i6);

        $i13 = <android.text.Layout: int MIN_EMOJI>;

        if $i12 < $i13 goto label10;

        $i13 = <android.text.Layout: int MAX_EMOJI>;

        if $i12 > $i13 goto label10;

        $r11 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        $r12 = virtualinvoke $r11.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>($i12);

        if $r12 == null goto label10;

        $i10 = $i0 + $i10;

        $i12 = $i0 + $i6;

        $i13 = $i7 & 1;

        if $i13 == 0 goto label19;

        $z1 = 1;

     label16:
        $f1 = $f0 + $f2;

        $i13 = $i0 + $i6;

        if $i13 == $i1 goto label20;

        $z2 = 1;

     label17:
        $f1 = staticinvoke <android.text.Styled: float drawText(android.graphics.Canvas,java.lang.CharSequence,int,int,int,boolean,float,int,int,int,android.text.TextPaint,android.text.TextPaint,boolean)>($r1, $r2, $i10, $i12, $i2, $z1, $f1, $i3, $i4, $i5, $r4, $r5, $z2);

        $f2 = $f2 + $f1;

        $r13 = $r0.<android.text.Layout: android.graphics.RectF mEmojiRect>;

        if $r13 != null goto label18;

        $r13 = new android.graphics.RectF;

        specialinvoke $r13.<android.graphics.RectF: void <init>()>();

        $r0.<android.text.Layout: android.graphics.RectF mEmojiRect> = $r13;

     label18:
        virtualinvoke $r5.<android.text.TextPaint: void set(android.text.TextPaint)>($r4);

        $i10 = $i0 + $i6;

        $i12 = $i0 + $i6;

        $i12 = $i12 + 1;

        staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r2, $i10, $i12, null);

        $i10 = virtualinvoke $r12.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i10;

        $f3 = virtualinvoke $r5.<android.graphics.Paint: float ascent()>();

        $f4 = neg $f3;

        $f1 = $f4 / $f1;

        $i10 = virtualinvoke $r12.<android.graphics.Bitmap: int getWidth()>();

        $f3 = (float) $i10;

        $f1 = $f3 * $f1;

        $r13 = $r0.<android.text.Layout: android.graphics.RectF mEmojiRect>;

        $f3 = $f0 + $f2;

        $f5 = (float) $i4;

        $f4 = $f5 - $f4;

        $f5 = $f0 + $f2;

        $f5 = $f5 + $f1;

        $f6 = (float) $i4;

        virtualinvoke $r13.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f4, $f5, $f6);

        $r13 = $r0.<android.text.Layout: android.graphics.RectF mEmojiRect>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>($r12, null, $r13, $r4);

        $f2 = $f2 + $f1;

        $i6 = $i6 + 1;

        $i10 = $i6 + 1;

        goto label10;

     label19:
        $z1 = 0;

        goto label16;

     label20:
        $z2 = 0;

        goto label17;

     label21:
        $i6 = $i8;

        $i7 = $i7 + 1;

        goto label03;

     label22:
        if $z0 == 0 goto label23;

        staticinvoke <android.text.TextUtils: void recycle(char[])>($r8);

        return;

     label23:
        return;
    }

    private void ellipsize(int, int, int, char[], int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1;
        char $c8;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: char[];

        $i3 := @parameter4: int;

        $i5 = virtualinvoke $r0.<android.text.Layout: int getEllipsisCount(int)>($i2);

        if $i5 != 0 goto label1;

        return;

     label1:
        $i6 = virtualinvoke $r0.<android.text.Layout: int getEllipsisStart(int)>($i2);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i2);

        $i7 = $i6;

     label2:
        $i4 = $i6 + $i5;

        if $i7 >= $i4 goto label6;

        if $i7 != $i6 goto label5;

        $c8 = 8230;

     label3:
        $i4 = $i7 + $i2;

        if $i4 < $i0 goto label4;

        if $i4 >= $i1 goto label4;

        $i4 = $i3 + $i4;

        $i4 = $i4 - $i0;

        $r1[$i4] = $c8;

     label4:
        $i7 = $i7 + 1;

        goto label2;

     label5:
        $c8 = 65279;

        goto label3;

     label6:
        return;
    }

    public static float getDesiredWidth(java.lang.CharSequence, int, int, android.text.TextPaint)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, $i3;
        android.text.TextPaint $r1, $r2;
        float $f0, $f1;
        byte $b4;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.text.TextPaint;

        $f0 = 0.0F;

        $r2 = new android.text.TextPaint;

        specialinvoke $r2.<android.text.TextPaint: void <init>()>();

     label1:
        if $i0 > $i1 goto label4;

        $i2 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>($r0, 10, $i0, $i1);

        $i3 = $i2;

        if $i2 >= 0 goto label2;

        $i3 = $i1;

     label2:
        $f1 = staticinvoke <android.text.Layout: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt,boolean,java.lang.Object[])>($r1, $r2, $r0, $i0, $i3, null, 1, null);

        $b4 = $f1 cmpl $f0;

        if $b4 <= 0 goto label3;

        $f0 = $f1;

     label3:
        $i0 = $i3 + 1;

        goto label1;

     label4:
        return $f0;
    }

    public static float getDesiredWidth(java.lang.CharSequence, android.text.TextPaint)
    {
        java.lang.CharSequence $r0;
        android.text.TextPaint $r1;
        int $i0;
        float $f0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: android.text.TextPaint;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>($r0, 0, $i0, $r1);

        return $f0;
    }

    private float getHorizontal(int, boolean, boolean)
    {
        android.text.Layout $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        float $f0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i0);

        $f0 = specialinvoke $r0.<android.text.Layout: float getHorizontal(int,boolean,boolean,int)>($i0, $z0, $z1, $i1);

        return $f0;
    }

    private float getHorizontal(int, boolean, boolean, int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3;
        android.text.Layout$Directions $r1;
        android.text.style.TabStopSpan[] $r2;
        java.lang.CharSequence $r3;
        android.text.Spanned $r4;
        java.lang.Object[] $r5;
        android.text.TextPaint $r6, $r7;
        float $f0, $f1, $f2;
        android.text.Layout$Alignment $r8, $r9;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i1 := @parameter3: int;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i1);

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineVisibleEnd(int)>($i1);

        $i4 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i1);

        $z2 = virtualinvoke $r0.<android.text.Layout: boolean getLineContainsTab(int)>($i1);

        $r1 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i1);

        $r2 = null;

        if $z2 == 0 goto label1;

        $r3 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $z3 = $r3 instanceof android.text.Spanned;

        if $z3 == 0 goto label1;

        $r3 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $r4 = (android.text.Spanned) $r3;

        $r5 = interfaceinvoke $r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i2, $i3, class "android/text/style/TabStopSpan");

        $r2 = (android.text.style.TabStopSpan[]) $r5;

     label1:
        $r6 = $r0.<android.text.Layout: android.text.TextPaint mPaint>;

        $r7 = $r0.<android.text.Layout: android.text.TextPaint mWorkPaint>;

        $r3 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $f0 = staticinvoke <android.text.Layout: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,int,int,android.text.Layout$Directions,boolean,boolean,boolean,java.lang.Object[])>($r6, $r7, $r3, $i2, $i0, $i3, $i4, $r1, $z0, $z1, $z2, $r2);

        $f1 = $f0;

        if $i0 <= $i3 goto label2;

        if $i4 != -1 goto label3;

        $r6 = $r0.<android.text.Layout: android.text.TextPaint mPaint>;

        $r7 = $r0.<android.text.Layout: android.text.TextPaint mWorkPaint>;

        $r3 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $f1 = staticinvoke <android.text.Layout: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt,boolean,java.lang.Object[])>($r6, $r7, $r3, $i3, $i0, null, $z2, $r2);

        $f1 = $f0 - $f1;

     label2:
        $r8 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>($i1);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getParagraphLeft(int)>($i1);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getParagraphRight(int)>($i1);

        $r9 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if $r8 != $r9 goto label5;

        if $i4 != -1 goto label4;

        $f0 = (float) $i2;

        $f1 = $f0 + $f1;

        return $f1;

     label3:
        $r6 = $r0.<android.text.Layout: android.text.TextPaint mPaint>;

        $r7 = $r0.<android.text.Layout: android.text.TextPaint mWorkPaint>;

        $r3 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $f1 = staticinvoke <android.text.Layout: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt,boolean,java.lang.Object[])>($r6, $r7, $r3, $i3, $i0, null, $z2, $r2);

        $f1 = $f0 + $f1;

        goto label2;

     label4:
        $f0 = (float) $i0;

        $f1 = $f0 + $f1;

        return $f1;

     label5:
        $f0 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i1);

        $r9 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if $r8 != $r9 goto label7;

        if $i4 != -1 goto label6;

        $f2 = (float) $i0;

        $f0 = $f2 + $f0;

        $f1 = $f0 + $f1;

        return $f1;

     label6:
        $f2 = (float) $i2;

        $f0 = $f2 - $f0;

        $f1 = $f0 + $f1;

        return $f1;

     label7:
        $i1 = (int) $f0;

        $i1 = $i1 & -2;

        if $i4 != -1 goto label8;

        $i0 = $i2 - $i0;

        $i0 = $i0 - $i1;

        $i0 = $i0 / 2;

        $i0 = $i2 - $i0;

        $f0 = (float) $i0;

        $f1 = $f0 + $f1;

        return $f1;

     label8:
        $i4 = $i2 - $i0;

        $i1 = $i4 - $i1;

        $i1 = $i1 / 2;

        $i0 = $i1 + $i0;

        $f0 = (float) $i0;

        $f1 = $f0 + $f1;

        return $f1;
    }

    private float getLineMax(int, java.lang.Object[], boolean)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;
        java.lang.Object[] $r2;
        android.text.Spanned $r3;
        android.text.TextPaint $r4, $r5;
        float $f0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.Object[];

        $z0 := @parameter2: boolean;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i0);

     label1:
        $z0 = virtualinvoke $r0.<android.text.Layout: boolean getLineContainsTab(int)>($i0);

        if $r2 != null goto label2;

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $z1 = $r1 instanceof android.text.Spanned;

        if $z1 == 0 goto label2;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $r3 = (android.text.Spanned) $r1;

        $r2 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "android/text/style/TabStopSpan");

     label2:
        $r4 = $r0.<android.text.Layout: android.text.TextPaint mPaint>;

        $r5 = $r0.<android.text.Layout: android.text.TextPaint mWorkPaint>;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $f0 = staticinvoke <android.text.Layout: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt,boolean,java.lang.Object[])>($r4, $r5, $r1, $i1, $i2, null, $z0, $r2);

        return $f0;

     label3:
        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineVisibleEnd(int)>($i0);

        goto label1;
    }

    private int getLineVisibleEnd(int, int, int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;
        char $c4;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i3 = $i3 - 1;

        if $i0 != $i3 goto label2;

        return $i2;

     label1:
        $i2 = $i2 + -1;

     label2:
        if $i2 <= $i1 goto label4;

        $i0 = $i2 - 1;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        if $c4 != 10 goto label3;

        $i0 = $i2 - 1;

        return $i0;

     label3:
        if $c4 == 32 goto label1;

        if $c4 == 9 goto label1;

     label4:
        return $i2;
    }

    private int getOffsetAtStartOf(int)
    {
        android.text.Layout $r0;
        java.lang.CharSequence $r1;
        int $i0, $i2, $i3, $i4;
        char $c1;
        boolean $z0;
        android.text.Spanned $r2;
        java.lang.Object[] $r3;
        android.text.style.ReplacementSpan[] $r4;
        android.text.style.ReplacementSpan $r5;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        if $c1 < 56320 goto label2;

        if $c1 > 57343 goto label2;

        $i2 = $i0 - 1;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        if $c1 < 55296 goto label2;

        if $c1 > 56319 goto label2;

        $i0 = $i0 + -1;

     label2:
        $z0 = $r0.<android.text.Layout: boolean mSpannedText>;

        if $z0 == 0 goto label5;

        $r2 = (android.text.Spanned) $r1;

        $r3 = interfaceinvoke $r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i0, class "android/text/style/ReplacementSpan");

        $r4 = (android.text.style.ReplacementSpan[]) $r3;

        $i2 = 0;

     label3:
        $i3 = lengthof $r4;

        if $i2 >= $i3 goto label5;

        $r2 = (android.text.Spanned) $r1;

        $r5 = $r4[$i2];

        $i3 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r5);

        $r2 = (android.text.Spanned) $r1;

        $r5 = $r4[$i2];

        $i4 = interfaceinvoke $r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r5);

        if $i3 >= $i0 goto label4;

        if $i4 <= $i0 goto label4;

        $i0 = $i3;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        return $i0;
    }

    private static float measureText(android.text.TextPaint, android.text.TextPaint, java.lang.CharSequence, int, int, int, int, android.text.Layout$Directions, boolean, boolean, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        android.text.Layout$Directions $r1;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r2;
        char[] $r3, $r6;
        android.text.TextPaint $r4, $r5;
        float $f0, $f1, $f2;
        short[] $r7;
        short $s7;
        android.emoji.EmojiFactory $r8;
        android.graphics.Bitmap $r9;
        char $c12;

        $r4 := @parameter0: android.text.TextPaint;

        $r5 := @parameter1: android.text.TextPaint;

        $r0 := @parameter2: java.lang.CharSequence;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $r1 := @parameter7: android.text.Layout$Directions;

        $z2 := @parameter8: boolean;

        $z0 := @parameter9: boolean;

        $z1 := @parameter10: boolean;

        $r2 := @parameter11: java.lang.Object[];

        $r3 = null;

        if $z1 == 0 goto label01;

        $i4 = $i2 - $i0;

        $r6 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i4);

        $r3 = $r6;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r0, $i0, $i2, $r6, 0);

     label01:
        $f0 = 0.0F;

        if $z0 == 0 goto label02;

        if $i3 != -1 goto label02;

        if $z2 != 0 goto label11;

        $z2 = 1;

     label02:
        $i5 = 0;

        $i4 = 0;

     label03:
        $r7 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $i6 = lengthof $r7;

        if $i4 >= $i6 goto label28;

        if $z0 == 0 goto label04;

        if $z2 != 0 goto label12;

        $z2 = 1;

     label04:
        $r7 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $s7 = $r7[$i4];

        $i6 = $s7 + $i5;

        $i8 = $i2 - $i0;

        if $i6 <= $i8 goto label34;

        $i6 = $i2 - $i0;

     label05:
        $i8 = $i5;

        if $z1 == 0 goto label13;

     label06:
        if $i5 > $i6 goto label27;

        $i9 = 0;

        if $z1 == 0 goto label07;

        if $i5 >= $i6 goto label07;

        $i9 = $r3[$i5];

     label07:
        if $i9 < 55296 goto label33;

        if $i9 > 57343 goto label33;

        $i10 = $i5 + 1;

        if $i10 >= $i6 goto label33;

        $i10 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>($r3, $i5);

        $i9 = $i10;

        $i11 = <android.text.Layout: int MIN_EMOJI>;

        if $i10 < $i11 goto label33;

        $i11 = <android.text.Layout: int MAX_EMOJI>;

        if $i10 > $i11 goto label33;

        $r8 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        $r9 = virtualinvoke $r8.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>($i10);

        $i9 = $i10;

     label08:
        if $i5 == $i6 goto label09;

        if $i9 == 9 goto label09;

        if $r9 == null goto label32;

     label09:
        $i9 = $i0 + $i5;

        if $i1 < $i9 goto label10;

        if $z2 == 0 goto label15;

        $i9 = $i0 + $i5;

        if $i1 > $i9 goto label15;

     label10:
        if $i3 != 1 goto label14;

        $i9 = $i4 & 1;

        if $i9 != 0 goto label14;

        $i0 = $i0 + $i8;

        $f1 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r0, $i0, $i1, null);

        $f0 = $f1 + $f0;

        return $f0;

     label11:
        $z2 = 0;

        goto label02;

     label12:
        $z2 = 0;

        goto label04;

     label13:
        $i5 = $i6;

        goto label06;

     label14:
        if $i3 != -1 goto label15;

        $i9 = $i4 & 1;

        if $i9 == 0 goto label15;

        $i0 = $i0 + $i8;

        $f1 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r0, $i0, $i1, null);

        $f0 = $f0 - $f1;

        return $f0;

     label15:
        $i9 = $i0 + $i8;

        $i10 = $i0 + $i5;

        $f1 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r0, $i9, $i10, null);

        $i9 = $i0 + $i5;

        if $i1 < $i9 goto label16;

        if $z2 == 0 goto label18;

        $i9 = $i0 + $i5;

        if $i1 > $i9 goto label18;

     label16:
        if $i3 != 1 goto label17;

        $i0 = $i0 + $i8;

        $f2 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r0, $i0, $i1, null);

        $f1 = $f1 - $f2;

        $f0 = $f1 + $f0;

        return $f0;

     label17:
        if $i3 != -1 goto label18;

        $i0 = $i0 + $i8;

        $f2 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r0, $i0, $i1, null);

        $f1 = $f1 - $f2;

        $f0 = $f0 - $f1;

        return $f0;

     label18:
        if $i3 != -1 goto label20;

        $f1 = $f0 - $f1;

     label19:
        if $i5 == $i6 goto label31;

        $c12 = $r3[$i5];

        if $c12 != 9 goto label31;

        $i8 = $i0 + $i5;

        if $i1 != $i8 goto label21;

        return $f1;

     label20:
        $f1 = $f0 + $f1;

        goto label19;

     label21:
        $f0 = (float) $i3;

        $f2 = (float) $i3;

        $f1 = $f1 * $f2;

        $f1 = staticinvoke <android.text.Layout: float nextTab(java.lang.CharSequence,int,int,float,java.lang.Object[])>($r0, $i0, $i2, $f1, $r2);

        $f0 = $f1 * $f0;

     label22:
        if $r9 == null goto label30;

        virtualinvoke $r5.<android.text.TextPaint: void set(android.text.TextPaint)>($r4);

        $i8 = $i1 + 1;

        staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r4, $r5, $r0, $i1, $i8, null);

        $i8 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i8;

        $f2 = virtualinvoke $r5.<android.graphics.Paint: float ascent()>();

        $f2 = neg $f2;

        $f1 = $f1 * $f2;

        $i8 = virtualinvoke $r9.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i8;

        $f1 = $f1 / $f2;

        if $i3 != -1 goto label26;

        $f0 = $f0 - $f1;

     label23:
        $i5 = $i5 + 1;

     label24:
        $i8 = $i5 + 1;

     label25:
        $i5 = $i5 + 1;

        goto label06;

     label26:
        $f0 = $f1 + $f0;

        goto label23;

     label27:
        $i4 = $i4 + 1;

        $i5 = $i6;

        goto label03;

     label28:
        if $z1 == 0 goto label29;

        staticinvoke <android.text.TextUtils: void recycle(char[])>($r3);

     label29:
        return $f0;

     label30:
        goto label24;

     label31:
        $f0 = $f1;

        goto label22;

     label32:
        goto label25;

     label33:
        $r9 = null;

        goto label08;

     label34:
        goto label05;
    }

    static float measureText(android.text.TextPaint, android.text.TextPaint, java.lang.CharSequence, int, int, android.graphics.Paint$FontMetricsInt, boolean, java.lang.Object[])
    {
        android.text.TextPaint $r0, $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Paint$FontMetricsInt $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        char[] $r5, $r6;
        float $f0, $f1, $f2;
        android.emoji.EmojiFactory $r7;
        android.graphics.Bitmap $r8;

        $r0 := @parameter0: android.text.TextPaint;

        $r1 := @parameter1: android.text.TextPaint;

        $r2 := @parameter2: java.lang.CharSequence;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 := @parameter5: android.graphics.Paint$FontMetricsInt;

        $z0 := @parameter6: boolean;

        $r4 := @parameter7: java.lang.Object[];

        $r5 = null;

        if $z0 == 0 goto label01;

        $i2 = $i1 - $i0;

        $r6 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i2);

        $r5 = $r6;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r2, $i0, $i1, $r6, 0);

     label01:
        $i2 = $i1 - $i0;

        if $r3 == null goto label02;

        $r3.<android.graphics.Paint$FontMetricsInt: int ascent> = 0;

        $r3.<android.graphics.Paint$FontMetricsInt: int descent> = 0;

     label02:
        if $z0 == 0 goto label15;

        $i3 = 0;

     label03:
        $i4 = $i3;

        $i3 = 0;

        $i5 = 0;

        $i6 = 0;

        $f0 = 0.0F;

        $i7 = 0;

        $i8 = 0;

     label04:
        if $i4 > $i2 goto label18;

        $i9 = 0;

        if $z0 == 0 goto label05;

        if $i4 >= $i2 goto label05;

        $i9 = $r5[$i4];

     label05:
        if $i9 < 55296 goto label27;

        if $i9 > 57343 goto label27;

        if $i4 >= $i2 goto label27;

        $i10 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>($r5, $i4);

        $i9 = $i10;

        $i11 = <android.text.Layout: int MIN_EMOJI>;

        if $i10 < $i11 goto label27;

        $i11 = <android.text.Layout: int MAX_EMOJI>;

        if $i10 > $i11 goto label27;

        $r7 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        $r8 = virtualinvoke $r7.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>($i10);

        $i9 = $i10;

     label06:
        if $i4 == $i2 goto label07;

        if $i9 == 9 goto label07;

        if $r8 == null goto label26;

     label07:
        $r1.<android.text.TextPaint: int baselineShift> = 0;

        $i8 = $i0 + $i8;

        $i9 = $i0 + $i4;

        $f1 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r0, $r1, $r2, $i8, $i9, $r3);

        $f0 = $f0 + $f1;

        if $r3 == null goto label08;

        $i8 = $r1.<android.text.TextPaint: int baselineShift>;

        if $i8 >= 0 goto label16;

        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i9 = $r1.<android.text.TextPaint: int baselineShift>;

        $i8 = $i8 + $i9;

        $r3.<android.graphics.Paint$FontMetricsInt: int ascent> = $i8;

        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int top>;

        $i9 = $r1.<android.text.TextPaint: int baselineShift>;

        $i8 = $i8 + $i9;

        $r3.<android.graphics.Paint$FontMetricsInt: int top> = $i8;

     label08:
        if $i4 == $i2 goto label25;

        if $r8 != null goto label17;

        $f0 = staticinvoke <android.text.Layout: float nextTab(java.lang.CharSequence,int,int,float,java.lang.Object[])>($r2, $i0, $i1, $f0, $r4);

     label09:
        if $r3 == null goto label24;

        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int ascent>;

        if $i8 >= $i7 goto label23;

        $i7 = $r3.<android.graphics.Paint$FontMetricsInt: int ascent>;

     label10:
        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int descent>;

        if $i8 <= $i6 goto label22;

        $i6 = $r3.<android.graphics.Paint$FontMetricsInt: int descent>;

     label11:
        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int top>;

        if $i8 >= $i5 goto label21;

        $i5 = $r3.<android.graphics.Paint$FontMetricsInt: int top>;

     label12:
        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int bottom>;

        if $i8 <= $i3 goto label20;

        $i3 = $r3.<android.graphics.Paint$FontMetricsInt: int bottom>;

     label13:
        $i8 = $i4 + 1;

     label14:
        $i4 = $i4 + 1;

        goto label04;

     label15:
        $i3 = $i2;

        goto label03;

     label16:
        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i9 = $r1.<android.text.TextPaint: int baselineShift>;

        $i8 = $i8 + $i9;

        $r3.<android.graphics.Paint$FontMetricsInt: int descent> = $i8;

        $i8 = $r3.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i9 = $r1.<android.text.TextPaint: int baselineShift>;

        $i8 = $i8 + $i9;

        $r3.<android.graphics.Paint$FontMetricsInt: int bottom> = $i8;

        goto label08;

     label17:
        virtualinvoke $r1.<android.text.TextPaint: void set(android.text.TextPaint)>($r0);

        $i8 = $i0 + $i4;

        $i9 = $i0 + $i4;

        $i9 = $i9 + 1;

        staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r0, $r1, $r2, $i8, $i9, null);

        $i8 = virtualinvoke $r8.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i8;

        $f2 = virtualinvoke $r1.<android.graphics.Paint: float ascent()>();

        $f2 = neg $f2;

        $f1 = $f1 * $f2;

        $i8 = virtualinvoke $r8.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i8;

        $f1 = $f1 / $f2;

        $i4 = $i4 + 1;

        $f0 = $f1 + $f0;

        goto label09;

     label18:
        if $r3 == null goto label19;

        $r3.<android.graphics.Paint$FontMetricsInt: int ascent> = $i7;

        $r3.<android.graphics.Paint$FontMetricsInt: int descent> = $i6;

        $r3.<android.graphics.Paint$FontMetricsInt: int top> = $i5;

        $r3.<android.graphics.Paint$FontMetricsInt: int bottom> = $i3;

     label19:
        if $z0 == 0 goto label28;

        staticinvoke <android.text.TextUtils: void recycle(char[])>($r5);

        return $f0;

     label20:
        goto label13;

     label21:
        goto label12;

     label22:
        goto label11;

     label23:
        goto label10;

     label24:
        goto label13;

     label25:
        goto label09;

     label26:
        goto label14;

     label27:
        $r8 = null;

        goto label06;

     label28:
        return $f0;
    }

    static float nextTab(java.lang.CharSequence, int, int, float, java.lang.Object[])
    {
        int $i0, $i1;
        float $f0, $f1, $f2;
        java.lang.CharSequence $r0;
        java.lang.Object[] $r1;
        boolean $z0, $z1;
        android.text.Spanned $r2;
        java.lang.Object $r3;
        android.text.style.TabStopSpan $r4;
        byte $b2;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $r1 := @parameter4: java.lang.Object[];

        $f1 = 3.4028235E38F;

        $z0 = 0;

        $z1 = $r0 instanceof android.text.Spanned;

        if $z1 == 0 goto label6;

        if $r1 != null goto label1;

        $r2 = (android.text.Spanned) $r0;

        $r1 = interfaceinvoke $r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "android/text/style/TabStopSpan");

        $z0 = 1;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        if $z0 != 0 goto label4;

        $r3 = $r1[$i0];

        $z1 = $r3 instanceof android.text.style.TabStopSpan;

        if $z1 != 0 goto label4;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r3 = $r1[$i0];

        $r4 = (android.text.style.TabStopSpan) $r3;

        $i1 = interfaceinvoke $r4.<android.text.style.TabStopSpan: int getTabStop()>();

        $f2 = (float) $i1;

        $b2 = $f2 cmpg $f1;

        if $b2 >= 0 goto label3;

        $f2 = (float) $i1;

        $b2 = $f2 cmpl $f0;

        if $b2 <= 0 goto label3;

        $f1 = (float) $i1;

        goto label3;

     label5:
        $b2 = $f1 cmpl 3.4028235E38F;

        if $b2 == 0 goto label6;

        return $f1;

     label6:
        $f0 = $f0 + 20.0F;

        $f0 = $f0 / 20.0F;

        $i0 = (int) $f0;

        $i0 = $i0 * 20;

        $f0 = (float) $i0;

        return $f0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.text.Layout $r0;
        android.graphics.Canvas $r1;

        $r0 := @this: android.text.Layout;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke $r0.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>($r1, null, null, 0);

        return;
    }

    public void draw(android.graphics.Canvas, android.graphics.Path, android.graphics.Paint, int)
    {
        android.text.Layout $r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        android.graphics.Path $r3;
        android.graphics.Rect $r4, $r5;
        boolean $z0, $z1, $z2;
        android.text.TextPaint $r6, $r21;
        java.lang.CharSequence $r7;
        java.lang.Object[] $r8;
        android.text.style.ParagraphStyle[] $r9, $r10;
        android.text.Spanned $r11;
        android.text.style.ParagraphStyle $r12;
        android.text.style.LineBackgroundSpan $r13;
        java.lang.Throwable $r14;
        float $f0, $f1;
        android.text.Layout$Alignment $r15, $r18;
        char $c16;
        android.text.style.AlignmentSpan $r16;
        android.text.style.LeadingMarginSpan $r17;
        android.text.Layout$Directions $r19, $r20;

        $r0 := @this: android.text.Layout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 := @parameter1: android.graphics.Path;

        $r2 := @parameter2: android.graphics.Paint;

        $i0 := @parameter3: int;

        $r4 = <android.text.Layout: android.graphics.Rect sTempRect>;

        entermonitor $r4;

     label01:
        $r5 = <android.text.Layout: android.graphics.Rect sTempRect>;

        $z0 = virtualinvoke $r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r5);

        if $z0 != 0 goto label03;

        exitmonitor $r4;

     label02:
        return;

     label03:
        $r5 = <android.text.Layout: android.graphics.Rect sTempRect>;

        $i2 = $r5.<android.graphics.Rect: int top>;

        $r5 = <android.text.Layout: android.graphics.Rect sTempRect>;

        $i3 = $r5.<android.graphics.Rect: int bottom>;

        exitmonitor $r4;

     label04:
        $r6 = $r0.<android.text.Layout: android.text.TextPaint mPaint>;

        $i4 = 0;

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i6 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i5);

        $i5 = $i6;

        if $i2 <= 0 goto label05;

        $i4 = $i2;

     label05:
        if $i3 >= $i6 goto label06;

        $i5 = $i3;

     label06:
        $i7 = virtualinvoke $r0.<android.text.Layout: int getLineForVertical(int)>($i4);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineForVertical(int)>($i5);

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i7);

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i7);

        $r7 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $r8 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(class "android/text/style/ParagraphStyle");

        $r9 = (android.text.style.ParagraphStyle[]) $r8;

        $r10 = $r9;

        $i6 = 0;

        $i3 = 0;

        $z0 = $r0.<android.text.Layout: boolean mSpannedText>;

        if $z0 == 0 goto label15;

        $i6 = 0;

        $i8 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        $i3 = $i8;

        $i9 = $i7;

     label07:
        if $i9 > $i2 goto label14;

        $i10 = $i5;

        $i5 = $i9 + 1;

        $i11 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i5);

        $i5 = $i11;

        $i12 = $i4;

        $i4 = $i9 + 1;

        $i13 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i4);

        $i4 = $i13;

        $i14 = virtualinvoke $r0.<android.text.Layout: int getLineDescent(int)>($i9);

        $i14 = $i13 - $i14;

        if $i10 < $i6 goto label08;

        $r11 = (android.text.Spanned) $r7;

        $i1 = interfaceinvoke $r11.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>($i10, $i8, class "android/text/style/LineBackgroundSpan");

        $i6 = $i1;

        $r8 = interfaceinvoke $r11.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i10, $i1, class "android/text/style/LineBackgroundSpan");

        $r10 = (android.text.style.ParagraphStyle[]) $r8;

     label08:
        $i1 = 0;

     label09:
        $i15 = lengthof $r10;

        if $i1 >= $i15 goto label13;

        $r12 = $r10[$i1];

        $r13 = (android.text.style.LineBackgroundSpan) $r12;

        $i15 = $r0.<android.text.Layout: int mWidth>;

        interfaceinvoke $r13.<android.text.style.LineBackgroundSpan: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)>($r1, $r6, 0, $i15, $i12, $i14, $i13, $r7, $i10, $i11, $i9);

        $i1 = $i1 + 1;

        goto label09;

     label10:
        $r14 := @caughtexception;

     label11:
        exitmonitor $r4;

     label12:
        throw $r14;

     label13:
        $i9 = $i9 + 1;

        goto label07;

     label14:
        $i6 = 0;

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i7);

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i7);

        $r10 = $r9;

     label15:
        if $r3 == null goto label17;

        if $i0 == 0 goto label16;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

     label16:
        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r2);

        if $i0 == 0 goto label17;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

     label17:
        $r15 = $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment>;

        $i0 = $i7;

     label18:
        if $i0 > $i2 goto label36;

        $i7 = $i5;

        $i5 = $i0 + 1;

        $i8 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i5);

        $i5 = $i8;

        $i8 = specialinvoke $r0.<android.text.Layout: int getLineVisibleEnd(int,int,int)>($i0, $i7, $i8);

        $i9 = $i4;

        $i4 = $i0 + 1;

        $i10 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i4);

        $i4 = $i10;

        $i11 = virtualinvoke $r0.<android.text.Layout: int getLineDescent(int)>($i0);

        $i11 = $i10 - $i11;

        $z1 = 0;

        if $z0 == 0 goto label22;

        if $i7 == 0 goto label19;

        $i12 = $i7 - 1;

        $c16 = interfaceinvoke $r7.<java.lang.CharSequence: char charAt(int)>($i12);

        if $c16 != 10 goto label20;

     label19:
        $z1 = 1;

     label20:
        if $i7 < $i6 goto label22;

        $r11 = (android.text.Spanned) $r7;

        $i12 = interfaceinvoke $r11.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>($i7, $i3, class "android/text/style/ParagraphStyle");

        $i6 = $i12;

        $r8 = interfaceinvoke $r11.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i7, $i12, class "android/text/style/ParagraphStyle");

        $r10 = (android.text.style.ParagraphStyle[]) $r8;

        $r15 = $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment>;

        $i12 = lengthof $r10;

        $i12 = $i12 - 1;

     label21:
        if $i12 < 0 goto label22;

        $r12 = $r10[$i12];

        $z2 = $r12 instanceof android.text.style.AlignmentSpan;

        if $z2 == 0 goto label25;

        $r12 = $r10[$i12];

        $r16 = (android.text.style.AlignmentSpan) $r12;

        $r15 = interfaceinvoke $r16.<android.text.style.AlignmentSpan: android.text.Layout$Alignment getAlignment()>();

     label22:
        $i12 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i0);

        $i13 = 0;

        $i14 = $r0.<android.text.Layout: int mWidth>;

        if $z0 == 0 goto label27;

        $i1 = lengthof $r10;

        $i15 = 0;

     label23:
        if $i15 >= $i1 goto label27;

        $r12 = $r10[$i15];

        $z2 = $r12 instanceof android.text.style.LeadingMarginSpan;

        if $z2 == 0 goto label24;

        $r12 = $r10[$i15];

        $r17 = (android.text.style.LeadingMarginSpan) $r12;

        if $i12 != -1 goto label26;

        interfaceinvoke $r17.<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>($r1, $r6, $i14, $i12, $i9, $i11, $i10, $r7, $i7, $i8, $z1, $r0);

        $i17 = interfaceinvoke $r17.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>($z1);

        $i14 = $i14 - $i17;

     label24:
        $i15 = $i15 + 1;

        goto label23;

     label25:
        $i12 = $i12 + -1;

        goto label21;

     label26:
        interfaceinvoke $r17.<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>($r1, $r6, $i13, $i12, $i9, $i11, $i10, $r7, $i7, $i8, $z1, $r0);

        $i17 = interfaceinvoke $r17.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>($z1);

        $i13 = $i13 + $i17;

        goto label24;

     label27:
        $r18 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if $r15 != $r18 goto label31;

        if $i12 != 1 goto label30;

     label28:
        $r19 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i0);

        $z1 = virtualinvoke $r0.<android.text.Layout: boolean getLineContainsTab(int)>($i0);

        $r20 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r19 != $r20 goto label35;

        if $z0 != 0 goto label35;

        if $z1 != 0 goto label35;

        $f0 = (float) $i13;

        $f1 = (float) $i11;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>($r7, $i7, $i8, $f0, $f1, $r6);

     label29:
        $i0 = $i0 + 1;

        goto label18;

     label30:
        $i13 = $i14;

        goto label28;

     label31:
        $f0 = specialinvoke $r0.<android.text.Layout: float getLineMax(int,java.lang.Object[],boolean)>($i0, $r10, 0);

        $i1 = (int) $f0;

        $r18 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if $r15 != $r18 goto label33;

        if $i12 != -1 goto label32;

        $i13 = $i13 + $i1;

        goto label28;

     label32:
        $i13 = $i14 - $i1;

        goto label28;

     label33:
        $i1 = $i1 & -2;

        $i15 = $i14 - $i13;

        $i1 = $i15 - $i1;

        $i1 = $i1 >> 1;

        if $i12 != -1 goto label34;

        $i13 = $i14 - $i1;

        goto label28;

     label34:
        $i13 = $i13 + $i1;

        goto label28;

     label35:
        $f0 = (float) $i13;

        $r21 = $r0.<android.text.Layout: android.text.TextPaint mWorkPaint>;

        specialinvoke $r0.<android.text.Layout: void drawText(android.graphics.Canvas,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,float,int,int,int,android.text.TextPaint,android.text.TextPaint,boolean,java.lang.Object[])>($r1, $r7, $i7, $i8, $i12, $r19, $f0, $i9, $i11, $i10, $r6, $r21, $z1, $r10);

        goto label29;

     label36:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final android.text.Layout$Alignment getAlignment()
    {
        android.text.Layout $r0;
        android.text.Layout$Alignment r1;

        $r0 := @this: android.text.Layout;

        r1 = $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment>;

        return r1;
    }

    public abstract int getBottomPadding();

    public void getCursorPath(int, android.graphics.Path, java.lang.CharSequence)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Path $r1;
        java.lang.CharSequence $r2;
        float $f0, $f1, $f2, $f3;
        byte $b7;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Path;

        $r2 := @parameter2: java.lang.CharSequence;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i0);

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i2);

        $i4 = $i3;

        $i2 = $i2 + 1;

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i2);

        $i2 = $i5;

        $f0 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i0);

        $f0 = $f0 - 0.5F;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getSecondaryHorizontal(int)>($i0);

        $f1 = $f1 - 0.5F;

        $i0 = staticinvoke <android.text.method.TextKeyListener: int getMetaState(java.lang.CharSequence,int)>($r2, 1);

        $i6 = staticinvoke <android.text.method.TextKeyListener: int getMetaState(java.lang.CharSequence,int)>($r2, 65536);

        $i1 = $i0 | $i6;

        $i6 = staticinvoke <android.text.method.TextKeyListener: int getMetaState(java.lang.CharSequence,int)>($r2, 2);

        $i0 = 0;

        if $i1 != 0 goto label01;

        if $i6 == 0 goto label03;

     label01:
        $i0 = $i5 - $i3;

        $i0 = $i0 >> 2;

        if $i6 == 0 goto label02;

        $i4 = $i3 + $i0;

     label02:
        if $i1 == 0 goto label03;

        $i2 = $i5 - $i0;

     label03:
        $b7 = $f0 cmpg 0.5F;

        if $b7 >= 0 goto label04;

        $f0 = 0.5F;

     label04:
        $b7 = $f1 cmpg 0.5F;

        if $b7 >= 0 goto label05;

        $f1 = 0.5F;

     label05:
        $b7 = $f0 cmpl $f1;

        if $b7 != 0 goto label08;

        $f2 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f0, $f2);

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f0, $f2);

     label06:
        if $i1 != 2 goto label09;

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $f2 = (float) $i0;

        $f2 = $f1 - $f2;

        $i3 = $i2 + $i0;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f2, $f3);

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        $f2 = (float) $i0;

        $f1 = $f2 + $f1;

        $i2 = $i2 + $i0;

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

     label07:
        if $i6 != 2 goto label10;

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $f1 = (float) $i0;

        $f1 = $f0 - $f1;

        $i2 = $i4 - $i0;

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $f1 = (float) $i0;

        $f0 = $f1 + $f0;

        $i0 = $i4 - $i0;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        return;

     label08:
        $f2 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f0, $f2);

        $i3 = $i4 + $i2;

        $i3 = $i3 >> 1;

        $f2 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f0, $f2);

        $i3 = $i4 + $i2;

        $i3 = $i3 >> 1;

        $f2 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        goto label06;

     label09:
        if $i1 != 1 goto label07;

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $f2 = (float) $i0;

        $f2 = $f1 - $f2;

        $i3 = $i2 + $i0;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f2, $f3);

        $f2 = (float) $i0;

        $f2 = $f1 - $f2;

        $i3 = $i2 + $i0;

        $f3 = (float) $i3;

        $f3 = $f3 - 0.5F;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f2, $f3);

        $f2 = (float) $i0;

        $f2 = $f2 + $f1;

        $i3 = $i2 + $i0;

        $f3 = (float) $i3;

        $f3 = $f3 - 0.5F;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f2, $f3);

        $f2 = (float) $i0;

        $f2 = $f2 + $f1;

        $i3 = $i2 + $i0;

        $f3 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f2, $f3);

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        goto label07;

     label10:
        if $i6 != 1 goto label11;

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $f1 = (float) $i0;

        $f1 = $f0 - $f1;

        $i2 = $i4 - $i0;

        $f2 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        $f1 = (float) $i0;

        $f1 = $f0 - $f1;

        $i2 = $i4 - $i0;

        $f2 = (float) $i2;

        $f2 = $f2 + 0.5F;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $f1 = (float) $i0;

        $f1 = $f1 + $f0;

        $i2 = $i4 - $i0;

        $f2 = (float) $i2;

        $f2 = $f2 + 0.5F;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        $f1 = (float) $i0;

        $f1 = $f1 + $f0;

        $i0 = $i4 - $i0;

        $f2 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        return;

     label11:
        return;
    }

    public abstract int getEllipsisCount(int);

    public abstract int getEllipsisStart(int);

    public int getEllipsizedWidth()
    {
        android.text.Layout $r0;
        int i0;

        $r0 := @this: android.text.Layout;

        i0 = $r0.<android.text.Layout: int mWidth>;

        return i0;
    }

    public int getHeight()
    {
        android.text.Layout $r0;
        int $i0;

        $r0 := @this: android.text.Layout;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i0);

        return $i0;
    }

    public final int getLineAscent(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i0);

        $i2 = $i0 + 1;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i2);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineDescent(int)>($i0);

        $i0 = $i2 - $i0;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public final int getLineBaseline(int)
    {
        android.text.Layout $r0;
        int $i0, $i1;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i1);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineDescent(int)>($i0);

        $i0 = $i1 - $i0;

        return $i0;
    }

    public final int getLineBottom(int)
    {
        android.text.Layout $r0;
        int $i0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i0);

        return $i0;
    }

    public int getLineBounds(int, android.graphics.Rect)
    {
        android.text.Layout $r0;
        int $i0, $i1;
        android.graphics.Rect $r1;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        if $r1 == null goto label1;

        $r1.<android.graphics.Rect: int left> = 0;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i0);

        $r1.<android.graphics.Rect: int top> = $i1;

        $i1 = $r0.<android.text.Layout: int mWidth>;

        $r1.<android.graphics.Rect: int right> = $i1;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i0);

        $r1.<android.graphics.Rect: int bottom> = $i1;

     label1:
        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineBaseline(int)>($i0);

        return $i0;
    }

    public abstract boolean getLineContainsTab(int);

    public abstract int getLineCount();

    public abstract int getLineDescent(int);

    public abstract android.text.Layout$Directions getLineDirections(int);

    public final int getLineEnd(int)
    {
        android.text.Layout $r0;
        int $i0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        return $i0;
    }

    public int getLineForOffset(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i3 = -1;

     label1:
        $i1 = $i2 - $i3;

        if $i1 <= 1 goto label3;

        $i1 = $i2 + $i3;

        $i1 = $i1 / 2;

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i1);

        if $i4 <= $i0 goto label2;

        $i2 = $i1;

        goto label1;

     label2:
        $i3 = $i1;

        goto label1;

     label3:
        if $i3 >= 0 goto label4;

        return 0;

     label4:
        return $i3;
    }

    public int getLineForVertical(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i3 = -1;

     label1:
        $i1 = $i2 - $i3;

        if $i1 <= 1 goto label3;

        $i1 = $i2 + $i3;

        $i1 = $i1 / 2;

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i1);

        if $i4 <= $i0 goto label2;

        $i2 = $i1;

        goto label1;

     label2:
        $i3 = $i1;

        goto label1;

     label3:
        if $i3 >= 0 goto label4;

        return 0;

     label4:
        return $i3;
    }

    public float getLineLeft(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2;
        android.text.Layout$Alignment $r1, $r2;
        float $f0, $f1;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i0);

        $r1 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>($i0);

        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if $r1 != $r2 goto label2;

        if $i1 != -1 goto label1;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphRight(int)>($i0);

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i0);

        $f0 = $f0 - $f1;

        return $f0;

     label1:
        return 0.0F;

     label2:
        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if $r1 != $r2 goto label4;

        if $i1 != -1 goto label3;

        return 0.0F;

     label3:
        $i1 = $r0.<android.text.Layout: int mWidth>;

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i0);

        $f0 = $f0 - $f1;

        return $f0;

     label4:
        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphLeft(int)>($i0);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getParagraphRight(int)>($i0);

        $f0 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i0);

        $i0 = (int) $f0;

        $i0 = $i0 & -2;

        $i2 = $i2 - $i1;

        $i0 = $i2 - $i0;

        $i0 = $i0 / 2;

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        return $f0;
    }

    public float getLineMax(int)
    {
        android.text.Layout $r0;
        int $i0;
        float $f0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $f0 = specialinvoke $r0.<android.text.Layout: float getLineMax(int,java.lang.Object[],boolean)>($i0, null, 0);

        return $f0;
    }

    public float getLineRight(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2;
        android.text.Layout$Alignment $r1, $r2;
        float $f0, $f1;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i0);

        $r1 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>($i0);

        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if $r1 != $r2 goto label2;

        if $i1 != -1 goto label1;

        $i0 = $r0.<android.text.Layout: int mWidth>;

        $f0 = (float) $i0;

        return $f0;

     label1:
        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphLeft(int)>($i0);

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i0);

        $f0 = $f0 + $f1;

        return $f0;

     label2:
        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if $r1 != $r2 goto label4;

        if $i1 != -1 goto label3;

        $f0 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i0);

        return $f0;

     label3:
        $i0 = $r0.<android.text.Layout: int mWidth>;

        $f0 = (float) $i0;

        return $f0;

     label4:
        $i2 = virtualinvoke $r0.<android.text.Layout: int getParagraphLeft(int)>($i0);

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphRight(int)>($i0);

        $f0 = virtualinvoke $r0.<android.text.Layout: float getLineMax(int)>($i0);

        $i0 = (int) $f0;

        $i0 = $i0 & -2;

        $i2 = $i1 - $i2;

        $i0 = $i2 - $i0;

        $i0 = $i0 / 2;

        $i0 = $i1 - $i0;

        $f0 = (float) $i0;

        return $f0;
    }

    public abstract int getLineStart(int);

    public abstract int getLineTop(int);

    public int getLineVisibleEnd(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        $i2 = $i0 + 1;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i2);

        $i0 = specialinvoke $r0.<android.text.Layout: int getLineVisibleEnd(int,int,int)>($i0, $i1, $i2);

        return $i0;
    }

    public float getLineWidth(int)
    {
        android.text.Layout $r0;
        int $i0;
        float $f0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $f0 = specialinvoke $r0.<android.text.Layout: float getLineMax(int,java.lang.Object[],boolean)>($i0, null, 1);

        return $f0;
    }

    public int getOffsetForHorizontal(int, float)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10;
        float $f0, $f1, $f2, $f3, $f4;
        android.text.Layout$Directions $r1;
        short[] $r2;
        short $s6;
        byte $b8, $b11;
        java.lang.CharSequence $r3;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i0);

        $i2 = $i2 - 1;

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        $r1 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i0);

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i4 = $i4 - 1;

        if $i0 != $i4 goto label01;

        $i2 = $i2 + 1;

     label01:
        $i0 = $i3;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i3);

        $f1 = $f1 - $f0;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $i4 = 0;

     label02:
        $r2 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $i5 = lengthof $r2;

        if $i4 >= $i5 goto label13;

        $r2 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $s6 = $r2[$i4];

        $i5 = $i3 + $s6;

        $i7 = $i4 & 1;

        if $i7 != 0 goto label06;

        $b8 = 1;

     label03:
        if $i5 <= $i2 goto label04;

        $i5 = $i2;

     label04:
        $i7 = $i5 - 1;

        $i7 = $i7 + 1;

        $i9 = $i3 + 1;

        $i9 = $i9 - 1;

     label05:
        $i1 = $i7 - $i9;

        if $i1 <= 1 goto label08;

        $i1 = $i7 + $i9;

        $i1 = $i1 / 2;

        $i10 = specialinvoke $r0.<android.text.Layout: int getOffsetAtStartOf(int)>($i1);

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i10);

        $f3 = (float) $b8;

        $f2 = $f2 * $f3;

        $f3 = (float) $b8;

        $f3 = $f3 * $f0;

        $b11 = $f2 cmpl $f3;

        if $b11 < 0 goto label07;

        $i7 = $i1;

        goto label05;

     label06:
        $b8 = -1;

        goto label03;

     label07:
        $i9 = $i1;

        goto label05;

     label08:
        $i7 = $i3 + 1;

        if $i9 >= $i7 goto label09;

        $i9 = $i3 + 1;

     label09:
        if $i9 >= $i5 goto label11;

        $i9 = specialinvoke $r0.<android.text.Layout: int getOffsetAtStartOf(int)>($i9);

        $i7 = $i9;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i9);

        $f2 = $f2 - $f0;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f3 = $f2;

        $r3 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i9 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r3, $i9);

        if $i9 >= $i5 goto label10;

        $f4 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i9);

        $f4 = $f4 - $f0;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $b8 = $f4 cmpg $f2;

        if $b8 >= 0 goto label10;

        $f3 = $f4;

        $i7 = $i9;

     label10:
        $b8 = $f3 cmpg $f1;

        if $b8 >= 0 goto label11;

        $f1 = $f3;

        $i0 = $i7;

     label11:
        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i3);

        $f2 = $f2 - $f0;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $b8 = $f2 cmpg $f1;

        if $b8 >= 0 goto label12;

        $f1 = $f2;

        $i0 = $i3;

     label12:
        $i3 = $i5;

        $i4 = $i4 + 1;

        goto label02;

     label13:
        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i2);

        $f0 = $f2 - $f0;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $b8 = $f0 cmpg $f1;

        if $b8 >= 0 goto label14;

        return $i2;

     label14:
        return $i0;
    }

    public int getOffsetToLeftOf(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        android.text.Layout$Directions $r1;
        float $f0, $f1, $f2;
        java.lang.CharSequence $r2;
        byte $b6;
        short[] $r3;
        short $s9;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i0);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i1);

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i1);

        $i4 = $i3;

        $r1 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i1);

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i5 = $i5 - 1;

        if $i1 == $i5 goto label01;

        $i4 = $i3 + -1;

     label01:
        $f0 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i0);

        $i3 = $i0;

        $f1 = -2.14748365E9F;

        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i5 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r2, $i0);

        if $i5 < $i2 goto label02;

        if $i5 > $i4 goto label02;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i5);

        $b6 = $f2 cmpg $f0;

        if $b6 >= 0 goto label02;

        $b6 = $f2 cmpl -2.14748365E9F;

        if $b6 <= 0 goto label02;

        $i3 = $i5;

        $f1 = $f2;

     label02:
        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i5 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r2, $i0);

        if $i5 < $i2 goto label03;

        if $i5 > $i4 goto label03;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i5);

        $b6 = $f2 cmpg $f0;

        if $b6 >= 0 goto label03;

        $b6 = $f2 cmpl $f1;

        if $b6 <= 0 goto label03;

        $i3 = $i5;

        $f1 = $f2;

     label03:
        $i7 = $i2;

        $i5 = 0;

     label04:
        $r3 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $i8 = lengthof $r3;

        if $i5 >= $i8 goto label09;

        $r3 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $s9 = $r3[$i5];

        $i8 = $i7 + $s9;

        if $i8 <= $i4 goto label05;

        $i8 = $i4;

     label05:
        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i7);

        $b6 = $f2 cmpg $f0;

        if $b6 >= 0 goto label06;

        $b6 = $f2 cmpl $f1;

        if $b6 <= 0 goto label06;

        $i3 = $i7;

        $f1 = $f2;

     label06:
        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i7 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r2, $i7);

        if $i7 < $i2 goto label07;

        if $i7 > $i4 goto label07;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i7);

        $b6 = $f2 cmpg $f0;

        if $b6 >= 0 goto label07;

        $b6 = $f2 cmpl $f1;

        if $b6 <= 0 goto label07;

        $i3 = $i7;

        $f1 = $f2;

     label07:
        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i7 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r2, $i8);

        if $i7 < $i2 goto label08;

        if $i7 > $i4 goto label08;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i7);

        $b6 = $f2 cmpg $f0;

        if $b6 >= 0 goto label08;

        $b6 = $f2 cmpl $f1;

        if $b6 <= 0 goto label08;

        $i3 = $i7;

        $f1 = $f2;

     label08:
        $i7 = $i8;

        $i5 = $i5 + 1;

        goto label04;

     label09:
        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i4);

        $b6 = $f2 cmpg $f0;

        if $b6 >= 0 goto label10;

        $b6 = $f2 cmpl $f1;

        if $b6 <= 0 goto label10;

        $i3 = $i4;

     label10:
        if $i3 == $i0 goto label11;

        return $i3;

     label11:
        $i0 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i1);

        if $i0 <= 0 goto label13;

        if $i1 != 0 goto label12;

        return $i3;

     label12:
        $i0 = $i1 - 1;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i0, 10000.0F);

        return $i0;

     label13:
        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i0 = $i0 - 1;

        if $i1 != $i0 goto label14;

        return $i3;

     label14:
        $i0 = $i1 + 1;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i0, 10000.0F);

        return $i0;
    }

    public int getOffsetToRightOf(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        android.text.Layout$Directions $r1;
        float $f0, $f1, $f2;
        java.lang.CharSequence $r2;
        byte $b6;
        short[] $r3;
        short $s9;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i0);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i1);

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i1);

        $i4 = $i3;

        $r1 = virtualinvoke $r0.<android.text.Layout: android.text.Layout$Directions getLineDirections(int)>($i1);

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i5 = $i5 - 1;

        if $i1 == $i5 goto label01;

        $i4 = $i3 + -1;

     label01:
        $f0 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i0);

        $i3 = $i0;

        $f1 = 2.14748365E9F;

        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i5 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r2, $i0);

        if $i5 < $i2 goto label02;

        if $i5 > $i4 goto label02;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i5);

        $b6 = $f2 cmpl $f0;

        if $b6 <= 0 goto label02;

        $b6 = $f2 cmpg 2.14748365E9F;

        if $b6 >= 0 goto label02;

        $i3 = $i5;

        $f1 = $f2;

     label02:
        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i5 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r2, $i0);

        if $i5 < $i2 goto label03;

        if $i5 > $i4 goto label03;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i5);

        $b6 = $f2 cmpl $f0;

        if $b6 <= 0 goto label03;

        $b6 = $f2 cmpg $f1;

        if $b6 >= 0 goto label03;

        $i3 = $i5;

        $f1 = $f2;

     label03:
        $i7 = $i2;

        $i5 = 0;

     label04:
        $r3 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $i8 = lengthof $r3;

        if $i5 >= $i8 goto label09;

        $r3 = staticinvoke <android.text.Layout$Directions: short[] access$000(android.text.Layout$Directions)>($r1);

        $s9 = $r3[$i5];

        $i8 = $i7 + $s9;

        if $i8 <= $i4 goto label05;

        $i8 = $i4;

     label05:
        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i7);

        $b6 = $f2 cmpl $f0;

        if $b6 <= 0 goto label06;

        $b6 = $f2 cmpg $f1;

        if $b6 >= 0 goto label06;

        $i3 = $i7;

        $f1 = $f2;

     label06:
        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i7 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r2, $i7);

        if $i7 < $i2 goto label07;

        if $i7 > $i4 goto label07;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i7);

        $b6 = $f2 cmpl $f0;

        if $b6 <= 0 goto label07;

        $b6 = $f2 cmpg $f1;

        if $b6 >= 0 goto label07;

        $i3 = $i7;

        $f1 = $f2;

     label07:
        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i7 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r2, $i8);

        if $i7 < $i2 goto label08;

        if $i7 > $i4 goto label08;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i7);

        $b6 = $f2 cmpl $f0;

        if $b6 <= 0 goto label08;

        $b6 = $f2 cmpg $f1;

        if $b6 >= 0 goto label08;

        $i3 = $i7;

        $f1 = $f2;

     label08:
        $i7 = $i8;

        $i5 = $i5 + 1;

        goto label04;

     label09:
        $f2 = virtualinvoke $r0.<android.text.Layout: float getPrimaryHorizontal(int)>($i4);

        $b6 = $f2 cmpl $f0;

        if $b6 <= 0 goto label10;

        $b6 = $f2 cmpg $f1;

        if $b6 >= 0 goto label10;

        $i3 = $i4;

     label10:
        if $i3 == $i0 goto label11;

        return $i3;

     label11:
        $i0 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i1);

        if $i0 <= 0 goto label13;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineCount()>();

        $i0 = $i0 - 1;

        if $i1 != $i0 goto label12;

        return $i3;

     label12:
        $i0 = $i1 + 1;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i0, -10000.0F);

        return $i0;

     label13:
        if $i1 != 0 goto label14;

        return $i3;

     label14:
        $i0 = $i1 - 1;

        $i0 = virtualinvoke $r0.<android.text.Layout: int getOffsetForHorizontal(int,float)>($i0, -10000.0F);

        return $i0;
    }

    public final android.text.TextPaint getPaint()
    {
        android.text.Layout $r0;
        android.text.TextPaint r1;

        $r0 := @this: android.text.Layout;

        r1 = $r0.<android.text.Layout: android.text.TextPaint mPaint>;

        return r1;
    }

    public final android.text.Layout$Alignment getParagraphAlignment(int)
    {
        android.text.Layout $r0;
        int $i0, $i1;
        android.text.Layout$Alignment $r1;
        boolean $z0;
        java.lang.CharSequence $r2;
        android.text.Spanned $r3;
        java.lang.Object[] $r4;
        android.text.style.AlignmentSpan[] $r5;
        android.text.style.AlignmentSpan $r6;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment>;

        $z0 = $r0.<android.text.Layout: boolean mSpannedText>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $r3 = (android.text.Spanned) $r2;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i0);

        $r4 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i0, class "android/text/style/AlignmentSpan");

        $r5 = (android.text.style.AlignmentSpan[]) $r4;

        $i0 = lengthof $r5;

        if $i0 <= 0 goto label2;

        $i0 = $i0 - 1;

        $r6 = $r5[$i0];

        $r1 = interfaceinvoke $r6.<android.text.style.AlignmentSpan: android.text.Layout$Alignment getAlignment()>();

        return $r1;

     label1:
        return $r1;

     label2:
        return $r1;
    }

    public abstract int getParagraphDirection(int);

    public final int getParagraphLeft(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;
        char $c4;
        android.text.Spanned $r2;
        java.lang.Object[] $r3;
        android.text.style.LeadingMarginSpan[] $r4;
        android.text.style.LeadingMarginSpan $r5;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i0);

        $i2 = 0;

        $z0 = 0;

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        if $i3 == 0 goto label1;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i3 = $i3 - 1;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        if $c4 != 10 goto label2;

     label1:
        $z0 = 1;

     label2:
        if $i1 != 1 goto label4;

        $z1 = $r0.<android.text.Layout: boolean mSpannedText>;

        if $z1 == 0 goto label5;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $r2 = (android.text.Spanned) $r1;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i0);

        $r3 = interfaceinvoke $r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i0, class "android/text/style/LeadingMarginSpan");

        $r4 = (android.text.style.LeadingMarginSpan[]) $r3;

        $i0 = 0;

     label3:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label6;

        $r5 = $r4[$i0];

        $i1 = interfaceinvoke $r5.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>($z0);

        $i2 = $i2 + $i1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return 0;

     label5:
        return 0;

     label6:
        return $i2;
    }

    public final int getParagraphRight(int)
    {
        android.text.Layout $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;
        char $c4;
        android.text.Spanned $r2;
        java.lang.Object[] $r3;
        android.text.style.LeadingMarginSpan[] $r4;
        android.text.style.LeadingMarginSpan $r5;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i0);

        $i2 = $r0.<android.text.Layout: int mWidth>;

        $z0 = 0;

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        if $i3 == 0 goto label1;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $i3 = $i3 - 1;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        if $c4 != 10 goto label2;

     label1:
        $z0 = 1;

     label2:
        if $i1 != -1 goto label4;

        $z1 = $r0.<android.text.Layout: boolean mSpannedText>;

        if $z1 == 0 goto label5;

        $r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        $r2 = (android.text.Spanned) $r1;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i0);

        $r3 = interfaceinvoke $r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i0, class "android/text/style/LeadingMarginSpan");

        $r4 = (android.text.style.LeadingMarginSpan[]) $r3;

        $i0 = 0;

     label3:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label6;

        $r5 = $r4[$i0];

        $i1 = interfaceinvoke $r5.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>($z0);

        $i2 = $i2 - $i1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return $i2;

     label5:
        return $i2;

     label6:
        return $i2;
    }

    public float getPrimaryHorizontal(int)
    {
        android.text.Layout $r0;
        int $i0;
        float $f0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $f0 = specialinvoke $r0.<android.text.Layout: float getHorizontal(int,boolean,boolean)>($i0, 0, 1);

        return $f0;
    }

    public float getSecondaryHorizontal(int)
    {
        android.text.Layout $r0;
        int $i0;
        float $f0;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $f0 = specialinvoke $r0.<android.text.Layout: float getHorizontal(int,boolean,boolean)>($i0, 1, 1);

        return $f0;
    }

    public void getSelectionPath(int, int, android.graphics.Path)
    {
        android.text.Layout $r0;
        android.graphics.Path $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2, $f3;
        android.graphics.Path$Direction $r2;

        $r0 := @this: android.text.Layout;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Path;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        if $i1 != $i2 goto label1;

        return;

     label1:
        if $i2 >= $i1 goto label2;

        $i0 = $i2;

        $i2 = $i1;

        $i1 = $i0;

     label2:
        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i1);

        $i0 = virtualinvoke $r0.<android.text.Layout: int getLineForOffset(int)>($i2);

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i3);

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i0);

        if $i3 != $i0 goto label3;

        specialinvoke $r0.<android.text.Layout: void addSelection(int,int,int,int,int,android.graphics.Path)>($i3, $i1, $i2, $i4, $i5, $r1);

        return;

     label3:
        $i5 = $r0.<android.text.Layout: int mWidth>;

        $f0 = (float) $i5;

        $i5 = virtualinvoke $r0.<android.text.Layout: int getLineEnd(int)>($i3);

        $i6 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i3);

        specialinvoke $r0.<android.text.Layout: void addSelection(int,int,int,int,int,android.graphics.Path)>($i3, $i1, $i5, $i4, $i6, $r1);

        $i1 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i3);

        if $i1 != -1 goto label6;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineLeft(int)>($i3);

        $f2 = (float) $i4;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i3);

        $f3 = (float) $i1;

        $r2 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r1.<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>($f1, $f2, 0.0F, $f3, $r2);

     label4:
        $i1 = $i3 + 1;

     label5:
        if $i1 >= $i0 goto label7;

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i1);

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i1);

        $f1 = (float) $i3;

        $f2 = (float) $i4;

        $r2 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r1.<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>(0.0F, $f1, $f0, $f2, $r2);

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineRight(int)>($i3);

        $f2 = (float) $i4;

        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i3);

        $f3 = (float) $i1;

        $r2 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r1.<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>($f1, $f2, $f0, $f3, $r2);

        goto label4;

     label7:
        $i1 = virtualinvoke $r0.<android.text.Layout: int getLineTop(int)>($i0);

        $i3 = virtualinvoke $r0.<android.text.Layout: int getLineBottom(int)>($i0);

        $i4 = virtualinvoke $r0.<android.text.Layout: int getLineStart(int)>($i0);

        specialinvoke $r0.<android.text.Layout: void addSelection(int,int,int,int,int,android.graphics.Path)>($i0, $i4, $i2, $i1, $i3, $r1);

        $i2 = virtualinvoke $r0.<android.text.Layout: int getParagraphDirection(int)>($i0);

        if $i2 != -1 goto label8;

        $f1 = (float) $i1;

        $f2 = virtualinvoke $r0.<android.text.Layout: float getLineRight(int)>($i0);

        $f3 = (float) $i3;

        $r2 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r1.<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>($f0, $f1, $f2, $f3, $r2);

        return;

     label8:
        $f0 = (float) $i1;

        $f1 = virtualinvoke $r0.<android.text.Layout: float getLineLeft(int)>($i0);

        $f2 = (float) $i3;

        $r2 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r1.<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>(0.0F, $f0, $f1, $f2, $r2);

        return;
    }

    public final float getSpacingAdd()
    {
        android.text.Layout $r0;
        float f0;

        $r0 := @this: android.text.Layout;

        f0 = $r0.<android.text.Layout: float mSpacingAdd>;

        return f0;
    }

    public final float getSpacingMultiplier()
    {
        android.text.Layout $r0;
        float f0;

        $r0 := @this: android.text.Layout;

        f0 = $r0.<android.text.Layout: float mSpacingMult>;

        return f0;
    }

    public final java.lang.CharSequence getText()
    {
        android.text.Layout $r0;
        java.lang.CharSequence r1;

        $r0 := @this: android.text.Layout;

        r1 = $r0.<android.text.Layout: java.lang.CharSequence mText>;

        return r1;
    }

    public abstract int getTopPadding();

    public final int getWidth()
    {
        android.text.Layout $r0;
        int i0;

        $r0 := @this: android.text.Layout;

        i0 = $r0.<android.text.Layout: int mWidth>;

        return i0;
    }

    public final void increaseWidthTo(int)
    {
        android.text.Layout $r0;
        int $i0, $i1;
        java.lang.RuntimeException $r1;

        $r0 := @this: android.text.Layout;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.text.Layout: int mWidth>;

        if $i0 >= $i1 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("attempted to reduce Layout width");

        throw $r1;

     label1:
        $r0.<android.text.Layout: int mWidth> = $i0;

        return;
    }

    protected final boolean isSpanned()
    {
        android.text.Layout $r0;
        boolean z0;

        $r0 := @this: android.text.Layout;

        z0 = $r0.<android.text.Layout: boolean mSpannedText>;

        return z0;
    }

    void replaceWith(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float)
    {
        android.text.Layout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0;
        android.text.Layout$Alignment $r3;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @this: android.text.Layout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        if $i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Layout: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r0.<android.text.Layout: java.lang.CharSequence mText> = $r1;

        $r0.<android.text.Layout: android.text.TextPaint mPaint> = $r2;

        $r0.<android.text.Layout: int mWidth> = $i0;

        $r0.<android.text.Layout: android.text.Layout$Alignment mAlignment> = $r3;

        $r0.<android.text.Layout: float mSpacingMult> = $f0;

        $r0.<android.text.Layout: float mSpacingAdd> = $f1;

        $z0 = $r1 instanceof android.text.Spanned;

        $r0.<android.text.Layout: boolean mSpannedText> = $z0;

        return;
    }
}
