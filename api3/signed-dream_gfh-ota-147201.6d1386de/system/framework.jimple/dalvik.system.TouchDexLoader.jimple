class dalvik.system.TouchDexLoader extends java.lang.ClassLoader
{
    private boolean initialized;
    private dalvik.system.DexFile[] mDexs;
    private java.io.File[] mFiles;
    private java.lang.String[] mLibPaths;
    private java.lang.String[] mPaths;
    private java.util.zip.ZipFile[] mZips;
    private java.lang.String path;

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        dalvik.system.TouchDexLoader $r0;
        java.lang.String $r1;
        java.lang.ClassLoader $r2;
        java.lang.NullPointerException $r3;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke $r0.<java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>($r2);

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $r0.<dalvik.system.TouchDexLoader: java.lang.String path> = $r1;

        return;
    }

    private void ensureInit()
    {
        dalvik.system.TouchDexLoader $r0;
        java.io.File $r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r11, $r12;
        java.lang.String[] $r3;
        int $i0, $i1;
        java.io.File[] $r4;
        java.util.zip.ZipFile[] $r5;
        dalvik.system.DexFile[] $r6;
        dalvik.system.DexFile $r7;
        java.io.IOException $r8;
        java.io.PrintStream $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $z0 = $r0.<dalvik.system.TouchDexLoader: boolean initialized>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r0.<dalvik.system.TouchDexLoader: boolean initialized> = 1;

        $r2 = $r0.<dalvik.system.TouchDexLoader: java.lang.String path>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths> = $r3;

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $i0 = lengthof $r3;

        $r4 = newarray (java.io.File)[$i0];

        $r0.<dalvik.system.TouchDexLoader: java.io.File[] mFiles> = $r4;

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $i0 = lengthof $r3;

        $r5 = newarray (java.util.zip.ZipFile)[$i0];

        $r0.<dalvik.system.TouchDexLoader: java.util.zip.ZipFile[] mZips> = $r5;

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $i0 = lengthof $r3;

        $r6 = newarray (dalvik.system.DexFile)[$i0];

        $r0.<dalvik.system.TouchDexLoader: dalvik.system.DexFile[] mDexs> = $r6;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("android.vm.dexfile", "");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("true");

        $i0 = 0;

     label02:
        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label08;

        $r1 = new java.io.File;

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $r2 = $r3[$i0];

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r4 = $r0.<dalvik.system.TouchDexLoader: java.io.File[] mFiles>;

        $r4[$i0] = $r1;

        $z1 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label07;

        if $z0 == 0 goto label05;

        $r6 = $r0.<dalvik.system.TouchDexLoader: dalvik.system.DexFile[] mDexs>;

        $r7 = new dalvik.system.DexFile;

     label03:
        specialinvoke $r7.<dalvik.system.DexFile: void <init>(java.io.File)>($r1);

     label04:
        $r6[$i0] = $r7;

     label05:
        $i0 = $i0 + 1;

        goto label02;

     label06:
        $r8 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open ");

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $r2 = $r3[$i0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as DEX");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label05;

     label07:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $r2 = $r3[$i0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label05;

     label08:
        $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("java.library.path", ".");

        $r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("path.separator", ":");

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("file.separator", "/");

        $r3 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>($r12);

        $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mLibPaths> = $r3;

        $i0 = 0;

     label09:
        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mLibPaths>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label11;

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mLibPaths>;

        $r11 = $r3[$i0];

        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z0 != 0 goto label10;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mLibPaths>;

        $r11 = $r3[$i0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[$i0] = $r11;

     label10:
        $i0 = $i0 + 1;

        goto label09;

     label11:
        return;

        catch java.io.IOException from label03 to label04 with label06;
    }

    private boolean isInArchive(java.util.zip.ZipFile, java.lang.String)
    {
        dalvik.system.TouchDexLoader $r0;
        java.util.zip.ZipFile $r1;
        java.lang.String $r2;
        java.util.zip.ZipEntry $r3;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.util.zip.ZipFile;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r2);

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private byte[] loadFromArchive(java.util.zip.ZipFile, java.lang.String)
    {
        dalvik.system.TouchDexLoader $r0;
        java.util.zip.ZipFile $r1;
        java.lang.String $r2;
        byte[] $r3;
        java.io.ByteArrayOutputStream $r4;
        java.util.zip.ZipEntry $r5;
        java.io.InputStream $r6;
        long $l0;
        int $i1;
        java.io.IOException $r7;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.util.zip.ZipFile;

        $r2 := @parameter1: java.lang.String;

        $r5 = virtualinvoke $r1.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r2);

        if $r5 != null goto label1;

        return null;

     label1:
        $r6 = virtualinvoke $r1.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r5);

        $r4 = new java.io.ByteArrayOutputStream;

        $l0 = virtualinvoke $r5.<java.util.zip.ZipEntry: long getSize()>();

        $i1 = (int) $l0;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        $r3 = newarray (byte)[4096];

     label2:
        $i1 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r3);

        if $i1 <= 0 goto label4;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i1);

        goto label2;

     label3:
        $r7 := @caughtexception;

        return null;

     label4:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

     label5:
        $r3 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;

        catch java.io.IOException from label1 to label3 with label3;
        catch java.io.IOException from label4 to label5 with label3;
    }

    private byte[] loadFromDirectory(java.lang.String)
    {
        dalvik.system.TouchDexLoader $r0;
        java.lang.String $r1;
        java.io.RandomAccessFile $r2;
        long $l0;
        int $i1;
        byte[] $r3;
        java.io.FileNotFoundException $r4;
        java.io.IOException $r5;
        java.io.PrintStream $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.RandomAccessFile;

     label1:
        specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r1, "r");

     label2:
        $l0 = virtualinvoke $r2.<java.io.RandomAccessFile: long length()>();

     label3:
        $i1 = (int) $l0;

     label4:
        $r3 = newarray (byte)[$i1];

        virtualinvoke $r2.<java.io.RandomAccessFile: int read(byte[])>($r3);

        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

     label5:
        return $r3;

     label6:
        $r4 := @caughtexception;

        return null;

     label7:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading from ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = null;

        goto label5;

        catch java.io.FileNotFoundException from label1 to label2 with label6;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label4 to label5 with label7;
    }

    protected java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        dalvik.system.TouchDexLoader $r0;
        java.lang.String $r1, $r7;
        java.io.File $r2;
        byte[] $r3;
        int $i0, $i1;
        java.lang.String[] $r4;
        dalvik.system.DexFile[] $r5;
        dalvik.system.DexFile $r6;
        java.lang.Class $r8;
        java.util.zip.ZipFile[] $r9;
        java.util.zip.ZipFile $r10;
        java.lang.StringBuilder $r11;
        java.lang.Package $r12;
        java.io.File[] $r13;
        boolean $z0;
        java.lang.Throwable $r14;
        java.lang.ClassNotFoundException $r15;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<dalvik.system.TouchDexLoader: void ensureInit()>();

        $r3 = null;

        $i0 = 0;

     label01:
        $r4 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label12;

        $r5 = $r0.<dalvik.system.TouchDexLoader: dalvik.system.DexFile[] mDexs>;

        $r6 = $r5[$i0];

        if $r6 == null goto label02;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r5 = $r0.<dalvik.system.TouchDexLoader: dalvik.system.DexFile[] mDexs>;

        $r6 = $r5[$i0];

        $r8 = virtualinvoke $r6.<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>($r7, $r0);

        if $r8 == null goto label03;

        return $r8;

     label02:
        $r9 = $r0.<dalvik.system.TouchDexLoader: java.util.zip.ZipFile[] mZips>;

        $r10 = $r9[$i0];

        if $r10 == null goto label07;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = $r0.<dalvik.system.TouchDexLoader: java.util.zip.ZipFile[] mZips>;

        $r10 = $r9[$i0];

        $r3 = specialinvoke $r0.<dalvik.system.TouchDexLoader: byte[] loadFromArchive(java.util.zip.ZipFile,java.lang.String)>($r10, $r7);

     label03:
        if $r3 == null goto label11;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 == -1 goto label06;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        entermonitor $r0;

     label04:
        $r12 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>($r7);

        if $r12 != null goto label05;

        virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>($r7, null, null, null, null, null, null, null);

     label05:
        exitmonitor $r0;

     label06:
        $i0 = lengthof $r3;

        $r8 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>($r1, $r3, 0, $i0);

        return $r8;

     label07:
        $r13 = $r0.<dalvik.system.TouchDexLoader: java.io.File[] mFiles>;

        $r2 = $r13[$i0];

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label03;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $r7 = $r4[$i0];

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = specialinvoke $r0.<dalvik.system.TouchDexLoader: byte[] loadFromDirectory(java.lang.String)>($r7);

        goto label03;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor $r0;

     label10:
        throw $r14;

     label11:
        $i0 = $i0 + 1;

        goto label01;

     label12:
        $r15 = new java.lang.ClassNotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in loader ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r15;

        catch java.lang.Throwable from label04 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected java.lang.String findLibrary(java.lang.String)
    {
        dalvik.system.TouchDexLoader $r0;
        java.lang.String $r1, $r5;
        java.io.File $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<dalvik.system.TouchDexLoader: void ensureInit()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>($r1);

        $i0 = 0;

     label1:
        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mLibPaths>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mLibPaths>;

        $r5 = $r3[$i0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        return $r5;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    protected java.net.URL findResource(java.lang.String)
    {
        dalvik.system.TouchDexLoader $r0;
        java.lang.String $r1, $r11;
        java.io.File $r2;
        java.util.zip.ZipFile $r3;
        int $i0, $i1;
        java.lang.String[] $r4;
        java.io.File[] $r5;
        java.util.zip.ZipFile[] $r6;
        boolean $z0;
        java.net.URL $r7;
        java.lang.StringBuilder $r8;
        java.net.MalformedURLException $r9, $r12;
        java.lang.RuntimeException $r10;
        java.io.PrintStream $r13;

        $r0 := @this: dalvik.system.TouchDexLoader;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<dalvik.system.TouchDexLoader: void ensureInit()>();

        $i0 = 0;

     label01:
        $r4 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label12;

        $r5 = $r0.<dalvik.system.TouchDexLoader: java.io.File[] mFiles>;

        $r2 = $r5[$i0];

        $r6 = $r0.<dalvik.system.TouchDexLoader: java.util.zip.ZipFile[] mZips>;

        $r3 = $r6[$i0];

        if $r3 == null goto label05;

        $z0 = specialinvoke $r0.<dalvik.system.TouchDexLoader: boolean isInArchive(java.util.zip.ZipFile,java.lang.String)>($r3, $r1);

        if $z0 == 0 goto label10;

        $r7 = new java.net.URL;

        $r8 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jar:file://");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1);

     label03:
        return $r7;

     label04:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label05:
        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label09;

        $r2 = new java.io.File;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $r11 = $r4[$i0];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r11);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label10;

        $r7 = new java.net.URL;

        $r8 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1);

     label07:
        return $r7;

     label08:
        $r12 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r10;

     label09:
        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label11;

     label10:
        $i0 = $i0 + 1;

        goto label01;

     label11:
        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TouchDexLoader: can\'t find \'");

        $r4 = $r0.<dalvik.system.TouchDexLoader: java.lang.String[] mPaths>;

        $r11 = $r4[$i0];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r11);

        goto label10;

     label12:
        return null;

        catch java.net.MalformedURLException from label02 to label03 with label04;
        catch java.net.MalformedURLException from label06 to label07 with label08;
    }
}
