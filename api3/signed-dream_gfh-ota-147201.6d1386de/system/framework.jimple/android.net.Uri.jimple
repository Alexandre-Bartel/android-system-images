public abstract class android.net.Uri extends java.lang.Object implements android.os.Parcelable, java.lang.Comparable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String DEFAULT_ENCODING;
    public static final android.net.Uri EMPTY;
    private static final char[] HEX_DIGITS;
    private static final java.lang.String LOG;
    private static final java.lang.String NOT_CACHED;
    private static final int NOT_CALCULATED;
    private static final int NOT_FOUND;
    private static final java.lang.String NOT_HIERARCHICAL;
    private static final int NULL_TYPE_ID;
    private static final byte[] REPLACEMENT;

    static void <clinit>()
    {
        android.net.Uri$Part $r0, $r2, $r3;
        android.net.Uri$PathPart $r1;
        java.lang.Class $r4;
        java.lang.String $r5;
        android.net.Uri$HierarchicalUri $r6;
        android.net.Uri$1 $r7;
        char[] $r8;
        byte[] $r9;

        <android.net.Uri: java.lang.String NOT_HIERARCHICAL> = "This isn\'t a hierarchical URI.";

        <android.net.Uri: int NOT_FOUND> = -1;

        <android.net.Uri: int NOT_CALCULATED> = -2;

        <android.net.Uri: java.lang.String DEFAULT_ENCODING> = "UTF-8";

        $r4 = class "android/net/Uri";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.net.Uri: java.lang.String LOG> = $r5;

        $r6 = new android.net.Uri$HierarchicalUri;

        $r0 = <android.net.Uri$Part: android.net.Uri$Part NULL>;

        $r1 = <android.net.Uri$PathPart: android.net.Uri$PathPart EMPTY>;

        $r2 = <android.net.Uri$Part: android.net.Uri$Part NULL>;

        $r3 = <android.net.Uri$Part: android.net.Uri$Part NULL>;

        specialinvoke $r6.<android.net.Uri$HierarchicalUri: void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1)>(null, $r0, $r1, $r2, $r3, null);

        <android.net.Uri: android.net.Uri EMPTY> = $r6;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("NOT CACHED");

        <android.net.Uri: java.lang.String NOT_CACHED> = $r5;

        $r7 = new android.net.Uri$1;

        specialinvoke $r7.<android.net.Uri$1: void <init>()>();

        <android.net.Uri: android.os.Parcelable$Creator CREATOR> = $r7;

        $r5 = "0123456789ABCDEF";

        $r8 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        <android.net.Uri: char[] HEX_DIGITS> = $r8;

        $r9 = newarray (byte)[2];

        $r9[0] = -1;

        $r9[1] = -3;

        <android.net.Uri: byte[] REPLACEMENT> = $r9;

        return;
    }

    private void <init>()
    {
        android.net.Uri $r0;

        $r0 := @this: android.net.Uri;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.net.Uri$1)
    {
        android.net.Uri $r0;
        android.net.Uri$1 $r1;

        $r0 := @this: android.net.Uri;

        $r1 := @parameter0: android.net.Uri$1;

        specialinvoke $r0.<android.net.Uri: void <init>()>();

        return;
    }

    static java.lang.String access$300()
    {
        java.lang.String r0;

        r0 = <android.net.Uri: java.lang.String NOT_CACHED>;

        return r0;
    }

    static java.lang.String access$600()
    {
        java.lang.String r0;

        r0 = <android.net.Uri: java.lang.String LOG>;

        return r0;
    }

    public static java.lang.String decode(java.lang.String)
    {
        java.lang.String $r0, $r4;
        java.lang.StringBuilder $r1;
        java.io.ByteArrayOutputStream $r2;
        int $i0, $i1, $i2, $i4;
        byte[] $r3;
        char $c3;
        java.io.UnsupportedEncodingException $r5;
        java.lang.AssertionError $r6;
        java.io.IOException $r7;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label01;

        return null;

     label01:
        $r1 = null;

        $r2 = null;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label23;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(37, $i1);

        if $i2 != -1 goto label04;

        if $r1 != null goto label03;

        return $r0;

     label03:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r0, $i1, $i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label04:
        if $r1 != null goto label13;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(4);

     label05:
        if $i2 <= $i1 goto label06;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r0, $i1, $i2);

        $i1 = $i2;

     label06:
        $i2 = $i1 + 2;

        if $i2 < $i0 goto label14;

        $r3 = <android.net.Uri: byte[] REPLACEMENT>;

     label07:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r3);

     label08:
        $i1 = $i1 + 3;

     label09:
        if $i1 >= $i0 goto label10;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c3 == 37 goto label06;

     label10:
        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label11:
        goto label02;

     label12:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

     label13:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        goto label05;

     label14:
        $i2 = $i1 + 1;

     label15:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i1 + 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

     label16:
        if $i2 == -1 goto label17;

        if $i4 != -1 goto label20;

     label17:
        $r3 = <android.net.Uri: byte[] REPLACEMENT>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r3);

     label18:
        goto label08;

     label19:
        $r7 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r6;

     label20:
        $i2 = $i2 << 4;

        $i2 = $i2 + $i4;

     label21:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i2);

     label22:
        goto label08;

     label23:
        if $r1 != null goto label24;

        return $r0;

     label24:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

        catch java.io.UnsupportedEncodingException from label07 to label08 with label12;
        catch java.io.UnsupportedEncodingException from label09 to label11 with label12;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label09 to label11 with label19;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label12;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label12;
        catch java.io.IOException from label15 to label16 with label19;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label12;
        catch java.io.IOException from label21 to label22 with label19;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r0, null);

        return $r0;
    }

    public static java.lang.String encode(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r3;
        int $i0, $i1, $i2, $i4;
        java.lang.StringBuilder $r2;
        char $c3;
        boolean $z0;
        byte[] $r4;
        char[] $r5;
        byte $b5;
        short $s6;
        java.io.UnsupportedEncodingException $r6;
        java.lang.AssertionError $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label01;

        return null;

     label01:
        $r2 = null;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = 0;

     label02:
        if $i0 >= $i1 goto label21;

        $i2 = $i0;

     label03:
        if $i2 >= $i1 goto label04;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <android.net.Uri: boolean isAllowed(char,java.lang.String)>($c3, $r1);

        if $z0 == 0 goto label04;

        $i2 = $i2 + 1;

        goto label03;

     label04:
        if $i2 != $i1 goto label06;

        if $i0 != 0 goto label05;

        return $r0;

     label05:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r0, $i0, $i1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label06:
        if $r2 != null goto label07;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label07:
        if $i2 <= $i0 goto label08;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r0, $i0, $i2);

     label08:
        $i0 = $i2;

        $i2 = $i2 + 1;

     label09:
        if $i2 >= $i1 goto label10;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <android.net.Uri: boolean isAllowed(char,java.lang.String)>($c3, $r1);

        if $z0 != 0 goto label10;

        $i2 = $i2 + 1;

        goto label09;

     label10:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

     label11:
        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label12:
        $i0 = lengthof $r4;

        $i4 = 0;

     label13:
        if $i4 >= $i0 goto label20;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

     label14:
        $r5 = <android.net.Uri: char[] HEX_DIGITS>;

        $b5 = $r4[$i4];

        $s6 = $b5 & 240;

        $s6 = $s6 >> 4;

     label15:
        $c3 = $r5[$s6];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label16:
        $r5 = <android.net.Uri: char[] HEX_DIGITS>;

        $b5 = $r4[$i4];

        $b5 = $b5 & 15;

     label17:
        $c3 = $r5[$b5];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label18:
        $i4 = $i4 + 1;

        goto label13;

     label19:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

     label20:
        $i0 = $i2;

        goto label02;

     label21:
        if $r2 != null goto label22;

        return $r0;

     label22:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

        catch java.io.UnsupportedEncodingException from label11 to label12 with label19;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label19;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label19;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label19;
    }

    public static android.net.Uri fromFile(java.io.File)
    {
        java.io.File $r0;
        android.net.Uri$Part $r1, $r2, $r7;
        java.lang.NullPointerException $r3;
        java.lang.String $r4;
        android.net.Uri$PathPart $r5;
        android.net.Uri$HierarchicalUri $r6;

        $r0 := @parameter0: java.io.File;

        if $r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("file");

        throw $r3;

     label1:
        $r4 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = staticinvoke <android.net.Uri$PathPart: android.net.Uri$PathPart fromDecoded(java.lang.String)>($r4);

        $r6 = new android.net.Uri$HierarchicalUri;

        $r7 = <android.net.Uri$Part: android.net.Uri$Part EMPTY>;

        $r1 = <android.net.Uri$Part: android.net.Uri$Part NULL>;

        $r2 = <android.net.Uri$Part: android.net.Uri$Part NULL>;

        specialinvoke $r6.<android.net.Uri$HierarchicalUri: void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1)>("file", $r7, $r5, $r1, $r2, null);

        return $r6;
    }

    public static android.net.Uri fromParts(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.lang.NullPointerException $r3;
        android.net.Uri$OpaqueUri $r4;
        android.net.Uri$Part $r5, $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("scheme");

        throw $r3;

     label1:
        if $r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("ssp");

        throw $r3;

     label2:
        $r4 = new android.net.Uri$OpaqueUri;

        $r5 = staticinvoke <android.net.Uri$Part: android.net.Uri$Part fromDecoded(java.lang.String)>($r1);

        $r6 = staticinvoke <android.net.Uri$Part: android.net.Uri$Part fromDecoded(java.lang.String)>($r2);

        specialinvoke $r4.<android.net.Uri$OpaqueUri: void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1)>($r0, $r5, $r6, null);

        return $r4;
    }

    private static boolean isAllowed(char, java.lang.String)
    {
        char $c0;
        java.lang.String $r0, $r1;
        int $i1;

        $c0 := @parameter0: char;

        $r0 := @parameter1: java.lang.String;

        if $c0 < 65 goto label1;

        if $c0 <= 90 goto label4;

     label1:
        if $c0 < 97 goto label2;

        if $c0 <= 122 goto label4;

     label2:
        if $c0 < 48 goto label3;

        if $c0 <= 57 goto label4;

     label3:
        $r1 = "_-!.~\'()*";

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0);

        if $i1 != -1 goto label4;

        if $r0 == null goto label5;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($c0);

        if $i1 == -1 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    public static android.net.Uri parse(java.lang.String)
    {
        java.lang.String $r0;
        android.net.Uri$StringUri $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new android.net.Uri$StringUri;

        specialinvoke $r1.<android.net.Uri$StringUri: void <init>(java.lang.String,android.net.Uri$1)>($r0, null);

        return $r1;
    }

    public static android.net.Uri withAppendedPath(android.net.Uri, java.lang.String)
    {
        android.net.Uri $r0;
        java.lang.String $r1;
        android.net.Uri$Builder $r2;

        $r0 := @parameter0: android.net.Uri;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r0;
    }

    public static void writeToParcel(android.os.Parcel, android.net.Uri)
    {
        android.os.Parcel $r0;
        android.net.Uri $r1;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: android.net.Uri;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke $r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>($r0, 0);

        return;
    }

    public abstract android.net.Uri$Builder buildUpon();

    public int compareTo(android.net.Uri)
    {
        android.net.Uri $r0, $r1;
        java.lang.String $r2, $r3;
        int $i0;

        $r0 := @this: android.net.Uri;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.net.Uri $r0, $r2;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: android.net.Uri;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) $r1;

        $i0 = virtualinvoke $r0.<android.net.Uri: int compareTo(android.net.Uri)>($r2);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.Uri $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;

        $r0 := @this: android.net.Uri;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof android.net.Uri;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (android.net.Uri) $r1;

        $r3 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    public abstract java.lang.String getAuthority();

    public abstract java.lang.String getEncodedAuthority();

    public abstract java.lang.String getEncodedFragment();

    public abstract java.lang.String getEncodedPath();

    public abstract java.lang.String getEncodedQuery();

    public abstract java.lang.String getEncodedSchemeSpecificPart();

    public abstract java.lang.String getEncodedUserInfo();

    public abstract java.lang.String getFragment();

    public abstract java.lang.String getHost();

    public abstract java.lang.String getLastPathSegment();

    public abstract java.lang.String getPath();

    public abstract java.util.List getPathSegments();

    public abstract int getPort();

    public abstract java.lang.String getQuery();

    public java.lang.String getQueryParameter(java.lang.String)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r4;
        int $i0, $i1, $i2;
        java.io.UnsupportedEncodingException $r5;
        java.lang.AssertionError $r6;

        $r0 := @this: android.net.Uri;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<android.net.Uri: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This isn\'t a hierarchical URI.");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r0.<android.net.Uri: java.lang.String getQuery()>();

        if $r3 != null goto label2;

        return null;

     label2:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        return null;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

     label5:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label8;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label6:
        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int,int)>(38, $i0);

        $i2 = $i1;

        if $i1 != -1 goto label7;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

     label7:
        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r1 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r1);

        return $r1;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r1);

        if $i0 != -1 goto label9;

        return null;

     label9:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        goto label6;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public java.util.List getQueryParameters(java.lang.String)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r4, $r6;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.UnsupportedOperationException $r3;
        java.util.List $r5;
        java.lang.StringBuilder $r7;
        int $i0, $i1, $i2, $i3;
        java.io.UnsupportedEncodingException $r8;
        java.lang.AssertionError $r9;

        $r0 := @this: android.net.Uri;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<android.net.Uri: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This isn\'t a hierarchical URI.");

        throw $r3;

     label1:
        $r4 = virtualinvoke $r0.<android.net.Uri: java.lang.String getQuery()>();

        if $r4 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label4:
        if $i0 >= $i1 goto label5;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r4, $i0);

        if $i0 != -1 goto label7;

     label5:
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r5;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i2;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(38, $i0);

        $i3 = $i2;

        if $i2 != -1 goto label8;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

     label8:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        $r6 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r6);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i0 = $i3;

        goto label4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label6;
    }

    public abstract java.lang.String getScheme();

    public abstract java.lang.String getSchemeSpecificPart();

    public abstract java.lang.String getUserInfo();

    public int hashCode()
    {
        android.net.Uri $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: android.net.Uri;

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean isAbsolute()
    {
        android.net.Uri $r0;
        boolean $z0;

        $r0 := @this: android.net.Uri;

        $z0 = virtualinvoke $r0.<android.net.Uri: boolean isRelative()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract boolean isHierarchical();

    public boolean isOpaque()
    {
        android.net.Uri $r0;
        boolean $z0;

        $r0 := @this: android.net.Uri;

        $z0 = virtualinvoke $r0.<android.net.Uri: boolean isHierarchical()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract boolean isRelative();

    public abstract java.lang.String toString();
}
