public class android.content.res.Resources extends java.lang.Object
{
    private static final boolean DEBUG_CONFIG;
    private static final boolean DEBUG_LOAD;
    static final java.lang.String TAG;
    private static final boolean TRACE_FOR_PRELOAD;
    private static boolean mPreloaded;
    private static final android.util.SparseArray mPreloadedColorStateLists;
    private static final android.util.SparseArray mPreloadedDrawables;
    private static final java.lang.Object mSync;
    private static android.content.res.Resources mSystem;
    private static final int sSdkVersion;
    final android.content.res.AssetManager mAssets;
    android.content.res.TypedArray mCachedStyledAttributes;
    private final int[] mCachedXmlBlockIds;
    private final android.content.res.XmlBlock[] mCachedXmlBlocks;
    private final android.util.SparseArray mColorStateListCache;
    private final android.content.res.Configuration mConfiguration;
    private final android.util.SparseArray mDrawableCache;
    private int mLastCachedXmlBlockIndex;
    final android.util.DisplayMetrics mMetrics;
    android.content.res.PluralRules mPluralRule;
    private boolean mPreloading;
    final android.util.TypedValue mTmpValue;

    static void <clinit>()
    {
        int $i0;
        java.lang.Object $r0;
        android.util.SparseArray $r1;

        <android.content.res.Resources: java.lang.String TAG> = "Resources";

        <android.content.res.Resources: boolean DEBUG_LOAD> = 0;

        <android.content.res.Resources: boolean DEBUG_CONFIG> = 0;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.build.version.sdk", 0);

        <android.content.res.Resources: int sSdkVersion> = $i0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.content.res.Resources: java.lang.Object mSync> = $r0;

        <android.content.res.Resources: android.content.res.Resources mSystem> = null;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        <android.content.res.Resources: android.util.SparseArray mPreloadedDrawables> = $r1;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        <android.content.res.Resources: android.util.SparseArray mPreloadedColorStateLists> = $r1;

        return;
    }

    private void <init>()
    {
        android.content.res.Resources $r0;
        android.content.res.AssetManager $r1;
        android.util.TypedValue $r2;
        android.util.SparseArray $r3;
        int[] $r4;
        android.content.res.XmlBlock[] $r5;
        android.content.res.Configuration $r6;
        android.util.DisplayMetrics $r7;

        $r0 := @this: android.content.res.Resources;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache> = $r3;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        $r0.<android.content.res.Resources: android.util.SparseArray mColorStateListCache> = $r3;

        $r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = null;

        $r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex> = -1;

        $r4 = newarray (int)[4];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = 0;

        $r4[3] = 0;

        $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds> = $r4;

        $r5 = newarray (android.content.res.XmlBlock)[4];

        $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks> = $r5;

        $r6 = new android.content.res.Configuration;

        specialinvoke $r6.<android.content.res.Configuration: void <init>()>();

        $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration> = $r6;

        $r7 = new android.util.DisplayMetrics;

        specialinvoke $r7.<android.util.DisplayMetrics: void <init>()>();

        $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics> = $r7;

        $r1 = staticinvoke <android.content.res.AssetManager: android.content.res.AssetManager getSystem()>();

        $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets> = $r1;

        $r6 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r6.<android.content.res.Configuration: void setToDefaults()>();

        $r7 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r7.<android.util.DisplayMetrics: void setToDefaults()>();

        virtualinvoke $r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(null, null);

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        virtualinvoke $r1.<android.content.res.AssetManager: void ensureStringBlocks()>();

        return;
    }

    public void <init>(android.content.res.AssetManager, android.util.DisplayMetrics, android.content.res.Configuration)
    {
        android.content.res.Resources $r0;
        android.content.res.AssetManager $r1;
        android.util.DisplayMetrics $r2, $r9;
        android.content.res.Configuration $r3, $r8;
        android.util.TypedValue $r4;
        android.util.SparseArray $r5;
        int[] $r6;
        android.content.res.XmlBlock[] $r7;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: android.content.res.AssetManager;

        $r2 := @parameter1: android.util.DisplayMetrics;

        $r3 := @parameter2: android.content.res.Configuration;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache> = $r5;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        $r0.<android.content.res.Resources: android.util.SparseArray mColorStateListCache> = $r5;

        $r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = null;

        $r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex> = -1;

        $r6 = newarray (int)[4];

        $r6[0] = 0;

        $r6[1] = 0;

        $r6[2] = 0;

        $r6[3] = 0;

        $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds> = $r6;

        $r7 = newarray (android.content.res.XmlBlock)[4];

        $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks> = $r7;

        $r8 = new android.content.res.Configuration;

        specialinvoke $r8.<android.content.res.Configuration: void <init>()>();

        $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration> = $r8;

        $r9 = new android.util.DisplayMetrics;

        specialinvoke $r9.<android.util.DisplayMetrics: void <init>()>();

        $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics> = $r9;

        $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets> = $r1;

        $r8 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r8.<android.content.res.Configuration: void setToDefaults()>();

        $r9 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r9.<android.util.DisplayMetrics: void setToDefaults()>();

        virtualinvoke $r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r3, $r2);

        virtualinvoke $r1.<android.content.res.AssetManager: void ensureStringBlocks()>();

        return;
    }

    static android.content.res.TypedArray access$000(android.content.res.Resources, int)
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.TypedArray $r1;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 = specialinvoke $r0.<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)>($i0);

        return $r1;
    }

    private android.content.res.ColorStateList getCachedColorStateList(int)
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.TypedValue $r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        android.content.res.ColorStateList $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.content.res.Resources: android.util.SparseArray mColorStateListCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.ref.WeakReference) $r3;

        if $r4 == null goto label4;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (android.content.res.ColorStateList) $r3;

        if $r5 == null goto label3;

        exitmonitor $r1;

     label2:
        return $r5;

     label3:
        $r2 = $r0.<android.content.res.Resources: android.util.SparseArray mColorStateListCache>;

        virtualinvoke $r2.<android.util.SparseArray: void delete(int)>($i0);

     label4:
        exitmonitor $r1;

     label5:
        return null;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private android.graphics.drawable.Drawable getCachedDrawable(int)
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.TypedValue $r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        android.graphics.drawable.Drawable$ConstantState $r5;
        android.graphics.drawable.Drawable $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.ref.WeakReference) $r3;

        if $r4 == null goto label4;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (android.graphics.drawable.Drawable$ConstantState) $r3;

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        exitmonitor $r1;

     label2:
        return $r6;

     label3:
        $r2 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        virtualinvoke $r2.<android.util.SparseArray: void delete(int)>($i0);

     label4:
        exitmonitor $r1;

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private android.content.res.TypedArray getCachedStyledAttributes(int)
    {
        android.content.res.Resources $r0;
        int $i0, $i1, $i2;
        android.content.res.TypedArray $r1;
        android.util.TypedValue $r2;
        int[] $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes>;

        if $r1 == null goto label5;

        $r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = null;

        $r1.<android.content.res.TypedArray: int mLength> = $i0;

        $i1 = $i0 * 5;

        $r3 = $r1.<android.content.res.TypedArray: int[] mData>;

        $i2 = lengthof $r3;

        if $i2 < $i1 goto label3;

        exitmonitor $r2;

     label2:
        return $r1;

     label3:
        $r3 = newarray (int)[$i1];

        $r1.<android.content.res.TypedArray: int[] mData> = $r3;

        $i0 = $i0 + 1;

        $r3 = newarray (int)[$i0];

        $r1.<android.content.res.TypedArray: int[] mIndices> = $r3;

        exitmonitor $r2;

     label4:
        return $r1;

     label5:
        $r1 = new android.content.res.TypedArray;

        $i1 = $i0 * 5;

        $r3 = newarray (int)[$i1];

        $i1 = $i0 + 1;

        $r4 = newarray (int)[$i1];

        specialinvoke $r1.<android.content.res.TypedArray: void <init>(android.content.res.Resources,int[],int[],int)>($r0, $r3, $r4, $i0);

        exitmonitor $r2;

     label6:
        return $r1;

     label7:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private android.content.res.PluralRules getPluralRule()
    {
        android.content.res.Resources $r0;
        java.lang.Object $r1;
        android.content.res.PluralRules $r2;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.content.res.Resources;

        $r1 = <android.content.res.Resources: java.lang.Object mSync>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.content.res.Resources: android.content.res.PluralRules mPluralRule>;

        if $r2 != null goto label2;

        $r3 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r4 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r2 = staticinvoke <android.content.res.PluralRules: android.content.res.PluralRules ruleForLocale(java.util.Locale)>($r4);

        $r0.<android.content.res.Resources: android.content.res.PluralRules mPluralRule> = $r2;

     label2:
        $r2 = $r0.<android.content.res.Resources: android.content.res.PluralRules mPluralRule>;

        exitmonitor $r1;

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static android.content.res.Resources getSystem()
    {
        java.lang.Object $r0;
        java.lang.Throwable $r1;
        android.content.res.Resources $r2;

        $r0 = <android.content.res.Resources: java.lang.Object mSync>;

        entermonitor $r0;

     label1:
        $r2 = <android.content.res.Resources: android.content.res.Resources mSystem>;

        if $r2 != null goto label2;

        $r2 = new android.content.res.Resources;

        specialinvoke $r2.<android.content.res.Resources: void <init>()>();

        <android.content.res.Resources: android.content.res.Resources mSystem> = $r2;

     label2:
        exitmonitor $r0;

     label3:
        return $r2;

     label4:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void updateSystemConfiguration(android.content.res.Configuration, android.util.DisplayMetrics)
    {
        android.content.res.Configuration $r0;
        android.util.DisplayMetrics $r1;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.content.res.Configuration;

        $r1 := @parameter1: android.util.DisplayMetrics;

        $r2 = <android.content.res.Resources: android.content.res.Resources mSystem>;

        if $r2 == null goto label1;

        $r2 = <android.content.res.Resources: android.content.res.Resources mSystem>;

        virtualinvoke $r2.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r0, $r1);

        return;

     label1:
        return;
    }

    public final void finishPreloading()
    {
        android.content.res.Resources $r0;
        boolean $z0;

        $r0 := @this: android.content.res.Resources;

        $z0 = $r0.<android.content.res.Resources: boolean mPreloading>;

        if $z0 == 0 goto label1;

        $r0.<android.content.res.Resources: boolean mPreloading> = 0;

        virtualinvoke $r0.<android.content.res.Resources: void flushLayoutCache()>();

        return;

     label1:
        return;
    }

    public final void flushLayoutCache()
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.XmlBlock $r1;
        int[] $r2, $r3;
        android.content.res.XmlBlock[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.content.res.Resources;

        $r2 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r3 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $r3[$i1] = 0;

        $r4 = $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r1 = $r4[$i1];

        if $r1 == null goto label3;

        virtualinvoke $r1.<android.content.res.XmlBlock: void close()>();

     label3:
        $r4 = $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r4[$i1] = null;

        $i1 = $i1 + 1;

        goto label2;

     label4:
        exitmonitor $r2;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.content.res.XmlResourceParser getAnimation(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.XmlResourceParser $r1;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>($i0, "anim");

        return $r1;
    }

    public final android.content.res.AssetManager getAssets()
    {
        android.content.res.Resources $r0;
        android.content.res.AssetManager r1;

        $r0 := @this: android.content.res.Resources;

        r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        return r1;
    }

    public boolean getBoolean(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1, $r2;
        boolean $z0;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 < 16 goto label5;

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 > 31 goto label5;

        $i0 = $r1.<android.util.TypedValue: int data>;

        if $i0 == 0 goto label4;

        $z0 = 1;

     label2:
        exitmonitor $r2;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    public int getColor(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1, $r2;
        android.content.res.ColorStateList $r3;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 < 16 goto label3;

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 > 31 goto label3;

        $i0 = $r1.<android.util.TypedValue: int data>;

        exitmonitor $r2;

     label2:
        return $i0;

     label3:
        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 != 3 goto label5;

        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        $r3 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>($r1, $i0);

        $i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getDefaultColor()>();

        exitmonitor $r2;

     label4:
        return $i0;

     label5:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public android.content.res.ColorStateList getColorStateList(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.TypedValue $r1, $r2;
        android.content.res.ColorStateList $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $r3 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>($r1, $i0);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.res.Configuration getConfiguration()
    {
        android.content.res.Resources $r0;
        android.content.res.Configuration r1;

        $r0 := @this: android.content.res.Resources;

        r1 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        return r1;
    }

    public float getDimension(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1, $r2;
        android.util.DisplayMetrics $r3;
        float $f0;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 != 5 goto label3;

        $i0 = $r1.<android.util.TypedValue: int data>;

        $r3 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $f0 = staticinvoke <android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>($i0, $r3);

        exitmonitor $r2;

     label2:
        return $f0;

     label3:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public int getDimensionPixelOffset(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1, $r2;
        android.util.DisplayMetrics $r3;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 != 5 goto label3;

        $i0 = $r1.<android.util.TypedValue: int data>;

        $r3 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i0 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>($i0, $r3);

        exitmonitor $r2;

     label2:
        return $i0;

     label3:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public int getDimensionPixelSize(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1, $r2;
        android.util.DisplayMetrics $r3;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 != 5 goto label3;

        $i0 = $r1.<android.util.TypedValue: int data>;

        $r3 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i0 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i0, $r3);

        exitmonitor $r2;

     label2:
        return $i0;

     label3:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public android.util.DisplayMetrics getDisplayMetrics()
    {
        android.content.res.Resources $r0;
        android.util.DisplayMetrics r1;

        $r0 := @this: android.content.res.Resources;

        r1 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        return r1;
    }

    public android.graphics.drawable.Drawable getDrawable(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.TypedValue $r1, $r2;
        android.graphics.drawable.Drawable $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $r3 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>($r1, $i0);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public float getFraction(int, int, int)
    {
        android.content.res.Resources $r0;
        int $i0, $i1, $i2, $i3;
        android.util.TypedValue $r1, $r2;
        float $f0, $f1;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i3 = $r1.<android.util.TypedValue: int type>;

        if $i3 != 6 goto label3;

        $i0 = $r1.<android.util.TypedValue: int data>;

        $f0 = (float) $i1;

        $f1 = (float) $i2;

        $f0 = staticinvoke <android.util.TypedValue: float complexToFraction(int,float,float)>($i0, $f0, $f1);

        exitmonitor $r2;

     label2:
        return $f0;

     label3:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public int getIdentifier(java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.res.Resources $r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;
        java.lang.Exception $r4;
        android.content.res.AssetManager $r5;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i0 = virtualinvoke $r5.<android.content.res.AssetManager: int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $i0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int[] getIntArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        int[] $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: int[] getArrayIntResource(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int array resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public int getInteger(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1, $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 < 16 goto label3;

        $i1 = $r1.<android.util.TypedValue: int type>;

        if $i1 > 31 goto label3;

        $i0 = $r1.<android.util.TypedValue: int data>;

        exitmonitor $r2;

     label2:
        return $i0;

     label3:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r1.<android.util.TypedValue: int type>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public android.content.res.XmlResourceParser getLayout(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.XmlResourceParser $r1;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>($i0, "layout");

        return $r1;
    }

    public android.graphics.Movie getMovie(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        java.io.IOException $r1;
        java.io.InputStream $r2;
        android.graphics.Movie $r3;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        $r3 = staticinvoke <android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>($r2);

     label1:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getQuantityString(int, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>($i0, $i1);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public transient java.lang.String getQuantityString(int, int, java.lang.Object[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;
        android.content.res.Configuration $r4;
        java.util.Locale $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = virtualinvoke $r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>($i0, $i1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r5 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, $r3, $r1);

        return $r3;
    }

    public java.lang.CharSequence getQuantityText(int, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1, $i2;
        android.content.res.PluralRules $r1;
        android.content.res.AssetManager $r2;
        java.lang.CharSequence $r3;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = specialinvoke $r0.<android.content.res.Resources: android.content.res.PluralRules getPluralRule()>();

        $r2 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i2 = virtualinvoke $r1.<android.content.res.PluralRules: int attrForNumber(int)>($i1);

        $r3 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>($i0, $i2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r2 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r3 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>($i0, 16777220);

        if $r3 == null goto label2;

        return $r3;

     label2:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Plural resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" quantity=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" item=");

        $i0 = virtualinvoke $r1.<android.content.res.PluralRules: int quantityForNumber(int)>($i1);

        $r6 = staticinvoke <android.content.res.PluralRules: java.lang.String stringForQuantity(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public java.lang.String getResourceEntryName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.String $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.String getResourceEntryName(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public java.lang.String getResourceName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.String $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.String getResourceName(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public java.lang.String getResourcePackageName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.String $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.String getResourcePackageName(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public java.lang.String getResourceTypeName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.String $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.String getResourceTypeName(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public java.lang.String getString(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String resource ID #0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public transient java.lang.String getString(int, java.lang.Object[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object[];

        $r2 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r3 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r4 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, $r2, $r1);

        return $r2;
    }

    public java.lang.String[] getStringArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.String[] $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String array resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public java.lang.CharSequence getText(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.CharSequence $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public java.lang.CharSequence getText(int, java.lang.CharSequence)
    {
        android.content.res.Resources $r0;
        int $i0;
        java.lang.CharSequence $r1, $r2;
        android.content.res.AssetManager $r3;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        if $i0 == 0 goto label2;

        $r3 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r3.<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>($i0);

     label1:
        if $r2 == null goto label3;

        return $r2;

     label2:
        $r2 = null;

        goto label1;

     label3:
        return $r1;
    }

    public java.lang.CharSequence[] getTextArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.AssetManager $r1;
        java.lang.CharSequence[] $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)>($i0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Text array resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public void getValue(int, android.util.TypedValue, boolean) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.util.TypedValue;

        $z0 := @parameter2: boolean;

        $r2 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $z0 = virtualinvoke $r2.<android.content.res.AssetManager: boolean getResourceValue(int,android.util.TypedValue,boolean)>($i0, $r1, $z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public void getValue(java.lang.String, android.util.TypedValue, boolean) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        java.lang.String $r1;
        android.util.TypedValue $r2;
        boolean $z0;
        int $i0;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.util.TypedValue;

        $z0 := @parameter2: boolean;

        $i0 = virtualinvoke $r0.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, "string", null);

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r2, $z0);

        return;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String resource name ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public android.content.res.XmlResourceParser getXml(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.content.res.XmlResourceParser $r1;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>($i0, "xml");

        return $r1;
    }

    android.content.res.ColorStateList loadColorStateList(android.util.TypedValue, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        android.util.TypedValue $r1;
        int $i0, $i1, $i2;
        android.content.res.Resources$NotFoundException $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        android.content.res.ColorStateList $r5;
        boolean $z0;
        java.lang.CharSequence $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        android.content.res.XmlResourceParser $r9;
        java.lang.Exception $r10;
        java.lang.ref.WeakReference $r11;
        java.lang.Throwable $r12;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: android.util.TypedValue;

        $i0 := @parameter1: int;

        $i1 = $r1.<android.util.TypedValue: int assetCookie>;

        $i1 = $i1 << 24;

        $i2 = $r1.<android.util.TypedValue: int data>;

        $i1 = $i1 | $i2;

        $i2 = $r1.<android.util.TypedValue: int type>;

        if $i2 < 28 goto label03;

        $i2 = $r1.<android.util.TypedValue: int type>;

        if $i2 > 31 goto label03;

        $r3 = <android.content.res.Resources: android.util.SparseArray mPreloadedColorStateLists>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        $r5 = (android.content.res.ColorStateList) $r4;

        if $r5 == null goto label01;

        return $r5;

     label01:
        $i0 = $r1.<android.util.TypedValue: int data>;

        $r5 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        $z0 = $r0.<android.content.res.Resources: boolean mPreloading>;

        if $z0 == 0 goto label02;

        $r3 = <android.content.res.Resources: android.util.SparseArray mPreloadedColorStateLists>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r5);

     label02:
        return $r5;

     label03:
        $r5 = specialinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList getCachedColorStateList(int)>($i1);

        if $r5 == null goto label04;

        return $r5;

     label04:
        $r3 = <android.content.res.Resources: android.util.SparseArray mPreloadedColorStateLists>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        $r5 = (android.content.res.ColorStateList) $r4;

        if $r5 == null goto label05;

        return $r5;

     label05:
        $r6 = $r1.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r6 != null goto label06;

        $r2 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource is not a ColorStateList (color or path): ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label06:
        $r6 = $r1.<android.util.TypedValue: java.lang.CharSequence string>;

        $r8 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label11;

     label07:
        $i2 = $r1.<android.util.TypedValue: int assetCookie>;

        $r9 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>($r8, $i0, $i2, "colorstatelist");

        $r5 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>($r0, $r9);

        interfaceinvoke $r9.<android.content.res.XmlResourceParser: void close()>();

     label08:
        if $r5 == null goto label09;

        $z0 = $r0.<android.content.res.Resources: boolean mPreloading>;

        if $z0 == 0 goto label12;

        $r3 = <android.content.res.Resources: android.util.SparseArray mPreloadedColorStateLists>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r5);

     label09:
        return $r5;

     label10:
        $r10 := @caughtexception;

        $r2 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from color state list resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r10);

        throw $r2;

     label11:
        $r2 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": .xml extension required");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label12:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r1;

     label13:
        $r3 = $r0.<android.content.res.Resources: android.util.SparseArray mColorStateListCache>;

        $r11 = new java.lang.ref.WeakReference;

        specialinvoke $r11.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r5);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r11);

        exitmonitor $r1;

     label14:
        goto label09;

     label15:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label16:
        throw $r12;

        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        android.util.TypedValue $r1;
        int $i0, $i1, $i2;
        android.graphics.drawable.Drawable $r2, $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        android.graphics.drawable.Drawable$ConstantState $r6;
        boolean $z0;
        java.lang.CharSequence $r7;
        android.content.res.Resources$NotFoundException $r8, r20;
        java.lang.StringBuilder $r9, r19;
        java.lang.String $r10;
        android.content.res.XmlResourceParser $r11;
        java.lang.Exception $r12, $r15;
        android.content.res.AssetManager $r13;
        java.io.InputStream $r14;
        java.lang.Throwable $r17;
        android.graphics.drawable.ColorDrawable r18;
        java.lang.ref.WeakReference r21;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: android.util.TypedValue;

        $i0 := @parameter1: int;

        $i1 = $r1.<android.util.TypedValue: int assetCookie>;

        $i1 = $i1 << 24;

        $i2 = $r1.<android.util.TypedValue: int data>;

        $i1 = $i1 | $i2;

        $r2 = specialinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getCachedDrawable(int)>($i1);

        $r3 = $r2;

        if $r2 == null goto label01;

        return $r2;

     label01:
        $r4 = <android.content.res.Resources: android.util.SparseArray mPreloadedDrawables>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        $r6 = (android.graphics.drawable.Drawable$ConstantState) $r5;

        if $r6 == null goto label04;

        $r3 = virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

     label02:
        if $r3 == null goto label03;

        $i0 = $r1.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0);

        $r6 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r6 == null goto label03;

        $z0 = $r0.<android.content.res.Resources: boolean mPreloading>;

        if $z0 == 0 goto label13;

        $r4 = <android.content.res.Resources: android.util.SparseArray mPreloadedDrawables>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r6);

     label03:
        return $r3;

     label04:
        $i2 = $r1.<android.util.TypedValue: int type>;

        if $i2 < 28 goto label05;

        $i2 = $r1.<android.util.TypedValue: int type>;

        if $i2 > 31 goto label05;

        r18 = new android.graphics.drawable.ColorDrawable;

        $r3 = r18;

        $i2 = $r1.<android.util.TypedValue: int data>;

        specialinvoke r18.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i2);

     label05:
        if $r3 != null goto label02;

        $r7 = $r1.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r7 != null goto label06;

        r20 = new android.content.res.Resources$NotFoundException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource is not a Drawable (color or path): ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10);

        throw r20;

     label06:
        $r7 = $r1.<android.util.TypedValue: java.lang.CharSequence string>;

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label10;

     label07:
        $i2 = $r1.<android.util.TypedValue: int assetCookie>;

        $r11 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>($r10, $i0, $i2, "drawable");

        $r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>($r0, $r11);

        interfaceinvoke $r11.<android.content.res.XmlResourceParser: void close()>();

     label08:
        goto label02;

     label09:
        $r12 := @caughtexception;

        r20 = new android.content.res.Resources$NotFoundException;

        $r8 = r20;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r12);

        throw $r8;

     label10:
        $r13 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i2 = $r1.<android.util.TypedValue: int assetCookie>;

        $r14 = virtualinvoke $r13.<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>($i2, $r10, 3);

        $r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>($r0, $r1, $r14, $r10);

        virtualinvoke $r14.<java.io.InputStream: void close()>();

     label11:
        goto label02;

     label12:
        $r15 := @caughtexception;

        r20 = new android.content.res.Resources$NotFoundException;

        $r8 = r20;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r15);

        throw $r8;

     label13:
        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r1;

     label14:
        $r4 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        r21 = new java.lang.ref.WeakReference;

        specialinvoke r21.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r6);

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, r21);

        exitmonitor $r1;

     label15:
        goto label03;

     label16:
        $r17 := @caughtexception;

        exitmonitor $r1;

     label17:
        throw $r17;

        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    android.content.res.XmlResourceParser loadXmlResourceParser(int, java.lang.String) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        java.lang.String $r1, $r5;
        android.util.TypedValue $r2, $r3;
        java.lang.CharSequence $r4;
        android.content.res.XmlResourceParser $r6;
        android.content.res.Resources$NotFoundException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r3 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r2, 1);

        $i1 = $r2.<android.util.TypedValue: int type>;

        if $i1 != 3 goto label3;

        $r4 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $i1 = $r2.<android.util.TypedValue: int assetCookie>;

        $r6 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>($r5, $i0, $i1, $r1);

        exitmonitor $r3;

     label2:
        return $r6;

     label3:
        $r7 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i0 = $r2.<android.util.TypedValue: int type>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String, int, int, java.lang.String) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.XmlBlock $r3, $r10;
        android.content.res.Resources$NotFoundException $r4;
        int[] $r5, $r6;
        android.content.res.XmlBlock[] $r7;
        android.content.res.XmlResourceParser $r8;
        android.content.res.AssetManager $r9;
        java.lang.StringBuilder $r11;
        java.lang.Throwable $r12;
        java.lang.Exception $r13;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        if $i0 == 0 goto label11;

     label01:
        $r5 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        entermonitor $r5;

     label02:
        $r6 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $i2 = lengthof $r6;

        $i3 = 0;

     label03:
        if $i3 >= $i2 goto label06;

        $r6 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $i4 = $r6[$i3];

        if $i4 != $i0 goto label05;

        $r7 = $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r3 = $r7[$i3];

        $r8 = virtualinvoke $r3.<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>();

        exitmonitor $r5;

     label04:
        return $r8;

     label05:
        $i3 = $i3 + 1;

        goto label03;

     label06:
        $r9 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r10 = virtualinvoke $r9.<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String)>($i1, $r1);

        if $r10 == null goto label10;

        $i1 = $r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex>;

        $i1 = $i1 + 1;

        if $i1 < $i2 goto label07;

        $i1 = 0;

     label07:
        $r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex> = $i1;

        $r7 = $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r3 = $r7[$i1];

        if $r3 == null goto label08;

        virtualinvoke $r3.<android.content.res.XmlBlock: void close()>();

     label08:
        $r6 = $r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $r6[$i1] = $i0;

        $r7 = $r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r7[$i1] = $r10;

        $r8 = virtualinvoke $r10.<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>();

        exitmonitor $r5;

     label09:
        return $r8;

     label10:
        exitmonitor $r5;

     label11:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from xml type ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource ID #0x");

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor $r5;

     label14:
        throw $r12;

     label15:
        $r13 := @caughtexception;

        $r4 = new android.content.res.Resources$NotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from xml type ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource ID #0x");

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r13);

        throw $r4;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label04 with label12;
        catch java.lang.Throwable from label05 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Exception from label14 to label15 with label15;
    }

    public final android.content.res.Resources$Theme newTheme()
    {
        android.content.res.Resources $r0;
        android.content.res.Resources$Theme $r1;

        $r0 := @this: android.content.res.Resources;

        $r1 = new android.content.res.Resources$Theme;

        specialinvoke $r1.<android.content.res.Resources$Theme: void <init>(android.content.res.Resources)>($r0);

        return $r1;
    }

    public android.content.res.TypedArray obtainAttributes(android.util.AttributeSet, int[])
    {
        android.content.res.Resources $r0;
        android.util.AttributeSet $r1;
        int[] $r2, $r4, $r5;
        int $i0;
        android.content.res.AssetManager $r3;
        android.content.res.TypedArray $r6;
        android.content.res.XmlBlock$Parser $r7;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 := @parameter1: int[];

        $i0 = lengthof $r2;

        $r6 = specialinvoke $r0.<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)>($i0);

        $r7 = (android.content.res.XmlBlock$Parser) $r1;

        $r3 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i0 = $r7.<android.content.res.XmlBlock$Parser: int mParseState>;

        $r4 = $r6.<android.content.res.TypedArray: int[] mData>;

        $r5 = $r6.<android.content.res.TypedArray: int[] mIndices>;

        virtualinvoke $r3.<android.content.res.AssetManager: boolean retrieveAttributes(int,int[],int[],int[])>($i0, $r2, $r4, $r5);

        $r6.<android.content.res.TypedArray: int[] mRsrcs> = $r2;

        $r6.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = $r7;

        return $r6;
    }

    public android.content.res.TypedArray obtainTypedArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.AssetManager $r1;
        android.content.res.Resources$NotFoundException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.content.res.TypedArray $r5;
        int[] $r6;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = virtualinvoke $r1.<android.content.res.AssetManager: int getArraySize(int)>($i0);

        if $i1 >= 0 goto label1;

        $r2 = new android.content.res.Resources$NotFoundException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Array resource ID #0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = specialinvoke $r0.<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)>($i1);

        $r1 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r6 = $r5.<android.content.res.TypedArray: int[] mData>;

        $i0 = virtualinvoke $r1.<android.content.res.AssetManager: int retrieveArray(int,int[])>($i0, $r6);

        $r5.<android.content.res.TypedArray: int mLength> = $i0;

        $r6 = $r5.<android.content.res.TypedArray: int[] mIndices>;

        $r6[0] = 0;

        return $r5;
    }

    public java.io.InputStream openRawResource(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.TypedValue $r1, $r3;
        java.io.InputStream $r2;
        java.lang.Throwable $r4;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r1;

     label1:
        $r3 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>($i0, $r3);

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.io.InputStream openRawResource(int, android.util.TypedValue) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.util.TypedValue $r1;
        android.content.res.Resources$NotFoundException $r2;
        android.content.res.AssetManager $r3;
        java.lang.CharSequence $r4;
        java.lang.String $r5;
        java.io.InputStream $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.util.TypedValue;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

     label1:
        $r3 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = $r1.<android.util.TypedValue: int assetCookie>;

        $r4 = $r1.<android.util.TypedValue: java.lang.CharSequence string>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>($i1, $r5, 2);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r2 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r4 = $r1.<android.util.TypedValue: java.lang.CharSequence string>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r7);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.content.res.AssetFileDescriptor openRawResourceFd(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$NotFoundException $r1;
        android.util.TypedValue $r2, $r3;
        android.content.res.AssetManager $r4;
        java.lang.CharSequence $r5;
        java.lang.String $r6;
        android.content.res.AssetFileDescriptor $r7;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.content.res.Resources;

        $i0 := @parameter0: int;

        $r3 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r2, 1);

     label2:
        $r4 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = $r2.<android.util.TypedValue: int assetCookie>;

        $r5 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>($i1, $r6);

     label3:
        exitmonitor $r3;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        $r1 = new android.content.res.Resources$NotFoundException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r5 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r8);

        throw $r1;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public void parseBundleExtra(java.lang.String, android.util.AttributeSet, android.os.Bundle) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources $r0;
        java.lang.String $r1, $r6;
        android.util.AttributeSet $r2;
        android.os.Bundle $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        org.xmlpull.v1.XmlPullParserException $r7;
        java.lang.StringBuilder $r8;
        android.util.TypedValue $r9;
        int $i0;
        java.lang.CharSequence $r10;
        boolean $z0;
        float $f0;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = <com.android.internal.R$styleable: int[] Extra>;

        $r5 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r2, $r4);

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if $r6 != null goto label1;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> requires an android:name attribute at ");

        $r1 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label1:
        $r9 = virtualinvoke $r5.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        if $r9 == null goto label9;

        $i0 = $r9.<android.util.TypedValue: int type>;

        if $i0 != 3 goto label3;

        $r10 = virtualinvoke $r9.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        virtualinvoke $r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>($r6, $r10);

     label2:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;

     label3:
        $i0 = $r9.<android.util.TypedValue: int type>;

        if $i0 != 18 goto label6;

        $i0 = $r9.<android.util.TypedValue: int data>;

        if $i0 == 0 goto label5;

        $z0 = 1;

     label4:
        virtualinvoke $r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r6, $z0);

        goto label2;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $i0 = $r9.<android.util.TypedValue: int type>;

        if $i0 < 16 goto label7;

        $i0 = $r9.<android.util.TypedValue: int type>;

        if $i0 > 31 goto label7;

        $i0 = $r9.<android.util.TypedValue: int data>;

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>($r6, $i0);

        goto label2;

     label7:
        $i0 = $r9.<android.util.TypedValue: int type>;

        if $i0 != 4 goto label8;

        $f0 = virtualinvoke $r9.<android.util.TypedValue: float getFloat()>();

        virtualinvoke $r3.<android.os.Bundle: void putFloat(java.lang.String,float)>($r6, $f0);

        goto label2;

     label8:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> only supports string, integer, float, color, and boolean at ");

        $r1 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label9:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> requires an android:value or android:resource attribute at ");

        $r1 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r7;
    }

    public void parseBundleExtras(android.content.res.XmlResourceParser, android.os.Bundle) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $r0;
        android.content.res.XmlResourceParser $r1;
        android.os.Bundle $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: android.content.res.XmlResourceParser;

        $r2 := @parameter1: android.os.Bundle;

        $i0 = interfaceinvoke $r1.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<android.content.res.XmlResourceParser: int next()>();

        if $i1 == 1 goto label4;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i2 <= $i0 goto label5;

     label2:
        if $i1 == 3 goto label1;

        if $i1 == 4 goto label1;

        $r3 = interfaceinvoke $r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("extra");

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>("extra", $r1, $r2);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label4:
        return;

     label5:
        return;
    }

    public final void startPreloading()
    {
        android.content.res.Resources $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.content.res.Resources;

        $r1 = <android.content.res.Resources: java.lang.Object mSync>;

        entermonitor $r1;

     label1:
        $z0 = <android.content.res.Resources: boolean mPreloaded>;

        if $z0 == 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Resources already preloaded");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label3:
        throw $r3;

     label4:
        <android.content.res.Resources: boolean mPreloaded> = 1;

        $r0.<android.content.res.Resources: boolean mPreloading> = 1;

        exitmonitor $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public void updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics)
    {
        android.content.res.Resources $r0;
        android.content.res.Configuration $r1, $r4;
        android.util.DisplayMetrics $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.util.TypedValue $r3;
        float $f0, $f1;
        java.lang.String $r6, $r8, $r9;
        java.util.Locale $r7;
        java.lang.StringBuilder $r10;
        android.content.res.AssetManager $r11;
        android.util.SparseArray $r12;
        java.lang.Object $r13;
        java.lang.ref.WeakReference $r14;
        android.graphics.drawable.Drawable$ConstantState $r15;
        boolean $z0;
        android.content.res.PluralRules $r16;
        java.lang.Throwable $r17, $r18;

        $r0 := @this: android.content.res.Resources;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 := @parameter1: android.util.DisplayMetrics;

        $r3 = $r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        entermonitor $r3;

        $i1 = 268435455;

        if $r1 == null goto label02;

     label01:
        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i1 = virtualinvoke $r4.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r1);

     label02:
        if $r2 == null goto label03;

        $r5 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r5.<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>($r2);

     label03:
        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $r5 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $f1 = $r4.<android.content.res.Configuration: float fontScale>;

        $f0 = $f0 * $f1;

        $r2.<android.util.DisplayMetrics: float scaledDensity> = $f0;

        $r6 = null;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r7 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        if $r7 == null goto label04;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r7 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String getLanguage()>();

        $r6 = $r8;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r7 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        $r9 = virtualinvoke $r7.<java.util.Locale: java.lang.String getCountry()>();

        if $r9 == null goto label04;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r7 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        $r6 = virtualinvoke $r7.<java.util.Locale: java.lang.String getCountry()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i2 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i3 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        if $i2 < $i3 goto label09;

        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i2 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i3 = $r2.<android.util.DisplayMetrics: int heightPixels>;

     label05:
        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i4 = $r4.<android.content.res.Configuration: int keyboardHidden>;

        if $i4 != 1 goto label06;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i0 = $r4.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i0 != 2 goto label06;

        $i4 = 3;

     label06:
        $r11 = $r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i5 = $r4.<android.content.res.Configuration: int mcc>;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i6 = $r4.<android.content.res.Configuration: int mnc>;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i7 = $r4.<android.content.res.Configuration: int orientation>;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i8 = $r4.<android.content.res.Configuration: int touchscreen>;

        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $f0 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * 160.0F;

        $i9 = (int) $f0;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i10 = $r4.<android.content.res.Configuration: int keyboard>;

        $r4 = $r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i11 = $r4.<android.content.res.Configuration: int navigation>;

        $i0 = <android.content.res.Resources: int sSdkVersion>;

        virtualinvoke $r11.<android.content.res.AssetManager: void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int)>($i5, $i6, $r6, $i7, $i8, $i9, $i10, $i4, $i11, $i2, $i3, $i0);

        $r12 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        $i2 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        $i3 = 0;

     label07:
        if $i3 >= $i2 goto label10;

        $r12 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>($i3);

        $r14 = (java.lang.ref.WeakReference) $r13;

        if $r14 == null goto label08;

        $r13 = virtualinvoke $r14.<java.lang.ref.Reference: java.lang.Object get()>();

        $r15 = (android.graphics.drawable.Drawable$ConstantState) $r13;

        if $r15 == null goto label08;

        $i4 = virtualinvoke $r15.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>();

        $z0 = staticinvoke <android.content.res.Configuration: boolean needNewResources(int,int)>($i1, $i4);

        if $z0 == 0 goto label08;

        $r12 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        virtualinvoke $r12.<android.util.SparseArray: void setValueAt(int,java.lang.Object)>($i3, null);

     label08:
        $i3 = $i3 + 1;

        goto label07;

     label09:
        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i2 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        $r2 = $r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i3 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        goto label05;

     label10:
        $r12 = $r0.<android.content.res.Resources: android.util.SparseArray mDrawableCache>;

        virtualinvoke $r12.<android.util.SparseArray: void clear()>();

        $r12 = $r0.<android.content.res.Resources: android.util.SparseArray mColorStateListCache>;

        virtualinvoke $r12.<android.util.SparseArray: void clear()>();

        virtualinvoke $r0.<android.content.res.Resources: void flushLayoutCache()>();

        exitmonitor $r3;

     label11:
        $r13 = <android.content.res.Resources: java.lang.Object mSync>;

        entermonitor $r13;

     label12:
        $r16 = $r0.<android.content.res.Resources: android.content.res.PluralRules mPluralRule>;

        if $r16 == null goto label13;

        $r7 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r16 = staticinvoke <android.content.res.PluralRules: android.content.res.PluralRules ruleForLocale(java.util.Locale)>($r7);

        $r0.<android.content.res.Resources: android.content.res.PluralRules mPluralRule> = $r16;

     label13:
        exitmonitor $r13;

     label14:
        return;

     label15:
        $r17 := @caughtexception;

     label16:
        exitmonitor $r3;

     label17:
        throw $r17;

     label18:
        $r18 := @caughtexception;

     label19:
        exitmonitor $r13;

     label20:
        throw $r18;

        catch java.lang.Throwable from label01 to label11 with label15;
        catch java.lang.Throwable from label12 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label18;
    }
}
