public class org.bouncycastle.crypto.engines.DESedeWrapEngine extends java.lang.Object implements org.bouncycastle.crypto.Wrapper
{
    private static final byte[] IV2;
    byte[] digest;
    private org.bouncycastle.crypto.modes.CBCBlockCipher engine;
    private boolean forWrapping;
    private byte[] iv;
    private org.bouncycastle.crypto.params.KeyParameter param;
    private org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV;
    org.bouncycastle.crypto.Digest sha1;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8];

        $r0[0] = 74;

        $r0[1] = -35;

        $r0[2] = -94;

        $r0[3] = 44;

        $r0[4] = 121;

        $r0[5] = -24;

        $r0[6] = 33;

        $r0[7] = 5;

        <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] IV2> = $r0;

        return;
    }

    public void <init>()
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;
        org.bouncycastle.crypto.digests.SHA1Digest $r1;
        byte[] $r2;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r1.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.Digest sha1> = $r1;

        $r2 = newarray (byte)[20];

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] digest> = $r2;

        return;
    }

    private byte[] calculateCMSKeyChecksum(byte[])
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;
        byte[] $r1, $r2;
        org.bouncycastle.crypto.Digest $r3;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        $r1 := @parameter0: byte[];

        $r2 = newarray (byte)[8];

        $r3 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.Digest sha1>;

        $i0 = lengthof $r1;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r1, 0, $i0);

        $r3 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.Digest sha1>;

        $r1 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r1, 0);

        $r1 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] digest>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, 8);

        return $r2;
    }

    private boolean checkCMSKeyChecksum(byte[], byte[])
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;
        byte[] $r1, $r2;
        int $i0, $i1;
        byte $b2, $b3;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r1 = specialinvoke $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] calculateCMSKeyChecksum(byte[])>($r1);

        $i0 = lengthof $r2;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r2;

        if $i0 == $i1 goto label4;

        $b2 = $r2[$i0];

        $b3 = $r1[$i0];

        if $b2 == $b3 goto label3;

        return 0;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        return "DESede";
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;
        boolean $z0;
        java.security.SecureRandom $r1;
        org.bouncycastle.crypto.CipherParameters $r2;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r3;
        org.bouncycastle.crypto.engines.DESedeEngine $r4;
        org.bouncycastle.crypto.params.KeyParameter $r5;
        byte[] $r6;
        org.bouncycastle.crypto.params.ParametersWithIV $r7;
        int $i0;
        java.lang.IllegalArgumentException $r8;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        $z0 := @parameter0: boolean;

        $r2 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping> = $z0;

        $r3 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r4 = new org.bouncycastle.crypto.engines.DESedeEngine;

        specialinvoke $r4.<org.bouncycastle.crypto.engines.DESedeEngine: void <init>()>();

        specialinvoke $r3.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r4);

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine> = $r3;

        $z0 = $r2 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z0 == 0 goto label1;

        $r5 = (org.bouncycastle.crypto.params.KeyParameter) $r2;

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param> = $r5;

        $z0 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label4;

        $r6 = newarray (byte)[8];

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv> = $r6;

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r6);

        $r7 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r5 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        specialinvoke $r7.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r5, $r6);

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r7;

        return;

     label1:
        $z0 = $r2 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label5;

        $r7 = (org.bouncycastle.crypto.params.ParametersWithIV) $r2;

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r7;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r6 = virtualinvoke $r7.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv> = $r6;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r2 = virtualinvoke $r7.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r5 = (org.bouncycastle.crypto.params.KeyParameter) $r2;

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param> = $r5;

        $z0 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label3;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        if $r6 == null goto label2;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i0 = lengthof $r6;

        if $i0 == 8 goto label6;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV is not 8 octets");

        throw $r8;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You should not supply an IV for unwrapping");

        throw $r8;

     label4:
        return;

     label5:
        return;

     label6:
        return;
    }

    public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;
        byte[] $r1, $r2, $r4;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.params.ParametersWithIV $r3;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        org.bouncycastle.crypto.InvalidCipherTextException $r6;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        org.bouncycastle.crypto.params.KeyParameter $r10;
        byte $b3;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label01;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not set for unwrapping");

        throw $r5;

     label01:
        if $r1 != null goto label02;

        $r6 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Null pointer as ciphertext");

        throw $r6;

     label02:
        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = $i1 % $i2;

        if $i2 == 0 goto label03;

        $r6 = new org.bouncycastle.crypto.InvalidCipherTextException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ciphertext not multiple of ");

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i0 = virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label03:
        $r3 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r10 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r2 = <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] IV2>;

        specialinvoke $r3.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r10, $r2);

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r3);

        $r4 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r4, 0, $i1);

        $i0 = 0;

     label04:
        $i1 = lengthof $r4;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i1 / $i2;

        if $i0 >= $i1 goto label05;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i0 * $i1;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r4, $i1, $r4, $i1);

        $i0 = $i0 + 1;

        goto label04;

     label05:
        $i0 = lengthof $r4;

        $r2 = newarray (byte)[$i0];

        $i0 = 0;

     label06:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label07;

        $i1 = lengthof $r4;

        $i2 = $i0 + 1;

        $i1 = $i1 - $i2;

        $b3 = $r4[$i1];

        $r2[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r1 = newarray (byte)[8];

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv> = $r1;

        $i0 = lengthof $r2;

        $i0 = $i0 - 8;

        $r1 = newarray (byte)[$i0];

        $r4 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, 8);

        $i0 = lengthof $r2;

        $i0 = $i0 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 8, $r1, 0, $i0);

        $r3 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r10 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r2 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        specialinvoke $r3.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r10, $r2);

        $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r3;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r3 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r3);

        $i0 = lengthof $r1;

        $r2 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $i0 = 0;

     label08:
        $i1 = lengthof $r2;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i1 / $i2;

        if $i0 >= $i1 goto label09;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i0 * $i1;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r2, $i1, $r2, $i1);

        $i0 = $i0 + 1;

        goto label08;

     label09:
        $i0 = lengthof $r2;

        $i0 = $i0 - 8;

        $r4 = newarray (byte)[$i0];

        $r1 = newarray (byte)[8];

        $i0 = lengthof $r2;

        $i0 = $i0 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0);

        $i0 = lengthof $r2;

        $i0 = $i0 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, 0, 8);

        $z0 = specialinvoke $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean checkCMSKeyChecksum(byte[],byte[])>($r4, $r1);

        if $z0 != 0 goto label10;

        $r6 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Checksum inside ciphertext is corrupted");

        throw $r6;

     label10:
        return $r4;
    }

    public byte[] wrap(byte[], int, int)
    {
        org.bouncycastle.crypto.engines.DESedeWrapEngine $r0;
        byte[] $r1, $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3;
        org.bouncycastle.crypto.params.ParametersWithIV $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r6;
        byte $b4;
        org.bouncycastle.crypto.params.KeyParameter $r8;

        $r0 := @this: org.bouncycastle.crypto.engines.DESedeWrapEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not initialized for wrapping");

        throw $r3;

     label1:
        $r4 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r4, 0, $i1);

        $r1 = specialinvoke $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] calculateCMSKeyChecksum(byte[])>($r4);

        $i0 = lengthof $r4;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r5 = newarray (byte)[$i0];

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i0);

        $i0 = lengthof $r4;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r5, $i0, $i1);

        $i0 = lengthof $r5;

        $r1 = newarray (byte)[$i0];

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r1, 0, $i0);

        $i0 = lengthof $r5;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i0 = $i0 / $i1;

        $i1 = lengthof $r5;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i1 % $i2;

        if $i1 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not multiple of block length");

        throw $r3;

     label2:
        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r2 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r2);

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = $i1 * $i2;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r1, $i2, $r1, $i2);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r4 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i1 = lengthof $r4;

        $i2 = lengthof $r1;

        $i1 = $i1 + $i2;

        $r4 = newarray (byte)[$i1];

        $r5 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $r7 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i1 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i1);

        $r5 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] iv>;

        $i1 = lengthof $r5;

        $i2 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, $i1, $i2);

        $i1 = lengthof $r4;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

     label5:
        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label6;

        $i2 = lengthof $r4;

        $i3 = $i1 + 1;

        $i2 = $i2 - $i3;

        $b4 = $r4[$i2];

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $r2 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r8 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        $r4 = <org.bouncycastle.crypto.engines.DESedeWrapEngine: byte[] IV2>;

        specialinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r8, $r4);

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r2);

        $i1 = 0;

     label7:
        $i2 = $i0 + 1;

        if $i1 >= $i2 goto label8;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = $i1 * $i2;

        $r6 = $r0.<org.bouncycastle.crypto.engines.DESedeWrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r1, $i2, $r1, $i2);

        $i1 = $i1 + 1;

        goto label7;

     label8:
        return $r1;
    }
}
