public class com.google.masf.protocol.HttpRequest extends com.google.masf.protocol.SimpleRequest
{
    private byte[] bodyPartCount;
    private java.util.Vector bodyParts;
    private java.lang.String contentType;
    private java.lang.String method;
    private byte[] payloadHeader;
    private byte[] payloadMetaData;
    private com.google.masf.InputStreamProvider payloadProvider;
    private java.util.Hashtable properties;

    public void <init>()
    {
        com.google.masf.protocol.HttpRequest $r0;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        specialinvoke $r0.<com.google.masf.protocol.SimpleRequest: void <init>()>();

        $r0.<com.google.masf.protocol.HttpRequest: java.lang.String method> = "GET";

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setBlockType(int)>(256);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.google.masf.protocol.SimpleRequest: void <init>(java.lang.String,int)>($r1, 1);

        $r0.<com.google.masf.protocol.HttpRequest: java.lang.String method> = "GET";

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setBlockType(int)>(256);

        return;
    }

    public void <init>(java.lang.String, int)
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.masf.protocol.SimpleRequest: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<com.google.masf.protocol.HttpRequest: java.lang.String method> = "GET";

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setBlockType(int)>(256);

        return;
    }

    public void <init>(java.lang.String, int, com.google.masf.InputStreamProvider)
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.lang.String $r1;
        int $i0;
        com.google.masf.InputStreamProvider $r2;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.masf.InputStreamProvider;

        specialinvoke $r0.<com.google.masf.protocol.SimpleRequest: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<com.google.masf.protocol.HttpRequest: java.lang.String method> = "GET";

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setBlockType(int)>(256);

        specialinvoke $r0.<com.google.masf.protocol.HttpRequest: void setPayloadProvider(com.google.masf.InputStreamProvider)>($r2);

        return;
    }

    public void <init>(java.lang.String, int, byte[])
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.lang.String $r1;
        int $i0;
        byte[] $r2;
        com.google.masf.ByteArrayInputStreamProvider $r3;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $r3 = new com.google.masf.ByteArrayInputStreamProvider;

        specialinvoke $r3.<com.google.masf.ByteArrayInputStreamProvider: void <init>(byte[])>($r2);

        specialinvoke $r0.<com.google.masf.protocol.HttpRequest: void <init>(java.lang.String,int,com.google.masf.InputStreamProvider)>($r1, $i0, $r3);

        return;
    }

    private void generateBlockData() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.util.Vector $r1;
        byte[] $r2;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r1 == null goto label1;

        $r2 = $r0.<com.google.masf.protocol.HttpRequest: byte[] bodyPartCount>;

        if $r2 != null goto label1;

        virtualinvoke $r0.<com.google.masf.protocol.HttpRequest: byte[] generateBodyPartCount()>();

     label1:
        $r2 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData>;

        if $r2 != null goto label2;

        virtualinvoke $r0.<com.google.masf.protocol.HttpRequest: byte[] generatePayloadMetaData()>();

     label2:
        $r2 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader>;

        if $r2 != null goto label3;

        virtualinvoke $r0.<com.google.masf.protocol.HttpRequest: byte[] generatePayloadHeader()>();

        return;

     label3:
        return;
    }

    private void setPayloadProvider(com.google.masf.InputStreamProvider)
    {
        com.google.masf.protocol.HttpRequest $r0;
        com.google.masf.InputStreamProvider $r1;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: com.google.masf.InputStreamProvider;

        $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider> = $r1;

        return;
    }

    public void addBodyPart(com.google.masf.protocol.BodyPart)
    {
        com.google.masf.protocol.HttpRequest $r0;
        com.google.masf.protocol.BodyPart $r1;
        boolean $z0;
        java.util.Vector $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: com.google.masf.protocol.BodyPart;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r2 != null goto label2;

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setBlockType(int)>(257);

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts> = $r2;

     label2:
        $r2 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $r2 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void dispose()
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.util.Vector $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.masf.protocol.BodyPart $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader> = null;

        $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData> = null;

        $r0.<com.google.masf.protocol.HttpRequest: byte[] bodyPartCount> = null;

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r1 == null goto label4;

        $i0 = 0;

     label2:
        $r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (com.google.masf.protocol.BodyPart) $r2;

        virtualinvoke $r3.<com.google.masf.protocol.BodyPart: void dispose()>();

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    protected byte[] generateBodyPartCount() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.io.ByteArrayOutputStream $r1;
        java.io.DataOutputStream $r2;
        java.util.Vector $r3;
        int $i0;
        byte[] $r4;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(2);

        $r2 = new java.io.DataOutputStream;

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>($i0);

        virtualinvoke $r2.<java.io.FilterOutputStream: void close()>();

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

        $r4 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r0.<com.google.masf.protocol.HttpRequest: byte[] bodyPartCount> = $r4;

        $r4 = $r0.<com.google.masf.protocol.HttpRequest: byte[] bodyPartCount>;

        return $r4;
    }

    protected byte[] generatePayloadHeader() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.io.DataOutputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        int $i0, $i1;
        java.lang.String $r3;
        java.util.Vector $r4;
        byte[] $r5;
        com.google.masf.InputStreamProvider $r6;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        $i0 = virtualinvoke $r0.<com.google.masf.protocol.Block: int getId()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $r3 = virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: java.lang.String getServiceUri()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        $i0 = virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: int getServiceVersion()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $r4 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r4 != null goto label2;

        $r5 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData>;

        $i0 = lengthof $r5;

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        if $r6 == null goto label1;

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $i1 = interfaceinvoke $r6.<com.google.masf.InputStreamProvider: int getStreamLength()>();

        $i0 = $i0 + $i1;

     label1:
        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label2:
        virtualinvoke $r1.<java.io.FilterOutputStream: void close()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

        $r5 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader> = $r5;

        $r5 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader>;

        return $r5;
    }

    protected byte[] generatePayloadMetaData() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.io.DataOutputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        java.lang.String $r3;
        java.util.Vector $r4;
        java.util.Hashtable $r5;
        com.google.masf.InputStreamProvider $r6;
        int $i0;
        byte[] $r7;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.lang.String method>;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        $r4 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r4 == null goto label2;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.lang.String contentType>;

        if $r3 == null goto label6;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.lang.String contentType>;

     label1:
        staticinvoke <com.google.masf.protocol.HttpUtil: void writeContentType(java.io.DataOutputStream,java.lang.String)>($r1, $r3);

        virtualinvoke $r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

     label2:
        $r5 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties>;

        $r4 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r4 != null goto label7;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.lang.String contentType>;

     label3:
        staticinvoke <com.google.masf.protocol.HttpUtil: void writeProperties(java.io.DataOutputStream,java.util.Hashtable,java.lang.String)>($r1, $r5, $r3);

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        if $r6 == null goto label8;

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $i0 = interfaceinvoke $r6.<com.google.masf.InputStreamProvider: int getStreamLength()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label4:
        $r4 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r4 == null goto label5;

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        if $r6 == null goto label5;

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $i0 = interfaceinvoke $r6.<com.google.masf.InputStreamProvider: int getStreamLength()>();

        if $i0 <= 0 goto label5;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

     label5:
        virtualinvoke $r1.<java.io.FilterOutputStream: void close()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData> = $r7;

        $r7 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData>;

        return $r7;

     label6:
        $r3 = "multipart/related";

        goto label1;

     label7:
        $r3 = null;

        goto label3;

     label8:
        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>(0);

        goto label4;
    }

    public java.io.InputStream getBodyInputStream() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.util.Vector $r1, $r6;
        java.io.ByteArrayInputStream $r2;
        byte[] $r3;
        com.google.masf.InputStreamProvider $r4;
        java.io.InputStream $r5;
        int $i0, $i1;
        java.lang.Object $r7;
        com.google.masf.protocol.BodyPart $r8;
        java.io.InputStream[] $r9;
        com.google.common.io.SequenceInputStream $r10;
        java.lang.Throwable $r11;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.masf.protocol.HttpRequest: void generateBlockData()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $r4 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        if $r4 == null goto label2;

        $r4 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $r5 = interfaceinvoke $r4.<com.google.masf.InputStreamProvider: java.io.InputStream getInputStream()>();

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r5);

     label2:
        $r6 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r6 == null goto label4;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: byte[] bodyPartCount>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $i0 = 0;

     label3:
        $r6 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $i1 = virtualinvoke $r6.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r6 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $r7 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r8 = (com.google.masf.protocol.BodyPart) $r7;

        $r5 = virtualinvoke $r8.<com.google.masf.protocol.BodyPart: java.io.InputStream getInputStream()>();

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $r9 = newarray (java.io.InputStream)[$i0];

        virtualinvoke $r1.<java.util.Vector: void copyInto(java.lang.Object[])>($r9);

        $r10 = new com.google.common.io.SequenceInputStream;

        specialinvoke $r10.<com.google.common.io.SequenceInputStream: void <init>(java.io.InputStream[])>($r9);

     label5:
        exitmonitor $r0;

        return $r10;

     label6:
        $r11 := @caughtexception;

        exitmonitor $r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    protected java.util.Vector getBodyParts()
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.util.Vector r1;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        return r1;
    }

    public int getBodyStreamLength() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        com.google.masf.InputStreamProvider $r2;
        java.util.Vector $r3;
        java.lang.Object $r4;
        com.google.masf.protocol.BodyPart $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.masf.protocol.HttpRequest: void generateBlockData()>();

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader>;

        $i0 = lengthof $r1;

        $i0 = $i0 + 0;

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadMetaData>;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r2 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $i1 = interfaceinvoke $r2.<com.google.masf.InputStreamProvider: int getStreamLength()>();

        $i0 = $i0 + $i1;

     label2:
        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        if $r3 == null goto label6;

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: byte[] bodyPartCount>;

        $i1 = lengthof $r1;

        $i1 = $i0 + $i1;

        $i0 = 0;

     label3:
        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $i2 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 >= $i2 goto label5;

        $r3 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r5 = (com.google.masf.protocol.BodyPart) $r4;

        $i2 = virtualinvoke $r5.<com.google.masf.protocol.BodyPart: int getStreamLength()>();

     label4:
        $i0 = $i0 + 1;

        $i1 = $i2 + $i1;

        goto label3;

     label5:
        $i0 = $i1;

     label6:
        exitmonitor $r0;

        return $i0;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label7;
    }

    public byte[] getPayload() throws java.io.IOException
    {
        com.google.masf.protocol.HttpRequest $r0;
        com.google.masf.InputStreamProvider $r1;
        java.io.InputStream $r2;
        int $i0;
        byte[] $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $r2 = interfaceinvoke $r1.<com.google.masf.InputStreamProvider: java.io.InputStream getInputStream()>();

        $r1 = $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider>;

        $i0 = interfaceinvoke $r1.<com.google.masf.InputStreamProvider: int getStreamLength()>();

        $r3 = staticinvoke <com.google.common.io.IoUtil: byte[] readAllBytes(java.io.InputStream,int)>($r2, $i0);

     label2:
        exitmonitor $r0;

        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.Hashtable getProperties()
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.util.Hashtable $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties>;

        if $r1 != null goto label2;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties> = $r1;

     label2:
        $r1 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties>;

     label3:
        exitmonitor $r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    protected void setBodyParts(java.util.Vector)
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.util.Vector $r1;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.util.Vector;

        $r0.<com.google.masf.protocol.HttpRequest: java.util.Vector bodyParts> = $r1;

        return;
    }

    public void setConnectionProperty(java.lang.String, java.lang.String)
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        java.util.Hashtable $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label1:
        $r3 = "Content-Type";

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r0.<com.google.masf.protocol.HttpRequest: java.lang.String contentType> = $r2;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r5 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties>;

        if $r5 != null goto label4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties> = $r5;

     label4:
        $r5 = $r0.<com.google.masf.protocol.HttpRequest: java.util.Hashtable properties>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label5:
        goto label2;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public void setId(int)
    {
        com.google.masf.protocol.HttpRequest $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.masf.protocol.Block: void setId(int)>($i0);

        $r0.<com.google.masf.protocol.HttpRequest: byte[] payloadHeader> = null;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setMethod(java.lang.String)
    {
        com.google.masf.protocol.HttpRequest $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.HttpRequest: java.lang.String method> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setPayload(com.google.masf.InputStreamProvider)
    {
        com.google.masf.protocol.HttpRequest $r0;
        com.google.masf.InputStreamProvider $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: com.google.masf.InputStreamProvider;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setPayload(byte[])
    {
        com.google.masf.protocol.HttpRequest $r0;
        byte[] $r1;
        com.google.masf.ByteArrayInputStreamProvider $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.masf.protocol.HttpRequest;

        $r1 := @parameter0: byte[];

        entermonitor $r0;

     label1:
        $r2 = new com.google.masf.ByteArrayInputStreamProvider;

        specialinvoke $r2.<com.google.masf.ByteArrayInputStreamProvider: void <init>(byte[])>($r1);

        $r0.<com.google.masf.protocol.HttpRequest: com.google.masf.InputStreamProvider payloadProvider> = $r2;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
