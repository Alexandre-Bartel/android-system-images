public class android.test.suitebuilder.annotation.HasAnnotation extends java.lang.Object implements com.android.internal.util.Predicate
{
    private com.android.internal.util.Predicate hasMethodOrClassAnnotation;

    public void <init>(java.lang.Class)
    {
        android.test.suitebuilder.annotation.HasAnnotation $r0;
        java.lang.Class $r1;
        com.android.internal.util.Predicate $r2;
        com.android.internal.util.Predicate[] $r3;
        android.test.suitebuilder.annotation.HasMethodAnnotation $r4;
        android.test.suitebuilder.annotation.HasClassAnnotation $r5;

        $r0 := @this: android.test.suitebuilder.annotation.HasAnnotation;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (com.android.internal.util.Predicate)[2];

        $r4 = new android.test.suitebuilder.annotation.HasMethodAnnotation;

        specialinvoke $r4.<android.test.suitebuilder.annotation.HasMethodAnnotation: void <init>(java.lang.Class)>($r1);

        $r3[0] = $r4;

        $r5 = new android.test.suitebuilder.annotation.HasClassAnnotation;

        specialinvoke $r5.<android.test.suitebuilder.annotation.HasClassAnnotation: void <init>(java.lang.Class)>($r1);

        $r3[1] = $r5;

        $r2 = staticinvoke <com.android.internal.util.Predicates: com.android.internal.util.Predicate or(com.android.internal.util.Predicate[])>($r3);

        $r0.<android.test.suitebuilder.annotation.HasAnnotation: com.android.internal.util.Predicate hasMethodOrClassAnnotation> = $r2;

        return;
    }

    public boolean apply(android.test.suitebuilder.TestMethod)
    {
        android.test.suitebuilder.annotation.HasAnnotation $r0;
        android.test.suitebuilder.TestMethod $r1;
        boolean $z0;
        com.android.internal.util.Predicate $r2;

        $r0 := @this: android.test.suitebuilder.annotation.HasAnnotation;

        $r1 := @parameter0: android.test.suitebuilder.TestMethod;

        $r2 = $r0.<android.test.suitebuilder.annotation.HasAnnotation: com.android.internal.util.Predicate hasMethodOrClassAnnotation>;

        $z0 = interfaceinvoke $r2.<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        android.test.suitebuilder.annotation.HasAnnotation $r0;
        boolean $z0;
        java.lang.Object $r1;
        android.test.suitebuilder.TestMethod $r2;

        $r0 := @this: android.test.suitebuilder.annotation.HasAnnotation;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.test.suitebuilder.TestMethod) $r1;

        $z0 = virtualinvoke $r0.<android.test.suitebuilder.annotation.HasAnnotation: boolean apply(android.test.suitebuilder.TestMethod)>($r2);

        return $z0;
    }
}
