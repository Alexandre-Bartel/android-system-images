class android.content.SyncManager extends java.lang.Object
{
    private static final java.lang.String ACTION_SYNC_ALARM;
    private static final long DEFAULT_MAX_SYNC_RETRY_TIME_IN_SECONDS;
    private static final long ERROR_NOTIFICATION_DELAY_MS;
    private static final java.lang.String HANDLE_SYNC_ALARM_WAKE_LOCK;
    private static final long INITIAL_SYNC_RETRY_TIME_IN_MS;
    private static final long LOCAL_SYNC_DELAY;
    private static final int MAX_SYNC_POLL_DELAY_SECONDS;
    private static final long MAX_TIME_PER_SYNC;
    private static final long MILLIS_IN_4WEEKS;
    private static final long MILLIS_IN_DAY;
    private static final long MILLIS_IN_HOUR;
    private static final long MILLIS_IN_WEEK;
    private static final int MIN_SYNC_POLL_DELAY_SECONDS;
    private static java.lang.String[] STATUS_PROJECTION;
    private static final java.lang.String SYNCMANAGER_PREFS_FILENAME;
    private static final java.lang.String[] SYNC_ACTIVE_PROJECTION;
    private static final long SYNC_NOTIFICATION_DELAY;
    private static final java.lang.String[] SYNC_PENDING_PROJECTION;
    private static final java.lang.String SYNC_POLL_ALARM;
    private static final java.lang.String SYNC_WAKE_LOCK;
    private static final java.lang.String TAG;
    private android.accounts.AccountMonitor mAccountMonitor;
    private volatile java.lang.String[] mAccounts;
    private android.content.SyncManager$ActiveSyncContext mActiveSyncContext;
    private android.app.AlarmManager mAlarmService;
    private android.content.BroadcastReceiver mConnectivityIntentReceiver;
    private android.content.ContentResolver mContentResolver;
    private android.content.Context mContext;
    private volatile boolean mDataConnectionIsConnected;
    private volatile android.os.PowerManager$WakeLock mHandleAlarmWakeLock;
    private long mHeartbeatTime;
    private boolean mNeedSyncActiveNotification;
    private boolean mNeedSyncErrorNotification;
    private final android.app.NotificationManager mNotificationMgr;
    private volatile android.content.pm.IPackageManager mPackageManager;
    private java.lang.String mStatusText;
    private android.content.BroadcastReceiver mStorageIntentReceiver;
    private volatile boolean mStorageIsLow;
    private final android.app.PendingIntent mSyncAlarmIntent;
    private final android.content.SyncManager$SyncHandler mSyncHandler;
    private final android.app.PendingIntent mSyncPollAlarmIntent;
    private volatile boolean mSyncPollInitialized;
    private final android.content.SyncManager$SyncQueue mSyncQueue;
    private android.provider.Sync$Settings$QueryMap mSyncSettings;
    private final android.content.SyncStorageEngine mSyncStorageEngine;
    private android.os.HandlerThread mSyncThread;
    private volatile android.os.PowerManager$WakeLock mSyncWakeLock;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.content.SyncManager: java.lang.String TAG> = "SyncManager";

        <android.content.SyncManager: java.lang.String SYNC_WAKE_LOCK> = "SyncManagerSyncWakeLock";

        <android.content.SyncManager: java.lang.String SYNC_POLL_ALARM> = "android.content.syncmanager.SYNC_POLL_ALARM";

        <android.content.SyncManager: long SYNC_NOTIFICATION_DELAY> = 30000L;

        <android.content.SyncManager: java.lang.String SYNCMANAGER_PREFS_FILENAME> = "/data/system/syncmanager.prefs";

        <android.content.SyncManager: int MIN_SYNC_POLL_DELAY_SECONDS> = 86400;

        <android.content.SyncManager: long MILLIS_IN_WEEK> = 604800000L;

        <android.content.SyncManager: long MILLIS_IN_HOUR> = 3600000L;

        <android.content.SyncManager: long MILLIS_IN_DAY> = 86400000L;

        <android.content.SyncManager: long MILLIS_IN_4WEEKS> = 2419200000L;

        <android.content.SyncManager: long MAX_TIME_PER_SYNC> = 300000L;

        <android.content.SyncManager: int MAX_SYNC_POLL_DELAY_SECONDS> = 129600;

        <android.content.SyncManager: long LOCAL_SYNC_DELAY> = 30000L;

        <android.content.SyncManager: long INITIAL_SYNC_RETRY_TIME_IN_MS> = 30000L;

        <android.content.SyncManager: java.lang.String HANDLE_SYNC_ALARM_WAKE_LOCK> = "SyncManagerHandleSyncAlarmWakeLock";

        <android.content.SyncManager: long ERROR_NOTIFICATION_DELAY_MS> = 600000L;

        <android.content.SyncManager: long DEFAULT_MAX_SYNC_RETRY_TIME_IN_SECONDS> = 3600L;

        <android.content.SyncManager: java.lang.String ACTION_SYNC_ALARM> = "android.content.syncmanager.SYNC_ALARM";

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "account";

        $r0[1] = "authority";

        $r0[2] = "startTime";

        <android.content.SyncManager: java.lang.String[] SYNC_ACTIVE_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "account";

        $r0[1] = "authority";

        <android.content.SyncManager: java.lang.String[] SYNC_PENDING_PROJECTION> = $r0;

        $r0 = newarray (java.lang.String)[13];

        $r0[0] = "account";

        $r0[1] = "authority";

        $r0[2] = "numSyncs";

        $r0[3] = "totalElapsedTime";

        $r0[4] = "numSourceLocal";

        $r0[5] = "numSourcePoll";

        $r0[6] = "numSourceServer";

        $r0[7] = "numSourceUser";

        $r0[8] = "lastSuccessSource";

        $r0[9] = "lastSuccessTime";

        $r0[10] = "lastFailureSource";

        $r0[11] = "lastFailureTime";

        $r0[12] = "lastFailureMesg";

        <android.content.SyncManager: java.lang.String[] STATUS_PROJECTION> = $r0;

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        android.content.SyncManager $r0;
        android.content.Context $r1, $r10;
        boolean $z0;
        android.content.SyncManager$3 $r2;
        android.content.SyncManager$1 $r3;
        android.content.SyncManager$2 $r4;
        android.content.SyncStorageEngine $r5;
        android.content.SyncManager$SyncQueue $r6;
        android.os.HandlerThread $r7;
        android.content.SyncManager$SyncHandler $r8;
        android.os.Looper $r9;
        android.content.Intent $r11;
        android.app.PendingIntent $r12;
        android.content.IntentFilter $r13;
        android.content.BroadcastReceiver $r14;
        java.lang.Object $r15;
        android.app.NotificationManager $r16;
        android.content.SyncManager$SyncAlarmIntentReceiver $r17;
        android.os.PowerManager $r18;
        android.os.PowerManager$WakeLock $r19;
        android.accounts.AccountMonitor $r20;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.SyncManager: java.lang.String mStatusText> = "";

        $r0.<android.content.SyncManager: long mHeartbeatTime> = 0L;

        $r0.<android.content.SyncManager: java.lang.String[] mAccounts> = null;

        $r0.<android.content.SyncManager: boolean mDataConnectionIsConnected> = 0;

        $r0.<android.content.SyncManager: boolean mStorageIsLow> = 0;

        $r0.<android.content.SyncManager: android.app.AlarmManager mAlarmService> = null;

        $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext> = null;

        $r0.<android.content.SyncManager: boolean mNeedSyncErrorNotification> = 0;

        $r0.<android.content.SyncManager: boolean mNeedSyncActiveNotification> = 0;

        $r3 = new android.content.SyncManager$1;

        specialinvoke $r3.<android.content.SyncManager$1: void <init>(android.content.SyncManager)>($r0);

        $r0.<android.content.SyncManager: android.content.BroadcastReceiver mStorageIntentReceiver> = $r3;

        $r4 = new android.content.SyncManager$2;

        specialinvoke $r4.<android.content.SyncManager$2: void <init>(android.content.SyncManager)>($r0);

        $r0.<android.content.SyncManager: android.content.BroadcastReceiver mConnectivityIntentReceiver> = $r4;

        staticinvoke <android.content.SyncStorageEngine: void init(android.content.Context)>($r1);

        $r5 = staticinvoke <android.content.SyncStorageEngine: android.content.SyncStorageEngine getSingleton()>();

        $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine> = $r5;

        $r6 = new android.content.SyncManager$SyncQueue;

        $r5 = $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine>;

        specialinvoke $r6.<android.content.SyncManager$SyncQueue: void <init>(android.content.SyncStorageEngine)>($r5);

        $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue> = $r6;

        $r0.<android.content.SyncManager: android.content.Context mContext> = $r1;

        $r7 = new android.os.HandlerThread;

        specialinvoke $r7.<android.os.HandlerThread: void <init>(java.lang.String,int)>("SyncHandlerThread", 10);

        $r0.<android.content.SyncManager: android.os.HandlerThread mSyncThread> = $r7;

        $r7 = $r0.<android.content.SyncManager: android.os.HandlerThread mSyncThread>;

        virtualinvoke $r7.<java.lang.Thread: void start()>();

        $r8 = new android.content.SyncManager$SyncHandler;

        $r7 = $r0.<android.content.SyncManager: android.os.HandlerThread mSyncThread>;

        $r9 = virtualinvoke $r7.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r8.<android.content.SyncManager$SyncHandler: void <init>(android.content.SyncManager,android.os.Looper)>($r0, $r9);

        $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler> = $r8;

        $r0.<android.content.SyncManager: android.content.pm.IPackageManager mPackageManager> = null;

        $r10 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.content.syncmanager.SYNC_ALARM");

        $r12 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r10, 0, $r11, 0);

        $r0.<android.content.SyncManager: android.app.PendingIntent mSyncAlarmIntent> = $r12;

        $r10 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.content.syncmanager.SYNC_POLL_ALARM");

        $r12 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r10, 0, $r11, 0);

        $r0.<android.content.SyncManager: android.app.PendingIntent mSyncPollAlarmIntent> = $r12;

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r14 = $r0.<android.content.SyncManager: android.content.BroadcastReceiver mConnectivityIntentReceiver>;

        virtualinvoke $r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r14, $r13);

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.DEVICE_STORAGE_LOW");

        virtualinvoke $r13.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DEVICE_STORAGE_OK");

        $r14 = $r0.<android.content.SyncManager: android.content.BroadcastReceiver mStorageIntentReceiver>;

        virtualinvoke $r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r14, $r13);

        if $z0 != 0 goto label2;

        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r16 = (android.app.NotificationManager) $r15;

        $r0.<android.content.SyncManager: android.app.NotificationManager mNotificationMgr> = $r16;

        $r17 = new android.content.SyncManager$SyncAlarmIntentReceiver;

        specialinvoke $r17.<android.content.SyncManager$SyncAlarmIntentReceiver: void <init>(android.content.SyncManager)>($r0);

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>(java.lang.String)>("android.content.syncmanager.SYNC_ALARM");

        virtualinvoke $r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r17, $r13);

     label1:
        $r15 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r18 = (android.os.PowerManager) $r15;

        $r19 = virtualinvoke $r18.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SyncManagerSyncWakeLock");

        $r0.<android.content.SyncManager: android.os.PowerManager$WakeLock mSyncWakeLock> = $r19;

        $r19 = $r0.<android.content.SyncManager: android.os.PowerManager$WakeLock mSyncWakeLock>;

        virtualinvoke $r19.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r19 = virtualinvoke $r18.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SyncManagerHandleSyncAlarmWakeLock");

        $r0.<android.content.SyncManager: android.os.PowerManager$WakeLock mHandleAlarmWakeLock> = $r19;

        $r19 = $r0.<android.content.SyncManager: android.os.PowerManager$WakeLock mHandleAlarmWakeLock>;

        virtualinvoke $r19.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        if $z0 != 0 goto label3;

        $r2 = new android.content.SyncManager$3;

        specialinvoke $r2.<android.content.SyncManager$3: void <init>(android.content.SyncManager)>($r0);

        $r20 = new android.accounts.AccountMonitor;

        specialinvoke $r20.<android.accounts.AccountMonitor: void <init>(android.content.Context,android.accounts.AccountMonitorListener)>($r1, $r2);

        $r0.<android.content.SyncManager: android.accounts.AccountMonitor mAccountMonitor> = $r20;

        return;

     label2:
        $r0.<android.content.SyncManager: android.app.NotificationManager mNotificationMgr> = null;

        goto label1;

     label3:
        return;
    }

    static void access$000(android.content.SyncManager)
    {
        android.content.SyncManager $r0;

        $r0 := @parameter0: android.content.SyncManager;

        specialinvoke $r0.<android.content.SyncManager: void ensureContentResolver()>();

        return;
    }

    static boolean access$100(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        boolean z0;

        $r0 := @parameter0: android.content.SyncManager;

        z0 = $r0.<android.content.SyncManager: boolean mStorageIsLow>;

        return z0;
    }

    static void access$1000(android.content.SyncManager)
    {
        android.content.SyncManager $r0;

        $r0 := @parameter0: android.content.SyncManager;

        specialinvoke $r0.<android.content.SyncManager: void sendSyncAlarmMessage()>();

        return;
    }

    static boolean access$102(android.content.SyncManager, boolean)
    {
        android.content.SyncManager $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.SyncManager;

        $z0 := @parameter1: boolean;

        $r0.<android.content.SyncManager: boolean mStorageIsLow> = $z0;

        return $z0;
    }

    static void access$1100(android.content.SyncManager)
    {
        android.content.SyncManager $r0;

        $r0 := @parameter0: android.content.SyncManager;

        specialinvoke $r0.<android.content.SyncManager: void handleSyncPollAlarm()>();

        return;
    }

    static android.os.PowerManager$WakeLock access$1400(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.os.PowerManager$WakeLock r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.os.PowerManager$WakeLock mSyncWakeLock>;

        return r1;
    }

    static android.content.SyncManager$SyncQueue access$1500(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncQueue r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        return r1;
    }

    static void access$1600(android.content.SyncManager, android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncOperation $r1;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 := @parameter1: android.content.SyncManager$SyncOperation;

        specialinvoke $r0.<android.content.SyncManager: void rescheduleImmediately(android.content.SyncManager$SyncOperation)>($r1);

        return;
    }

    static void access$1700(android.content.SyncManager, java.lang.String)
    {
        android.content.SyncManager $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.content.SyncManager: void setStatusText(java.lang.String)>($r1);

        return;
    }

    static android.provider.Sync$Settings$QueryMap access$1800(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.provider.Sync$Settings$QueryMap $r1;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 = specialinvoke $r0.<android.content.SyncManager: android.provider.Sync$Settings$QueryMap getSyncSettings()>();

        return $r1;
    }

    static android.content.Context access$1900(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.content.Context r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        return r1;
    }

    static void access$200(android.content.SyncManager)
    {
        android.content.SyncManager $r0;

        $r0 := @parameter0: android.content.SyncManager;

        specialinvoke $r0.<android.content.SyncManager: void sendCheckAlarmsMessage()>();

        return;
    }

    static boolean access$2000(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.SyncManager;

        $z0 = specialinvoke $r0.<android.content.SyncManager: boolean isSyncEnabled()>();

        return $z0;
    }

    static android.content.ContentResolver access$2100(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.content.ContentResolver r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.ContentResolver mContentResolver>;

        return r1;
    }

    static long access$2200(android.content.SyncManager, android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncOperation $r1;
        long $l0;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 := @parameter1: android.content.SyncManager$SyncOperation;

        $l0 = specialinvoke $r0.<android.content.SyncManager: long rescheduleWithDelay(android.content.SyncManager$SyncOperation)>($r1);

        return $l0;
    }

    static android.app.NotificationManager access$2300(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.app.NotificationManager r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.app.NotificationManager mNotificationMgr>;

        return r1;
    }

    static boolean access$2400(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        boolean z0;

        $r0 := @parameter0: android.content.SyncManager;

        z0 = $r0.<android.content.SyncManager: boolean mNeedSyncActiveNotification>;

        return z0;
    }

    static boolean access$2402(android.content.SyncManager, boolean)
    {
        android.content.SyncManager $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.SyncManager;

        $z0 := @parameter1: boolean;

        $r0.<android.content.SyncManager: boolean mNeedSyncActiveNotification> = $z0;

        return $z0;
    }

    static boolean access$2500(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        boolean z0;

        $r0 := @parameter0: android.content.SyncManager;

        z0 = $r0.<android.content.SyncManager: boolean mNeedSyncErrorNotification>;

        return z0;
    }

    static boolean access$2502(android.content.SyncManager, boolean)
    {
        android.content.SyncManager $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.SyncManager;

        $z0 := @parameter1: boolean;

        $r0.<android.content.SyncManager: boolean mNeedSyncErrorNotification> = $z0;

        return $z0;
    }

    static android.content.SyncManager$SyncHandler access$2600(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncHandler r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        return r1;
    }

    static void access$2700(android.content.SyncManager)
    {
        android.content.SyncManager $r0;

        $r0 := @parameter0: android.content.SyncManager;

        specialinvoke $r0.<android.content.SyncManager: void ensureAlarmService()>();

        return;
    }

    static android.app.PendingIntent access$2800(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.app.PendingIntent r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.app.PendingIntent mSyncAlarmIntent>;

        return r1;
    }

    static android.app.AlarmManager access$2900(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.app.AlarmManager r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.app.AlarmManager mAlarmService>;

        return r1;
    }

    static boolean access$300(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        boolean z0;

        $r0 := @parameter0: android.content.SyncManager;

        z0 = $r0.<android.content.SyncManager: boolean mDataConnectionIsConnected>;

        return z0;
    }

    static boolean access$302(android.content.SyncManager, boolean)
    {
        android.content.SyncManager $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.SyncManager;

        $z0 := @parameter1: boolean;

        $r0.<android.content.SyncManager: boolean mDataConnectionIsConnected> = $z0;

        return $z0;
    }

    static void access$400(android.content.SyncManager)
    {
        android.content.SyncManager $r0;

        $r0 := @parameter0: android.content.SyncManager;

        specialinvoke $r0.<android.content.SyncManager: void initializeSyncPoll()>();

        return;
    }

    static java.lang.String[] access$500(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        java.lang.String[] r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: java.lang.String[] mAccounts>;

        return r1;
    }

    static java.lang.String[] access$502(android.content.SyncManager, java.lang.String[])
    {
        android.content.SyncManager $r0;
        java.lang.String[] $r1;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 := @parameter1: java.lang.String[];

        $r0.<android.content.SyncManager: java.lang.String[] mAccounts> = $r1;

        return $r1;
    }

    static android.content.SyncManager$ActiveSyncContext access$600(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$ActiveSyncContext r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext>;

        return r1;
    }

    static android.content.SyncManager$ActiveSyncContext access$602(android.content.SyncManager, android.content.SyncManager$ActiveSyncContext)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$ActiveSyncContext $r1;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 := @parameter1: android.content.SyncManager$ActiveSyncContext;

        $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext> = $r1;

        return $r1;
    }

    static void access$700(android.content.SyncManager, android.content.SyncManager$ActiveSyncContext, android.content.SyncResult)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$ActiveSyncContext $r1;
        android.content.SyncResult $r2;

        $r0 := @parameter0: android.content.SyncManager;

        $r1 := @parameter1: android.content.SyncManager$ActiveSyncContext;

        $r2 := @parameter2: android.content.SyncResult;

        specialinvoke $r0.<android.content.SyncManager: void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>($r1, $r2);

        return;
    }

    static android.content.SyncStorageEngine access$800(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.content.SyncStorageEngine r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine>;

        return r1;
    }

    static android.os.PowerManager$WakeLock access$900(android.content.SyncManager)
    {
        android.content.SyncManager $r0;
        android.os.PowerManager$WakeLock r1;

        $r0 := @parameter0: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.os.PowerManager$WakeLock mHandleAlarmWakeLock>;

        return r1;
    }

    private void dumpSyncHistoryFooter(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |___________________________________________________________________________________________________________________________|\n");

        return;
    }

    private void dumpSyncHistoryHeader(java.lang.StringBuilder, java.lang.String)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Account: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ___________________________________________________________________________________________________________________________\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |                 |             num times synced           |   total  |         last success          |                     |\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | authority       | local |  poll | server |  user | total | duration |  source |               time  |   result if failing |\n");

        return;
    }

    private void dumpSyncHistoryRow(java.lang.StringBuilder, android.database.Cursor)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;
        android.database.Cursor $r2;
        android.text.format.Time $r3, $r4;
        boolean $z0, $z1;
        long $l0;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        java.lang.Long $r7;
        java.lang.String[] $r8;
        int $i1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: android.database.Cursor;

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean isNull(int)>(9);

        if $z0 != 0 goto label08;

        $z0 = 1;

     label01:
        $z1 = interfaceinvoke $r2.<android.database.Cursor: boolean isNull(int)>(11);

        if $z1 != 0 goto label09;

        $z1 = 1;

     label02:
        $r4 = new android.text.format.Time;

        specialinvoke $r4.<android.text.format.Time: void <init>()>();

        if $z0 == 0 goto label03;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(9);

        virtualinvoke $r4.<android.text.format.Time: void set(long)>($l0);

     label03:
        $r3 = new android.text.format.Time;

        specialinvoke $r3.<android.text.format.Time: void <init>()>();

        if $z1 == 0 goto label04;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(11);

        virtualinvoke $r3.<android.text.format.Time: void set(long)>($l0);

     label04:
        $r5 = newarray (java.lang.Object)[10];

        $r6 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r5[0] = $r6;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(4);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[1] = $r7;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(5);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[2] = $r7;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[3] = $r7;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(7);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[4] = $r7;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(2);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[5] = $r7;

        $l0 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(3);

        $l0 = $l0 / 1000L;

        $r6 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l0);

        $r5[6] = $r6;

        if $z0 == 0 goto label10;

        $r8 = <android.provider.Sync$History: java.lang.String[] SOURCES>;

        $i1 = interfaceinvoke $r2.<android.database.Cursor: int getInt(int)>(8);

        $r6 = $r8[$i1];

     label05:
        $r5[7] = $r6;

        if $z0 == 0 goto label11;

        $r6 = virtualinvoke $r4.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%d %H:%M:%S");

     label06:
        $r5[8] = $r6;

        if $z1 == 0 goto label12;

        $r6 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(12);

        $r6 = staticinvoke <android.provider.Sync$History: java.lang.String mesgToString(java.lang.String)>($r6);

     label07:
        $r5[9] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" | %-15s | %5d | %5d | %6d | %5d | %5d | %8s | %7s | %19s | %19s |\n", $r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        return;

     label08:
        $z0 = 0;

        goto label01;

     label09:
        $z1 = 0;

        goto label02;

     label10:
        $r6 = "";

        goto label05;

     label11:
        $r6 = "";

        goto label06;

     label12:
        $r6 = "";

        goto label07;
    }

    private void dumpSyncInterval(java.lang.StringBuilder, java.lang.String, long, long, long)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        long $l0, $l1, $l2;
        java.lang.Object[] $r3;
        java.lang.Long $r4;
        float $f0, $f1;
        java.lang.Float $r5;
        byte $b3;
        double $d0;
        java.lang.Double $r6;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $l2 := @parameter4: long;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = $r2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3[1] = $r4;

        $f0 = (float) $l2;

        $f1 = (float) $l1;

        $f0 = $f0 / $f1;

        $f0 = $f0 / 1000.0F;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3[2] = $r5;

        $f0 = (float) $l2;

        $f0 = $f0 / 1000.0F;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3[3] = $r5;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" | %-8s | %6d | %8.1f | %8.1f", $r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $b3 = $l0 cmp 0L;

        if $b3 <= 0 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $f0 = (float) $l2;

        $f1 = (float) $l0;

        $f0 = $f0 / $f1;

        $d0 = (double) $f0;

        $d0 = $d0 * 100.0;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r6;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" | %13.2f |\n", $r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        return;

     label1:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "na";

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" | %13s |\n", $r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        return;
    }

    private void dumpSyncIntervalFooter(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |_________________________________________________________|\n");

        return;
    }

    private void dumpSyncIntervalHeader(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sync Stats\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ___________________________________________________________\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |          |        |   duration in sec   |               |\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | interval |  count |  average |    total | % of interval |\n");

        return;
    }

    private void dumpSyncPendingFooter(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |__________________________________________________|\n");

        return;
    }

    private void dumpSyncPendingHeader(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ____________________________________________________\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | account                        | authority       |\n");

        return;
    }

    private void dumpSyncPendingRow(java.lang.StringBuilder, android.database.Cursor)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;
        android.database.Cursor $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 := @parameter1: android.database.Cursor;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r3[0] = $r4;

        $r4 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r3[1] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" | %-30s | %-15s |\n", $r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        return;
    }

    private void ensureAlarmService()
    {
        android.content.SyncManager $r0;
        java.lang.Object $r1;
        android.app.AlarmManager $r2;
        android.content.Context $r3;

        $r0 := @this: android.content.SyncManager;

        $r2 = $r0.<android.content.SyncManager: android.app.AlarmManager mAlarmService>;

        if $r2 != null goto label1;

        $r3 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        $r1 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r2 = (android.app.AlarmManager) $r1;

        $r0.<android.content.SyncManager: android.app.AlarmManager mAlarmService> = $r2;

        return;

     label1:
        return;
    }

    private void ensureContentResolver()
    {
        android.content.SyncManager $r0;
        android.content.ContentResolver $r1;
        android.content.Context $r2;

        $r0 := @this: android.content.SyncManager;

        $r1 = $r0.<android.content.SyncManager: android.content.ContentResolver mContentResolver>;

        if $r1 != null goto label1;

        $r2 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r0.<android.content.SyncManager: android.content.ContentResolver mContentResolver> = $r1;

        return;

     label1:
        return;
    }

    private android.content.pm.IPackageManager getPackageManager()
    {
        android.content.SyncManager $r0;
        android.content.pm.IPackageManager $r1;
        android.os.IBinder $r2;

        $r0 := @this: android.content.SyncManager;

        $r1 = $r0.<android.content.SyncManager: android.content.pm.IPackageManager mPackageManager>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r1 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r2);

        $r0.<android.content.SyncManager: android.content.pm.IPackageManager mPackageManager> = $r1;

     label1:
        $r1 = $r0.<android.content.SyncManager: android.content.pm.IPackageManager mPackageManager>;

        return $r1;
    }

    private android.provider.Sync$Settings$QueryMap getSyncSettings()
    {
        android.content.SyncManager $r0;
        android.os.Handler $r1;
        android.content.ContentResolver $r2;
        android.provider.Sync$Settings$QueryMap $r3;
        android.content.Context $r4;
        android.content.SyncManager$4 $r5;

        $r0 := @this: android.content.SyncManager;

        $r3 = $r0.<android.content.SyncManager: android.provider.Sync$Settings$QueryMap mSyncSettings>;

        if $r3 != null goto label1;

        $r3 = new android.provider.Sync$Settings$QueryMap;

        $r4 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        specialinvoke $r3.<android.provider.Sync$Settings$QueryMap: void <init>(android.content.ContentResolver,boolean,android.os.Handler)>($r2, 1, $r1);

        $r0.<android.content.SyncManager: android.provider.Sync$Settings$QueryMap mSyncSettings> = $r3;

        $r3 = $r0.<android.content.SyncManager: android.provider.Sync$Settings$QueryMap mSyncSettings>;

        $r5 = new android.content.SyncManager$4;

        specialinvoke $r5.<android.content.SyncManager$4: void <init>(android.content.SyncManager)>($r0);

        virtualinvoke $r3.<java.util.Observable: void addObserver(java.util.Observer)>($r5);

     label1:
        $r3 = $r0.<android.content.SyncManager: android.provider.Sync$Settings$QueryMap mSyncSettings>;

        return $r3;
    }

    private void handleSyncPollAlarm()
    {
        android.content.SyncManager $r0;
        long $l0, $l1, $l2;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.os.Bundle $r3;

        $r0 := @this: android.content.SyncManager;

        $l0 = specialinvoke $r0.<android.content.SyncManager: long jitterize(long,long)>(86400L, 129600L);

        $l0 = $l0 * 1000L;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $l1 + $l0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSyncPollAlarm: delay ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r2);

     label1:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 + $l0;

        specialinvoke $r0.<android.content.SyncManager: void writeSyncPollTime(long)>($l0);

        specialinvoke $r0.<android.content.SyncManager: void scheduleSyncPollAlarm(long)>($l1);

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSync(android.net.Uri,android.os.Bundle,long)>(null, $r3, 0L);

        return;
    }

    private void initializeSyncPoll()
    {
        android.content.SyncManager $r0;
        boolean $z0;
        android.content.Context $r1;
        android.content.SyncManager$SyncPollAlarmReceiver $r2;
        android.content.IntentFilter $r3;
        long $l0, $l1, $l2, $l3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        byte $b4;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.SyncManager;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.content.SyncManager: boolean mSyncPollInitialized>;

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r0.<android.content.SyncManager: boolean mSyncPollInitialized> = 1;

        $r1 = $r0.<android.content.SyncManager: android.content.Context mContext>;

        $r2 = new android.content.SyncManager$SyncPollAlarmReceiver;

        specialinvoke $r2.<android.content.SyncManager$SyncPollAlarmReceiver: void <init>(android.content.SyncManager)>($r0);

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>(java.lang.String)>("android.content.syncmanager.SYNC_POLL_ALARM");

        virtualinvoke $r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r3);

        $l0 = specialinvoke $r0.<android.content.SyncManager: long readSyncPollTime()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initializeSyncPoll: absoluteAlarmTime is ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r5);

     label5:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2;

        $b4 = $l0 cmp $l1;

        if $b4 <= 0 goto label7;

        $l0 = $l0 - $l1;

        $b4 = $l0 cmp 129600000L;

        if $b4 <= 0 goto label6;

        $l0 = 129600000L;

     label6:
        $l3 = $l2 + $l0;

     label7:
        specialinvoke $r0.<android.content.SyncManager: void scheduleSyncPollAlarm(long)>($l3);

     label8:
        goto label3;

     label9:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label8 with label9;
    }

    private boolean isSyncEnabled()
    {
        android.content.SyncManager $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @this: android.content.SyncManager;

        $r1 = "yes";

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.config.sync");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private long jitterize(long, long)
    {
        android.content.SyncManager $r0;
        long $l0, $l1, $l2;
        java.util.Random $r1;
        byte $b3;
        java.lang.IllegalArgumentException $r2;
        int $i4;

        $r0 := @this: android.content.SyncManager;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = new java.util.Random;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r1.<java.util.Random: void <init>(long)>($l2);

        $l1 = $l1 - $l0;

        $b3 = $l1 cmp 2147483647L;

        if $b3 <= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("the difference between the maxValue and the minValue must be less than 2147483647");

        throw $r2;

     label1:
        $i4 = (int) $l1;

        $i4 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>($i4);

        $l1 = (long) $i4;

        $l0 = $l1 + $l0;

        return $l0;
    }

    private void populateProvidersList(android.net.Uri, java.util.List, java.util.List)
    {
        android.content.SyncManager $r0;
        android.net.Uri $r1;
        java.util.List $r2, $r3;
        android.content.pm.IPackageManager $r4;
        java.lang.String $r5, $r6, $r9;
        android.content.pm.ProviderInfo $r7;
        java.lang.String[] $r8;
        boolean $z0;
        android.os.RemoteException $r10;
        java.lang.StringBuilder $r11;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

     label1:
        $r4 = specialinvoke $r0.<android.content.SyncManager: android.content.pm.IPackageManager getPackageManager()>();

        if $r1 != null goto label3;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void querySyncProviders(java.util.List,java.util.List)>($r2, $r3);

     label2:
        return;

     label3:
        $r5 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r6 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r7 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r6, 0);

     label4:
        if $r7 == null goto label8;

     label5:
        $r6 = $r7.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r6 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r9 = $r8[0];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label9;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label6:
        return;

     label7:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error trying to get the ProviderInfo for ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r5, $r10);

        interfaceinvoke $r2.<java.util.List: void clear()>();

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;

     label8:
        return;

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    private long readSyncPollTime()
    {
        android.content.SyncManager $r0;
        java.io.File $r1;
        java.io.DataInputStream $r2, $r3;
        java.io.FileInputStream $r4;
        long $l0;
        java.io.IOException $r5, $r9, $r10, $r11, $r13, $r14;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.io.FileNotFoundException $r8, $r15;
        java.lang.Throwable $r12;

        $r0 := @this: android.content.SyncManager;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/data/system/syncmanager.prefs");

        $r3 = null;

     label01:
        $r2 = new java.io.DataInputStream;

        $r4 = new java.io.FileInputStream;

     label02:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

     label03:
        $l0 = virtualinvoke $r2.<java.io.DataInputStream: long readLong()>();

     label04:
        if $r2 == null goto label28;

     label05:
        virtualinvoke $r2.<java.io.FilterInputStream: void close()>();

     label06:
        return $l0;

     label07:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r5);

        return $l0;

     label08:
        $r8 := @caughtexception;

     label09:
        specialinvoke $r0.<android.content.SyncManager: void writeSyncPollTime(long)>(0L);

     label10:
        if $r3 == null goto label12;

     label11:
        virtualinvoke $r3.<java.io.FilterInputStream: void close()>();

     label12:
        return 0L;

     label13:
        $r9 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r9);

        goto label12;

     label14:
        $r10 := @caughtexception;

        $r5 = $r10;

     label15:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error reading file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r5);

     label16:
        if $r3 == null goto label12;

     label17:
        virtualinvoke $r3.<java.io.FilterInputStream: void close()>();

     label18:
        goto label12;

     label19:
        $r11 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r11);

        goto label12;

     label20:
        $r12 := @caughtexception;

     label21:
        if $r3 == null goto label23;

     label22:
        virtualinvoke $r3.<java.io.FilterInputStream: void close()>();

     label23:
        throw $r12;

     label24:
        $r13 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r13);

        goto label23;

     label25:
        $r12 := @caughtexception;

        $r3 = $r2;

        goto label21;

     label26:
        $r14 := @caughtexception;

        $r5 = $r14;

        $r3 = $r2;

        goto label15;

     label27:
        $r15 := @caughtexception;

        $r3 = $r2;

        goto label09;

     label28:
        return $l0;

        catch java.io.FileNotFoundException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.lang.Throwable from label01 to label03 with label20;
        catch java.io.FileNotFoundException from label03 to label04 with label27;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label22 to label23 with label24;
    }

    private void rescheduleImmediately(android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncOperation $r1, $r2;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.content.SyncManager$SyncOperation;

        $r2 = new android.content.SyncManager$SyncOperation;

        specialinvoke $r2.<android.content.SyncManager$SyncOperation: void <init>(android.content.SyncManager$SyncOperation)>($r1);

        virtualinvoke $r2.<android.content.SyncManager$SyncOperation: void setDelay(long)>(0L);

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncManager$SyncOperation)>($r2);

        return;
    }

    private long rescheduleWithDelay(android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncOperation $r1, $r2;
        long $l0, $l2, $l3;
        byte $b1;
        android.content.ContentResolver $r3;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.content.SyncManager$SyncOperation;

        $l0 = $r1.<android.content.SyncManager$SyncOperation: long delay>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        $l0 = specialinvoke $r0.<android.content.SyncManager: long jitterize(long,long)>(30000L, 33000L);

     label1:
        specialinvoke $r0.<android.content.SyncManager: void ensureContentResolver()>();

        $r3 = $r0.<android.content.SyncManager: android.content.ContentResolver mContentResolver>;

        $l2 = staticinvoke <android.provider.Settings$Gservices: long getLong(android.content.ContentResolver,java.lang.String,long)>($r3, "sync_max_retry_delay_in_seconds", 3600L);

        $l3 = $l2 * 1000L;

        $b1 = $l0 cmp $l3;

        if $b1 <= 0 goto label2;

        $l0 = $l2 * 1000L;

     label2:
        $r2 = new android.content.SyncManager$SyncOperation;

        specialinvoke $r2.<android.content.SyncManager$SyncOperation: void <init>(android.content.SyncManager$SyncOperation)>($r1);

        virtualinvoke $r2.<android.content.SyncManager$SyncOperation: void setDelay(long)>($l0);

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncManager$SyncOperation)>($r2);

        return $l0;

     label3:
        $l0 = $r1.<android.content.SyncManager$SyncOperation: long delay>;

        $l0 = $l0 * 2L;

        goto label1;
    }

    private void scheduleSyncPollAlarm(long)
    {
        android.content.SyncManager $r0;
        long $l0, $l1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.app.AlarmManager $r3;
        android.app.PendingIntent $r4;

        $r0 := @this: android.content.SyncManager;

        $l0 := @parameter0: long;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleSyncPollAlarm: relativeAlarmTime is ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", now is ");

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", delay is ");

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = $l0 - $l1;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r2);

     label1:
        specialinvoke $r0.<android.content.SyncManager: void ensureAlarmService()>();

        $r3 = $r0.<android.content.SyncManager: android.app.AlarmManager mAlarmService>;

        $r4 = $r0.<android.content.SyncManager: android.app.PendingIntent mSyncPollAlarmIntent>;

        virtualinvoke $r3.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l0, $r4);

        return;
    }

    private void sendCheckAlarmsMessage()
    {
        android.content.SyncManager $r0;
        boolean $z0;
        android.content.SyncManager$SyncHandler $r1;

        $r0 := @this: android.content.SyncManager;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", "sending MESSAGE_CHECK_ALARMS");

     label1:
        $r1 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

        return;
    }

    private void sendSyncAlarmMessage()
    {
        android.content.SyncManager $r0;
        boolean $z0;
        android.content.SyncManager$SyncHandler $r1;

        $r0 := @this: android.content.SyncManager;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", "sending MESSAGE_SYNC_ALARM");

     label1:
        $r1 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        return;
    }

    private void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext, android.content.SyncResult)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$ActiveSyncContext $r1;
        android.content.SyncResult $r2;
        boolean $z0;
        android.content.SyncManager$SyncHandler $r3;
        android.os.Message $r4;
        android.content.SyncManager$SyncHandlerMessagePayload $r5;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.content.SyncManager$ActiveSyncContext;

        $r2 := @parameter1: android.content.SyncResult;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", "sending MESSAGE_SYNC_FINISHED");

     label1:
        $r3 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage()>();

        $r4.<android.os.Message: int what> = 1;

        $r5 = new android.content.SyncManager$SyncHandlerMessagePayload;

        specialinvoke $r5.<android.content.SyncManager$SyncHandlerMessagePayload: void <init>(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>($r0, $r1, $r2);

        $r4.<android.os.Message: java.lang.Object obj> = $r5;

        $r3 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    private void setStatusText(java.lang.String)
    {
        android.content.SyncManager $r0;
        java.lang.String $r1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.String;

        $r0.<android.content.SyncManager: java.lang.String mStatusText> = $r1;

        return;
    }

    private void writeSyncPollTime(long)
    {
        android.content.SyncManager $r0;
        long $l0;
        java.io.File $r1;
        java.io.DataOutputStream $r2, $r3;
        java.io.FileOutputStream $r4;
        java.io.IOException $r5, $r9, $r10, $r11, $r13, $r14;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.io.FileNotFoundException $r8, $r15;
        java.lang.Throwable $r12;

        $r0 := @this: android.content.SyncManager;

        $l0 := @parameter0: long;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/data/system/syncmanager.prefs");

        $r3 = null;

     label01:
        $r2 = new java.io.DataOutputStream;

        $r4 = new java.io.FileOutputStream;

     label02:
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r4);

     label03:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeLong(long)>($l0);

     label04:
        if $r2 == null goto label28;

     label05:
        virtualinvoke $r2.<java.io.FilterOutputStream: void close()>();

     label06:
        return;

     label07:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r5);

        return;

     label08:
        $r8 := @caughtexception;

     label09:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error writing to file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r8);

     label10:
        if $r3 == null goto label29;

     label11:
        virtualinvoke $r3.<java.io.FilterOutputStream: void close()>();

     label12:
        return;

     label13:
        $r9 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r9);

        return;

     label14:
        $r10 := @caughtexception;

        $r5 = $r10;

     label15:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error writing to file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r5);

     label16:
        if $r3 == null goto label30;

     label17:
        virtualinvoke $r3.<java.io.FilterOutputStream: void close()>();

     label18:
        return;

     label19:
        $r11 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r11);

        return;

     label20:
        $r12 := @caughtexception;

     label21:
        if $r3 == null goto label23;

     label22:
        virtualinvoke $r3.<java.io.FilterOutputStream: void close()>();

     label23:
        throw $r12;

     label24:
        $r13 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error closing file ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncManager", $r7, $r13);

        goto label23;

     label25:
        $r12 := @caughtexception;

        $r3 = $r2;

        goto label21;

     label26:
        $r14 := @caughtexception;

        $r5 = $r14;

        $r3 = $r2;

        goto label15;

     label27:
        $r15 := @caughtexception;

        $r8 = $r15;

        $r3 = $r2;

        goto label09;

     label28:
        return;

     label29:
        return;

     label30:
        return;

        catch java.io.FileNotFoundException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.lang.Throwable from label01 to label03 with label20;
        catch java.io.FileNotFoundException from label03 to label04 with label27;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public void cancelActiveSync(android.net.Uri)
    {
        android.content.SyncManager $r0;
        android.net.Uri $r1;
        android.content.SyncManager$ActiveSyncContext $r2;
        java.lang.String $r3, $r5;
        android.content.SyncManager$SyncOperation $r4;
        boolean $z0;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 = $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext>;

        if $r2 == null goto label2;

        if $r1 == null goto label1;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r4 = $r2.<android.content.SyncManager$ActiveSyncContext: android.content.SyncManager$SyncOperation mSyncOperation>;

        $r5 = $r4.<android.content.SyncManager$SyncOperation: java.lang.String authority>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<android.content.SyncManager: void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>($r2, null);

        return;

     label2:
        return;
    }

    public void clearScheduledSyncOperations(android.net.Uri)
    {
        android.content.SyncManager $r0;
        android.net.Uri $r1;
        android.content.SyncManager$SyncQueue $r2, $r4;
        java.lang.String $r3;
        java.lang.Throwable $r5;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.net.Uri;

        $r3 = null;

        $r2 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        if $r1 == null goto label2;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

     label2:
        virtualinvoke $r4.<android.content.SyncManager$SyncQueue: void clear(java.lang.String,java.lang.String)>(null, $r3);

        exitmonitor $r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter)
    {
        android.content.SyncManager $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.StringBuilder $r3;
        boolean $z0;
        java.lang.String $r4;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<android.content.SyncManager: void dumpSyncState(java.lang.StringBuilder)>($r3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z0 = specialinvoke $r0.<android.content.SyncManager: boolean isSyncEnabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.content.SyncManager: void dumpSyncHistory(java.lang.StringBuilder)>($r3);

     label1:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        return;
    }

    protected void dumpSyncHistory(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l14;
        android.content.SyncStorageEngine $r2;
        android.net.Uri $r3;
        java.lang.String[] $r4;
        java.lang.String $r5;
        android.database.Cursor $r6;
        int $i12, $i13;
        boolean $z0;
        byte $b15;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 = $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r3 = <android.provider.Sync$History: android.net.Uri CONTENT_URI>;

        $r4 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        $r4[0] = $r5;

        $r6 = virtualinvoke $r2.<android.content.SyncStorageEngine: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, null, "event=?", $r4, "eventTime desc");

        $l1 = 0L;

        $l2 = 0L;

        $l3 = 0L;

        $l4 = 0L;

        $l5 = 0L;

        $l6 = 0L;

        $l7 = 0L;

        $l8 = 0L;

        $l9 = 0L;

        $l10 = 0L;

     label01:
        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i12 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("eventTime");

        $i13 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("elapsedTime");

     label02:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label10;

        $l14 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>($i13);

        $l0 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>($i12);

     label03:
        $l0 = $l0 + $l14;

        $l0 = $l11 - $l0;

        $l9 = $l9 + 1L;

        $l10 = $l10 + $l14;

        $b15 = $l0 cmp 3600000L;

        if $b15 >= 0 goto label04;

        $l1 = $l1 + 1L;

        $l2 = $l2 + $l14;

     label04:
        $b15 = $l0 cmp 86400000L;

        if $b15 >= 0 goto label05;

        $l3 = $l3 + 1L;

        $l4 = $l4 + $l14;

     label05:
        $b15 = $l0 cmp 604800000L;

        if $b15 >= 0 goto label06;

        $l5 = $l5 + 1L;

        $l6 = $l6 + $l14;

     label06:
        $b15 = $l0 cmp 2419200000L;

     label07:
        if $b15 >= 0 goto label02;

     label08:
        $l7 = $l7 + 1L;

        $l8 = $l8 + $l14;

     label09:
        goto label02;

     label10:
        specialinvoke $r0.<android.content.SyncManager: void dumpSyncIntervalHeader(java.lang.StringBuilder)>($r1);

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncInterval(java.lang.StringBuilder,java.lang.String,long,long,long)>($r1, "hour", 3600000L, $l1, $l2);

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncInterval(java.lang.StringBuilder,java.lang.String,long,long,long)>($r1, "day", 86400000L, $l3, $l4);

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncInterval(java.lang.StringBuilder,java.lang.String,long,long,long)>($r1, "week", 604800000L, $l5, $l6);

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncInterval(java.lang.StringBuilder,java.lang.String,long,long,long)>($r1, "4 weeks", 2419200000L, $l7, $l8);

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncInterval(java.lang.StringBuilder,java.lang.String,long,long,long)>($r1, "total", 0L, $l9, $l10);

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncIntervalFooter(java.lang.StringBuilder)>($r1);

     label11:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return;

     label12:
        $r7 := @caughtexception;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
    }

    protected void dumpSyncState(java.lang.StringBuilder)
    {
        android.content.SyncManager $r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String[] $r2;
        long $l0, $l2;
        boolean $z0;
        int $i1;
        java.lang.String $r4, $r18;
        android.content.SyncManager$SyncHandler $r5;
        android.content.SyncManager$SyncTimeTracker $r6;
        java.lang.Long $r7;
        android.content.SyncManager$ActiveSyncContext $r8;
        android.content.SyncManager$SyncHandler$SyncNotificationInfo $r9;
        android.content.SyncManager$SyncQueue $r10, $r11;
        android.content.SyncStorageEngine $r12;
        android.net.Uri $r13;
        android.database.Cursor $r14;
        java.lang.Throwable $r15, $r16, $r17, $r19;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sync enabled: ");

        $z0 = specialinvoke $r0.<android.content.SyncManager: boolean isSyncEnabled()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data connected: ");

        $z0 = $r0.<android.content.SyncManager: boolean mDataConnectionIsConnected>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("memory low: ");

        $z0 = $r0.<android.content.SyncManager: boolean mStorageIsLow>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = $r0.<android.content.SyncManager: java.lang.String[] mAccounts>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accounts: ");

        if $r2 == null goto label14;

        $i1 = lengthof $r2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label01:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("now: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uptime: ");

        $l2 = $l0 / 1000L;

        $r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (HH:MM:SS)\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time spent syncing : ");

        $r5 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r6 = $r5.<android.content.SyncManager$SyncHandler: android.content.SyncManager$SyncTimeTracker mSyncTimeTracker>;

        $l2 = virtualinvoke $r6.<android.content.SyncManager$SyncTimeTracker: long timeSpentSyncing()>();

        $l2 = $l2 / 1000L;

        $r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (HH:MM:SS), sync ");

        $r5 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r6 = $r5.<android.content.SyncManager$SyncHandler: android.content.SyncManager$SyncTimeTracker mSyncTimeTracker>;

        $z0 = $r6.<android.content.SyncManager$SyncTimeTracker: boolean mLastWasSyncing>;

        if $z0 == 0 goto label15;

        $r4 = "";

     label02:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in progress");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r7 = staticinvoke <android.content.SyncManager$SyncHandler: java.lang.Long access$1200(android.content.SyncManager$SyncHandler)>($r5);

        if $r7 == null goto label16;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("next alarm time: ");

        $r5 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r7 = staticinvoke <android.content.SyncManager$SyncHandler: java.lang.Long access$1200(android.content.SyncManager$SyncHandler)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r7 = staticinvoke <android.content.SyncManager$SyncHandler: java.lang.Long access$1200(android.content.SyncManager$SyncHandler)>($r5);

        $l2 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $l2 = $l2 - $l0;

        $l2 = $l2 / 1000L;

        $r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (HH:MM:SS) from now)\n");

     label03:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("active sync: ");

        $r8 = $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notification info: ");

        $r5 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncHandler mSyncHandler>;

        $r9 = $r5.<android.content.SyncManager$SyncHandler: android.content.SyncManager$SyncHandler$SyncNotificationInfo mSyncNotificationInfo>;

        virtualinvoke $r9.<android.content.SyncManager$SyncHandler$SyncNotificationInfo: void toString(java.lang.StringBuilder)>($r1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        entermonitor $r10;

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sync queue: ");

        $r11 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        virtualinvoke $r11.<android.content.SyncManager$SyncQueue: void dump(java.lang.StringBuilder)>($r1);

        exitmonitor $r10;

     label05:
        $r12 = $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r13 = <android.provider.Sync$Active: android.net.Uri CONTENT_URI>;

        $r2 = <android.content.SyncManager: java.lang.String[] SYNC_ACTIVE_PROJECTION>;

        $r14 = virtualinvoke $r12.<android.content.SyncStorageEngine: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r13, $r2, null, null, null);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label06:
        $z0 = interfaceinvoke $r14.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label20;

        $l2 = interfaceinvoke $r14.<android.database.Cursor: long getLong(int)>(2);

     label07:
        $l0 = $l0 - $l2;

     label08:
        $l0 = $l0 / 1000L;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active sync: ");

        $r4 = interfaceinvoke $r14.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = interfaceinvoke $r14.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", duration is ");

        $r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n");

     label09:
        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        $r12 = $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r13 = <android.provider.Sync$Pending: android.net.Uri CONTENT_URI>;

        $r2 = <android.content.SyncManager: java.lang.String[] SYNC_PENDING_PROJECTION>;

        $r14 = virtualinvoke $r12.<android.content.SyncStorageEngine: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r13, $r2, null, null, "account, authority");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPending Syncs\n");

     label10:
        $i1 = interfaceinvoke $r14.<android.database.Cursor: int getCount()>();

        if $i1 == 0 goto label30;

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncPendingHeader(java.lang.StringBuilder)>($r1);

     label11:
        $z0 = interfaceinvoke $r14.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label23;

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncPendingRow(java.lang.StringBuilder,android.database.Cursor)>($r1, $r14);

     label12:
        goto label11;

     label13:
        $r15 := @caughtexception;

        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        throw $r15;

     label14:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");

        goto label01;

     label15:
        $r4 = "not ";

        goto label02;

     label16:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no alarm is scheduled (there had better not be any pending syncs)\n");

        goto label03;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor $r10;

     label19:
        throw $r16;

     label20:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No sync is in progress.\n");

     label21:
        goto label09;

     label22:
        $r17 := @caughtexception;

        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        throw $r17;

     label23:
        specialinvoke $r0.<android.content.SyncManager: void dumpSyncPendingFooter(java.lang.StringBuilder)>($r1);

     label24:
        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        $r4 = null;

        $r12 = $r0.<android.content.SyncManager: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r13 = <android.provider.Sync$Status: android.net.Uri CONTENT_URI>;

        $r2 = <android.content.SyncManager: java.lang.String[] STATUS_PROJECTION>;

        $r14 = virtualinvoke $r12.<android.content.SyncStorageEngine: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r13, $r2, null, null, "account, authority");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nSync history by account and authority\n");

     label25:
        $z0 = interfaceinvoke $r14.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label32;

        $r18 = interfaceinvoke $r14.<android.database.Cursor: java.lang.String getString(int)>(0);

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r18);

        if $z0 != 0 goto label27;

        if $r4 == null goto label26;

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncHistoryFooter(java.lang.StringBuilder)>($r1);

     label26:
        $r18 = interfaceinvoke $r14.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r4 = $r18;

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncHistoryHeader(java.lang.StringBuilder,java.lang.String)>($r1, $r18);

     label27:
        specialinvoke $r0.<android.content.SyncManager: void dumpSyncHistoryRow(java.lang.StringBuilder,android.database.Cursor)>($r1, $r14);

     label28:
        goto label25;

     label29:
        $r19 := @caughtexception;

        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        throw $r19;

     label30:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none\n");

     label31:
        goto label24;

     label32:
        $i1 = interfaceinvoke $r14.<android.database.Cursor: int getCount()>();

        if $i1 <= 0 goto label33;

        specialinvoke $r0.<android.content.SyncManager: void dumpSyncHistoryFooter(java.lang.StringBuilder)>($r1);

     label33:
        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        return;

        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label13;
        catch java.lang.Throwable from label25 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label13;
        catch java.lang.Throwable from label32 to label33 with label29;
    }

    public android.content.SyncManager$ActiveSyncContext getActiveSyncContext()
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$ActiveSyncContext r1;

        $r0 := @this: android.content.SyncManager;

        r1 = $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext>;

        return r1;
    }

    public java.lang.String getSyncingAccount()
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$ActiveSyncContext $r1;
        android.content.SyncManager$SyncOperation $r2;
        java.lang.String r3;

        $r0 := @this: android.content.SyncManager;

        $r1 = $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext>;

        if $r1 == null goto label1;

        $r2 = $r1.<android.content.SyncManager$ActiveSyncContext: android.content.SyncManager$SyncOperation mSyncOperation>;

        r3 = $r2.<android.content.SyncManager$SyncOperation: java.lang.String account>;

        return r3;

     label1:
        return null;
    }

    void maybeRescheduleSync(android.content.SyncResult, android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager $r0;
        android.content.SyncResult $r1;
        android.content.SyncManager$SyncOperation $r2, $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.os.Bundle $r6;
        long $l0;
        byte $b1;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.content.SyncResult;

        $r2 := @parameter1: android.content.SyncManager$SyncOperation;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 3);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encountered error(s) during the sync: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r5);

     label1:
        $z1 = virtualinvoke $r1.<android.content.SyncResult: boolean madeSomeProgress()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", "retrying sync operation immediately because even though it had an error it achieved some success");

     label2:
        specialinvoke $r0.<android.content.SyncManager: void rescheduleImmediately(android.content.SyncManager$SyncOperation)>($r2);

        return;

     label3:
        $r6 = $r2.<android.content.SyncManager$SyncOperation: android.os.Bundle extras>;

        $z1 = virtualinvoke $r6.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("upload", 0);

        if $z1 == 0 goto label4;

        $r3 = new android.content.SyncManager$SyncOperation;

        specialinvoke $r3.<android.content.SyncManager$SyncOperation: void <init>(android.content.SyncManager$SyncOperation)>($r2);

        $r6 = $r3.<android.content.SyncManager$SyncOperation: android.os.Bundle extras>;

        virtualinvoke $r6.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("upload", 0);

        virtualinvoke $r3.<android.content.SyncManager$SyncOperation: void setDelay(long)>(0L);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retrying sync operation as a two-way sync because an upload-only sync encountered an error: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r5);

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncManager$SyncOperation)>($r3);

        return;

     label4:
        $z1 = virtualinvoke $r1.<android.content.SyncResult: boolean hasSoftError()>();

        if $z1 == 0 goto label5;

        $l0 = specialinvoke $r0.<android.content.SyncManager: long rescheduleWithDelay(android.content.SyncManager$SyncOperation)>($r2);

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label6;

        if $z0 == 0 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retrying sync operation in ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms because ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("it encountered a soft error: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r5);

        return;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not retrying sync operation because the error is a hard error: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncManager", $r5);

        return;

     label6:
        return;

     label7:
        return;
    }

    public void scheduleLocalSync(android.net.Uri)
    {
        android.content.SyncManager $r0;
        android.net.Uri $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("upload", 1);

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSync(android.net.Uri,android.os.Bundle,long)>($r1, $r2, 30000L);

        return;
    }

    public void scheduleSync(android.net.Uri, android.os.Bundle, long)
    {
        android.content.SyncManager $r0;
        java.lang.String[] $r1, $r10;
        java.util.ArrayList $r2, $r3;
        android.net.Uri $r4;
        android.os.Bundle $r5;
        long $l0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;
        java.lang.Comparable $r7;
        java.lang.Object $r8;
        java.lang.String $r9, $r13;
        java.lang.Boolean $r11;
        byte $b1;
        int $i2, $i3, $i4, $i5;
        android.content.pm.ProviderInfo $r12;
        android.content.SyncManager$SyncOperation $r14;

        $r0 := @this: android.content.SyncManager;

        $r4 := @parameter0: android.net.Uri;

        $r5 := @parameter1: android.os.Bundle;

        $l0 := @parameter2: long;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label03;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleSync: delay ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", url ");

        if $r4 != null goto label05;

        $r7 = "(null)";

     label01:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", extras ");

        if $r5 != null goto label06;

        $r8 = "(null)";

     label02:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r9);

     label03:
        $z1 = specialinvoke $r0.<android.content.SyncManager: boolean isSyncEnabled()>();

        if $z1 != 0 goto label07;

        if $z0 == 0 goto label04;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", "not syncing because sync is disabled");

     label04:
        specialinvoke $r0.<android.content.SyncManager: void setStatusText(java.lang.String)>("Sync is disabled.");

        return;

     label05:
        $r7 = $r4;

        goto label01;

     label06:
        $r8 = $r5;

        goto label02;

     label07:
        $r10 = $r0.<android.content.SyncManager: java.lang.String[] mAccounts>;

        if $r10 != null goto label08;

        specialinvoke $r0.<android.content.SyncManager: void setStatusText(java.lang.String)>("The accounts aren\'t known yet.");

     label08:
        $z1 = $r0.<android.content.SyncManager: boolean mDataConnectionIsConnected>;

        if $z1 != 0 goto label09;

        specialinvoke $r0.<android.content.SyncManager: void setStatusText(java.lang.String)>("No data connection");

     label09:
        $z1 = $r0.<android.content.SyncManager: boolean mStorageIsLow>;

        if $z1 == 0 goto label10;

        specialinvoke $r0.<android.content.SyncManager: void setStatusText(java.lang.String)>("Memory low");

     label10:
        if $r5 != null goto label11;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label11:
        $z1 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("expedited", 0);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label12;

        $l0 = -1L;

     label12:
        $r9 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("account");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z1 != 0 goto label17;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = $r9;

     label13:
        $z0 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("upload", 0);

        $z1 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if $z0 == 0 goto label20;

        $b1 = 1;

     label14:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        specialinvoke $r0.<android.content.SyncManager: void populateProvidersList(android.net.Uri,java.util.List,java.util.List)>($r4, $r2, $r3);

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i3 = 0;

     label15:
        if $i3 >= $i2 goto label25;

        $r8 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r12 = (android.content.pm.ProviderInfo) $r8;

        $z0 = $r12.<android.content.pm.ProviderInfo: boolean isSyncable>;

        if $z0 != 0 goto label23;

     label16:
        $i3 = $i3 + 1;

        goto label15;

     label17:
        $r1 = $r0.<android.content.SyncManager: java.lang.String[] mAccounts>;

        $r10 = $r1;

        if $r1 != null goto label18;

        if $z0 == 0 goto label26;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", "scheduleSync: no accounts yet, dropping");

        return;

     label18:
        $i2 = lengthof $r1;

        if $i2 != 0 goto label13;

        if $z0 == 0 goto label19;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", "scheduleSync: no accounts configured, dropping");

     label19:
        specialinvoke $r0.<android.content.SyncManager: void setStatusText(java.lang.String)>("No accounts are configured.");

        return;

     label20:
        if $z1 == 0 goto label21;

        $b1 = 3;

        goto label14;

     label21:
        if $r4 != null goto label22;

        $b1 = 2;

        goto label14;

     label22:
        $b1 = 0;

        goto label14;

     label23:
        $r8 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        $r9 = (java.lang.String) $r8;

        $r1 = $r10;

        $i4 = lengthof $r10;

        $i5 = 0;

     label24:
        if $i5 >= $i4 goto label16;

        $r13 = $r1[$i5];

        $r14 = new android.content.SyncManager$SyncOperation;

        specialinvoke $r14.<android.content.SyncManager$SyncOperation: void <init>(java.lang.String,int,java.lang.String,android.os.Bundle,long)>($r13, $b1, $r9, $r5, $l0);

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncManager$SyncOperation)>($r14);

        $r13 = "calendar";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label16;

        $i5 = $i5 + 1;

        goto label24;

     label25:
        return;

     label26:
        return;
    }

    public void scheduleSyncOperation(android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager $r0;
        android.content.SyncManager$SyncOperation $r1, $r3;
        android.content.SyncManager$ActiveSyncContext $r2;
        long $l0;
        byte $b1;
        boolean $z0, $z1;
        java.lang.String $r4, $r5;
        android.content.SyncManager$SyncQueue $r6, $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.content.SyncManager$SyncOperation;

        $l0 = $r1.<android.content.SyncManager$SyncOperation: long delay>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label07;

        $z0 = 1;

     label01:
        $r2 = $r0.<android.content.SyncManager: android.content.SyncManager$ActiveSyncContext mActiveSyncContext>;

        if $z0 == 0 goto label03;

        if $r2 == null goto label03;

        $r3 = $r2.<android.content.SyncManager$ActiveSyncContext: android.content.SyncManager$SyncOperation mSyncOperation>;

        $l0 = $r3.<android.content.SyncManager$SyncOperation: long delay>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label08;

        $z0 = 1;

     label02:
        $r3 = $r2.<android.content.SyncManager$ActiveSyncContext: android.content.SyncManager$SyncOperation mSyncOperation>;

        $r4 = $r3.<android.content.SyncManager$SyncOperation: java.lang.String key>;

        $r5 = $r1.<android.content.SyncManager$SyncOperation: java.lang.String key>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label03;

        if $z1 != 0 goto label03;

        $r3 = $r2.<android.content.SyncManager$ActiveSyncContext: android.content.SyncManager$SyncOperation mSyncOperation>;

        specialinvoke $r0.<android.content.SyncManager: void rescheduleImmediately(android.content.SyncManager$SyncOperation)>($r3);

        specialinvoke $r0.<android.content.SyncManager: void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>($r2, null);

     label03:
        $r6 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        entermonitor $r6;

     label04:
        $r7 = $r0.<android.content.SyncManager: android.content.SyncManager$SyncQueue mSyncQueue>;

        $z0 = virtualinvoke $r7.<android.content.SyncManager$SyncQueue: boolean add(android.content.SyncManager$SyncOperation)>($r1);

        exitmonitor $r6;

     label05:
        if $z0 == 0 goto label12;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label06;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleSyncOperation: enqueued ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r4);

     label06:
        specialinvoke $r0.<android.content.SyncManager: void sendCheckAlarmsMessage()>();

        return;

     label07:
        $z0 = 0;

        goto label01;

     label08:
        $z0 = 0;

        goto label02;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor $r6;

     label11:
        throw $r9;

     label12:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SyncManager", 2);

        if $z0 == 0 goto label13;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleSyncOperation: dropping duplicate sync operation ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SyncManager", $r4);

        return;

     label13:
        return;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void startSync(android.net.Uri, android.os.Bundle)
    {
        android.content.SyncManager $r0;
        android.net.Uri $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.content.SyncManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.os.Bundle;

        virtualinvoke $r0.<android.content.SyncManager: void scheduleSync(android.net.Uri,android.os.Bundle,long)>($r1, $r2, 0L);

        return;
    }

    public void updateHeartbeatTime()
    {
        android.content.SyncManager $r0;
        android.net.Uri $r1;
        long $l0;
        android.content.ContentResolver $r2;

        $r0 := @this: android.content.SyncManager;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r0.<android.content.SyncManager: long mHeartbeatTime> = $l0;

        specialinvoke $r0.<android.content.SyncManager: void ensureContentResolver()>();

        $r2 = $r0.<android.content.SyncManager: android.content.ContentResolver mContentResolver>;

        $r1 = <android.provider.Sync$Active: android.net.Uri CONTENT_URI>;

        virtualinvoke $r2.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r1, null);

        return;
    }
}
