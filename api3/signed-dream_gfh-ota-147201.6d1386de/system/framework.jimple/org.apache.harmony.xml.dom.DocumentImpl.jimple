public class org.apache.harmony.xml.dom.DocumentImpl extends org.apache.harmony.xml.dom.InnerNodeImpl implements org.w3c.dom.Document
{
    private org.w3c.dom.DOMImplementation domImplementation;

    void <init>(org.apache.harmony.xml.dom.DOMImplementationImpl, java.lang.String, java.lang.String, org.w3c.dom.DocumentType)
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        org.apache.harmony.xml.dom.DOMImplementationImpl $r1;
        java.lang.String $r2, $r3;
        org.w3c.dom.DocumentType $r4;
        org.w3c.dom.Element $r5;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: org.apache.harmony.xml.dom.DOMImplementationImpl;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.w3c.dom.DocumentType;

        specialinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl)>(null);

        $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation domImplementation> = $r1;

        if $r4 == null goto label1;

        virtualinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

     label1:
        if $r3 == null goto label2;

        $r5 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r2, $r3);

        virtualinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        return;

     label2:
        return;
    }

    static boolean isXMLIdentifier(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i2;
        char $c1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.harmony.xml.dom.DocumentImpl: boolean isXMLIdentifierStart(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = 1;

     label3:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i2 goto label5;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <org.apache.harmony.xml.dom.DocumentImpl: boolean isXMLIdentifierPart(char)>($c1);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        return 1;
    }

    private static boolean isXMLIdentifierPart(char)
    {
        char $c0;
        boolean $z0;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.harmony.xml.dom.DocumentImpl: boolean isXMLIdentifierStart(char)>($c0);

        if $z0 != 0 goto label2;

        if $c0 < 48 goto label1;

        if $c0 <= 57 goto label2;

     label1:
        if $c0 == 45 goto label2;

        if $c0 != 46 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static boolean isXMLIdentifierStart(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 65 goto label1;

        if $c0 <= 90 goto label3;

     label1:
        if $c0 < 97 goto label2;

        if $c0 <= 122 goto label3;

     label2:
        if $c0 != 95 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    org.w3c.dom.Node cloneNode(org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        org.w3c.dom.Node $r1, $r9, $r18;
        boolean $z0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;
        org.w3c.dom.Attr $r6, $r8;
        org.w3c.dom.NodeList $r10;
        int $i1, $i2;
        org.w3c.dom.CharacterData $r11;
        org.w3c.dom.Comment $r13;
        org.w3c.dom.Element $r15, $r16;
        org.w3c.dom.NamedNodeMap $r17;
        org.w3c.dom.EntityReference $r19;
        org.w3c.dom.ProcessingInstruction $r20;
        org.w3c.dom.Text $r21;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $z0 := @parameter1: boolean;

        $s0 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        lookupswitch($s0)
        {
            case 1: goto label10;
            case 2: goto label02;
            case 3: goto label16;
            case 4: goto label05;
            case 5: goto label13;
            case 6: goto label12;
            case 7: goto label15;
            case 8: goto label06;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label07;
            case 12: goto label14;
            default: goto label01;
        };

     label01:
        $r2 = new org.w3c.dom.DOMException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot clone unknown node type ");

        $s0 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r5);

        throw $r2;

     label02:
        $r6 = (org.w3c.dom.Attr) $r1;

        $r5 = interfaceinvoke $r6.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r8 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>($r5, $r7);

        $r9 = $r8;

        $r5 = interfaceinvoke $r6.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        interfaceinvoke $r8.<org.w3c.dom.Node: void setPrefix(java.lang.String)>($r5);

        $r5 = interfaceinvoke $r6.<org.w3c.dom.Attr: java.lang.String getNodeValue()>();

        interfaceinvoke $r8.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>($r5);

     label03:
        if $z0 == 0 goto label17;

        $r10 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i1 = 0;

     label04:
        $i2 = interfaceinvoke $r10.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 >= $i2 goto label18;

        $r1 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $r1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Node cloneNode(org.w3c.dom.Node,boolean)>($r1, $z0);

        interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r1);

        $i1 = $i1 + 1;

        goto label04;

     label05:
        $r11 = (org.w3c.dom.CharacterData) $r1;

        $r5 = interfaceinvoke $r11.<org.w3c.dom.CharacterData: java.lang.String getData()>();

        $r9 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>($r5);

        goto label03;

     label06:
        $r13 = (org.w3c.dom.Comment) $r1;

        $r5 = interfaceinvoke $r13.<org.w3c.dom.Comment: java.lang.String getData()>();

        $r9 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Comment createComment(java.lang.String)>($r5);

        goto label03;

     label07:
        $r9 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()>();

        goto label03;

     label08:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "Cannot clone a Document node");

        throw $r2;

     label09:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "Cannot clone a DocumentType node");

        throw $r2;

     label10:
        $r15 = (org.w3c.dom.Element) $r1;

        $r5 = interfaceinvoke $r15.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r7 = interfaceinvoke $r15.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r16 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r5, $r7);

        $r9 = $r16;

        $r5 = interfaceinvoke $r15.<org.w3c.dom.Element: java.lang.String getPrefix()>();

        interfaceinvoke $r16.<org.w3c.dom.Node: void setPrefix(java.lang.String)>($r5);

        $r17 = interfaceinvoke $r15.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i1 = 0;

     label11:
        $i2 = interfaceinvoke $r17.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if $i1 >= $i2 goto label03;

        $r18 = interfaceinvoke $r17.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>($i1);

        $r6 = (org.w3c.dom.Attr) $r18;

        $r15 = (org.w3c.dom.Element) $r16;

        $r18 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Node cloneNode(org.w3c.dom.Node,boolean)>($r6, $z0);

        $r6 = (org.w3c.dom.Attr) $r18;

        interfaceinvoke $r15.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r6);

        $i1 = $i1 + 1;

        goto label11;

     label12:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "Cannot clone an Entity node");

        throw $r2;

     label13:
        $r19 = (org.w3c.dom.EntityReference) $r1;

        $r5 = interfaceinvoke $r19.<org.w3c.dom.EntityReference: java.lang.String getNodeName()>();

        $r9 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>($r5);

        goto label03;

     label14:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "Cannot clone a Notation node");

        throw $r2;

     label15:
        $r20 = (org.w3c.dom.ProcessingInstruction) $r1;

        $r5 = interfaceinvoke $r20.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>();

        $r7 = interfaceinvoke $r20.<org.w3c.dom.ProcessingInstruction: java.lang.String getData()>();

        $r9 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r5, $r7);

        goto label03;

     label16:
        $r21 = (org.w3c.dom.Text) $r1;

        $r5 = interfaceinvoke $r21.<org.w3c.dom.Text: java.lang.String getData()>();

        $r9 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)>($r5);

        goto label03;

     label17:
        return $r9;

     label18:
        return $r9;
    }

    public org.apache.harmony.xml.dom.AttrImpl createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.AttrImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.harmony.xml.dom.AttrImpl;

        specialinvoke $r2.<org.apache.harmony.xml.dom.AttrImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public volatile org.w3c.dom.Attr createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.AttrImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.apache.harmony.xml.dom.AttrImpl createAttribute(java.lang.String)>($r1);

        return $r2;
    }

    public org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1, $r2;
        org.apache.harmony.xml.dom.AttrImpl $r3;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.harmony.xml.dom.AttrImpl;

        specialinvoke $r3.<org.apache.harmony.xml.dom.AttrImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }

    public org.w3c.dom.CDATASection createCDATASection(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.CDATASectionImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.harmony.xml.dom.CDATASectionImpl;

        specialinvoke $r2.<org.apache.harmony.xml.dom.CDATASectionImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.CommentImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.harmony.xml.dom.CommentImpl;

        specialinvoke $r2.<org.apache.harmony.xml.dom.CommentImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        org.apache.harmony.xml.dom.DocumentFragmentImpl $r1;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 = new org.apache.harmony.xml.dom.DocumentFragmentImpl;

        specialinvoke $r1.<org.apache.harmony.xml.dom.DocumentFragmentImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl)>($r0);

        return $r1;
    }

    public org.w3c.dom.Element createElement(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.ElementImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.harmony.xml.dom.ElementImpl;

        specialinvoke $r2.<org.apache.harmony.xml.dom.ElementImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1, $r2;
        org.apache.harmony.xml.dom.ElementImpl $r3;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.harmony.xml.dom.ElementImpl;

        specialinvoke $r3.<org.apache.harmony.xml.dom.ElementImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }

    public org.w3c.dom.EntityReference createEntityReference(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.EntityReferenceImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.harmony.xml.dom.EntityReferenceImpl;

        specialinvoke $r2.<org.apache.harmony.xml.dom.EntityReferenceImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1, $r2;
        org.apache.harmony.xml.dom.ProcessingInstructionImpl $r3;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.harmony.xml.dom.ProcessingInstructionImpl;

        specialinvoke $r3.<org.apache.harmony.xml.dom.ProcessingInstructionImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }

    public org.w3c.dom.Text createTextNode(java.lang.String)
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.xml.dom.TextImpl $r2;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.harmony.xml.dom.TextImpl;

        specialinvoke $r2.<org.apache.harmony.xml.dom.TextImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public org.w3c.dom.DocumentType getDoctype()
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.w3c.dom.DocumentType $r3;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $i0 = 0;

     label1:
        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r2 instanceof org.w3c.dom.DocumentType;

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.w3c.dom.DocumentType) $r2;

        return $r3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.w3c.dom.Element getDocumentElement()
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.w3c.dom.Element $r3;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $i0 = 0;

     label1:
        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r2 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.w3c.dom.Element) $r2;

        return $r3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.w3c.dom.Element getElementById(java.lang.String)
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.w3c.dom.Element $r2;
        org.apache.harmony.xml.dom.ElementImpl $r3;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()>();

        $r3 = (org.apache.harmony.xml.dom.ElementImpl) $r2;

        if $r3 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r3.<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Element getElementById(java.lang.String)>($r1);

        return $r2;
    }

    public org.w3c.dom.NodeList getElementsByTagName(java.lang.String)
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1;
        org.w3c.dom.Element $r2;
        org.apache.harmony.xml.dom.ElementImpl $r3;
        org.apache.harmony.xml.dom.NodeListImpl $r4;
        org.w3c.dom.NodeList $r5;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()>();

        $r3 = (org.apache.harmony.xml.dom.ElementImpl) $r2;

        if $r3 != null goto label1;

        $r4 = new org.apache.harmony.xml.dom.NodeListImpl;

        specialinvoke $r4.<org.apache.harmony.xml.dom.NodeListImpl: void <init>()>();

        return $r4;

     label1:
        $r5 = virtualinvoke $r3.<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>($r1);

        return $r5;
    }

    public org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        java.lang.String $r1, $r2;
        org.w3c.dom.Element $r3;
        org.apache.harmony.xml.dom.ElementImpl $r4;
        org.apache.harmony.xml.dom.NodeListImpl $r5;
        org.w3c.dom.NodeList $r6;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()>();

        $r4 = (org.apache.harmony.xml.dom.ElementImpl) $r3;

        if $r4 != null goto label1;

        $r5 = new org.apache.harmony.xml.dom.NodeListImpl;

        specialinvoke $r5.<org.apache.harmony.xml.dom.NodeListImpl: void <init>()>();

        return $r5;

     label1:
        $r6 = virtualinvoke $r4.<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>($r1, $r2);

        return $r6;
    }

    public org.w3c.dom.DOMImplementation getImplementation()
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        org.w3c.dom.DOMImplementation r1;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        r1 = $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation domImplementation>;

        return r1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        return "#document";
    }

    public short getNodeType()
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        return 9;
    }

    public org.w3c.dom.Node importNode(org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        org.w3c.dom.Node $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Node cloneNode(org.w3c.dom.Node,boolean)>($r1, $z0);

        return $r1;
    }

    public org.w3c.dom.Node insertChildAt(org.w3c.dom.Node, int) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.DocumentImpl $r0;
        org.w3c.dom.Node $r1;
        int $i0;
        boolean $z0;
        org.w3c.dom.Element $r2;
        org.w3c.dom.DOMException $r3;
        org.w3c.dom.DocumentType $r4;

        $r0 := @this: org.apache.harmony.xml.dom.DocumentImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()>();

        if $r2 == null goto label1;

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, "Only one root element allowed");

        throw $r3;

     label1:
        $z0 = $r1 instanceof org.w3c.dom.DocumentType;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r0.<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()>();

        if $r4 == null goto label2;

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, "Only one DOCTYPE element allowed");

        throw $r3;

     label2:
        $r1 = specialinvoke $r0.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int)>($r1, $i0);

        return $r1;
    }
}
