public class android.hardware.Camera$Parameters extends java.lang.Object
{
    private java.util.HashMap mMap;
    final android.hardware.Camera this$0;

    private void <init>(android.hardware.Camera)
    {
        android.hardware.Camera$Parameters $r0;
        android.hardware.Camera $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: android.hardware.Camera;

        $r0.<android.hardware.Camera$Parameters: android.hardware.Camera this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap> = $r2;

        return;
    }

    void <init>(android.hardware.Camera, android.hardware.Camera$1)
    {
        android.hardware.Camera$Parameters $r0;
        android.hardware.Camera $r1;
        android.hardware.Camera$1 $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: android.hardware.Camera;

        $r2 := @parameter1: android.hardware.Camera$1;

        specialinvoke $r0.<android.hardware.Camera$Parameters: void <init>(android.hardware.Camera)>($r1);

        return;
    }

    private java.lang.String cameraFormatForPixelFormat(int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 4: goto label4;
            case 16: goto label2;
            case 17: goto label3;
            case 256: goto label5;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "yuv422sp";

     label3:
        return "yuv420sp";

     label4:
        return "rgb565";

     label5:
        return "jpeg";
    }

    private int pixelFormatForCameraFormat(java.lang.String)
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("yuv422sp");

        if $z0 == 0 goto label2;

        return 16;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("yuv420sp");

        if $z0 == 0 goto label3;

        return 17;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("rgb565");

        if $z0 == 0 goto label4;

        return 4;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("jpeg");

        if $z0 == 0 goto label5;

        return 256;

     label5:
        return 0;
    }

    public void dump()
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.StringBuilder $r1;
        java.util.HashMap $r2;
        int $i0;
        java.lang.String $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dump: size=");

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Camera", $r3);

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r6;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dump: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r6 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = (java.lang.String) $r6;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Camera", $r3);

        goto label1;

     label2:
        return;
    }

    public java.lang.String flatten()
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.StringBuilder $r1;
        java.util.HashMap $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r5 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r6 = (java.lang.String) $r5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        goto label1;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 - 1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String get(java.lang.String)
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        android.hardware.Camera$Parameters $r3;

        $r3 := @this: android.hardware.Camera$Parameters;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r3.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r2;

        return $r0;
    }

    public int getInt(java.lang.String)
    {
        java.lang.String $r0;
        android.hardware.Camera$Parameters $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        int $i0;

        $r1 := @this: android.hardware.Camera$Parameters;

        $r0 := @parameter0: java.lang.String;

        $r2 = $r1.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r3;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i0;
    }

    public int getPictureFormat()
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = virtualinvoke $r0.<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>("picture-format");

        $i0 = specialinvoke $r0.<android.hardware.Camera$Parameters: int pixelFormatForCameraFormat(java.lang.String)>($r1);

        return $i0;
    }

    public android.hardware.Camera$Size getPictureSize()
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1;
        android.hardware.Camera$Size $r2;
        java.lang.String[] $r3;
        int $i0, $i1;
        android.hardware.Camera $r4;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = virtualinvoke $r0.<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>("picture-size");

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("x");

        $i0 = lengthof $r3;

        if $i0 == 2 goto label2;

        return null;

     label2:
        $r2 = new android.hardware.Camera$Size;

        $r4 = $r0.<android.hardware.Camera$Parameters: android.hardware.Camera this$0>;

        $r1 = $r3[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r1 = $r3[1];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        specialinvoke $r2.<android.hardware.Camera$Size: void <init>(android.hardware.Camera,int,int)>($r4, $i0, $i1);

        return $r2;
    }

    public int getPreviewFormat()
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = virtualinvoke $r0.<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>("preview-format");

        $i0 = specialinvoke $r0.<android.hardware.Camera$Parameters: int pixelFormatForCameraFormat(java.lang.String)>($r1);

        return $i0;
    }

    public int getPreviewFrameRate()
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 = virtualinvoke $r0.<android.hardware.Camera$Parameters: int getInt(java.lang.String)>("preview-frame-rate");

        return $i0;
    }

    public android.hardware.Camera$Size getPreviewSize()
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1;
        android.hardware.Camera$Size $r2;
        java.lang.String[] $r3;
        int $i0, $i1;
        android.hardware.Camera $r4;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = virtualinvoke $r0.<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>("preview-size");

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("x");

        $i0 = lengthof $r3;

        if $i0 == 2 goto label2;

        return null;

     label2:
        $r2 = new android.hardware.Camera$Size;

        $r4 = $r0.<android.hardware.Camera$Parameters: android.hardware.Camera this$0>;

        $r1 = $r3[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r1 = $r3[1];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        specialinvoke $r2.<android.hardware.Camera$Size: void <init>(android.hardware.Camera,int,int)>($r4, $i0, $i1);

        return $r2;
    }

    public int getThumbnailQuality()
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 = virtualinvoke $r0.<android.hardware.Camera$Parameters: int getInt(java.lang.String)>("jpeg-thumbnail-quality");

        return $i0;
    }

    public android.hardware.Camera$Size getThumbnailSize()
    {
        android.hardware.Camera$Parameters $r0;
        android.hardware.Camera$Size $r1;
        android.hardware.Camera $r2;
        int $i0, $i1;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 = new android.hardware.Camera$Size;

        $r2 = $r0.<android.hardware.Camera$Parameters: android.hardware.Camera this$0>;

        $i0 = virtualinvoke $r0.<android.hardware.Camera$Parameters: int getInt(java.lang.String)>("jpeg-thumbnail-width");

        $i1 = virtualinvoke $r0.<android.hardware.Camera$Parameters: int getInt(java.lang.String)>("jpeg-thumbnail-height");

        specialinvoke $r1.<android.hardware.Camera$Size: void <init>(android.hardware.Camera,int,int)>($r2, $i0, $i1);

        return $r1;
    }

    public void remove(java.lang.String)
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public void set(java.lang.String, int)
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1, $r3;
        int $i0;
        java.util.HashMap $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void set(java.lang.String, java.lang.String)
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1, $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        java.util.HashMap $r4;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(61);

        if $i0 != -1 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(59);

        if $i0 == -1 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key \"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" contains invalid character (= or ;)");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Camera", $r1);

        return;

     label2:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(61);

        if $i0 != -1 goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(59);

        if $i0 == -1 goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value \"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" contains invalid character (= or ;)");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Camera", $r1);

        return;

     label4:
        $r4 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void setPictureFormat(int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        $r1 = specialinvoke $r0.<android.hardware.Camera$Parameters: java.lang.String cameraFormatForPixelFormat(int)>($i0);

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>("picture-format", $r1);

        return;
    }

    public void setPictureSize(int, int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>("picture-size", $r2);

        return;
    }

    public void setPreviewFormat(int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        $r1 = specialinvoke $r0.<android.hardware.Camera$Parameters: java.lang.String cameraFormatForPixelFormat(int)>($i0);

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>("preview-format", $r1);

        return;
    }

    public void setPreviewFrameRate(int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,int)>("preview-frame-rate", $i0);

        return;
    }

    public void setPreviewSize(int, int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>("preview-size", $r2);

        return;
    }

    public void setThumbnailQuality(int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,int)>("jpeg-thumbnail-quality", $i0);

        return;
    }

    public void setThumbnailSize(int, int)
    {
        android.hardware.Camera$Parameters $r0;
        int $i0, $i1;

        $r0 := @this: android.hardware.Camera$Parameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,int)>("jpeg-thumbnail-width", $i0);

        virtualinvoke $r0.<android.hardware.Camera$Parameters: void set(java.lang.String,int)>("jpeg-thumbnail-height", $i1);

        return;
    }

    public void unflatten(java.lang.String)
    {
        android.hardware.Camera$Parameters $r0;
        java.lang.String $r1, $r4;
        java.util.StringTokenizer $r2;
        java.util.HashMap $r3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.hardware.Camera$Parameters;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        virtualinvoke $r3.<java.util.HashMap: void clear()>();

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ";");

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(61);

        if $i0 == -1 goto label1;

        $r1 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = $r0.<android.hardware.Camera$Parameters: java.util.HashMap mMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        goto label1;

     label2:
        return;
    }
}
