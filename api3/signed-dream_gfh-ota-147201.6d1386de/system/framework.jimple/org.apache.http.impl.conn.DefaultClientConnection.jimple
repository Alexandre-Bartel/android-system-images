public class org.apache.http.impl.conn.DefaultClientConnection extends org.apache.http.impl.SocketHttpClientConnection implements org.apache.http.conn.OperatedClientConnection
{
    private boolean connSecure;
    private final org.apache.commons.logging.Log headerLog;
    private final org.apache.commons.logging.Log log;
    private volatile boolean shutdown;
    private volatile java.net.Socket socket;
    private org.apache.http.HttpHost targetHost;
    private final org.apache.commons.logging.Log wireLog;

    public void <init>()
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        specialinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log log> = $r2;

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>("org.apache.http.headers");

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog> = $r2;

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>("org.apache.http.wire");

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log wireLog> = $r2;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        org.apache.commons.logging.Log $r1;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log log>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection closed");

        specialinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void close()>();

        return;
    }

    protected org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.HttpResponseFactory $r2;
        org.apache.http.params.HttpParams $r3;
        org.apache.http.impl.conn.DefaultResponseParser $r4;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        $r2 := @parameter1: org.apache.http.HttpResponseFactory;

        $r3 := @parameter2: org.apache.http.params.HttpParams;

        $r4 = new org.apache.http.impl.conn.DefaultResponseParser;

        specialinvoke $r4.<org.apache.http.impl.conn.DefaultResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>($r1, null, $r2, $r3);

        return $r4;
    }

    protected org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket, int, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.net.Socket $r1;
        int $i0;
        org.apache.http.params.HttpParams $r2;
        org.apache.http.impl.conn.LoggingSessionInputBuffer $r3;
        org.apache.commons.logging.Log $r4;
        org.apache.http.io.SessionInputBuffer $r5;
        boolean $z0;
        org.apache.http.impl.conn.Wire $r6;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 := @parameter0: java.net.Socket;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.http.params.HttpParams;

        $r5 = specialinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>($r1, $i0, $r2);

        $r4 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log wireLog>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = new org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r6 = new org.apache.http.impl.conn.Wire;

        $r4 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log wireLog>;

        specialinvoke $r6.<org.apache.http.impl.conn.Wire: void <init>(org.apache.commons.logging.Log)>($r4);

        specialinvoke $r3.<org.apache.http.impl.conn.LoggingSessionInputBuffer: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire)>($r5, $r6);

        return $r3;

     label1:
        return $r5;
    }

    protected org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket, int, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.net.Socket $r1;
        int $i0;
        org.apache.http.params.HttpParams $r2;
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r3;
        org.apache.commons.logging.Log $r4;
        org.apache.http.io.SessionOutputBuffer $r5;
        boolean $z0;
        org.apache.http.impl.conn.Wire $r6;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 := @parameter0: java.net.Socket;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.http.params.HttpParams;

        $r5 = specialinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>($r1, $i0, $r2);

        $r4 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log wireLog>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = new org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r6 = new org.apache.http.impl.conn.Wire;

        $r4 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log wireLog>;

        specialinvoke $r6.<org.apache.http.impl.conn.Wire: void <init>(org.apache.commons.logging.Log)>($r4);

        specialinvoke $r3.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.impl.conn.Wire)>($r5, $r6);

        return $r3;

     label1:
        return $r5;
    }

    public final java.net.Socket getSocket()
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.net.Socket r1;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        r1 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket socket>;

        return r1;
    }

    public final org.apache.http.HttpHost getTargetHost()
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        org.apache.http.HttpHost r1;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        r1 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost targetHost>;

        return r1;
    }

    public final boolean isSecure()
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        boolean z0;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        z0 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: boolean connSecure>;

        return z0;
    }

    public void openCompleted(boolean, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        boolean $z0;
        org.apache.http.params.HttpParams $r1;
        java.lang.IllegalArgumentException $r2;
        java.net.Socket $r3;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.apache.http.params.HttpParams;

        virtualinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void assertNotOpen()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r2;

     label1:
        $r0.<org.apache.http.impl.conn.DefaultClientConnection: boolean connSecure> = $z0;

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket socket>;

        virtualinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>($r3, $r1);

        return;
    }

    public void opening(java.net.Socket, org.apache.http.HttpHost) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.net.Socket $r1;
        org.apache.http.HttpHost $r2;
        boolean $z0;
        java.io.IOException $r3;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: org.apache.http.HttpHost;

        virtualinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void assertNotOpen()>();

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket socket> = $r1;

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost targetHost> = $r2;

        $z0 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: boolean shutdown>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.net.Socket: void close()>();

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Connection already shutdown");

        throw $r3;

     label1:
        return;
    }

    public org.apache.http.HttpResponse receiveResponseHeader() throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        org.apache.http.Header $r1;
        int $i0, $i1;
        org.apache.http.HttpResponse $r2;
        org.apache.commons.logging.Log $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        org.apache.http.StatusLine $r5;
        java.lang.String $r6;
        org.apache.http.Header[] $r7;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r2 = specialinvoke $r0.<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>();

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<< ");

        $r5 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

        $r7 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r7[$i1];

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<< ");

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;

     label3:
        return $r2;
    }

    public void sendRequestHeader(org.apache.http.HttpRequest) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        org.apache.http.HttpRequest $r1;
        org.apache.http.Header $r2;
        int $i0, $i1;
        org.apache.commons.logging.Log $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        org.apache.http.RequestLine $r5;
        java.lang.String $r6;
        org.apache.http.Header[] $r7;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 := @parameter0: org.apache.http.HttpRequest;

        specialinvoke $r0.<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>($r1);

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">> ");

        $r5 = interfaceinvoke $r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

        $r7 = interfaceinvoke $r1.<org.apache.http.HttpRequest: org.apache.http.Header[] getAllHeaders()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r7[$i1];

        $r3 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log headerLog>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">> ");

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    public void shutdown() throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.net.Socket $r1;
        org.apache.commons.logging.Log $r2;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r2 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.commons.logging.Log log>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection shut down");

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: boolean shutdown> = 1;

        specialinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void shutdown()>();

        $r1 = $r0.<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket socket>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<java.net.Socket: void close()>();

        return;

     label1:
        return;
    }

    public void update(java.net.Socket, org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnection $r0;
        java.net.Socket $r1;
        org.apache.http.HttpHost $r2;
        boolean $z0;
        org.apache.http.params.HttpParams $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: org.apache.http.impl.conn.DefaultClientConnection;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: org.apache.http.HttpHost;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: org.apache.http.params.HttpParams;

        virtualinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void assertOpen()>();

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host must not be null.");

        throw $r4;

     label1:
        if $r3 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r4;

     label2:
        if $r1 == null goto label3;

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket socket> = $r1;

        virtualinvoke $r0.<org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>($r1, $r3);

     label3:
        $r0.<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost targetHost> = $r2;

        $r0.<org.apache.http.impl.conn.DefaultClientConnection: boolean connSecure> = $z0;

        return;
    }
}
