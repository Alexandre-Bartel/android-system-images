class com.android.internal.os.RuntimeInit$UncaughtHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{

    private void <init>()
    {
        com.android.internal.os.RuntimeInit$UncaughtHandler $r0;

        $r0 := @this: com.android.internal.os.RuntimeInit$UncaughtHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.os.RuntimeInit$1)
    {
        com.android.internal.os.RuntimeInit$UncaughtHandler $r0;
        com.android.internal.os.RuntimeInit$1 $r1;

        $r0 := @this: com.android.internal.os.RuntimeInit$UncaughtHandler;

        $r1 := @parameter0: com.android.internal.os.RuntimeInit$1;

        specialinvoke $r0.<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>()>();

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.android.internal.os.RuntimeInit$UncaughtHandler $r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2, $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.internal.os.RuntimeInit$UncaughtHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uncaught handler: thread ");

        $r4 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exiting due to uncaught exception");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AndroidRuntime", $r4);

     label2:
        staticinvoke <com.android.internal.os.RuntimeInit: void crash(java.lang.String,java.lang.Throwable)>("AndroidRuntime", $r2);

        return;

     label3:
        $r5 := @caughtexception;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
