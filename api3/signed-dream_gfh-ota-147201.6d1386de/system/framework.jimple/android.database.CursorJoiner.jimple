public final class android.database.CursorJoiner extends java.lang.Object implements java.lang.Iterable, java.util.Iterator
{
    static final boolean $assertionsDisabled;
    private int[] mColumnsLeft;
    private int[] mColumnsRight;
    private android.database.CursorJoiner$Result mCompareResult;
    private boolean mCompareResultIsValid;
    private android.database.Cursor mCursorLeft;
    private android.database.Cursor mCursorRight;
    private java.lang.String[] mValues;

    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "android/database/CursorJoiner";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <android.database.CursorJoiner: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>(android.database.Cursor, java.lang.String[], android.database.Cursor, java.lang.String[])
    {
        android.database.CursorJoiner $r0;
        android.database.Cursor $r1, $r3, $r8;
        java.lang.String[] $r2, $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        int[] $r9;

        $r0 := @this: android.database.CursorJoiner;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: android.database.Cursor;

        $r4 := @parameter3: java.lang.String[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = lengthof $r4;

        if $i0 == $i1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("you must have the same number of columns on the left and right, ");

        $i0 = lengthof $r2;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i0 = lengthof $r4;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft> = $r1;

        $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight> = $r3;

        $r8 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

        $r8 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

        $r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 0;

        $r9 = specialinvoke $r0.<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>($r1, $r2);

        $r0.<android.database.CursorJoiner: int[] mColumnsLeft> = $r9;

        $r9 = specialinvoke $r0.<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>($r3, $r4);

        $r0.<android.database.CursorJoiner: int[] mColumnsRight> = $r9;

        $r9 = $r0.<android.database.CursorJoiner: int[] mColumnsLeft>;

        $i0 = lengthof $r9;

        $i0 = $i0 * 2;

        $r2 = newarray (java.lang.String)[$i0];

        $r0.<android.database.CursorJoiner: java.lang.String[] mValues> = $r2;

        return;
    }

    private int[] buildColumnIndiciesArray(android.database.Cursor, java.lang.String[])
    {
        android.database.CursorJoiner $r0;
        android.database.Cursor $r1;
        java.lang.String[] $r2;
        int[] $r3;
        int $i0, $i1;
        java.lang.String $r4;

        $r0 := @this: android.database.CursorJoiner;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: java.lang.String[];

        $i1 = lengthof $r2;

        $r3 = newarray (int)[$i1];

        $i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label2;

        $r4 = $r2[$i1];

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>($r4);

        $r3[$i1] = $i0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private static transient int compareStrings(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: java.lang.String[];

        $i1 = lengthof $r0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify an even number of values");

        throw $r1;

     label1:
        $i1 = 0;

     label2:
        $i0 = lengthof $r0;

        if $i1 >= $i0 goto label8;

        $r2 = $r0[$i1];

        if $r2 != null goto label5;

        $i0 = $i1 + 1;

        $r2 = $r0[$i0];

        if $r2 != null goto label4;

     label3:
        $i1 = $i1 + 2;

        goto label2;

     label4:
        return -1;

     label5:
        $i0 = $i1 + 1;

        $r2 = $r0[$i0];

        if $r2 != null goto label6;

        return 1;

     label6:
        $r2 = $r0[$i1];

        $i0 = $i1 + 1;

        $r3 = $r0[$i0];

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        if $i0 == 0 goto label3;

        if $i0 >= 0 goto label7;

        return -1;

     label7:
        return 1;

     label8:
        return 0;
    }

    private void incrementCursors()
    {
        android.database.CursorJoiner $r0;
        int $i0;
        boolean $z0;
        int[] $r1;
        android.database.CursorJoiner$Result $r2;
        android.database.Cursor $r3;

        $r0 := @this: android.database.CursorJoiner;

        $z0 = $r0.<android.database.CursorJoiner: boolean mCompareResultIsValid>;

        if $z0 == 0 goto label5;

        $r1 = <android.database.CursorJoiner$1: int[] $SwitchMap$android$database$CursorJoiner$Result>;

        $r2 = $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $i0 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        $r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 0;

        return;

     label2:
        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        goto label1;

     label3:
        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        goto label1;

     label4:
        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        goto label1;

     label5:
        return;
    }

    private static void populateValues(java.lang.String[], android.database.Cursor, int[], int)
    {
        java.lang.String[] $r0;
        android.database.Cursor $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;
        boolean $z0;
        java.lang.AssertionError $r4;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: android.database.Cursor;

        $r2 := @parameter2: int[];

        $i0 := @parameter3: int;

        $z0 = <android.database.CursorJoiner: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $i0 == 0 goto label1;

        if $i0 == 1 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $i1 = 0;

     label2:
        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label3;

        $i2 = $i1 * 2;

        $i2 = $i2 + $i0;

        $i3 = $r2[$i1];

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i3);

        $r0[$i2] = $r3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean hasNext()
    {
        android.database.CursorJoiner $r0;
        boolean $z0;
        int[] $r1;
        android.database.CursorJoiner$Result $r2;
        int $i0;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.database.Cursor $r6;

        $r0 := @this: android.database.CursorJoiner;

        $z0 = $r0.<android.database.CursorJoiner: boolean mCompareResultIsValid>;

        if $z0 == 0 goto label11;

        $r1 = <android.database.CursorJoiner$1: int[] $SwitchMap$android$database$CursorJoiner$Result>;

        $r2 = $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $i0 = virtualinvoke $r2.<java.lang.Enum: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label08;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad value for mCompareResult, ");

        $r2 = $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label02:
        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isLast()>();

        if $z0 == 0 goto label03;

        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isLast()>();

        if $z0 != 0 goto label04;

     label03:
        return 1;

     label04:
        return 0;

     label05:
        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isLast()>();

        if $z0 == 0 goto label06;

        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 != 0 goto label07;

     label06:
        return 1;

     label07:
        return 0;

     label08:
        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 == 0 goto label09;

        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isLast()>();

        if $z0 != 0 goto label10;

     label09:
        return 1;

     label10:
        return 0;

     label11:
        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 == 0 goto label12;

        $r6 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 != 0 goto label13;

     label12:
        return 1;

     label13:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        android.database.CursorJoiner $r0;

        $r0 := @this: android.database.CursorJoiner;

        return $r0;
    }

    public android.database.CursorJoiner$Result next()
    {
        android.database.CursorJoiner $r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        java.lang.AssertionError $r2;
        android.database.Cursor $r3;
        java.lang.String[] $r4;
        int[] $r5;
        int $i0;
        android.database.CursorJoiner$Result $r6;

        $r0 := @this: android.database.CursorJoiner;

        $z0 = virtualinvoke $r0.<android.database.CursorJoiner: boolean hasNext()>();

        if $z0 != 0 goto label01;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you must only call next() when hasNext() is true");

        throw $r1;

     label01:
        specialinvoke $r0.<android.database.CursorJoiner: void incrementCursors()>();

        $z0 = <android.database.CursorJoiner: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r0.<android.database.CursorJoiner: boolean hasNext()>();

        if $z0 != 0 goto label02;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label02:
        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 != 0 goto label06;

        $z0 = 1;

     label03:
        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z1 = interfaceinvoke $r3.<android.database.Cursor: boolean isAfterLast()>();

        if $z1 != 0 goto label07;

        $z1 = 1;

     label04:
        if $z0 == 0 goto label11;

        if $z1 == 0 goto label11;

        $r4 = $r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $r5 = $r0.<android.database.CursorJoiner: int[] mColumnsLeft>;

        staticinvoke <android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>($r4, $r3, $r5, 0);

        $r4 = $r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $r3 = $r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $r5 = $r0.<android.database.CursorJoiner: int[] mColumnsRight>;

        staticinvoke <android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>($r4, $r3, $r5, 1);

        $r4 = $r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $i0 = staticinvoke <android.database.CursorJoiner: int compareStrings(java.lang.String[])>($r4);

        lookupswitch($i0)
        {
            case -1: goto label08;
            case 0: goto label09;
            case 1: goto label10;
            default: goto label05;
        };

     label05:
        $r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 1;

        $r6 = $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        return $r6;

     label06:
        $z0 = 0;

        goto label03;

     label07:
        $z1 = 0;

        goto label04;

     label08:
        $r6 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result LEFT>;

        $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r6;

        goto label05;

     label09:
        $r6 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result BOTH>;

        $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r6;

        goto label05;

     label10:
        $r6 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result RIGHT>;

        $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r6;

        goto label05;

     label11:
        if $z0 == 0 goto label12;

        $r6 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result LEFT>;

        $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r6;

        goto label05;

     label12:
        $z0 = <android.database.CursorJoiner: boolean $assertionsDisabled>;

        if $z0 != 0 goto label13;

        if $z1 != 0 goto label13;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label13:
        $r6 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result RIGHT>;

        $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r6;

        goto label05;
    }

    public volatile java.lang.Object next()
    {
        android.database.CursorJoiner $r0;
        android.database.CursorJoiner$Result $r1;

        $r0 := @this: android.database.CursorJoiner;

        $r1 = virtualinvoke $r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result next()>();

        return $r1;
    }

    public void remove()
    {
        android.database.CursorJoiner $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.database.CursorJoiner;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r1;
    }
}
