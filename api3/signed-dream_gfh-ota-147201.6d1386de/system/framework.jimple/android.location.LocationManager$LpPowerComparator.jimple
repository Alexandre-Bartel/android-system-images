class android.location.LocationManager$LpPowerComparator extends android.location.LocationManager$LpComparator
{
    final android.location.LocationManager this$0;

    private void <init>(android.location.LocationManager)
    {
        android.location.LocationManager$LpPowerComparator $r0;
        android.location.LocationManager $r1;

        $r0 := @this: android.location.LocationManager$LpPowerComparator;

        $r1 := @parameter0: android.location.LocationManager;

        $r0.<android.location.LocationManager$LpPowerComparator: android.location.LocationManager this$0> = $r1;

        specialinvoke $r0.<android.location.LocationManager$LpComparator: void <init>(android.location.LocationManager,android.location.LocationManager$1)>($r1, null);

        return;
    }

    void <init>(android.location.LocationManager, android.location.LocationManager$1)
    {
        android.location.LocationManager$LpPowerComparator $r0;
        android.location.LocationManager $r1;
        android.location.LocationManager$1 $r2;

        $r0 := @this: android.location.LocationManager$LpPowerComparator;

        $r1 := @parameter0: android.location.LocationManager;

        $r2 := @parameter1: android.location.LocationManager$1;

        specialinvoke $r0.<android.location.LocationManager$LpPowerComparator: void <init>(android.location.LocationManager)>($r1);

        return;
    }

    public int compare(android.location.LocationProvider, android.location.LocationProvider)
    {
        android.location.LocationManager$LpPowerComparator $r0;
        android.location.LocationProvider $r1, $r2;
        int $i0, $i1;

        $r0 := @this: android.location.LocationManager$LpPowerComparator;

        $r1 := @parameter0: android.location.LocationProvider;

        $r2 := @parameter1: android.location.LocationProvider;

        $i0 = virtualinvoke $r1.<android.location.LocationProvider: int getPowerRequirement()>();

        $i1 = virtualinvoke $r2.<android.location.LocationProvider: int getPowerRequirement()>();

        $i0 = virtualinvoke $r0.<android.location.LocationManager$LpComparator: int compare(int,int)>($i0, $i1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.location.LocationManager$LpPowerComparator $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        android.location.LocationProvider $r3, $r4;

        $r0 := @this: android.location.LocationManager$LpPowerComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (android.location.LocationProvider) $r1;

        $r4 = (android.location.LocationProvider) $r2;

        $i0 = virtualinvoke $r0.<android.location.LocationManager$LpPowerComparator: int compare(android.location.LocationProvider,android.location.LocationProvider)>($r3, $r4);

        return $i0;
    }

    public boolean equals(android.location.LocationProvider, android.location.LocationProvider)
    {
        android.location.LocationManager$LpPowerComparator $r0;
        android.location.LocationProvider $r1, $r2;
        int $i0, $i1;

        $r0 := @this: android.location.LocationManager$LpPowerComparator;

        $r1 := @parameter0: android.location.LocationProvider;

        $r2 := @parameter1: android.location.LocationProvider;

        $i0 = virtualinvoke $r1.<android.location.LocationProvider: int getPowerRequirement()>();

        $i1 = virtualinvoke $r2.<android.location.LocationProvider: int getPowerRequirement()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
