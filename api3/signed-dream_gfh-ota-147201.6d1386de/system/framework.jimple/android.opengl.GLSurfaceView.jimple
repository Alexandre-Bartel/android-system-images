public class android.opengl.GLSurfaceView extends android.view.SurfaceView implements android.view.SurfaceHolder$Callback
{
    public static final int DEBUG_CHECK_GL_ERROR;
    public static final int DEBUG_LOG_GL_CALLS;
    public static final int RENDERMODE_CONTINUOUSLY;
    public static final int RENDERMODE_WHEN_DIRTY;
    private static final java.util.concurrent.Semaphore sEglSemaphore;
    private int mDebugFlags;
    private android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser;
    private android.opengl.GLSurfaceView$GLThread mGLThread;
    private android.opengl.GLSurfaceView$GLWrapper mGLWrapper;
    private boolean mSizeChanged;

    static void <clinit>()
    {
        java.util.concurrent.Semaphore $r0;

        <android.opengl.GLSurfaceView: int RENDERMODE_CONTINUOUSLY> = 1;

        <android.opengl.GLSurfaceView: int DEBUG_LOG_GL_CALLS> = 2;

        <android.opengl.GLSurfaceView: int DEBUG_CHECK_GL_ERROR> = 1;

        $r0 = new java.util.concurrent.Semaphore;

        specialinvoke $r0.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore sEglSemaphore> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.opengl.GLSurfaceView $r0;
        android.content.Context $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.SurfaceView: void <init>(android.content.Context)>($r1);

        $r0.<android.opengl.GLSurfaceView: boolean mSizeChanged> = 1;

        specialinvoke $r0.<android.opengl.GLSurfaceView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.opengl.GLSurfaceView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<android.opengl.GLSurfaceView: boolean mSizeChanged> = 1;

        specialinvoke $r0.<android.opengl.GLSurfaceView: void init()>();

        return;
    }

    static android.opengl.GLSurfaceView$EGLConfigChooser access$000(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$EGLConfigChooser r1;

        $r0 := @parameter0: android.opengl.GLSurfaceView;

        r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser>;

        return r1;
    }

    static android.opengl.GLSurfaceView$GLWrapper access$100(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$GLWrapper r1;

        $r0 := @parameter0: android.opengl.GLSurfaceView;

        r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLWrapper mGLWrapper>;

        return r1;
    }

    static int access$200(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView $r0;
        int i0;

        $r0 := @parameter0: android.opengl.GLSurfaceView;

        i0 = $r0.<android.opengl.GLSurfaceView: int mDebugFlags>;

        return i0;
    }

    static java.util.concurrent.Semaphore access$300()
    {
        java.util.concurrent.Semaphore r0;

        r0 = <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore sEglSemaphore>;

        return r0;
    }

    static boolean access$400(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView $r0;
        boolean z0;

        $r0 := @parameter0: android.opengl.GLSurfaceView;

        z0 = $r0.<android.opengl.GLSurfaceView: boolean mSizeChanged>;

        return z0;
    }

    static boolean access$402(android.opengl.GLSurfaceView, boolean)
    {
        android.opengl.GLSurfaceView $r0;
        boolean $z0;

        $r0 := @parameter0: android.opengl.GLSurfaceView;

        $z0 := @parameter1: boolean;

        $r0.<android.opengl.GLSurfaceView: boolean mSizeChanged> = $z0;

        return $z0;
    }

    private void init()
    {
        android.opengl.GLSurfaceView $r0;
        android.view.SurfaceHolder $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 = virtualinvoke $r0.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r1.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r0);

        interfaceinvoke $r1.<android.view.SurfaceHolder: void setType(int)>(2);

        return;
    }

    public int getDebugFlags()
    {
        android.opengl.GLSurfaceView $r0;
        int i0;

        $r0 := @this: android.opengl.GLSurfaceView;

        i0 = $r0.<android.opengl.GLSurfaceView: int mDebugFlags>;

        return i0;
    }

    public int getRenderMode()
    {
        android.opengl.GLSurfaceView $r0;
        int $i0;
        android.opengl.GLSurfaceView$GLThread $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        $i0 = virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: int getRenderMode()>();

        return $i0;
    }

    protected void onDetachedFromWindow()
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        specialinvoke $r0.<android.view.SurfaceView: void onDetachedFromWindow()>();

        $r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void requestExitAndWait()>();

        return;
    }

    public void onPause()
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void onPause()>();

        return;
    }

    public void onResume()
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void onResume()>();

        return;
    }

    public void queueEvent(java.lang.Runnable)
    {
        android.opengl.GLSurfaceView $r0;
        java.lang.Runnable $r1;
        android.opengl.GLSurfaceView$GLThread $r2;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void queueEvent(java.lang.Runnable)>($r1);

        return;
    }

    public void requestRender()
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void requestRender()>();

        return;
    }

    public void setDebugFlags(int)
    {
        android.opengl.GLSurfaceView $r0;
        int $i0;

        $r0 := @this: android.opengl.GLSurfaceView;

        $i0 := @parameter0: int;

        $r0.<android.opengl.GLSurfaceView: int mDebugFlags> = $i0;

        return;
    }

    public void setEGLConfigChooser(int, int, int, int, int, int)
    {
        android.opengl.GLSurfaceView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.opengl.GLSurfaceView$ComponentSizeChooser $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $r1 = new android.opengl.GLSurfaceView$ComponentSizeChooser;

        specialinvoke $r1.<android.opengl.GLSurfaceView$ComponentSizeChooser: void <init>(int,int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4, $i5);

        virtualinvoke $r0.<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)>($r1);

        return;
    }

    public void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$EGLConfigChooser $r1;
        android.opengl.GLSurfaceView$GLThread $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.opengl.GLSurfaceView$EGLConfigChooser;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setRenderer has already been called for this instance.");

        throw $r3;

     label1:
        $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser> = $r1;

        return;
    }

    public void setEGLConfigChooser(boolean)
    {
        android.opengl.GLSurfaceView $r0;
        boolean $z0;
        android.opengl.GLSurfaceView$SimpleEGLConfigChooser $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $z0 := @parameter0: boolean;

        $r1 = new android.opengl.GLSurfaceView$SimpleEGLConfigChooser;

        specialinvoke $r1.<android.opengl.GLSurfaceView$SimpleEGLConfigChooser: void <init>(boolean)>($z0);

        virtualinvoke $r0.<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)>($r1);

        return;
    }

    public void setGLWrapper(android.opengl.GLSurfaceView$GLWrapper)
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$GLWrapper $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.opengl.GLSurfaceView$GLWrapper;

        $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLWrapper mGLWrapper> = $r1;

        return;
    }

    public void setRenderMode(int)
    {
        android.opengl.GLSurfaceView $r0;
        int $i0;
        android.opengl.GLSurfaceView$GLThread $r1;

        $r0 := @this: android.opengl.GLSurfaceView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void setRenderMode(int)>($i0);

        return;
    }

    public void setRenderer(android.opengl.GLSurfaceView$Renderer)
    {
        android.opengl.GLSurfaceView $r0;
        android.opengl.GLSurfaceView$Renderer $r1;
        android.opengl.GLSurfaceView$GLThread $r2;
        java.lang.IllegalStateException $r3;
        android.opengl.GLSurfaceView$EGLConfigChooser $r4;
        android.opengl.GLSurfaceView$SimpleEGLConfigChooser $r5;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.opengl.GLSurfaceView$Renderer;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setRenderer has already been called for this instance.");

        throw $r3;

     label1:
        $r4 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser>;

        if $r4 != null goto label2;

        $r5 = new android.opengl.GLSurfaceView$SimpleEGLConfigChooser;

        specialinvoke $r5.<android.opengl.GLSurfaceView$SimpleEGLConfigChooser: void <init>(boolean)>(1);

        $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser> = $r5;

     label2:
        $r2 = new android.opengl.GLSurfaceView$GLThread;

        specialinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void <init>(android.opengl.GLSurfaceView,android.opengl.GLSurfaceView$Renderer)>($r0, $r1);

        $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread> = $r2;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.opengl.GLSurfaceView $r0;
        android.view.SurfaceHolder $r1;
        int $i0, $i1, $i2;
        android.opengl.GLSurfaceView$GLThread $r2;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void onWindowResize(int,int)>($i1, $i2);

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.opengl.GLSurfaceView $r0;
        android.view.SurfaceHolder $r1;
        android.opengl.GLSurfaceView$GLThread $r2;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void surfaceCreated()>();

        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.opengl.GLSurfaceView $r0;
        android.view.SurfaceHolder $r1;
        android.opengl.GLSurfaceView$GLThread $r2;

        $r0 := @this: android.opengl.GLSurfaceView;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = $r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void surfaceDestroyed()>();

        return;
    }
}
