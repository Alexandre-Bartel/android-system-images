public abstract class android.text.IClipboard$Stub extends android.os.Binder implements android.text.IClipboard
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getClipboardText;
    static final int TRANSACTION_hasClipboardText;
    static final int TRANSACTION_setClipboardText;

    public void <init>()
    {
        android.text.IClipboard$Stub $r0;

        $r0 := @this: android.text.IClipboard$Stub;

        specialinvoke $r0.<android.os.Binder: void <init>()>();

        virtualinvoke $r0.<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>($r0, "android.text.IClipboard");

        return;
    }

    public static android.text.IClipboard asInterface(android.os.IBinder)
    {
        android.os.IBinder $r0;
        android.os.IInterface $r1;
        android.text.IClipboard$Stub$Proxy $r2;
        boolean $z0;
        android.text.IClipboard $r3;

        $r0 := @parameter0: android.os.IBinder;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.text.IClipboard");

        if $r1 == null goto label2;

        $z0 = $r1 instanceof android.text.IClipboard;

        if $z0 == 0 goto label2;

        $r3 = (android.text.IClipboard) $r1;

        return $r3;

     label2:
        $r2 = new android.text.IClipboard$Stub$Proxy;

        specialinvoke $r2.<android.text.IClipboard$Stub$Proxy: void <init>(android.os.IBinder)>($r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.text.IClipboard$Stub $r0;

        $r0 := @this: android.text.IClipboard$Stub;

        return $r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.text.IClipboard$Stub $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        boolean $z0;
        java.lang.CharSequence $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        byte $b2;

        $r0 := @this: android.text.IClipboard$Stub;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label09;
            case 1598968902: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke $r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i1);

        return $z0;

     label02:
        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>("android.text.IClipboard");

        return 1;

     label03:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.text.IClipboard");

        $r3 = virtualinvoke $r0.<android.text.IClipboard$Stub: java.lang.CharSequence getClipboardText()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        if $r3 == null goto label05;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r3, $r2, 1);

     label04:
        return 1;

     label05:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label04;

     label06:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.text.IClipboard");

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label08;

        $r4 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r1);

        $r3 = (java.lang.CharSequence) $r5;

     label07:
        virtualinvoke $r0.<android.text.IClipboard$Stub: void setClipboardText(java.lang.CharSequence)>($r3);

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        $r3 = null;

        goto label07;

     label09:
        virtualinvoke $r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.text.IClipboard");

        $z0 = virtualinvoke $r0.<android.text.IClipboard$Stub: boolean hasClipboardText()>();

        virtualinvoke $r2.<android.os.Parcel: void writeNoException()>();

        if $z0 == 0 goto label11;

        $b2 = 1;

     label10:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($b2);

        return 1;

     label11:
        $b2 = 0;

        goto label10;
    }

    public static void <clinit>()
    {
        <android.text.IClipboard$Stub: int TRANSACTION_setClipboardText> = 2;

        <android.text.IClipboard$Stub: int TRANSACTION_hasClipboardText> = 3;

        <android.text.IClipboard$Stub: int TRANSACTION_getClipboardText> = 1;

        <android.text.IClipboard$Stub: java.lang.String DESCRIPTOR> = "android.text.IClipboard";

        return;
    }
}
