abstract class org.apache.harmony.xml.ExpatPullParser$Document extends java.lang.Object
{
    org.apache.harmony.xml.ExpatPullParser$Event currentEvent;
    final java.lang.String encoding;
    boolean finished;
    org.apache.harmony.xml.ExpatPullParser$Event last;
    org.apache.harmony.xml.ExpatPullParser$NamespaceStack$Builder namespaceStackBuilder;
    final org.apache.harmony.xml.ExpatParser parser;
    final boolean processNamespaces;
    org.apache.harmony.xml.ExpatPullParser$TextEvent textEvent;
    final org.apache.harmony.xml.ExpatPullParser this$0;

    void <init>(org.apache.harmony.xml.ExpatPullParser, java.lang.String, boolean)
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        org.apache.harmony.xml.ExpatPullParser $r1;
        java.lang.String $r2;
        boolean $z0;
        org.apache.harmony.xml.ExpatReader $r3;
        org.apache.harmony.xml.ExpatPullParser$NamespaceStack$Builder $r4;
        org.apache.harmony.xml.ExpatPullParser$StartDocumentEvent $r5;
        org.apache.harmony.xml.ExpatPullParser$Event $r6;
        org.apache.harmony.xml.ExpatPullParser$Document$SaxHandler $r7;
        org.apache.harmony.xml.ExpatParser $r8;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

        $r1 := @parameter0: org.apache.harmony.xml.ExpatPullParser;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$TextEvent textEvent> = null;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: boolean finished> = 0;

        $r4 = new org.apache.harmony.xml.ExpatPullParser$NamespaceStack$Builder;

        specialinvoke $r4.<org.apache.harmony.xml.ExpatPullParser$NamespaceStack$Builder: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$NamespaceStack$Builder namespaceStackBuilder> = $r4;

        $r5 = new org.apache.harmony.xml.ExpatPullParser$StartDocumentEvent;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatPullParser$StartDocumentEvent: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent> = $r5;

        $r6 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event last> = $r6;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: java.lang.String encoding> = $r2;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: boolean processNamespaces> = $z0;

        $r3 = new org.apache.harmony.xml.ExpatReader;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        $r7 = new org.apache.harmony.xml.ExpatPullParser$Document$SaxHandler;

        specialinvoke $r7.<org.apache.harmony.xml.ExpatPullParser$Document$SaxHandler: void <init>(org.apache.harmony.xml.ExpatPullParser$Document,org.apache.harmony.xml.ExpatPullParser$1)>($r0, null);

        virtualinvoke $r3.<org.apache.harmony.xml.ExpatReader: void setContentHandler(org.xml.sax.ContentHandler)>($r7);

        $r8 = new org.apache.harmony.xml.ExpatParser;

        specialinvoke $r8.<org.apache.harmony.xml.ExpatParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,boolean,java.lang.String,java.lang.String)>($r2, $r3, $z0, null, null);

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatParser parser> = $r8;

        return;
    }

    void add(org.apache.harmony.xml.ExpatPullParser$Event)
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        org.apache.harmony.xml.ExpatPullParser$Event $r1, $r3;
        org.apache.harmony.xml.ExpatPullParser$TextEvent $r2;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

        $r1 := @parameter0: org.apache.harmony.xml.ExpatPullParser$Event;

        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$TextEvent textEvent>;

        if $r2 == null goto label1;

        $r3 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event last>;

        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$TextEvent textEvent>;

        virtualinvoke $r3.<org.apache.harmony.xml.ExpatPullParser$Event: void setNext(org.apache.harmony.xml.ExpatPullParser$Event)>($r2);

        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$TextEvent textEvent>;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event last> = $r2;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$TextEvent textEvent> = null;

     label1:
        $r3 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event last>;

        virtualinvoke $r3.<org.apache.harmony.xml.ExpatPullParser$Event: void setNext(org.apache.harmony.xml.ExpatPullParser$Event)>($r1);

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event last> = $r1;

        return;
    }

    abstract int buffer() throws java.io.IOException;

    int dequeue() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        org.apache.harmony.xml.ExpatPullParser$Event $r1, $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

     label1:
        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

        $r1 = virtualinvoke $r1.<org.apache.harmony.xml.ExpatPullParser$Event: org.apache.harmony.xml.ExpatPullParser$Event getNext()>();

        if $r1 != null goto label2;

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$Document: void pump()>();

        goto label1;

     label2:
        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

        $r2.<org.apache.harmony.xml.ExpatPullParser$Event: org.apache.harmony.xml.ExpatPullParser$Event next> = null;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent> = $r1;

        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.xml.ExpatPullParser$Event: int getType()>();

        return $i0;
    }

    abstract void flush(org.apache.harmony.xml.ExpatParser, int) throws org.xmlpull.v1.XmlPullParserException;

    int getDepth()
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        int $i0;
        org.apache.harmony.xml.ExpatPullParser$Event $r1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.xml.ExpatPullParser$Event: int getDepth()>();

        return $i0;
    }

    java.lang.String getEncoding()
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

        r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: java.lang.String encoding>;

        return r1;
    }

    boolean isCurrentElementEmpty() throws org.xmlpull.v1.XmlPullParserException
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        org.apache.harmony.xml.ExpatPullParser$Event $r1;
        int $i0;
        org.xmlpull.v1.XmlPullParserException $r2;
        java.io.IOException $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.xml.ExpatPullParser$Event: int getType()>();

        if $i0 == 2 goto label1;

        $r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("This is not a start tag.");

        throw $r2;

     label1:
        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser$Event currentEvent>;

     label2:
        $r1 = virtualinvoke $r1.<org.apache.harmony.xml.ExpatPullParser$Event: org.apache.harmony.xml.ExpatPullParser$Event getNext()>();

        if $r1 != null goto label5;

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$Document: void pump()>();

     label3:
        goto label1;

     label4:
        $r3 := @caughtexception;

        $r2 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label5:
        $i0 = virtualinvoke $r1.<org.apache.harmony.xml.ExpatPullParser$Event: int getType()>();

        if $i0 != 3 goto label6;

        return 1;

     label6:
        return 0;

        catch java.io.IOException from label2 to label3 with label4;
    }

    void pump() throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.apache.harmony.xml.ExpatPullParser$Document $r0;
        org.apache.harmony.xml.ExpatPullParser $r1;
        boolean $z0;
        int $i0;
        org.apache.harmony.xml.ExpatParser $r2;
        org.apache.harmony.xml.ExpatPullParser$EndDocumentEvent $r3;
        org.xml.sax.SAXException $r4;
        org.xmlpull.v1.XmlPullParserException $r5;

        $r0 := @this: org.apache.harmony.xml.ExpatPullParser$Document;

        $z0 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: boolean finished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$Document: int buffer()>();

        if $i0 != -1 goto label5;

        $r0.<org.apache.harmony.xml.ExpatPullParser$Document: boolean finished> = 1;

        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser this$0>;

        $z0 = staticinvoke <org.apache.harmony.xml.ExpatPullParser: boolean access$400(org.apache.harmony.xml.ExpatPullParser)>($r1);

        if $z0 != 0 goto label3;

        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatParser parser>;

     label2:
        virtualinvoke $r2.<org.apache.harmony.xml.ExpatParser: void finish()>();

     label3:
        $r3 = new org.apache.harmony.xml.ExpatPullParser$EndDocumentEvent;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatPullParser$EndDocumentEvent: void <init>()>();

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$Document: void add(org.apache.harmony.xml.ExpatPullParser$Event)>($r3);

        return;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r1 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatPullParser this$0>;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("Premature end of document.", $r1, $r4);

        throw $r5;

     label5:
        if $i0 == 0 goto label6;

        $r2 = $r0.<org.apache.harmony.xml.ExpatPullParser$Document: org.apache.harmony.xml.ExpatParser parser>;

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatPullParser$Document: void flush(org.apache.harmony.xml.ExpatParser,int)>($r2, $i0);

        return;

     label6:
        return;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
    }
}
