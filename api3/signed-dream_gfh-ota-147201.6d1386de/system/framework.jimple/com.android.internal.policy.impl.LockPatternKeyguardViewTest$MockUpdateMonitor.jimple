class com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor extends com.android.internal.policy.impl.KeyguardUpdateMonitor
{
    public boolean inPortrait;
    public boolean keyboardOpen;
    public com.android.internal.telephony.SimCard$State simState;

    private void <init>(android.content.Context)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        android.content.Context $r1;
        com.android.internal.telephony.SimCard$State $r2;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<com.android.internal.policy.impl.KeyguardUpdateMonitor: void <init>(android.content.Context)>($r1);

        $r2 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State READY>;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: com.android.internal.telephony.SimCard$State simState> = $r2;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: boolean inPortrait> = 0;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: boolean keyboardOpen> = 0;

        return;
    }

    void <init>(android.content.Context, com.android.internal.policy.impl.LockPatternKeyguardViewTest$1)
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        android.content.Context $r1;
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$1 $r2;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.android.internal.policy.impl.LockPatternKeyguardViewTest$1;

        specialinvoke $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: void <init>(android.content.Context)>($r1);

        return;
    }

    public com.android.internal.telephony.SimCard$State getSimState()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        com.android.internal.telephony.SimCard$State r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: com.android.internal.telephony.SimCard$State simState>;

        return r1;
    }

    public boolean isInPortrait()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        boolean z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        z0 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: boolean inPortrait>;

        return z0;
    }

    public boolean isKeyboardOpen()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        boolean z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        z0 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: boolean keyboardOpen>;

        return z0;
    }

    boolean queryInPortrait()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        boolean z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        z0 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: boolean inPortrait>;

        return z0;
    }

    boolean queryKeyboardOpen()
    {
        com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor $r0;
        boolean z0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor;

        z0 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardViewTest$MockUpdateMonitor: boolean keyboardOpen>;

        return z0;
    }
}
