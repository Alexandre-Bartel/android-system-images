class android.location.IGpsStatusListener$Stub$Proxy extends java.lang.Object implements android.location.IGpsStatusListener
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        r1 = $r0.<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        return "android.location.IGpsStatusListener";
    }

    public void onFirstFix(int) throws android.os.RemoteException
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsStatusListener");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r2 = $r0.<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onGpsStarted() throws android.os.RemoteException
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsStatusListener");

        $r2 = $r0.<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onGpsStopped() throws android.os.RemoteException
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsStatusListener");

        $r2 = $r0.<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onSvStatusChanged(int, int[], float[], float[], float[], int, int, int) throws android.os.RemoteException
    {
        android.location.IGpsStatusListener$Stub$Proxy $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        float[] $r2, $r3, $r4;
        android.os.Parcel $r5;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.location.IGpsStatusListener$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: float[];

        $r3 := @parameter3: float[];

        $r4 := @parameter4: float[];

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $i3 := @parameter7: int;

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsStatusListener");

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r5.<android.os.Parcel: void writeIntArray(int[])>($r1);

        virtualinvoke $r5.<android.os.Parcel: void writeFloatArray(float[])>($r2);

        virtualinvoke $r5.<android.os.Parcel: void writeFloatArray(float[])>($r3);

        virtualinvoke $r5.<android.os.Parcel: void writeFloatArray(float[])>($r4);

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>($i3);

        $r6 = $r0.<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r5, null, 1);

     label2:
        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
