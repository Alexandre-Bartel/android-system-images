public abstract class org.apache.harmony.awt.gl.font.Glyph extends java.lang.Object
{
    byte[] bitmap;
    public int bmp_left;
    public int bmp_pitch;
    public int bmp_rows;
    public int bmp_top;
    public int bmp_width;
    int fontSize;
    char glChar;
    int glCode;
    java.awt.font.GlyphJustificationInfo glJustInfo;
    java.awt.font.GlyphMetrics glMetrics;
    java.awt.Shape glOutline;
    java.awt.font.GlyphMetrics glPointMetrics;
    java.awt.image.BufferedImage image;
    long pFont;

    public void <init>()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.Glyph: byte[] bitmap> = null;

        $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape glOutline> = null;

        $r0.<org.apache.harmony.awt.gl.font.Glyph: int bmp_top> = 0;

        $r0.<org.apache.harmony.awt.gl.font.Glyph: int bmp_left> = 0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.awt.gl.font.Glyph $r0, $r2;
        java.lang.Object $r1;
        char $c0, $c1;
        java.awt.font.GlyphMetrics $r3, $r4;
        boolean $z0;
        int $i2, $i3;
        java.lang.ClassCastException $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label6;

     label2:
        $r2 = (org.apache.harmony.awt.gl.font.Glyph) $r1;

        $c0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.Glyph: char getChar()>();

        $c1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.Glyph: char getChar()>();

        if $c0 != $c1 goto label4;

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphMetrics()>();

        $r4 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphMetrics()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.Glyph: int getGlyphCode()>();

        $i3 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.Glyph: int getGlyphCode()>();

     label3:
        if $i2 != $i3 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

     label6:
        return 0;

        catch java.lang.ClassCastException from label2 to label3 with label5;
    }

    public int[] getABC()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        int[] $r1;
        java.awt.font.GlyphMetrics $r2;
        float $f0;
        int $i0;
        java.awt.geom.Rectangle2D $r3;
        double $d0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 = newarray (int)[3];

        $r2 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glMetrics>;

        $f0 = virtualinvoke $r2.<java.awt.font.GlyphMetrics: float getLSB()>();

        $i0 = (int) $f0;

        $r1[0] = $i0;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glMetrics>;

        $r3 = virtualinvoke $r2.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getWidth()>();

        $i0 = (int) $d0;

        $r1[1] = $i0;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glMetrics>;

        $f0 = virtualinvoke $r2.<java.awt.font.GlyphMetrics: float getRSB()>();

        $i0 = (int) $f0;

        $r1[2] = $i0;

        return $r1;
    }

    public abstract byte[] getBitmap();

    public char getChar()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        char c0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        c0 = $r0.<org.apache.harmony.awt.gl.font.Glyph: char glChar>;

        return c0;
    }

    public int getGlyphCode()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        i0 = $r0.<org.apache.harmony.awt.gl.font.Glyph: int glCode>;

        return i0;
    }

    public java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphJustificationInfo r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphJustificationInfo glJustInfo>;

        return r1;
    }

    public java.awt.font.GlyphMetrics getGlyphMetrics()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphMetrics r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glMetrics>;

        return r1;
    }

    public java.awt.font.GlyphMetrics getGlyphPointMetrics()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphMetrics r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glPointMetrics>;

        return r1;
    }

    public int getHeight()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphMetrics $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0;
        float $f0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glMetrics>;

        $r2 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getHeight()>();

        $f0 = (float) $d0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    public java.awt.image.BufferedImage getImage()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        return null;
    }

    public long getPFont()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        long l0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        l0 = $r0.<org.apache.harmony.awt.gl.font.Glyph: long pFont>;

        return l0;
    }

    public int getPointHeight()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphMetrics $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glPointMetrics>;

        $r2 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getHeight()>();

        $i0 = (int) $d0;

        return $i0;
    }

    public int getPointWidth()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphMetrics $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glPointMetrics>;

        $r2 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getWidth()>();

        $i0 = (int) $d0;

        return $i0;
    }

    public java.awt.Shape getShape()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.Shape $r1;
        char $c0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape glOutline>;

        if $r1 != null goto label1;

        $c0 = $r0.<org.apache.harmony.awt.gl.font.Glyph: char glChar>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape initOutline(char)>($c0);

        $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape glOutline> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape glOutline>;

        return $r1;
    }

    public int getWidth()
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphMetrics $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0;
        float $f0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics glMetrics>;

        $r2 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getWidth()>();

        $f0 = (float) $d0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    public abstract java.awt.Shape initOutline(char);

    public void setGlyphJustificationInfo(java.awt.font.GlyphJustificationInfo)
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.font.GlyphJustificationInfo $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 := @parameter0: java.awt.font.GlyphJustificationInfo;

        $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphJustificationInfo glJustInfo> = $r1;

        return;
    }

    public void setImage(java.awt.image.BufferedImage)
    {
        org.apache.harmony.awt.gl.font.Glyph $r0;
        java.awt.image.BufferedImage $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.Glyph;

        $r1 := @parameter0: java.awt.image.BufferedImage;

        $r0.<org.apache.harmony.awt.gl.font.Glyph: java.awt.image.BufferedImage image> = $r1;

        return;
    }
}
