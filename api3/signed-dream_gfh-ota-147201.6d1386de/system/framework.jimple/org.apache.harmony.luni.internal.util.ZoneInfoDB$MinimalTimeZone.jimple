class org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone extends java.util.TimeZone
{
    private int rawOffset;

    public void <init>(int)
    {
        org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.util.TimeZone: void <init>()>();

        $r0.<org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone: int rawOffset> = $i0;

        $r1 = virtualinvoke $r0.<java.util.TimeZone: java.lang.String getDisplayName()>();

        virtualinvoke $r0.<java.util.TimeZone: void setID(java.lang.String)>($r1);

        return;
    }

    public int getOffset(int, int, int, int, int, int)
    {
        org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @this: org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone: int getRawOffset()>();

        return $i0;
    }

    public int getRawOffset()
    {
        org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone $r0;
        int i0;

        $r0 := @this: org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone;

        i0 = $r0.<org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone: int rawOffset>;

        return i0;
    }

    public boolean inDaylightTime(java.util.Date)
    {
        org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone $r0;
        java.util.Date $r1;

        $r0 := @this: org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone;

        $r1 := @parameter0: java.util.Date;

        return 0;
    }

    public void setRawOffset(int)
    {
        org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone;

        $i0 := @parameter0: int;

        $r0.<org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone: int rawOffset> = $i0;

        return;
    }

    public boolean useDaylightTime()
    {
        org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone $r0;

        $r0 := @this: org.apache.harmony.luni.internal.util.ZoneInfoDB$MinimalTimeZone;

        return 0;
    }
}
