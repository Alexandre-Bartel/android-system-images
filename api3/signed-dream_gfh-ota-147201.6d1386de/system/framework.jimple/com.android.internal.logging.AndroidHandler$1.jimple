class com.android.internal.logging.AndroidHandler$1 extends java.util.logging.Formatter
{

    void <init>()
    {
        com.android.internal.logging.AndroidHandler$1 $r0;

        $r0 := @this: com.android.internal.logging.AndroidHandler$1;

        specialinvoke $r0.<java.util.logging.Formatter: void <init>()>();

        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        com.android.internal.logging.AndroidHandler$1 $r0;
        java.util.logging.LogRecord $r1;
        java.io.PrintWriter $r2;
        java.io.StringWriter $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        $r0 := @this: com.android.internal.logging.AndroidHandler$1;

        $r1 := @parameter0: java.util.logging.LogRecord;

        $r4 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        if $r4 == null goto label1;

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        $r5 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.io.StringWriter: void write(java.lang.String)>($r5);

        virtualinvoke $r3.<java.io.StringWriter: void write(java.lang.String)>("\n");

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r2);

        virtualinvoke $r2.<java.io.PrintWriter: void flush()>();

        $r5 = virtualinvoke $r3.<java.io.StringWriter: java.lang.String toString()>();

        return $r5;

     label1:
        $r5 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        return $r5;
    }
}
