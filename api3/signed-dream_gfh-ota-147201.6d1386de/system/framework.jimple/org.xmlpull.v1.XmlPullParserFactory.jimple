public class org.xmlpull.v1.XmlPullParserFactory extends java.lang.Object
{
    public static final java.lang.String PROPERTY_NAME;
    private static final java.lang.String RESOURCE_NAME;
    static final java.lang.Class referenceContextClass;
    protected java.lang.String classNamesLocation;
    protected java.util.HashMap features;
    protected java.util.ArrayList parserClasses;
    protected java.util.ArrayList serializerClasses;

    static void <clinit>()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.lang.Class $r1;

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String RESOURCE_NAME> = "/META-INF/services/org.xmlpull.v1.XmlPullParserFactory";

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String PROPERTY_NAME> = "org.xmlpull.v1.XmlPullParserFactory";

        $r0 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass> = $r1;

        return;
    }

    protected void <init>()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.util.HashMap $r1;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features> = $r1;

        return;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        $r0 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>(null, null);

        return $r0;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String, java.lang.Class) throws org.xmlpull.v1.XmlPullParserException
    {
        java.util.ArrayList $r0, $r1;
        java.lang.String $r2, $r5;
        java.lang.Class $r3, $r7;
        org.xmlpull.v1.XmlPullParserFactory $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r6;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParserException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Exception $r10;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.Class;

        if $r3 != null goto label01;

        $r3 = <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass>;

     label01:
        $r2 = "org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer";

        $r4 = null;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label02:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label11;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(44, $i0);

        $i2 = $i1;

        if $i1 != -1 goto label03;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

     label03:
        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r3 = null;

        $r6 = null;

     label04:
        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

        $r3 = $r7;

        $r6 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

     label05:
        if $r3 == null goto label10;

        $z0 = 0;

        $z1 = $r6 instanceof org.xmlpull.v1.XmlPullParser;

        if $z1 == 0 goto label06;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label06:
        $z1 = $r6 instanceof org.xmlpull.v1.XmlSerializer;

        if $z1 == 0 goto label07;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label07:
        $z1 = $r6 instanceof org.xmlpull.v1.XmlPullParserFactory;

        if $z1 == 0 goto label09;

        if $r4 != null goto label08;

        $r4 = (org.xmlpull.v1.XmlPullParserFactory) $r6;

     label08:
        $z0 = 1;

     label09:
        if $z0 != 0 goto label10;

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incompatible class: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label10:
        $i0 = $i2 + 1;

        goto label02;

     label11:
        if $r4 != null goto label12;

        $r4 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

     label12:
        $r4.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses> = $r0;

        $r4.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses> = $r1;

        $r4.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation> = "org.kxml2.io.kXmlParser,org.kxml2.io.KXmlSerializer";

        return $r4;

     label13:
        $r10 := @caughtexception;

        goto label05;

        catch java.lang.Exception from label04 to label05 with label13;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.lang.StringBuffer $r1;
        java.util.ArrayList $r2;
        org.xmlpull.v1.XmlPullParserException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.Class $r7;
        org.xmlpull.v1.XmlPullParser $r8;
        java.util.HashMap $r9;
        java.util.Set $r10;
        java.util.Iterator $r11;
        boolean $z0;
        java.lang.Boolean $r12;
        java.lang.Exception $r13;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        if $r2 != null goto label1;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization was incomplete - has not tried ");

        $r5 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid parser classes found in ");

        $r5 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label3:
        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label8;

        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (java.lang.Class) $r6;

     label4:
        $r6 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (org.xmlpull.v1.XmlPullParser) $r6;

        $r9 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set keySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r6;

        $r9 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r6 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r12 = (java.lang.Boolean) $r6;

        if $r12 == null goto label5;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

        interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>($r5, 1);

     label6:
        goto label5;

     label7:
        $r13 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label3;

     label8:
        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create parser: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label9:
        return $r8;

        catch java.lang.Exception from label4 to label6 with label7;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.lang.StringBuffer $r1;
        java.util.ArrayList $r2;
        org.xmlpull.v1.XmlPullParserException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.Class $r7;
        org.xmlpull.v1.XmlSerializer $r8;
        java.lang.Exception $r9;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        if $r2 != null goto label1;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization incomplete - has not tried ");

        $r5 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid serializer classes found in ");

        $r5 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label3:
        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label7;

        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (java.lang.Class) $r6;

     label4:
        $r6 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (org.xmlpull.v1.XmlSerializer) $r6;

     label5:
        return $r8;

     label6:
        $r9 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label3;

     label7:
        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create serializer: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.HashMap $r2;
        java.lang.Boolean $r3;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r3 = new java.lang.Boolean;

        specialinvoke $r3.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        boolean $z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $r2);

        return;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        boolean $z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;

        $r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#validation", $r2);

        return;
    }
}
