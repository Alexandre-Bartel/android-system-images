public class android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse extends java.lang.Object
{
    private long contentLength;
    private java.lang.String encoding;
    private java.io.InputStream inputStream;
    private java.lang.String mimeType;
    private java.util.Map responseHeaders;
    private int statusCode;
    private java.lang.String statusLine;
    final android.webkit.gears.UrlInterceptHandlerGears this$0;

    public void <init>(android.webkit.gears.UrlInterceptHandlerGears)
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        android.webkit.gears.UrlInterceptHandlerGears $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        $r1 := @parameter0: android.webkit.gears.UrlInterceptHandlerGears;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: android.webkit.gears.UrlInterceptHandlerGears this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.util.Map responseHeaders> = $r2;

        return;
    }

    public long getContentLength()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        long l0;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        l0 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: long contentLength>;

        return l0;
    }

    public java.lang.String getContentType()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.lang.Object $r1;
        java.util.Map $r2;
        java.lang.String[] $r3;
        java.lang.String $r4;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        $r2 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.util.Map responseHeaders>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("content-type");

        $r3 = (java.lang.String[]) $r1;

        if $r3 == null goto label1;

        $r4 = $r3[1];

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getEncoding()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.lang.String r1;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        r1 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String encoding>;

        return r1;
    }

    public java.io.InputStream getInputStream()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.io.InputStream r1;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        r1 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.io.InputStream inputStream>;

        return r1;
    }

    public java.lang.String getMimeType()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.lang.String r1;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        r1 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String mimeType>;

        return r1;
    }

    public java.util.Map getResponseHeaders()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.util.Map r1;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        r1 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.util.Map responseHeaders>;

        return r1;
    }

    public int getStatusCode()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        int i0;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        i0 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: int statusCode>;

        return i0;
    }

    public java.lang.String getStatusLine()
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.lang.String r1;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        r1 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String statusLine>;

        return r1;
    }

    public void setResponseHeader(java.lang.String, java.lang.String)
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        java.util.Map $r4;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $r4 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.util.Map responseHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    void setResultArray(int, java.lang.String, java.lang.String, java.lang.String, byte[])
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        byte[] $r4;
        long $l1;
        java.io.ByteArrayInputStream $r5;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: byte[];

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: int statusCode> = $i0;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String statusLine> = $r1;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String mimeType> = $r2;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String encoding> = $r3;

        $i0 = lengthof $r4;

        $l1 = (long) $i0;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: long contentLength> = $l1;

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.io.InputStream inputStream> = $r5;

        return;
    }

    boolean setResultFile(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.io.File $r5;
        long $l1;
        java.io.FileInputStream $r6;
        java.io.FileNotFoundException $r7;
        android.webkit.gears.UrlInterceptHandlerGears $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: int statusCode> = $i0;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String statusLine> = $r1;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String mimeType> = $r2;

        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String encoding> = $r3;

        $r5 = new java.io.File;

     label1:
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r4);

        $l1 = virtualinvoke $r5.<java.io.File: long length()>();

     label2:
        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: long contentLength> = $l1;

     label3:
        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

     label4:
        $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.io.InputStream inputStream> = $r6;

        return 1;

     label5:
        $r7 := @caughtexception;

        $r8 = $r0.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: android.webkit.gears.UrlInterceptHandlerGears this$0>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.webkit.gears.UrlInterceptHandlerGears: void access$000(android.webkit.gears.UrlInterceptHandlerGears,java.lang.String)>($r8, $r1);

        return 0;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }
}
