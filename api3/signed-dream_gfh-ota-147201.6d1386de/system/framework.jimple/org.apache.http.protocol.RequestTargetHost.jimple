public class org.apache.http.protocol.RequestTargetHost extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{

    public void <init>()
    {
        org.apache.http.protocol.RequestTargetHost $r0;

        $r0 := @this: org.apache.http.protocol.RequestTargetHost;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.protocol.RequestTargetHost $r0;
        org.apache.http.HttpRequest $r1;
        org.apache.http.protocol.HttpContext $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.http.HttpHost $r5;
        org.apache.http.HttpConnection $r6;
        org.apache.http.HttpInetConnection $r7;
        java.net.InetAddress $r8;
        int $i0;
        java.lang.String $r9;
        org.apache.http.RequestLine $r10;
        org.apache.http.ProtocolVersion $r11;
        org.apache.http.HttpVersion $r12;
        org.apache.http.ProtocolException $r13;

        $r0 := @this: org.apache.http.protocol.RequestTargetHost;

        $r1 := @parameter0: org.apache.http.HttpRequest;

        $r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r3;

     label2:
        $z0 = interfaceinvoke $r1.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Host");

        if $z0 != 0 goto label6;

        $r4 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        $r5 = (org.apache.http.HttpHost) $r4;

        if $r5 != null goto label5;

        $r4 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.connection");

        $r6 = (org.apache.http.HttpConnection) $r4;

        $z0 = $r6 instanceof org.apache.http.HttpInetConnection;

        if $z0 == 0 goto label3;

        $r7 = (org.apache.http.HttpInetConnection) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpInetConnection: java.net.InetAddress getRemoteAddress()>();

        $r7 = (org.apache.http.HttpInetConnection) $r6;

        $i0 = interfaceinvoke $r7.<org.apache.http.HttpInetConnection: int getRemotePort()>();

        if $r8 == null goto label3;

        $r5 = new org.apache.http.HttpHost;

        $r9 = virtualinvoke $r8.<java.net.InetAddress: java.lang.String getHostName()>();

        specialinvoke $r5.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>($r9, $i0);

     label3:
        if $r5 != null goto label5;

        $r10 = interfaceinvoke $r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r11 = interfaceinvoke $r10.<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r12 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z0 = virtualinvoke $r11.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r12);

        if $z0 == 0 goto label4;

        return;

     label4:
        $r13 = new org.apache.http.ProtocolException;

        specialinvoke $r13.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Target host missing");

        throw $r13;

     label5:
        $r9 = virtualinvoke $r5.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        interfaceinvoke $r1.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Host", $r9);

        return;

     label6:
        return;
    }
}
