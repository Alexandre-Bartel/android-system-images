class com.android.server.am.ActivityManagerService$2 extends android.os.Handler
{
    final com.android.server.am.ActivityManagerService this$0;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService$2 $r0;
        com.android.server.am.ActivityManagerService $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService$2;

        $r1 := @parameter0: com.android.server.am.ActivityManagerService;

        $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0> = $r1;

        specialinvoke $r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.am.ActivityManagerService$2 $r0;
        android.os.Message $r1;
        int $i0;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        byte[] $r4;
        com.android.server.am.ActivityManagerService $r5, $r14, $r20;
        android.content.Context $r6;
        android.content.ContentResolver $r7;
        com.android.server.am.ProcessRecord $r8;
        android.app.Dialog $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11, $r17;
        java.lang.Throwable $r12, $r18, $r27, $r29, $r35, $r41, $r45, $r46;
        com.android.server.am.AppErrorResult $r13;
        boolean $z0;
        com.android.server.am.AppErrorDialog $r15;
        java.lang.Integer $r16;
        android.content.Intent $r19;
        com.android.server.am.AppNotRespondingDialog $r21;
        com.android.server.am.HistoryRecord $r22;
        com.android.server.am.FactoryErrorDialog $r23;
        android.os.Bundle $r24;
        java.lang.CharSequence $r25;
        android.content.res.Configuration $r26;
        com.android.server.am.AppWaitingForDebuggerDialog $r28;
        android.os.IBinder $r30;
        java.util.ArrayList $r31;
        android.app.IApplicationThread $r32;
        android.os.RemoteException $r33;
        android.content.pm.ApplicationInfo $r34;
        com.android.server.am.BaseErrorDialog $r36;
        android.view.Window $r37;
        android.os.Handler $r38;
        android.app.AlertDialog $r39;
        android.os.PowerManager$WakeLock $r40;
        com.android.server.am.ServiceRecord $r42;
        android.provider.Checkin$Events$Tag $r43;
        android.content.ComponentName $r44;

        $r0 := @this: com.android.server.am.ActivityManagerService$2;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label13;
            case 3: goto label20;
            case 4: goto label21;
            case 5: goto label22;
            case 6: goto label27;
            case 7: goto label35;
            case 8: goto label36;
            case 9: goto label37;
            case 10: goto label38;
            case 11: goto label40;
            case 12: goto label41;
            case 13: goto label42;
            case 14: goto label55;
            case 15: goto label56;
            case 16: goto label57;
            case 17: goto label39;
            case 18: goto label63;
            case 19: goto label64;
            case 20: goto label66;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (java.util.HashMap) $r2;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("crashData");

        $r4 = (byte[]) $r2;

        $r4 = (byte[]) $r4;

        if $r4 == null goto label03;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Checkin: android.net.Uri reportCrash(android.content.ContentResolver,byte[])>($r7, $r4);

     label03:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label04:
        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("app");

        $r8 = (com.android.server.am.ProcessRecord) $r2;

        if $r8 == null goto label08;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        if $r9 == null goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App already has crash dialog: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        exitmonitor $r5;

     label05:
        return;

     label06:
        $r12 := @caughtexception;

        exitmonitor $r5;

     label07:
        throw $r12;

     label08:
        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("result");

        $r13 = (com.android.server.am.AppErrorResult) $r2;

        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $z0 = $r14.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 != 0 goto label11;

        $r15 = new com.android.server.am.AppErrorDialog;

        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r14.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("flags");

        $r16 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("shortMsg");

        $r11 = (java.lang.String) $r2;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("longMsg");

        $r17 = (java.lang.String) $r2;

        specialinvoke $r15.<com.android.server.am.AppErrorDialog: void <init>(android.content.Context,com.android.server.am.AppErrorResult,com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String)>($r6, $r13, $r8, $i0, $r11, $r17);

        virtualinvoke $r15.<android.app.Dialog: void show()>();

        $r8.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog> = $r15;

     label09:
        exitmonitor $r5;

     label10:
        return;

     label11:
        virtualinvoke $r13.<com.android.server.am.AppErrorResult: void set(int)>(0);

     label12:
        goto label09;

     label13:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label14:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (java.util.HashMap) $r2;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("app");

        $r8 = (com.android.server.am.ProcessRecord) $r2;

        if $r8 == null goto label18;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r9 == null goto label18;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App already has anr dialog: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        exitmonitor $r5;

     label15:
        return;

     label16:
        $r18 := @caughtexception;

        exitmonitor $r5;

     label17:
        throw $r18;

     label18:
        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ANR");

        $r20 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $i0 = $r20.<com.android.server.am.ActivityManagerService: int MY_PID>;

        staticinvoke <com.android.server.am.ActivityManagerService: int access$100(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>($r14, null, null, $r19, null, null, 0, null, null, null, 0, 0, $i0, 1000);

        $r21 = new com.android.server.am.AppNotRespondingDialog;

        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r20 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r20.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("activity");

        $r22 = (com.android.server.am.HistoryRecord) $r2;

        specialinvoke $r21.<com.android.server.am.AppNotRespondingDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord)>($r14, $r6, $r8, $r22);

        virtualinvoke $r21.<android.app.Dialog: void show()>();

        $r8.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = $r21;

        exitmonitor $r5;

     label19:
        return;

     label20:
        $r23 = new com.android.server.am.FactoryErrorDialog;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r24 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $r25 = virtualinvoke $r24.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("msg");

        specialinvoke $r23.<com.android.server.am.FactoryErrorDialog: void <init>(android.content.Context,java.lang.CharSequence)>($r6, $r25);

        virtualinvoke $r23.<android.app.Dialog: void show()>();

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>();

        return;

     label21:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r26 = (android.content.res.Configuration) $r2;

        staticinvoke <android.provider.Settings$System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>($r7, $r26);

        return;

     label22:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label23:
        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void performAppGcsIfAppropriateLocked()>();

        exitmonitor $r5;

     label24:
        return;

     label25:
        $r27 := @caughtexception;

        exitmonitor $r5;

     label26:
        throw $r27;

     label27:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label28:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r8 = (com.android.server.am.ProcessRecord) $r2;

        $i0 = $r1.<android.os.Message: int arg1>;

        if $i0 == 0 goto label33;

        $z0 = $r8.<com.android.server.am.ProcessRecord: boolean waitedForDebugger>;

        if $z0 != 0 goto label29;

        $r28 = new com.android.server.am.AppWaitingForDebuggerDialog;

        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r20 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r20.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r28.<com.android.server.am.AppWaitingForDebuggerDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,com.android.server.am.ProcessRecord)>($r14, $r6, $r8);

        $r8.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = $r28;

        $r8.<com.android.server.am.ProcessRecord: boolean waitedForDebugger> = 1;

        virtualinvoke $r28.<android.app.Dialog: void show()>();

     label29:
        exitmonitor $r5;

     label30:
        return;

     label31:
        $r29 := @caughtexception;

        exitmonitor $r5;

     label32:
        throw $r29;

     label33:
        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r9 == null goto label29;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        virtualinvoke $r9.<android.app.Dialog: void dismiss()>();

        $r8.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label34:
        goto label29;

     label35:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$200(com.android.server.am.ActivityManagerService,boolean)>($r5, 1);

        return;

     label36:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$300(com.android.server.am.ActivityManagerService)>($r5);

        return;

     label37:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r30 = (android.os.IBinder) $r2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity pause timeout for ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder,android.os.Bundle,boolean)>($r30, null, 1);

        return;

     label38:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r30 = (android.os.IBinder) $r2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity idle timeout for ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void activityIdleInternal(android.os.IBinder,boolean)>($r30, 1);

        return;

     label39:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r30 = (android.os.IBinder) $r2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity destroy timeout for ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void activityDestroyed(android.os.IBinder)>($r30);

        return;

     label40:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r30 = (android.os.IBinder) $r2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void activityIdle(android.os.IBinder)>($r30);

        return;

     label41:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r8 = (com.android.server.am.ProcessRecord) $r2;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void serviceTimeout(com.android.server.am.ProcessRecord)>($r8);

        return;

     label42:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label43:
        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r31 = $r14.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label44:
        if $i0 < 0 goto label53;

        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r31 = $r14.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r2 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.ProcessRecord) $r2;

        $r32 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label45:
        if $r32 == null goto label48;

     label46:
        $r32 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label47:
        interfaceinvoke $r32.<android.app.IApplicationThread: void updateTimeZone()>();

     label48:
        $i0 = $i0 + -1;

        goto label44;

     label49:
        $r33 := @caughtexception;

     label50:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update time zone for: ");

        $r34 = $r8.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r34.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        goto label48;

     label51:
        $r35 := @caughtexception;

        exitmonitor $r5;

     label52:
        throw $r35;

     label53:
        exitmonitor $r5;

     label54:
        return;

     label55:
        $r36 = new com.android.server.am.BaseErrorDialog;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r36.<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>($r6);

        $r37 = virtualinvoke $r36.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r37.<android.view.Window: void setType(int)>(2010);

        virtualinvoke $r36.<android.app.Dialog: void setCancelable(boolean)>(0);

        virtualinvoke $r36.<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>("System UIDs Inconsistent");

        virtualinvoke $r36.<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>("UIDs on the system are inconsistent, you need to wipe your data partition or your device will be unstable.");

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r38 = $r5.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r38.<android.os.Handler: android.os.Message obtainMessage(int)>(15);

        virtualinvoke $r36.<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>("I\'m Feeling Lucky", $r1);

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r5.<com.android.server.am.ActivityManagerService: android.app.AlertDialog mUidAlert> = $r36;

        virtualinvoke $r36.<android.app.Dialog: void show()>();

        return;

     label56:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r39 = $r5.<com.android.server.am.ActivityManagerService: android.app.AlertDialog mUidAlert>;

        if $r39 == null goto label74;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r39 = $r5.<com.android.server.am.ActivityManagerService: android.app.AlertDialog mUidAlert>;

        virtualinvoke $r39.<android.app.Dialog: void dismiss()>();

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r5.<com.android.server.am.ActivityManagerService: android.app.AlertDialog mUidAlert> = null;

        return;

     label57:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label58:
        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r40 = $r14.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z0 = virtualinvoke $r40.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label59;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "Launch timeout has expired, giving up wake lock!");

        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r40 = $r14.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r40.<android.os.PowerManager$WakeLock: void release()>();

     label59:
        exitmonitor $r5;

     label60:
        return;

     label61:
        $r41 := @caughtexception;

        exitmonitor $r5;

     label62:
        throw $r41;

     label63:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r42 = (com.android.server.am.ServiceRecord) $r2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r43 = <android.provider.Checkin$Events$Tag: android.provider.Checkin$Events$Tag SYSTEM_SERVICE_LOOPING>;

        $r44 = $r42.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r11 = virtualinvoke $r44.<android.content.ComponentName: java.lang.String toShortString()>();

        staticinvoke <android.provider.Checkin: android.net.Uri logEvent(android.content.ContentResolver,android.provider.Checkin$Events$Tag,java.lang.String)>($r7, $r43, $r11);

        return;

     label64:
        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label65:
        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean access$400(com.android.server.am.ActivityManagerService,com.android.server.am.HistoryRecord)>($r14, null);

        exitmonitor $r5;

     label66:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;

        $r8 = (com.android.server.am.ProcessRecord) $r2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        entermonitor $r5;

     label67:
        $r14 = $r0.<com.android.server.am.ActivityManagerService$2: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$500(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>($r14, $r8);

        exitmonitor $r5;

     label68:
        return;

     label69:
        $r45 := @caughtexception;

        exitmonitor $r5;

     label70:
        throw $r45;

     label71:
        $r46 := @caughtexception;

     label72:
        exitmonitor $r5;

     label73:
        throw $r46;

     label74:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label08 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.Throwable from label28 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch java.lang.Throwable from label33 to label34 with label31;
        catch java.lang.Throwable from label43 to label45 with label51;
        catch android.os.RemoteException from label47 to label48 with label49;
        catch java.lang.Throwable from label46 to label48 with label51;
        catch java.lang.Throwable from label50 to label52 with label51;
        catch java.lang.Throwable from label53 to label54 with label51;
        catch java.lang.Throwable from label58 to label60 with label61;
        catch java.lang.Throwable from label61 to label62 with label61;
        catch java.lang.Throwable from label65 to label66 with label71;
        catch java.lang.Throwable from label67 to label68 with label69;
        catch java.lang.Throwable from label69 to label70 with label69;
        catch java.lang.Throwable from label72 to label73 with label71;
    }
}
