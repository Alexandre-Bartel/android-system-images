public interface  android.view.IWindowSession extends java.lang.Object implements android.os.IInterface
{

    public abstract int add(android.view.IWindow, android.view.WindowManager$LayoutParams, int, android.graphics.Rect) throws android.os.RemoteException;

    public abstract void finishDrawing(android.view.IWindow) throws android.os.RemoteException;

    public abstract void finishKey(android.view.IWindow) throws android.os.RemoteException;

    public abstract void getDisplayFrame(android.view.IWindow, android.graphics.Rect) throws android.os.RemoteException;

    public abstract boolean getInTouchMode() throws android.os.RemoteException;

    public abstract android.view.MotionEvent getPendingPointerMove(android.view.IWindow) throws android.os.RemoteException;

    public abstract android.view.MotionEvent getPendingTrackballMove(android.view.IWindow) throws android.os.RemoteException;

    public abstract boolean performHapticFeedback(android.view.IWindow, int, boolean) throws android.os.RemoteException;

    public abstract int relayout(android.view.IWindow, android.view.WindowManager$LayoutParams, int, int, int, boolean, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.view.Surface) throws android.os.RemoteException;

    public abstract void remove(android.view.IWindow) throws android.os.RemoteException;

    public abstract void setInTouchMode(boolean) throws android.os.RemoteException;

    public abstract void setInsets(android.view.IWindow, int, android.graphics.Rect, android.graphics.Rect) throws android.os.RemoteException;

    public abstract void setTransparentRegion(android.view.IWindow, android.graphics.Region) throws android.os.RemoteException;
}
