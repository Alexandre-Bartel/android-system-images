public class org.bouncycastle.crypto.agreement.DHBasicAgreement extends java.lang.Object implements org.bouncycastle.crypto.BasicAgreement
{
    private org.bouncycastle.crypto.params.DHParameters dhParams;
    private org.bouncycastle.crypto.params.DHPrivateKeyParameters key;
    private java.security.SecureRandom random;

    public void <init>()
    {
        org.bouncycastle.crypto.agreement.DHBasicAgreement $r0;

        $r0 := @this: org.bouncycastle.crypto.agreement.DHBasicAgreement;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.agreement.DHBasicAgreement $r0;
        org.bouncycastle.crypto.CipherParameters $r1;
        org.bouncycastle.crypto.params.DHPublicKeyParameters $r2;
        org.bouncycastle.crypto.params.DHParameters $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.math.BigInteger $r6, $r8, $r9;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r7;

        $r0 := @this: org.bouncycastle.crypto.agreement.DHBasicAgreement;

        $r1 := @parameter0: org.bouncycastle.crypto.CipherParameters;

        $r2 = (org.bouncycastle.crypto.params.DHPublicKeyParameters) $r1;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.DHKeyParameters: org.bouncycastle.crypto.params.DHParameters getParameters()>();

        $r4 = $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: org.bouncycastle.crypto.params.DHParameters dhParams>;

        $z0 = virtualinvoke $r3.<org.bouncycastle.crypto.params.DHParameters: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Diffie-Hellman public key has wrong parameters.");

        throw $r5;

     label1:
        $r6 = virtualinvoke $r2.<org.bouncycastle.crypto.params.DHPublicKeyParameters: java.math.BigInteger getY()>();

        $r7 = $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: org.bouncycastle.crypto.params.DHPrivateKeyParameters key>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: java.math.BigInteger getX()>();

        $r3 = $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: org.bouncycastle.crypto.params.DHParameters dhParams>;

        $r9 = virtualinvoke $r3.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r8, $r9);

        return $r6;
    }

    public void init(org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.agreement.DHBasicAgreement $r0;
        org.bouncycastle.crypto.CipherParameters $r1;
        boolean $z0;
        org.bouncycastle.crypto.params.ParametersWithRandom $r2;
        java.security.SecureRandom $r3;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter $r4;
        java.lang.IllegalArgumentException $r5;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r6;
        org.bouncycastle.crypto.params.DHParameters $r7;

        $r0 := @this: org.bouncycastle.crypto.agreement.DHBasicAgreement;

        $r1 := @parameter0: org.bouncycastle.crypto.CipherParameters;

        $z0 = $r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label2;

        $r2 = (org.bouncycastle.crypto.params.ParametersWithRandom) $r1;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: java.security.SecureRandom random> = $r3;

        $r1 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r4 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r1;

     label1:
        $z0 = $r4 instanceof org.bouncycastle.crypto.params.DHPrivateKeyParameters;

        if $z0 != 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DHEngine expects DHPrivateKeyParameters");

        throw $r5;

     label2:
        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: java.security.SecureRandom random> = $r3;

        $r4 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r1;

        goto label1;

     label3:
        $r6 = (org.bouncycastle.crypto.params.DHPrivateKeyParameters) $r4;

        $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: org.bouncycastle.crypto.params.DHPrivateKeyParameters key> = $r6;

        $r6 = $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: org.bouncycastle.crypto.params.DHPrivateKeyParameters key>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.crypto.params.DHKeyParameters: org.bouncycastle.crypto.params.DHParameters getParameters()>();

        $r0.<org.bouncycastle.crypto.agreement.DHBasicAgreement: org.bouncycastle.crypto.params.DHParameters dhParams> = $r7;

        return;
    }
}
