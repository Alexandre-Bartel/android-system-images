final class com.android.server.LocationManagerService$Receiver extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    final java.lang.Object mKey;
    final android.location.ILocationListener mListener;
    final android.app.PendingIntent mPendingIntent;
    final int mUid;
    final com.android.server.LocationManagerService this$0;

    void <init>(com.android.server.LocationManagerService, android.app.PendingIntent, int)
    {
        com.android.server.LocationManagerService$Receiver $r0;
        com.android.server.LocationManagerService $r1;
        android.app.PendingIntent $r2;
        int $i0;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 := @parameter0: com.android.server.LocationManagerService;

        $r2 := @parameter1: android.app.PendingIntent;

        $i0 := @parameter2: int;

        $r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent> = $r2;

        $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener> = null;

        $r0.<com.android.server.LocationManagerService$Receiver: int mUid> = $i0;

        $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey> = $r2;

        return;
    }

    void <init>(com.android.server.LocationManagerService, android.location.ILocationListener, int)
    {
        com.android.server.LocationManagerService$Receiver $r0;
        com.android.server.LocationManagerService $r1;
        android.location.ILocationListener $r2;
        int $i0;
        android.os.IBinder $r3;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 := @parameter0: com.android.server.LocationManagerService;

        $r2 := @parameter1: android.location.ILocationListener;

        $i0 := @parameter2: int;

        $r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener> = $r2;

        $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent> = null;

        $r0.<com.android.server.LocationManagerService$Receiver: int mUid> = $i0;

        $r3 = interfaceinvoke $r2.<android.location.ILocationListener: android.os.IBinder asBinder()>();

        $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey> = $r3;

        return;
    }

    public void binderDied()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        java.util.HashMap $r1;
        com.android.server.LocationManagerService $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r2 = $r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        $r1 = staticinvoke <com.android.server.LocationManagerService: java.util.HashMap access$100(com.android.server.LocationManagerService)>($r2);

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

        staticinvoke <com.android.server.LocationManagerService: void access$200(com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver)>($r2, $r0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean callLocationChangedLocked(android.location.Location)
    {
        com.android.server.LocationManagerService$Receiver $r0;
        android.location.Location $r1;
        android.content.Intent $r2;
        android.content.Context $r3;
        android.location.ILocationListener $r4;
        android.os.RemoteException $r5;
        android.app.PendingIntent $r6;
        com.android.server.LocationManagerService $r7;
        android.app.PendingIntent$CanceledException $r8;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 := @parameter0: android.location.Location;

        $r4 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r4 == null goto label4;

        $r4 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

     label1:
        interfaceinvoke $r4.<android.location.ILocationListener: void onLocationChanged(android.location.Location)>($r1);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        return 0;

     label4:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("location", $r1);

        $r6 = $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r7 = $r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

     label5:
        $r3 = staticinvoke <com.android.server.LocationManagerService: android.content.Context access$000(com.android.server.LocationManagerService)>($r7);

        virtualinvoke $r6.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>($r3, 0, $r2, null, null);

     label6:
        goto label2;

     label7:
        $r8 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.app.PendingIntent$CanceledException from label5 to label6 with label7;
    }

    public boolean callStatusChangedLocked(java.lang.String, int, android.os.Bundle)
    {
        com.android.server.LocationManagerService$Receiver $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Bundle $r2;
        android.content.Intent $r3;
        android.content.Context $r4;
        android.location.ILocationListener $r5;
        android.os.RemoteException $r6;
        android.app.PendingIntent $r7;
        com.android.server.LocationManagerService $r8;
        android.app.PendingIntent$CanceledException $r9;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $r5 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r5 == null goto label4;

        $r5 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

     label1:
        interfaceinvoke $r5.<android.location.ILocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>($r1, $i0, $r2);

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

        return 0;

     label4:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r2);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", $i0);

        $r7 = $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        $r8 = $r0.<com.android.server.LocationManagerService$Receiver: com.android.server.LocationManagerService this$0>;

     label5:
        $r4 = staticinvoke <com.android.server.LocationManagerService: android.content.Context access$000(com.android.server.LocationManagerService)>($r8);

        virtualinvoke $r7.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>($r4, 0, $r3, null, null);

     label6:
        goto label2;

     label7:
        $r9 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.app.PendingIntent$CanceledException from label5 to label6 with label7;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.LocationManagerService$Receiver $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.android.server.LocationManagerService$Receiver;

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $r0 = (com.android.server.LocationManagerService$Receiver) $r1;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label1:
        return 0;
    }

    public android.location.ILocationListener getListener()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        android.location.ILocationListener $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request for non-existent listener");

        throw $r2;
    }

    public android.app.PendingIntent getPendingIntent()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        android.app.PendingIntent $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request for non-existent intent");

        throw $r2;
    }

    public int hashCode()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isListener()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        android.location.ILocationListener $r1;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPendingIntent()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        android.app.PendingIntent $r1;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent mPendingIntent>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        com.android.server.LocationManagerService$Receiver $r0;
        android.location.ILocationListener $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r3;
        java.lang.Object $r4;

        $r0 := @this: com.android.server.LocationManagerService$Receiver;

        $r1 = $r0.<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener mListener>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $i0 = $r0.<com.android.server.LocationManagerService$Receiver: int mUid>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Listener ");

        $r4 = $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $i0 = $r0.<com.android.server.LocationManagerService$Receiver: int mUid>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Intent ");

        $r4 = $r0.<com.android.server.LocationManagerService$Receiver: java.lang.Object mKey>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
