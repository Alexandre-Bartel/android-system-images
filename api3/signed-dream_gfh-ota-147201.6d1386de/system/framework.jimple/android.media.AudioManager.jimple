public class android.media.AudioManager extends java.lang.Object
{
    public static final java.lang.String ACTION_AUDIO_BECOMING_NOISY;
    public static final int ADJUST_LOWER;
    public static final int ADJUST_RAISE;
    public static final int ADJUST_SAME;
    private static boolean DEBUG;
    public static final int[] DEFAULT_STREAM_VOLUME;
    public static final java.lang.String EXTRA_RINGER_MODE;
    public static final java.lang.String EXTRA_VIBRATE_SETTING;
    public static final java.lang.String EXTRA_VIBRATE_TYPE;
    public static final java.lang.String EXTRA_VOLUME_STREAM_TYPE;
    public static final java.lang.String EXTRA_VOLUME_STREAM_VALUE;
    public static final int FLAG_ALLOW_RINGER_MODES;
    public static final int FLAG_PLAY_SOUND;
    public static final int FLAG_REMOVE_SOUND_AND_VIBRATE;
    public static final int FLAG_SHOW_UI;
    public static final int FLAG_VIBRATE;
    public static final int FX_FOCUS_NAVIGATION_DOWN;
    public static final int FX_FOCUS_NAVIGATION_LEFT;
    public static final int FX_FOCUS_NAVIGATION_RIGHT;
    public static final int FX_FOCUS_NAVIGATION_UP;
    public static final int FX_KEYPRESS_DELETE;
    public static final int FX_KEYPRESS_RETURN;
    public static final int FX_KEYPRESS_SPACEBAR;
    public static final int FX_KEYPRESS_STANDARD;
    public static final int FX_KEY_CLICK;
    public static final int[] MAX_STREAM_VOLUME;
    public static final int MODE_CURRENT;
    public static final int MODE_INVALID;
    public static final int MODE_IN_CALL;
    public static final int MODE_NORMAL;
    public static final int MODE_RINGTONE;
    public static final int NUM_SOUND_EFFECTS;
    public static final int NUM_STREAMS;
    public static final java.lang.String RINGER_MODE_CHANGED_ACTION;
    public static final int RINGER_MODE_NORMAL;
    public static final int RINGER_MODE_SILENT;
    public static final int RINGER_MODE_VIBRATE;
    public static final int ROUTE_ALL;
    public static final int ROUTE_BLUETOOTH;
    public static final int ROUTE_BLUETOOTH_A2DP;
    public static final int ROUTE_BLUETOOTH_SCO;
    public static final int ROUTE_EARPIECE;
    public static final int ROUTE_HEADSET;
    public static final int ROUTE_SPEAKER;
    public static final int STREAM_ALARM;
    public static final int STREAM_BLUETOOTH_SCO;
    public static final int STREAM_MUSIC;
    public static final int STREAM_NOTIFICATION;
    public static final int STREAM_RING;
    public static final int STREAM_SYSTEM;
    public static final int STREAM_VOICE_CALL;
    private static java.lang.String TAG;
    public static final int USE_DEFAULT_STREAM_TYPE;
    public static final java.lang.String VIBRATE_SETTING_CHANGED_ACTION;
    public static final int VIBRATE_SETTING_OFF;
    public static final int VIBRATE_SETTING_ON;
    public static final int VIBRATE_SETTING_ONLY_SILENT;
    public static final int VIBRATE_TYPE_NOTIFICATION;
    public static final int VIBRATE_TYPE_RINGER;
    public static final java.lang.String VOLUME_CHANGED_ACTION;
    private static boolean localLOGV;
    private static android.media.IAudioService sService;
    private android.database.ContentObserver mContentObserver;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private android.os.IBinder mICallBack;

    static void <clinit>()
    {
        boolean $z0;
        int[] $r0;

        <android.media.AudioManager: java.lang.String VOLUME_CHANGED_ACTION> = "android.media.VOLUME_CHANGED_ACTION";

        <android.media.AudioManager: int VIBRATE_TYPE_RINGER> = 0;

        <android.media.AudioManager: int VIBRATE_TYPE_NOTIFICATION> = 1;

        <android.media.AudioManager: int VIBRATE_SETTING_ONLY_SILENT> = 2;

        <android.media.AudioManager: int VIBRATE_SETTING_ON> = 1;

        <android.media.AudioManager: int VIBRATE_SETTING_OFF> = 0;

        <android.media.AudioManager: java.lang.String VIBRATE_SETTING_CHANGED_ACTION> = "android.media.VIBRATE_SETTING_CHANGED";

        <android.media.AudioManager: int USE_DEFAULT_STREAM_TYPE> = -2147483648;

        <android.media.AudioManager: int STREAM_VOICE_CALL> = 0;

        <android.media.AudioManager: int STREAM_SYSTEM> = 1;

        <android.media.AudioManager: int STREAM_RING> = 2;

        <android.media.AudioManager: int STREAM_NOTIFICATION> = 5;

        <android.media.AudioManager: int STREAM_MUSIC> = 3;

        <android.media.AudioManager: int STREAM_BLUETOOTH_SCO> = 6;

        <android.media.AudioManager: int STREAM_ALARM> = 4;

        <android.media.AudioManager: int ROUTE_SPEAKER> = 2;

        <android.media.AudioManager: int ROUTE_HEADSET> = 8;

        <android.media.AudioManager: int ROUTE_EARPIECE> = 1;

        <android.media.AudioManager: int ROUTE_BLUETOOTH_SCO> = 4;

        <android.media.AudioManager: int ROUTE_BLUETOOTH_A2DP> = 16;

        <android.media.AudioManager: int ROUTE_BLUETOOTH> = 4;

        <android.media.AudioManager: int ROUTE_ALL> = -1;

        <android.media.AudioManager: int RINGER_MODE_VIBRATE> = 1;

        <android.media.AudioManager: int RINGER_MODE_SILENT> = 0;

        <android.media.AudioManager: int RINGER_MODE_NORMAL> = 2;

        <android.media.AudioManager: java.lang.String RINGER_MODE_CHANGED_ACTION> = "android.media.RINGER_MODE_CHANGED";

        <android.media.AudioManager: int NUM_STREAMS> = 5;

        <android.media.AudioManager: int NUM_SOUND_EFFECTS> = 9;

        <android.media.AudioManager: int MODE_RINGTONE> = 1;

        <android.media.AudioManager: int MODE_NORMAL> = 0;

        <android.media.AudioManager: int MODE_IN_CALL> = 2;

        <android.media.AudioManager: int MODE_INVALID> = -2;

        <android.media.AudioManager: int MODE_CURRENT> = -1;

        <android.media.AudioManager: int FX_KEY_CLICK> = 0;

        <android.media.AudioManager: int FX_KEYPRESS_STANDARD> = 5;

        <android.media.AudioManager: int FX_KEYPRESS_SPACEBAR> = 6;

        <android.media.AudioManager: int FX_KEYPRESS_RETURN> = 8;

        <android.media.AudioManager: int FX_KEYPRESS_DELETE> = 7;

        <android.media.AudioManager: int FX_FOCUS_NAVIGATION_UP> = 1;

        <android.media.AudioManager: int FX_FOCUS_NAVIGATION_RIGHT> = 4;

        <android.media.AudioManager: int FX_FOCUS_NAVIGATION_LEFT> = 3;

        <android.media.AudioManager: int FX_FOCUS_NAVIGATION_DOWN> = 2;

        <android.media.AudioManager: int FLAG_VIBRATE> = 16;

        <android.media.AudioManager: int FLAG_SHOW_UI> = 1;

        <android.media.AudioManager: int FLAG_REMOVE_SOUND_AND_VIBRATE> = 8;

        <android.media.AudioManager: int FLAG_PLAY_SOUND> = 4;

        <android.media.AudioManager: int FLAG_ALLOW_RINGER_MODES> = 2;

        <android.media.AudioManager: java.lang.String EXTRA_VOLUME_STREAM_VALUE> = "android.media.EXTRA_VOLUME_STREAM_VALUE";

        <android.media.AudioManager: java.lang.String EXTRA_VOLUME_STREAM_TYPE> = "android.media.EXTRA_VOLUME_STREAM_TYPE";

        <android.media.AudioManager: java.lang.String EXTRA_VIBRATE_TYPE> = "android.media.EXTRA_VIBRATE_TYPE";

        <android.media.AudioManager: java.lang.String EXTRA_VIBRATE_SETTING> = "android.media.EXTRA_VIBRATE_SETTING";

        <android.media.AudioManager: java.lang.String EXTRA_RINGER_MODE> = "android.media.EXTRA_RINGER_MODE";

        <android.media.AudioManager: int ADJUST_SAME> = 0;

        <android.media.AudioManager: int ADJUST_RAISE> = 1;

        <android.media.AudioManager: int ADJUST_LOWER> = -1;

        <android.media.AudioManager: java.lang.String ACTION_AUDIO_BECOMING_NOISY> = "android.media.AUDIO_BECOMING_NOISY";

        <android.media.AudioManager: java.lang.String TAG> = "AudioManager";

        <android.media.AudioManager: boolean DEBUG> = 0;

        $z0 = <android.media.AudioManager: boolean DEBUG>;

        if $z0 != 0 goto label2;

        $z0 = 0;

     label1:
        <android.media.AudioManager: boolean localLOGV> = $z0;

        $r0 = newarray (int)[7];

        $r0[0] = 6;

        $r0[1] = 8;

        $r0[2] = 8;

        $r0[3] = 16;

        $r0[4] = 8;

        $r0[5] = 8;

        $r0[6] = 16;

        <android.media.AudioManager: int[] MAX_STREAM_VOLUME> = $r0;

        $r0 = newarray (int)[7];

        $r0[0] = 4;

        $r0[1] = 5;

        $r0[2] = 5;

        $r0[3] = 11;

        $r0[4] = 6;

        $r0[5] = 5;

        $r0[6] = 7;

        <android.media.AudioManager: int[] DEFAULT_STREAM_VOLUME> = $r0;

        return;

     label2:
        $z0 = 1;

        goto label1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.media.AudioManager $r0;
        android.content.Context $r1;
        android.os.Looper $r2;
        android.os.Binder $r3;
        android.os.Handler $r4;

        $r0 := @this: android.media.AudioManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Binder;

        specialinvoke $r3.<android.os.Binder: void <init>()>();

        $r0.<android.media.AudioManager: android.os.IBinder mICallBack> = $r3;

        $r0.<android.media.AudioManager: android.content.Context mContext> = $r1;

        $r4 = new android.os.Handler;

        $r2 = virtualinvoke $r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r0.<android.media.AudioManager: android.os.Handler mHandler> = $r4;

        return;
    }

    private static android.media.IAudioService getService()
    {
        android.media.IAudioService $r0;
        android.os.IBinder $r1;

        $r0 = <android.media.AudioManager: android.media.IAudioService sService>;

        if $r0 == null goto label1;

        $r0 = <android.media.AudioManager: android.media.IAudioService sService>;

        return $r0;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("audio");

        $r0 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>($r1);

        <android.media.AudioManager: android.media.IAudioService sService> = $r0;

        $r0 = <android.media.AudioManager: android.media.IAudioService sService>;

        return $r0;
    }

    private boolean querySoundEffectsEnabled()
    {
        android.media.AudioManager $r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        $r0 := @this: android.media.AudioManager;

        $r1 = $r0.<android.media.AudioManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "sound_effects_enabled", 0);

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void adjustStreamVolume(int, int, int)
    {
        android.media.AudioManager $r0;
        int $i0, $i1, $i2;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void adjustStreamVolume(int,int,int)>($i0, $i1, $i2);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in adjustStreamVolume", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void adjustSuggestedStreamVolume(int, int, int)
    {
        android.media.AudioManager $r0;
        int $i0, $i1, $i2;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void adjustSuggestedStreamVolume(int,int,int)>($i0, $i1, $i2);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in adjustVolume", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void adjustVolume(int, int)
    {
        android.media.AudioManager $r0;
        int $i0, $i1;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void adjustVolume(int,int)>($i0, $i1);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in adjustVolume", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getMode()
    {
        android.media.AudioManager $r0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        int $i0;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $i0 = interfaceinvoke $r2.<android.media.IAudioService: int getMode()>();

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in getMode", $r1);

        return -2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getRingerMode()
    {
        android.media.AudioManager $r0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        int $i0;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $i0 = interfaceinvoke $r2.<android.media.IAudioService: int getRingerMode()>();

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in getRingerMode", $r1);

        return 2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getRouting(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $i0 = interfaceinvoke $r2.<android.media.IAudioService: int getRouting(int)>($i0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in getRouting", $r1);

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getStreamMaxVolume(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $i0 = interfaceinvoke $r2.<android.media.IAudioService: int getStreamMaxVolume(int)>($i0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in getStreamMaxVolume", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getStreamVolume(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $i0 = interfaceinvoke $r2.<android.media.IAudioService: int getStreamVolume(int)>($i0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in getStreamVolume", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getVibrateSetting(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $i0 = interfaceinvoke $r2.<android.media.IAudioService: int getVibrateSetting(int)>($i0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in getVibrateSetting", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isBluetoothA2dpOn()
    {
        android.media.AudioManager $r0;
        int $i0;

        $r0 := @this: android.media.AudioManager;

        $i0 = virtualinvoke $r0.<android.media.AudioManager: int getRouting(int)>(0);

        $i0 = $i0 & 16;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isBluetoothScoOn()
    {
        android.media.AudioManager $r0;
        int $i0;

        $r0 := @this: android.media.AudioManager;

        $i0 = virtualinvoke $r0.<android.media.AudioManager: int getRouting(int)>(2);

        $i0 = $i0 & 4;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isMicrophoneMute()
    {
        android.media.AudioManager $r0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        boolean $z0;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $z0 = interfaceinvoke $r2.<android.media.IAudioService: boolean isMicrophoneMute()>();

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in isMicrophoneMute", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isMusicActive()
    {
        android.media.AudioManager $r0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        boolean $z0;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $z0 = interfaceinvoke $r2.<android.media.IAudioService: boolean isMusicActive()>();

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in isMusicActive", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSpeakerphoneOn()
    {
        android.media.AudioManager $r0;
        int $i0;

        $r0 := @this: android.media.AudioManager;

        $i0 = virtualinvoke $r0.<android.media.AudioManager: int getRouting(int)>(2);

        $i0 = $i0 & 2;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isWiredHeadsetOn()
    {
        android.media.AudioManager $r0;
        int $i0;

        $r0 := @this: android.media.AudioManager;

        $i0 = virtualinvoke $r0.<android.media.AudioManager: int getRouting(int)>(0);

        $i0 = $i0 & 8;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public void loadSoundEffects()
    {
        android.media.AudioManager $r0;
        android.os.RemoteException $r1;
        java.lang.String $r2, $r5;
        android.media.IAudioService $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.media.AudioManager;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: boolean loadSoundEffects()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dead object in loadSoundEffects");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playSoundEffect(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        boolean $z0;
        android.media.IAudioService $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label5;

        if $i0 < 9 goto label1;

        return;

     label1:
        $z0 = specialinvoke $r0.<android.media.AudioManager: boolean querySoundEffectsEnabled()>();

        if $z0 == 0 goto label6;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label2:
        interfaceinvoke $r2.<android.media.IAudioService: void playSoundEffect(int)>($i0);

     label3:
        return;

     label4:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dead object in playSoundEffect");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5);

        return;

     label5:
        return;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void playSoundEffect(int, float)
    {
        android.media.AudioManager $r0;
        int $i0;
        float $f0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        if $i0 < 0 goto label5;

        if $i0 < 9 goto label1;

        return;

     label1:
        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label2:
        interfaceinvoke $r2.<android.media.IAudioService: void playSoundEffectVolume(int,float)>($i0, $f0);

     label3:
        return;

     label4:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dead object in playSoundEffect");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r5);

        return;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void setBluetoothA2dpOn(boolean)
    {
        android.media.AudioManager $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.media.AudioManager;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label3;

        $b0 = 16;

     label1:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(1, $b0, 16);

        if $z0 == 0 goto label4;

        $b0 = 16;

     label2:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(0, $b0, 16);

        return;

     label3:
        $b0 = 0;

        goto label1;

     label4:
        $b0 = 0;

        goto label2;
    }

    public void setBluetoothScoOn(boolean)
    {
        android.media.AudioManager $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.media.AudioManager;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label4;

        $b0 = 4;

     label1:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(1, $b0, -17);

        if $z0 == 0 goto label5;

        $b0 = 4;

     label2:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(0, $b0, -17);

        if $z0 == 0 goto label6;

        $b0 = 4;

     label3:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(2, $b0, -1);

        return;

     label4:
        $b0 = 2;

        goto label1;

     label5:
        $b0 = 2;

        goto label2;

     label6:
        $b0 = 1;

        goto label3;
    }

    public void setMicrophoneMute(boolean)
    {
        android.media.AudioManager $r0;
        boolean $z0;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $z0 := @parameter0: boolean;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void setMicrophoneMute(boolean)>($z0);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in setMicrophoneMute", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setMode(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void setMode(int)>($i0);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in setMode", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setParameter(java.lang.String, java.lang.String)
    {
        android.media.AudioManager $r0;
        java.lang.String $r1, $r2;
        android.os.RemoteException $r3;
        android.media.IAudioService $r4;

        $r0 := @this: android.media.AudioManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r4.<android.media.IAudioService: void setParameter(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "Dead object in setParameter", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRingerMode(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void setRingerMode(int)>($i0);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in setRingerMode", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRouting(int, int, int)
    {
        android.media.AudioManager $r0;
        int $i0, $i1, $i2;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void setRouting(int,int,int)>($i0, $i1, $i2);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in setRouting", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setSpeakerphoneOn(boolean)
    {
        android.media.AudioManager $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.media.AudioManager;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $b0 = 2;

     label1:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(2, $b0, -1);

        return;

     label2:
        $b0 = 1;

        goto label1;
    }

    public void setStreamMute(int, boolean)
    {
        android.media.AudioManager $r0;
        int $i0;
        boolean $z0;
        android.media.IAudioService $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

        $r2 = $r0.<android.media.AudioManager: android.os.IBinder mICallBack>;

     label1:
        interfaceinvoke $r1.<android.media.IAudioService: void setStreamMute(int,boolean,android.os.IBinder)>($i0, $z0, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Dead object in setStreamMute", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setStreamSolo(int, boolean)
    {
        android.media.AudioManager $r0;
        int $i0;
        boolean $z0;
        android.media.IAudioService $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

        $r2 = $r0.<android.media.AudioManager: android.os.IBinder mICallBack>;

     label1:
        interfaceinvoke $r1.<android.media.IAudioService: void setStreamSolo(int,boolean,android.os.IBinder)>($i0, $z0, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Dead object in setStreamSolo", $r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setStreamVolume(int, int, int)
    {
        android.media.AudioManager $r0;
        int $i0, $i1, $i2;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void setStreamVolume(int,int,int)>($i0, $i1, $i2);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in setStreamVolume", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVibrateSetting(int, int)
    {
        android.media.AudioManager $r0;
        int $i0, $i1;
        android.os.RemoteException $r1;
        java.lang.String $r2;
        android.media.IAudioService $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void setVibrateSetting(int,int)>($i0, $i1);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Dead object in setVibrateSetting", $r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setWiredHeadsetOn(boolean)
    {
        android.media.AudioManager $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.media.AudioManager;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label4;

        $b0 = 8;

     label1:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(0, $b0, -17);

        if $z0 == 0 goto label5;

        $b0 = 10;

     label2:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(1, $b0, -17);

        if $z0 == 0 goto label6;

        $b0 = 8;

     label3:
        virtualinvoke $r0.<android.media.AudioManager: void setRouting(int,int,int)>(2, $b0, -1);

        return;

     label4:
        $b0 = 2;

        goto label1;

     label5:
        $b0 = 2;

        goto label2;

     label6:
        $b0 = 1;

        goto label3;
    }

    public boolean shouldVibrate(int)
    {
        android.media.AudioManager $r0;
        int $i0;
        android.os.RemoteException $r1;
        android.media.IAudioService $r2;
        boolean $z0;
        java.lang.String $r3;

        $r0 := @this: android.media.AudioManager;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        $z0 = interfaceinvoke $r2.<android.media.IAudioService: boolean shouldVibrate(int)>($i0);

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        $r3 = <android.media.AudioManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Dead object in shouldVibrate", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unloadSoundEffects()
    {
        android.media.AudioManager $r0;
        android.os.RemoteException $r1;
        java.lang.String $r2, $r5;
        android.media.IAudioService $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.media.AudioManager;

        $r3 = staticinvoke <android.media.AudioManager: android.media.IAudioService getService()>();

     label1:
        interfaceinvoke $r3.<android.media.IAudioService: void unloadSoundEffects()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.media.AudioManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dead object in unloadSoundEffects");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
