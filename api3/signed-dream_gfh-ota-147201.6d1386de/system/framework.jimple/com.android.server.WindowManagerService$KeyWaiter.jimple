final class com.android.server.WindowManagerService$KeyWaiter extends java.lang.Object
{
    public static final int RETURN_NOTHING;
    public static final int RETURN_PENDING_POINTER;
    public static final int RETURN_PENDING_TRACKBALL;
    final java.lang.Object CONSUMED_EVENT_TOKEN;
    final java.lang.Object SKIP_TARGET_TOKEN;
    private com.android.server.WindowManagerService$KeyWaiter$DispatchState mDispatchState;
    private boolean mEventDispatching;
    private boolean mFinished;
    private boolean mGotFirstWindow;
    private android.os.IBinder mLastBinder;
    private com.android.server.WindowManagerService$WindowState mLastWin;
    com.android.server.WindowManagerService$WindowState mMotionTarget;
    com.android.server.WindowManagerService$WindowState mOutsideTouchTargets;
    private long mTimeToSwitch;
    boolean mWasFrozen;
    final com.android.server.WindowManagerService this$0;

    void <init>(com.android.server.WindowManagerService)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService $r1;
        java.lang.Object $r2;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$KeyWaiter$DispatchState mDispatchState> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN> = $r2;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object CONSUMED_EVENT_TOKEN> = $r2;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished> = 1;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mGotFirstWindow> = 0;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mEventDispatching> = 1;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch> = 0L;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mWasFrozen> = 0;

        return;
    }

    static com.android.server.WindowManagerService$WindowState access$200(com.android.server.WindowManagerService$KeyWaiter)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowState r1;

        $r0 := @parameter0: com.android.server.WindowManagerService$KeyWaiter;

        r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        return r1;
    }

    static android.os.IBinder access$300(com.android.server.WindowManagerService$KeyWaiter)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        android.os.IBinder r1;

        $r0 := @parameter0: com.android.server.WindowManagerService$KeyWaiter;

        r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder>;

        return r1;
    }

    static boolean access$400(com.android.server.WindowManagerService$KeyWaiter)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        boolean z0;

        $r0 := @parameter0: com.android.server.WindowManagerService$KeyWaiter;

        z0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished>;

        return z0;
    }

    static boolean access$500(com.android.server.WindowManagerService$KeyWaiter)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        boolean z0;

        $r0 := @parameter0: com.android.server.WindowManagerService$KeyWaiter;

        z0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mGotFirstWindow>;

        return z0;
    }

    static boolean access$600(com.android.server.WindowManagerService$KeyWaiter)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        boolean z0;

        $r0 := @parameter0: com.android.server.WindowManagerService$KeyWaiter;

        z0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mEventDispatching>;

        return z0;
    }

    static long access$700(com.android.server.WindowManagerService$KeyWaiter)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        long l0;

        $r0 := @parameter0: com.android.server.WindowManagerService$KeyWaiter;

        l0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        return l0;
    }

    private final void doFinishedKeyLocked(boolean)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        boolean $z0;
        com.android.server.WindowManagerService$WindowState $r1;
        com.android.server.WindowManagerService$Session $r2;
        com.android.server.WindowManagerService$WindowToken $r3;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r2 = $r1.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingPointerLocked(com.android.server.WindowManagerService$Session)>($r2);

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r2 = $r1.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingTrackballLocked(com.android.server.WindowManagerService$Session)>($r2);

     label1:
        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r3 = $r1.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $z0 = $r3.<com.android.server.WindowManagerService$WindowToken: boolean paused>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $z0 = virtualinvoke $r1.<com.android.server.WindowManagerService$WindowState: boolean isVisibleLw()>();

        if $z0 != 0 goto label3;

     label2:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder> = null;

     label3:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished> = 1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void appSwitchComing()
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        long $l0, $l1;
        byte $b2;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        entermonitor $r0;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l0 + 500L;

        $l1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label2;

        $l1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label3;

     label2:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch> = $l0;

     label3:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void bindTargetWindowLocked(com.android.server.WindowManagerService$WindowState)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowState $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$WindowState;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void bindTargetWindowLockedLocked(com.android.server.WindowManagerService$WindowState,int,com.android.server.KeyInputQueue$QueuedEvent)>($r1, 0, null);

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void bindTargetWindowLocked(com.android.server.WindowManagerService$WindowState, int, com.android.server.KeyInputQueue$QueuedEvent)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowState $r1;
        int $i0;
        com.android.server.KeyInputQueue$QueuedEvent $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$WindowState;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.android.server.KeyInputQueue$QueuedEvent;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void bindTargetWindowLockedLocked(com.android.server.WindowManagerService$WindowState,int,com.android.server.KeyInputQueue$QueuedEvent)>($r1, $i0, $r2);

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void bindTargetWindowLockedLocked(com.android.server.WindowManagerService$WindowState, int, com.android.server.KeyInputQueue$QueuedEvent)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowState $r1;
        int $i0;
        com.android.server.KeyInputQueue$QueuedEvent $r2;
        com.android.server.WindowManagerService$Session $r3;
        android.os.IBinder $r4;
        android.view.IWindow $r5;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$WindowState;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.android.server.KeyInputQueue$QueuedEvent;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin> = $r1;

        $r5 = $r1.<com.android.server.WindowManagerService$WindowState: android.view.IWindow mClient>;

        $r4 = interfaceinvoke $r5.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder> = $r4;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished> = 0;

        if $r2 == null goto label2;

        $r3 = $r1.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$Session mSession>;

        if $i0 != 1 goto label1;

        virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingPointerLocked(com.android.server.WindowManagerService$Session)>($r3);

        $r3.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove> = $r2;

        $r3.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingPointerWindow> = $r1;

        return;

     label1:
        if $i0 != 2 goto label3;

        virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void releasePendingTrackballLocked(com.android.server.WindowManagerService$Session)>($r3);

        $r3.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove> = $r2;

        $r3.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingTrackballWindow> = $r1;

        return;

     label2:
        return;

     label3:
        return;
    }

    boolean checkShouldDispatchKey(int)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        int $i0;
        com.android.server.WindowManagerService $r1;
        android.view.WindowManagerPolicy $r2;
        boolean $z0;
        long $l1, $l3;
        byte $b2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $z0 = interfaceinvoke $r2.<android.view.WindowManagerPolicy: boolean isAppSwitchKeyTqTiLwLi(int)>($i0);

        if $z0 == 0 goto label3;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch> = 0L;

        exitmonitor $r0;

     label2:
        return 1;

     label3:
        $l1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label7;

        $l1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b2 = $l1 cmp $l3;

        if $b2 >= 0 goto label7;

        exitmonitor $r0;

     label4:
        return 0;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r3;

     label7:
        exitmonitor $r0;

     label8:
        return 1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    java.lang.Object findTargetWindow(android.view.KeyEvent, com.android.server.KeyInputQueue$QueuedEvent, android.view.MotionEvent, boolean)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0, $r5;
        android.view.KeyEvent $r1;
        com.android.server.KeyInputQueue$QueuedEvent $r2;
        android.view.MotionEvent $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.WindowManagerService $r4, $r22;
        android.view.WindowManagerPolicy $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Object $r9;
        java.util.HashMap $r10;
        com.android.server.WindowManagerService$WindowState $r11, $r16, $r18;
        java.lang.Throwable $r12, $r13, $r19, $r20;
        float $f0, $f1;
        java.util.ArrayList $r14;
        android.graphics.Rect $r15, $r21;
        android.view.WindowManager$LayoutParams $r17;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 := @parameter1: com.android.server.KeyInputQueue$QueuedEvent;

        $r3 := @parameter2: android.view.MotionEvent;

        $z0 := @parameter3: boolean;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mOutsideTouchTargets> = null;

        if $r1 == null goto label10;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $i3 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        $i4 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i4 == 1 goto label02;

        $z0 = 1;

     label01:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r5 = $r4.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $z1 = virtualinvoke $r5.<com.android.server.WindowManagerService$KeyWaiter: boolean checkShouldDispatchKey(int)>($i2);

        if $z1 != 0 goto label03;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r6 = $r4.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i4 = virtualinvoke $r1.<android.view.KeyEvent: int getMetaState()>();

        interfaceinvoke $r6.<android.view.WindowManagerPolicy: boolean interceptKeyTi(android.view.WindowManagerPolicy$WindowState,int,int,boolean,int)>(null, $i2, $i4, $z0, $i3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event timeout during app switch: dropping ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r8);

        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN>;

        return $r9;

     label02:
        $z0 = 0;

        goto label01;

     label03:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r10 = $r4.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r10;

     label04:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r11 = staticinvoke <com.android.server.WindowManagerService: com.android.server.WindowManagerService$WindowState access$800(com.android.server.WindowManagerService)>($r4);

        exitmonitor $r10;

     label05:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$900(com.android.server.WindowManagerService,com.android.server.WindowManagerService$WindowState,int)>($r4, $r11, 5);

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r6 = $r4.<com.android.server.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $i4 = virtualinvoke $r1.<android.view.KeyEvent: int getMetaState()>();

        $z0 = interfaceinvoke $r6.<android.view.WindowManagerPolicy: boolean interceptKeyTi(android.view.WindowManagerPolicy$WindowState,int,int,boolean,int)>($r11, $i2, $i4, $z0, $i3);

        if $z0 == 0 goto label09;

        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object CONSUMED_EVENT_TOKEN>;

        return $r9;

     label06:
        $r12 := @caughtexception;

     label07:
        exitmonitor $r10;

     label08:
        throw $r12;

     label09:
        return $r11;

     label10:
        if $z0 != 0 goto label17;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r5 = $r4.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $z0 = virtualinvoke $r5.<com.android.server.WindowManagerService$KeyWaiter: boolean checkShouldDispatchKey(int)>(-1);

        if $z0 != 0 goto label11;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event timeout during app switch: dropping trackball ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r8);

        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN>;

        return $r9;

     label11:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r10 = $r4.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r10;

     label12:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r11 = staticinvoke <com.android.server.WindowManagerService: com.android.server.WindowManagerService$WindowState access$800(com.android.server.WindowManagerService)>($r4);

        exitmonitor $r10;

     label13:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        staticinvoke <com.android.server.WindowManagerService: void access$900(com.android.server.WindowManagerService,com.android.server.WindowManagerService$WindowState,int)>($r4, $r11, 5);

        return $r11;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor $r10;

     label16:
        throw $r13;

     label17:
        if $r3 != null goto label18;

        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN>;

        return $r9;

     label18:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r5 = $r4.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyWaiter mKeyWaiter>;

        $z0 = virtualinvoke $r5.<com.android.server.WindowManagerService$KeyWaiter: boolean checkShouldDispatchKey(int)>(0);

        if $z0 != 0 goto label19;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event timeout during app switch: dropping pointer ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r8);

        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN>;

        return $r9;

     label19:
        $i2 = virtualinvoke $r3.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        virtualinvoke $r3.<android.view.MotionEvent: long getEventTime()>();

        if $r2 == null goto label28;

        $i3 = $r2.<com.android.server.KeyInputQueue$QueuedEvent: int flags>;

        $i3 = $i3 & 536870912;

        if $i3 == 0 goto label28;

        $z0 = 1;

     label20:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r10 = $r4.<com.android.server.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor $r10;

     label21:
        entermonitor $r0;

     label22:
        if $i2 != 0 goto label39;

     label23:
        $r11 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget>;

        if $r11 == null goto label24;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pointer down received while already down in: ");

        $r11 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r8);

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget> = null;

     label24:
        $i2 = (int) $f0;

        $i3 = (int) $f1;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r14 = $r4.<com.android.server.WindowManagerService: java.util.ArrayList mWindows>;

        $i4 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $r11 = null;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r15 = $r4.<com.android.server.WindowManagerService: android.graphics.Rect mTempRect>;

        $i4 = $i4 - 1;

     label25:
        if $i4 < 0 goto label38;

        $r9 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r16 = (com.android.server.WindowManagerService$WindowState) $r9;

        $r17 = $r16.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r17.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = 1073741824 & $i0;

        if $i1 == 0 goto label26;

        if $r11 != null goto label26;

        $r11 = $r16;

     label26:
        $z1 = virtualinvoke $r16.<com.android.server.WindowManagerService$WindowState: boolean isVisibleLw()>();

        if $z1 != 0 goto label29;

     label27:
        $i4 = $i4 + -1;

        goto label25;

     label28:
        $z0 = 0;

        goto label20;

     label29:
        $i1 = $i0 & 16;

        if $i1 == 0 goto label34;

        $i0 = 262144 & $i0;

        if $i0 == 0 goto label27;

        $r18 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mOutsideTouchTargets>;

        $r16.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mNextOutsideTouch> = $r18;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mOutsideTouchTargets> = $r16;

        goto label27;

     label30:
        $r19 := @caughtexception;

        exitmonitor $r0;

     label31:
        throw $r19;

     label32:
        $r20 := @caughtexception;

        exitmonitor $r10;

     label33:
        throw $r20;

     label34:
        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        virtualinvoke $r15.<android.graphics.Rect: void set(android.graphics.Rect)>($r21);

        $i1 = $r16.<com.android.server.WindowManagerService$WindowState: int mTouchableInsets>;

        if $i1 != 1 goto label42;

        $i1 = $r15.<android.graphics.Rect: int left>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets>;

        $i5 = $r21.<android.graphics.Rect: int left>;

        $i1 = $i1 + $i5;

        $r15.<android.graphics.Rect: int left> = $i1;

        $i1 = $r15.<android.graphics.Rect: int top>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets>;

        $i5 = $r21.<android.graphics.Rect: int top>;

        $i1 = $i1 + $i5;

        $r15.<android.graphics.Rect: int top> = $i1;

        $i1 = $r15.<android.graphics.Rect: int right>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets>;

        $i5 = $r21.<android.graphics.Rect: int right>;

        $i1 = $i1 - $i5;

        $r15.<android.graphics.Rect: int right> = $i1;

        $i1 = $r15.<android.graphics.Rect: int bottom>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenContentInsets>;

        $i5 = $r21.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i5;

        $r15.<android.graphics.Rect: int bottom> = $i1;

     label35:
        $i1 = $i0 & 40;

        $z1 = virtualinvoke $r15.<android.graphics.Rect: boolean contains(int,int)>($i2, $i3);

        if $z1 != 0 goto label36;

        if $i1 != 0 goto label44;

     label36:
        if $z0 == 0 goto label37;

        $i2 = $i0 & 64;

        if $i2 == 0 goto label43;

     label37:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget> = $r16;

     label38:
        if $r11 == null goto label39;

        $r16 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget>;

        if $r16 == $r11 goto label39;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget> = null;

     label39:
        $r11 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget>;

        exitmonitor $r0;

     label40:
        exitmonitor $r10;

     label41:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r22 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $i2 = staticinvoke <com.android.server.WindowManagerService: int access$1000(com.android.server.WindowManagerService,android.view.MotionEvent)>($r22, $r3);

        staticinvoke <com.android.server.WindowManagerService: void access$900(com.android.server.WindowManagerService,com.android.server.WindowManagerService$WindowState,int)>($r4, $r11, $i2);

        if $r11 == null goto label46;

        return $r11;

     label42:
        $i1 = $r16.<com.android.server.WindowManagerService$WindowState: int mTouchableInsets>;

        if $i1 != 2 goto label35;

        $i1 = $r15.<android.graphics.Rect: int left>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets>;

        $i5 = $r21.<android.graphics.Rect: int left>;

        $i1 = $i1 + $i5;

        $r15.<android.graphics.Rect: int left> = $i1;

        $i1 = $r15.<android.graphics.Rect: int top>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets>;

        $i5 = $r21.<android.graphics.Rect: int top>;

        $i1 = $i1 + $i5;

        $r15.<android.graphics.Rect: int top> = $i1;

        $i1 = $r15.<android.graphics.Rect: int right>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets>;

        $i5 = $r21.<android.graphics.Rect: int right>;

        $i1 = $i1 - $i5;

        $r15.<android.graphics.Rect: int right> = $i1;

        $i1 = $r15.<android.graphics.Rect: int bottom>;

        $r21 = $r16.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mGivenVisibleInsets>;

        $i5 = $r21.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i5;

        $r15.<android.graphics.Rect: int bottom> = $i1;

        goto label35;

     label43:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget> = null;

        goto label38;

     label44:
        $i0 = 262144 & $i0;

        if $i0 == 0 goto label27;

        $r18 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mOutsideTouchTargets>;

        $r16.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowState mNextOutsideTouch> = $r18;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mOutsideTouchTargets> = $r16;

     label45:
        goto label27;

     label46:
        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN>;

        return $r9;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label23 to label28 with label30;
        catch java.lang.Throwable from label29 to label31 with label30;
        catch java.lang.Throwable from label31 to label33 with label32;
        catch java.lang.Throwable from label34 to label40 with label30;
        catch java.lang.Throwable from label40 to label41 with label32;
        catch java.lang.Throwable from label42 to label45 with label30;
    }

    android.view.MotionEvent finishedKey(com.android.server.WindowManagerService$Session, android.view.IWindow, boolean, int)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$Session $r1;
        android.view.IWindow $r2;
        boolean $z0, $z1;
        int $i0;
        android.os.IBinder $r3, $r6;
        com.android.server.KeyInputQueue$QueuedEvent $r4;
        com.android.server.WindowManagerService$WindowState $r5, $r7;
        com.android.server.WindowManagerService$WindowToken $r8;
        java.lang.Object $r9;
        android.view.MotionEvent $r10;
        com.android.server.WindowManagerService $r11;
        com.android.server.WindowManagerService$KeyQ $r12;
        android.graphics.Rect $r13;
        float $f0, $f1;
        java.lang.Throwable $r14;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$Session;

        $r2 := @parameter1: android.view.IWindow;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        if $r2 != null goto label01;

        return null;

     label01:
        entermonitor $r0;

        $r4 = null;

        $r5 = null;

        if $i0 != 1 goto label08;

     label02:
        $r4 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove>;

        $r5 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingPointerWindow>;

        $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove> = null;

        $r1.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingPointerWindow> = null;

     label03:
        $r6 = $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder>;

        $r3 = interfaceinvoke $r2.<android.view.IWindow: android.os.IBinder asBinder()>();

        if $r6 != $r3 goto label05;

        $r7 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r7 == null goto label11;

        $r7 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r8 = $r7.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $z1 = $r8.<com.android.server.WindowManagerService$WindowToken: boolean paused>;

        if $z1 == 0 goto label04;

        if $z0 != 0 goto label04;

        $z0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mEventDispatching>;

        if $z0 != 0 goto label11;

     label04:
        specialinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void doFinishedKeyLocked(boolean)>(0);

     label05:
        if $r4 == null goto label12;

        $r9 = $r4.<com.android.server.KeyInputQueue$QueuedEvent: java.lang.Object event>;

        $r10 = (android.view.MotionEvent) $r9;

        $r11 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r12 = $r11.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyQ mQueue>;

        virtualinvoke $r12.<com.android.server.KeyInputQueue: void recycleEvent(com.android.server.KeyInputQueue$QueuedEvent)>($r4);

        if $r5 == null goto label06;

        if $i0 != 1 goto label06;

        $r13 = $r5.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i0 = $r13.<android.graphics.Rect: int left>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $r13 = $r5.<com.android.server.WindowManagerService$WindowState: android.graphics.Rect mFrame>;

        $i0 = $r13.<android.graphics.Rect: int top>;

        $i0 = neg $i0;

        $f1 = (float) $i0;

        virtualinvoke $r10.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, $f1);

     label06:
        exitmonitor $r0;

     label07:
        return $r10;

     label08:
        if $i0 != 2 goto label03;

        $r4 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove>;

        $r5 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingTrackballWindow>;

        $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove> = null;

        $r1.<com.android.server.WindowManagerService$Session: com.android.server.WindowManagerService$WindowState mPendingTrackballWindow> = null;

        goto label03;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r14;

     label11:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished> = 1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        goto label05;

     label12:
        exitmonitor $r0;

     label13:
        return null;

        catch java.lang.Throwable from label02 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
        catch java.lang.Throwable from label11 to label13 with label09;
    }

    void handleNewWindowLocked(com.android.server.WindowManagerService$WindowState)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowState $r1, $r5;
        boolean $z0;
        com.android.server.WindowManagerService$WindowToken $r2;
        android.view.WindowManager$LayoutParams $r3;
        int $i0, $i1;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$WindowState;

        $z0 = virtualinvoke $r1.<com.android.server.WindowManagerService$WindowState: boolean canReceiveKeys()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        entermonitor $r0;

     label2:
        $r2 = $r1.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $r2.<com.android.server.WindowManagerService$WindowToken: boolean paused> = 0;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mGotFirstWindow> = 1;

        $r3 = $r1.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i0 = $i0 & 1073741824;

        if $i0 == 0 goto label7;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished> = 1;

     label3:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r4;

     label7:
        $r5 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r5 == null goto label3;

        $i0 = $r1.<com.android.server.WindowManagerService$WindowState: int mLayer>;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $i1 = $r1.<com.android.server.WindowManagerService$WindowState: int mLayer>;

        if $i0 < $i1 goto label8;

        $r1 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r2 = $r1.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $r2.<com.android.server.WindowManagerService$WindowToken: boolean paused> = 0;

        specialinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void doFinishedKeyLocked(boolean)>(1);

     label8:
        exitmonitor $r0;

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label7 to label9 with label5;
    }

    void pauseDispatchingLocked(com.android.server.WindowManagerService$WindowToken)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowToken $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$WindowToken;

        entermonitor $r0;

     label1:
        $r1.<com.android.server.WindowManagerService$WindowToken: boolean paused> = 1;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void recordDispatchState(android.view.KeyEvent, com.android.server.WindowManagerService$WindowState)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        android.view.KeyEvent $r1;
        com.android.server.WindowManagerService$WindowState $r2;
        com.android.server.WindowManagerService$KeyWaiter$DispatchState $r3;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 := @parameter1: com.android.server.WindowManagerService$WindowState;

        $r3 = new com.android.server.WindowManagerService$KeyWaiter$DispatchState;

        specialinvoke $r3.<com.android.server.WindowManagerService$KeyWaiter$DispatchState: void <init>(com.android.server.WindowManagerService$KeyWaiter,android.view.KeyEvent,com.android.server.WindowManagerService$WindowState)>($r0, $r1, $r2);

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$KeyWaiter$DispatchState mDispatchState> = $r3;

        return;
    }

    void releasePendingPointerLocked(com.android.server.WindowManagerService$Session)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$Session $r1;
        com.android.server.KeyInputQueue$QueuedEvent $r2;
        com.android.server.WindowManagerService $r3;
        com.android.server.WindowManagerService$KeyQ $r4;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$Session;

        $r2 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyQ mQueue>;

        $r2 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove>;

        virtualinvoke $r4.<com.android.server.KeyInputQueue: void recycleEvent(com.android.server.KeyInputQueue$QueuedEvent)>($r2);

        $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingPointerMove> = null;

        return;

     label1:
        return;
    }

    void releasePendingTrackballLocked(com.android.server.WindowManagerService$Session)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$Session $r1;
        com.android.server.KeyInputQueue$QueuedEvent $r2;
        com.android.server.WindowManagerService $r3;
        com.android.server.WindowManagerService$KeyQ $r4;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$Session;

        $r2 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$KeyQ mQueue>;

        $r2 = $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove>;

        virtualinvoke $r4.<com.android.server.KeyInputQueue: void recycleEvent(com.android.server.KeyInputQueue$QueuedEvent)>($r2);

        $r1.<com.android.server.WindowManagerService$Session: com.android.server.KeyInputQueue$QueuedEvent mPendingTrackballMove> = null;

        return;

     label1:
        return;
    }

    void resumeDispatchingLocked(com.android.server.WindowManagerService$WindowToken)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        com.android.server.WindowManagerService$WindowToken $r1, $r3;
        boolean $z0;
        com.android.server.WindowManagerService$WindowState $r2;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: com.android.server.WindowManagerService$WindowToken;

        entermonitor $r0;

     label1:
        $z0 = $r1.<com.android.server.WindowManagerService$WindowToken: boolean paused>;

        if $z0 == 0 goto label2;

        $r1.<com.android.server.WindowManagerService$WindowToken: boolean paused> = 0;

        $r2 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r2 == null goto label4;

        $r2 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r3 = $r2.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        if $r3 != $r1 goto label4;

        $z0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished>;

        if $z0 == 0 goto label4;

        specialinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void doFinishedKeyLocked(boolean)>(1);

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    void setEventDispatchingLocked(boolean)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $z0 := @parameter0: boolean;

        entermonitor $r0;

     label1:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mEventDispatching> = $z0;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void tickle()
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    java.lang.Object waitForNextEventTarget(android.view.KeyEvent, com.android.server.KeyInputQueue$QueuedEvent, android.view.MotionEvent, boolean, boolean)
    {
        com.android.server.WindowManagerService$KeyWaiter $r0;
        android.view.KeyEvent $r1;
        com.android.server.KeyInputQueue$QueuedEvent $r2;
        android.view.MotionEvent $r3;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l2, $l3, $l5;
        com.android.server.WindowManagerService$WindowState $r4, $r5;
        java.lang.Object $r6, $r7;
        java.lang.Throwable $r8, $r18, $r19;
        com.android.server.WindowManagerService $r9;
        com.android.server.WindowManagerService$WindowToken $r10;
        com.android.server.WindowManagerService$AppWindowToken $r11;
        byte $b4;
        android.view.IApplicationToken $r12;
        java.lang.StringBuilder $r13;
        android.view.WindowManager$LayoutParams $r14;
        java.lang.CharSequence $r15;
        java.lang.String $r16;
        com.android.server.WindowManagerService$KeyWaiter$DispatchState $r17;
        java.lang.InterruptedException $r20;
        android.os.RemoteException $r21;

        $r0 := @this: com.android.server.WindowManagerService$KeyWaiter;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 := @parameter1: com.android.server.KeyInputQueue$QueuedEvent;

        $r3 := @parameter2: android.view.MotionEvent;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = 5000L;

     label01:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r5 = $r4;

        if $r4 != null goto label03;

        $z2 = 1;

     label02:
        if $z2 == 0 goto label06;

        $r6 = virtualinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object findTargetWindow(android.view.KeyEvent,com.android.server.KeyInputQueue$QueuedEvent,android.view.MotionEvent,boolean)>($r1, $r2, $r3, $z0);

        $r7 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object SKIP_TARGET_TOKEN>;

        if $r6 != $r7 goto label04;

        return null;

     label03:
        $z2 = 0;

        goto label02;

     label04:
        $r7 = $r0.<com.android.server.WindowManagerService$KeyWaiter: java.lang.Object CONSUMED_EVENT_TOKEN>;

        if $r6 != $r7 goto label05;

        return $r6;

     label05:
        $r5 = (com.android.server.WindowManagerService$WindowState) $r6;

     label06:
        entermonitor $r0;

        if $z2 != 0 goto label11;

     label07:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r4 != null goto label11;

        exitmonitor $r0;

     label08:
        goto label01;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r8;

     label11:
        $z3 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished>;

        if $z3 == 0 goto label17;

        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $z3 = $r9.<com.android.server.WindowManagerService: boolean mDisplayFrozen>;

        if $z3 != 0 goto label17;

        $z3 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mEventDispatching>;

        if $z3 != 0 goto label13;

        exitmonitor $r0;

     label12:
        return null;

     label13:
        if $r5 == null goto label15;

        if $z2 == 0 goto label17;

        $r10 = $r5.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $z2 = $r10.<com.android.server.WindowManagerService$WindowToken: boolean paused>;

        if $z2 != 0 goto label17;

        exitmonitor $r0;

     label14:
        return $r5;

     label15:
        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r11 = $r9.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$AppWindowToken mFocusedApp>;

        if $r11 != null goto label17;

        exitmonitor $r0;

     label16:
        return null;

     label17:
        if $r5 == null goto label20;

        $r11 = $r5.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$AppWindowToken mAppToken>;

     label18:
        $l3 = $l1;

        $l0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $b4 = $l0 cmp 0L;

        if $b4 == 0 goto label23;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $b4 = $l5 cmp $l0;

        if $b4 > 0 goto label21;

        specialinvoke $r0.<com.android.server.WindowManagerService$KeyWaiter: void doFinishedKeyLocked(boolean)>(1);

        exitmonitor $r0;

     label19:
        goto label01;

     label20:
        $r9 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService this$0>;

        $r11 = $r9.<com.android.server.WindowManagerService: com.android.server.WindowManagerService$AppWindowToken mFocusedApp>;

        goto label18;

     label21:
        $l5 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

     label22:
        $l0 = $l5 - $l0;

        $b4 = $l1 cmp $l0;

        if $b4 <= 0 goto label23;

        $l3 = $l0;

     label23:
        virtualinvoke $r0.<java.lang.Object: void wait(long)>($l3);

     label24:
        exitmonitor $r0;

     label25:
        $z2 = $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mWasFrozen>;

        if $z2 == 0 goto label33;

        $l3 = 0L;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mWasFrozen> = 0;

     label26:
        $b4 = $l3 cmp $l1;

        if $b4 < 0 goto label01;

        $l0 = $r0.<com.android.server.WindowManagerService$KeyWaiter: long mTimeToSwitch>;

        $b4 = $l0 cmp 0L;

        if $b4 != 0 goto label01;

        $r12 = null;

        entermonitor $r0;

     label27:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key dispatching timed out sending to ");

        if $r5 == null goto label34;

        $r14 = $r5.<com.android.server.WindowManagerService$WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r15 = virtualinvoke $r14.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

     label28:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r16);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatch state: ");

        $r17 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$KeyWaiter$DispatchState mDispatchState>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r16);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current state:  ");

        $r17 = new com.android.server.WindowManagerService$KeyWaiter$DispatchState;

        specialinvoke $r17.<com.android.server.WindowManagerService$KeyWaiter$DispatchState: void <init>(com.android.server.WindowManagerService$KeyWaiter,android.view.KeyEvent,com.android.server.WindowManagerService$WindowState)>($r0, $r1, $r5);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", $r16);

        if $r5 == null goto label35;

        $r12 = virtualinvoke $r5.<com.android.server.WindowManagerService$WindowState: android.view.IApplicationToken getAppToken()>();

     label29:
        exitmonitor $r0;

     label30:
        $z2 = 1;

        if $r12 == null goto label39;

     label31:
        $l0 = interfaceinvoke $r12.<android.view.IApplicationToken: long getKeyDispatchingTimeout()>();

     label32:
        $b4 = $l0 cmp $l3;

        if $b4 <= 0 goto label38;

        $l1 = $l0 - $l3;

        goto label01;

     label33:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $l3 - $l2;

        goto label26;

     label34:
        $r15 = "<null>";

        goto label28;

     label35:
        if $r11 == null goto label29;

        $r12 = $r11.<com.android.server.WindowManagerService$AppWindowToken: android.view.IApplicationToken appToken>;

        goto label29;

     label36:
        $r18 := @caughtexception;

        exitmonitor $r0;

     label37:
        throw $r18;

     label38:
        $z2 = interfaceinvoke $r12.<android.view.IApplicationToken: boolean keyDispatchingTimedOut()>();

     label39:
        entermonitor $r0;

        if $z2 == 0 goto label48;

     label40:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r4 == $r5 goto label41;

        if $r5 != null goto label48;

     label41:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: boolean mFinished> = 1;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        if $r4 == null goto label42;

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r10 = $r4.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $z2 = $r10.<com.android.server.WindowManagerService$WindowToken: boolean paused>;

        if $z2 == 0 goto label42;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", "Un-pausing dispatching to this window");

        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin>;

        $r10 = $r4.<com.android.server.WindowManagerService$WindowState: com.android.server.WindowManagerService$WindowToken mToken>;

        $r10.<com.android.server.WindowManagerService$WindowToken: boolean paused> = 0;

     label42:
        $r4 = $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget>;

        if $r4 != $r5 goto label43;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mMotionTarget> = null;

     label43:
        $r0.<com.android.server.WindowManagerService$KeyWaiter: com.android.server.WindowManagerService$WindowState mLastWin> = null;

        $r0.<com.android.server.WindowManagerService$KeyWaiter: android.os.IBinder mLastBinder> = null;

        if $z1 != 0 goto label44;

        if $r5 != null goto label49;

     label44:
        exitmonitor $r0;

     label45:
        return null;

     label46:
        $r19 := @caughtexception;

        exitmonitor $r0;

     label47:
        throw $r19;

     label48:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WindowManager", "Continuing to wait for key to be dispatched");

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label49:
        exitmonitor $r0;

     label50:
        goto label01;

     label51:
        $r20 := @caughtexception;

        goto label24;

     label52:
        $r21 := @caughtexception;

        goto label39;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label15 to label16 with label09;
        catch java.lang.Throwable from label17 to label19 with label09;
        catch java.lang.Throwable from label20 to label22 with label09;
        catch java.lang.InterruptedException from label23 to label24 with label51;
        catch java.lang.Throwable from label23 to label24 with label09;
        catch java.lang.Throwable from label24 to label25 with label09;
        catch java.lang.Throwable from label27 to label30 with label36;
        catch android.os.RemoteException from label31 to label32 with label52;
        catch java.lang.Throwable from label34 to label37 with label36;
        catch android.os.RemoteException from label38 to label39 with label52;
        catch java.lang.Throwable from label40 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label48 to label50 with label46;
    }

    public static void <clinit>()
    {
        <com.android.server.WindowManagerService$KeyWaiter: int RETURN_PENDING_TRACKBALL> = 2;

        <com.android.server.WindowManagerService$KeyWaiter: int RETURN_PENDING_POINTER> = 1;

        <com.android.server.WindowManagerService$KeyWaiter: int RETURN_NOTHING> = 0;

        return;
    }
}
