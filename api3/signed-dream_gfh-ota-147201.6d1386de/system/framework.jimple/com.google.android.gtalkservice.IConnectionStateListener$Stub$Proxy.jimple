class com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy extends java.lang.Object implements com.google.android.gtalkservice.IConnectionStateListener
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy;

        r1 = $r0.<com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void connectionStateChanged(com.google.android.gtalkservice.ConnectionState, com.google.android.gtalkservice.ConnectionError) throws android.os.RemoteException
    {
        com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy $r0;
        com.google.android.gtalkservice.ConnectionState $r1;
        com.google.android.gtalkservice.ConnectionError $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy;

        $r1 := @parameter0: com.google.android.gtalkservice.ConnectionState;

        $r2 := @parameter1: com.google.android.gtalkservice.ConnectionError;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.google.android.gtalkservice.IConnectionStateListener");

        if $r1 == null goto label5;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<com.google.android.gtalkservice.ConnectionState: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label2:
        if $r2 == null goto label8;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r2.<com.google.android.gtalkservice.ConnectionError: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label3:
        $r5 = $r0.<com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        goto label2;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

     label8:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label9:
        goto label3;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy $r0;

        $r0 := @this: com.google.android.gtalkservice.IConnectionStateListener$Stub$Proxy;

        return "com.google.android.gtalkservice.IConnectionStateListener";
    }
}
