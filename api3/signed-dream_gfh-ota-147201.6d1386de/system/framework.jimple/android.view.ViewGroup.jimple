public abstract class android.view.ViewGroup extends android.view.View implements android.view.ViewManager, android.view.ViewParent
{
    private static final int ARRAY_CAPACITY_INCREMENT;
    private static final int ARRAY_INITIAL_CAPACITY;
    private static final int CHILD_LEFT_INDEX;
    private static final int CHILD_TOP_INDEX;
    protected static final int CLIP_TO_PADDING_MASK;
    private static final boolean DBG;
    private static final int[] DESCENDANT_FOCUSABILITY_FLAGS;
    private static final int FLAG_ADD_STATES_FROM_CHILDREN;
    private static final int FLAG_ALPHA_LOWER_THAN_ONE;
    private static final int FLAG_ALWAYS_DRAWN_WITH_CACHE;
    private static final int FLAG_ANIMATION_CACHE;
    private static final int FLAG_ANIMATION_DONE;
    private static final int FLAG_CHILDREN_DRAWN_WITH_CACHE;
    private static final int FLAG_CLEAR_TRANSFORMATION;
    private static final int FLAG_CLIP_CHILDREN;
    private static final int FLAG_CLIP_TO_PADDING;
    private static final int FLAG_DISALLOW_INTERCEPT;
    private static final int FLAG_INVALIDATE_REQUIRED;
    private static final int FLAG_MASK_FOCUSABILITY;
    private static final int FLAG_NOTIFY_ANIMATION_LISTENER;
    private static final int FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE;
    private static final int FLAG_OPTIMIZE_INVALIDATE;
    private static final int FLAG_PADDING_NOT_NULL;
    private static final int FLAG_RUN_ANIMATION;
    protected static final int FLAG_SUPPORT_STATIC_TRANSFORMATIONS;
    protected static final int FLAG_USE_CHILD_DRAWING_ORDER;
    public static final int FOCUS_AFTER_DESCENDANTS;
    public static final int FOCUS_BEFORE_DESCENDANTS;
    public static final int FOCUS_BLOCK_DESCENDANTS;
    public static final int PERSISTENT_ALL_CACHES;
    public static final int PERSISTENT_ANIMATION_CACHE;
    public static final int PERSISTENT_NO_CACHE;
    public static final int PERSISTENT_SCROLLING_CACHE;
    private android.view.animation.Animation$AnimationListener mAnimationListener;
    private final android.graphics.Paint mCachePaint;
    private android.view.animation.Transformation mChildTransformation;
    private android.view.View[] mChildren;
    private int mChildrenCount;
    protected java.util.ArrayList mDisappearingChildren;
    private android.view.View mFocused;
    protected int mGroupFlags;
    private android.graphics.RectF mInvalidateRegion;
    private android.view.animation.LayoutAnimationController mLayoutAnimationController;
    private android.view.View mMotionTarget;
    protected android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener;
    protected int mPersistentDrawingCache;
    private final android.graphics.Rect mTempRect;

    static void <clinit>()
    {
        int[] $r0;

        <android.view.ViewGroup: int PERSISTENT_SCROLLING_CACHE> = 2;

        <android.view.ViewGroup: int PERSISTENT_NO_CACHE> = 0;

        <android.view.ViewGroup: int PERSISTENT_ANIMATION_CACHE> = 1;

        <android.view.ViewGroup: int PERSISTENT_ALL_CACHES> = 3;

        <android.view.ViewGroup: int FOCUS_BLOCK_DESCENDANTS> = 393216;

        <android.view.ViewGroup: int FOCUS_BEFORE_DESCENDANTS> = 131072;

        <android.view.ViewGroup: int FOCUS_AFTER_DESCENDANTS> = 262144;

        <android.view.ViewGroup: int FLAG_USE_CHILD_DRAWING_ORDER> = 1024;

        <android.view.ViewGroup: int FLAG_SUPPORT_STATIC_TRANSFORMATIONS> = 2048;

        <android.view.ViewGroup: int FLAG_RUN_ANIMATION> = 8;

        <android.view.ViewGroup: int FLAG_PADDING_NOT_NULL> = 32;

        <android.view.ViewGroup: int FLAG_OPTIMIZE_INVALIDATE> = 128;

        <android.view.ViewGroup: int FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE> = 65536;

        <android.view.ViewGroup: int FLAG_NOTIFY_ANIMATION_LISTENER> = 512;

        <android.view.ViewGroup: int FLAG_MASK_FOCUSABILITY> = 393216;

        <android.view.ViewGroup: int FLAG_INVALIDATE_REQUIRED> = 4;

        <android.view.ViewGroup: int FLAG_DISALLOW_INTERCEPT> = 524288;

        <android.view.ViewGroup: int FLAG_CLIP_TO_PADDING> = 2;

        <android.view.ViewGroup: int FLAG_CLIP_CHILDREN> = 1;

        <android.view.ViewGroup: int FLAG_CLEAR_TRANSFORMATION> = 256;

        <android.view.ViewGroup: int FLAG_CHILDREN_DRAWN_WITH_CACHE> = 32768;

        <android.view.ViewGroup: int FLAG_ANIMATION_DONE> = 16;

        <android.view.ViewGroup: int FLAG_ANIMATION_CACHE> = 64;

        <android.view.ViewGroup: int FLAG_ALWAYS_DRAWN_WITH_CACHE> = 16384;

        <android.view.ViewGroup: int FLAG_ALPHA_LOWER_THAN_ONE> = 4096;

        <android.view.ViewGroup: int FLAG_ADD_STATES_FROM_CHILDREN> = 8192;

        <android.view.ViewGroup: boolean DBG> = 0;

        <android.view.ViewGroup: int CLIP_TO_PADDING_MASK> = 34;

        <android.view.ViewGroup: int CHILD_TOP_INDEX> = 1;

        <android.view.ViewGroup: int CHILD_LEFT_INDEX> = 0;

        <android.view.ViewGroup: int ARRAY_INITIAL_CAPACITY> = 12;

        <android.view.ViewGroup: int ARRAY_CAPACITY_INCREMENT> = 12;

        $r0 = newarray (int)[3];

        $r0[0] = 131072;

        $r0[1] = 262144;

        $r0[2] = 393216;

        <android.view.ViewGroup: int[] DESCENDANT_FOCUSABILITY_FLAGS> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.view.ViewGroup $r0;
        android.content.Context $r1;
        android.graphics.Rect $r2;
        android.graphics.Paint $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.Rect mTempRect> = $r2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.Paint mCachePaint> = $r3;

        specialinvoke $r0.<android.view.ViewGroup: void initViewGroup()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.ViewGroup $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.Rect $r3;
        android.graphics.Paint $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.Rect mTempRect> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.Paint mCachePaint> = $r4;

        specialinvoke $r0.<android.view.ViewGroup: void initViewGroup()>();

        specialinvoke $r0.<android.view.ViewGroup: void initFromAttributes(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.view.ViewGroup $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.Rect $r3;
        android.graphics.Paint $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.Rect mTempRect> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.Paint mCachePaint> = $r4;

        specialinvoke $r0.<android.view.ViewGroup: void initViewGroup()>();

        specialinvoke $r0.<android.view.ViewGroup: void initFromAttributes(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    static void access$000(android.view.ViewGroup)
    {
        android.view.ViewGroup $r0;

        $r0 := @parameter0: android.view.ViewGroup;

        specialinvoke $r0.<android.view.ViewGroup: void notifyAnimationListener()>();

        return;
    }

    static android.view.animation.LayoutAnimationController access$100(android.view.ViewGroup)
    {
        android.view.ViewGroup $r0;
        android.view.animation.LayoutAnimationController r1;

        $r0 := @parameter0: android.view.ViewGroup;

        r1 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        return r1;
    }

    static android.view.animation.Animation$AnimationListener access$200(android.view.ViewGroup)
    {
        android.view.ViewGroup $r0;
        android.view.animation.Animation$AnimationListener r1;

        $r0 := @parameter0: android.view.ViewGroup;

        r1 = $r0.<android.view.ViewGroup: android.view.animation.Animation$AnimationListener mAnimationListener>;

        return r1;
    }

    private void addDisappearingView(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        java.util.ArrayList $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren> = $r2;

     label1:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    private void addInArray(android.view.View, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.view.View[] $r2, $r3;
        java.lang.IndexOutOfBoundsException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = lengthof $r2;

        if $i0 != $i1 goto label2;

        if $i2 != $i1 goto label1;

        $i0 = $i2 + 12;

        $r3 = newarray (android.view.View)[$i0];

        $r0.<android.view.ViewGroup: android.view.View[] mChildren> = $r3;

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i2);

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

     label1:
        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i1 = $i0 + 1;

        $r0.<android.view.ViewGroup: int mChildrenCount> = $i1;

        $r2[$i0] = $r1;

        return;

     label2:
        if $i0 >= $i1 goto label5;

        if $i2 != $i1 goto label4;

        $i2 = $i2 + 12;

        $r3 = newarray (android.view.View)[$i2];

        $r0.<android.view.ViewGroup: android.view.View[] mChildren> = $r3;

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = $i0 + 1;

        $i1 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r3, $i2, $i1);

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

     label3:
        $r2[$i0] = $r1;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i0 = $i0 + 1;

        $r0.<android.view.ViewGroup: int mChildrenCount> = $i0;

        return;

     label4:
        $i2 = $i0 + 1;

        $i1 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r2, $i2, $i1);

        goto label3;

     label5:
        $r4 = new java.lang.IndexOutOfBoundsException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    private void addViewInner(android.view.View, int, android.view.ViewGroup$LayoutParams, boolean)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r6;
        boolean $z0, $z1;
        android.view.View$AttachInfo $r2, $r7;
        int $i0;
        android.view.ViewGroup$LayoutParams $r3;
        android.view.ViewParent $r4;
        java.lang.IllegalStateException $r5;
        android.view.ViewGroup$OnHierarchyChangeListener $r8;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r3 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 := @parameter3: boolean;

        $r4 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == null goto label01;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The specified child already has a parent. You must call removeView() on the child\'s parent first.");

        throw $r5;

     label01:
        $z1 = virtualinvoke $r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        if $z1 != 0 goto label02;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

     label02:
        if $z0 == 0 goto label10;

        $r1.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams> = $r3;

     label03:
        if $i0 >= 0 goto label04;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

     label04:
        specialinvoke $r0.<android.view.ViewGroup: void addInArray(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label11;

        virtualinvoke $r1.<android.view.View: void assignParent(android.view.ViewParent)>($r0);

     label05:
        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label06;

        $r6 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        virtualinvoke $r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>($r1, $r6);

     label06:
        $r2 = $r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label08;

        $z0 = $r2.<android.view.View$AttachInfo: boolean mKeepScreenOn>;

        $r2.<android.view.View$AttachInfo: boolean mKeepScreenOn> = 0;

        $r7 = $r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r0.<android.view.View: int mViewFlags>;

        $i0 = $i0 & 12;

        virtualinvoke $r1.<android.view.View: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>($r7, $i0);

        $z1 = $r2.<android.view.View$AttachInfo: boolean mKeepScreenOn>;

        if $z1 == 0 goto label07;

        virtualinvoke $r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(1);

     label07:
        $r2.<android.view.View$AttachInfo: boolean mKeepScreenOn> = $z0;

     label08:
        $r8 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        if $r8 == null goto label09;

        $r8 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        interfaceinvoke $r8.<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>($r0, $r1);

     label09:
        $i0 = $r1.<android.view.View: int mViewFlags>;

        $i0 = $i0 & 4194304;

        if $i0 != 4194304 goto label12;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 65536;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;

     label10:
        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        goto label03;

     label11:
        $r1.<android.view.View: android.view.ViewParent mParent> = $r0;

        goto label05;

     label12:
        return;
    }

    private void bindLayoutAnimation(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.animation.LayoutAnimationController $r2;
        android.view.animation.Animation $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        $r3 = virtualinvoke $r2.<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>($r1);

        virtualinvoke $r1.<android.view.View: void setAnimation(android.view.animation.Animation)>($r3);

        return;
    }

    private void finishAnimatingView(android.view.View, android.view.animation.Animation)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.animation.Animation $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        android.view.View$AttachInfo $r4;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.animation.Animation;

        $r3 = $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren>;

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r4 = $r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label1;

        virtualinvoke $r1.<android.view.View: void dispatchDetachedFromWindow()>();

     label1:
        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 4;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

     label2:
        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<android.view.animation.Animation: boolean getFillAfter()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

     label3:
        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 65536;

        if $i0 != 65536 goto label4;

        virtualinvoke $r1.<android.view.View: void onAnimationEnd()>();

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & -65537;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 4;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;

     label4:
        return;
    }

    public static int getChildMeasureSpec(int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i1 = 0;

        $i4 = 0;

        lookupswitch($i3)
        {
            case -2147483648: goto label05;
            case 0: goto label08;
            case 1073741824: goto label02;
            default: goto label01;
        };

     label01:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, $i4);

        return $i0;

     label02:
        if $i2 < 0 goto label03;

        $i1 = $i2;

        $i4 = 1073741824;

        goto label01;

     label03:
        if $i2 != -1 goto label04;

        $i1 = $i0;

        $i4 = 1073741824;

        goto label01;

     label04:
        if $i2 != -2 goto label01;

        $i1 = $i0;

        $i4 = -2147483648;

        goto label01;

     label05:
        if $i2 < 0 goto label06;

        $i1 = $i2;

        $i4 = 1073741824;

        goto label01;

     label06:
        if $i2 != -1 goto label07;

        $i1 = $i0;

        $i4 = -2147483648;

        goto label01;

     label07:
        if $i2 != -2 goto label01;

        $i1 = $i0;

        $i4 = -2147483648;

        goto label01;

     label08:
        if $i2 < 0 goto label09;

        $i1 = $i2;

        $i4 = 1073741824;

        goto label01;

     label09:
        if $i2 != -1 goto label10;

        $i1 = 0;

        $i4 = 0;

        goto label01;

     label10:
        if $i2 != -2 goto label01;

        $i1 = 0;

        $i4 = 0;

        goto label01;
    }

    private void initFromAttributes(android.content.Context, android.util.AttributeSet)
    {
        android.view.ViewGroup $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0, $i1, $i2;
        boolean $z0;
        android.view.animation.LayoutAnimationController $r5;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = <com.android.internal.R$styleable: int[] ViewGroup>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getIndexCount()>();

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label11;

        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getIndex(int)>($i1);

        lookupswitch($i2)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label09;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label10;
            default: goto label02;
        };

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 1);

        virtualinvoke $r0.<android.view.ViewGroup: void setClipChildren(boolean)>($z0);

        goto label02;

     label04:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 1);

        virtualinvoke $r0.<android.view.ViewGroup: void setClipToPadding(boolean)>($z0);

        goto label02;

     label05:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 1);

        virtualinvoke $r0.<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>($z0);

        goto label02;

     label06:
        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i2, 2);

        virtualinvoke $r0.<android.view.ViewGroup: void setPersistentDrawingCache(int)>($i2);

        goto label02;

     label07:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 0);

        virtualinvoke $r0.<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>($z0);

        goto label02;

     label08:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 1);

        virtualinvoke $r0.<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>($z0);

        goto label02;

     label09:
        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, -1);

        if $i2 <= 0 goto label02;

        $r1 = $r0.<android.view.View: android.content.Context mContext>;

        $r5 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>($r1, $i2);

        virtualinvoke $r0.<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>($r5);

        goto label02;

     label10:
        $r3 = <android.view.ViewGroup: int[] DESCENDANT_FOCUSABILITY_FLAGS>;

        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i2, 0);

        $i2 = $r3[$i2];

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>($i2);

        goto label02;

     label11:
        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void initViewGroup()
    {
        android.view.ViewGroup $r0;
        int $i0;
        android.view.View[] $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.view.ViewGroup;

        virtualinvoke $r0.<android.view.View: void setFlags(int,int)>(128, 128);

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 1;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 2;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 16;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 64;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 16384;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>(131072);

        $r1 = newarray (android.view.View)[12];

        $r0.<android.view.ViewGroup: android.view.View[] mChildren> = $r1;

        $r0.<android.view.ViewGroup: int mChildrenCount> = 0;

        $r2 = $r0.<android.view.ViewGroup: android.graphics.Paint mCachePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(0);

        $r0.<android.view.ViewGroup: int mPersistentDrawingCache> = 2;

        return;
    }

    private void notifyAnimationListener()
    {
        android.view.ViewGroup $r0;
        android.view.ViewGroup$2 $r1;
        int $i0;
        android.view.animation.Animation$AnimationListener $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & -513;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 16;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $r2 = $r0.<android.view.ViewGroup: android.view.animation.Animation$AnimationListener mAnimationListener>;

        if $r2 == null goto label1;

        $r1 = new android.view.ViewGroup$2;

        specialinvoke $r1.<android.view.ViewGroup$2: void <init>(android.view.ViewGroup)>($r0);

        virtualinvoke $r0.<android.view.View: boolean post(java.lang.Runnable)>($r1);

     label1:
        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 64;

        if $i0 != 64 goto label2;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & -32769;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mPersistentDrawingCache>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>(0);

     label2:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    private void removeFromArray(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2;
        android.view.View[] $r1;
        android.view.View $r2;
        java.lang.IndexOutOfBoundsException $r3;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $r2 = $r1[$i0];

        $r2.<android.view.View: android.view.ViewParent mParent> = null;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = $i1 - 1;

        if $i0 != $i2 goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i0 = $i0 - 1;

        $r0.<android.view.ViewGroup: int mChildrenCount> = $i0;

        $r1[$i0] = null;

        return;

     label1:
        if $i0 < 0 goto label2;

        if $i0 >= $i1 goto label2;

        $i2 = $i0 + 1;

        $i1 = $i1 - $i0;

        $i1 = $i1 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r1, $i0, $i1);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i0 = $i0 - 1;

        $r0.<android.view.ViewGroup: int mChildrenCount> = $i0;

        $r1[$i0] = null;

        return;

     label2:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;
    }

    private void removeFromArray(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View[] $r1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i0 = $i2 + $i0;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        if $i2 != $i0 goto label1;

        return;

     label1:
        if $i0 != $i1 goto label3;

        $i1 = $i2;

     label2:
        if $i1 >= $i0 goto label7;

        $r2 = $r1[$i1];

        $r2.<android.view.View: android.view.ViewParent mParent> = null;

        $r1[$i1] = null;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i3 = $i2;

     label4:
        if $i3 >= $i0 goto label5;

        $r2 = $r1[$i3];

        $r2.<android.view.View: android.view.ViewParent mParent> = null;

        $i3 = $i3 + 1;

        goto label4;

     label5:
        $i3 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r1, $i2, $i3);

        $i3 = $i0 - $i2;

        $i3 = $i1 - $i3;

     label6:
        if $i3 >= $i1 goto label7;

        $r1[$i3] = null;

        $i3 = $i3 + 1;

        goto label6;

     label7:
        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = $i0 - $i2;

        $i2 = $i1 - $i2;

        $r0.<android.view.ViewGroup: int mChildrenCount> = $i2;

        return;
    }

    private void removeViewInternal(int, android.view.View)
    {
        android.view.ViewGroup $r0;
        int $i0;
        android.view.View $r1, $r3;
        android.view.animation.Animation $r2;
        boolean $z0;
        android.view.ViewGroup$OnHierarchyChangeListener $r4;
        android.view.View$AttachInfo $r5;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $z0 = 0;

        $r3 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 != $r3 goto label1;

        virtualinvoke $r1.<android.view.View: void clearFocusForRemoval()>();

        $z0 = 1;

     label1:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r2 == null goto label4;

        specialinvoke $r0.<android.view.ViewGroup: void addDisappearingView(android.view.View)>($r1);

     label2:
        $r4 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        if $r4 == null goto label3;

        $r4 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        interfaceinvoke $r4.<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>($r0, $r1);

     label3:
        virtualinvoke $r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(0);

        specialinvoke $r0.<android.view.ViewGroup: void removeFromArray(int)>($i0);

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<android.view.ViewGroup: void clearChildFocus(android.view.View)>($r1);

        return;

     label4:
        $r5 = $r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label2;

        virtualinvoke $r1.<android.view.View: void dispatchDetachedFromWindow()>();

        goto label2;

     label5:
        return;
    }

    private void removeViewInternal(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r1);

        if $i0 < 0 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void removeViewInternal(int,android.view.View)>($i0, $r1);

        return;

     label1:
        return;
    }

    private void removeViewsInternal(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View[] $r1;
        android.view.View $r2, $r4, $r7;
        android.view.ViewGroup$OnHierarchyChangeListener $r3;
        android.view.animation.Animation $r5;
        boolean $z0, $z1;
        android.view.View$AttachInfo $r6;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        if $r3 == null goto label07;

        $z0 = 1;

     label01:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $r6 = $r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r6 == null goto label08;

        $z1 = 1;

     label02:
        $r7 = null;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = $i0 + $i1;

        $i3 = $i0;

     label03:
        if $i3 >= $i2 goto label10;

        $r4 = $r1[$i3];

        if $r4 != $r2 goto label04;

        virtualinvoke $r4.<android.view.View: void clearFocusForRemoval()>();

        $r7 = $r4;

     label04:
        $r5 = virtualinvoke $r4.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r5 == null goto label09;

        specialinvoke $r0.<android.view.ViewGroup: void addDisappearingView(android.view.View)>($r4);

     label05:
        virtualinvoke $r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(0);

        if $z0 == 0 goto label06;

        interfaceinvoke $r3.<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>($r0, $r4);

     label06:
        $i3 = $i3 + 1;

        goto label03;

     label07:
        $z0 = 0;

        goto label01;

     label08:
        $z1 = 0;

        goto label02;

     label09:
        if $z1 == 0 goto label05;

        virtualinvoke $r4.<android.view.View: void dispatchDetachedFromWindow()>();

        goto label05;

     label10:
        specialinvoke $r0.<android.view.ViewGroup: void removeFromArray(int,int)>($i0, $i1);

        if $r7 == null goto label11;

        virtualinvoke $r0.<android.view.ViewGroup: void clearChildFocus(android.view.View)>($r7);

        return;

     label11:
        return;
    }

    private void setBooleanFlag(int, boolean)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i1 | $i0;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;

     label1:
        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 ^ -1;

        $i0 = $i1 & $i0;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;
    }

    public void addFocusables(java.util.ArrayList, int)
    {
        android.view.ViewGroup $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2;
        android.view.View[] $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i3 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i3 == 393216 goto label3;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i4 = 0;

     label1:
        if $i4 >= $i1 goto label3;

        $r2 = $r3[$i4];

        $i5 = $r2.<android.view.View: int mViewFlags>;

        $i5 = $i5 & 12;

        if $i5 != 0 goto label2;

        virtualinvoke $r2.<android.view.View: void addFocusables(java.util.ArrayList,int)>($r1, $i0);

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        if $i3 != 262144 goto label4;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 != $i1 goto label5;

     label4:
        specialinvoke $r0.<android.view.View: void addFocusables(java.util.ArrayList,int)>($r1, $i0);

        return;

     label5:
        return;
    }

    public boolean addStatesFromChildren()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 8192;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.view.ViewGroup $r0;
        java.util.ArrayList $r1;
        android.view.View $r2;
        android.view.View[] $r3;
        int $i0, $i1, $i2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: java.util.ArrayList;

        specialinvoke $r0.<android.view.View: void addTouchables(java.util.ArrayList)>($r1);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r3[$i1];

        $i2 = $r2.<android.view.View: int mViewFlags>;

        $i2 = $i2 & 12;

        if $i2 != 0 goto label2;

        virtualinvoke $r2.<android.view.View: void addTouchables(java.util.ArrayList)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void addView(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int)>($r1, -1);

        return;
    }

    public void addView(android.view.View, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        android.view.ViewGroup$LayoutParams $r3, $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = $r3;

        if $r3 != null goto label1;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        $r4 = $r3;

        if $r3 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("generateDefaultLayoutParams() cannot return null");

        throw $r2;

     label1:
        virtualinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r4);

        return;
    }

    public void addView(android.view.View, int, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        $r2.<android.view.ViewGroup$LayoutParams: int width> = $i0;

        $r2.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        virtualinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, -1, $r2);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        specialinvoke $r0.<android.view.ViewGroup: void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r2, 0);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        virtualinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, -1, $r2);

        return;
    }

    protected boolean addViewInLayout(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r2, 0);

        return $z0;
    }

    protected boolean addViewInLayout(android.view.View, int, android.view.ViewGroup$LayoutParams, boolean)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 := @parameter3: boolean;

        $r1.<android.view.View: android.view.ViewParent mParent> = null;

        specialinvoke $r0.<android.view.ViewGroup: void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r2, $z0);

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 | 32;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

        return 1;
    }

    protected void attachLayoutAnimationParameters(android.view.View, android.view.ViewGroup$LayoutParams, int, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1;
        android.view.animation.LayoutAnimationController$AnimationParameters $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = $r2.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters>;

        if $r3 != null goto label1;

        $r3 = new android.view.animation.LayoutAnimationController$AnimationParameters;

        specialinvoke $r3.<android.view.animation.LayoutAnimationController$AnimationParameters: void <init>()>();

        $r2.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters> = $r3;

     label1:
        $r3.<android.view.animation.LayoutAnimationController$AnimationParameters: int count> = $i1;

        $r3.<android.view.animation.LayoutAnimationController$AnimationParameters: int index> = $i0;

        return;
    }

    protected void attachViewToParent(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r3;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $r1.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams> = $r2;

        if $i0 >= 0 goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void addInArray(android.view.View,int)>($r1, $i0);

        $r1.<android.view.View: android.view.ViewParent mParent> = $r0;

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 | 32;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        virtualinvoke $r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>($r1, $r3);

        return;

     label2:
        return;
    }

    public void bringChildToFront(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r1);

        if $i0 < 0 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void removeFromArray(int)>($i0);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        specialinvoke $r0.<android.view.ViewGroup: void addInArray(android.view.View,int)>($r1, $i0);

        $r1.<android.view.View: android.view.ViewParent mParent> = $r0;

        return;

     label1:
        return;
    }

    protected boolean canAnimate()
    {
        android.view.ViewGroup $r0;
        android.view.animation.LayoutAnimationController $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.ViewGroup$LayoutParams $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void childDrawableStateChanged(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 8192;

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.view.View: void refreshDrawableState()>();

        return;

     label1:
        return;
    }

    protected void cleanupLayoutState(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & -4097;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

        return;
    }

    public void clearChildFocus(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r0.<android.view.ViewGroup: android.view.View mFocused> = null;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void clearChildFocus(android.view.View)>($r0);

        return;

     label1:
        return;
    }

    public void clearDisappearingChildren()
    {
        android.view.ViewGroup $r0;
        java.util.ArrayList $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 = $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;

     label1:
        return;
    }

    public void clearFocus()
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        specialinvoke $r0.<android.view.View: void clearFocus()>();

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        virtualinvoke $r1.<android.view.View: void clearFocus()>();

        return;

     label1:
        return;
    }

    protected void debug(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;
        android.view.View[] $r4;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.View: void debug(int)>($i0);

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 == null goto label1;

        $r2 = staticinvoke <android.view.ViewGroup: java.lang.String debugIndent(int)>($i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFocused");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r2);

     label1:
        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        if $i1 == 0 goto label2;

        $r2 = staticinvoke <android.view.ViewGroup: java.lang.String debugIndent(int)>($i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r2);

     label2:
        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $r4 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $r1 = $r4[$i2];

        $i3 = $i0 + 1;

        virtualinvoke $r1.<android.view.View: void debug(int)>($i3);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        if $i1 == 0 goto label5;

        $r2 = staticinvoke <android.view.ViewGroup: java.lang.String debugIndent(int)>($i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r2);

        return;

     label5:
        return;
    }

    protected void detachAllViewsFromParent()
    {
        android.view.ViewGroup $r0;
        android.view.View[] $r1;
        int $i0;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        if $i0 > 0 goto label1;

        return;

     label1:
        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $r0.<android.view.ViewGroup: int mChildrenCount> = 0;

        $i0 = $i0 - 1;

     label2:
        if $i0 < 0 goto label3;

        $r2 = $r1[$i0];

        $r2.<android.view.View: android.view.ViewParent mParent> = null;

        $r1[$i0] = null;

        $i0 = $i0 + -1;

        goto label2;

     label3:
        return;
    }

    protected void detachViewFromParent(int)
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.ViewGroup: void removeFromArray(int)>($i0);

        return;
    }

    protected void detachViewFromParent(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r1);

        specialinvoke $r0.<android.view.ViewGroup: void removeFromArray(int)>($i0);

        return;
    }

    protected void detachViewsFromParent(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.ViewGroup: void removeFromArray(int,int)>($i0, $i1);

        return;
    }

    void dispatchAttachedToWindow(android.view.View$AttachInfo, int)
    {
        android.view.ViewGroup $r0;
        android.view.View$AttachInfo $r1;
        android.view.View[] $r2;
        int $i0, $i1, $i2;
        android.view.View $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View$AttachInfo;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.view.View: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>($r1, $i0);

        $i1 = $r0.<android.view.View: int mViewFlags>;

        $i1 = $i1 & 12;

        $i1 = $i0 | $i1;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r3 = $r2[$i2];

        virtualinvoke $r3.<android.view.View: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>($r1, $i1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchCollectViewAttributes(int)
    {
        android.view.ViewGroup $r0;
        android.view.View[] $r1;
        int $i0, $i1, $i2;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.view.View: int mViewFlags>;

        $i1 = $i1 & 12;

        $i1 = $i0 | $i1;

        specialinvoke $r0.<android.view.View: void dispatchCollectViewAttributes(int)>($i1);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<android.view.View: void dispatchCollectViewAttributes(int)>($i1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchDetachedFromWindow()
    {
        android.view.ViewGroup $r0;
        android.view.View[] $r1;
        int $i0, $i2;
        android.view.View $r2;
        long $l1;
        android.view.MotionEvent $r3;

        $r0 := @this: android.view.ViewGroup;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mMotionTarget>;

        if $r2 == null goto label1;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l1, $l1, 3, 0.0F, 0.0F, 0);

        $r2 = $r0.<android.view.ViewGroup: android.view.View mMotionTarget>;

        virtualinvoke $r2.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r3);

        virtualinvoke $r3.<android.view.MotionEvent: void recycle()>();

        $r0.<android.view.ViewGroup: android.view.View mMotionTarget> = null;

     label1:
        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label3;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<android.view.View: void dispatchDetachedFromWindow()>();

        $i2 = $i2 + 1;

        goto label2;

     label3:
        specialinvoke $r0.<android.view.View: void dispatchDetachedFromWindow()>();

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.view.ViewGroup $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.ViewGroup$1 $r2;
        android.view.View[] $r3;
        boolean $z0, $z1, $z2;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.view.animation.LayoutAnimationController $r6;
        android.view.animation.Animation$AnimationListener $r7;
        android.view.animation.Animation $r8;
        long $l8;
        java.util.ArrayList $r9;
        java.lang.Object $r10;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label08;

        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean canAnimate()>();

        if $z0 == 0 goto label08;

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 & 64;

        if $i2 != 64 goto label04;

        $z0 = 1;

     label01:
        $i2 = 0;

     label02:
        if $i2 >= $i0 goto label05;

        $r4 = $r3[$i2];

        $i3 = $r4.<android.view.View: int mViewFlags>;

        $i3 = $i3 & 12;

        if $i3 != 0 goto label03;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r0.<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int)>($r4, $r5, $i2, $i0);

        specialinvoke $r0.<android.view.ViewGroup: void bindLayoutAnimation(android.view.View)>($r4);

        if $z0 == 0 goto label03;

        virtualinvoke $r4.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

        virtualinvoke $r4.<android.view.View: void buildDrawingCache()>();

     label03:
        $i2 = $i2 + 1;

        goto label02;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        $r6 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        $z1 = virtualinvoke $r6.<android.view.animation.LayoutAnimationController: boolean willOverlap()>();

        if $z1 == 0 goto label06;

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 | 128;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i2;

     label06:
        virtualinvoke $r6.<android.view.animation.LayoutAnimationController: void start()>();

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 & -9;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i2;

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 & -17;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i2;

        if $z0 == 0 goto label07;

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 | 32768;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i2;

     label07:
        $r7 = $r0.<android.view.ViewGroup: android.view.animation.Animation$AnimationListener mAnimationListener>;

        if $r7 == null goto label08;

        $r7 = $r0.<android.view.ViewGroup: android.view.animation.Animation$AnimationListener mAnimationListener>;

        $r8 = virtualinvoke $r6.<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>();

        interfaceinvoke $r7.<android.view.animation.Animation$AnimationListener: void onAnimationStart(android.view.animation.Animation)>($r8);

     label08:
        $i2 = 0;

        $i3 = $i1 & 34;

        if $i3 != 34 goto label14;

        $z1 = 1;

     label09:
        if $z1 == 0 goto label10;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i3 = $r0.<android.view.View: int mScrollX>;

        $i4 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $i3 + $i4;

        $i4 = $r0.<android.view.View: int mScrollY>;

        $i5 = $r0.<android.view.View: int mPaddingTop>;

        $i4 = $i4 + $i5;

        $i5 = $r0.<android.view.View: int mScrollX>;

        $i6 = $r0.<android.view.View: int mRight>;

        $i5 = $i5 + $i6;

        $i6 = $r0.<android.view.View: int mLeft>;

        $i5 = $i5 - $i6;

        $i6 = $r0.<android.view.View: int mPaddingRight>;

        $i5 = $i5 - $i6;

        $i6 = $r0.<android.view.View: int mScrollY>;

        $i7 = $r0.<android.view.View: int mBottom>;

        $i6 = $i6 + $i7;

        $i7 = $r0.<android.view.View: int mTop>;

        $i6 = $i6 - $i7;

        $i7 = $r0.<android.view.View: int mPaddingBottom>;

        $i6 = $i6 - $i7;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i3, $i4, $i5, $i6);

     label10:
        $i3 = $r0.<android.view.View: int mPrivateFlags>;

        $i3 = $i3 & -65;

        $r0.<android.view.View: int mPrivateFlags> = $i3;

        $i3 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i3 = $i3 & -5;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i3;

        $z0 = 0;

        $l8 = virtualinvoke $r0.<android.view.View: long getDrawingTime()>();

        $i1 = $i1 & 1024;

        if $i1 != 0 goto label15;

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label19;

        $r4 = $r3[$i1];

        $i3 = $r4.<android.view.View: int mViewFlags>;

        $i3 = $i3 & 12;

        if $i3 == 0 goto label12;

        $r8 = virtualinvoke $r4.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r8 == null goto label13;

     label12:
        $z2 = virtualinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r4, $l8);

        $z0 = $z0 | $z2;

     label13:
        $i1 = $i1 + 1;

        goto label11;

     label14:
        $z1 = 0;

        goto label09;

     label15:
        $i1 = 0;

     label16:
        if $i1 >= $i0 goto label19;

        $i3 = virtualinvoke $r0.<android.view.ViewGroup: int getChildDrawingOrder(int,int)>($i0, $i1);

        $r4 = $r3[$i3];

        $i3 = $r4.<android.view.View: int mViewFlags>;

        $i3 = $i3 & 12;

        if $i3 == 0 goto label17;

        $r8 = virtualinvoke $r4.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r8 == null goto label18;

     label17:
        $z2 = virtualinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r4, $l8);

        $z0 = $z0 | $z2;

     label18:
        $i1 = $i1 + 1;

        goto label16;

     label19:
        $r9 = $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren>;

        if $r9 == null goto label21;

        $r9 = $r0.<android.view.ViewGroup: java.util.ArrayList mDisappearingChildren>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label20:
        if $i0 < 0 goto label21;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (android.view.View) $r10;

        $z2 = virtualinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r4, $l8);

        $z0 = $z0 | $z2;

        $i0 = $i0 + -1;

        goto label20;

     label21:
        if $z1 == 0 goto label22;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label22:
        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i1 = $i0 & 4;

        if $i1 != 4 goto label23;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label23:
        $i1 = $i0 & 16;

        if $i1 != 0 goto label24;

        $i0 = $i0 & 512;

        if $i0 != 0 goto label25;

        $r6 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        $z1 = virtualinvoke $r6.<android.view.animation.LayoutAnimationController: boolean isDone()>();

        if $z1 == 0 goto label26;

        if $z0 != 0 goto label27;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 512;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $r2 = new android.view.ViewGroup$1;

        specialinvoke $r2.<android.view.ViewGroup$1: void <init>(android.view.ViewGroup)>($r0);

        virtualinvoke $r0.<android.view.View: boolean post(java.lang.Runnable)>($r2);

        return;

     label24:
        return;

     label25:
        return;

     label26:
        return;

     label27:
        return;
    }

    protected void dispatchFreezeSelfOnly(android.util.SparseArray)
    {
        android.view.ViewGroup $r0;
        android.util.SparseArray $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.util.SparseArray;

        specialinvoke $r0.<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>($r1);

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.view.ViewGroup $r0;
        android.view.KeyEvent $r1;
        int $i0;
        boolean $z0;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 18;

        if $i0 != 18 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label1:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $i0 = $r2.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 16;

        if $i0 != 16 goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label2:
        return 0;
    }

    public boolean dispatchKeyEventPreIme(android.view.KeyEvent)
    {
        android.view.ViewGroup $r0;
        android.view.KeyEvent $r1;
        int $i0;
        boolean $z0;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 18;

        if $i0 != 18 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>($r1);

        return $z0;

     label1:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $i0 = $r2.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 16;

        if $i0 != 16 goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>($r1);

        return $z0;

     label2:
        return 0;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.view.ViewGroup $r0;
        android.view.KeyEvent $r1;
        int $i0;
        boolean $z0;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 18;

        if $i0 != 18 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label1:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $i0 = $r2.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 16;

        if $i0 != 16 goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label2:
        return 0;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.view.ViewGroup $r0;
        android.util.SparseArray $r1;
        android.view.View[] $r2;
        int $i0, $i1;
        android.view.View $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.util.SparseArray;

        specialinvoke $r0.<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>($r1);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        virtualinvoke $r3.<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void dispatchSaveInstanceState(android.util.SparseArray)
    {
        android.view.ViewGroup $r0;
        android.util.SparseArray $r1;
        android.view.View[] $r2;
        int $i0, $i1;
        android.view.View $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.util.SparseArray;

        specialinvoke $r0.<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>($r1);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        virtualinvoke $r3.<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void dispatchSetPressed(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        android.view.View[] $r1;
        int $i0, $i1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<android.view.View: void setPressed(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void dispatchSetSelected(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        android.view.View[] $r1;
        int $i0, $i1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<android.view.View: void setSelected(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void dispatchThawSelfOnly(android.util.SparseArray)
    {
        android.view.ViewGroup $r0;
        android.util.SparseArray $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.util.SparseArray;

        specialinvoke $r0.<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>($r1);

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.view.ViewGroup $r0;
        android.view.MotionEvent $r1;
        android.view.View $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect $r3;
        boolean $z0, $z1;
        android.view.View[] $r4;
        android.view.animation.Animation $r5;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.MotionEvent;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = $r0.<android.view.View: int mScrollX>;

        $f1 = (float) $i0;

        $f0 = $f2 + $f1;

        $i0 = $r0.<android.view.View: int mScrollY>;

        $f1 = (float) $i0;

        $f1 = $f3 + $f1;

        $r3 = $r0.<android.view.ViewGroup: android.graphics.Rect mTempRect>;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 524288;

        if $i0 == 0 goto label06;

        $z0 = 1;

     label01:
        if $i2 != 0 goto label08;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mMotionTarget>;

        if $r2 == null goto label02;

        $r0.<android.view.ViewGroup: android.view.View mMotionTarget> = null;

     label02:
        if $z0 != 0 goto label03;

        $z1 = virtualinvoke $r0.<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        if $z1 != 0 goto label08;

     label03:
        virtualinvoke $r1.<android.view.MotionEvent: void setAction(int)>(0);

        $i0 = (int) $f0;

        $i1 = (int) $f1;

        $r4 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i3 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i3 = $i3 - 1;

     label04:
        if $i3 < 0 goto label08;

        $r2 = $r4[$i3];

        $i4 = $r2.<android.view.View: int mViewFlags>;

        $i4 = $i4 & 12;

        if $i4 == 0 goto label05;

        $r5 = virtualinvoke $r2.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r5 == null goto label07;

     label05:
        virtualinvoke $r2.<android.view.View: void getHitRect(android.graphics.Rect)>($r3);

        $z1 = virtualinvoke $r3.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        if $z1 == 0 goto label07;

        $i4 = $r2.<android.view.View: int mLeft>;

        $f4 = (float) $i4;

        $f4 = $f0 - $f4;

        $i4 = $r2.<android.view.View: int mTop>;

        $f5 = (float) $i4;

        $f5 = $f1 - $f5;

        virtualinvoke $r1.<android.view.MotionEvent: void setLocation(float,float)>($f4, $f5);

        $z1 = virtualinvoke $r2.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        if $z1 == 0 goto label07;

        $r0.<android.view.ViewGroup: android.view.View mMotionTarget> = $r2;

        return 1;

     label06:
        $z0 = 0;

        goto label01;

     label07:
        $i3 = $i3 + -1;

        goto label04;

     label08:
        if $i2 == 1 goto label09;

        if $i2 != 3 goto label12;

     label09:
        $z1 = 1;

     label10:
        if $z1 == 0 goto label11;

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 & -524289;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i2;

     label11:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mMotionTarget>;

        if $r2 != null goto label13;

        virtualinvoke $r1.<android.view.MotionEvent: void setLocation(float,float)>($f2, $f3);

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label12:
        $z1 = 0;

        goto label10;

     label13:
        if $z0 != 0 goto label15;

        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label15;

        $i2 = $r2.<android.view.View: int mLeft>;

        $f2 = (float) $i2;

        $f0 = $f0 - $f2;

        $i2 = $r2.<android.view.View: int mTop>;

        $f2 = (float) $i2;

        $f1 = $f1 - $f2;

        virtualinvoke $r1.<android.view.MotionEvent: void setAction(int)>(3);

        virtualinvoke $r1.<android.view.MotionEvent: void setLocation(float,float)>($f0, $f1);

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 != 0 goto label14;

     label14:
        $r0.<android.view.ViewGroup: android.view.View mMotionTarget> = null;

        return 1;

     label15:
        if $z1 == 0 goto label16;

        $r0.<android.view.ViewGroup: android.view.View mMotionTarget> = null;

     label16:
        $i2 = $r2.<android.view.View: int mLeft>;

        $f2 = (float) $i2;

        $f0 = $f0 - $f2;

        $i2 = $r2.<android.view.View: int mTop>;

        $f2 = (float) $i2;

        $f1 = $f1 - $f2;

        virtualinvoke $r1.<android.view.MotionEvent: void setLocation(float,float)>($f0, $f1);

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.view.ViewGroup $r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 18;

        if $i0 != 18 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $i0 = $r2.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 16;

        if $i0 != 16 goto label2;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label2:
        return 0;
    }

    public boolean dispatchUnhandledMove(android.view.View, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dispatchWindowFocusChanged(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        android.view.View[] $r1;
        int $i0, $i1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.View: void dispatchWindowFocusChanged(boolean)>($z0);

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<android.view.View: void dispatchWindowFocusChanged(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void dispatchWindowVisibilityChanged(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2;
        android.view.View[] $r1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.View: void dispatchWindowVisibilityChanged(int)>($i0);

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<android.view.View: void dispatchWindowVisibilityChanged(int)>($i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.view.ViewGroup $r0;
        android.graphics.Canvas $r1;
        android.view.View $r2;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2;
        android.view.animation.Transformation $r3, $r6;
        android.view.animation.Animation $r4;
        android.graphics.RectF $r5;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Canvas$EdgeType $r7;
        android.graphics.Bitmap $r8;
        android.graphics.Matrix $r9;
        byte $b12;
        android.graphics.Paint $r10;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.view.View;

        $l0 := @parameter2: long;

        $z0 = 0;

        $i3 = $r2.<android.view.View: int mLeft>;

        $i4 = $r2.<android.view.View: int mTop>;

        $i5 = $r2.<android.view.View: int mRight>;

        $i6 = $r2.<android.view.View: int mBottom>;

        $i7 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i1 = $i7 & 256;

        if $i1 != 256 goto label02;

        $r3 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        if $r3 == null goto label01;

        $r3 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        virtualinvoke $r3.<android.view.animation.Transformation: void clear()>();

     label01:
        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i1 = $i1 & -257;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i1;

     label02:
        $r3 = null;

        $r4 = virtualinvoke $r2.<android.view.View: android.view.animation.Animation getAnimation()>();

        $z1 = 0;

        if $r4 == null goto label09;

        $r5 = $r0.<android.view.ViewGroup: android.graphics.RectF mInvalidateRegion>;

        if $r5 != null goto label03;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        $r0.<android.view.ViewGroup: android.graphics.RectF mInvalidateRegion> = $r5;

     label03:
        $r5 = $r0.<android.view.ViewGroup: android.graphics.RectF mInvalidateRegion>;

        $z0 = virtualinvoke $r4.<android.view.animation.Animation: boolean isInitialized()>();

        if $z0 != 0 goto label04;

        $i1 = $i5 - $i3;

        $i2 = $i6 - $i4;

        $i8 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i9 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        virtualinvoke $r4.<android.view.animation.Animation: void initialize(int,int,int,int)>($i1, $i2, $i8, $i9);

        $i1 = $i5 - $i3;

        $i2 = $i6 - $i4;

        virtualinvoke $r4.<android.view.animation.Animation: void initializeInvalidateRegion(int,int,int,int)>(0, 0, $i1, $i2);

        virtualinvoke $r2.<android.view.View: void onAnimationStart()>();

     label04:
        $r3 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        if $r3 != null goto label05;

        $r3 = new android.view.animation.Transformation;

        specialinvoke $r3.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation> = $r3;

     label05:
        $r3 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        $z2 = virtualinvoke $r4.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>($l0, $r3);

        $z0 = $z2;

        $r6 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        $r3 = $r6;

        $z1 = virtualinvoke $r4.<android.view.animation.Animation: boolean willChangeTransformationMatrix()>();

        if $z2 == 0 goto label06;

        $z2 = virtualinvoke $r4.<android.view.animation.Animation: boolean willChangeBounds()>();

        if $z2 != 0 goto label08;

        $i1 = $i7 & 144;

        if $i1 != 128 goto label07;

        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i1 = $i1 | 4;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i1;

     label06:
        $i1 = $r2.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 | 32;

        $r2.<android.view.View: int mPrivateFlags> = $i1;

        if $z1 != 0 goto label15;

        $f0 = (float) $i3;

        $f1 = (float) $i4;

        $f2 = (float) $i5;

        $f3 = (float) $i6;

        $r7 = <android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType BW>;

        $z2 = virtualinvoke $r1.<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType)>($f0, $f1, $f2, $f3, $r7);

        if $z2 == 0 goto label15;

        $i1 = $r2.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 & 64;

        if $i1 != 0 goto label15;

        return $z0;

     label07:
        $i1 = $i7 & 4;

        if $i1 != 0 goto label06;

        $i1 = $r0.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 | 64;

        $r0.<android.view.View: int mPrivateFlags> = $i1;

        virtualinvoke $r0.<android.view.View: void invalidate(int,int,int,int)>($i3, $i4, $i5, $i6);

        goto label06;

     label08:
        $i1 = $i5 - $i3;

        $i2 = $i6 - $i4;

        virtualinvoke $r4.<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)>(0, 0, $i1, $i2, $r5, $r6);

        $i1 = $r0.<android.view.View: int mPrivateFlags>;

        $i1 = $i1 | 64;

        $r0.<android.view.View: int mPrivateFlags> = $i1;

        $f0 = $r5.<android.graphics.RectF: float left>;

        $i1 = (int) $f0;

        $i1 = $i3 + $i1;

        $f0 = $r5.<android.graphics.RectF: float top>;

        $i2 = (int) $f0;

        $i2 = $i4 + $i2;

        $f0 = virtualinvoke $r5.<android.graphics.RectF: float width()>();

        $i8 = (int) $f0;

        $i8 = $i8 + $i1;

        $f0 = virtualinvoke $r5.<android.graphics.RectF: float height()>();

        $i9 = (int) $f0;

        $i9 = $i9 + $i2;

        virtualinvoke $r0.<android.view.View: void invalidate(int,int,int,int)>($i1, $i2, $i8, $i9);

        goto label06;

     label09:
        $i1 = $i7 & 2048;

        if $i1 != 2048 goto label06;

        $r6 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        if $r6 != null goto label10;

        $r6 = new android.view.animation.Transformation;

        specialinvoke $r6.<android.view.animation.Transformation: void <init>()>();

        $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation> = $r6;

     label10:
        $r6 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        $z2 = virtualinvoke $r0.<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>($r2, $r6);

        if $z2 == 0 goto label06;

        $r3 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

        $i1 = virtualinvoke $r3.<android.view.animation.Transformation: int getTransformationType()>();

        $i2 = <android.view.animation.Transformation: int TYPE_IDENTITY>;

        if $i1 == $i2 goto label13;

        $r3 = $r0.<android.view.ViewGroup: android.view.animation.Transformation mChildTransformation>;

     label11:
        $i2 = <android.view.animation.Transformation: int TYPE_MATRIX>;

        $i1 = $i2 & $i1;

        if $i1 == 0 goto label14;

        $z1 = 1;

     label12:
        goto label06;

     label13:
        $r3 = null;

        goto label11;

     label14:
        $z1 = 0;

        goto label12;

     label15:
        virtualinvoke $r2.<android.view.View: void computeScroll()>();

        $i2 = $r2.<android.view.View: int mScrollX>;

        $i8 = $r2.<android.view.View: int mScrollY>;

        $r8 = null;

        $i1 = 32768 & $i7;

        if $i1 == 32768 goto label16;

        $i1 = $i7 & 16384;

        if $i1 != 16384 goto label17;

     label16:
        $r8 = virtualinvoke $r2.<android.view.View: android.graphics.Bitmap getDrawingCache()>();

     label17:
        if $r8 != null goto label26;

        $z2 = 1;

     label18:
        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        if $z2 == 0 goto label27;

        $i9 = $i3 - $i2;

        $f0 = (float) $i9;

        $i9 = $i4 - $i8;

        $f1 = (float) $i9;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label19:
        $f0 = 1.0F;

        if $r3 == null goto label29;

        if $z1 == 0 goto label21;

        $i9 = 0;

        $i10 = 0;

        if $z2 == 0 goto label20;

        $i9 = neg $i2;

        $i10 = neg $i8;

     label20:
        $i11 = neg $i9;

        $f0 = (float) $i11;

        $i11 = neg $i10;

        $f1 = (float) $i11;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r9 = virtualinvoke $r3.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r9);

        $f0 = (float) $i9;

        $f1 = (float) $i10;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $i9 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i9 = $i9 | 256;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i9;

     label21:
        $f1 = virtualinvoke $r3.<android.view.animation.Transformation: float getAlpha()>();

        $f0 = $f1;

        $b12 = $f1 cmpg 1.0F;

        if $b12 >= 0 goto label22;

        $i9 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i9 = $i9 | 256;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i9;

     label22:
        $b12 = $f1 cmpg 1.0F;

        if $b12 >= 0 goto label23;

        if $z2 == 0 goto label23;

        $f1 = 255.0F * $f1;

        $i9 = (int) $f1;

        $z1 = virtualinvoke $r2.<android.view.View: boolean onSetAlpha(int)>($i9);

        if $z1 != 0 goto label28;

        $f1 = (float) $i2;

        $f2 = (float) $i8;

        $i10 = $i2 + $i5;

        $i10 = $i10 - $i3;

        $f3 = (float) $i10;

        $i10 = $i8 + $i6;

        $i10 = $i10 - $i4;

        $f4 = (float) $i10;

        virtualinvoke $r1.<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>($f1, $f2, $f3, $f4, $i9, 20);

     label23:
        $i9 = $i7 & 1;

        if $i9 != 1 goto label24;

        if $z2 == 0 goto label30;

        $i3 = $i5 - $i3;

        $i3 = $i3 + $i2;

        $i4 = $i6 - $i4;

        $i4 = $i4 + $i8;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i2, $i8, $i3, $i4);

     label24:
        if $z2 == 0 goto label32;

        $i7 = $r2.<android.view.View: int mPrivateFlags>;

        $i7 = $i7 & 128;

        if $i7 != 128 goto label31;

        virtualinvoke $r2.<android.view.View: void dispatchDraw(android.graphics.Canvas)>($r1);

     label25:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);

        if $r4 == null goto label35;

        if $z0 != 0 goto label36;

        virtualinvoke $r2.<android.view.View: boolean onSetAlpha(int)>(255);

        specialinvoke $r0.<android.view.ViewGroup: void finishAnimatingView(android.view.View,android.view.animation.Animation)>($r2, $r4);

        return $z0;

     label26:
        $z2 = 0;

        goto label18;

     label27:
        $f0 = (float) $i3;

        $f1 = (float) $i4;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        goto label19;

     label28:
        $i9 = $r2.<android.view.View: int mPrivateFlags>;

        $i9 = $i9 | 262144;

        $r2.<android.view.View: int mPrivateFlags> = $i9;

        goto label23;

     label29:
        $i9 = $r2.<android.view.View: int mPrivateFlags>;

        $i9 = $i9 & 262144;

        if $i9 != 262144 goto label23;

        virtualinvoke $r2.<android.view.View: boolean onSetAlpha(int)>(255);

        goto label23;

     label30:
        $i3 = $i5 - $i3;

        $i4 = $i6 - $i4;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, 0, $i3, $i4);

        goto label24;

     label31:
        virtualinvoke $r2.<android.view.View: void draw(android.graphics.Canvas)>($r1);

        goto label25;

     label32:
        $r10 = $r0.<android.view.ViewGroup: android.graphics.Paint mCachePaint>;

        $b12 = $f0 cmpg 1.0F;

        if $b12 >= 0 goto label34;

        $f0 = 255.0F * $f0;

        $i7 = (int) $f0;

        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>($i7);

        $i7 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i7 = $i7 | 4096;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i7;

     label33:
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r8, 0.0F, 0.0F, $r10);

        goto label25;

     label34:
        $i7 = $i7 & 4096;

        if $i7 != 4096 goto label33;

        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>(255);

        $i7 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i7 = $i7 & -4097;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i7;

        goto label33;

     label35:
        return $z0;

     label36:
        return $z0;
    }

    protected void drawableStateChanged()
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.View[] $r2;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.view.ViewGroup;

        specialinvoke $r0.<android.view.View: void drawableStateChanged()>();

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 65536;

        if $i0 == 0 goto label4;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 8192;

        if $i0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("addStateFromChildren cannot be enabled if a child has duplicateParentState set to true");

        throw $r3;

     label1:
        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r1 = $r2[$i1];

        $i2 = $r1.<android.view.View: int mViewFlags>;

        $i2 = $i2 & 4194304;

        if $i2 == 0 goto label3;

        virtualinvoke $r1.<android.view.View: void refreshDrawableState()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;

     label5:
        return;
    }

    public android.view.View findFocus()
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findFocus()>();

        return $r1;

     label2:
        return null;
    }

    protected android.view.View findViewTraversal(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View[] $r1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.view.View: int mID>;

        if $i0 != $i1 goto label1;

        return $r0;

     label1:
        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label4;

        $r2 = $r1[$i2];

        $i3 = $r2.<android.view.View: int mPrivateFlags>;

        $i3 = $i3 & 8;

        if $i3 != 0 goto label3;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>($i0);

        if $r2 == null goto label3;

        return $r2;

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        return null;
    }

    protected android.view.View findViewWithTagTraversal(java.lang.Object)
    {
        android.view.ViewGroup $r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1, $i2;
        android.view.View[] $r2;
        boolean $z0;
        android.view.View $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r3 = $r0.<android.view.View: java.lang.Object mTag>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r4 = $r2[$i1];

        $i2 = $r4.<android.view.View: int mPrivateFlags>;

        $i2 = $i2 & 8;

        if $i2 != 0 goto label3;

        $r4 = virtualinvoke $r4.<android.view.View: android.view.View findViewWithTag(java.lang.Object)>($r1);

        if $r4 == null goto label3;

        return $r4;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return null;
    }

    protected boolean fitSystemWindows(android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        android.graphics.Rect $r1;
        android.view.View[] $r2;
        int $i0, $i1;
        android.view.View $r3;
        boolean $z0, $z1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 = specialinvoke $r0.<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>($r1);

        $z1 = $z0;

        if $z0 != 0 goto label3;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = $r2[$i1];

        $z0 = virtualinvoke $r3.<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>($r1);

        $z1 = $z0;

        if $z0 == 0 goto label2;

        return $z0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $z0;

     label4:
        return $z1;
    }

    public android.view.View focusSearch(android.view.View, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;
        boolean $z0;
        android.view.FocusFinder $r2;
        android.view.ViewParent $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isRootNamespace()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r1 = virtualinvoke $r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r1, $i0);

        return $r1;

     label1:
        $r3 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.view.View: android.view.ViewParent mParent>;

        $r1 = interfaceinvoke $r3.<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>($r1, $i0);

        return $r1;

     label2:
        return null;
    }

    public void focusableViewAvailable(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 == 393216 goto label3;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 262144 goto label4;

     label1:
        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void focusableViewAvailable(android.view.View)>($r1);

        return;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    public boolean gatherTransparentRegion(android.graphics.Region)
    {
        android.view.ViewGroup $r0;
        android.graphics.Region $r1;
        android.view.View $r2;
        android.view.View[] $r3;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        android.view.animation.Animation $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.graphics.Region;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 512;

        if $i0 != 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        if $r1 != null goto label3;

        return 1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        specialinvoke $r0.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>($r1);

        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $z1 = 1;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label7;

        $r2 = $r3[$i1];

        $i2 = $r2.<android.view.View: int mViewFlags>;

        $i2 = $i2 & 12;

        if $i2 != 8 goto label5;

        $r4 = virtualinvoke $r2.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r4 == null goto label6;

     label5:
        $z2 = virtualinvoke $r2.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>($r1);

        if $z2 != 0 goto label6;

        $z1 = 0;

     label6:
        $i1 = $i1 + 1;

        goto label4;

     label7:
        if $z0 != 0 goto label8;

        if $z1 == 0 goto label9;

     label8:
        return 1;

     label9:
        return 0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.view.ViewGroup $r0;
        android.view.ViewGroup$LayoutParams $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.view.ViewGroup $r0;
        android.util.AttributeSet $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.ViewGroup$LayoutParams $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        return $r1;
    }

    public android.view.View getChildAt(int)
    {
        android.view.ViewGroup $r0;
        int $i0;
        android.view.View[] $r1;
        android.view.View $r2;
        java.lang.IndexOutOfBoundsException $r3;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

     label1:
        $r2 = $r1[$i0];

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public int getChildCount()
    {
        android.view.ViewGroup $r0;
        int i0;

        $r0 := @this: android.view.ViewGroup;

        i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        return i0;
    }

    protected int getChildDrawingOrder(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return $i1;
    }

    protected boolean getChildStaticTransformation(android.view.View, android.view.animation.Transformation)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.animation.Transformation $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.animation.Transformation;

        return 0;
    }

    public boolean getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        android.graphics.Point $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        android.view.ViewParent $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.graphics.Point;

        $i0 = $r1.<android.view.View: int mLeft>;

        $i1 = $r0.<android.view.View: int mScrollX>;

        $i0 = $i0 - $i1;

        $i1 = $r1.<android.view.View: int mTop>;

        $i2 = $r0.<android.view.View: int mScrollY>;

        $i1 = $i1 - $i2;

        if $r3 == null goto label1;

        $i2 = $r3.<android.graphics.Point: int x>;

        $i2 = $i2 + $i0;

        $r3.<android.graphics.Point: int x> = $i2;

        $i2 = $r3.<android.graphics.Point: int y>;

        $i2 = $i2 + $i1;

        $r3.<android.graphics.Point: int y> = $i2;

     label1:
        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i2 = $r0.<android.view.View: int mBottom>;

        $i1 = $r0.<android.view.View: int mTop>;

        $i1 = $i2 - $i1;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i0, $i1);

        if $z0 == 0 goto label3;

        $r4 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label2;

        $r4 = $r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = interfaceinvoke $r4.<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>($r0, $r2, $r3);

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public int getDescendantFocusability()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 393216;

        return $i0;
    }

    public android.view.View getFocusedChild()
    {
        android.view.ViewGroup $r0;
        android.view.View r1;

        $r0 := @this: android.view.ViewGroup;

        r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        return r1;
    }

    public android.view.animation.LayoutAnimationController getLayoutAnimation()
    {
        android.view.ViewGroup $r0;
        android.view.animation.LayoutAnimationController r1;

        $r0 := @this: android.view.ViewGroup;

        r1 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        return r1;
    }

    public android.view.animation.Animation$AnimationListener getLayoutAnimationListener()
    {
        android.view.ViewGroup $r0;
        android.view.animation.Animation$AnimationListener r1;

        $r0 := @this: android.view.ViewGroup;

        r1 = $r0.<android.view.ViewGroup: android.view.animation.Animation$AnimationListener mAnimationListener>;

        return r1;
    }

    public int getPersistentDrawingCache()
    {
        android.view.ViewGroup $r0;
        int i0;

        $r0 := @this: android.view.ViewGroup;

        i0 = $r0.<android.view.ViewGroup: int mPersistentDrawingCache>;

        return i0;
    }

    void handleFocusGainInternal(int, android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        int $i0;
        android.graphics.Rect $r1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        virtualinvoke $r2.<android.view.View: void unFocus()>();

        $r0.<android.view.ViewGroup: android.view.View mFocused> = null;

     label1:
        specialinvoke $r0.<android.view.View: void handleFocusGainInternal(int,android.graphics.Rect)>($i0, $r1);

        return;
    }

    public boolean hasFocus()
    {
        android.view.ViewGroup $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label1;

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean hasFocusable()
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.View[] $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.View: int mViewFlags>;

        $i0 = $i0 & 12;

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 == 393216 goto label5;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r1 = $r2[$i1];

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    public int indexOfChild(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r3;
        android.view.View[] $r2;
        int $i0, $i1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        if $r3 != $r1 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public final void invalidateChild(android.view.View, android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        android.view.View$AttachInfo $r3;
        int[] $r4;
        android.view.ViewParent $r5, $r6;
        int $i0;
        boolean $z0, $z1;
        android.view.ViewRoot $r7;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r6 = $r0;

        $r3 = $r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label5;

        $r4 = $r3.<android.view.View$AttachInfo: int[] mInvalidateChildLocation>;

        $i0 = $r1.<android.view.View: int mLeft>;

        $r4[0] = $i0;

        $i0 = $r1.<android.view.View: int mTop>;

        $r4[1] = $i0;

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 64;

        if $i0 != 64 goto label3;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label2;

        $z1 = $r6 instanceof android.view.View;

        if $z1 == 0 goto label4;

        $r1 = (android.view.View) $r6;

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 | 64;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

     label2:
        $r5 = interfaceinvoke $r6.<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>($r4, $r2);

        $r6 = $r5;

        if $r5 != null goto label1;

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z1 = $r6 instanceof android.view.ViewRoot;

        if $z1 == 0 goto label2;

        $r7 = (android.view.ViewRoot) $r6;

        $r7.<android.view.ViewRoot: boolean mIsAnimating> = 1;

        goto label2;

     label5:
        return;
    }

    public android.view.ViewParent invalidateChildInParent(int[], android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        int[] $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.ViewParent r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: android.graphics.Rect;

        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & 32;

        if $i0 != 32 goto label3;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 144;

        if $i0 == 128 goto label2;

        $i0 = $r1[0];

        $i1 = $r0.<android.view.View: int mScrollX>;

        $i0 = $i0 - $i1;

        $i1 = $r1[1];

        $i2 = $r0.<android.view.View: int mScrollY>;

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $i0 = $r0.<android.view.View: int mLeft>;

        $i1 = $r0.<android.view.View: int mTop>;

        $i2 = $r0.<android.view.View: int mRight>;

        $i2 = $i2 - $i0;

        $i3 = $r0.<android.view.View: int mBottom>;

        $i3 = $i3 - $i1;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i2, $i3);

        if $z0 != 0 goto label1;

        $i2 = $r0.<android.view.View: int mPrivateFlags>;

        $i2 = $i2 & 64;

        if $i2 != 64 goto label3;

     label1:
        $i2 = $r0.<android.view.View: int mPrivateFlags>;

        $i2 = $i2 & -32769;

        $r0.<android.view.View: int mPrivateFlags> = $i2;

        $r1[0] = $i0;

        $r1[1] = $i1;

        r3 = $r0.<android.view.View: android.view.ViewParent mParent>;

        return r3;

     label2:
        $i0 = $r0.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 & -32801;

        $r0.<android.view.View: int mPrivateFlags> = $i0;

        $i0 = $r0.<android.view.View: int mLeft>;

        $r1[0] = $i0;

        $i0 = $r0.<android.view.View: int mTop>;

        $r1[1] = $i0;

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r1[0];

        $i0 = $i0 - $i1;

        $i1 = $r0.<android.view.View: int mBottom>;

        $i2 = $r1[1];

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        r3 = $r0.<android.view.View: android.view.ViewParent mParent>;

        return r3;

     label3:
        return null;
    }

    public boolean isAlwaysDrawnWithCacheEnabled()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 16384;

        if $i0 != 16384 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAnimationCacheEnabled()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 64;

        if $i0 != 64 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isChildrenDrawnWithCacheEnabled()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 32768;

        if $i0 != 32768 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $r0.<android.view.View: int mPaddingRight>;

        $i2 = $i2 + $i3;

        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i0 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i0, $i2, $i3);

        $i2 = $r0.<android.view.View: int mPaddingTop>;

        $i3 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 + $i3;

        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i1, $i2, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i4 = $r0.<android.view.View: int mPaddingLeft>;

        $i5 = $r0.<android.view.View: int mPaddingRight>;

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i4 = $i4 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i4 = $i4 + $i5;

        $i1 = $i4 + $i1;

        $i4 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        $i0 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i0, $i1, $i4);

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        $i4 = $r0.<android.view.View: int mPaddingBottom>;

        $i1 = $i1 + $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i1 + $i4;

        $i4 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i4;

        $i1 = $i1 + $i3;

        $i3 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i2, $i1, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }

    protected void measureChildren(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        android.view.View[] $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $r1 = $r2[$i3];

        $i4 = $r1.<android.view.View: int mViewFlags>;

        $i4 = $i4 & 12;

        if $i4 == 8 goto label2;

        virtualinvoke $r0.<android.view.ViewGroup: void measureChild(android.view.View,int,int)>($r1, $i0, $i1);

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return;
    }

    public void offsetChildrenTopAndBottom(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View[] $r1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        $i3 = $r2.<android.view.View: int mTop>;

        $i3 = $i3 + $i0;

        $r2.<android.view.View: int mTop> = $i3;

        $i3 = $r2.<android.view.View: int mBottom>;

        $i3 = $i3 + $i0;

        $r2.<android.view.View: int mBottom> = $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public final void offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>($r1, $r2, 1, 0);

        return;
    }

    void offsetRectBetweenParentAndChild(android.view.View, android.graphics.Rect, boolean, boolean)
    {
        android.view.ViewGroup $r0;
        android.graphics.Rect $r1;
        boolean $z0, $z1, $z2;
        android.view.View $r2, $r4;
        android.view.ViewParent $r3;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r5;

        $r0 := @this: android.view.ViewGroup;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        if $r2 != $r0 goto label1;

        return;

     label1:
        $r3 = $r2.<android.view.View: android.view.ViewParent mParent>;

     label2:
        if $r3 == null goto label6;

        $z2 = $r3 instanceof android.view.View;

        if $z2 == 0 goto label6;

        if $r3 == $r0 goto label6;

        if $z0 == 0 goto label4;

        $i0 = $r2.<android.view.View: int mLeft>;

        $i1 = $r2.<android.view.View: int mScrollX>;

        $i0 = $i0 - $i1;

        $i1 = $r2.<android.view.View: int mTop>;

        $i2 = $r2.<android.view.View: int mScrollY>;

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        if $z1 == 0 goto label3;

        $r2 = (android.view.View) $r3;

        $i0 = $r2.<android.view.View: int mRight>;

        $i1 = $r2.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = $r2.<android.view.View: int mBottom>;

        $i2 = $r2.<android.view.View: int mTop>;

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i0, $i1);

     label3:
        $r4 = (android.view.View) $r3;

        $r2 = $r4;

        $r3 = $r4.<android.view.View: android.view.ViewParent mParent>;

        goto label2;

     label4:
        if $z1 == 0 goto label5;

        $r4 = (android.view.View) $r3;

        $i0 = $r4.<android.view.View: int mRight>;

        $i1 = $r4.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = $r4.<android.view.View: int mBottom>;

        $i2 = $r4.<android.view.View: int mTop>;

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i0, $i1);

     label5:
        $i0 = $r2.<android.view.View: int mScrollX>;

        $i1 = $r2.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = $r2.<android.view.View: int mScrollY>;

        $i2 = $r2.<android.view.View: int mTop>;

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        goto label3;

     label6:
        if $r3 != $r0 goto label8;

        if $z0 == 0 goto label7;

        $i0 = $r2.<android.view.View: int mLeft>;

        $i1 = $r2.<android.view.View: int mScrollX>;

        $i0 = $i0 - $i1;

        $i1 = $r2.<android.view.View: int mTop>;

        $i2 = $r2.<android.view.View: int mScrollY>;

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        return;

     label7:
        $i0 = $r2.<android.view.View: int mScrollX>;

        $i1 = $r2.<android.view.View: int mLeft>;

        $i0 = $i0 - $i1;

        $i1 = $r2.<android.view.View: int mScrollY>;

        $i2 = $r2.<android.view.View: int mTop>;

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        return;

     label8:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parameter must be a descendant of this view");

        throw $r5;
    }

    public final void offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>($r1, $r2, 0, 0);

        return;
    }

    protected void onAnimationEnd()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        specialinvoke $r0.<android.view.View: void onAnimationEnd()>();

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 64;

        if $i0 != 64 goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & -32769;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        $i0 = $r0.<android.view.ViewGroup: int mPersistentDrawingCache>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>(0);

        return;

     label1:
        return;

     label2:
        return;
    }

    protected void onAnimationStart()
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.View[] $r2;
        int $i0, $i1, $i2;

        $r0 := @this: android.view.ViewGroup;

        specialinvoke $r0.<android.view.View: void onAnimationStart()>();

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 64;

        if $i0 != 64 goto label4;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $r2 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $i2 = $r1.<android.view.View: int mViewFlags>;

        $i2 = $i2 & 12;

        if $i2 != 0 goto label2;

        virtualinvoke $r1.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

        virtualinvoke $r1.<android.view.View: void buildDrawingCache()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 32768;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;

     label4:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r3;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i1 = $i1 & 8192;

        if $i1 != 0 goto label1;

        $r1 = specialinvoke $r0.<android.view.View: int[] onCreateDrawableState(int)>($i0);

        return $r1;

     label1:
        $i2 = 0;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label4;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $r1 = virtualinvoke $r2.<android.view.View: int[] getDrawableState()>();

        if $r1 == null goto label3;

        $i4 = lengthof $r1;

        $i2 = $i2 + $i4;

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i0 = $i0 + $i2;

        $r1 = specialinvoke $r0.<android.view.View: int[] onCreateDrawableState(int)>($i0);

        $i0 = 0;

     label5:
        if $i0 >= $i1 goto label7;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $r3 = virtualinvoke $r2.<android.view.View: int[] getDrawableState()>();

        if $r3 == null goto label6;

        $r1 = staticinvoke <android.view.ViewGroup: int[] mergeDrawableStates(int[],int[])>($r1, $r3);

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        return $r1;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.view.ViewGroup $r0;
        android.view.MotionEvent $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    protected abstract void onLayout(boolean, int, int, int, int);

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i4;
        android.graphics.Rect $r1;
        android.view.View $r2;
        android.view.View[] $r3;
        boolean $z0;
        byte $b3;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $i1 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i2 = $i0 & 2;

        if $i2 == 0 goto label3;

        $i2 = 0;

        $b3 = 1;

     label1:
        $r3 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

     label2:
        if $i2 == $i1 goto label5;

        $r2 = $r3[$i2];

        $i4 = $r2.<android.view.View: int mViewFlags>;

        $i4 = $i4 & 12;

        if $i4 != 0 goto label4;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        if $z0 == 0 goto label4;

        return 1;

     label3:
        $i2 = $i1 - 1;

        $b3 = -1;

        $i1 = -1;

        goto label1;

     label4:
        $i2 = $i2 + $b3;

        goto label2;

     label5:
        return 0;
    }

    public void recomputeViewAttributes(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>($r0);

        return;

     label1:
        return;
    }

    public void removeAllViews()
    {
        android.view.ViewGroup $r0;

        $r0 := @this: android.view.ViewGroup;

        virtualinvoke $r0.<android.view.ViewGroup: void removeAllViewsInLayout()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void removeAllViewsInLayout()
    {
        android.view.ViewGroup $r0;
        android.view.View[] $r1;
        int $i0;
        android.view.View $r2, $r4, $r7;
        android.view.ViewGroup$OnHierarchyChangeListener $r3;
        android.view.animation.Animation $r5;
        boolean $z0, $z1;
        android.view.View$AttachInfo $r6;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        if $i0 > 0 goto label01;

        return;

     label01:
        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $r0.<android.view.ViewGroup: int mChildrenCount> = 0;

        $r3 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        if $r3 == null goto label08;

        $z0 = 1;

     label02:
        $r2 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        $r6 = $r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r6 == null goto label09;

        $z1 = 1;

     label03:
        $r7 = null;

        virtualinvoke $r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(0);

        $i0 = $i0 - 1;

     label04:
        if $i0 < 0 goto label11;

        $r4 = $r1[$i0];

        if $r4 != $r2 goto label05;

        virtualinvoke $r4.<android.view.View: void clearFocusForRemoval()>();

        $r7 = $r4;

     label05:
        $r5 = virtualinvoke $r4.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r5 == null goto label10;

        specialinvoke $r0.<android.view.ViewGroup: void addDisappearingView(android.view.View)>($r4);

     label06:
        if $z0 == 0 goto label07;

        interfaceinvoke $r3.<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>($r0, $r4);

     label07:
        $r4.<android.view.View: android.view.ViewParent mParent> = null;

        $r1[$i0] = null;

        $i0 = $i0 + -1;

        goto label04;

     label08:
        $z0 = 0;

        goto label02;

     label09:
        $z1 = 0;

        goto label03;

     label10:
        if $z1 == 0 goto label06;

        virtualinvoke $r4.<android.view.View: void dispatchDetachedFromWindow()>();

        goto label06;

     label11:
        if $r7 == null goto label12;

        virtualinvoke $r0.<android.view.ViewGroup: void clearChildFocus(android.view.View)>($r7);

        return;

     label12:
        return;
    }

    protected void removeDetachedView(android.view.View, boolean)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r3;
        boolean $z0;
        android.view.animation.Animation $r2;
        android.view.ViewGroup$OnHierarchyChangeListener $r4;
        android.view.View$AttachInfo $r5;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r3 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 != $r3 goto label1;

        virtualinvoke $r1.<android.view.View: void clearFocus()>();

     label1:
        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r2 == null goto label3;

        specialinvoke $r0.<android.view.ViewGroup: void addDisappearingView(android.view.View)>($r1);

     label2:
        $r4 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        if $r4 == null goto label4;

        $r4 = $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        interfaceinvoke $r4.<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>($r0, $r1);

        return;

     label3:
        $r5 = $r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label2;

        virtualinvoke $r1.<android.view.View: void dispatchDetachedFromWindow()>();

        goto label2;

     label4:
        return;
    }

    public void removeView(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        specialinvoke $r0.<android.view.ViewGroup: void removeViewInternal(android.view.View)>($r1);

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void removeViewAt(int)
    {
        android.view.ViewGroup $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        specialinvoke $r0.<android.view.ViewGroup: void removeViewInternal(int,android.view.View)>($i0, $r1);

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void removeViewInLayout(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        specialinvoke $r0.<android.view.ViewGroup: void removeViewInternal(android.view.View)>($r1);

        return;
    }

    public void removeViews(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.ViewGroup: void removeViewsInternal(int,int)>($i0, $i1);

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void removeViewsInLayout(int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.ViewGroup: void removeViewsInternal(int,int)>($i0, $i1);

        return;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r2, $r3;
        int $i0;
        android.view.ViewParent $r4;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 393216 goto label1;

        return;

     label1:
        specialinvoke $r0.<android.view.View: void unFocus()>();

        $r3 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r3 == $r1 goto label3;

        $r3 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        virtualinvoke $r3.<android.view.View: void unFocus()>();

     label2:
        $r0.<android.view.ViewGroup: android.view.View mFocused> = $r1;

     label3:
        $r4 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label4;

        $r4 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r4.<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>($r0, $r2);

        return;

     label4:
        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        return 0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0, $z1;
        int $i0;
        android.view.ViewParent $r1;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & 524288;

        if $i0 == 0 goto label2;

        $z1 = 1;

     label1:
        if $z0 != $z1 goto label3;

        return;

     label2:
        $z1 = 0;

        goto label1;

     label3:
        if $z0 == 0 goto label5;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 524288;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

     label4:
        $r1 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label6;

        $r1 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>($z0);

        return;

     label5:
        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & -524289;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        goto label4;

     label6:
        return;
    }

    public boolean requestFocus(int, android.graphics.Rect)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;
        android.graphics.Rect $r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        lookupswitch($i1)
        {
            case 131072: goto label3;
            case 262144: goto label5;
            case 393216: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("descendant focusability must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS but is ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $z0 = specialinvoke $r0.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        return $z0;

     label3:
        $z0 = specialinvoke $r0.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        if $z0 == 0 goto label4;

        return $z0;

     label4:
        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>($i0, $r1);

        return $z0;

     label5:
        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>($i0, $r1);

        if $z0 == 0 goto label6;

        return $z0;

     label6:
        $z0 = specialinvoke $r0.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }

    public void requestTransparentRegion(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewParent $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        if $r1 == null goto label1;

        $i0 = $r1.<android.view.View: int mPrivateFlags>;

        $i0 = $i0 | 512;

        $r1.<android.view.View: int mPrivateFlags> = $i0;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void requestTransparentRegion(android.view.View)>($r0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void scheduleLayoutAnimation()
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 8;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;
    }

    public void setAddStatesFromChildren(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 8192;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

     label1:
        virtualinvoke $r0.<android.view.View: void refreshDrawableState()>();

        return;

     label2:
        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & -8193;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        goto label1;
    }

    public void setAlwaysDrawnWithCacheEnabled(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setBooleanFlag(int,boolean)>(16384, $z0);

        return;
    }

    public void setAnimationCacheEnabled(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setBooleanFlag(int,boolean)>(64, $z0);

        return;
    }

    protected void setChildrenDrawingCacheEnabled(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        android.view.View[] $r1;
        int $i0, $i1;
        android.view.View $r2;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mPersistentDrawingCache>;

        $i0 = $i0 & 3;

        if $i0 == 3 goto label3;

     label1:
        $r1 = $r0.<android.view.ViewGroup: android.view.View[] mChildren>;

        $i0 = $r0.<android.view.ViewGroup: int mChildrenCount>;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r2 = $r1[$i1];

        virtualinvoke $r2.<android.view.View: void setDrawingCacheEnabled(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }

    protected void setChildrenDrawnWithCacheEnabled(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setBooleanFlag(int,boolean)>(32768, $z0);

        return;
    }

    public void setClipChildren(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setBooleanFlag(int,boolean)>(1, $z0);

        return;
    }

    public void setClipToPadding(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setBooleanFlag(int,boolean)>(2, $z0);

        return;
    }

    public void setDescendantFocusability(int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 131072: goto label2;
            case 262144: goto label2;
            case 393216: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS");

        throw $r1;

     label2:
        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i1 = $i1 & -393217;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i1;

        $i1 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = 393216 & $i0;

        $i0 = $i1 | $i0;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;
    }

    public void setLayoutAnimation(android.view.animation.LayoutAnimationController)
    {
        android.view.ViewGroup $r0;
        android.view.animation.LayoutAnimationController $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.animation.LayoutAnimationController;

        $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController> = $r1;

        $r1 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        if $r1 == null goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 8;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;

     label1:
        return;
    }

    public void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)
    {
        android.view.ViewGroup $r0;
        android.view.animation.Animation$AnimationListener $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.animation.Animation$AnimationListener;

        $r0.<android.view.ViewGroup: android.view.animation.Animation$AnimationListener mAnimationListener> = $r1;

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.view.ViewGroup $r0;
        android.view.ViewGroup$OnHierarchyChangeListener $r1;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        $r0.<android.view.ViewGroup: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener> = $r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.view.View: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $i0 | $i1;

        $i1 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 | $i1;

        $i1 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 | $i1;

        if $i0 == 0 goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 32;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;

     label1:
        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 & -33;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        return;
    }

    public void setPersistentDrawingCache(int)
    {
        android.view.ViewGroup $r0;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $i0 := @parameter0: int;

        $i0 = $i0 & 3;

        $r0.<android.view.ViewGroup: int mPersistentDrawingCache> = $i0;

        return;
    }

    protected void setStaticTransformationsEnabled(boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;

        $r0 := @this: android.view.ViewGroup;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setBooleanFlag(int,boolean)>(2048, $z0);

        return;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        boolean $z0;
        android.view.ViewParent $r2;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = interfaceinvoke $r2.<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void startLayoutAnimation()
    {
        android.view.ViewGroup $r0;
        android.view.animation.LayoutAnimationController $r1;
        int $i0;

        $r0 := @this: android.view.ViewGroup;

        $r1 = $r0.<android.view.ViewGroup: android.view.animation.LayoutAnimationController mLayoutAnimationController>;

        if $r1 == null goto label1;

        $i0 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i0 = $i0 | 8;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i0;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label1:
        return;
    }

    void unFocus()
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;

        $r0 := @this: android.view.ViewGroup;

        specialinvoke $r0.<android.view.View: void unFocus()>();

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.view.ViewGroup: android.view.View mFocused>;

        virtualinvoke $r1.<android.view.View: void unFocus()>();

     label1:
        $r0.<android.view.ViewGroup: android.view.View mFocused> = null;

        return;
    }

    public void updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.view.ViewParent $r6;

        $r0 := @this: android.view.ViewGroup;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid LayoutParams supplied to ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = $r1.<android.view.View: android.view.ViewParent mParent>;

        if $r6 == $r0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given view not a child of ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        return;
    }
}
