class android.content.ContentQueryMap$1 extends android.database.ContentObserver
{
    final android.content.ContentQueryMap this$0;

    void <init>(android.content.ContentQueryMap, android.os.Handler)
    {
        android.content.ContentQueryMap$1 $r0;
        android.content.ContentQueryMap $r1;
        android.os.Handler $r2;

        $r0 := @this: android.content.ContentQueryMap$1;

        $r1 := @parameter0: android.content.ContentQueryMap;

        $r2 := @parameter1: android.os.Handler;

        $r0.<android.content.ContentQueryMap$1: android.content.ContentQueryMap this$0> = $r1;

        specialinvoke $r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r2);

        return;
    }

    public void onChange(boolean)
    {
        android.content.ContentQueryMap$1 $r0;
        boolean $z0;
        int $i0;
        android.content.ContentQueryMap $r1;

        $r0 := @this: android.content.ContentQueryMap$1;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.content.ContentQueryMap$1: android.content.ContentQueryMap this$0>;

        $i0 = virtualinvoke $r1.<java.util.Observable: int countObservers()>();

        if $i0 == 0 goto label1;

        $r1 = $r0.<android.content.ContentQueryMap$1: android.content.ContentQueryMap this$0>;

        virtualinvoke $r1.<android.content.ContentQueryMap: void requery()>();

        return;

     label1:
        $r1 = $r0.<android.content.ContentQueryMap$1: android.content.ContentQueryMap this$0>;

        staticinvoke <android.content.ContentQueryMap: boolean access$002(android.content.ContentQueryMap,boolean)>($r1, 1);

        return;
    }
}
