public class android.media.AudioSystem extends java.lang.Object
{
    public static final int AUDIO_STATUS_ERROR;
    public static final int AUDIO_STATUS_OK;
    public static final int AUDIO_STATUS_SERVER_DIED;
    public static final int MAX_VOLUME;
    public static final int MIN_VOLUME;
    public static final int MODE_CURRENT;
    public static final int MODE_INVALID;
    public static final int MODE_IN_CALL;
    public static final int MODE_NORMAL;
    public static final int MODE_RINGTONE;
    public static final int NUM_MODES;
    public static final int NUM_STREAMS;
    private static final int NUM_STREAM_TYPES;
    public static final int ROUTE_ALL;
    public static final int ROUTE_BLUETOOTH;
    public static final int ROUTE_BLUETOOTH_A2DP;
    public static final int ROUTE_BLUETOOTH_SCO;
    public static final int ROUTE_EARPIECE;
    public static final int ROUTE_HEADSET;
    public static final int ROUTE_SPEAKER;
    public static final int STREAM_ALARM;
    public static final int STREAM_BLUETOOTH_SCO;
    public static final int STREAM_MUSIC;
    public static final int STREAM_NOTIFICATION;
    public static final int STREAM_RING;
    public static final int STREAM_SYSTEM;
    public static final int STREAM_VOICE_CALL;
    private static android.media.AudioSystem$ErrorCallback mErrorCallback;

    public void <init>()
    {
        android.media.AudioSystem $r0;

        $r0 := @this: android.media.AudioSystem;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void errorCallbackFromNative(int)
    {
        int $i0;
        android.media.AudioSystem$ErrorCallback $r0;

        $i0 := @parameter0: int;

        $r0 = <android.media.AudioSystem: android.media.AudioSystem$ErrorCallback mErrorCallback>;

        if $r0 == null goto label1;

        $r0 = <android.media.AudioSystem: android.media.AudioSystem$ErrorCallback mErrorCallback>;

        interfaceinvoke $r0.<android.media.AudioSystem$ErrorCallback: void onError(int)>($i0);

        return;

     label1:
        return;
    }

    public static native int getMode();

    public static final int getNumStreamTypes()
    {
        return 7;
    }

    public static native int getRouting(int);

    public static native int getVolume(int);

    public static native boolean isMicrophoneMuted();

    public static native boolean isMusicActive();

    public static native int muteMicrophone(boolean);

    public static void setErrorCallback(android.media.AudioSystem$ErrorCallback)
    {
        android.media.AudioSystem$ErrorCallback $r0;

        $r0 := @parameter0: android.media.AudioSystem$ErrorCallback;

        <android.media.AudioSystem: android.media.AudioSystem$ErrorCallback mErrorCallback> = $r0;

        return;
    }

    public static native int setMode(int);

    public static native void setParameter(java.lang.String, java.lang.String);

    public static native int setRouting(int, int, int);

    public static native int setVolume(int, int);

    public static void <clinit>()
    {
        <android.media.AudioSystem: int STREAM_SYSTEM> = 1;

        <android.media.AudioSystem: int STREAM_RING> = 2;

        <android.media.AudioSystem: int STREAM_NOTIFICATION> = 5;

        <android.media.AudioSystem: int STREAM_MUSIC> = 3;

        <android.media.AudioSystem: int STREAM_BLUETOOTH_SCO> = 6;

        <android.media.AudioSystem: int STREAM_ALARM> = 4;

        <android.media.AudioSystem: int ROUTE_SPEAKER> = 2;

        <android.media.AudioSystem: int ROUTE_HEADSET> = 8;

        <android.media.AudioSystem: int ROUTE_EARPIECE> = 1;

        <android.media.AudioSystem: int ROUTE_BLUETOOTH_SCO> = 4;

        <android.media.AudioSystem: int ROUTE_BLUETOOTH_A2DP> = 16;

        <android.media.AudioSystem: int ROUTE_BLUETOOTH> = 4;

        <android.media.AudioSystem: int ROUTE_ALL> = -1;

        <android.media.AudioSystem: int NUM_STREAM_TYPES> = 7;

        <android.media.AudioSystem: int NUM_STREAMS> = 5;

        <android.media.AudioSystem: int NUM_MODES> = 3;

        <android.media.AudioSystem: int MODE_RINGTONE> = 1;

        <android.media.AudioSystem: int MODE_NORMAL> = 0;

        <android.media.AudioSystem: int MODE_IN_CALL> = 2;

        <android.media.AudioSystem: int MODE_INVALID> = -2;

        <android.media.AudioSystem: int MODE_CURRENT> = -1;

        <android.media.AudioSystem: int MIN_VOLUME> = 0;

        <android.media.AudioSystem: int MAX_VOLUME> = 100;

        <android.media.AudioSystem: int AUDIO_STATUS_SERVER_DIED> = 100;

        <android.media.AudioSystem: int AUDIO_STATUS_OK> = 0;

        <android.media.AudioSystem: int AUDIO_STATUS_ERROR> = 1;

        return;
    }
}
