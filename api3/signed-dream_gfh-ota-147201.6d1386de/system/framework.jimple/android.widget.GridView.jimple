public class android.widget.GridView extends android.widget.AbsListView
{
    public static final int AUTO_FIT;
    public static final int NO_STRETCH;
    public static final int STRETCH_COLUMN_WIDTH;
    public static final int STRETCH_SPACING;
    public static final int STRETCH_SPACING_UNIFORM;
    private int mColumnWidth;
    private int mGravity;
    private int mHorizontalSpacing;
    private int mNumColumns;
    private android.view.View mReferenceView;
    private android.view.View mReferenceViewInSelectedRow;
    private int mRequestedColumnWidth;
    private int mRequestedHorizontalSpacing;
    private int mRequestedNumColumns;
    private int mStretchMode;
    private final android.graphics.Rect mTempRect;
    private int mVerticalSpacing;

    public void <init>(android.content.Context)
    {
        android.widget.GridView $r0;
        android.content.Context $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.AbsListView: void <init>(android.content.Context)>($r1);

        $r0.<android.widget.GridView: int mNumColumns> = -1;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = 0;

        $r0.<android.widget.GridView: int mVerticalSpacing> = 0;

        $r0.<android.widget.GridView: int mStretchMode> = 2;

        $r0.<android.widget.GridView: android.view.View mReferenceView> = null;

        $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow> = null;

        $r0.<android.widget.GridView: int mGravity> = 3;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.GridView: android.graphics.Rect mTempRect> = $r2;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.GridView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842865);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.GridView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.Rect $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<android.widget.GridView: int mNumColumns> = -1;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = 0;

        $r0.<android.widget.GridView: int mVerticalSpacing> = 0;

        $r0.<android.widget.GridView: int mStretchMode> = 2;

        $r0.<android.widget.GridView: android.view.View mReferenceView> = null;

        $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow> = null;

        $r0.<android.widget.GridView: int mGravity> = 3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.GridView: android.graphics.Rect mTempRect> = $r3;

        $r4 = <com.android.internal.R$styleable: int[] GridView>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, 0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, 0);

        virtualinvoke $r0.<android.widget.GridView: void setHorizontalSpacing(int)>($i0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, 0);

        virtualinvoke $r0.<android.widget.GridView: void setVerticalSpacing(int)>($i0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(3, 2);

        if $i0 < 0 goto label1;

        virtualinvoke $r0.<android.widget.GridView: void setStretchMode(int)>($i0);

     label1:
        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(4, -1);

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<android.widget.GridView: void setColumnWidth(int)>($i0);

     label2:
        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(5, 1);

        virtualinvoke $r0.<android.widget.GridView: void setNumColumns(int)>($i0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if $i0 < 0 goto label3;

        virtualinvoke $r0.<android.widget.GridView: void setGravity(int)>($i0);

     label3:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void adjustForBottomFadingEdge(android.view.View, int, int)
    {
        android.widget.GridView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        if $i2 <= $i1 goto label1;

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = $i2 - $i0;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = $i2 - $i1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = neg $i0;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i0);

        return;

     label1:
        return;
    }

    private void adjustForTopFadingEdge(android.view.View, int, int)
    {
        android.widget.GridView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i2 >= $i0 goto label1;

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = $i1 - $i2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i0);

        return;

     label1:
        return;
    }

    private void adjustViewsUpOrDown()
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.GridView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label5;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label3;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i1 = $i0 - $i1;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i0 == 0 goto label1;

        $i0 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i1 = $i1 - $i0;

     label1:
        if $i1 >= 0 goto label2;

        $i1 = 0;

     label2:
        if $i1 == 0 goto label6;

        $i0 = neg $i1;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i0);

        return;

     label3:
        $i1 = $i0 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $i1 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        $i2 = $i2 - $i3;

        $i1 = $i1 - $i2;

        $i2 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i2 + $i0;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i0 >= $i2 goto label4;

        $i0 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i1 = $i1 + $i0;

     label4:
        if $i1 <= 0 goto label2;

        $i1 = 0;

        goto label2;

     label5:
        return;

     label6:
        return;
    }

    private boolean commonKey(int, int, android.view.KeyEvent)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.KeyEvent $r1;
        android.widget.ListAdapter $r2;
        boolean $z0, $z1;
        android.widget.PopupWindow $r3;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.KeyEvent;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 != null goto label01;

        return 0;

     label01:
        $z0 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z0 == 0 goto label02;

        virtualinvoke $r0.<android.widget.GridView: void layoutChildren()>();

     label02:
        $z0 = 0;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i2 == 1 goto label04;

        $i3 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i3 >= 0 goto label03;

        lookupswitch($i0)
        {
            case 19: goto label06;
            case 20: goto label06;
            case 21: goto label06;
            case 22: goto label06;
            case 23: goto label06;
            case 62: goto label06;
            case 66: goto label06;
            default: goto label03;
        };

     label03:
        lookupswitch($i0)
        {
            case 19: goto label09;
            case 20: goto label11;
            case 21: goto label07;
            case 22: goto label08;
            case 23: goto label13;
            case 62: goto label15;
            case 66: goto label13;
            default: goto label04;
        };

     label04:
        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r0.<android.widget.AbsListView: boolean sendToTextFilter(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

     label05:
        if $z0 == 0 goto label18;

        return 1;

     label06:
        virtualinvoke $r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        return 1;

     label07:
        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean arrowScroll(int)>(17);

        goto label04;

     label08:
        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean arrowScroll(int)>(66);

        goto label04;

     label09:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean arrowScroll(int)>(33);

        goto label04;

     label10:
        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean fullScroll(int)>(33);

        goto label04;

     label11:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean arrowScroll(int)>(130);

        goto label04;

     label12:
        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean fullScroll(int)>(130);

        goto label04;

     label13:
        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label14;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i0 != 0 goto label14;

        virtualinvoke $r0.<android.widget.AbsListView: void keyPressed()>();

     label14:
        return 1;

     label15:
        $r3 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r3 == null goto label16;

        $r3 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 != 0 goto label04;

     label16:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z0 != 0 goto label17;

        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean pageScroll(int)>(130);

        goto label04;

     label17:
        $z0 = virtualinvoke $r0.<android.widget.GridView: boolean pageScroll(int)>(33);

        goto label04;

     label18:
        lookupswitch($i2)
        {
            case 0: goto label20;
            case 1: goto label21;
            case 2: goto label22;
            default: goto label19;
        };

     label19:
        return 0;

     label20:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label21:
        $z0 = specialinvoke $r0.<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label22:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

        return $z0;
    }

    private void correctTooHigh(int, int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i3 = $i3 + $i2;

        $i3 = $i3 - 1;

        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i4 = $i4 - 1;

        if $i3 != $i4 goto label5;

        if $i2 <= 0 goto label6;

        $i2 = $i2 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = $r0.<android.view.View: int mBottom>;

        $i4 = $r0.<android.view.View: int mTop>;

        $i3 = $i3 - $i4;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r2.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i4;

        $i2 = $i3 - $i2;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i2 <= 0 goto label7;

        $i4 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i4 > 0 goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r2.<android.graphics.Rect: int top>;

        if $i3 >= $i4 goto label8;

     label1:
        $i4 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i4 != 0 goto label2;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r2.<android.graphics.Rect: int top>;

        $i3 = $i4 - $i3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

     label2:
        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i2);

        $i2 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i2 <= 0 goto label9;

        $i2 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label4;

        $i0 = 1;

     label3:
        $i0 = $i2 - $i0;

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = $i2 - $i1;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        return;

     label4:
        goto label3;

     label5:
        return;

     label6:
        return;

     label7:
        return;

     label8:
        return;

     label9:
        return;
    }

    private void correctTooLow(int, int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i3 != 0 goto label5;

        if $i2 <= 0 goto label6;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i5 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r2.<android.graphics.Rect: int top>;

        $i3 = $r0.<android.view.View: int mBottom>;

        $i6 = $r0.<android.view.View: int mTop>;

        $i3 = $i3 - $i6;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = $r2.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i6;

        $i4 = $i5 - $i4;

        $i5 = $i2 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i5);

        $i5 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i6 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $i6 + $i2;

        $i2 = $i2 - 1;

        if $i4 <= 0 goto label7;

        $i6 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i6 = $i6 - 1;

        if $i2 < $i6 goto label1;

        if $i5 <= $i3 goto label8;

     label1:
        $i6 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i6 = $i6 - 1;

        if $i2 != $i6 goto label2;

        $i3 = $i5 - $i3;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

     label2:
        $i3 = neg $i4;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i3);

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i3 = $i3 - 1;

        if $i2 >= $i3 goto label9;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label4;

        $i0 = 1;

     label3:
        $i0 = $i0 + $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = $i2 + $i1;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        return;

     label4:
        goto label3;

     label5:
        return;

     label6:
        return;

     label7:
        return;

     label8:
        return;

     label9:
        return;
    }

    private void determineColumns(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i2 = $r0.<android.widget.GridView: int mRequestedHorizontalSpacing>;

        $i3 = $r0.<android.widget.GridView: int mStretchMode>;

        $i1 = $r0.<android.widget.GridView: int mRequestedColumnWidth>;

        $i4 = $r0.<android.widget.GridView: int mRequestedNumColumns>;

        if $i4 != -1 goto label06;

        if $i1 <= 0 goto label05;

        $i4 = $i0 + $i2;

        $i5 = $i1 + $i2;

        $i4 = $i4 / $i5;

        $r0.<android.widget.GridView: int mNumColumns> = $i4;

     label01:
        $i4 = $r0.<android.widget.GridView: int mNumColumns>;

        if $i4 > 0 goto label02;

        $r0.<android.widget.GridView: int mNumColumns> = 1;

     label02:
        lookupswitch($i3)
        {
            case 0: goto label07;
            default: goto label03;
        };

     label03:
        $i4 = $r0.<android.widget.GridView: int mNumColumns>;

        $i4 = $i4 * $i1;

        $i0 = $i0 - $i4;

        $i4 = $r0.<android.widget.GridView: int mNumColumns>;

        $i4 = $i4 - 1;

        $i4 = $i4 * $i2;

        $i0 = $i0 - $i4;

        lookupswitch($i3)
        {
            case 1: goto label09;
            case 2: goto label08;
            case 3: goto label11;
            default: goto label04;
        };

     label04:
        return;

     label05:
        $r0.<android.widget.GridView: int mNumColumns> = 2;

        goto label01;

     label06:
        $i4 = $r0.<android.widget.GridView: int mRequestedNumColumns>;

        $r0.<android.widget.GridView: int mNumColumns> = $i4;

        goto label01;

     label07:
        $r0.<android.widget.GridView: int mColumnWidth> = $i1;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = $i2;

        return;

     label08:
        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i0 = $i0 / $i3;

        $i0 = $i0 + $i1;

        $r0.<android.widget.GridView: int mColumnWidth> = $i0;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = $i2;

        return;

     label09:
        $r0.<android.widget.GridView: int mColumnWidth> = $i1;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        if $i1 <= 1 goto label10;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $i1 - 1;

        $i0 = $i0 / $i1;

        $i0 = $i0 + $i2;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = $i0;

        return;

     label10:
        $i0 = $i2 + $i0;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = $i0;

        return;

     label11:
        $r0.<android.widget.GridView: int mColumnWidth> = $i1;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        if $i1 <= 1 goto label12;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $i1 + 1;

        $i0 = $i0 / $i1;

        $i0 = $i0 + $i2;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = $i0;

        return;

     label12:
        $i0 = $i2 + $i0;

        $r0.<android.widget.GridView: int mHorizontalSpacing> = $i0;

        return;
    }

    private android.view.View fillDown(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1, $r3;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.GridView;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 = null;

        $i0 = $r0.<android.view.View: int mBottom>;

        $i3 = $r0.<android.view.View: int mTop>;

        $i0 = $i0 - $i3;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i3;

     label1:
        if $i2 >= $i0 goto label3;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i1 >= $i3 goto label4;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i1, $i2, 1);

        if $r3 == null goto label2;

        $r1 = $r3;

     label2:
        $r3 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i3 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i2 = $i2 + $i3;

        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $i1 + $i3;

        goto label1;

     label3:
        return $r1;

     label4:
        return $r1;
    }

    private android.view.View fillFromBottom(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i2 = $i2 - 1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i2 = $i2 - 1;

        $i1 = $i2 - $i1;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i2 = $i2 - 1;

        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i3 = $i1 % $i3;

        $i1 = $i1 - $i3;

        $i1 = $i2 - $i1;

        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i1, $i0);

        return $r1;
    }

    private android.view.View fillFromSelection(int, int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        android.view.View $r1, $r2;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i4 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i3 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i5 = $r0.<android.widget.GridView: int mNumColumns>;

        $i6 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i7 = -1;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label3;

        $i8 = $i3 % $i5;

        $i3 = $i3 - $i8;

     label1:
        $i1 = specialinvoke $r0.<android.widget.GridView: int getTopSelectionPixel(int,int,int)>($i1, $i4, $i3);

        $i2 = specialinvoke $r0.<android.widget.GridView: int getBottomSelectionPixel(int,int,int,int)>($i2, $i4, $i5, $i3);

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label4;

        $i4 = $i7;

     label2:
        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i4, $i0, 1);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i3;

        $r2 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        specialinvoke $r0.<android.widget.GridView: void adjustForTopFadingEdge(android.view.View,int,int)>($r2, $i1, $i2);

        specialinvoke $r0.<android.widget.GridView: void adjustForBottomFadingEdge(android.view.View,int,int)>($r2, $i1, $i2);

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label5;

        $i0 = $i3 - $i5;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i1 - $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        $i0 = $i3 + $i5;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i1 = $i1 + $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i1);

        return $r1;

     label3:
        $i7 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i7 = $i7 - 1;

        $i3 = $i7 - $i3;

        $i7 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i7 = $i7 - 1;

        $i8 = $i3 % $i5;

        $i3 = $i3 - $i8;

        $i7 = $i7 - $i3;

        $i3 = $i7 - $i5;

        $i3 = $i3 + 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        goto label1;

     label4:
        $i4 = $i3;

        goto label2;

     label5:
        $i0 = $i7 + $i5;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i1 = $i1 + $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        $i0 = $i3 - 1;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i1 - $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i0, $i1);

        return $r1;
    }

    private android.view.View fillFromTop(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i1;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i2 = $i2 - 1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i1;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i1 >= 0 goto label1;

        $r0.<android.widget.AdapterView: int mFirstPosition> = 0;

     label1:
        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i2 = $i2 % $i3;

        $i1 = $i1 - $i2;

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i1;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i1, $i0);

        return $r1;
    }

    private android.view.View fillSelection(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        android.view.View $r1, $r2;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke $r0.<android.widget.AbsListView: int reconcileSelectedPosition()>();

        $i4 = $r0.<android.widget.GridView: int mNumColumns>;

        $i5 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i2 = -1;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label3;

        $i6 = $i3 % $i4;

        $i3 = $i3 - $i6;

     label1:
        $i6 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i7 = specialinvoke $r0.<android.widget.GridView: int getTopSelectionPixel(int,int,int)>($i0, $i6, $i3);

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label4;

        $i8 = $i2;

     label2:
        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i8, $i7, 1);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i3;

        $r2 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label5;

        $i0 = $i3 + $i4;

        $i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i2 = $i2 + $i5;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i2);

        specialinvoke $r0.<android.widget.GridView: void pinToBottom(int)>($i1);

        $i0 = $i3 - $i4;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i1 - $i5;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        return $r1;

     label3:
        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i2 = $i2 - 1;

        $i2 = $i2 - $i3;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i3 = $i3 - 1;

        $i6 = $i2 % $i4;

        $i2 = $i2 - $i6;

        $i2 = $i3 - $i2;

        $i3 = $i2 - $i4;

        $i3 = $i3 + 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        goto label1;

     label4:
        $i8 = $i3;

        goto label2;

     label5:
        $i1 = specialinvoke $r0.<android.widget.GridView: int getBottomSelectionPixel(int,int,int,int)>($i1, $i6, $i4, $i3);

        $i6 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i1 = $i1 - $i6;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i1);

        $i1 = $i3 - 1;

        $i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i3 = $i3 - $i5;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i1, $i3);

        specialinvoke $r0.<android.widget.GridView: void pinToTop(int)>($i0);

        $i0 = $i2 + $i4;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i1 = $i1 + $i5;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        return $r1;
    }

    private android.view.View fillSpecific(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1, $r2, $r3, $r4;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $i3 = -1;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label4;

        $i4 = $i0 % $i2;

        $i4 = $i0 - $i4;

     label1:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label5;

        $i0 = $i3;

     label2:
        $r2 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i0, $i1, 1);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i4;

        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $i0 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label6;

        $i1 = $i4 - $i2;

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = $i3 - $i0;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i1, $i3);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        $i1 = $i4 + $i2;

        $i4 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i4 = $i4 + $i0;

        $r4 = specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i1, $i4);

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label3;

        specialinvoke $r0.<android.widget.GridView: void correctTooHigh(int,int,int)>($i2, $i0, $i1);

     label3:
        if $r2 == null goto label7;

        return $r2;

     label4:
        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i4 = $i4 - 1;

        $i0 = $i4 - $i0;

        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i4 = $i4 - 1;

        $i3 = $i0 % $i2;

        $i0 = $i0 - $i3;

        $i3 = $i4 - $i0;

        $i0 = $i3 - $i2;

        $i0 = $i0 + 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        goto label1;

     label5:
        $i0 = $i4;

        goto label2;

     label6:
        $i1 = $i3 + $i2;

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = $i3 + $i0;

        $r4 = specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i1, $i3);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        $i1 = $i4 - 1;

        $i4 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i4 = $i4 - $i0;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i1, $i4);

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label3;

        specialinvoke $r0.<android.widget.GridView: void correctTooLow(int,int,int)>($i2, $i0, $i1);

        goto label3;

     label7:
        if $r3 == null goto label8;

        return $r3;

     label8:
        return $r4;
    }

    private android.view.View fillUp(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1, $r3;
        android.graphics.Rect $r2;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i2 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = null;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r2.<android.graphics.Rect: int top>;

     label1:
        if $i1 <= $i0 goto label3;

        if $i2 < 0 goto label3;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i2, $i1, 0);

        if $r3 == null goto label2;

        $r1 = $r3;

     label2:
        $r3 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i1 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i1 = $i3 - $i1;

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i2;

        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i2 = $i2 - $i3;

        goto label1;

     label3:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label4;

        $i2 = $i2 + 1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i2;

        return $r1;

     label4:
        return $r1;
    }

    private int getBottomSelectionPixel(int, int, int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i2 = $i3 + $i2;

        $i2 = $i2 - 1;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i3 = $i3 - 1;

        if $i2 >= $i3 goto label1;

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        return $i0;
    }

    private int getTopSelectionPixel(int, int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i2 <= 0 goto label1;

        $i0 = $i0 + $i1;

        return $i0;

     label1:
        return $i0;
    }

    private boolean isCandidateSelection(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i4 = $i3 - 1;

        $i2 = $i4 - $i0;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label03;

        $i4 = $r0.<android.widget.GridView: int mNumColumns>;

        $i4 = $i0 % $i4;

        $i2 = $i0 - $i4;

        $i4 = $r0.<android.widget.GridView: int mNumColumns>;

        $i4 = $i4 + $i2;

        $i4 = $i4 - 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

     label01:
        lookupswitch($i1)
        {
            case 17: goto label08;
            case 33: goto label10;
            case 66: goto label04;
            case 130: goto label06;
            default: goto label02;
        };

     label02:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r1;

     label03:
        $i4 = $i3 - 1;

        $i5 = $r0.<android.widget.GridView: int mNumColumns>;

        $i5 = $i2 % $i5;

        $i2 = $i2 - $i5;

        $i4 = $i4 - $i2;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $i2 = $i4 - $i2;

        $i2 = $i2 + 1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        goto label01;

     label04:
        if $i0 != $i2 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        if $i2 != 0 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        if $i0 != $i4 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        $i0 = $i3 - 1;

        if $i4 != $i0 goto label11;

        return 1;

     label11:
        return 0;
    }

    private android.view.View makeAndAddView(int, int, boolean, int, boolean, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        android.widget.AbsListView$RecycleBin $r1;
        android.view.View $r2;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i2 := @parameter3: int;

        $z1 := @parameter4: boolean;

        $i3 := @parameter5: int;

        $z2 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z2 != 0 goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $r2 = virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: android.view.View getActiveView(int)>($i0);

        if $r2 == null goto label1;

        specialinvoke $r0.<android.widget.GridView: void setupChild(android.view.View,int,int,boolean,int,boolean,boolean,int)>($r2, $i0, $i1, $z0, $i2, $z1, 1, $i3);

        return $r2;

     label1:
        $r2 = virtualinvoke $r0.<android.widget.AbsListView: android.view.View obtainView(int)>($i0);

        specialinvoke $r0.<android.widget.GridView: void setupChild(android.view.View,int,int,boolean,int,boolean,boolean,int)>($r2, $i0, $i1, $z0, $i2, $z1, 0, $i3);

        return $r2;
    }

    private android.view.View makeRow(int, int, boolean)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Rect $r1;
        android.view.View $r2, $r3;

        $r0 := @this: android.widget.GridView;

        $i4 := @parameter0: int;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 = $r0.<android.widget.GridView: int mColumnWidth>;

        $i2 = $r0.<android.widget.GridView: int mHorizontalSpacing>;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i5 = $r1.<android.graphics.Rect: int left>;

        $i6 = $r0.<android.widget.GridView: int mStretchMode>;

        if $i6 != 3 goto label09;

        $i6 = $i2;

     label01:
        $i5 = $i5 + $i6;

        $z1 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 != 0 goto label10;

        $i6 = $r0.<android.widget.GridView: int mNumColumns>;

        $i6 = $i6 + $i4;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i3);

     label02:
        $r2 = null;

        $z1 = virtualinvoke $r0.<android.widget.AbsListView: boolean shouldShowSelector()>();

        $z2 = virtualinvoke $r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        $i3 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $r0.<android.widget.GridView: android.view.View mReferenceView> = null;

        $i7 = $i4;

     label03:
        if $i7 >= $i6 goto label13;

        if $i7 != $i3 goto label11;

        $z3 = 1;

     label04:
        if $z0 == 0 goto label12;

        $i8 = -1;

     label05:
        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View makeAndAddView(int,int,boolean,int,boolean,int)>($i7, $i0, $z0, $i5, $z3, $i8);

        $r0.<android.widget.GridView: android.view.View mReferenceView> = $r3;

        $i5 = $i5 + $i1;

        $i8 = $i6 - 1;

        if $i7 >= $i8 goto label06;

        $i5 = $i5 + $i2;

     label06:
        if $z3 == 0 goto label08;

        if $z1 != 0 goto label07;

        if $z2 == 0 goto label08;

     label07:
        $r2 = $r3;

     label08:
        $i7 = $i7 + 1;

        goto label03;

     label09:
        $i6 = 0;

        goto label01;

     label10:
        $i6 = $i4 + 1;

        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i4 = $i4 - $i3;

        $i4 = $i4 + 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $i4 = $i3;

        $i7 = $i6 - $i3;

        $i8 = $r0.<android.widget.GridView: int mNumColumns>;

        if $i7 >= $i8 goto label02;

        $i7 = $r0.<android.widget.GridView: int mNumColumns>;

        $i3 = $i6 - $i3;

        $i3 = $i7 - $i3;

        $i7 = $i1 + $i2;

        $i3 = $i3 * $i7;

        $i5 = $i5 + $i3;

        goto label02;

     label11:
        $z3 = 0;

        goto label04;

     label12:
        $i8 = $i7 - $i4;

        goto label05;

     label13:
        if $r2 == null goto label14;

        $r3 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow> = $r3;

        return $r2;

     label14:
        return $r2;
    }

    private android.view.View moveSelection(int, int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        android.view.View $r1, $r2, $r3;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i4 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i3 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i5 = $r0.<android.widget.GridView: int mNumColumns>;

        $i6 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i7 = -1;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label05;

        $i8 = $i3 - $i0;

        $i0 = $i3 - $i0;

        $i0 = $i0 % $i5;

        $i0 = $i8 - $i0;

        $i8 = $i3 % $i5;

        $i8 = $i3 - $i8;

     label01:
        $i3 = $i8 - $i0;

        $i0 = specialinvoke $r0.<android.widget.GridView: int getTopSelectionPixel(int,int,int)>($i1, $i4, $i8);

        $i1 = specialinvoke $r0.<android.widget.GridView: int getBottomSelectionPixel(int,int,int,int)>($i2, $i4, $i5, $i8);

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i8;

        if $i3 <= 0 goto label08;

        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow>;

        if $r1 != null goto label06;

        $i4 = 0;

     label02:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label07;

        $i2 = $i7;

     label03:
        $i4 = $i4 + $i6;

        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i2, $i4, 1);

        $r2 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $r3 = $r2;

        specialinvoke $r0.<android.widget.GridView: void adjustForBottomFadingEdge(android.view.View,int,int)>($r2, $i0, $i1);

     label04:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label18;

        $i0 = $i8 - $i5;

        $i1 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i1 = $i1 - $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        $i0 = $i8 + $i5;

        $i1 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i1 = $i1 + $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i1);

        return $r1;

     label05:
        $i7 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i7 = $i7 - 1;

        $i7 = $i7 - $i3;

        $i8 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i8 = $i8 - 1;

        $i9 = $i7 % $i5;

        $i7 = $i7 - $i9;

        $i7 = $i8 - $i7;

        $i8 = $i7 - $i5;

        $i8 = $i8 + 1;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $i9 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i9 = $i9 - 1;

        $i0 = $i3 - $i0;

        $i0 = $i9 - $i0;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i3 = $i3 - 1;

        $i9 = $i0 % $i5;

        $i0 = $i0 - $i9;

        $i0 = $i3 - $i0;

        $i0 = $i0 - $i5;

        $i0 = $i0 + 1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        goto label01;

     label06:
        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow>;

        $i4 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        goto label02;

     label07:
        $i2 = $i8;

        goto label03;

     label08:
        if $i3 >= 0 goto label13;

        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow>;

        if $r1 != null goto label11;

        $i4 = 0;

     label09:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label12;

        $i2 = $i7;

     label10:
        $i4 = $i4 - $i6;

        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i2, $i4, 0);

        $r2 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        $r3 = $r2;

        specialinvoke $r0.<android.widget.GridView: void adjustForTopFadingEdge(android.view.View,int,int)>($r2, $i0, $i1);

        goto label04;

     label11:
        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow>;

        $i4 = virtualinvoke $r1.<android.view.View: int getTop()>();

        goto label09;

     label12:
        $i2 = $i8;

        goto label10;

     label13:
        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow>;

        if $r1 != null goto label16;

        $i0 = 0;

     label14:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label17;

        $i1 = $i7;

     label15:
        $r1 = specialinvoke $r0.<android.widget.GridView: android.view.View makeRow(int,int,boolean)>($i1, $i0, 1);

        $r3 = $r0.<android.widget.GridView: android.view.View mReferenceView>;

        goto label04;

     label16:
        $r1 = $r0.<android.widget.GridView: android.view.View mReferenceViewInSelectedRow>;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        goto label14;

     label17:
        $i1 = $i8;

        goto label15;

     label18:
        $i0 = $i7 + $i5;

        $i1 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i1 = $i1 + $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i0, $i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        $i0 = $i8 - 1;

        $i1 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i1 = $i1 - $i6;

        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i0, $i1);

        return $r1;
    }

    private void pinToBottom(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i3 = $i1 + $i2;

        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i3 != $i1 goto label1;

        $i2 = $i2 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i0 = $i0 - $i2;

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i0);

        return;

     label1:
        return;

     label2:
        return;
    }

    private void pinToTop(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i1 != 0 goto label1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = $i0 - $i1;

        if $i0 >= 0 goto label2;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i0);

        return;

     label1:
        return;

     label2:
        return;
    }

    private void setupChild(android.view.View, int, int, boolean, int, boolean, boolean, int)
    {
        android.widget.GridView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.AbsListView$LayoutParams $r3;
        android.widget.ListAdapter $r4;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $z1 := @parameter5: boolean;

        $z2 := @parameter6: boolean;

        $i3 := @parameter7: int;

        if $z1 == 0 goto label13;

        $z1 = virtualinvoke $r0.<android.widget.AbsListView: boolean shouldShowSelector()>();

        if $z1 == 0 goto label13;

        $z1 = 1;

     label01:
        $z3 = virtualinvoke $r1.<android.view.View: boolean isSelected()>();

        if $z1 == $z3 goto label14;

        $z3 = 1;

     label02:
        if $z2 == 0 goto label03;

        if $z3 != 0 goto label03;

        $z4 = virtualinvoke $r1.<android.view.View: boolean isLayoutRequested()>();

        if $z4 == 0 goto label15;

     label03:
        $z4 = 1;

     label04:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.AbsListView$LayoutParams) $r2;

        if $r3 != null goto label05;

        $r3 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r3.<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>(-1, -2, 0);

     label05:
        $r4 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i0 = interfaceinvoke $r4.<android.widget.ListAdapter: int getItemViewType(int)>($i0);

        $r3.<android.widget.AbsListView$LayoutParams: int viewType> = $i0;

        if $z2 == 0 goto label16;

        virtualinvoke $r0.<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i3, $r3);

     label06:
        if $z3 == 0 goto label07;

        virtualinvoke $r1.<android.view.View: void setSelected(boolean)>($z1);

        if $z1 == 0 goto label07;

        virtualinvoke $r0.<android.view.View: boolean requestFocus()>();

     label07:
        if $z4 == 0 goto label17;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i3 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i0, 0, $i3);

        $i3 = $r0.<android.widget.GridView: int mColumnWidth>;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        $i4 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        $i3 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i3, 0, $i4);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i0);

     label08:
        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $z0 == 0 goto label18;

        $i0 = $i1;

     label09:
        $i1 = $r0.<android.widget.GridView: int mGravity>;

        $i1 = $i1 & 7;

        lookupswitch($i1)
        {
            case 1: goto label20;
            case 2: goto label10;
            case 3: goto label19;
            case 4: goto label10;
            case 5: goto label21;
            default: goto label10;
        };

     label10:
        $i1 = $i2;

     label11:
        if $z4 == 0 goto label22;

        $i2 = $i1 + $i4;

        $i3 = $i0 + $i3;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i1, $i0, $i2, $i3);

     label12:
        $z0 = $r0.<android.widget.AbsListView: boolean mCachingStarted>;

        if $z0 == 0 goto label23;

        virtualinvoke $r1.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

        return;

     label13:
        $z1 = 0;

        goto label01;

     label14:
        $z3 = 0;

        goto label02;

     label15:
        $z4 = 0;

        goto label04;

     label16:
        virtualinvoke $r0.<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i3, $r3, 1);

        goto label06;

     label17:
        virtualinvoke $r0.<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>($r1);

        goto label08;

     label18:
        $i0 = $i1 - $i3;

        goto label09;

     label19:
        $i1 = $i2;

        goto label11;

     label20:
        $i1 = $r0.<android.widget.GridView: int mColumnWidth>;

        $i1 = $i1 - $i4;

        $i1 = $i1 / 2;

        $i1 = $i2 + $i1;

        goto label11;

     label21:
        $i1 = $r0.<android.widget.GridView: int mColumnWidth>;

        $i1 = $i1 + $i2;

        $i1 = $i1 - $i4;

        goto label11;

     label22:
        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>($i1);

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = $i0 - $i1;

        virtualinvoke $r1.<android.view.View: void offsetTopAndBottom(int)>($i0);

        goto label12;

     label23:
        return;
    }

    boolean arrowScroll(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i3 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $z0 = 0;

        $z1 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 != 0 goto label3;

        $i4 = $i3 / $i2;

        $i4 = $i4 * $i2;

        $i1 = $i4 + $i2;

        $i1 = $i1 - 1;

        $i5 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i5 = $i5 - 1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i5);

     label1:
        lookupswitch($i0)
        {
            case 17: goto label6;
            case 33: goto label4;
            case 66: goto label7;
            case 130: goto label5;
            default: goto label2;
        };

     label2:
        if $z0 == 0 goto label8;

        $i0 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>($i0);

        virtualinvoke $r0.<android.view.View: void playSoundEffect(int)>($i0);

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return $z0;

     label3:
        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i4 = $i4 - 1;

        $i1 = $i4 - $i3;

        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i4 = $i4 - 1;

        $i1 = $i1 / $i2;

        $i1 = $i1 * $i2;

        $i1 = $i4 - $i1;

        $i4 = $i1 - $i2;

        $i4 = $i4 + 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        goto label1;

     label4:
        if $i4 <= 0 goto label2;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 6;

        $i2 = $i3 - $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>($i2);

        $z0 = 1;

        goto label2;

     label5:
        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i4 = $i4 - 1;

        if $i1 >= $i4 goto label2;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 6;

        $i2 = $i3 + $i2;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i3 = $i3 - 1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>($i2);

        $z0 = 1;

        goto label2;

     label6:
        if $i3 <= $i4 goto label2;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 6;

        $i2 = $i3 - 1;

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>($i2);

        $z0 = 1;

        goto label2;

     label7:
        if $i3 >= $i1 goto label2;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 6;

        $i2 = $i3 + 1;

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>($i2);

        $z0 = 1;

        goto label2;

     label8:
        return $z0;
    }

    protected void attachLayoutAnimationParameters(android.view.View, android.view.ViewGroup$LayoutParams, int, int)
    {
        android.widget.GridView $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.animation.LayoutAnimationController$AnimationParameters $r3;
        android.view.animation.GridLayoutAnimationController$AnimationParameters $r4;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = $r2.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters>;

        $r4 = (android.view.animation.GridLayoutAnimationController$AnimationParameters) $r3;

        if $r4 != null goto label1;

        $r4 = new android.view.animation.GridLayoutAnimationController$AnimationParameters;

        specialinvoke $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: void <init>()>();

        $r2.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters> = $r4;

     label1:
        $r4.<android.view.animation.LayoutAnimationController$AnimationParameters: int count> = $i1;

        $r4.<android.view.animation.LayoutAnimationController$AnimationParameters: int index> = $i0;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount> = $i2;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $i2 = $i1 / $i2;

        $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount> = $i2;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label2;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $i0 % $i1;

        $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int column> = $i1;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        $i0 = $i0 / $i1;

        $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int row> = $i0;

        return;

     label2:
        $i1 = $i1 - 1;

        $i0 = $i1 - $i0;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $i1 - 1;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $i2 = $i0 % $i2;

        $i1 = $i1 - $i2;

        $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int column> = $i1;

        $i1 = $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $i1 = $i1 - 1;

        $i2 = $r0.<android.widget.GridView: int mNumColumns>;

        $i0 = $i0 / $i2;

        $i0 = $i1 - $i0;

        $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int row> = $i0;

        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label3;

        $i0 = $r0.<android.widget.GridView: int mNumColumns>;

        $i2 = $i1 + $i0;

        $i2 = $i2 - 1;

        $i0 = $i2 / $i0;

        $i0 = $i0 * 100;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i2 <= 0 goto label1;

        $i3 = $i3 * 100;

        $i2 = $i3 / $i2;

        $i0 = $i0 + $i2;

     label1:
        $i1 = $i1 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i1 <= 0 goto label2;

        $i3 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i2 = $i2 - $i3;

        $i2 = $i2 * 100;

        $i1 = $i2 / $i1;

        $i0 = $i0 - $i1;

     label2:
        return $i0;

     label3:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i1 < 0 goto label1;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i1 <= 0 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i3 = $r0.<android.widget.GridView: int mNumColumns>;

        $i0 = $i0 / $i3;

        $i0 = $i0 * 100;

        $i2 = $i2 * 100;

        $i1 = $i2 / $i1;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        return $i1;

     label1:
        return 0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i1 = $i1 + $i0;

        $i1 = $i1 - 1;

        $i0 = $i1 / $i0;

        $i0 = $i0 * 100;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        return $i0;
    }

    void fillGap(boolean)
    {
        android.widget.GridView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.widget.GridView: int mNumColumns>;

        $i1 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $z0 == 0 goto label4;

        if $i2 <= 0 goto label3;

        $i3 = $i2 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = $i3 + $i1;

     label1:
        $i4 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $i4 + $i2;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label2;

        $i4 = $i0 - 1;

        $i2 = $i2 + $i4;

     label2:
        specialinvoke $r0.<android.widget.GridView: android.view.View fillDown(int,int)>($i2, $i3);

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        specialinvoke $r0.<android.widget.GridView: void correctTooHigh(int,int,int)>($i0, $i1, $i2);

        return;

     label3:
        $i3 = virtualinvoke $r0.<android.widget.AbsListView: int getListPaddingTop()>();

        goto label1;

     label4:
        if $i2 <= 0 goto label7;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = $i2 - $i1;

     label5:
        $i3 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label8;

        $i3 = $i3 - $i0;

     label6:
        specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i3, $i2);

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        specialinvoke $r0.<android.widget.GridView: void correctTooLow(int,int,int)>($i0, $i1, $i2);

        return;

     label7:
        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i3 = virtualinvoke $r0.<android.widget.AbsListView: int getListPaddingBottom()>();

        $i2 = $i2 - $i3;

        goto label5;

     label8:
        $i3 = $i3 + -1;

        goto label6;
    }

    int findMotionRow(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i2 <= 0 goto label7;

        $i1 = $r0.<android.widget.GridView: int mNumColumns>;

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 != 0 goto label3;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label6;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i4 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        if $i0 > $i4 goto label2;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 + $i3;

        return $i0;

     label2:
        $i3 = $i3 + $i1;

        goto label1;

     label3:
        $i3 = $i2 - 1;

     label4:
        if $i3 < 0 goto label6;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i4 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i0 < $i4 goto label5;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 + $i3;

        return $i0;

     label5:
        $i3 = $i3 - $i1;

        goto label4;

     label6:
        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 + $i2;

        $i0 = $i0 - 1;

        return $i0;

     label7:
        return -1;
    }

    boolean fullScroll(int)
    {
        android.widget.GridView $r0;
        int $i0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        if $i0 != 33 goto label1;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 2;

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>(0);

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return 1;

     label1:
        if $i0 != 130 goto label2;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 2;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i0 = $i0 - 1;

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>($i0);

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return 1;

     label2:
        return 0;
    }

    public volatile android.widget.Adapter getAdapter()
    {
        android.widget.GridView $r0;
        android.widget.ListAdapter $r1;

        $r0 := @this: android.widget.GridView;

        $r1 = virtualinvoke $r0.<android.widget.GridView: android.widget.ListAdapter getAdapter()>();

        return $r1;
    }

    public android.widget.ListAdapter getAdapter()
    {
        android.widget.GridView $r0;
        android.widget.ListAdapter r1;

        $r0 := @this: android.widget.GridView;

        r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        return r1;
    }

    public int getStretchMode()
    {
        android.widget.GridView $r0;
        int i0;

        $r0 := @this: android.widget.GridView;

        i0 = $r0.<android.widget.GridView: int mStretchMode>;

        return i0;
    }

    protected void layoutChildren()
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        android.widget.ListAdapter $r1;
        android.graphics.Rect $r2;
        android.view.View $r3, $r4, $r5, $r7;
        android.widget.AbsListView$RecycleBin $r6;
        java.lang.Throwable $r8;

        $r0 := @this: android.widget.GridView;

        $z0 = $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests>;

        if $z0 != 0 goto label01;

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 1;

     label01:
        specialinvoke $r0.<android.widget.AbsListView: void layoutChildren()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r1 != null goto label03;

        virtualinvoke $r0.<android.widget.AbsListView: void resetList()>();

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

     label02:
        if $z0 != 0 goto label63;

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 0;

        return;

     label03:
        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i0 = $r0.<android.view.View: int mBottom>;

        $i2 = $r0.<android.view.View: int mTop>;

        $i0 = $i0 - $i2;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

     label04:
        $i3 = 0;

        $r3 = null;

        $r4 = null;

     label05:
        $r5 = null;

        $i4 = $r0.<android.widget.AbsListView: int mLayoutMode>;

        lookupswitch($i4)
        {
            case 1: goto label10;
            case 2: goto label13;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label17;
            default: goto label06;
        };

     label06:
        $i4 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i5 = $r0.<android.widget.AdapterView: int mFirstPosition>;

     label07:
        $i4 = $i4 - $i5;

     label08:
        if $i4 < 0 goto label09;

        if $i4 >= $i2 goto label09;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

     label09:
        $r4 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

     label10:
        $z1 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z1 == 0 goto label11;

        virtualinvoke $r0.<android.widget.AbsListView: void handleDataChanged()>();

     label11:
        $i4 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i4 != 0 goto label20;

        virtualinvoke $r0.<android.widget.AbsListView: void resetList()>();

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

     label12:
        if $z0 != 0 goto label64;

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 0;

        return;

     label13:
        $i4 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        $i5 = $r0.<android.widget.AdapterView: int mFirstPosition>;

     label14:
        $i4 = $i4 - $i5;

     label15:
        if $i4 < 0 goto label10;

        if $i4 >= $i2 goto label10;

        $r5 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

     label16:
        goto label10;

     label17:
        $i4 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        if $i4 < 0 goto label10;

        $i3 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        $i4 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

     label18:
        $i3 = $i3 - $i4;

     label19:
        goto label10;

     label20:
        $i4 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>($i4);

        $i4 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $r6 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        if $z1 == 0 goto label24;

     label21:
        $i4 = 0;

     label22:
        if $i4 >= $i2 goto label25;

        $r7 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View)>($r7);

     label23:
        $i4 = $i4 + 1;

        goto label22;

     label24:
        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void fillActiveViews(int,int)>($i2, $i4);

     label25:
        virtualinvoke $r0.<android.view.ViewGroup: void detachAllViewsFromParent()>();

        $i4 = $r0.<android.widget.AbsListView: int mLayoutMode>;

        lookupswitch($i4)
        {
            case 1: goto label36;
            case 2: goto label31;
            case 3: goto label40;
            case 4: goto label41;
            case 5: goto label43;
            case 6: goto label45;
            default: goto label26;
        };

     label26:
        if $i2 != 0 goto label49;

        $z1 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 != 0 goto label47;

        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>(0);

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillFromTop(int)>($i1);

     label27:
        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void scrapActiveViews()>();

        if $r3 == null goto label61;

        virtualinvoke $r0.<android.widget.AbsListView: void positionSelector(android.view.View)>($r3);

        $i1 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $r0.<android.widget.AbsListView: int mSelectedTop> = $i1;

     label28:
        $r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $r0.<android.widget.AdapterView: boolean mDataChanged> = 0;

        $r0.<android.widget.AdapterView: boolean mNeedSync> = 0;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i1);

        virtualinvoke $r0.<android.widget.AbsListView: void updateScrollIndicators()>();

        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i1 <= 0 goto label29;

        virtualinvoke $r0.<android.widget.AdapterView: void checkSelectionChanged()>();

     label29:
        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

     label30:
        if $z0 != 0 goto label65;

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 0;

        return;

     label31:
        if $r5 == null goto label34;

     label32:
        $i2 = virtualinvoke $r5.<android.view.View: int getTop()>();

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillFromSelection(int,int,int)>($i2, $i1, $i0);

     label33:
        goto label27;

     label34:
        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillSelection(int,int)>($i1, $i0);

     label35:
        goto label27;

     label36:
        $r0.<android.widget.AdapterView: int mFirstPosition> = 0;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillFromTop(int)>($i1);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

     label37:
        goto label27;

     label38:
        $r8 := @caughtexception;

        if $z0 != 0 goto label39;

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 0;

     label39:
        throw $r8;

     label40:
        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i1 = $i1 - 1;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillUp(int,int)>($i1, $i0);

        specialinvoke $r0.<android.widget.GridView: void adjustViewsUpOrDown()>();

        goto label27;

     label41:
        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i0 = $r0.<android.widget.AdapterView: int mSpecificTop>;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillSpecific(int,int)>($i1, $i0);

     label42:
        goto label27;

     label43:
        $i1 = $r0.<android.widget.AdapterView: int mSyncPosition>;

        $i0 = $r0.<android.widget.AdapterView: int mSpecificTop>;

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillSpecific(int,int)>($i1, $i0);

     label44:
        goto label27;

     label45:
        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View moveSelection(int,int,int)>($i3, $i1, $i0);

     label46:
        goto label27;

     label47:
        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i1 = $i1 - 1;

        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>($i1);

        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillFromBottom(int,int)>($i1, $i0);

     label48:
        goto label27;

     label49:
        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i0 < 0 goto label54;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i0 >= $i2 goto label54;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $r3 != null goto label52;

     label50:
        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillSpecific(int,int)>($i0, $i1);

     label51:
        goto label27;

     label52:
        $i1 = virtualinvoke $r3.<android.view.View: int getTop()>();

     label53:
        goto label50;

     label54:
        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i0 >= $i2 goto label59;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $r4 != null goto label57;

     label55:
        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillSpecific(int,int)>($i0, $i1);

     label56:
        goto label27;

     label57:
        $i1 = virtualinvoke $r4.<android.view.View: int getTop()>();

     label58:
        goto label55;

     label59:
        $r3 = specialinvoke $r0.<android.widget.GridView: android.view.View fillSpecific(int,int)>(0, $i1);

     label60:
        goto label27;

     label61:
        $r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

     label62:
        goto label28;

     label63:
        return;

     label64:
        return;

     label65:
        return;

        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Throwable from label05 to label07 with label38;
        catch java.lang.Throwable from label08 to label12 with label38;
        catch java.lang.Throwable from label13 to label14 with label38;
        catch java.lang.Throwable from label15 to label16 with label38;
        catch java.lang.Throwable from label16 to label18 with label38;
        catch java.lang.Throwable from label19 to label21 with label38;
        catch java.lang.Throwable from label22 to label23 with label38;
        catch java.lang.Throwable from label24 to label30 with label38;
        catch java.lang.Throwable from label32 to label33 with label38;
        catch java.lang.Throwable from label33 to label35 with label38;
        catch java.lang.Throwable from label35 to label37 with label38;
        catch java.lang.Throwable from label40 to label42 with label38;
        catch java.lang.Throwable from label42 to label44 with label38;
        catch java.lang.Throwable from label44 to label46 with label38;
        catch java.lang.Throwable from label46 to label48 with label38;
        catch java.lang.Throwable from label48 to label51 with label38;
        catch java.lang.Throwable from label51 to label53 with label38;
        catch java.lang.Throwable from label53 to label56 with label38;
        catch java.lang.Throwable from label56 to label58 with label38;
        catch java.lang.Throwable from label58 to label60 with label38;
        catch java.lang.Throwable from label60 to label62 with label38;
    }

    int lookForSelectablePosition(int, boolean)
    {
        android.widget.GridView $r0;
        int $i0, $i1;
        boolean $z0;
        android.widget.ListAdapter $r1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 == 0 goto label2;

     label1:
        return -1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i0 < $i1 goto label4;

     label3:
        return -1;

     label4:
        return $i0;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.GridView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect $r1, $r2;
        android.view.View $r3;

        $r0 := @this: android.widget.GridView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        specialinvoke $r0.<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>($z0, $i0, $r1);

        $i2 = -1;

        if $z0 == 0 goto label4;

        if $r1 == null goto label4;

        $i3 = $r0.<android.view.View: int mScrollX>;

        $i1 = $r0.<android.view.View: int mScrollY>;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i3, $i1);

        $r2 = $r0.<android.widget.GridView: android.graphics.Rect mTempRect>;

        $i1 = 2147483647;

        $i3 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label4;

        $z0 = specialinvoke $r0.<android.widget.GridView: boolean isCandidateSelection(int,int)>($i4, $i0);

        if $z0 != 0 goto label3;

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        virtualinvoke $r3.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        virtualinvoke $r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r3, $r2);

        $i5 = staticinvoke <android.widget.GridView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)>($r1, $r2, $i0);

        if $i5 >= $i1 goto label2;

        $i1 = $i5;

        $i2 = $i4;

        goto label2;

     label4:
        if $i2 < 0 goto label5;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 + $i2;

        virtualinvoke $r0.<android.widget.GridView: void setSelection(int)>($i0);

        return;

     label5:
        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.GridView $r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.widget.GridView: boolean commonKey(int,int,android.view.KeyEvent)>($i0, 1, $r1);

        return $z0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.widget.GridView $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.widget.GridView: boolean commonKey(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.GridView $r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.widget.GridView: boolean commonKey(int,int,android.view.KeyEvent)>($i0, 1, $r1);

        return $z0;
    }

    protected void onMeasure(int, int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect $r1;
        android.widget.ListAdapter $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.AbsListView$LayoutParams $r5;
        android.widget.AbsListView$RecycleBin $r6;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.widget.AbsListView: void onMeasure(int,int)>($i0, $i1);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i2 != 0 goto label02;

        $i4 = $r0.<android.widget.GridView: int mColumnWidth>;

        if $i4 <= 0 goto label11;

        $i4 = $r0.<android.widget.GridView: int mColumnWidth>;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        $i4 = $i4 + $i2;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $i4 = $i4 + $i2;

     label01:
        $i2 = virtualinvoke $r0.<android.view.View: int getVerticalScrollbarWidth()>();

        $i4 = $i4 + $i2;

     label02:
        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        $i2 = $i4 - $i2;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i5 = $r1.<android.graphics.Rect: int right>;

        $i2 = $i2 - $i5;

        specialinvoke $r0.<android.widget.GridView: void determineColumns(int)>($i2);

        $i5 = 0;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 != null goto label12;

        $i2 = 0;

     label03:
        $r0.<android.widget.AdapterView: int mItemCount> = $i2;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i2 <= 0 goto label05;

        $r3 = virtualinvoke $r0.<android.widget.AbsListView: android.view.View obtainView(int)>(0);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.AbsListView$LayoutParams) $r4;

        if $r5 != null goto label04;

        $r5 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r5.<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>(-1, -2, 0);

        virtualinvoke $r3.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

     label04:
        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i5 = interfaceinvoke $r2.<android.widget.ListAdapter: int getItemViewType(int)>(0);

        $r5.<android.widget.AbsListView$LayoutParams: int viewType> = $i5;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i6 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        $i5 = staticinvoke <android.widget.GridView: int getChildMeasureSpec(int,int,int)>($i5, 0, $i6);

        $i6 = $r0.<android.widget.GridView: int mColumnWidth>;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);

        $i7 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        $i6 = staticinvoke <android.widget.GridView: int getChildMeasureSpec(int,int,int)>($i6, 0, $i7);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i6, $i5);

        $i5 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $r6 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $i6 = $r5.<android.widget.AbsListView$LayoutParams: int viewType>;

        $z0 = virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: boolean shouldRecycleViewType(int)>($i6);

        if $z0 == 0 goto label05;

        $r6 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View)>($r3);

     label05:
        if $i3 != 0 goto label06;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $i1 + $i6;

        $i1 = $i1 + $i5;

        $i6 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i6 = $i6 * 2;

        $i1 = $i1 + $i6;

     label06:
        if $i3 != -2147483648 goto label10;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = $r1.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + $i6;

        $i6 = $r0.<android.widget.GridView: int mNumColumns>;

        $i7 = 0;

     label07:
        if $i7 >= $i2 goto label09;

        $i3 = $i3 + $i5;

        $i8 = $i7 + $i6;

        if $i8 >= $i2 goto label08;

        $i8 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        $i3 = $i3 + $i8;

     label08:
        if $i3 < $i1 goto label13;

        $i3 = $i1;

     label09:
        $i1 = $i3;

     label10:
        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i4, $i1);

        $r0.<android.widget.AbsListView: int mWidthMeasureSpec> = $i0;

        return;

     label11:
        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r1.<android.graphics.Rect: int left>;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $i4 = $i4 + $i2;

        goto label01;

     label12:
        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i2 = interfaceinvoke $r2.<android.widget.ListAdapter: int getCount()>();

        goto label03;

     label13:
        $i7 = $i7 + $i6;

        goto label07;
    }

    boolean pageScroll(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = -1;

        if $i0 != 33 goto label2;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 - 1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

     label1:
        if $i1 < 0 goto label3;

        virtualinvoke $r0.<android.widget.GridView: void setSelectionInt(int)>($i1);

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return 1;

     label2:
        if $i0 != 130 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i0 = $i0 - 1;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 - 1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        goto label1;

     label3:
        return 0;
    }

    public volatile void setAdapter(android.widget.Adapter)
    {
        android.widget.GridView $r0;
        android.widget.Adapter $r1;
        android.widget.ListAdapter $r2;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.widget.Adapter;

        $r2 = (android.widget.ListAdapter) $r1;

        virtualinvoke $r0.<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>($r2);

        return;
    }

    public void setAdapter(android.widget.ListAdapter)
    {
        android.widget.GridView $r0;
        android.widget.ListAdapter $r1, $r2;
        android.widget.AdapterView$AdapterDataSetObserver $r3;
        android.widget.AbsListView$RecycleBin $r4;
        int $i0;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $r1 := @parameter0: android.widget.ListAdapter;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r3 = $r0.<android.widget.AbsListView: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r2.<android.widget.ListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r3);

     label1:
        virtualinvoke $r0.<android.widget.AbsListView: void resetList()>();

        $r4 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r4.<android.widget.AbsListView$RecycleBin: void clear()>();

        $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter> = $r1;

        $r0.<android.widget.AdapterView: int mOldSelectedPosition> = -1;

        $r0.<android.widget.AdapterView: long mOldSelectedRowId> = -9223372036854775808L;

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r1 == null goto label5;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        $r0.<android.widget.AdapterView: int mOldItemCount> = $i0;

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i0 = interfaceinvoke $r1.<android.widget.ListAdapter: int getCount()>();

        $r0.<android.widget.AdapterView: int mItemCount> = $i0;

        $r0.<android.widget.AdapterView: boolean mDataChanged> = 1;

        virtualinvoke $r0.<android.widget.AdapterView: void checkFocus()>();

        $r3 = new android.widget.AdapterView$AdapterDataSetObserver;

        specialinvoke $r3.<android.widget.AdapterView$AdapterDataSetObserver: void <init>(android.widget.AdapterView)>($r0);

        $r0.<android.widget.AbsListView: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver> = $r3;

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r3 = $r0.<android.widget.AbsListView: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r1.<android.widget.ListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r3);

        $r4 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i0 = interfaceinvoke $r1.<android.widget.ListAdapter: int getViewTypeCount()>();

        virtualinvoke $r4.<android.widget.AbsListView$RecycleBin: void setViewTypeCount(int)>($i0);

        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label4;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i0 = $i0 - 1;

        $i0 = virtualinvoke $r0.<android.widget.GridView: int lookForSelectablePosition(int,boolean)>($i0, 0);

     label2:
        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>($i0);

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i0);

        virtualinvoke $r0.<android.widget.AdapterView: void checkSelectionChanged()>();

     label3:
        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        return;

     label4:
        $i0 = virtualinvoke $r0.<android.widget.GridView: int lookForSelectablePosition(int,boolean)>(0, 1);

        goto label2;

     label5:
        virtualinvoke $r0.<android.widget.AdapterView: void checkFocus()>();

        virtualinvoke $r0.<android.widget.AdapterView: void checkSelectionChanged()>();

        goto label3;
    }

    public void setColumnWidth(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.GridView: int mRequestedColumnWidth>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.GridView: int mRequestedColumnWidth> = $i0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public void setGravity(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.GridView: int mGravity>;

        if $i1 == $i0 goto label1;

        $r0.<android.widget.GridView: int mGravity> = $i0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public void setHorizontalSpacing(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.GridView: int mRequestedHorizontalSpacing>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.GridView: int mRequestedHorizontalSpacing> = $i0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public void setNumColumns(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.GridView: int mRequestedNumColumns>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.GridView: int mRequestedNumColumns> = $i0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public void setSelection(int)
    {
        android.widget.GridView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i0);

     label1:
        $r0.<android.widget.AbsListView: int mLayoutMode> = 2;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        return;

     label2:
        $r0.<android.widget.AbsListView: int mResurrectToPosition> = $i0;

        goto label1;
    }

    void setSelectionInt(int)
    {
        android.widget.GridView $r0;
        int $i0;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i0);

        virtualinvoke $r0.<android.widget.GridView: void layoutChildren()>();

        return;
    }

    public void setStretchMode(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.GridView: int mStretchMode>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.GridView: int mStretchMode> = $i0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public void setVerticalSpacing(int)
    {
        android.widget.GridView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.GridView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.GridView: int mVerticalSpacing>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.GridView: int mVerticalSpacing> = $i0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.widget.GridView: int STRETCH_SPACING_UNIFORM> = 3;

        <android.widget.GridView: int STRETCH_SPACING> = 1;

        <android.widget.GridView: int STRETCH_COLUMN_WIDTH> = 2;

        <android.widget.GridView: int NO_STRETCH> = 0;

        <android.widget.GridView: int AUTO_FIT> = -1;

        return;
    }
}
