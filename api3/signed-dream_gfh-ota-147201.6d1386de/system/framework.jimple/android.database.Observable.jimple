public abstract class android.database.Observable extends java.lang.Object
{
    protected final java.util.ArrayList mObservers;

    public void <init>()
    {
        android.database.Observable $r0;
        java.util.ArrayList $r1;

        $r0 := @this: android.database.Observable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<android.database.Observable: java.util.ArrayList mObservers> = $r1;

        return;
    }

    public void registerObserver(java.lang.Object)
    {
        android.database.Observable $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.ArrayList $r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.database.Observable;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The observer is null.");

        throw $r2;

     label1:
        $r3 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        entermonitor $r3;

     label2:
        $r4 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Observer ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already registered.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r8;

     label5:
        $r4 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        exitmonitor $r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void unregisterAll()
    {
        android.database.Observable $r0;
        java.util.ArrayList $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.database.Observable;

        $r1 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unregisterObserver(java.lang.Object)
    {
        android.database.Observable $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.ArrayList $r3, $r4;
        int $i0;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.database.Observable;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The observer is null.");

        throw $r2;

     label1:
        $r3 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        entermonitor $r3;

     label2:
        $r4 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        if $i0 != -1 goto label5;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Observer ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not registered.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r8;

     label5:
        $r4 = $r0.<android.database.Observable: java.util.ArrayList mObservers>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        exitmonitor $r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
}
