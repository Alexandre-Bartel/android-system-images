public class com.google.common.async.AsyncHttpRequestFactory extends java.lang.Object implements java.lang.Runnable
{
    private static final int DEFAULT_WORKER_COUNT;
    private static final java.lang.String DEFAULT_WORKER_NAME;
    private com.google.common.io.HttpConnectionFactory connectionFactory;
    private java.lang.Object mutex;
    private java.lang.String name;
    private java.util.Vector queue;
    private boolean running;
    private com.google.common.task.TaskRunner taskRunner;
    private com.google.common.lang.ThreadFactory threadFactory;
    private java.lang.Thread[] workers;

    public void <init>(com.google.common.task.TaskRunner, com.google.common.lang.ThreadFactory, com.google.common.io.HttpConnectionFactory)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.task.TaskRunner $r1;
        com.google.common.lang.ThreadFactory $r2;
        com.google.common.io.HttpConnectionFactory $r3;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter0: com.google.common.task.TaskRunner;

        $r2 := @parameter1: com.google.common.lang.ThreadFactory;

        $r3 := @parameter2: com.google.common.io.HttpConnectionFactory;

        specialinvoke $r0.<com.google.common.async.AsyncHttpRequestFactory: void <init>(com.google.common.task.TaskRunner,com.google.common.lang.ThreadFactory,com.google.common.io.HttpConnectionFactory,java.lang.String,int)>($r1, $r2, $r3, "AsyncHttpRequestFactory", 1);

        return;
    }

    public void <init>(com.google.common.task.TaskRunner, com.google.common.lang.ThreadFactory, com.google.common.io.HttpConnectionFactory, java.lang.String, int)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.task.TaskRunner $r1;
        com.google.common.lang.ThreadFactory $r2;
        com.google.common.io.HttpConnectionFactory $r3;
        java.lang.String $r4;
        int $i0;
        java.util.Vector $r5;
        java.lang.Object $r6;
        java.lang.Thread[] $r7;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter0: com.google.common.task.TaskRunner;

        $r2 := @parameter1: com.google.common.lang.ThreadFactory;

        $r3 := @parameter2: com.google.common.io.HttpConnectionFactory;

        $r4 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex> = $r6;

        $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.task.TaskRunner taskRunner> = $r1;

        $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.lang.ThreadFactory threadFactory> = $r2;

        $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.io.HttpConnectionFactory connectionFactory> = $r3;

        $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.String name> = $r4;

        $r7 = newarray (java.lang.Thread)[$i0];

        $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Thread[] workers> = $r7;

        return;
    }

    static com.google.common.task.TaskRunner access$000(com.google.common.async.AsyncHttpRequestFactory)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.task.TaskRunner $r1;

        $r0 := @parameter0: com.google.common.async.AsyncHttpRequestFactory;

        $r1 = specialinvoke $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.task.TaskRunner getTaskRunner()>();

        return $r1;
    }

    static com.google.common.io.GoogleHttpConnection access$100(com.google.common.async.AsyncHttpRequestFactory, java.lang.String, boolean) throws java.io.IOException
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        java.lang.String $r1;
        boolean $z0;
        com.google.common.io.GoogleHttpConnection $r2;

        $r0 := @parameter0: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 = specialinvoke $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.io.GoogleHttpConnection createHttpConnection(java.lang.String,boolean)>($r1, $z0);

        return $r2;
    }

    static boolean access$200(com.google.common.async.AsyncHttpRequestFactory, com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter1: com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl;

        $z0 = specialinvoke $r0.<com.google.common.async.AsyncHttpRequestFactory: boolean submitRequest(com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl)>($r1);

        return $z0;
    }

    private com.google.common.io.GoogleHttpConnection createHttpConnection(java.lang.String, boolean) throws java.io.IOException
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        java.lang.String $r1;
        boolean $z0;
        com.google.common.io.GoogleHttpConnection $r2;
        com.google.common.io.HttpConnectionFactory $r3;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.io.HttpConnectionFactory connectionFactory>;

        $r2 = interfaceinvoke $r3.<com.google.common.io.HttpConnectionFactory: com.google.common.io.GoogleHttpConnection createConnection(java.lang.String,boolean)>($r1, $z0);

        return $r2;
    }

    private com.google.common.task.TaskRunner getTaskRunner()
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.task.TaskRunner r1;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        r1 = $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.task.TaskRunner taskRunner>;

        return r1;
    }

    private boolean submitRequest(com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl $r1;
        boolean $z0;
        java.lang.Object $r2, $r4;
        java.util.Vector $r3;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter0: com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl;

        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue>;

        $z0 = virtualinvoke $r3.<java.util.Vector: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r4 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor $r2;

     label2:
        return 1;

     label3:
        exitmonitor $r2;

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean cancelRequest(com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.Vector $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter0: com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl;

        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue>;

        $z0 = virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.google.common.async.AsyncHttpRequest createAsyncHttpRequest(java.lang.String)
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        java.lang.String $r1;
        com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl $r2;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl;

        specialinvoke $r2.<com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl: void <init>(com.google.common.async.AsyncHttpRequestFactory,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public void run()
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        java.lang.Object $r1, $r3;
        java.util.Vector $r2;
        int $i0;
        java.lang.InterruptedException $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r7;
        com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl $r6;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

     label01:
        $r1 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        entermonitor $r1;

     label02:
        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

     label03:
        if $i0 != 0 goto label10;

     label04:
        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

     label05:
        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label06:
        goto label02;

     label07:
        $r4 := @caughtexception;

     label08:
        exitmonitor $r1;

     label09:
        return;

     label10:
        $z0 = $r0.<com.google.common.async.AsyncHttpRequestFactory: boolean running>;

        if $z0 != 0 goto label14;

        exitmonitor $r1;

     label11:
        return;

     label12:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label13:
        throw $r5;

     label14:
        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        $r6 = (com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl) $r3;

        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.util.Vector queue>;

        virtualinvoke $r2.<java.util.Vector: void removeElementAt(int)>(0);

        exitmonitor $r1;

     label15:
        virtualinvoke $r6.<com.google.common.async.AsyncHttpRequestFactory$AsyncHttpRequestImpl: void run()>();

     label16:
        goto label01;

     label17:
        $r7 := @caughtexception;

        goto label01;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label04 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void start()
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.Thread[] $r2;
        com.google.common.lang.ThreadFactory $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Thread $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $z0 = $r0.<com.google.common.async.AsyncHttpRequestFactory: boolean running>;

        if $z0 != 0 goto label3;

        $r0.<com.google.common.async.AsyncHttpRequestFactory: boolean running> = 1;

        $i0 = 0;

     label2:
        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Thread[] workers>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Thread[] workers>;

        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: com.google.common.lang.ThreadFactory threadFactory>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<com.google.common.lang.ThreadFactory: java.lang.Thread createThread(java.lang.String,java.lang.Runnable)>($r5, $r0);

        $r2[$i0] = $r6;

        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Thread[] workers>;

        $r6 = $r2[$i0];

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        $i0 = $i0 + 1;

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void stop()
    {
        com.google.common.async.AsyncHttpRequestFactory $r0;
        java.lang.Object $r1, $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.Thread[] $r2;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.common.async.AsyncHttpRequestFactory;

        $r1 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $z0 = $r0.<com.google.common.async.AsyncHttpRequestFactory: boolean running>;

        if $z0 != 1 goto label4;

        $r0.<com.google.common.async.AsyncHttpRequestFactory: boolean running> = 0;

        $i0 = 0;

     label2:
        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Thread[] workers>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Thread[] workers>;

        $r2[$i0] = null;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r3 = $r0.<com.google.common.async.AsyncHttpRequestFactory: java.lang.Object mutex>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

     label4:
        exitmonitor $r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void <clinit>()
    {
        <com.google.common.async.AsyncHttpRequestFactory: java.lang.String DEFAULT_WORKER_NAME> = "AsyncHttpRequestFactory";

        <com.google.common.async.AsyncHttpRequestFactory: int DEFAULT_WORKER_COUNT> = 1;

        return;
    }
}
