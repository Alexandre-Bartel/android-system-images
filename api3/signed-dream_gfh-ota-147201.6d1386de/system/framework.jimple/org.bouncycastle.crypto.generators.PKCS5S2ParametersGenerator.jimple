public class org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator extends org.bouncycastle.crypto.PBEParametersGenerator
{
    private org.bouncycastle.crypto.Mac hMac;

    public void <init>()
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        org.bouncycastle.crypto.macs.HMac $r1;
        org.bouncycastle.crypto.digests.SHA1Digest $r2;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        specialinvoke $r0.<org.bouncycastle.crypto.PBEParametersGenerator: void <init>()>();

        $r1 = new org.bouncycastle.crypto.macs.HMac;

        $r2 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r2.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r1.<org.bouncycastle.crypto.macs.HMac: void <init>(org.bouncycastle.crypto.Digest)>($r2);

        $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac> = $r1;

        return;
    }

    private void F(byte[], byte[], int, byte[], byte[], int)
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        byte[] $r1, $r2, $r3, $r4, $r6;
        int $i0, $i1, $i3, $i4, $i5;
        org.bouncycastle.crypto.params.KeyParameter $r5;
        byte $b2, $b6;
        org.bouncycastle.crypto.Mac $r7;
        java.lang.IllegalArgumentException $r8;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        $i1 := @parameter5: int;

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i3 = interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: int getMacSize()>();

        $r6 = newarray (byte)[$i3];

        $r5 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r1);

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: void init(org.bouncycastle.crypto.CipherParameters)>($r5);

        if $r2 == null goto label1;

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i3 = lengthof $r2;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>($r2, 0, $i3);

     label1:
        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i3 = lengthof $r3;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>($r3, 0, $i3);

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>($r6, 0);

        $i3 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r4, $i1, $i3);

        if $i0 != 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iteration count must be at least 1.");

        throw $r8;

     label2:
        $i3 = 1;

     label3:
        if $i3 >= $i0 goto label6;

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: void init(org.bouncycastle.crypto.CipherParameters)>($r5);

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i4 = lengthof $r6;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>($r6, 0, $i4);

        $r7 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>($r6, 0);

        $i4 = 0;

     label4:
        $i5 = lengthof $r6;

        if $i4 == $i5 goto label5;

        $i5 = $i1 + $i4;

        $b6 = $r4[$i5];

        $b2 = $r6[$i4];

        $b2 = $b6 ^ $b2;

        $b2 = (byte) $b2;

        $r4[$i5] = $b2;

        $i4 = $i4 + 1;

        goto label4;

     label5:
        $i3 = $i3 + 1;

        goto label3;

     label6:
        return;
    }

    private byte[] generateDerivedKey(int)
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r2, $r3, $r4;
        org.bouncycastle.crypto.Mac $r5;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        $i0 := @parameter0: int;

        $r5 = $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.Mac hMac>;

        $i3 = interfaceinvoke $r5.<org.bouncycastle.crypto.Mac: int getMacSize()>();

        $i0 = $i0 + $i3;

        $i0 = $i0 - 1;

        $i0 = $i0 / $i3;

        $r3 = newarray (byte)[4];

        $i1 = $i0 * $i3;

        $r4 = newarray (byte)[$i1];

        $i4 = 1;

     label1:
        if $i4 > $i0 goto label2;

        specialinvoke $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: void intToOctet(byte[],int)>($r3, $i4);

        $r1 = $r0.<org.bouncycastle.crypto.PBEParametersGenerator: byte[] password>;

        $r2 = $r0.<org.bouncycastle.crypto.PBEParametersGenerator: byte[] salt>;

        $i1 = $r0.<org.bouncycastle.crypto.PBEParametersGenerator: int iterationCount>;

        $i2 = $i4 - 1;

        $i2 = $i2 * $i3;

        specialinvoke $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: void F(byte[],byte[],int,byte[],byte[],int)>($r1, $r2, $i1, $r3, $r4, $i2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return $r4;
    }

    private void intToOctet(byte[], int)
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 >>> 24;

        $b2 = (byte) $i1;

        $r1[0] = $b2;

        $i1 = $i0 >>> 16;

        $b2 = (byte) $i1;

        $r1[1] = $b2;

        $i1 = $i0 >>> 8;

        $b2 = (byte) $i1;

        $r1[2] = $b2;

        $b2 = (byte) $i0;

        $r1[3] = $b2;

        return;
    }

    public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        int $i0;
        org.bouncycastle.crypto.CipherParameters $r1;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)>($i0);

        return $r1;
    }

    public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        org.bouncycastle.crypto.params.KeyParameter $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        $i0 := @parameter0: int;

        $i0 = $i0 / 8;

        $r2 = specialinvoke $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: byte[] generateDerivedKey(int)>($i0);

        $r1 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r1.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 0, $i0);

        return $r1;
    }

    public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)
    {
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r0;
        org.bouncycastle.crypto.params.KeyParameter $r1;
        byte[] $r2;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.params.ParametersWithIV $r3;

        $r0 := @this: org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 / 8;

        $i1 = $i1 / 8;

        $i2 = $i0 + $i1;

        $r2 = specialinvoke $r0.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: byte[] generateDerivedKey(int)>($i2);

        $r3 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r1 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r1.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 0, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[],int,int)>($r1, $r2, $i0, $i1);

        return $r3;
    }
}
