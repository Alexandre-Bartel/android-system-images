public class org.apache.harmony.awt.gl.render.JavaShapeRasterizer extends java.lang.Object
{
    static final int POINT_CAPACITY;
    int activeCount;
    int[] activeDY;
    boolean[] activeExt;
    float[] activeX;
    float[] activeXStep;
    int[] activeYEnd;
    int boundCount;
    int[] bounds;
    int[] crossDY;
    int[] crossX;
    int edgeCur;
    int edgesCount;
    int[] edgesDY;
    boolean[] edgesExt;
    int[] edgesN;
    int[] edgesX;
    int[] edgesY;
    int[] edgesYS;
    org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler filler;

    public void <init>()
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void addActiveEdge(int, int, int, boolean)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        float $f0, $f1;
        int[] $r1, $r3;
        float[] $r2;
        boolean[] $r4, $r5;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label2;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY>;

        $i0 = $r1[$i2];

        $i0 = neg $i0;

     label1:
        if $i0 > 0 goto label3;

        return;

     label2:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY>;

        $i0 = $r1[$i1];

        goto label1;

     label3:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesX>;

        $i4 = $r1[$i1];

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesX>;

        $i3 = $r1[$i2];

        $i3 = $i3 - $i4;

        $r2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeX>;

        $i5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        $f0 = (float) $i4;

        $r2[$i5] = $f0;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeYEnd>;

        $i4 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $i5 = $r3[$i2];

        $r1[$i4] = $i5;

        $r2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeXStep>;

        $i4 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        $f1 = (float) $i3;

        $f0 = (float) $i0;

        $f0 = $f1 / $f0;

        $r2[$i4] = $f0;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeDY>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        if $z0 == 0 goto label6;

        $i0 = neg $i0;

     label4:
        $r1[$i3] = $i0;

        $r4 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] activeExt>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        if $z0 == 0 goto label7;

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] edgesExt>;

        $z0 = $r5[$i2];

     label5:
        $r4[$i0] = $z0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount> = $i0;

        return;

     label6:
        goto label4;

     label7:
        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] edgesExt>;

        $z0 = $r5[$i1];

        goto label5;
    }

    void addEdge(int, int, int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesX>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] checkBufSize(int[],int)>($r1, $i3);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesX> = $r1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] checkBufSize(int[],int)>($r1, $i3);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY> = $r1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] checkBufSize(int[],int)>($r1, $i3);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN> = $r1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesX>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1[$i3] = $i0;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1[$i0] = $i1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $i2 = $i2 << 16;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $i1 = $i2 | $i1;

        $r1[$i0] = $i1;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount> = $i0;

        return;
    }

    int[] checkBufSize(int[], int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1;
        int[] $r1, $r2;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $r2 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r2;

        if $i0 != $i1 goto label1;

        $i0 = $i0 + 16;

        $r1 = newarray (int)[$i0];

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;

     label1:
        return $r2;
    }

    int findActiveEdges(int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i0 := @parameter0: int;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgeCur>;

     label1:
        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        if $i3 >= $i1 goto label2;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesYS>;

        $i1 = $r1[$i3];

        if $i1 != $i0 goto label2;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i1 = $i3;

     label3:
        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgeCur>;

        if $i3 <= $i2 goto label4;

        $i3 = $i3 + -1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i2 = $r1[$i3];

        $i2 = $i2 & 65535;

        $i4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getPrev(int)>($i3);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void addActiveEdge(int,int,int,boolean)>($i0, $i2, $i4, 1);

        $i4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getNext(int)>($i3);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void addActiveEdge(int,int,int,boolean)>($i0, $i2, $i4, 0);

        goto label3;

     label4:
        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgeCur> = $i1;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        if $i1 != $i0 goto label5;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $i0 = $i0 - 1;

        $i0 = $r1[$i0];

        return $i0;

     label5:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesYS>;

        $i0 = $r1[$i1];

        return $i0;
    }

    int getNext(int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1, $i2;
        int[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i1 = $r1[$i0];

        $i0 = $i1 >> 16;

        $i1 = 65535 & $i1;

        $i1 = $i1 + 1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i2 = $i0 + 1;

        $i2 = $r1[$i2];

        if $i1 != $i2 goto label1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        return $i1;
    }

    int getNextShape(int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0;
        int[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i0 = $r1[$i0];

        $i0 = $i0 >> 16;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $i0 + 1;

        $i0 = $r1[$i0];

        return $i0;
    }

    int getPrev(int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1, $i2;
        int[] $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i1 = $r1[$i0];

        $i0 = $i1 >> 16;

        $i1 = 65535 & $i1;

        $i1 = $i1 - 1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i2 = $r1[$i0];

        if $i1 >= $i2 goto label1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $i0 + 1;

        $i0 = $r1[$i0];

        $i0 = $i0 - 1;

        return $i0;

     label1:
        return $i1;
    }

    void init()
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r2;
        boolean[] $r3;
        float[] $r4;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = newarray (int)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesYS> = $r1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $r2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesYS>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i1);

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = newarray (int)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY> = $r1;

        $i1 = 0;

     label01:
        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        if $i1 >= $i0 goto label02;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getNext(int)>($i1);

        $i0 = $r1[$i0];

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY>;

        $i2 = $r1[$i1];

        $i0 = $i0 - $i2;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY>;

        $r1[$i1] = $i0;

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r3 = newarray (boolean)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] edgesExt> = $r3;

        $i1 = -1;

        $i2 = 0;

        $i0 = 0;

     label03:
        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        if $i2 >= $i3 goto label10;

     label04:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY>;

        $i3 = $r1[$i2];

        if $i3 <= 0 goto label07;

     label05:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY>;

        $i3 = $r1[$i2];

        if $i3 >= 0 goto label08;

        if $i1 == -1 goto label06;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] edgesExt>;

        $r3[$i1] = 1;

     label06:
        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] edgesExt>;

        $r3[$i2] = 1;

        goto label03;

     label07:
        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getNext(int)>($i2);

        $i2 = $i3;

        if $i3 != $i0 goto label04;

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getNextShape(int)>($i3);

        $i0 = $i2;

        goto label03;

     label08:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesDY>;

        $i3 = $r1[$i2];

        if $i3 <= 0 goto label09;

        $i1 = $i2;

     label09:
        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getNext(int)>($i2);

        $i2 = $i3;

        if $i3 != $i0 goto label05;

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int getNextShape(int)>($i3);

        $i0 = $i2;

        goto label03;

     label10:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesYS>;

        $r2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void sort(int[],int[],int)>($r1, $r2, $i1);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgeCur> = 0;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount> = 0;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r4 = newarray (float)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeX> = $r4;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = newarray (int)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeYEnd> = $r1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r4 = newarray (float)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeXStep> = $r4;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = newarray (int)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeDY> = $r1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r3 = newarray (boolean)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] activeExt> = $r3;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = newarray (int)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossX> = $r1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r1 = newarray (int)[$i1];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossDY> = $r1;

        return;
    }

    void makeBuffer(java.awt.geom.PathIterator, double)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        java.awt.geom.PathIterator $r1;
        double $d0;
        float[] $r2;
        int[] $r3;
        int $i0, $i1, $i2;
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler$EvenOdd $r4;
        boolean $z0, $z1;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler$NonZero $r7;
        float $f0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $r1 := @parameter0: java.awt.geom.PathIterator;

        $d0 := @parameter1: double;

        $r3 = newarray (int)[16];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesX> = $r3;

        $r3 = newarray (int)[16];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesY> = $r3;

        $r3 = newarray (int)[16];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesN> = $r3;

        $r3 = newarray (int)[16];

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds> = $r3;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount> = 0;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount> = 0;

        $i0 = interfaceinvoke $r1.<java.awt.geom.PathIterator: int getWindingRule()>();

        if $i0 != 0 goto label04;

        $r4 = new org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler$EvenOdd;

        specialinvoke $r4.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler$EvenOdd: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler filler> = $r4;

     label01:
        $r2 = newarray (float)[2];

        $z0 = 1;

     label02:
        $z1 = interfaceinvoke $r1.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z1 != 0 goto label10;

        $i0 = interfaceinvoke $r1.<java.awt.geom.PathIterator: int currentSegment(float[])>($r2);

        lookupswitch($i0)
        {
            case 0: goto label05;
            case 1: goto label08;
            case 2: goto label03;
            case 3: goto label03;
            case 4: goto label09;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.RuntimeException;

        $r6 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.36");

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label04:
        $r7 = new org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler$NonZero;

        specialinvoke $r7.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler$NonZero: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler filler> = $r7;

        goto label01;

     label05:
        if $z0 != 0 goto label06;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount> = $i0;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] checkBufSize(int[],int)>($r3, $i0);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds> = $r3;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r3[$i0] = $i1;

     label06:
        $f0 = $r2[0];

        $i0 = (int) $f0;

        $f0 = $r2[1];

        $i1 = (int) $f0;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void addEdge(int,int,int)>($i0, $i1, $i2);

        $z0 = 0;

     label07:
        interfaceinvoke $r1.<java.awt.geom.PathIterator: void next()>();

        goto label02;

     label08:
        $f0 = $r2[0];

        $i0 = (int) $f0;

        $f0 = $r2[1];

        $i1 = (int) $f0;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void addEdge(int,int,int)>($i0, $i1, $i2);

        goto label07;

     label09:
        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount> = $i0;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] checkBufSize(int[],int)>($r3, $i0);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds> = $r3;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r3[$i0] = $i1;

        $z0 = 1;

        goto label07;

     label10:
        if $z0 != 0 goto label11;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount> = $i0;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] checkBufSize(int[],int)>($r3, $i0);

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds> = $r3;

        $r3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] bounds>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int boundCount>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        $r3[$i0] = $i1;

        return;

     label11:
        return;
    }

    public org.apache.harmony.awt.gl.MultiRectArea rasterize(java.awt.Shape, double)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        java.awt.Shape $r1;
        double $d0;
        org.apache.harmony.awt.gl.MultiRectArea$LineCash $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.awt.geom.PathIterator $r3;
        boolean $z0;
        org.apache.harmony.awt.gl.MultiRectArea $r4;
        int[] $r5, $r8;
        float[] $r6, $r7;
        boolean[] $r9, $r10;
        float $f0, $f1;
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler $r11;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $r1 := @parameter0: java.awt.Shape;

        $d0 := @parameter1: double;

        $r3 = interfaceinvoke $r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>(null, $d0);

        $z0 = interfaceinvoke $r3.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z0 == 0 goto label01;

        $r4 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r4.<org.apache.harmony.awt.gl.MultiRectArea: void <init>()>();

        return $r4;

     label01:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void makeBuffer(java.awt.geom.PathIterator,double)>($r3, $d0);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void init()>();

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] edgesYS>;

        $i2 = $r5[0];

        $i3 = $i2;

        $r2 = new org.apache.harmony.awt.gl.MultiRectArea$LineCash;

        $i4 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int edgesCount>;

        specialinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea$LineCash: void <init>(int)>($i4);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea$LineCash: void setLine(int)>($i2);

     label02:
        if $i2 > $i3 goto label12;

        $i4 = 0;

        if $i2 != $i3 goto label05;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

     label03:
        if $i3 <= 0 goto label04;

        $i3 = $i3 + -1;

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeYEnd>;

        $i0 = $r5[$i3];

        if $i0 != $i2 goto label03;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        $i0 = $i0 - 1;

        $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        $i0 = $i0 - $i3;

        if $i0 == 0 goto label03;

        $i1 = $i3 + 1;

        $r6 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeX>;

        $r7 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeX>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i1, $r7, $i3, $i0);

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeYEnd>;

        $r8 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeYEnd>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i1, $r8, $i3, $i0);

        $r6 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeXStep>;

        $r7 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeXStep>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i1, $r7, $i3, $i0);

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeDY>;

        $r8 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeDY>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i1, $r8, $i3, $i0);

        $r9 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] activeExt>;

        $r10 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: boolean[] activeExt>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i1, $r10, $i3, $i0);

        goto label03;

     label04:
        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int findActiveEdges(int)>($i2);

     label05:
        $i0 = 0;

     label06:
        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        if $i0 >= $i1 goto label07;

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossX>;

        $r6 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeX>;

        $f0 = $r6[$i0];

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        $r5[$i4] = $i1;

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossDY>;

        $r8 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] activeDY>;

        $i1 = $r8[$i0];

        $r5[$i4] = $i1;

        $i4 = $i4 + 1;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        if $i4 != 0 goto label10;

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea$LineCash: void skipLine()>();

     label08:
        $i4 = 0;

     label09:
        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int activeCount>;

        if $i4 >= $i0 goto label11;

        $r6 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeX>;

        $f0 = $r6[$i4];

        $r7 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: float[] activeXStep>;

        $f1 = $r7[$i4];

        $f0 = $f0 + $f1;

        $r6[$i4] = $f0;

        $i4 = $i4 + 1;

        goto label09;

     label10:
        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossX>;

        $r8 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossDY>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void sort(int[],int[],int)>($r5, $r8, $i4);

        $r11 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler filler>;

        $r5 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossX>;

        $r8 = $r0.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int[] crossDY>;

        virtualinvoke $r11.<org.apache.harmony.awt.gl.render.JavaShapeRasterizer$Filler: void add(org.apache.harmony.awt.gl.MultiRectArea$LineCash,int[],int[],int,int)>($r2, $r5, $r8, $i4, $i2);

        goto label08;

     label11:
        $i2 = $i2 + 1;

        goto label02;

     label12:
        return $r2;
    }

    void sort(int[], int[], int)
    {
        org.apache.harmony.awt.gl.render.JavaShapeRasterizer $r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaShapeRasterizer;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 = 0;

     label1:
        $i2 = $i0 - 1;

        if $i1 >= $i2 goto label6;

        $i2 = $i1;

        $i3 = $r1[$i1];

        $i4 = $i1 + 1;

     label2:
        if $i4 >= $i0 goto label4;

        $i5 = $r1[$i4];

        if $i5 >= $i3 goto label3;

        $i2 = $i4;

        $i3 = $r1[$i4];

     label3:
        $i4 = $i4 + 1;

        goto label2;

     label4:
        if $i2 == $i1 goto label5;

        $i4 = $r1[$i1];

        $r1[$i2] = $i4;

        $r1[$i1] = $i3;

        $i3 = $r2[$i2];

        $i4 = $r2[$i1];

        $r2[$i2] = $i4;

        $r2[$i1] = $i3;

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.awt.gl.render.JavaShapeRasterizer: int POINT_CAPACITY> = 16;

        return;
    }
}
