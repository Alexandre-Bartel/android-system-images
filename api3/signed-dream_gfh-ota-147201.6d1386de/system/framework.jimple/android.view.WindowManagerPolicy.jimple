public interface  android.view.WindowManagerPolicy extends java.lang.Object
{
    public static final int ACTION_GO_TO_SLEEP;
    public static final int ACTION_PASS_TO_USER;
    public static final int ACTION_POKE_USER_ACTIVITY;
    public static final int FLAG_ALT;
    public static final int FLAG_ALT_GR;
    public static final int FLAG_BRIGHT_HERE;
    public static final int FLAG_CAPS_LOCK;
    public static final int FLAG_LAUNCHER;
    public static final int FLAG_MENU;
    public static final int FLAG_SHIFT;
    public static final int FLAG_WAKE;
    public static final int FLAG_WAKE_DROPPED;
    public static final int FLAG_WOKE_HERE;
    public static final int OFF_BECAUSE_OF_TIMEOUT;
    public static final int OFF_BECAUSE_OF_USER;
    public static final int TRANSIT_ACTIVITY_CLOSE;
    public static final int TRANSIT_ACTIVITY_OPEN;
    public static final int TRANSIT_ENTER;
    public static final int TRANSIT_EXIT;
    public static final int TRANSIT_HIDE;
    public static final int TRANSIT_NONE;
    public static final int TRANSIT_PREVIEW_DONE;
    public static final int TRANSIT_SHOW;
    public static final int TRANSIT_TASK_CLOSE;
    public static final int TRANSIT_TASK_OPEN;
    public static final int TRANSIT_TASK_TO_BACK;
    public static final int TRANSIT_TASK_TO_FRONT;
    public static final int USE_LAST_ROTATION;
    public static final boolean WATCH_POINTER;

    public abstract android.view.View addStartingWindow(android.os.IBinder, java.lang.String, int, java.lang.CharSequence, int, int);

    public abstract void adjustConfigurationLw(android.content.res.Configuration);

    public abstract void adjustWindowParamsLw(android.view.WindowManager$LayoutParams);

    public abstract void animatingWindowLw(android.view.WindowManagerPolicy$WindowState, android.view.WindowManager$LayoutParams);

    public abstract void beginAnimationLw(int, int);

    public abstract void beginLayoutLw(int, int);

    public abstract int checkAddPermission(android.view.WindowManager$LayoutParams);

    public abstract boolean detectSafeMode();

    public abstract void enableKeyguard(boolean);

    public abstract void enableScreenAfterBoot();

    public abstract void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult);

    public abstract boolean finishAnimationLw();

    public abstract boolean finishLayoutLw();

    public abstract void getContentInsetHintLw(android.view.WindowManager$LayoutParams, android.graphics.Rect);

    public abstract boolean inKeyguardRestrictedKeyInputMode();

    public abstract void init(android.content.Context, android.view.IWindowManager, android.os.LocalPowerManager);

    public abstract boolean interceptKeyTi(android.view.WindowManagerPolicy$WindowState, int, int, boolean, int);

    public abstract int interceptKeyTq(android.view.RawInputEvent, boolean);

    public abstract boolean isAppSwitchKeyTqTiLwLi(int);

    public abstract boolean isCheekPressedAgainstScreen(android.view.MotionEvent);

    public abstract boolean isMovementKeyTi(int);

    public abstract boolean isWakeAbsMovementTq(int, int, android.view.RawInputEvent);

    public abstract boolean isWakeRelMovementTq(int, int, android.view.RawInputEvent);

    public abstract boolean keyguardIsShowingTq();

    public abstract void layoutWindowLw(android.view.WindowManagerPolicy$WindowState, android.view.WindowManager$LayoutParams, android.view.WindowManagerPolicy$WindowState);

    public abstract boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState, int, boolean);

    public abstract int prepareAddWindowLw(android.view.WindowManagerPolicy$WindowState, android.view.WindowManager$LayoutParams);

    public abstract boolean preprocessInputEventTq(android.view.RawInputEvent);

    public abstract void removeStartingWindow(android.os.IBinder, android.view.View);

    public abstract void removeWindowLw(android.view.WindowManagerPolicy$WindowState);

    public abstract int rotationForOrientationLw(int, int, boolean);

    public abstract void screenOnStoppedLw();

    public abstract void screenTurnedOff(int);

    public abstract void screenTurnedOn();

    public abstract int selectAnimationLw(android.view.WindowManagerPolicy$WindowState, int);

    public abstract void setCurrentOrientationLw(int);

    public abstract int subWindowTypeToLayerLw(int);

    public abstract void systemReady();

    public abstract int windowTypeToLayerLw(int);

    public static void <clinit>()
    {
        <android.view.WindowManagerPolicy: int USE_LAST_ROTATION> = -1000;

        <android.view.WindowManagerPolicy: int TRANSIT_TASK_TO_FRONT> = 10;

        <android.view.WindowManagerPolicy: int TRANSIT_TASK_TO_BACK> = 11;

        <android.view.WindowManagerPolicy: int TRANSIT_TASK_OPEN> = 8;

        <android.view.WindowManagerPolicy: int TRANSIT_TASK_CLOSE> = 9;

        <android.view.WindowManagerPolicy: int TRANSIT_SHOW> = 3;

        <android.view.WindowManagerPolicy: int TRANSIT_PREVIEW_DONE> = 5;

        <android.view.WindowManagerPolicy: int TRANSIT_NONE> = 0;

        <android.view.WindowManagerPolicy: int TRANSIT_HIDE> = 4;

        <android.view.WindowManagerPolicy: int TRANSIT_EXIT> = 2;

        <android.view.WindowManagerPolicy: int TRANSIT_ENTER> = 1;

        <android.view.WindowManagerPolicy: int TRANSIT_ACTIVITY_OPEN> = 6;

        <android.view.WindowManagerPolicy: int TRANSIT_ACTIVITY_CLOSE> = 7;

        <android.view.WindowManagerPolicy: int OFF_BECAUSE_OF_USER> = 1;

        <android.view.WindowManagerPolicy: int OFF_BECAUSE_OF_TIMEOUT> = 2;

        <android.view.WindowManagerPolicy: int FLAG_WOKE_HERE> = 268435456;

        <android.view.WindowManagerPolicy: int FLAG_WAKE_DROPPED> = 2;

        <android.view.WindowManagerPolicy: int FLAG_WAKE> = 1;

        <android.view.WindowManagerPolicy: int FLAG_SHIFT> = 4;

        <android.view.WindowManagerPolicy: int FLAG_MENU> = 64;

        <android.view.WindowManagerPolicy: int FLAG_LAUNCHER> = 128;

        <android.view.WindowManagerPolicy: int FLAG_CAPS_LOCK> = 8;

        <android.view.WindowManagerPolicy: int FLAG_BRIGHT_HERE> = 536870912;

        <android.view.WindowManagerPolicy: int FLAG_ALT_GR> = 32;

        <android.view.WindowManagerPolicy: int FLAG_ALT> = 16;

        <android.view.WindowManagerPolicy: int ACTION_POKE_USER_ACTIVITY> = 2;

        <android.view.WindowManagerPolicy: int ACTION_PASS_TO_USER> = 1;

        <android.view.WindowManagerPolicy: int ACTION_GO_TO_SLEEP> = 4;

        return;
    }
}
