public abstract class android.database.sqlite.SQLiteProgram extends android.database.sqlite.SQLiteClosable
{
    private static final java.lang.String TAG;
    protected android.database.sqlite.SQLiteDatabase mDatabase;
    private java.lang.StackTraceElement[] mStackTraceElements;
    protected int nHandle;
    protected int nStatement;

    void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteProgram $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r0.<android.database.sqlite.SQLiteProgram: int nHandle> = 0;

        $r0.<android.database.sqlite.SQLiteProgram: int nStatement> = 0;

        $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase> = $r1;

        virtualinvoke $r1.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void addSQLiteClosable(android.database.sqlite.SQLiteClosable)>($r0);

        $i0 = $r1.<android.database.sqlite.SQLiteDatabase: int mNativeHandle>;

        $r0.<android.database.sqlite.SQLiteProgram: int nHandle> = $i0;

        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void compile(java.lang.String,boolean)>($r2, 0);

        return;
    }

    private final native void native_clear_bindings();

    public void bindBlob(int, byte[])
    {
        android.database.sqlite.SQLiteProgram $r0;
        int $i0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the bind value at index ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_bind_blob(int,byte[])>($i0, $r1);

     label3:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void bindDouble(int, double)
    {
        android.database.sqlite.SQLiteProgram $r0;
        int $i0;
        double $d0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_bind_double(int,double)>($i0, $d0);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void bindLong(int, long)
    {
        android.database.sqlite.SQLiteProgram $r0;
        int $i0;
        long $l1;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_bind_long(int,long)>($i0, $l1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void bindNull(int)
    {
        android.database.sqlite.SQLiteProgram $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_bind_null(int)>($i0);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void bindString(int, java.lang.String)
    {
        android.database.sqlite.SQLiteProgram $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the bind value at index ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_bind_string(int,java.lang.String)>($i0, $r1);

     label3:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void clearBindings()
    {
        android.database.sqlite.SQLiteProgram $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        specialinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_clear_bindings()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void close()
    {
        android.database.sqlite.SQLiteProgram $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void lock()>();

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

     label2:
        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        return;

     label3:
        $r2 := @caughtexception;

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void compile(java.lang.String, boolean)
    {
        android.database.sqlite.SQLiteProgram $r0;
        java.lang.String $r1;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r2;
        int $i0;
        java.lang.Throwable $r3;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $i0 = $r0.<android.database.sqlite.SQLiteProgram: int nStatement>;

        if $i0 == 0 goto label1;

        if $z0 == 0 goto label5;

     label1:
        $r2 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void lock()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_compile(java.lang.String)>($r1);

     label3:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r2 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        return;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r2 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void unlock()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    protected void finalize()
    {
        android.database.sqlite.SQLiteProgram $r0;
        int $i0;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        $i0 = $r0.<android.database.sqlite.SQLiteProgram: int nStatement>;

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void onAllReferencesReleasedFromContainer()>();

        return;

     label1:
        return;
    }

    public final int getUniqueId()
    {
        android.database.sqlite.SQLiteProgram $r0;
        int i0;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        i0 = $r0.<android.database.sqlite.SQLiteProgram: int nStatement>;

        return i0;
    }

    protected final native void native_bind_blob(int, byte[]);

    protected final native void native_bind_double(int, double);

    protected final native void native_bind_long(int, long);

    protected final native void native_bind_null(int);

    protected final native void native_bind_string(int, java.lang.String);

    protected final native void native_compile(java.lang.String);

    protected final native void native_finalize();

    protected void onAllReferencesReleased()
    {
        android.database.sqlite.SQLiteProgram $r0;
        android.database.sqlite.SQLiteDatabase $r1;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_finalize()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void removeSQLiteClosable(android.database.sqlite.SQLiteClosable)>($r0);

        return;
    }

    protected void onAllReferencesReleasedFromContainer()
    {
        android.database.sqlite.SQLiteProgram $r0;
        android.database.sqlite.SQLiteDatabase $r1;

        $r0 := @this: android.database.sqlite.SQLiteProgram;

        virtualinvoke $r0.<android.database.sqlite.SQLiteProgram: void native_finalize()>();

        $r1 = $r0.<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;
    }

    public static void <clinit>()
    {
        <android.database.sqlite.SQLiteProgram: java.lang.String TAG> = "SQLiteProgram";

        return;
    }
}
