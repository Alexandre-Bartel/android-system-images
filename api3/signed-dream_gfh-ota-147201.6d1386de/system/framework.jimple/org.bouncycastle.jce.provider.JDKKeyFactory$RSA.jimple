public class org.bouncycastle.jce.provider.JDKKeyFactory$RSA extends org.bouncycastle.jce.provider.JDKKeyFactory
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.JDKKeyFactory$RSA $r0;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyFactory$RSA;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JDKKeyFactory: void <init>()>();

        return;
    }

    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.bouncycastle.jce.provider.JDKKeyFactory$RSA $r0;
        java.security.spec.KeySpec $r1;
        boolean $z0;
        java.security.spec.PKCS8EncodedKeySpec $r2;
        byte[] $r3;
        java.security.PrivateKey $r4;
        java.lang.Exception $r6, $r11;
        org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure $r7, r19;
        org.bouncycastle.asn1.ASN1InputStream $r8, r18;
        org.bouncycastle.asn1.DERObject $r9;
        org.bouncycastle.asn1.ASN1Sequence $r10;
        java.lang.String $r13;
        java.security.spec.RSAPrivateCrtKeySpec $r14;
        java.security.spec.RSAPrivateKeySpec $r15;
        java.lang.StringBuilder $r16, r23;
        java.lang.Class $r17;
        org.bouncycastle.jce.provider.JCERSAPrivateCrtKey r20;
        java.security.spec.InvalidKeySpecException r21;
        org.bouncycastle.jce.provider.JCERSAPrivateKey r22;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyFactory$RSA;

        $r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = $r1 instanceof java.security.spec.PKCS8EncodedKeySpec;

        if $z0 == 0 goto label7;

     label1:
        $r2 = (java.security.spec.PKCS8EncodedKeySpec) $r1;

        $r3 = virtualinvoke $r2.<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()>();

        $r4 = staticinvoke <org.bouncycastle.jce.provider.JDKKeyFactory: java.security.PrivateKey createPrivateKeyFromDERStream(byte[])>($r3);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r20 = new org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        r19 = new org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r7 = r19;

        r18 = new org.bouncycastle.asn1.ASN1InputStream;

        $r8 = r18;

     label4:
        $r2 = (java.security.spec.PKCS8EncodedKeySpec) $r1;

        $r3 = virtualinvoke $r2.<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()>();

        specialinvoke r18.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r10 = (org.bouncycastle.asn1.ASN1Sequence) $r9;

        specialinvoke r19.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r10);

        specialinvoke r20.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: void <init>(org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure)>($r7);

     label5:
        return r20;

     label6:
        $r11 := @caughtexception;

        r21 = new java.security.spec.InvalidKeySpecException;

        $r13 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke r21.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r13);

        throw r21;

     label7:
        $z0 = $r1 instanceof java.security.spec.RSAPrivateCrtKeySpec;

        if $z0 == 0 goto label8;

        r20 = new org.bouncycastle.jce.provider.JCERSAPrivateCrtKey;

        $r14 = (java.security.spec.RSAPrivateCrtKeySpec) $r1;

        specialinvoke r20.<org.bouncycastle.jce.provider.JCERSAPrivateCrtKey: void <init>(java.security.spec.RSAPrivateCrtKeySpec)>($r14);

        return r20;

     label8:
        $z0 = $r1 instanceof java.security.spec.RSAPrivateKeySpec;

        if $z0 == 0 goto label9;

        r22 = new org.bouncycastle.jce.provider.JCERSAPrivateKey;

        $r15 = (java.security.spec.RSAPrivateKeySpec) $r1;

        specialinvoke r22.<org.bouncycastle.jce.provider.JCERSAPrivateKey: void <init>(java.security.spec.RSAPrivateKeySpec)>($r15);

        return r22;

     label9:
        r21 = new java.security.spec.InvalidKeySpecException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown KeySpec type: ");

        $r17 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r13);

        throw r21;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.bouncycastle.jce.provider.JDKKeyFactory$RSA $r0;
        java.security.spec.KeySpec $r1;
        boolean $z0;
        java.security.spec.X509EncodedKeySpec $r2;
        byte[] $r3;
        java.security.PublicKey $r4;
        org.bouncycastle.jce.provider.JCERSAPublicKey $r5;
        java.lang.Exception $r6;
        java.security.spec.InvalidKeySpecException $r7;
        java.lang.String $r8;
        java.security.spec.RSAPublicKeySpec $r9;
        java.lang.StringBuilder $r10;
        java.lang.Class $r11;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyFactory$RSA;

        $r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = $r1 instanceof java.security.spec.X509EncodedKeySpec;

        if $z0 == 0 goto label4;

     label1:
        $r2 = (java.security.spec.X509EncodedKeySpec) $r1;

        $r3 = virtualinvoke $r2.<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()>();

        $r4 = staticinvoke <org.bouncycastle.jce.provider.JDKKeyFactory: java.security.PublicKey createPublicKeyFromDERStream(byte[])>($r3);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.security.spec.InvalidKeySpecException;

        $r8 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r7.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $z0 = $r1 instanceof java.security.spec.RSAPublicKeySpec;

        if $z0 == 0 goto label5;

        $r5 = new org.bouncycastle.jce.provider.JCERSAPublicKey;

        $r9 = (java.security.spec.RSAPublicKeySpec) $r1;

        specialinvoke $r5.<org.bouncycastle.jce.provider.JCERSAPublicKey: void <init>(java.security.spec.RSAPublicKeySpec)>($r9);

        return $r5;

     label5:
        $r7 = new java.security.spec.InvalidKeySpecException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown KeySpec type: ");

        $r11 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
