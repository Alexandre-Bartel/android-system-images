class org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter extends java.net.Socket
{
    org.apache.harmony.nio.internal.SocketChannelImpl channel;
    java.net.SocketImpl socketImpl;

    void <init>(java.net.SocketImpl, org.apache.harmony.nio.internal.SocketChannelImpl) throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        org.apache.harmony.nio.internal.SocketChannelImpl $r2;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 := @parameter0: java.net.SocketImpl;

        $r2 := @parameter1: org.apache.harmony.nio.internal.SocketChannelImpl;

        specialinvoke $r0.<java.net.Socket: void <init>(java.net.SocketImpl)>($r1);

        $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl> = $r1;

        $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel> = $r2;

        return;
    }

    private void checkOpen() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        boolean $z0;
        java.net.SocketException $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $z0 = virtualinvoke $r0.<java.net.Socket: boolean isClosed()>();

        if $z0 == 0 goto label1;

        $r1 = new java.net.SocketException;

        $r2 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.00");

        specialinvoke $r1.<java.net.SocketException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        return;
    }

    public void bind(java.net.SocketAddress) throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketAddress $r1;
        boolean $z0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r2;
        java.nio.channels.AlreadyConnectedException $r3;
        int $i0;
        java.nio.channels.ConnectionPendingException $r4;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 := @parameter0: java.net.SocketAddress;

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r3 = new java.nio.channels.AlreadyConnectedException;

        specialinvoke $r3.<java.nio.channels.AlreadyConnectedException: void <init>()>();

        throw $r3;

     label1:
        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $i0 = $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: int status>;

        if 1 != $i0 goto label2;

        $r4 = new java.nio.channels.ConnectionPendingException;

        specialinvoke $r4.<java.nio.channels.ConnectionPendingException: void <init>()>();

        throw $r4;

     label2:
        specialinvoke $r0.<java.net.Socket: void bind(java.net.SocketAddress)>($r1);

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isBound> = 1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r2.<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        virtualinvoke $r2.<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>();

     label2:
        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: int status> = 3;

        exitmonitor $r1;

     label3:
        return;

     label4:
        specialinvoke $r0.<java.net.Socket: void close()>();

        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void connect(java.net.SocketAddress, int) throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketAddress $r1;
        int $i0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r2, $r6;
        boolean $z0;
        java.nio.channels.IllegalBlockingModeException $r3;
        java.nio.channels.AlreadyConnectedException $r4;
        org.apache.harmony.luni.platform.INetworkSystem $r5;
        java.io.FileDescriptor $r7;
        java.net.InetAddress $r8;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 := @parameter0: java.net.SocketAddress;

        $i0 := @parameter1: int;

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r2.<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>();

        if $z0 != 0 goto label1;

        $r3 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r3.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r3;

     label1:
        $z0 = virtualinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r4 = new java.nio.channels.AlreadyConnectedException;

        specialinvoke $r4.<java.nio.channels.AlreadyConnectedException: void <init>()>();

        throw $r4;

     label2:
        specialinvoke $r0.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r1, $i0);

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $r5 = <org.apache.harmony.nio.internal.SocketChannelImpl: org.apache.harmony.luni.platform.INetworkSystem networkSystem>;

        $r6 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $r7 = $r6.<org.apache.harmony.nio.internal.SocketChannelImpl: java.io.FileDescriptor fd>;

        $r8 = interfaceinvoke $r5.<org.apache.harmony.luni.platform.INetworkSystem: java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor,boolean)>($r7, 0);

        $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: java.net.InetAddress localAddress> = $r8;

        $z0 = specialinvoke $r0.<java.net.Socket: boolean isConnected()>();

        if $z0 == 0 goto label3;

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        virtualinvoke $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: void setConnected()>();

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = specialinvoke $r0.<java.net.Socket: boolean isBound()>();

        $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isBound> = $z0;

        return;

     label3:
        return;
    }

    public java.nio.channels.SocketChannel getChannel()
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        org.apache.harmony.nio.internal.SocketChannelImpl r1;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        return r1;
    }

    public java.net.SocketImpl getImpl()
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl r1;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        return r1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r1;
        boolean $z0;
        java.net.SocketException $r2;
        java.lang.String $r3;
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelInputStream $r4;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r1.<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r2 = new java.net.SocketException;

        $r3 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.00");

        specialinvoke $r2.<java.net.SocketException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r1.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isConnected()>();

        if $z0 != 0 goto label2;

        $r2 = new java.net.SocketException;

        $r3 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.01");

        specialinvoke $r2.<java.net.SocketException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $z0 = virtualinvoke $r0.<java.net.Socket: boolean isInputShutdown()>();

        if $z0 == 0 goto label3;

        $r2 = new java.net.SocketException;

        $r3 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.03");

        specialinvoke $r2.<java.net.SocketException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $r4 = new org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelInputStream;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        specialinvoke $r4.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelInputStream: void <init>(java.nio.channels.SocketChannel)>($r1);

        return $r4;
    }

    public boolean getKeepAlive() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(8);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.net.InetAddress getLocalAddress()
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.InetAddress $r1;
        org.apache.harmony.nio.internal.SocketChannelImpl $r2;
        java.net.UnknownHostException $r3;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r2 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

     label1:
        $r1 = virtualinvoke $r2.<org.apache.harmony.nio.internal.SocketChannelImpl: java.net.InetAddress getLocalAddress()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    public boolean getOOBInline() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(4099);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r1;
        boolean $z0;
        java.net.SocketException $r2;
        java.lang.String $r3;
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream $r4;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r1.<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r2 = new java.net.SocketException;

        $r3 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.00");

        specialinvoke $r2.<java.net.SocketException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r1.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isConnected()>();

        if $z0 != 0 goto label2;

        $r2 = new java.net.SocketException;

        $r3 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.01");

        specialinvoke $r2.<java.net.SocketException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $z0 = virtualinvoke $r0.<java.net.Socket: boolean isOutputShutdown()>();

        if $z0 == 0 goto label3;

        $r2 = new java.net.SocketException;

        $r3 = staticinvoke <org.apache.harmony.nio.internal.nls.Messages: java.lang.String getString(java.lang.String)>("nio.02");

        specialinvoke $r2.<java.net.SocketException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $r4 = new org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        specialinvoke $r4.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: void <init>(java.nio.channels.SocketChannel)>($r1);

        return $r4;
    }

    public int getReceiveBufferSize() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(4098);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getReuseAddress() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(4);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public int getSendBufferSize() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(4097);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getSoLinger() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(128);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getSoTimeout() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(4102);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getTcpNoDelay() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public int getTrafficClass() throws java.net.SocketException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        java.net.SocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Number $r3;
        int $i0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        specialinvoke $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: void checkOpen()>();

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: java.net.SocketImpl socketImpl>;

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.lang.Object getOption(int)>(3);

        $r3 = (java.lang.Number) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        return $i0;
    }

    public boolean isBound()
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r1;
        boolean z0;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        z0 = $r1.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isBound>;

        return z0;
    }

    public boolean isConnected()
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter $r0;
        boolean $z0;
        org.apache.harmony.nio.internal.SocketChannelImpl $r1;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketAdapter: org.apache.harmony.nio.internal.SocketChannelImpl channel>;

        $z0 = virtualinvoke $r1.<org.apache.harmony.nio.internal.SocketChannelImpl: boolean isConnected()>();

        return $z0;
    }
}
