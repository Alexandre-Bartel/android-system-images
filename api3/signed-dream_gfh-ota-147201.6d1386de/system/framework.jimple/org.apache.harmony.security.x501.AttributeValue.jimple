public class org.apache.harmony.security.x501.AttributeValue extends java.lang.Object
{
    public byte[] bytes;
    public byte[] encoded;
    public java.lang.String escapedString;
    public boolean hasQE;
    private java.lang.String hexString;
    public java.lang.String rawString;
    private int tag;
    public final boolean wasEncoded;

    public void <init>(java.lang.String, boolean)
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = -1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 0;

        $r0.<org.apache.harmony.security.x501.AttributeValue: boolean hasQE> = $z0;

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r1;

        $r1 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r1;

        return;
    }

    public void <init>(java.lang.String, byte[])
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.harmony.security.asn1.DerInputStream $r4;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Choice $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.io.IOException $r7;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = -1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString> = $r1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r2;

        $r4 = new org.apache.harmony.security.asn1.DerInputStream;

     label01:
        specialinvoke $r4.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[])>($r2);

     label02:
        $i0 = $r4.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = $i0;

        $r5 = <org.apache.harmony.security.x501.DirectoryString: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

     label03:
        $i0 = $r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        $z0 = virtualinvoke $r5.<org.apache.harmony.security.asn1.ASN1Choice: boolean checkTag(int)>($i0);

     label04:
        if $z0 == 0 goto label09;

     label05:
        $r5 = <org.apache.harmony.security.x501.DirectoryString: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $r6 = virtualinvoke $r5.<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r4);

     label06:
        $r1 = (java.lang.String) $r6;

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r1;

     label07:
        $r1 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)>($r1);

     label08:
        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r1;

        return;

     label09:
        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r1;

        return;

     label10:
        $r7 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        virtualinvoke $r3.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r7);

        throw $r3;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }

    public void <init>(java.lang.String, byte[], int)
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.String $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = -1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 1;

        $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r2;

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = $i0;

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String getHexString()>();

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r1;

        $r1 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString>;

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r1;

        return;

     label1:
        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r1;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r1;

        return;
    }

    private java.lang.String makeEscaped(java.lang.String)
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        return $r1;

     label01:
        $r2 = new java.lang.StringBuffer;

        $i1 = $i0 * 2;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i1);

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label10;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        lookupswitch($c2)
        {
            case 32: goto label05;
            case 34: goto label08;
            case 35: goto label09;
            case 43: goto label09;
            case 44: goto label09;
            case 59: goto label09;
            case 60: goto label09;
            case 61: goto label09;
            case 62: goto label09;
            case 92: goto label08;
            default: goto label03;
        };

     label03:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label04:
        $i1 = $i1 + 1;

        goto label02;

     label05:
        if $i1 == 0 goto label06;

        $i3 = $i0 - 1;

        if $i1 != $i3 goto label07;

     label06:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label07:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label04;

     label08:
        $r0.<org.apache.harmony.security.x501.AttributeValue: boolean hasQE> = 1;

     label09:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        goto label03;

     label10:
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public void appendQEString(java.lang.StringBuffer)
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.StringBuffer $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r2;
        char $c2;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r1 := @parameter0: java.lang.StringBuffer;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $z0 = $r0.<org.apache.harmony.security.x501.AttributeValue: boolean hasQE>;

        if $z0 == 0 goto label4;

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        if $c2 == 34 goto label2;

        if $c2 != 92 goto label3;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label5:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        return;
    }

    public java.lang.String getHexString()
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        boolean $z0;
        org.apache.harmony.security.asn1.ASN1StringType $r3;
        byte[] $r4;
        int $i0, $i1;
        byte $b2;
        char $c3;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString>;

        if $r2 != null goto label9;

        $z0 = $r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Utils: boolean isPrintableString(java.lang.String)>($r2);

        if $z0 == 0 goto label5;

        $r3 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING>;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r2);

        $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r4;

     label1:
        $r1 = new java.lang.StringBuffer;

        $r4 = $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $i0 = lengthof $r4;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $i0 = 0;

     label2:
        $r4 = $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label8;

        $r4 = $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $b2 = $r4[$i0];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        if $b2 >= 10 goto label6;

        $i1 = $b2 + 48;

        $c3 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label3:
        $r4 = $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $b2 = $r4[$i0];

        $b2 = $b2 & 15;

        if $b2 >= 10 goto label7;

        $i1 = $b2 + 48;

        $c3 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $r3 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UTF8STRING>;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r2);

        $r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r4;

        goto label1;

     label6:
        $i1 = $b2 + 87;

        $c3 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label3;

     label7:
        $i1 = $b2 + 87;

        $c3 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label4;

     label8:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString> = $r2;

     label9:
        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString>;

        return $r2;
    }

    public int getTag()
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        boolean $z0;
        int $i0;
        java.lang.String $r1;
        org.apache.harmony.security.asn1.ASN1StringType $r2;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $i0 = $r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        if $i0 != -1 goto label1;

        $r1 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Utils: boolean isPrintableString(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r2 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING>;

        $i0 = $r2.<org.apache.harmony.security.asn1.ASN1Type: int id>;

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = $i0;

     label1:
        $i0 = $r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        return $i0;

     label2:
        $r2 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UTF8STRING>;

        $i0 = $r2.<org.apache.harmony.security.asn1.ASN1Type: int id>;

        $r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = $i0;

        goto label1;
    }

    public java.lang.String makeCanonical()
    {
        org.apache.harmony.security.x501.AttributeValue $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        return $r2;

     label1:
        $r1 = new java.lang.StringBuffer;

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i1);

        $i1 = 0;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        if $c2 != 35 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $i1 = 0 + 1;

     label2:
        if $i1 >= $i0 goto label7;

        $r2 = $r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        lookupswitch($c2)
        {
            case 32: goto label5;
            case 34: goto label6;
            case 43: goto label6;
            case 44: goto label6;
            case 59: goto label6;
            case 60: goto label6;
            case 62: goto label6;
            case 92: goto label6;
            default: goto label3;
        };

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $i3 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i3 == 0 goto label4;

        $i3 = $i3 - 1;

        $c2 = virtualinvoke $r1.<java.lang.StringBuffer: char charAt(int)>($i3);

        if $c2 == 32 goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label4;

     label6:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        goto label3;

     label7:
        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        $i0 = $i0 - 1;

     label8:
        if $i0 <= -1 goto label9;

        $c2 = virtualinvoke $r1.<java.lang.StringBuffer: char charAt(int)>($i0);

        if $c2 != 32 goto label9;

        $i0 = $i0 + -1;

        goto label8;

     label9:
        $i0 = $i0 + 1;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
