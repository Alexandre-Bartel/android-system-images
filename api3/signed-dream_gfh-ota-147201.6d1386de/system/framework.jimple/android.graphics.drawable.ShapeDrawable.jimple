public class android.graphics.drawable.ShapeDrawable extends android.graphics.drawable.Drawable
{
    private boolean mMutated;
    private android.graphics.drawable.ShapeDrawable$ShapeState mShapeState;

    public void <init>()
    {
        android.graphics.drawable.ShapeDrawable $r0;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)>(null);

        return;
    }

    private void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1, $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.drawable.ShapeDrawable$ShapeState;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.drawable.ShapeDrawable$ShapeState;

        specialinvoke $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)>($r1);

        $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState> = $r2;

        return;
    }

    void <init>(android.graphics.drawable.ShapeDrawable$ShapeState, android.graphics.drawable.ShapeDrawable$1)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.drawable.ShapeDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.drawable.ShapeDrawable$ShapeState;

        $r2 := @parameter1: android.graphics.drawable.ShapeDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)>($r1);

        return;
    }

    public void <init>(android.graphics.drawable.shapes.Shape)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.shapes.Shape $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.drawable.shapes.Shape;

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)>(null);

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape> = $r1;

        return;
    }

    private static int modulateAlpha(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 >>> 7;

        $i1 = $i1 + $i2;

        $i0 = $i0 * $i1;

        $i0 = $i0 >>> 8;

        return $i0;
    }

    private void updateShape()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        float $f0, $f1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.drawable.shapes.Shape $r2;
        android.graphics.Rect $r3;
        int $i0, $i1;
        android.graphics.drawable.ShapeDrawable$ShaderFactory $r4;
        android.graphics.Paint $r5;
        android.graphics.Shader $r6;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i0 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        $f1 = (float) $i0;

        $f0 = (float) $i1;

        virtualinvoke $r2.<android.graphics.drawable.shapes.Shape: void resize(float,float)>($f1, $f0);

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory>;

        if $r4 == null goto label2;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory>;

        $r6 = virtualinvoke $r4.<android.graphics.drawable.ShapeDrawable$ShaderFactory: android.graphics.Shader resize(int,int)>($i0, $i1);

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r6);

        return;

     label1:
        return;

     label2:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        android.graphics.Rect $r3;
        android.graphics.drawable.ShapeDrawable$ShapeState $r4;
        int $i0, $i1, $i2;
        android.graphics.drawable.shapes.Shape $r5;
        float $f0, $f1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i1 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: int mAlpha>;

        $i1 = staticinvoke <android.graphics.drawable.ShapeDrawable: int modulateAlpha(int,int)>($i0, $i1);

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i1);

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r5 == null goto label2;

        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i2 = $r3.<android.graphics.Rect: int left>;

        $f0 = (float) $i2;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $f1 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>($r5, $r1, $r2);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);

     label1:
        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;

     label2:
        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r3, $r2);

        goto label1;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i1 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        int $i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        return $r1;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        int i0;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        i0 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicHeight>;

        return i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        int i0;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        i0 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicWidth>;

        return i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.Paint $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;
        android.graphics.drawable.shapes.Shape $r3;
        android.graphics.Xfermode $r4;
        int $i0;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r3 != null goto label2;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $r4 = virtualinvoke $r1.<android.graphics.Paint: android.graphics.Xfermode getXfermode()>();

        if $r4 != null goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        if $i0 != 0 goto label1;

        return -2;

     label1:
        if $i0 != 255 goto label2;

        return -1;

     label2:
        return -3;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.Rect $r1, $r3;
        boolean $z0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        if $r3 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public android.graphics.Paint getPaint()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.Paint r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        return r2;
    }

    public android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.drawable.ShapeDrawable$ShaderFactory r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory>;

        return r2;
    }

    public android.graphics.drawable.shapes.Shape getShape()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.drawable.shapes.Shape r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        return r2;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.graphics.drawable.ShapeDrawable$ShapeState $r6;
        android.graphics.Paint $r7;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.String $r8;
        boolean $z0;
        java.lang.StringBuilder $r9;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        $r4 = <com.android.internal.R$styleable: int[] ShapeDrawable>;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        $r6 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r7 = $r6.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r7.<android.graphics.Paint: int getColor()>();

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getColor(int,int)>(2, $i0);

        $r6 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r7 = $r6.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>(1, 0.0F);

        $i0 = (int) $f0;

        virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>($i0);

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>(0, 0.0F);

        $i0 = (int) $f0;

        virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>($i0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label3;

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label4;

     label2:
        if $i1 != 2 goto label1;

        $r8 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r8, $r1, $r2, $r3);

        if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ShapeDrawable ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r8);

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    protected boolean inflateTag(java.lang.String, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        java.lang.String $r1;
        android.content.res.Resources $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.util.AttributeSet $r4;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.res.Resources;

        $r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter3: android.util.AttributeSet;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("padding");

        if $z0 == 0 goto label1;

        $r5 = <com.android.internal.R$styleable: int[] ShapeDrawablePadding>;

        $r6 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r4, $r5);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $i1 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        $i3 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        virtualinvoke $r0.<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return 1;

     label1:
        return 0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.ShapeDrawable $r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r4;
        android.graphics.Paint $r3, $r5;
        android.graphics.Rect $r6, $r7;
        android.graphics.drawable.shapes.Shape $r8;
        java.lang.CloneNotSupportedException $r9;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $z0 = $r0.<android.graphics.drawable.ShapeDrawable: boolean mMutated>;

        if $z0 != 0 goto label3;

        $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != $r0 goto label3;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = new android.graphics.Paint;

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        specialinvoke $r3.<android.graphics.Paint: void <init>(android.graphics.Paint)>($r5);

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint> = $r3;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r6 = new android.graphics.Rect;

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r7 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        specialinvoke $r6.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r7);

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = $r6;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r8 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

     label1:
        $r8 = virtualinvoke $r8.<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>();

     label2:
        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape> = $r8;

        $r0.<android.graphics.drawable.ShapeDrawable: boolean mMutated> = 1;

     label3:
        return $r0;

     label4:
        $r9 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label4;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void updateShape()>();

        return;
    }

    protected void onDraw(android.graphics.drawable.shapes.Shape, android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.shapes.Shape $r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.drawable.shapes.Shape;

        $r2 := @parameter1: android.graphics.Canvas;

        $r3 := @parameter2: android.graphics.Paint;

        virtualinvoke $r1.<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>($r2, $r3);

        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        int $i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mAlpha> = $i0;

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;
        android.graphics.Paint $r3;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        boolean $z0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>($z0);

        return;
    }

    public void setIntrinsicHeight(int)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        int $i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicHeight> = $i0;

        return;
    }

    public void setIntrinsicWidth(int)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        int $i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicWidth> = $i0;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = $i0 | $i1;

        $i4 = $i4 | $i2;

        $i4 = $i4 | $i3;

        if $i4 != 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = null;

        return;

     label1:
        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        if $r2 != null goto label2;

        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = $r2;

     label2:
        $r1 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setPadding(android.graphics.Rect)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.Rect $r1, $r3;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        if $r1 != null goto label1;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = null;

        return;

     label1:
        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        if $r3 != null goto label2;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = $r3;

     label2:
        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        return;
    }

    public void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.ShapeDrawable$ShaderFactory $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.drawable.ShapeDrawable$ShaderFactory;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory> = $r1;

        return;
    }

    public void setShape(android.graphics.drawable.shapes.Shape)
    {
        android.graphics.drawable.ShapeDrawable $r0;
        android.graphics.drawable.shapes.Shape $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        $r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 := @parameter0: android.graphics.drawable.shapes.Shape;

        $r2 = $r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape> = $r1;

        specialinvoke $r0.<android.graphics.drawable.ShapeDrawable: void updateShape()>();

        return;
    }
}
