public class android.accounts.AccountMonitor extends android.content.BroadcastReceiver implements android.content.ServiceConnection
{
    private boolean mClosed;
    private final android.content.Context mContext;
    private final android.accounts.AccountMonitorListener mListener;
    private int pending;

    public void <init>(android.content.Context, android.accounts.AccountMonitorListener)
    {
        android.accounts.AccountMonitor $r0;
        android.content.Context $r1;
        android.accounts.AccountMonitorListener $r2;
        android.content.IntentFilter $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: android.accounts.AccountMonitor;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.accounts.AccountMonitorListener;

        specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>();

        $r0.<android.accounts.AccountMonitor: boolean mClosed> = 0;

        $r0.<android.accounts.AccountMonitor: int pending> = 0;

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener is null");

        throw $r4;

     label1:
        $r0.<android.accounts.AccountMonitor: android.content.Context mContext> = $r1;

        $r0.<android.accounts.AccountMonitor: android.accounts.AccountMonitorListener mListener> = $r2;

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.accounts.LOGIN_ACCOUNTS_CHANGED");

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DEVICE_STORAGE_OK");

        $r1 = $r0.<android.accounts.AccountMonitor: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r0, $r3);

        specialinvoke $r0.<android.accounts.AccountMonitor: void notifyListener()>();

        return;
    }

    static int access$000(android.accounts.AccountMonitor)
    {
        android.accounts.AccountMonitor $r0;
        int i0;

        $r0 := @parameter0: android.accounts.AccountMonitor;

        i0 = $r0.<android.accounts.AccountMonitor: int pending>;

        return i0;
    }

    static int access$006(android.accounts.AccountMonitor)
    {
        android.accounts.AccountMonitor $r0;
        int $i0;

        $r0 := @parameter0: android.accounts.AccountMonitor;

        $i0 = $r0.<android.accounts.AccountMonitor: int pending>;

        $i0 = $i0 - 1;

        $r0.<android.accounts.AccountMonitor: int pending> = $i0;

        return $i0;
    }

    static android.content.Context access$100(android.accounts.AccountMonitor)
    {
        android.accounts.AccountMonitor $r0;
        android.content.Context r1;

        $r0 := @parameter0: android.accounts.AccountMonitor;

        r1 = $r0.<android.accounts.AccountMonitor: android.content.Context mContext>;

        return r1;
    }

    static android.accounts.AccountMonitorListener access$200(android.accounts.AccountMonitor)
    {
        android.accounts.AccountMonitor $r0;
        android.accounts.AccountMonitorListener r1;

        $r0 := @parameter0: android.accounts.AccountMonitor;

        r1 = $r0.<android.accounts.AccountMonitor: android.accounts.AccountMonitorListener mListener>;

        return r1;
    }

    private void notifyListener()
    {
        android.accounts.AccountMonitor $r0;
        int $i0;
        android.content.Context $r1;
        android.content.Intent $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.accounts.AccountMonitor;

        entermonitor $r0;

     label1:
        $i0 = $r0.<android.accounts.AccountMonitor: int pending>;

        if $i0 != 0 goto label2;

        $r1 = $r0.<android.accounts.AccountMonitor: android.content.Context mContext>;

        $r2 = <android.accounts.AccountsServiceConstants: android.content.Intent SERVICE_INTENT>;

        $z0 = virtualinvoke $r1.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r2, $r0, 1);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t connect to ");

        $r2 = <android.accounts.AccountsServiceConstants: android.content.Intent SERVICE_INTENT>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Missing service?)");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AccountMonitor", $r4);

     label2:
        $i0 = $r0.<android.accounts.AccountMonitor: int pending>;

        $i0 = $i0 + 1;

        $r0.<android.accounts.AccountMonitor: int pending> = $i0;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void close()
    {
        android.accounts.AccountMonitor $r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.accounts.AccountMonitor;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.accounts.AccountMonitor: boolean mClosed>;

        if $z0 != 0 goto label2;

        $r1 = $r0.<android.accounts.AccountMonitor: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r0);

        $r0.<android.accounts.AccountMonitor: boolean mClosed> = 1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.accounts.AccountMonitor $r0;

        $r0 := @this: android.accounts.AccountMonitor;

        virtualinvoke $r0.<android.accounts.AccountMonitor: void close()>();

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.accounts.AccountMonitor $r0;
        android.content.Context $r1;
        android.content.Intent $r2;

        $r0 := @this: android.accounts.AccountMonitor;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        specialinvoke $r0.<android.accounts.AccountMonitor: void notifyListener()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.accounts.AccountMonitor $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        android.accounts.AccountMonitor$AccountUpdater $r3;

        $r0 := @this: android.accounts.AccountMonitor;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $r3 = new android.accounts.AccountMonitor$AccountUpdater;

        specialinvoke $r3.<android.accounts.AccountMonitor$AccountUpdater: void <init>(android.accounts.AccountMonitor,android.os.IBinder)>($r0, $r2);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        android.accounts.AccountMonitor $r0;
        android.content.ComponentName $r1;

        $r0 := @this: android.accounts.AccountMonitor;

        $r1 := @parameter0: android.content.ComponentName;

        return;
    }
}
