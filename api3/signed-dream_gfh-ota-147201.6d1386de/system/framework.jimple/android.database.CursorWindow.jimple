public class android.database.CursorWindow extends android.database.sqlite.SQLiteClosable implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private int mStartPos;
    private int nWindow;

    static void <clinit>()
    {
        android.database.CursorWindow$1 $r0;

        $r0 = new android.database.CursorWindow$1;

        specialinvoke $r0.<android.database.CursorWindow$1: void <init>()>();

        <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.database.CursorWindow $r0;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        int $i0;

        $r0 := @this: android.database.CursorWindow;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.database.CursorWindow: int mStartPos> = $i0;

        specialinvoke $r0.<android.database.CursorWindow: void native_init(android.os.IBinder)>($r2);

        return;
    }

    void <init>(android.os.Parcel, android.database.CursorWindow$1)
    {
        android.database.CursorWindow $r0;
        android.os.Parcel $r1;
        android.database.CursorWindow$1 $r2;

        $r0 := @this: android.database.CursorWindow;

        $r1 := @parameter0: android.os.Parcel;

        $r2 := @parameter1: android.database.CursorWindow$1;

        specialinvoke $r0.<android.database.CursorWindow: void <init>(android.os.Parcel)>($r1);

        return;
    }

    public void <init>(boolean)
    {
        android.database.CursorWindow $r0;
        boolean $z0;

        $r0 := @this: android.database.CursorWindow;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r0.<android.database.CursorWindow: int mStartPos> = 0;

        specialinvoke $r0.<android.database.CursorWindow: void native_init(boolean)>($z0);

        return;
    }

    private native boolean allocRow_native();

    private native void close_native();

    private native char[] copyStringToBuffer_native(int, int, int, android.database.CharArrayBuffer);

    private native void freeLastRow_native();

    private native byte[] getBlob_native(int, int);

    private native double getDouble_native(int, int);

    private native long getLong_native(int, int);

    private native int getNumRows_native();

    private native java.lang.String getString_native(int, int);

    private native boolean isBlob_native(int, int);

    private native boolean isNull_native(int, int);

    private native void native_clear();

    private native android.os.IBinder native_getBinder();

    private native void native_init(android.os.IBinder);

    private native void native_init(boolean);

    public static android.database.CursorWindow newFromParcel(android.os.Parcel)
    {
        android.os.Parcelable$Creator $r0;
        java.lang.Object $r1;
        android.os.Parcel $r2;
        android.database.CursorWindow $r3;

        $r2 := @parameter0: android.os.Parcel;

        $r0 = <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR>;

        $r1 = interfaceinvoke $r0.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);

        $r3 = (android.database.CursorWindow) $r1;

        return $r3;
    }

    private native boolean putBlob_native(byte[], int, int);

    private native boolean putDouble_native(double, int, int);

    private native boolean putLong_native(long, int, int);

    private native boolean putNull_native(int, int);

    private native boolean putString_native(java.lang.String, int, int);

    private native boolean setNumColumns_native(int);

    public boolean allocRow()
    {
        android.database.CursorWindow $r0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean allocRow_native()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clear()
    {
        android.database.CursorWindow $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $r0.<android.database.CursorWindow: int mStartPos> = 0;

        specialinvoke $r0.<android.database.CursorWindow: void native_clear()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void close()
    {
        android.database.CursorWindow $r0;

        $r0 := @this: android.database.CursorWindow;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;
    }

    public void copyStringToBuffer(int, int, android.database.CharArrayBuffer)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        android.database.CharArrayBuffer $r1;
        char[] $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.database.CharArrayBuffer;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CharArrayBuffer should not be null");

        throw $r3;

     label1:
        $r2 = $r1.<android.database.CharArrayBuffer: char[] data>;

        if $r2 != null goto label2;

        $r2 = newarray (char)[64];

        $r1.<android.database.CharArrayBuffer: char[] data> = $r2;

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label3:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $r2 = $r1.<android.database.CharArrayBuffer: char[] data>;

        $i2 = lengthof $r2;

        $r2 = specialinvoke $r0.<android.database.CursorWindow: char[] copyStringToBuffer_native(int,int,int,android.database.CharArrayBuffer)>($i0, $i1, $i2, $r1);

        if $r2 == null goto label4;

        $r1.<android.database.CharArrayBuffer: char[] data> = $r2;

     label4:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r4;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int describeContents()
    {
        android.database.CursorWindow $r0;

        $r0 := @this: android.database.CursorWindow;

        return 0;
    }

    protected void finalize()
    {
        android.database.CursorWindow $r0;

        $r0 := @this: android.database.CursorWindow;

        specialinvoke $r0.<android.database.CursorWindow: void close_native()>();

        return;
    }

    public void freeLastRow()
    {
        android.database.CursorWindow $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        specialinvoke $r0.<android.database.CursorWindow: void freeLastRow_native()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public byte[] getBlob(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $r1 = specialinvoke $r0.<android.database.CursorWindow: byte[] getBlob_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public double getDouble(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $d0 = specialinvoke $r0.<android.database.CursorWindow: double getDouble_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $d0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public float getFloat(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        double $d0;
        float $f0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $d0 = specialinvoke $r0.<android.database.CursorWindow: double getDouble_native(int,int)>($i0, $i1);

     label2:
        $f0 = (float) $d0;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $f0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getInt(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i3;
        long $l2;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i3 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $l2 = specialinvoke $r0.<android.database.CursorWindow: long getLong_native(int,int)>($i0, $i1);

     label2:
        $i0 = (int) $l2;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $i0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getLong(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i3;
        long $l2;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i3 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $l2 = specialinvoke $r0.<android.database.CursorWindow: long getLong_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $l2;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getNumRows()
    {
        android.database.CursorWindow $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i0 = specialinvoke $r0.<android.database.CursorWindow: int getNumRows_native()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $i0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public short getShort(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i3;
        long $l2;
        short $s4;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i3 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $l2 = specialinvoke $r0.<android.database.CursorWindow: long getLong_native(int,int)>($i0, $i1);

     label2:
        $i0 = (int) $l2;

        $s4 = (short) $i0;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $s4;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getStartPosition()
    {
        android.database.CursorWindow $r0;
        int i0;

        $r0 := @this: android.database.CursorWindow;

        i0 = $r0.<android.database.CursorWindow: int mStartPos>;

        return i0;
    }

    public java.lang.String getString(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $r1 = specialinvoke $r0.<android.database.CursorWindow: java.lang.String getString_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isBlob(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean isBlob_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isNull(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean isNull_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void onAllReferencesReleased()
    {
        android.database.CursorWindow $r0;

        $r0 := @this: android.database.CursorWindow;

        specialinvoke $r0.<android.database.CursorWindow: void close_native()>();

        return;
    }

    public boolean putBlob(byte[], int, int)
    {
        android.database.CursorWindow $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.CursorWindow;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean putBlob_native(byte[],int,int)>($r1, $i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putDouble(double, int, int)
    {
        android.database.CursorWindow $r0;
        double $d0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean putDouble_native(double,int,int)>($d0, $i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putLong(long, int, int)
    {
        android.database.CursorWindow $r0;
        long $l0;
        int $i1, $i2, $i3;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i3 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i1 = $i1 - $i3;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean putLong_native(long,int,int)>($l0, $i1, $i2);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putNull(int, int)
    {
        android.database.CursorWindow $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean putNull_native(int,int)>($i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putString(java.lang.String, int, int)
    {
        android.database.CursorWindow $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @this: android.database.CursorWindow;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $i2 = $r0.<android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i2;

        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean putString_native(java.lang.String,int,int)>($r1, $i0, $i1);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNumColumns(int)
    {
        android.database.CursorWindow $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void acquireReference()>();

     label1:
        $z0 = specialinvoke $r0.<android.database.CursorWindow: boolean setNumColumns_native(int)>($i0);

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return $z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setStartPosition(int)
    {
        android.database.CursorWindow $r0;
        int $i0;

        $r0 := @this: android.database.CursorWindow;

        $i0 := @parameter0: int;

        $r0.<android.database.CursorWindow: int mStartPos> = $i0;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.database.CursorWindow $r0;
        android.os.Parcel $r1;
        int $i0;
        android.os.IBinder $r2;

        $r0 := @this: android.database.CursorWindow;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = specialinvoke $r0.<android.database.CursorWindow: android.os.IBinder native_getBinder()>();

        virtualinvoke $r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        $i0 = $r0.<android.database.CursorWindow: int mStartPos>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
}
