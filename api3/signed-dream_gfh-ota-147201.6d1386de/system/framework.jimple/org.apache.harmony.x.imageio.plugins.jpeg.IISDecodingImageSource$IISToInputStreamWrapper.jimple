class org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper extends java.io.InputStream
{
    private javax.imageio.stream.ImageInputStream input;

    public void <init>(javax.imageio.stream.ImageInputStream)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        javax.imageio.stream.ImageInputStream $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $r1 := @parameter0: javax.imageio.stream.ImageInputStream;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input> = $r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        javax.imageio.stream.ImageInputStream $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $r1 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        interfaceinvoke $r1.<javax.imageio.stream.ImageInputStream: void close()>();

        return;
    }

    public void mark(int)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        int $i0;
        javax.imageio.stream.ImageInputStream $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        interfaceinvoke $r1.<javax.imageio.stream.ImageInputStream: void mark()>();

        return;
    }

    public boolean markSupported()
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        int $i0;
        javax.imageio.stream.ImageInputStream $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $r1 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        $i0 = interfaceinvoke $r1.<javax.imageio.stream.ImageInputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        byte[] $r1;
        int $i0;
        javax.imageio.stream.ImageInputStream $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        $i0 = interfaceinvoke $r2.<javax.imageio.stream.ImageInputStream: int read(byte[])>($r1);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        byte[] $r1;
        int $i0, $i1;
        javax.imageio.stream.ImageInputStream $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        $i0 = interfaceinvoke $r2.<javax.imageio.stream.ImageInputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        javax.imageio.stream.ImageInputStream $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $r1 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        interfaceinvoke $r1.<javax.imageio.stream.ImageInputStream: void reset()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper $r0;
        long $l0;
        javax.imageio.stream.ImageInputStream $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper;

        $l0 := @parameter0: long;

        $r1 = $r0.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource$IISToInputStreamWrapper: javax.imageio.stream.ImageInputStream input>;

        $l0 = interfaceinvoke $r1.<javax.imageio.stream.ImageInputStream: long skipBytes(long)>($l0);

        return $l0;
    }
}
