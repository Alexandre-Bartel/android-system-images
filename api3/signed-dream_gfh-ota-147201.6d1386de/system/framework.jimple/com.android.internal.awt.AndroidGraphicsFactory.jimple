public class com.android.internal.awt.AndroidGraphicsFactory extends org.apache.harmony.awt.gl.CommonGraphics2DFactory
{

    public void <init>()
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        specialinvoke $r0.<org.apache.harmony.awt.gl.CommonGraphics2DFactory: void <init>()>();

        return;
    }

    public java.awt.GraphicsEnvironment createGraphicsEnvironment(org.apache.harmony.awt.wtk.WindowFactory)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        org.apache.harmony.awt.wtk.WindowFactory $r1;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.WindowFactory;

        return null;
    }

    public java.awt.Font embedFont(java.lang.String)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: java.lang.String;

        return null;
    }

    public org.apache.harmony.awt.gl.font.FontManager getFontManager()
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        org.apache.harmony.awt.gl.font.AndroidFontManager r1;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        r1 = <org.apache.harmony.awt.gl.font.AndroidFontManager: org.apache.harmony.awt.gl.font.AndroidFontManager inst>;

        return r1;
    }

    public java.awt.FontMetrics getFontMetrics(java.awt.Font)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        java.awt.Font $r1;
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r2;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: java.awt.Font;

        $r2 = new org.apache.harmony.awt.gl.font.FontMetricsImpl;

        specialinvoke $r2.<org.apache.harmony.awt.gl.font.FontMetricsImpl: void <init>(java.awt.Font)>($r1);

        return $r2;
    }

    public java.awt.peer.FontPeer getFontPeer(java.awt.Font)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        java.awt.Font $r1;
        org.apache.harmony.awt.gl.font.AndroidFont $r2;
        java.lang.String $r3;
        int $i0, $i1;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: java.awt.Font;

        $r2 = new org.apache.harmony.awt.gl.font.AndroidFont;

        $r3 = virtualinvoke $r1.<java.awt.Font: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.awt.Font: int getStyle()>();

        $i1 = virtualinvoke $r1.<java.awt.Font: int getSize()>();

        specialinvoke $r2.<org.apache.harmony.awt.gl.font.AndroidFont: void <init>(java.lang.String,int,int)>($r3, $i0, $i1);

        return $r2;
    }

    public java.awt.Graphics2D getGraphics2D()
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        com.android.internal.awt.AndroidGraphics2D $r1;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 = staticinvoke <com.android.internal.awt.AndroidGraphics2D: com.android.internal.awt.AndroidGraphics2D getInstance()>();

        return $r1;
    }

    public java.awt.Graphics2D getGraphics2D(android.content.Context, android.graphics.Canvas, android.graphics.Paint)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        android.content.Context $r1;
        android.graphics.Canvas $r2;
        android.graphics.Paint $r3;
        com.android.internal.awt.AndroidGraphics2D $r4;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.graphics.Canvas;

        $r3 := @parameter2: android.graphics.Paint;

        $r4 = staticinvoke <com.android.internal.awt.AndroidGraphics2D: com.android.internal.awt.AndroidGraphics2D getInstance(android.content.Context,android.graphics.Canvas,android.graphics.Paint)>($r1, $r2, $r3);

        return $r4;
    }

    public java.awt.Graphics2D getGraphics2D(android.graphics.Canvas, android.graphics.Paint)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not supported!");

        throw $r3;
    }

    public java.awt.Graphics2D getGraphics2D(org.apache.harmony.awt.wtk.NativeWindow, int, int, int, int)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        org.apache.harmony.awt.wtk.NativeWindow $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.NativeWindow;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        return null;
    }

    public java.awt.Graphics2D getGraphics2D(org.apache.harmony.awt.wtk.NativeWindow, int, int, org.apache.harmony.awt.gl.MultiRectArea)
    {
        com.android.internal.awt.AndroidGraphicsFactory $r0;
        org.apache.harmony.awt.wtk.NativeWindow $r1;
        int $i0, $i1;
        org.apache.harmony.awt.gl.MultiRectArea $r2;

        $r0 := @this: com.android.internal.awt.AndroidGraphicsFactory;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.NativeWindow;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: org.apache.harmony.awt.gl.MultiRectArea;

        return null;
    }
}
