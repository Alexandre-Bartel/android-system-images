public class org.apache.harmony.luni.util.PositionedInputStream extends java.io.FilterInputStream
{
    private int currentPosition;

    public void <init>(java.io.InputStream)
    {
        org.apache.harmony.luni.util.PositionedInputStream $r0;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.luni.util.PositionedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public int currentPosition()
    {
        org.apache.harmony.luni.util.PositionedInputStream $r0;
        int i0;

        $r0 := @this: org.apache.harmony.luni.util.PositionedInputStream;

        i0 = $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition>;

        return i0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.harmony.luni.util.PositionedInputStream $r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.luni.util.PositionedInputStream;

        $r1 = $r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label1;

        $i1 = $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition>;

        $i1 = $i1 + 1;

        $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition> = $i1;

        return $i0;

     label1:
        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.luni.util.PositionedInputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.InputStream $r2;

        $r0 := @this: org.apache.harmony.luni.util.PositionedInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        if $i0 < 0 goto label1;

        $i1 = $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition>;

        $i1 = $i1 + $i0;

        $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition> = $i1;

        return $i0;

     label1:
        return $i0;
    }

    public void resetCurrentPosition()
    {
        org.apache.harmony.luni.util.PositionedInputStream $r0;

        $r0 := @this: org.apache.harmony.luni.util.PositionedInputStream;

        $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition> = 0;

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.harmony.luni.util.PositionedInputStream $r0;
        long $l0, $l2;
        java.io.InputStream $r1;
        int $i1;

        $r0 := @this: org.apache.harmony.luni.util.PositionedInputStream;

        $l0 := @parameter0: long;

        $r1 = $r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $l0 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l0);

        $i1 = $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition>;

        $l2 = (long) $i1;

        $l2 = $l2 + $l0;

        $i1 = (int) $l2;

        $r0.<org.apache.harmony.luni.util.PositionedInputStream: int currentPosition> = $i1;

        return $l0;
    }
}
