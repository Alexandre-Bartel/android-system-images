public class android.graphics.drawable.ScaleDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private boolean mMutated;
    private android.graphics.drawable.ScaleDrawable$ScaleState mScaleState;
    private final android.graphics.Rect mTmpRect;

    void <init>()
    {
        android.graphics.drawable.ScaleDrawable $r0;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        specialinvoke $r0.<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.ScaleDrawable$ScaleState)>(null);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, int, float, float)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;
        float $f0, $f1;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        specialinvoke $r0.<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.ScaleDrawable$ScaleState)>(null);

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable> = $r1;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: int mGravity> = $i0;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleWidth> = $f0;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleHeight> = $f1;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        return;

     label1:
        return;
    }

    private void <init>(android.graphics.drawable.ScaleDrawable$ScaleState)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1, $r3;
        android.graphics.Rect $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.drawable.ScaleDrawable$ScaleState;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.Rect mTmpRect> = $r2;

        $r3 = new android.graphics.drawable.ScaleDrawable$ScaleState;

        specialinvoke $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable)>($r1, $r0);

        $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState> = $r3;

        return;
    }

    void <init>(android.graphics.drawable.ScaleDrawable$ScaleState, android.graphics.drawable.ScaleDrawable$1)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.ScaleDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.drawable.ScaleDrawable$ScaleState;

        $r2 := @parameter1: android.graphics.drawable.ScaleDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.ScaleDrawable$ScaleState)>($r1);

        return;
    }

    private static float getPercent(android.content.res.TypedArray, int)
    {
        android.content.res.TypedArray $r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        float $f0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        $f0 = $f0 / 100.0F;

        return $f0;

     label1:
        return -1.0F;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.Canvas $r1;
        int $i0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r3 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getLevel()>();

        if $i0 == 0 goto label1;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r3 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label1:
        return;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $i1 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        return r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int $i0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int $i0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int $i0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.Rect $r1;
        boolean $z0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r3 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r6;
        java.lang.IllegalArgumentException $r7;
        android.graphics.drawable.ScaleDrawable$ScaleState $r8;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        $r4 = <com.android.internal.R$styleable: int[] ScaleDrawable>;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        $f0 = staticinvoke <android.graphics.drawable.ScaleDrawable: float getPercent(android.content.res.TypedArray,int)>($r5, 1);

        $f1 = staticinvoke <android.graphics.drawable.ScaleDrawable: float getPercent(android.content.res.TypedArray,int)>($r5, 2);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(3, 3);

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 1 goto label3;

        if $i2 != 3 goto label2;

        $i3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= $i1 goto label3;

     label2:
        if $i2 != 2 goto label1;

        $r6 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        goto label1;

     label3:
        if $r6 != null goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No drawable specified for <scale>");

        throw $r7;

     label4:
        $r8 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r8.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable> = $r6;

        $r8 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r8.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleWidth> = $f0;

        $r8 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r8.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleHeight> = $f1;

        $r8 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r8.<android.graphics.drawable.ScaleDrawable$ScaleState: int mGravity> = $i0;

        if $r6 == null goto label5;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        return;

     label5:
        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.Drawable$Callback $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r2.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>($r0);

        return;

     label1:
        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        boolean $z0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $z0 = $r0.<android.graphics.drawable.ScaleDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != $r0 goto label2;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r1 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r0.<android.graphics.drawable.ScaleDrawable: boolean mMutated> = 1;

        return $r0;

     label1:
        return $r0;

     label2:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1, $i2, $i4;
        android.graphics.drawable.ScaleDrawable$ScaleState $r3;
        float $f0, $f1;
        byte $b3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.Rect mTmpRect>;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getLevel()>();

        $i1 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i2 = $i1;

        $r3 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $f0 = $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleWidth>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label1;

        $i2 = $i1 - 0;

        $i4 = 10000 - $i0;

        $i2 = $i2 * $i4;

        $f0 = (float) $i2;

        $r3 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $f1 = $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleWidth>;

        $f0 = $f0 * $f1;

        $f0 = $f0 / 10000.0F;

        $i2 = (int) $f0;

        $i2 = $i1 - $i2;

     label1:
        $i1 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i4 = $i1;

        $r3 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $f0 = $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleHeight>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label2;

        $i4 = $i1 - 0;

        $i0 = 10000 - $i0;

        $i0 = $i4 * $i0;

        $f0 = (float) $i0;

        $r3 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $f1 = $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: float mScaleHeight>;

        $f0 = $f0 * $f1;

        $f0 = $f0 / 10000.0F;

        $i0 = (int) $f0;

        $i4 = $i1 - $i0;

     label2:
        $r3 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $i0 = $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: int mGravity>;

        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>($i0, $i2, $i4, $r1, $r2);

        if $i2 <= 0 goto label3;

        if $i4 <= 0 goto label4;

        $r3 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r4 = $r3.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i4 = $r2.<android.graphics.Rect: int bottom>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i2, $i1, $i4);

        return;

     label3:
        return;

     label4:
        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int $i0;
        android.graphics.Rect $r1;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r3 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r0.<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>($r1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return 1;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int[] $r1;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;
        android.graphics.Rect $r4;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: int[];

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r3 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        $r4 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r0.<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>($r4);

        return $z0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        long $l0;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>($r0, $r2, $l0);

        return;

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        int $i0;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.ScaleDrawable$ScaleState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r3 = $r2.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        boolean $z0, $z1;
        android.graphics.drawable.ScaleDrawable$ScaleState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = $r0.<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.ScaleDrawable$ScaleState mScaleState>;

        $r2 = $r1.<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        return $z0;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.ScaleDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.ScaleDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>($r0, $r2);

        return;

     label1:
        return;
    }
}
