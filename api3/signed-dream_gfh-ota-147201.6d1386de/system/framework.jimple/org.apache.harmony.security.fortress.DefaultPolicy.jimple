public class org.apache.harmony.security.fortress.DefaultPolicy extends java.security.Policy
{
    public static final java.lang.String JAVA_SECURITY_POLICY;
    public static final java.lang.String POLICY_URL_PREFIX;
    private final java.util.Map cache;
    private final java.util.Set grants;
    private boolean initiailized;
    private final org.apache.harmony.security.fortress.DefaultPolicyParser parser;

    public void <init>()
    {
        org.apache.harmony.security.fortress.DefaultPolicy $r0;
        org.apache.harmony.security.fortress.DefaultPolicyParser $r1;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicy;

        $r1 = new org.apache.harmony.security.fortress.DefaultPolicyParser;

        specialinvoke $r1.<org.apache.harmony.security.fortress.DefaultPolicyParser: void <init>()>();

        specialinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicy: void <init>(org.apache.harmony.security.fortress.DefaultPolicyParser)>($r1);

        return;
    }

    public void <init>(org.apache.harmony.security.fortress.DefaultPolicyParser)
    {
        org.apache.harmony.security.fortress.DefaultPolicy $r0;
        org.apache.harmony.security.fortress.DefaultPolicyParser $r1;
        java.util.HashSet $r2;
        java.util.WeakHashMap $r3;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicy;

        $r1 := @parameter0: org.apache.harmony.security.fortress.DefaultPolicyParser;

        specialinvoke $r0.<java.security.Policy: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Set grants> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache> = $r3;

        $r0.<org.apache.harmony.security.fortress.DefaultPolicy: org.apache.harmony.security.fortress.DefaultPolicyParser parser> = $r1;

        $r0.<org.apache.harmony.security.fortress.DefaultPolicy: boolean initiailized> = 0;

        virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicy: void refresh()>();

        return;
    }

    public java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        org.apache.harmony.security.fortress.DefaultPolicy $r0;
        java.security.CodeSource $r1;
        java.util.HashSet $r2;
        java.util.Map $r3, $r6;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Collection $r5, $r7;
        java.util.Set $r8;
        java.util.Iterator $r9;
        org.apache.harmony.security.PolicyEntry $r10;
        java.lang.Throwable $r11, $r12;
        java.security.PermissionCollection $r13;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicy;

        $r1 := @parameter0: java.security.CodeSource;

        $z0 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: boolean initiailized>;

        if $z0 != 0 goto label03;

        entermonitor $r0;

     label01:
        $z0 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: boolean initiailized>;

        if $z0 != 0 goto label02;

        virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicy: void refresh()>();

     label02:
        exitmonitor $r0;

     label03:
        $r3 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.Collection) $r4;

        if $r5 != null goto label17;

        $r3 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        entermonitor $r3;

     label04:
        $r6 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        $r4 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (java.util.Collection) $r4;

        $r5 = $r7;

        if $r7 != null goto label16;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

     label05:
        $r8 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Set grants>;

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r4 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.apache.harmony.security.PolicyEntry) $r4;

        $z0 = virtualinvoke $r10.<org.apache.harmony.security.PolicyEntry: boolean impliesPrincipals(java.security.Principal[])>(null);

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r10.<org.apache.harmony.security.PolicyEntry: boolean impliesCodeSource(java.security.CodeSource)>($r1);

        if $z0 == 0 goto label06;

        $r5 = virtualinvoke $r10.<org.apache.harmony.security.PolicyEntry: java.util.Collection getPermissions()>();

        interfaceinvoke $r2.<java.util.Collection: boolean addAll(java.util.Collection)>($r5);

     label07:
        goto label06;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor $r3;

     label10:
        throw $r11;

     label11:
        $r12 := @caughtexception;

     label12:
        exitmonitor $r0;

     label13:
        throw $r12;

     label14:
        $r6 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label15:
        $r5 = $r2;

     label16:
        exitmonitor $r3;

     label17:
        $r13 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.security.PermissionCollection toPermissionCollection(java.util.Collection)>($r5);

        return $r13;

     label18:
        $r11 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)
    {
        org.apache.harmony.security.fortress.DefaultPolicy $r0;
        java.security.ProtectionDomain $r1;
        java.util.HashSet $r2;
        java.util.Map $r3, $r6;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Collection $r5, $r7;
        java.util.Set $r8;
        java.util.Iterator $r9;
        org.apache.harmony.security.PolicyEntry $r10;
        java.security.Principal[] $r11;
        java.security.CodeSource $r12;
        java.lang.Throwable $r13, $r14;
        java.security.PermissionCollection $r15;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicy;

        $r1 := @parameter0: java.security.ProtectionDomain;

        $z0 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: boolean initiailized>;

        if $z0 != 0 goto label03;

        entermonitor $r0;

     label01:
        $z0 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: boolean initiailized>;

        if $z0 != 0 goto label02;

        virtualinvoke $r0.<org.apache.harmony.security.fortress.DefaultPolicy: void refresh()>();

     label02:
        exitmonitor $r0;

     label03:
        $r3 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.Collection) $r4;

        if $r5 != null goto label21;

        $r3 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        entermonitor $r3;

     label04:
        $r6 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        $r4 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (java.util.Collection) $r4;

        $r5 = $r7;

        if $r7 != null goto label20;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

     label05:
        $r8 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Set grants>;

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r4 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.apache.harmony.security.PolicyEntry) $r4;

        if $r1 != null goto label16;

        $r11 = null;

     label07:
        $z0 = virtualinvoke $r10.<org.apache.harmony.security.PolicyEntry: boolean impliesPrincipals(java.security.Principal[])>($r11);

        if $z0 == 0 goto label06;

        if $r1 != null goto label17;

        $r12 = null;

     label08:
        $z0 = virtualinvoke $r10.<org.apache.harmony.security.PolicyEntry: boolean impliesCodeSource(java.security.CodeSource)>($r12);

        if $z0 == 0 goto label06;

        $r5 = virtualinvoke $r10.<org.apache.harmony.security.PolicyEntry: java.util.Collection getPermissions()>();

        interfaceinvoke $r2.<java.util.Collection: boolean addAll(java.util.Collection)>($r5);

     label09:
        goto label06;

     label10:
        $r13 := @caughtexception;

     label11:
        exitmonitor $r3;

     label12:
        throw $r13;

     label13:
        $r14 := @caughtexception;

     label14:
        exitmonitor $r0;

     label15:
        throw $r14;

     label16:
        $r11 = virtualinvoke $r1.<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>();

        goto label07;

     label17:
        $r12 = virtualinvoke $r1.<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>();

        goto label08;

     label18:
        $r6 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label19:
        $r5 = $r2;

     label20:
        exitmonitor $r3;

     label21:
        $r15 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.security.PermissionCollection toPermissionCollection(java.util.Collection)>($r5);

        return $r15;

     label22:
        $r13 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label19 with label10;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public void refresh()
    {
        org.apache.harmony.security.fortress.DefaultPolicy $r0;
        java.util.HashSet $r1;
        java.util.Properties $r2, $r5;
        org.apache.harmony.security.fortress.PolicyUtils$SystemKit $r3;
        java.lang.Object $r4;
        java.lang.String $r6;
        java.net.URL[] $r7;
        int $i0, $i1;
        org.apache.harmony.security.fortress.DefaultPolicyParser $r8;
        java.net.URL $r9;
        java.util.Collection $r10;
        java.util.Map $r11, $r13;
        java.util.Set $r12;
        java.lang.Throwable $r14, $r15;
        java.lang.Exception $r16;

        $r0 := @this: org.apache.harmony.security.fortress.DefaultPolicy;

        entermonitor $r0;

     label01:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = new java.util.Properties;

        $r3 = new org.apache.harmony.security.fortress.PolicyUtils$SystemKit;

        specialinvoke $r3.<org.apache.harmony.security.fortress.PolicyUtils$SystemKit: void <init>()>();

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

        $r5 = (java.util.Properties) $r4;

        specialinvoke $r2.<java.util.Properties: void <init>(java.util.Properties)>($r5);

        $r6 = <java.io.File: java.lang.String separator>;

        virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("/", $r6);

        $r7 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: java.net.URL[] getPolicyURLs(java.util.Properties,java.lang.String,java.lang.String)>($r2, "java.security.policy", "policy.url.");

        $i0 = 0;

     label02:
        $i1 = lengthof $r7;

     label03:
        if $i0 >= $i1 goto label06;

     label04:
        $r8 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: org.apache.harmony.security.fortress.DefaultPolicyParser parser>;

        $r9 = $r7[$i0];

        $r10 = virtualinvoke $r8.<org.apache.harmony.security.fortress.DefaultPolicyParser: java.util.Collection parse(java.net.URL,java.util.Properties)>($r9, $r2);

        interfaceinvoke $r1.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

     label05:
        $i0 = $i0 + 1;

        goto label02;

     label06:
        $r11 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        entermonitor $r11;

     label07:
        $r12 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Set grants>;

        interfaceinvoke $r12.<java.util.Set: void clear()>();

        $r12 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Set grants>;

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r1);

        $r13 = $r0.<org.apache.harmony.security.fortress.DefaultPolicy: java.util.Map cache>;

        interfaceinvoke $r13.<java.util.Map: void clear()>();

        exitmonitor $r11;

     label08:
        $r0.<org.apache.harmony.security.fortress.DefaultPolicy: boolean initiailized> = 1;

     label09:
        exitmonitor $r0;

        return;

     label10:
        $r14 := @caughtexception;

     label11:
        exitmonitor $r11;

     label12:
        throw $r14;

     label13:
        $r15 := @caughtexception;

        exitmonitor $r0;

        throw $r15;

     label14:
        $r16 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.security.fortress.DefaultPolicy: java.lang.String POLICY_URL_PREFIX> = "policy.url.";

        <org.apache.harmony.security.fortress.DefaultPolicy: java.lang.String JAVA_SECURITY_POLICY> = "java.security.policy";

        return;
    }
}
