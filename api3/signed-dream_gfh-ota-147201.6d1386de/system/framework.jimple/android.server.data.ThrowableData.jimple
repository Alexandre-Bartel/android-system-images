public class android.server.data.ThrowableData extends java.lang.Object
{
    final android.server.data.ThrowableData cause;
    final java.lang.String message;
    final android.server.data.StackTraceElementData[] stackTrace;
    final java.lang.String type;

    public void <init>(java.io.DataInput) throws java.io.IOException
    {
        android.server.data.ThrowableData $r0, $r7;
        java.io.DataInput $r1;
        int $i0, $i1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.server.data.StackTraceElementData[] $r5;
        android.server.data.StackTraceElementData $r6;
        boolean $z0;

        $r0 := @this: android.server.data.ThrowableData;

        $r1 := @parameter0: java.io.DataInput;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke $r1.<java.io.DataInput: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected 0. Got: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r4 = interfaceinvoke $r1.<java.io.DataInput: java.lang.String readUTF()>();

        $r0.<android.server.data.ThrowableData: java.lang.String message> = $r4;

        $r4 = interfaceinvoke $r1.<java.io.DataInput: java.lang.String readUTF()>();

        $r0.<android.server.data.ThrowableData: java.lang.String type> = $r4;

        $i0 = interfaceinvoke $r1.<java.io.DataInput: int readInt()>();

        $r5 = newarray (android.server.data.StackTraceElementData)[$i0];

        $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace> = $r5;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r5 = $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace>;

        $r6 = new android.server.data.StackTraceElementData;

        specialinvoke $r6.<android.server.data.StackTraceElementData: void <init>(java.io.DataInput)>($r1);

        $r5[$i1] = $r6;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $z0 = interfaceinvoke $r1.<java.io.DataInput: boolean readBoolean()>();

        if $z0 == 0 goto label5;

        $r7 = new android.server.data.ThrowableData;

        specialinvoke $r7.<android.server.data.ThrowableData: void <init>(java.io.DataInput)>($r1);

     label4:
        $r0.<android.server.data.ThrowableData: android.server.data.ThrowableData cause> = $r7;

        return;

     label5:
        $r7 = null;

        goto label4;
    }

    public void <init>(java.lang.Throwable)
    {
        android.server.data.ThrowableData $r0, $r8;
        java.lang.Throwable $r1;
        android.server.data.StackTraceElementData $r2;
        java.lang.StackTraceElement $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        java.lang.StackTraceElement[] $r6;
        int $i0, $i1;
        android.server.data.StackTraceElementData[] $r7;

        $r0 := @this: android.server.data.ThrowableData;

        $r1 := @parameter0: java.lang.Throwable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r0.<android.server.data.ThrowableData: java.lang.String type> = $r5;

        $r5 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        if $r5 != null goto label3;

        $r5 = "";

     label1:
        $r0.<android.server.data.ThrowableData: java.lang.String message> = $r5;

        $r6 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof $r6;

        $r7 = newarray (android.server.data.StackTraceElementData)[$i0];

        $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace> = $r7;

        $i0 = 0;

     label2:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label4;

        $r7 = $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace>;

        $r2 = new android.server.data.StackTraceElementData;

        $r3 = $r6[$i0];

        specialinvoke $r2.<android.server.data.StackTraceElementData: void <init>(java.lang.StackTraceElement)>($r3);

        $r7[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r1 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 != null goto label6;

        $r8 = null;

     label5:
        $r0.<android.server.data.ThrowableData: android.server.data.ThrowableData cause> = $r8;

        return;

     label6:
        $r8 = new android.server.data.ThrowableData;

        specialinvoke $r8.<android.server.data.ThrowableData: void <init>(java.lang.Throwable)>($r1);

        goto label5;
    }

    private static void append(java.lang.String, java.lang.StringBuilder, android.server.data.ThrowableData)
    {
        java.lang.String $r0, $r4;
        java.lang.StringBuilder $r1, $r5;
        android.server.data.ThrowableData $r2;
        android.server.data.StackTraceElementData $r3;
        int $i0, $i1, $i2;
        android.server.data.StackTraceElementData[] $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.StringBuilder;

        $r2 := @parameter2: android.server.data.ThrowableData;

        if $r0 == null goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label1:
        $r4 = virtualinvoke $r2.<android.server.data.ThrowableData: java.lang.String getType()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r2.<android.server.data.ThrowableData: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke $r2.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] getStackTrace()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r3 = $r6[$i1];

        if $r0 == null goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label3:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  at ");

        $r4 = virtualinvoke $r3.<android.server.data.StackTraceElementData: java.lang.String getClassName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r4 = virtualinvoke $r3.<android.server.data.StackTraceElementData: java.lang.String getMethodName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke $r3.<android.server.data.StackTraceElementData: java.lang.String getFileName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i2 = virtualinvoke $r3.<android.server.data.StackTraceElementData: int getLineNumber()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r2.<android.server.data.ThrowableData: android.server.data.ThrowableData getCause()>();

        if $r2 == null goto label6;

        if $r0 == null goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caused by: ");

        staticinvoke <android.server.data.ThrowableData: void append(java.lang.String,java.lang.StringBuilder,android.server.data.ThrowableData)>($r0, $r1, $r2);

        return;

     label6:
        return;
    }

    public android.server.data.ThrowableData getCause()
    {
        android.server.data.ThrowableData $r0;

        $r0 := @this: android.server.data.ThrowableData;

        $r0 = $r0.<android.server.data.ThrowableData: android.server.data.ThrowableData cause>;

        return $r0;
    }

    public java.lang.String getMessage()
    {
        android.server.data.ThrowableData $r0;
        java.lang.String r1;

        $r0 := @this: android.server.data.ThrowableData;

        r1 = $r0.<android.server.data.ThrowableData: java.lang.String message>;

        return r1;
    }

    public android.server.data.StackTraceElementData[] getStackTrace()
    {
        android.server.data.ThrowableData $r0;
        android.server.data.StackTraceElementData[] r1;

        $r0 := @this: android.server.data.ThrowableData;

        r1 = $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace>;

        return r1;
    }

    public java.lang.String getType()
    {
        android.server.data.ThrowableData $r0;
        java.lang.String r1;

        $r0 := @this: android.server.data.ThrowableData;

        r1 = $r0.<android.server.data.ThrowableData: java.lang.String type>;

        return r1;
    }

    public java.lang.String toString()
    {
        android.server.data.ThrowableData $r0;
        java.lang.String $r1;

        $r0 := @this: android.server.data.ThrowableData;

        $r1 = virtualinvoke $r0.<android.server.data.ThrowableData: java.lang.String toString(java.lang.String)>(null);

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        android.server.data.ThrowableData $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @this: android.server.data.ThrowableData;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.server.data.ThrowableData: void append(java.lang.String,java.lang.StringBuilder,android.server.data.ThrowableData)>($r1, $r2, $r0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        android.server.data.ThrowableData $r0, $r5;
        java.io.DataOutput $r1;
        android.server.data.StackTraceElementData[] $r2;
        android.server.data.StackTraceElementData $r3;
        int $i0, $i1;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @this: android.server.data.ThrowableData;

        $r1 := @parameter0: java.io.DataOutput;

        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>(0);

        $r4 = $r0.<android.server.data.ThrowableData: java.lang.String message>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeUTF(java.lang.String)>($r4);

        $r4 = $r0.<android.server.data.ThrowableData: java.lang.String type>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeUTF(java.lang.String)>($r4);

        $r2 = $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace>;

        $i0 = lengthof $r2;

        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>($i0);

        $r2 = $r0.<android.server.data.ThrowableData: android.server.data.StackTraceElementData[] stackTrace>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        virtualinvoke $r3.<android.server.data.StackTraceElementData: void write(java.io.DataOutput)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = $r0.<android.server.data.ThrowableData: android.server.data.ThrowableData cause>;

        if $r5 == null goto label4;

        $z0 = 1;

     label3:
        interfaceinvoke $r1.<java.io.DataOutput: void writeBoolean(boolean)>($z0);

        $r5 = $r0.<android.server.data.ThrowableData: android.server.data.ThrowableData cause>;

        if $r5 == null goto label5;

        $r0 = $r0.<android.server.data.ThrowableData: android.server.data.ThrowableData cause>;

        virtualinvoke $r0.<android.server.data.ThrowableData: void write(java.io.DataOutput)>($r1);

        return;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        return;
    }
}
