public class com.google.masf.DelimitedInputStream extends java.io.InputStream
{
    private static final int MAX_BUFFER_SIZE;
    private static final int READ_BUFFER_SIZE;
    protected com.google.masf.BlockingByteQueue buffer;
    protected volatile boolean complete;
    protected java.io.InputStream inputStream;
    protected int length;
    protected java.lang.Object lockObject;

    public void <init>(java.io.InputStream, int)
    {
        com.google.masf.DelimitedInputStream $r0;
        java.io.InputStream $r1;
        int $i0;
        java.lang.Object $r2;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<com.google.masf.DelimitedInputStream: java.lang.Object lockObject> = $r2;

        $r0.<com.google.masf.DelimitedInputStream: java.io.InputStream inputStream> = $r1;

        $r0.<com.google.masf.DelimitedInputStream: int length> = $i0;

        return;
    }

    private int readFromUnderlyingStream() throws java.io.IOException
    {
        com.google.masf.DelimitedInputStream $r0;
        int $i0, $i1;
        java.io.InputStream $r1;
        java.io.IOException $r2;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        $i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        if $i0 <= 0 goto label7;

        $r1 = $r0.<com.google.masf.DelimitedInputStream: java.io.InputStream inputStream>;

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label4;

     label2:
        $i1 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        $i1 = $i1 - 1;

        $r0.<com.google.masf.DelimitedInputStream: int length> = $i1;

     label3:
        if $i1 != 0 goto label8;

     label4:
        specialinvoke $r0.<com.google.masf.DelimitedInputStream: void signalCompletion()>();

     label5:
        return $i0;

     label6:
        $r2 := @caughtexception;

        specialinvoke $r0.<com.google.masf.DelimitedInputStream: void signalCompletion()>();

        throw $r2;

     label7:
        return -1;

     label8:
        return $i0;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label5 with label6;
    }

    private int readFromUnderlyingStream(byte[]) throws java.io.IOException
    {
        com.google.masf.DelimitedInputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.InputStream $r2;
        java.io.IOException $r3;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        $r1 := @parameter0: byte[];

        $i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        if $i0 <= 0 goto label09;

        $r2 = $r0.<com.google.masf.DelimitedInputStream: java.io.InputStream inputStream>;

        $i1 = lengthof $r1;

        $i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

     label01:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0);

     label02:
        if $i0 <= 0 goto label03;

        $i1 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        $i1 = $i1 - $i0;

        $r0.<com.google.masf.DelimitedInputStream: int length> = $i1;

     label03:
        if $i0 <= 0 goto label06;

     label04:
        $i1 = $r0.<com.google.masf.DelimitedInputStream: int length>;

     label05:
        if $i1 != 0 goto label10;

     label06:
        specialinvoke $r0.<com.google.masf.DelimitedInputStream: void signalCompletion()>();

     label07:
        return $i0;

     label08:
        $r3 := @caughtexception;

        specialinvoke $r0.<com.google.masf.DelimitedInputStream: void signalCompletion()>();

        throw $r3;

     label09:
        return -1;

     label10:
        return $i0;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label05 to label07 with label08;
    }

    private void signalCompletion()
    {
        com.google.masf.DelimitedInputStream $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        $r1 = $r0.<com.google.masf.DelimitedInputStream: java.lang.Object lockObject>;

        entermonitor $r1;

     label1:
        $z0 = $r0.<com.google.masf.DelimitedInputStream: boolean complete>;

        if $z0 != 0 goto label2;

        $r0.<com.google.masf.DelimitedInputStream: boolean complete> = 1;

        $r2 = $r0.<com.google.masf.DelimitedInputStream: java.lang.Object lockObject>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void bufferAndDetach()
    {
        com.google.masf.DelimitedInputStream $r0;
        int $i0;
        com.google.masf.BlockingByteQueue $r1;
        byte[] $r2;
        java.io.IOException $r3;
        java.lang.Throwable $r4, $r5;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        entermonitor $r0;

     label01:
        $i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        if $i0 == 0 goto label02;

        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        if $r1 == null goto label04;

     label02:
        exitmonitor $r0;

     label03:
        return;

     label04:
        $r1 = new com.google.masf.BlockingByteQueue;

        $i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(65536, $i0);

        specialinvoke $r1.<com.google.masf.BlockingByteQueue: void <init>(int)>($i0);

        $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer> = $r1;

        exitmonitor $r0;

     label05:
        $r2 = newarray (byte)[1024];

     label06:
        $i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        if $i0 <= 0 goto label20;

     label07:
        $i0 = specialinvoke $r0.<com.google.masf.DelimitedInputStream: int readFromUnderlyingStream(byte[])>($r2);

     label08:
        if $i0 <= 0 goto label17;

     label09:
        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        virtualinvoke $r1.<com.google.masf.BlockingByteQueue: void write(byte[],int)>($r2, $i0);

     label10:
        goto label06;

     label11:
        $r3 := @caughtexception;

     label12:
        staticinvoke <com.google.common.Log: void logQuietThrowable(java.lang.String,java.lang.Throwable)>("DelimitedInputStream", $r3);

     label13:
        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        virtualinvoke $r1.<com.google.masf.BlockingByteQueue: void close()>();

        return;

     label14:
        $r4 := @caughtexception;

     label15:
        exitmonitor $r0;

     label16:
        throw $r4;

     label17:
        $r3 = new java.io.IOException;

     label18:
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Premature EOF");

        throw $r3;

     label19:
        $r5 := @caughtexception;

        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        virtualinvoke $r1.<com.google.masf.BlockingByteQueue: void close()>();

        throw $r5;

     label20:
        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        virtualinvoke $r1.<com.google.masf.BlockingByteQueue: void close()>();

        return;

        catch java.lang.Throwable from label01 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label10 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.io.IOException from label18 to label19 with label11;
        catch java.lang.Throwable from label17 to label19 with label19;
    }

    public void close() throws java.io.IOException
    {
        com.google.masf.DelimitedInputStream $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<java.io.InputStream: void close()>();

     label2:
        $i0 = virtualinvoke $r0.<com.google.masf.DelimitedInputStream: int read()>();

     label3:
        if $i0 >= 0 goto label2;

        exitmonitor $r0;

        return;

     label4:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public int getRemaining()
    {
        com.google.masf.DelimitedInputStream $r0;
        int i0;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        i0 = $r0.<com.google.masf.DelimitedInputStream: int length>;

        return i0;
    }

    public int read() throws java.io.IOException
    {
        com.google.masf.DelimitedInputStream $r0;
        com.google.masf.BlockingByteQueue $r1;
        int $i0;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        if $r1 == null goto label3;

        $r1 = $r0.<com.google.masf.DelimitedInputStream: com.google.masf.BlockingByteQueue buffer>;

        $i0 = virtualinvoke $r1.<com.google.masf.BlockingByteQueue: int read()>();

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $i0 = specialinvoke $r0.<com.google.masf.DelimitedInputStream: int readFromUnderlyingStream()>();

     label4:
        goto label2;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void waitForCompletion()
    {
        com.google.masf.DelimitedInputStream $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        java.lang.InterruptedException $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.masf.DelimitedInputStream;

        $r1 = $r0.<com.google.masf.DelimitedInputStream: java.lang.Object lockObject>;

        entermonitor $r1;

     label01:
        $z0 = $r0.<com.google.masf.DelimitedInputStream: boolean complete>;

     label02:
        if $z0 != 0 goto label07;

     label03:
        $r2 = $r0.<com.google.masf.DelimitedInputStream: java.lang.Object lockObject>;

     label04:
        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label05:
        goto label01;

     label06:
        $r3 := @caughtexception;

        goto label01;

     label07:
        exitmonitor $r1;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void <clinit>()
    {
        <com.google.masf.DelimitedInputStream: int READ_BUFFER_SIZE> = 1024;

        <com.google.masf.DelimitedInputStream: int MAX_BUFFER_SIZE> = 65536;

        return;
    }
}
