public class org.apache.harmony.awt.gl.render.JavaArcRasterizer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.harmony.awt.gl.render.JavaArcRasterizer $r0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaArcRasterizer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void addSeg(org.apache.harmony.awt.gl.MultiRectArea, int, int, int, int, int, int, int[], int[], int[])
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1, $r2, $r3;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $i3 := @parameter1: int;

        $i4 := @parameter2: int;

        $i5 := @parameter3: int;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $r1 := @parameter7: int[];

        $r2 := @parameter8: int[];

        $r3 := @parameter9: int[];

        $i6 = $r3[0];

        lookupswitch($i6)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $i3 = $r3[1];

        $i0 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY3LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r2, $i5, $i4, $i1, $i3, $i0);

        return;

     label3:
        $i3 = $r3[1];

        $i0 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX1LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r1, $i5, $i4, $i2, $i3, $i0);

        return;

     label4:
        $i5 = $r3[1];

        $i0 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX2LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r1, $i3, $i4, $i2, $i5, $i0);

        return;

     label5:
        $i5 = $r3[1];

        $i0 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY2LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r2, $i3, $i4, $i1, $i5, $i0);

        return;

     label6:
        $i4 = $r3[1];

        $i5 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY1LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r2, $i3, $i0, $i1, $i4, $i5);

        return;

     label7:
        $i4 = $r3[1];

        $i5 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX3LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r1, $i3, $i0, $i2, $i4, $i5);

        return;

     label8:
        $i3 = $r3[1];

        $i4 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX0LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r1, $i5, $i0, $i2, $i3, $i4);

        return;

     label9:
        $i3 = $r3[1];

        $i4 = $r3[2];

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY0LineSeg(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int,int,int)>($r0, $r2, $i5, $i0, $i1, $i3, $i4);

        return;
    }

    static void addX0Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i3 = $i0 + $i3;

        $i5 = $i2 - $i4;

        $i5 = $i5 + $i1;

        $i6 = $r1[$i4];

        $i6 = $i6 + $i0;

        $i7 = $i2 - $i4;

        $i7 = $i7 + $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i3, $i5, $i6, $i7);

        $i3 = $r1[$i4];

        $i3 = $i3 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addX0LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $r1[$i8];

        $i6 = $i2 - $i8;

        $i6 = $i1 + $i6;

        if $i7 > $i4 goto label2;

        if $i5 < $i3 goto label2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i7 + $i0;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i9 = $i9 + $i0;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i7, $i6, $i9, $i6);

     label2:
        $i7 = $i5 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addX1Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i3 = $i0 + $i3;

        $i5 = $i2 - $i4;

        $i5 = $i1 - $i5;

        $i6 = $r1[$i4];

        $i6 = $i6 + $i0;

        $i7 = $i2 - $i4;

        $i7 = $i1 - $i7;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i3, $i5, $i6, $i7);

        $i3 = $r1[$i4];

        $i3 = $i3 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addX1LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $r1[$i8];

        $i6 = $i2 - $i8;

        $i6 = $i1 - $i6;

        if $i7 > $i4 goto label2;

        if $i5 < $i3 goto label2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i7 + $i0;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i9 = $i9 + $i0;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i7, $i6, $i9, $i6);

     label2:
        $i7 = $i5 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addX2Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i5 = $r1[$i4];

        $i5 = $i0 - $i5;

        $i6 = $i2 - $i4;

        $i6 = $i1 - $i6;

        $i3 = $i0 - $i3;

        $i7 = $i2 - $i4;

        $i7 = $i1 - $i7;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i6, $i3, $i7);

        $i5 = $r1[$i4];

        $i3 = $i5 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addX2LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $r1[$i8];

        $i6 = $i2 - $i8;

        $i6 = $i1 - $i6;

        if $i7 > $i4 goto label2;

        if $i5 < $i3 goto label2;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i9 = $i0 - $i9;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i0 - $i7;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i9, $i6, $i7, $i6);

     label2:
        $i7 = $i5 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addX3Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i5 = $r1[$i4];

        $i5 = $i0 - $i5;

        $i6 = $i2 - $i4;

        $i6 = $i6 + $i1;

        $i3 = $i0 - $i3;

        $i7 = $i2 - $i4;

        $i7 = $i7 + $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i6, $i3, $i7);

        $i5 = $r1[$i4];

        $i3 = $i5 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addX3LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $r1[$i8];

        $i6 = $i2 - $i8;

        $i6 = $i1 + $i6;

        if $i7 > $i4 goto label2;

        if $i5 < $i3 goto label2;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i9 = $i0 - $i9;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i0 - $i7;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i9, $i6, $i7, $i6);

     label2:
        $i7 = $i5 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addY0Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i5 = $i2 - $i4;

        $i5 = $i5 + $i0;

        $i3 = $i1 + $i3;

        $i6 = $i2 - $i4;

        $i6 = $i6 + $i0;

        $i7 = $r1[$i4];

        $i7 = $i7 + $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i3, $i6, $i7);

        $i5 = $r1[$i4];

        $i3 = $i5 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addY0LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $i2 - $i8;

        $i5 = $i0 + $i5;

        $i6 = $r1[$i8];

        if $i7 > $i4 goto label2;

        if $i6 < $i3 goto label2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i7 + $i1;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i4);

        $i9 = $i9 + $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i7, $i5, $i9);

     label2:
        $i7 = $i6 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addY1Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i5 = $i2 - $i4;

        $i5 = $i0 - $i5;

        $i3 = $i1 + $i3;

        $i6 = $i2 - $i4;

        $i6 = $i0 - $i6;

        $i7 = $r1[$i4];

        $i7 = $i7 + $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i3, $i6, $i7);

        $i5 = $r1[$i4];

        $i3 = $i5 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addY1LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $i2 - $i8;

        $i5 = $i0 - $i5;

        $i6 = $r1[$i8];

        if $i7 > $i4 goto label2;

        if $i6 < $i3 goto label2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i7 + $i1;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i4);

        $i9 = $i9 + $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i7, $i5, $i9);

     label2:
        $i7 = $i6 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addY2Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i5 = $i2 - $i4;

        $i5 = $i0 - $i5;

        $i6 = $r1[$i4];

        $i6 = $i1 - $i6;

        $i7 = $i2 - $i4;

        $i7 = $i0 - $i7;

        $i3 = $i1 - $i3;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i6, $i7, $i3);

        $i3 = $r1[$i4];

        $i3 = $i3 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addY2LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $i2 - $i8;

        $i5 = $i0 - $i5;

        $i6 = $r1[$i8];

        if $i7 > $i4 goto label2;

        if $i6 < $i3 goto label2;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i4);

        $i9 = $i1 - $i9;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i1 - $i7;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i9, $i5, $i7);

     label2:
        $i7 = $i6 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static void addY3Line(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i4 >= $i5 goto label2;

        $i5 = $i2 - $i4;

        $i5 = $i5 + $i0;

        $i6 = $r1[$i4];

        $i6 = $i1 - $i6;

        $i7 = $i2 - $i4;

        $i7 = $i7 + $i0;

        $i3 = $i1 - $i3;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i6, $i7, $i3);

        $i3 = $r1[$i4];

        $i3 = $i3 + 1;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void addY3LineSeg(org.apache.harmony.awt.gl.MultiRectArea, int[], int, int, int, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 := @parameter6: int;

        $i7 = 0;

        $i8 = 0;

     label1:
        $i5 = lengthof $r1;

        if $i8 >= $i5 goto label3;

        $i5 = $i2 - $i8;

        $i5 = $i0 + $i5;

        $i6 = $r1[$i8];

        if $i7 > $i4 goto label2;

        if $i6 < $i3 goto label2;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i4);

        $i9 = $i1 - $i9;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i3);

        $i7 = $i1 - $i7;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i5, $i9, $i5, $i7);

     label2:
        $i7 = $i6 + 1;

        $i8 = $i8 + 1;

        goto label1;

     label3:
        return;
    }

    static int[] createLine(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i2 = $i1 - $i3;

        $i2 = $i2 + 1;

        $r0 = newarray (int)[$i2];

        $i2 = $i0 * $i0;

        $i4 = $i1 * 2;

        $i4 = $i4 * $i1;

        $i2 = $i2 + $i4;

        $i4 = $i0 * 2;

        $i4 = $i4 * $i0;

        $i4 = $i4 * $i1;

        $i5 = $i2 - $i4;

        $i2 = 0;

        $i4 = $i1;

     label1:
        if $i4 < $i3 goto label4;

        if $i5 >= 0 goto label3;

        $i6 = $i1 * $i1;

        $i7 = $i2 * 4;

        $i7 = $i7 + 6;

        $i6 = $i6 * $i7;

        $i5 = $i5 + $i6;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $i6 = $i1 - $i4;

        $r0[$i6] = $i2;

        $i6 = $i1 * $i1;

        $i7 = $i2 * 4;

        $i7 = $i7 + 6;

        $i6 = $i6 * $i7;

        $i5 = $i6 + $i5;

        $i6 = $i0 * 4;

        $i6 = $i6 * $i0;

        $i7 = 1 - $i4;

        $i6 = $i6 * $i7;

        $i5 = $i5 + $i6;

        $i4 = $i4 + -1;

        goto label2;

     label4:
        return $r0;
    }

    static double getNormAngle(double)
    {
        double $d0, $d1;
        byte $b0;

        $d1 := @parameter0: double;

        $d0 = $d1 / 360.0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $d0 = $d0 * 360.0;

        $d1 = $d1 - $d0;

        $b0 = $d1 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $d1 = $d1 + 360.0;

        return $d1;

     label1:
        return $d1;
    }

    static int[] getSegment1(double, int, int, int, int)
    {
        double $d0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r0;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r0 = newarray (int)[3];

        $d0 = $d0 / 90.0;

        $i4 = (int) $d0;

        lookupswitch($i4)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label8;
            default: goto label1;
        };

     label1:
        return $r0;

     label2:
        if $i2 >= $i0 goto label3;

        $r0[0] = 0;

        $i0 = neg $i1;

        $r0[1] = $i0;

        $r0[2] = $i3;

        return $r0;

     label3:
        $r0[0] = 1;

        $r0[1] = 0;

        $r0[2] = $i0;

        return $r0;

     label4:
        $i3 = neg $i0;

        if $i2 <= $i3 goto label5;

        $r0[0] = 2;

        $i0 = neg $i0;

        $r0[1] = $i0;

        $r0[2] = $i2;

        return $r0;

     label5:
        $r0[0] = 3;

        $r0[1] = 0;

        $i0 = neg $i1;

        $r0[2] = $i0;

        return $r0;

     label6:
        $i4 = neg $i0;

        if $i2 >= $i4 goto label7;

        $r0[0] = 4;

        $r0[1] = $i1;

        $r0[2] = $i3;

        return $r0;

     label7:
        $r0[0] = 5;

        $r0[1] = 0;

        $i0 = neg $i0;

        $r0[2] = $i0;

        return $r0;

     label8:
        if $i2 <= $i0 goto label9;

        $r0[0] = 6;

        $r0[1] = $i0;

        $r0[2] = $i2;

        return $r0;

     label9:
        $r0[0] = 7;

        $r0[1] = 0;

        $r0[2] = $i1;

        return $r0;
    }

    static int[] getSegment2(double, int, int, int, int)
    {
        double $d0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r0;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r0 = newarray (int)[3];

        $d0 = $d0 / 90.0;

        $i4 = (int) $d0;

        lookupswitch($i4)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label8;
            default: goto label1;
        };

     label1:
        return $r0;

     label2:
        if $i2 >= $i0 goto label3;

        $r0[0] = 0;

        $r0[1] = 0;

        $i0 = neg $i1;

        $r0[2] = $i0;

        return $r0;

     label3:
        $r0[0] = 1;

        $r0[1] = $i0;

        $r0[2] = $i2;

        return $r0;

     label4:
        $i4 = neg $i0;

        if $i2 <= $i4 goto label5;

        $r0[0] = 2;

        $r0[1] = 0;

        $i0 = neg $i0;

        $r0[2] = $i0;

        return $r0;

     label5:
        $r0[0] = 3;

        $i0 = neg $i1;

        $r0[1] = $i0;

        $r0[2] = $i3;

        return $r0;

     label6:
        $i3 = neg $i0;

        if $i2 >= $i3 goto label7;

        $r0[0] = 4;

        $r0[1] = 0;

        $r0[2] = $i1;

        return $r0;

     label7:
        $r0[0] = 5;

        $i0 = neg $i0;

        $r0[1] = $i0;

        $r0[2] = $i2;

        return $r0;

     label8:
        if $i2 <= $i0 goto label9;

        $r0[0] = 6;

        $r0[1] = 0;

        $r0[2] = $i0;

        return $r0;

     label9:
        $r0[0] = 7;

        $r0[1] = $i1;

        $r0[2] = $i3;

        return $r0;
    }

    public static org.apache.harmony.awt.gl.MultiRectArea rasterize(int, int, int, int, double, double, org.apache.harmony.awt.gl.MultiRectArea)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12;
        org.apache.harmony.awt.gl.MultiRectArea $r0, $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        int[] $r2, $r3, $r4, $r5;
        byte $b10;

        $i3 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $r0 := @parameter6: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void <init>(boolean)>(0);

        $i4 = $i2 / 2;

        $i4 = $i3 + $i4;

        $i3 = $i4;

        $i5 = $i0 / 2;

        $i5 = $i1 + $i5;

        $i1 = $i5;

        $i6 = $i2 % 2;

        if $i6 != 0 goto label01;

        $i4 = $i4 + -1;

     label01:
        $i6 = $i0 % 2;

        if $i6 != 0 goto label02;

        $i5 = $i5 + -1;

     label02:
        $i2 = $i2 / 2;

        $i0 = $i0 / 2;

        $i6 = $i2 * $i2;

        $i7 = $i0 * $i0;

        $i6 = $i6 + $i7;

        $d2 = (double) $i6;

        $d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        if $i2 >= $i0 goto label05;

        $i6 = $i2 * $i2;

        $d3 = (double) $i6;

        $d3 = $d3 / $d2;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $i6 = (int) $d3;

        $i7 = $i0 * $i0;

        $d3 = (double) $i7;

        $d2 = $d3 / $d2;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i7 = (int) $d2;

     label03:
        $r2 = staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: int[] createLine(int,int,int,int)>($i2, $i0, $i6, $i7);

        $r3 = staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: int[] createLine(int,int,int,int)>($i0, $i2, $i7, $i6);

        $i8 = lengthof $r2;

     label04:
        $i8 = $i8 + -1;

        $i9 = $r2[$i8];

        if $i9 <= $i6 goto label06;

        $r2[$i8] = $i6;

        goto label04;

     label05:
        $i6 = $i2 * $i2;

        $d3 = (double) $i6;

        $d3 = $d3 / $d2;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d3);

        $i6 = (int) $d3;

        $i7 = $i0 * $i0;

        $d3 = (double) $i7;

        $d2 = $d3 / $d2;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i7 = (int) $d2;

        goto label03;

     label06:
        $i8 = lengthof $r3;

     label07:
        $i8 = $i8 + -1;

        $i9 = $r3[$i8];

        if $i9 <= $i7 goto label08;

        $r3[$i8] = $i7;

        goto label07;

     label08:
        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $b10 = $d2 cmpl 360.0;

        if $b10 < 0 goto label10;

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX0Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i4, $i5, $i0);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX1Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i4, $i1, $i0);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX2Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i3, $i1, $i0);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX3Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i3, $i5, $i0);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY0Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i4, $i5, $i2);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY1Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i3, $i5, $i2);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY2Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i3, $i1, $i2);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY3Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i4, $i1, $i2);

     label09:
        if $r0 == null goto label25;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void intersect(org.apache.harmony.awt.gl.MultiRectArea)>($r0);

        return $r1;

     label10:
        $d3 = staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: double getNormAngle(double)>($d0);

        $d0 = $d3;

        $d2 = $d3 + $d1;

        $d4 = staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: double getNormAngle(double)>($d2);

        $d2 = $d4;

        $b10 = $d1 cmpg 0.0;

        if $b10 >= 0 goto label11;

        $d0 = $d4;

        $d2 = $d3;

     label11:
        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d3 = neg $d1;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d1 = neg $d1;

        $d4 = (double) $i2;

        $d5 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d4 = $d4 * $d5;

        $i8 = (int) $d4;

        $d4 = (double) $i0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $d3 = $d3 * $d4;

        $i9 = (int) $d3;

        $d3 = (double) $i2;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d3 = $d3 * $d4;

        $i11 = (int) $d3;

        $d3 = (double) $i0;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d1 = $d1 * $d3;

        $i12 = (int) $d1;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: int[] getSegment1(double,int,int,int,int)>($d0, $i8, $i9, $i6, $i7);

        $r5 = staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: int[] getSegment2(double,int,int,int,int)>($d2, $i11, $i12, $i6, $i7);

        $b10 = $d0 cmpg $d2;

        if $b10 >= 0 goto label14;

        $i6 = $r4[0];

        $i7 = $r5[0];

        if $i6 != $i7 goto label14;

        $i6 = $r4[0];

        $i6 = $i6 % 2;

        if $i6 != 0 goto label13;

        $i6 = $r5[2];

        $r4[2] = $i6;

     label12:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addSeg(org.apache.harmony.awt.gl.MultiRectArea,int,int,int,int,int,int,int[],int[],int[])>($r1, $i3, $i1, $i4, $i5, $i2, $i0, $r2, $r3, $r4);

        return $r1;

     label13:
        $i6 = $r5[1];

        $r4[1] = $i6;

        goto label12;

     label14:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addSeg(org.apache.harmony.awt.gl.MultiRectArea,int,int,int,int,int,int,int[],int[],int[])>($r1, $i3, $i1, $i4, $i5, $i2, $i0, $r2, $r3, $r4);

        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addSeg(org.apache.harmony.awt.gl.MultiRectArea,int,int,int,int,int,int,int[],int[],int[])>($r1, $i3, $i1, $i4, $i5, $i2, $i0, $r2, $r3, $r5);

        $i6 = $r4[0];

        $i6 = $i6 + 1;

        $i7 = $i6 % 8;

        $i6 = $r5[0];

     label15:
        if $i7 == $i6 goto label09;

        lookupswitch($i7)
        {
            case 0: goto label17;
            case 1: goto label18;
            case 2: goto label19;
            case 3: goto label20;
            case 4: goto label21;
            case 5: goto label22;
            case 6: goto label23;
            case 7: goto label24;
            default: goto label16;
        };

     label16:
        $i7 = $i7 + 1;

        $i7 = $i7 % 8;

        goto label15;

     label17:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY3Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i4, $i1, $i2);

        goto label16;

     label18:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX1Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i4, $i1, $i0);

        goto label16;

     label19:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX2Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i3, $i1, $i0);

        goto label16;

     label20:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY2Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i3, $i1, $i2);

        goto label16;

     label21:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY1Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i3, $i5, $i2);

        goto label16;

     label22:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX3Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i3, $i5, $i0);

        goto label16;

     label23:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addX0Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r2, $i4, $i5, $i0);

        goto label16;

     label24:
        staticinvoke <org.apache.harmony.awt.gl.render.JavaArcRasterizer: void addY0Line(org.apache.harmony.awt.gl.MultiRectArea,int[],int,int,int)>($r1, $r3, $i4, $i5, $i2);

        goto label16;

     label25:
        return $r1;
    }
}
