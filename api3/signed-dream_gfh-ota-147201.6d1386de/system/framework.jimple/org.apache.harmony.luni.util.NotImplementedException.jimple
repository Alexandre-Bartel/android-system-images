public class org.apache.harmony.luni.util.NotImplementedException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.harmony.luni.util.NotImplementedException $r0;
        java.io.PrintStream $r1;

        $r0 := @this: org.apache.harmony.luni.util.NotImplementedException;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r0.<org.apache.harmony.luni.util.NotImplementedException: void <init>(java.io.PrintStream)>($r1);

        return;
    }

    public void <init>(java.io.PrintStream)
    {
        org.apache.harmony.luni.util.NotImplementedException $r0;
        java.io.PrintStream $r1;
        java.lang.StackTraceElement $r2;
        java.lang.StackTraceElement[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.util.NotImplementedException;

        $r1 := @parameter0: java.io.PrintStream;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("*** NOT IMPLEMENTED EXCEPTION ***");

        $r3 = virtualinvoke $r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r2 = $r3[0];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** thrown from class  -> ");

        $r5 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***             method -> ");

        $r5 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("*** defined in         -> ");

        $z0 = virtualinvoke $r2.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("a native method");

        return;

     label1:
        $r5 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if $r5 != null goto label2;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("an unknown source");

        return;

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StackTraceElement: int getLineNumber()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the file \"");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r5);

        if $i0 < 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on line #");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r5);

     label3:
        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.harmony.luni.util.NotImplementedException $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.util.NotImplementedException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.apache.harmony.luni.util.NotImplementedException $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: org.apache.harmony.luni.util.NotImplementedException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        org.apache.harmony.luni.util.NotImplementedException $r0;
        java.lang.Throwable $r1;

        $r0 := @this: org.apache.harmony.luni.util.NotImplementedException;

        $r1 := @parameter0: java.lang.Throwable;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.luni.util.NotImplementedException: long serialVersionUID> = 1L;

        return;
    }
}
