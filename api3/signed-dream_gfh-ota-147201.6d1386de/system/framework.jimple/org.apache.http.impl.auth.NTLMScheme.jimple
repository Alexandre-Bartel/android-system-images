public class org.apache.http.impl.auth.NTLMScheme extends org.apache.http.impl.auth.AuthSchemeBase
{
    private java.lang.String challenge;
    private final org.apache.http.impl.auth.NTLMEngine engine;
    private org.apache.http.impl.auth.NTLMScheme$State state;

    public void <init>(org.apache.http.impl.auth.NTLMEngine)
    {
        org.apache.http.impl.auth.NTLMScheme $r0;
        org.apache.http.impl.auth.NTLMEngine $r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.impl.auth.NTLMScheme$State $r3;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r1 := @parameter0: org.apache.http.impl.auth.NTLMEngine;

        specialinvoke $r0.<org.apache.http.impl.auth.AuthSchemeBase: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("NTLM engine may not be null");

        throw $r2;

     label1:
        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine> = $r1;

        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r3;

        $r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        return;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.NTLMScheme $r0;
        org.apache.http.auth.Credentials $r1;
        org.apache.http.HttpRequest $r2;
        java.lang.String $r3, $r10, $r15, $r16, $r17;
        org.apache.http.util.CharArrayBuffer $r4;
        java.lang.ClassCastException $r5;
        org.apache.http.auth.NTCredentials $r6;
        org.apache.http.impl.auth.NTLMScheme$State $r7, $r8;
        org.apache.http.impl.auth.NTLMEngine $r9;
        boolean $z0;
        org.apache.http.message.BufferedHeader $r11;
        org.apache.http.auth.InvalidCredentialsException $r12;
        java.lang.StringBuilder $r13;
        java.lang.Class $r14;
        org.apache.http.auth.AuthenticationException $r18;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r1 := @parameter0: org.apache.http.auth.Credentials;

        $r2 := @parameter1: org.apache.http.HttpRequest;

     label1:
        $r6 = (org.apache.http.auth.NTCredentials) $r1;

     label2:
        $r7 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r8 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        if $r7 == $r8 goto label3;

        $r7 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r8 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r7 != $r8 goto label7;

     label3:
        $r9 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r3 = virtualinvoke $r6.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r10 = virtualinvoke $r6.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        $r3 = interfaceinvoke $r9.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType1Msg(java.lang.String,java.lang.String)>($r3, $r10);

        $r7 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED>;

        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r7;

     label4:
        $r4 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r4.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(32);

        $z0 = virtualinvoke $r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean isProxy()>();

        if $z0 == 0 goto label9;

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

     label5:
        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": NTLM ");

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        $r11 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r11.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r4);

        return $r11;

     label6:
        $r5 := @caughtexception;

        $r12 = new org.apache.http.auth.InvalidCredentialsException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credentials cannot be used for NTLM authentication: ");

        $r14 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r3);

        throw $r12;

     label7:
        $r7 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r8 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        if $r7 != $r8 goto label8;

        $r9 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r10 = virtualinvoke $r6.<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>();

        $r15 = virtualinvoke $r6.<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>();

        $r16 = virtualinvoke $r6.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r17 = virtualinvoke $r6.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        $r3 = $r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge>;

        $r3 = interfaceinvoke $r9.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r15, $r16, $r17, $r3);

        $r7 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r7;

        goto label4;

     label8:
        $r18 = new org.apache.http.auth.AuthenticationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state: ");

        $r7 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r3);

        throw $r18;

     label9:
        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

        goto label5;

        catch java.lang.ClassCastException from label1 to label2 with label6;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.http.impl.auth.NTLMScheme $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getRealm()
    {
        org.apache.http.impl.auth.NTLMScheme $r0;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return null;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.NTLMScheme $r0;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return "ntlm";
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.NTLMScheme $r0;
        org.apache.http.impl.auth.NTLMScheme$State $r1, $r2;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r1 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        if $r1 == $r2 goto label1;

        $r1 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.NTLMScheme $r0;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return 1;
    }

    protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.NTLMScheme $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        int $i0, $i1;
        org.apache.http.impl.auth.NTLMScheme$State $r2, $r4;
        java.lang.String $r3;

        $r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r4 = $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        if $r4 != $r2 goto label2;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r2;

     label1:
        $r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        return;

     label2:
        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r2;

        goto label1;

     label3:
        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        $r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r2;

        $r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = $r3;

        return;
    }
}
