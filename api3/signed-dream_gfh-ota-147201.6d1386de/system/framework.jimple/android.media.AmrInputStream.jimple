public final class android.media.AmrInputStream extends java.io.InputStream
{
    private static final int SAMPLES_PER_FRAME;
    private static final java.lang.String TAG;
    private byte[] mBuf;
    private int mBufIn;
    private int mBufOut;
    private int mGae;
    private java.io.InputStream mInputStream;
    private byte[] mOneByte;

    static void <clinit>()
    {
        <android.media.AmrInputStream: java.lang.String TAG> = "AmrInputStream";

        <android.media.AmrInputStream: int SAMPLES_PER_FRAME> = 160;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        return;
    }

    public void <init>(java.io.InputStream)
    {
        android.media.AmrInputStream $r0;
        java.io.InputStream $r1;
        int $i0;
        byte[] $r2;

        $r0 := @this: android.media.AmrInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r2 = newarray (byte)[320];

        $r0.<android.media.AmrInputStream: byte[] mBuf> = $r2;

        $r0.<android.media.AmrInputStream: int mBufIn> = 0;

        $r0.<android.media.AmrInputStream: int mBufOut> = 0;

        $r2 = newarray (byte)[1];

        $r0.<android.media.AmrInputStream: byte[] mOneByte> = $r2;

        $r0.<android.media.AmrInputStream: java.io.InputStream mInputStream> = $r1;

        $i0 = staticinvoke <android.media.AmrInputStream: int GsmAmrEncoderNew()>();

        $r0.<android.media.AmrInputStream: int mGae> = $i0;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderInitialize(int)>($i0);

        return;
    }

    private static native void GsmAmrEncoderCleanup(int);

    private static native void GsmAmrEncoderDelete(int);

    private static native int GsmAmrEncoderEncode(int, byte[], int, byte[], int) throws java.io.IOException;

    private static native void GsmAmrEncoderInitialize(int);

    private static native int GsmAmrEncoderNew();

    public void close() throws java.io.IOException
    {
        android.media.AmrInputStream $r0;
        java.io.InputStream $r1;
        int $i0;
        java.lang.Throwable $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 := @this: android.media.AmrInputStream;

     label01:
        $r1 = $r0.<android.media.AmrInputStream: java.io.InputStream mInputStream>;

        if $r1 == null goto label02;

        $r1 = $r0.<android.media.AmrInputStream: java.io.InputStream mInputStream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label02:
        $r0.<android.media.AmrInputStream: java.io.InputStream mInputStream> = null;

     label03:
        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label04;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderCleanup(int)>($i0);

     label04:
        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label05;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i0);

     label05:
        $r0.<android.media.AmrInputStream: int mGae> = 0;

        return;

     label06:
        $r2 := @caughtexception;

        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r2;

     label07:
        $r3 := @caughtexception;

     label08:
        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label09;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i0);

     label09:
        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r3;

     label10:
        $r4 := @caughtexception;

        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r4;

     label11:
        $r5 := @caughtexception;

        $r0.<android.media.AmrInputStream: java.io.InputStream mInputStream> = null;

     label12:
        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label13;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderCleanup(int)>($i0);

     label13:
        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label14;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i0);

     label14:
        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r5;

     label15:
        $r6 := @caughtexception;

        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r6;

     label16:
        $r7 := @caughtexception;

     label17:
        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label18;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i0);

     label18:
        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r7;

     label19:
        $r8 := @caughtexception;

        $r0.<android.media.AmrInputStream: int mGae> = 0;

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.AmrInputStream $r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: android.media.AmrInputStream;

        $i0 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.media.AmrInputStream: void close()>();

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("someone forgot to close AmrInputStream");

        throw $r1;

     label1:
        return;
    }

    public int read() throws java.io.IOException
    {
        android.media.AmrInputStream $r0;
        int $i0;
        byte[] $r1;
        byte $b1;
        short $s2;

        $r0 := @this: android.media.AmrInputStream;

        $r1 = $r0.<android.media.AmrInputStream: byte[] mOneByte>;

        $i0 = virtualinvoke $r0.<android.media.AmrInputStream: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 != 1 goto label1;

        $r1 = $r0.<android.media.AmrInputStream: byte[] mOneByte>;

        $b1 = $r1[0];

        $s2 = $b1 & 255;

        return $s2;

     label1:
        return -1;
    }

    public int read(byte[]) throws java.io.IOException
    {
        android.media.AmrInputStream $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: android.media.AmrInputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = virtualinvoke $r0.<android.media.AmrInputStream: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.media.AmrInputStream $r0;
        byte[] $r1, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r2;
        java.io.InputStream $r3;

        $r0 := @this: android.media.AmrInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<android.media.AmrInputStream: int mGae>;

        if $i2 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not open");

        throw $r2;

     label1:
        $i2 = $r0.<android.media.AmrInputStream: int mBufOut>;

        $i3 = $r0.<android.media.AmrInputStream: int mBufIn>;

        if $i2 < $i3 goto label5;

        $r0.<android.media.AmrInputStream: int mBufOut> = 0;

        $r0.<android.media.AmrInputStream: int mBufIn> = 0;

        $i2 = 0;

     label2:
        if $i2 >= 320 goto label4;

        $r3 = $r0.<android.media.AmrInputStream: java.io.InputStream mInputStream>;

        $r4 = $r0.<android.media.AmrInputStream: byte[] mBuf>;

        $i3 = 320 - $i2;

        $i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r4, $i2, $i3);

        if $i3 != -1 goto label3;

        return -1;

     label3:
        $i2 = $i2 + $i3;

        goto label2;

     label4:
        $i2 = $r0.<android.media.AmrInputStream: int mGae>;

        $r4 = $r0.<android.media.AmrInputStream: byte[] mBuf>;

        $r5 = $r0.<android.media.AmrInputStream: byte[] mBuf>;

        $i2 = staticinvoke <android.media.AmrInputStream: int GsmAmrEncoderEncode(int,byte[],int,byte[],int)>($i2, $r4, 0, $r5, 0);

        $r0.<android.media.AmrInputStream: int mBufIn> = $i2;

     label5:
        $i2 = $r0.<android.media.AmrInputStream: int mBufIn>;

        $i3 = $r0.<android.media.AmrInputStream: int mBufOut>;

        $i2 = $i2 - $i3;

        if $i1 <= $i2 goto label6;

        $i1 = $r0.<android.media.AmrInputStream: int mBufIn>;

        $i2 = $r0.<android.media.AmrInputStream: int mBufOut>;

        $i1 = $i1 - $i2;

     label6:
        $r4 = $r0.<android.media.AmrInputStream: byte[] mBuf>;

        $i2 = $r0.<android.media.AmrInputStream: int mBufOut>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r1, $i0, $i1);

        $i0 = $r0.<android.media.AmrInputStream: int mBufOut>;

        $i0 = $i0 + $i1;

        $r0.<android.media.AmrInputStream: int mBufOut> = $i0;

        return $i1;
    }
}
