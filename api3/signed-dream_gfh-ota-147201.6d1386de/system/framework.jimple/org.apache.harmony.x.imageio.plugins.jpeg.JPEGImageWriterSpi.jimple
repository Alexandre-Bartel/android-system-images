public class org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi extends javax.imageio.spi.ImageWriterSpi
{

    public void <init>()
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi $r0;
        java.lang.String[] $r1, $r2, $r3, $r5, $r8, $r9, $r10, $r11;
        java.lang.Class[] $r4;
        java.lang.String $r6, $r7;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi;

        $r1 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] names>;

        $r2 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] suffixes>;

        $r3 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] MIMETypes>;

        $r4 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi: java.lang.Class[] STANDARD_OUTPUT_TYPE>;

        $r5 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] readerSpiNames>;

        $r6 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String nativeStreamMetadataFormatName>;

        $r7 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String nativeStreamMetadataFormatClassName>;

        $r8 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraStreamMetadataFormatNames>;

        $r9 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraStreamMetadataFormatClassNames>;

        $r10 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraImageMetadataFormatNames>;

        $r11 = <org.apache.harmony.x.imageio.plugins.jpeg.JPEGSpiConsts: java.lang.String[] extraImageMetadataFormatClassNames>;

        specialinvoke $r0.<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>("Intel Corporation", "0.1 beta", $r1, $r2, $r3, "org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter", $r4, $r5, 0, $r6, $r7, $r8, $r9, 0, "org.apache.harmony.x.imageio.plugins.jpeg.MyFormatMetadata_1.0", "org.apache.harmony.x.imageio.plugins.jpeg.MyFormatMetadata", $r10, $r11);

        return;
    }

    public boolean canEncodeImage(javax.imageio.ImageTypeSpecifier)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi $r0;
        javax.imageio.ImageTypeSpecifier $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi;

        $r1 := @parameter0: javax.imageio.ImageTypeSpecifier;

        return 1;
    }

    public javax.imageio.ImageWriter createWriterInstance(java.lang.Object) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi $r0;
        java.lang.Object $r1;
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter;

        specialinvoke $r2.<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: void <init>(javax.imageio.spi.ImageWriterSpi)>($r0);

        return $r2;
    }

    public java.lang.String getDescription(java.util.Locale)
    {
        org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi $r0;
        java.util.Locale $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi;

        $r1 := @parameter0: java.util.Locale;

        return "DRL JPEG Encoder";
    }
}
