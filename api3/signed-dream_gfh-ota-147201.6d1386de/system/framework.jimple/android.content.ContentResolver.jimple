public abstract class android.content.ContentResolver extends java.lang.Object
{
    public static final java.lang.String CURSOR_DIR_BASE_TYPE;
    public static final java.lang.String CURSOR_ITEM_BASE_TYPE;
    public static final java.lang.String SCHEME_ANDROID_RESOURCE;
    public static final java.lang.String SCHEME_CONTENT;
    public static final java.lang.String SCHEME_FILE;
    public static final java.lang.String SYNC_EXTRAS_ACCOUNT;
    public static final java.lang.String SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS;
    public static final java.lang.String SYNC_EXTRAS_EXPEDITED;
    public static final java.lang.String SYNC_EXTRAS_FORCE;
    public static final java.lang.String SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS;
    public static final java.lang.String SYNC_EXTRAS_UPLOAD;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        android.content.ContentResolver $r0;
        android.content.Context $r1;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.ContentResolver: android.content.Context mContext> = $r1;

        return;
    }

    public static int modeToMode(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.io.FileNotFoundException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: android.net.Uri;

        $r1 := @parameter1: java.lang.String;

        $r2 = "r";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 268435456;

     label1:
        $r2 = "w";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = "wt";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

     label2:
        return 738197504;

     label3:
        $r2 = "wa";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        return 704643072;

     label4:
        $r2 = "rw";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        return 939524096;

     label5:
        $r2 = "rwt";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        return 1006632960;

     label6:
        $r3 = new java.io.FileNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public static void validateSyncExtrasBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.RuntimeException $r8;

        $r0 := @parameter0: android.os.Bundle;

     label01:
        $r1 = virtualinvoke $r0.<android.os.Bundle: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r3 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r4);

        if $r3 == null goto label02;

     label03:
        $z0 = $r3 instanceof java.lang.Long;

     label04:
        if $z0 != 0 goto label02;

     label05:
        $z0 = $r3 instanceof java.lang.Integer;

     label06:
        if $z0 != 0 goto label02;

     label07:
        $z0 = $r3 instanceof java.lang.Boolean;

     label08:
        if $z0 != 0 goto label02;

     label09:
        $z0 = $r3 instanceof java.lang.Float;

     label10:
        if $z0 != 0 goto label02;

     label11:
        $z0 = $r3 instanceof java.lang.Double;

     label12:
        if $z0 != 0 goto label02;

     label13:
        $z0 = $r3 instanceof java.lang.String;

     label14:
        if $z0 != 0 goto label02;

     label15:
        $r5 = new java.lang.IllegalArgumentException;

     label16:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected value type: ");

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label17:
        $r5 := @caughtexception;

        throw $r5;

     label18:
        $r8 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("error unparceling Bundle", $r8);

        throw $r5;

     label19:
        return;

        catch java.lang.IllegalArgumentException from label01 to label03 with label17;
        catch java.lang.IllegalArgumentException from label04 to label05 with label17;
        catch java.lang.IllegalArgumentException from label06 to label07 with label17;
        catch java.lang.IllegalArgumentException from label08 to label09 with label17;
        catch java.lang.IllegalArgumentException from label10 to label11 with label17;
        catch java.lang.IllegalArgumentException from label12 to label13 with label17;
        catch java.lang.IllegalArgumentException from label14 to label15 with label17;
        catch java.lang.IllegalArgumentException from label16 to label17 with label17;
        catch java.lang.RuntimeException from label01 to label03 with label18;
        catch java.lang.RuntimeException from label04 to label05 with label18;
        catch java.lang.RuntimeException from label06 to label07 with label18;
        catch java.lang.RuntimeException from label08 to label09 with label18;
        catch java.lang.RuntimeException from label10 to label11 with label18;
        catch java.lang.RuntimeException from label12 to label13 with label18;
        catch java.lang.RuntimeException from label14 to label15 with label18;
        catch java.lang.RuntimeException from label16 to label17 with label18;
    }

    protected abstract android.content.IContentProvider acquireProvider(android.content.Context, java.lang.String);

    public final android.content.IContentProvider acquireProvider(android.net.Uri)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.content.Context $r4;
        android.content.IContentProvider $r5;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 = "content";

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        if $r2 == null goto label2;

        $r4 = $r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r5 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>($r4, $r2);

        return $r5;

     label2:
        return null;
    }

    public final android.content.IContentProvider acquireProvider(java.lang.String)
    {
        android.content.ContentResolver $r0;
        java.lang.String $r1;
        android.content.IContentProvider $r2;
        android.content.Context $r3;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = $r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r2 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>($r3, $r1);

        return $r2;
    }

    public final int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.content.ContentValues[] $r2;
        android.os.RemoteException $r3;
        android.content.IContentProvider $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        int $i0;
        java.lang.Throwable $r8;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues[];

        $r4 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $i0 = interfaceinvoke $r4.<android.content.IContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>($r1, $r2);

     label2:
        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r4);

        return $i0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r4);

        return 0;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r4);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void cancelSync(android.net.Uri)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.content.IContentService $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

     label1:
        $r2 = staticinvoke <android.content.ContentServiceNative: android.content.IContentService getDefault()>();

        interfaceinvoke $r2.<android.content.IContentService: void cancelSync(android.net.Uri)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        android.os.RemoteException $r4;
        android.content.IContentProvider $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        int $i0;
        java.lang.Throwable $r8;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r5 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r5 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label1:
        $i0 = interfaceinvoke $r5.<android.content.IContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r1, $r2, $r3);

     label2:
        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r5);

        return $i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r5);

        return -1;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r5);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.content.ContentResolver$OpenResourceIdResult $r2;
        java.lang.String $r3, $r13, $r14;
        boolean $z0;
        java.io.FileNotFoundException $r4;
        java.lang.StringBuilder $r5;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        android.content.res.Resources $r8;
        java.util.List $r9;
        android.content.pm.PackageManager$NameNotFoundException $r10;
        int $i0;
        java.lang.Object $r11;
        java.lang.NumberFormatException $r12;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label01;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No authority: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label01:
        $r6 = $r0.<android.content.ContentResolver: android.content.Context mContext>;

     label02:
        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>($r3);

     label03:
        $r9 = virtualinvoke $r1.<android.net.Uri: java.util.List getPathSegments()>();

        if $r9 != null goto label05;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No path: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label04:
        $r10 := @caughtexception;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package found for authority: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label05:
        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 != 1 goto label09;

     label06:
        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r11;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label07:
        if $i0 != 0 goto label11;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No resource found for: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label08:
        $r12 := @caughtexception;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Single path segment is not a resource ID: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label09:
        if $i0 != 2 goto label10;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(1);

        $r13 = (java.lang.String) $r11;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (java.lang.String) $r11;

        $i0 = virtualinvoke $r8.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, $r3);

        goto label07;

     label10:
        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("More than two path segments: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label11:
        $r2 = new android.content.ContentResolver$OpenResourceIdResult;

        specialinvoke $r2.<android.content.ContentResolver$OpenResourceIdResult: void <init>(android.content.ContentResolver)>($r0);

        $r2.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r> = $r8;

        $r2.<android.content.ContentResolver$OpenResourceIdResult: int id> = $i0;

        return $r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label04;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
    }

    public final java.lang.String getType(android.net.Uri)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.content.IContentProvider $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.Exception $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<android.content.IContentProvider: java.lang.String getType(android.net.Uri)>($r1);

     label2:
        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r2);

        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r2);

        return null;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r2);

        return null;

     label5:
        $r6 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public final android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        android.os.RemoteException $r3;
        android.content.IContentProvider $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r4 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r1 = interfaceinvoke $r4.<android.content.IContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r1, $r2);

     label2:
        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r4);

        return $r1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r4);

        return null;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r4);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.database.ContentObserver $r2;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.database.ContentObserver;

        virtualinvoke $r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>($r1, $r2, 1);

        return;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver, boolean)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.database.ContentObserver $r2;
        boolean $z0, $z1;
        android.content.IContentService $r3;
        android.database.IContentObserver $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.database.ContentObserver;

        $z0 := @parameter2: boolean;

     label01:
        $r3 = staticinvoke <android.content.ContentServiceNative: android.content.IContentService getDefault()>();

        if $r2 != null goto label08;

     label02:
        $r4 = null;

     label03:
        if $r2 == null goto label10;

        $z1 = virtualinvoke $r2.<android.database.ContentObserver: boolean deliverSelfNotifications()>();

     label04:
        if $z1 == 0 goto label10;

     label05:
        $z1 = 1;

     label06:
        interfaceinvoke $r3.<android.content.IContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)>($r1, $r4, $z1, $z0);

     label07:
        return;

     label08:
        $r4 = virtualinvoke $r2.<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>();

     label09:
        goto label03;

     label10:
        $z1 = 0;

        goto label06;

     label11:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label07 with label11;
        catch android.os.RemoteException from label08 to label09 with label11;
    }

    public final android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;
        java.io.FileNotFoundException $r5;
        java.lang.StringBuilder $r6;
        android.content.ContentResolver$OpenResourceIdResult $r7;
        android.content.res.Resources $r8;
        int $i0;
        android.content.res.AssetFileDescriptor $r9, $r14;
        android.content.res.Resources$NotFoundException $r10;
        java.io.File $r11;
        android.os.ParcelFileDescriptor $r12;
        android.content.IContentProvider $r13;
        android.content.ContentResolver$ParcelFileDescriptorInner $r15;
        long $l1, $l2;
        android.os.RemoteException $r16;
        java.lang.RuntimeException $r17;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $r4 = "android.resource";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r3 = "r";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label01;

        $r5 = new java.io.FileNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t write resources: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label01:
        $r7 = virtualinvoke $r0.<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>($r1);

        $r8 = $r7.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r>;

        $i0 = $r7.<android.content.ContentResolver$OpenResourceIdResult: int id>;

     label02:
        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>($i0);

     label03:
        return $r9;

     label04:
        $r10 := @caughtexception;

        $r5 = new java.io.FileNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource does not exist: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label05:
        $r4 = "file";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label06;

        $r11 = new java.io.File;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r3);

        $i0 = staticinvoke <android.content.ContentResolver: int modeToMode(android.net.Uri,java.lang.String)>($r1, $r2);

        $r12 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r11, $i0);

        $r9 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r9.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>($r12, 0L, -1L);

        return $r9;

     label06:
        $r13 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r13 != null goto label07;

        $r5 = new java.io.FileNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label07:
        $r14 = interfaceinvoke $r13.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>($r1, $r2);

        if $r14 != null goto label09;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r13);

     label08:
        return null;

     label09:
        $r15 = new android.content.ContentResolver$ParcelFileDescriptorInner;

        $r12 = virtualinvoke $r14.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        specialinvoke $r15.<android.content.ContentResolver$ParcelFileDescriptorInner: void <init>(android.content.ContentResolver,android.os.ParcelFileDescriptor,android.content.IContentProvider)>($r0, $r12, $r13);

        $r9 = new android.content.res.AssetFileDescriptor;

        $l1 = virtualinvoke $r14.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l2 = virtualinvoke $r14.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        specialinvoke $r9.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>($r15, $l1, $l2);

     label10:
        return $r9;

     label11:
        $r16 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r13);

        $r5 = new java.io.FileNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dead content provider: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label12:
        $r5 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r13);

        throw $r5;

     label13:
        $r17 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r13);

        throw $r17;

        catch android.content.res.Resources$NotFoundException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label12;
        catch java.io.FileNotFoundException from label09 to label10 with label12;
        catch java.lang.RuntimeException from label07 to label08 with label13;
        catch java.lang.RuntimeException from label09 to label10 with label13;
    }

    public final android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        android.content.res.AssetFileDescriptor $r3;
        long $l0;
        byte $b1;
        android.os.ParcelFileDescriptor $r4;
        java.io.FileNotFoundException $r5;
        java.io.IOException $r6;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>($r1, $r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $l0 = virtualinvoke $r3.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label2;

        $r4 = virtualinvoke $r3.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        return $r4;

     label2:
        virtualinvoke $r3.<android.content.res.AssetFileDescriptor: void close()>();

     label3:
        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Not a whole file");

        throw $r5;

     label4:
        $r6 := @caughtexception;

        goto label3;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public final java.io.InputStream openInputStream(android.net.Uri) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.io.IOException $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        android.content.ContentResolver$OpenResourceIdResult $r5;
        android.content.res.Resources $r6;
        int $i0;
        java.io.InputStream $r7;
        java.io.FileInputStream $r8;
        android.content.res.Resources$NotFoundException $r9;
        java.io.FileNotFoundException $r10;
        java.lang.StringBuilder $r11;
        android.content.res.AssetFileDescriptor $r12;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $r4 = "android.resource";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r0.<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>($r1);

        $r6 = $r5.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r>;

        $i0 = $r5.<android.content.ContentResolver$OpenResourceIdResult: int id>;

     label1:
        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label2:
        return $r7;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.io.FileNotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource does not exist: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r10;

     label4:
        $r4 = "file";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r8 = new java.io.FileInputStream;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.lang.String)>($r3);

        return $r8;

     label5:
        $r12 = virtualinvoke $r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>($r1, "r");

        if $r12 == null goto label8;

     label6:
        $r8 = virtualinvoke $r12.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

     label7:
        return $r8;

     label8:
        return null;

     label9:
        $r2 := @caughtexception;

        $r10 = new java.io.FileNotFoundException;

        specialinvoke $r10.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Unable to create stream");

        throw $r10;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label9;
    }

    public final java.io.OutputStream openOutputStream(android.net.Uri) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.io.OutputStream $r2;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r0.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>($r1, "w");

        return $r2;
    }

    public final java.io.OutputStream openOutputStream(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.io.IOException $r3;
        android.content.res.AssetFileDescriptor $r4;
        java.io.FileOutputStream $r5;
        java.io.FileNotFoundException $r6;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke $r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>($r1, $r2);

        if $r4 == null goto label3;

     label1:
        $r5 = virtualinvoke $r4.<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>();

     label2:
        return $r5;

     label3:
        return null;

     label4:
        $r3 := @caughtexception;

        $r6 = new java.io.FileNotFoundException;

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Unable to create stream");

        throw $r6;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        android.content.IContentProvider $r6;
        android.content.ContentResolver$CursorWrapperInner $r7;
        android.database.Cursor $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r6 != null goto label1;

        return null;

     label1:
        $r8 = interfaceinvoke $r6.<android.content.IContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        if $r8 != null goto label3;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r6);

     label2:
        return null;

     label3:
        $r7 = new android.content.ContentResolver$CursorWrapperInner;

        specialinvoke $r7.<android.content.ContentResolver$CursorWrapperInner: void <init>(android.content.ContentResolver,android.database.Cursor,android.content.IContentProvider)>($r0, $r8, $r6);

     label4:
        return $r7;

     label5:
        $r9 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r6);

        return null;

     label6:
        $r10 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r6);

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label1 to label2 with label6;
        catch java.lang.RuntimeException from label3 to label4 with label6;
    }

    public final void registerContentObserver(android.net.Uri, boolean, android.database.ContentObserver)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        boolean $z0;
        android.database.ContentObserver $r2;
        android.content.IContentService $r3;
        android.database.IContentObserver $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: android.database.ContentObserver;

     label1:
        $r3 = staticinvoke <android.content.ContentServiceNative: android.content.IContentService getDefault()>();

        $r4 = virtualinvoke $r2.<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>();

        interfaceinvoke $r3.<android.content.IContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver)>($r1, $z0, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract boolean releaseProvider(android.content.IContentProvider);

    public void startSync(android.net.Uri, android.os.Bundle)
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.os.Bundle $r2;
        android.content.IContentService $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.os.Bundle;

        staticinvoke <android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>($r2);

     label1:
        $r3 = staticinvoke <android.content.ContentServiceNative: android.content.IContentService getDefault()>();

        interfaceinvoke $r3.<android.content.IContentService: void startSync(android.net.Uri,android.os.Bundle)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void unregisterContentObserver(android.database.ContentObserver)
    {
        android.content.ContentResolver $r0;
        android.database.ContentObserver $r1;
        android.database.IContentObserver $r2;
        android.content.IContentService $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.database.ContentObserver;

     label1:
        $r2 = virtualinvoke $r1.<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>();

        if $r2 == null goto label4;

        $r3 = staticinvoke <android.content.ContentServiceNative: android.content.IContentService getDefault()>();

        interfaceinvoke $r3.<android.content.IContentService: void unregisterContentObserver(android.database.IContentObserver)>($r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.content.ContentResolver $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        android.os.RemoteException $r5;
        android.content.IContentProvider $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        int $i0;
        java.lang.Throwable $r9;

        $r0 := @this: android.content.ContentResolver;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r6 = virtualinvoke $r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>($r1);

        if $r6 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r7;

     label1:
        $i0 = interfaceinvoke $r6.<android.content.IContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r1, $r2, $r3, $r4);

     label2:
        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r6);

        return $i0;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r6);

        return -1;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r6);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <android.content.ContentResolver: java.lang.String TAG> = "ContentResolver";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_UPLOAD> = "upload";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS> = "deletions_override";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_FORCE> = "force";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_EXPEDITED> = "expedited";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS> = "discard_deletions";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_ACCOUNT> = "account";

        <android.content.ContentResolver: java.lang.String SCHEME_FILE> = "file";

        <android.content.ContentResolver: java.lang.String SCHEME_CONTENT> = "content";

        <android.content.ContentResolver: java.lang.String SCHEME_ANDROID_RESOURCE> = "android.resource";

        <android.content.ContentResolver: java.lang.String CURSOR_ITEM_BASE_TYPE> = "vnd.android.cursor.item";

        <android.content.ContentResolver: java.lang.String CURSOR_DIR_BASE_TYPE> = "vnd.android.cursor.dir";

        return;
    }
}
