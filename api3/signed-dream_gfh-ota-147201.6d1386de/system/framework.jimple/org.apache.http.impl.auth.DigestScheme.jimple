public class org.apache.http.impl.auth.DigestScheme extends org.apache.http.impl.auth.RFC2617Scheme
{
    private static final char[] HEXADECIMAL;
    private static final java.lang.String NC;
    private static final int QOP_AUTH;
    private static final int QOP_AUTH_INT;
    private static final int QOP_MISSING;
    private java.lang.String cnonce;
    private boolean complete;
    private int qopVariant;

    static void <clinit>()
    {
        char[] $r0;

        <org.apache.http.impl.auth.DigestScheme: int QOP_AUTH_INT> = 1;

        <org.apache.http.impl.auth.DigestScheme: int QOP_AUTH> = 2;

        <org.apache.http.impl.auth.DigestScheme: java.lang.String NC> = "00000001";

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.auth.DigestScheme $r0;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        specialinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: void <init>()>();

        $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 0;

        $r0.<org.apache.http.impl.auth.DigestScheme: boolean complete> = 0;

        return;
    }

    public static java.lang.String createCnonce()
    {
        java.security.MessageDigest $r0;
        long $l0;
        java.lang.String $r1;
        byte[] $r2;

        $r0 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>($r1);

        $r2 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        $r1 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r2);

        return $r1;
    }

    private java.lang.String createDigest(org.apache.http.auth.Credentials) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        org.apache.http.auth.Credentials $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r14;
        java.lang.IllegalStateException $r9;
        int $i0, $i1;
        org.apache.http.auth.AuthenticationException $r11;
        java.security.MessageDigest $r12;
        java.security.Principal $r13;
        boolean $z0;
        byte[] $r15;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 := @parameter0: org.apache.http.auth.Credentials;

        $r3 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("uri");

        $r4 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("realm");

        $r5 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("nonce");

        $r6 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("methodname");

        $r7 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        $r8 = $r7;

        if $r3 != null goto label01;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("URI may not be null");

        throw $r9;

     label01:
        if $r4 != null goto label02;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Realm may not be null");

        throw $r9;

     label02:
        if $r5 != null goto label03;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nonce may not be null");

        throw $r9;

     label03:
        if $r7 != null goto label04;

        $r8 = "MD5";

     label04:
        $r10 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("charset");

        $r7 = $r10;

        if $r10 != null goto label05;

        $r7 = "ISO-8859-1";

     label05:
        $i0 = $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label06;

        $r11 = new org.apache.http.auth.AuthenticationException;

        specialinvoke $r11.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported qop in HTTP Digest authentication");

        throw $r11;

     label06:
        $r12 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>("MD5");

        $r13 = interfaceinvoke $r1.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        $r10 = interfaceinvoke $r13.<java.security.Principal: java.lang.String getName()>();

        $r14 = interfaceinvoke $r1.<org.apache.http.auth.Credentials: java.lang.String getPassword()>();

        $r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r14.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = $r4;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("MD5-sess");

        if $z0 == 0 goto label10;

        $r8 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        $r15 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>($r4, $r7);

        $r15 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r15);

        $r4 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r15);

        $r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r15 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>($r10, $r7);

        $r15 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r15);

        $r7 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r15);

        $r8 = null;

        $i0 = $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label11;

     label08:
        $r15 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>($r8);

        $r15 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r15);

        $r3 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r15);

        $i0 = $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 0 goto label12;

        $r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r15 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>($r5);

        $r15 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r15);

        $r5 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r15);

        return $r5;

     label10:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("MD5");

        if $z0 != 0 goto label07;

        $r11 = new org.apache.http.auth.AuthenticationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled algorithm ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r5);

        throw $r11;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label12:
        $r6 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>();

        $r8 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        $r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r4 = "00000001";

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 5;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00000001");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;
    }

    private org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials, java.lang.String) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        org.apache.http.auth.Credentials $r1;
        java.lang.String $r2, $r5, $r6, $r7, $r8, $r9, $r11;
        org.apache.http.util.CharArrayBuffer $r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.security.Principal $r10;
        org.apache.http.message.BasicNameValuePair $r12;
        int $i0, $i1;
        java.lang.Object $r13;
        org.apache.http.message.BasicHeaderValueFormatter $r14;
        org.apache.http.message.BufferedHeader $r15;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 := @parameter0: org.apache.http.auth.Credentials;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r3.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        $z0 = virtualinvoke $r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean isProxy()>();

        if $z0 == 0 goto label10;

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

     label01:
        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": Digest ");

        $r5 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("uri");

        $r6 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("realm");

        $r7 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("nonce");

        $r8 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("opaque");

        $r9 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        $r10 = interfaceinvoke $r1.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        $r11 = interfaceinvoke $r10.<java.security.Principal: java.lang.String getName()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(20);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("username", $r11);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("realm", $r6);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("nonce", $r7);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("uri", $r5);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("response", $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $i0 = $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 == 0 goto label02;

        $r12 = new org.apache.http.message.BasicNameValuePair;

        $r2 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>();

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("qop", $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("nc", "00000001");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        $r2 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("cnonce", $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

     label02:
        if $r9 == null goto label03;

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("algorithm", $r9);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

     label03:
        if $r8 == null goto label04;

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("opaque", $r8);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

     label04:
        $i0 = 0;

     label05:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 >= $i1 goto label13;

        $r13 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r12 = (org.apache.http.message.BasicNameValuePair) $r13;

        if $i0 <= 0 goto label06;

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(", ");

     label06:
        $r2 = "nc";

        $r8 = virtualinvoke $r12.<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label07;

        $r2 = "qop";

        $r8 = virtualinvoke $r12.<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label11;

     label07:
        $z0 = 1;

     label08:
        $r14 = <org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.message.BasicHeaderValueFormatter DEFAULT>;

        if $z0 != 0 goto label12;

        $z0 = 1;

     label09:
        virtualinvoke $r14.<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean)>($r3, $r12, $z0);

        $i0 = $i0 + 1;

        goto label05;

     label10:
        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

        goto label01;

     label11:
        $z0 = 0;

        goto label08;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $r15 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r15.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r3);

        return $r15;
    }

    private static java.security.MessageDigest createMessageDigest(java.lang.String) throws org.apache.http.impl.auth.UnsupportedDigestAlgorithmException
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        java.security.MessageDigest $r2;
        org.apache.http.impl.auth.UnsupportedDigestAlgorithmException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3 = new org.apache.http.impl.auth.UnsupportedDigestAlgorithmException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String encode(byte[])
    {
        byte[] $r0;
        char[] $r1, $r3;
        short $s0;
        byte $b1, $b3;
        int $i2, $i4;
        java.lang.String $r2;
        char $c5;

        $r0 := @parameter0: byte[];

        $i2 = lengthof $r0;

        if $i2 == 16 goto label1;

        return null;

     label1:
        $r1 = newarray (char)[32];

        $i2 = 0;

     label2:
        if $i2 >= 16 goto label3;

        $b1 = $r0[$i2];

        $b1 = $b1 & 15;

        $b3 = $r0[$i2];

        $s0 = $b3 & 240;

        $s0 = $s0 >> 4;

        $i4 = $i2 * 2;

        $r3 = <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL>;

        $c5 = $r3[$s0];

        $r1[$i4] = $c5;

        $i4 = $i2 * 2;

        $i4 = $i4 + 1;

        $r3 = <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL>;

        $c5 = $r3[$b1];

        $r1[$i4] = $c5;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }

    private java.lang.String getCnonce()
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 = $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>();

        $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce> = $r1;

     label1:
        $r1 = $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce>;

        return $r1;
    }

    private java.lang.String getQopVariantString()
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        int $i0;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $i0 = $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label1;

        return "auth-int";

     label1:
        return "auth";
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        org.apache.http.auth.Credentials $r1;
        org.apache.http.HttpRequest $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Map $r4;
        org.apache.http.RequestLine $r5;
        java.lang.String $r6;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.Header $r8;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 := @parameter0: org.apache.http.auth.Credentials;

        $r2 := @parameter1: org.apache.http.HttpRequest;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>();

        $r5 = interfaceinvoke $r2.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", $r6);

        $r4 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>();

        $r5 = interfaceinvoke $r2.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.RequestLine: java.lang.String getUri()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", $r6);

        $r6 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("charset");

        if $r6 != null goto label3;

        $r7 = interfaceinvoke $r2.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        $r6 = staticinvoke <org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>($r7);

        $r4 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charset", $r6);

     label3:
        $r6 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>($r1);

        $r8 = specialinvoke $r0.<org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,java.lang.String)>($r1, $r6);

        return $r8;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.DigestScheme $r0;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        return "digest";
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("stale");

        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = $r0.<org.apache.http.impl.auth.DigestScheme: boolean complete>;

        return $z0;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.DigestScheme $r0;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        return 0;
    }

    public void overrideParamter(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        java.lang.String $r1, $r2;
        java.util.Map $r3;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void processChallenge(org.apache.http.Header) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.DigestScheme $r0;
        org.apache.http.Header $r1;
        java.util.StringTokenizer $r2;
        java.lang.String $r3;
        org.apache.http.auth.MalformedChallengeException $r4;
        boolean $z0, $z1;
        int $i0;

        $r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 := @parameter0: org.apache.http.Header;

        specialinvoke $r0.<org.apache.http.impl.auth.AuthSchemeBase: void processChallenge(org.apache.http.Header)>($r1);

        $r3 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("realm");

        if $r3 != null goto label1;

        $r4 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r4.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing realm in challange");

        throw $r4;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r3 != null goto label2;

        $r4 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r4.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing nonce in challange");

        throw $r4;

     label2:
        $z0 = 0;

        $r3 = virtualinvoke $r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("qop");

        if $r3 == null goto label4;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r3, ",");

     label3:
        $z1 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label4;

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("auth");

        if $z1 == 0 goto label5;

        $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 2;

     label4:
        if $z0 == 0 goto label7;

        $i0 = $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 0 goto label7;

        $r4 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r4.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("None of the qop methods is supported");

        throw $r4;

     label5:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("auth-int");

        if $z1 == 0 goto label6;

        $r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 1;

        goto label3;

     label6:
        $z0 = 1;

        goto label3;

     label7:
        $r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce> = null;

        $r0.<org.apache.http.impl.auth.DigestScheme: boolean complete> = 1;

        return;
    }
}
