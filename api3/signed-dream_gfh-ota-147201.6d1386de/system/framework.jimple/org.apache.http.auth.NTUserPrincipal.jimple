public class org.apache.http.auth.NTUserPrincipal extends java.lang.Object implements java.security.Principal
{
    private final java.lang.String domain;
    private final java.lang.String ntname;
    private final java.lang.String username;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.http.auth.NTUserPrincipal $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r4;
        java.util.Locale $r5;
        int $i0;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("User name may not be null");

        throw $r4;

     label1:
        $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username> = $r2;

        if $r1 == null goto label3;

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain> = $r1;

     label2:
        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        if $r1 == null goto label4;

        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname> = $r1;

        return;

     label3:
        $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain> = null;

        goto label2;

     label4:
        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname> = $r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.auth.NTUserPrincipal $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        if $r0 != $r1 goto label2;

        return 1;

     label2:
        $z0 = $r1 instanceof org.apache.http.auth.NTUserPrincipal;

        if $z0 == 0 goto label3;

        $r2 = (org.apache.http.auth.NTUserPrincipal) $r1;

        $r3 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $r4 = $r2.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $z0 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label3;

        $r3 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $r4 = $r2.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $z0 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.String getDomain()
    {
        org.apache.http.auth.NTUserPrincipal $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        return r1;
    }

    public java.lang.String getName()
    {
        org.apache.http.auth.NTUserPrincipal $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname>;

        return r1;
    }

    public java.lang.String getUsername()
    {
        org.apache.http.auth.NTUserPrincipal $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        return r1;
    }

    public int hashCode()
    {
        org.apache.http.auth.NTUserPrincipal $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.http.auth.NTUserPrincipal $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.auth.NTUserPrincipal;

        r1 = $r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname>;

        return r1;
    }
}
