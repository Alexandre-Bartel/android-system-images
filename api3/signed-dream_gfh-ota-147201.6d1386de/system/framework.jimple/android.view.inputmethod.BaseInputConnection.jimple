public class android.view.inputmethod.BaseInputConnection extends java.lang.Object implements android.view.inputmethod.InputConnection
{
    static final java.lang.Object COMPOSING;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private java.lang.Object[] mDefaultComposingSpans;
    final boolean mDummyMode;
    android.text.Editable mEditable;
    final android.view.inputmethod.InputMethodManager mIMM;
    android.view.KeyCharacterMap mKeyCharacterMap;
    final android.view.View mTargetView;

    static void <clinit>()
    {
        android.view.inputmethod.ComposingText $r0;

        <android.view.inputmethod.BaseInputConnection: java.lang.String TAG> = "BaseInputConnection";

        <android.view.inputmethod.BaseInputConnection: boolean DEBUG> = 0;

        $r0 = new android.view.inputmethod.ComposingText;

        specialinvoke $r0.<android.view.inputmethod.ComposingText: void <init>()>();

        <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING> = $r0;

        return;
    }

    public void <init>(android.view.View, boolean)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.view.View $r1;
        boolean $z0;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM> = $r4;

        $r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView> = $r1;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    void <init>(android.view.inputmethod.InputMethodManager, boolean)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.view.inputmethod.InputMethodManager $r1;
        boolean $z0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: android.view.inputmethod.InputMethodManager;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM> = $r1;

        $r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView> = null;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public static int getComposingSpanEnd(android.text.Spannable)
    {
        android.text.Spannable $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke $r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r1);

        return $i0;
    }

    public static int getComposingSpanStart(android.text.Spannable)
    {
        android.text.Spannable $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke $r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r1);

        return $i0;
    }

    public static final void removeComposingSpans(android.text.Spannable)
    {
        android.text.Spannable $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke $r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r1);

        $i0 = interfaceinvoke $r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke $r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "java/lang/Object");

        if $r2 == null goto label3;

        $i0 = lengthof $r2;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label4;

        $r1 = $r2[$i0];

        $i1 = interfaceinvoke $r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>($r1);

        $i1 = $i1 & 256;

        if $i1 == 0 goto label2;

        interfaceinvoke $r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r1);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    private void replaceText(java.lang.CharSequence, int, boolean)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        boolean $z0;
        java.lang.CharSequence $r1, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Editable $r2;
        android.text.Spannable $r3;
        java.lang.Object[] $r4;
        android.view.View $r5;
        android.content.Context $r6;
        android.content.res.Resources$Theme $r7;
        int[] $r8;
        android.content.res.TypedArray $r9;
        android.text.Spanned $r11;
        java.lang.Object $r12;
        android.view.inputmethod.InputMethodManager $r13;
        android.text.SpannableStringBuilder r14;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r2 != null goto label01;

        return;

     label01:
        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        $i1 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>($r2);

        $i2 = $i1;

        $i3 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>($r2);

        $i4 = $i3;

        if $i3 >= $i1 goto label02;

        $i2 = $i3;

        $i4 = $i1;

     label02:
        if $i2 == -1 goto label07;

        if $i4 == -1 goto label07;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>($r2);

     label03:
        if $z0 == 0 goto label12;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label10;

        r14 = new android.text.SpannableStringBuilder;

        $r3 = r14;

        specialinvoke r14.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r1);

        $r1 = $r3;

        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r4 != null goto label05;

        $r5 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        if $r5 == null goto label08;

        $r5 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

     label04:
        if $r6 == null goto label05;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r8 = newarray (int)[1];

        $r8[0] = 16843312;

        $r9 = virtualinvoke $r7.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r8);

        $r10 = virtualinvoke $r9.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        if $r10 == null goto label05;

        $z0 = $r10 instanceof android.text.Spanned;

        if $z0 == 0 goto label05;

        $r11 = (android.text.Spanned) $r10;

        $i1 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        $r4 = interfaceinvoke $r11.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "java/lang/Object");

        $r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans> = $r4;

     label05:
        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r4 == null goto label11;

        $i1 = 0;

     label06:
        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $i3 = lengthof $r4;

        if $i1 >= $i3 goto label11;

        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $r12 = $r4[$i1];

        $i3 = interfaceinvoke $r3.<android.text.Spannable: int length()>();

        interfaceinvoke $r3.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r12, 0, $i3, 33);

        $i1 = $i1 + 1;

        goto label06;

     label07:
        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        $i2 = $i1;

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        $i4 = $i3;

        if $i1 < 0 goto label03;

        if $i3 < 0 goto label03;

        if $i1 == $i3 goto label03;

        if $i3 >= $i1 goto label03;

        $i2 = $i3;

        $i4 = $i1;

        goto label03;

     label08:
        $r13 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r5 = $r13.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == null goto label09;

        $r13 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r5 = $r13.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

        goto label04;

     label09:
        $r6 = null;

        goto label04;

     label10:
        $r3 = (android.text.Spannable) $r1;

     label11:
        staticinvoke <android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>($r3);

     label12:
        if $i0 <= 0 goto label16;

        $i1 = $i4 - 1;

        $i0 = $i0 + $i1;

     label13:
        if $i0 >= 0 goto label14;

        $i0 = 0;

     label14:
        $i1 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        if $i0 <= $i1 goto label15;

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

     label15:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r2, $i0);

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i2, $i4, $r1);

        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return;

     label16:
        $i0 = $i0 + $i2;

        goto label13;
    }

    private void sendCurrentText()
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.view.KeyEvent $r1;
        char[] $r2;
        boolean $z0;
        android.text.Editable $r3;
        int $i0, $i1;
        android.view.KeyCharacterMap $r4;
        android.view.KeyEvent[] $r5;
        long $l2;
        java.lang.String $r6;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $z0 = $r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r3 == null goto label6;

        $i0 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        if $i0 == 0 goto label7;

        if $i0 != 1 goto label5;

        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap>;

        if $r4 != null goto label2;

        $r4 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(0);

        $r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap> = $r4;

     label2:
        $r2 = newarray (char)[1];

        interfaceinvoke $r3.<android.text.Editable: void getChars(int,int,char[],int)>(0, 1, $r2, 0);

        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap>;

        $r5 = virtualinvoke $r4.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r2);

        if $r5 == null goto label5;

        $i0 = 0;

     label3:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label4;

        $r1 = $r5[$i0];

        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r1);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        interfaceinvoke $r3.<android.text.Editable: void clear()>();

        return;

     label5:
        $r1 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>($l2, $r6, 0, 0);

        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r1);

        interfaceinvoke $r3.<android.text.Editable: void clear()>();

        return;

     label6:
        return;

     label7:
        return;
    }

    public static void setComposingSpans(android.text.Spannable)
    {
        android.text.Spannable $r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2;

        $r0 := @parameter0: android.text.Spannable;

        $i0 = interfaceinvoke $r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke $r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "java/lang/Object");

        if $r2 == null goto label4;

        $i0 = lengthof $r2;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label4;

        $r1 = $r2[$i0];

        $r3 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        if $r1 != $r3 goto label3;

        interfaceinvoke $r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r1);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>($r1);

        $i2 = $i1 & 307;

        if $i2 == 289 goto label2;

        $i2 = interfaceinvoke $r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r1);

        $i3 = interfaceinvoke $r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r1);

        $i1 = $i1 & 51;

        $i1 = $i1 | 256;

        $i1 = $i1 | 33;

        interfaceinvoke $r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r1, $i2, $i3, $i1);

        goto label2;

     label4:
        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke $r0.<android.text.Spannable: int length()>();

        interfaceinvoke $r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r1, 0, $i0, 289);

        return;
    }

    public boolean beginBatchEdit()
    {
        android.view.inputmethod.BaseInputConnection $r0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        return 0;
    }

    public boolean clearMetaKeyStates(int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0;
        android.text.Editable $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        staticinvoke <android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>($r1, $i0);

        return 1;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.view.inputmethod.CompletionInfo $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return 0;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>($r1, $i0, 0);

        specialinvoke $r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        return 1;
    }

    public boolean deleteSurroundingText(int, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.text.Editable $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        $i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        $i3 = $i2;

        $i4 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        $i5 = $i4;

        if $i2 <= $i4 goto label2;

        $i3 = $i4;

        $i5 = $i2;

     label2:
        $i2 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>($r1);

        $i4 = $i2;

        $i6 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>($r1);

        $i7 = $i6;

        if $i6 >= $i2 goto label3;

        $i4 = $i6;

        $i7 = $i2;

     label3:
        if $i4 == -1 goto label5;

        if $i7 == -1 goto label5;

        if $i4 >= $i3 goto label4;

        $i3 = $i4;

     label4:
        if $i7 <= $i5 goto label5;

        $i5 = $i7;

     label5:
        $i2 = 0;

        if $i0 <= 0 goto label7;

        $i0 = $i3 - $i0;

        if $i0 >= 0 goto label6;

        $i0 = 0;

     label6:
        interfaceinvoke $r1.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i3);

        $i2 = $i3 - $i0;

     label7:
        if $i1 <= 0 goto label9;

        $i0 = $i5 - $i2;

        $i1 = $i0 + $i1;

        $i3 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        if $i1 <= $i3 goto label8;

        $i1 = interfaceinvoke $r1.<android.text.Editable: int length()>();

     label8:
        interfaceinvoke $r1.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i1);

     label9:
        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return 1;
    }

    public boolean endBatchEdit()
    {
        android.view.inputmethod.BaseInputConnection $r0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        return 0;
    }

    public boolean finishComposingText()
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.text.Editable $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 == null goto label1;

        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>($r1);

        virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        specialinvoke $r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

     label1:
        return 1;
    }

    public int getCursorCapsMode(int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.text.Editable $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i0 := @parameter0: int;

        $z0 = $r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 != null goto label2;

        return 0;

     label2:
        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        $i2 = $i1;

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        if $i1 <= $i3 goto label3;

        $i2 = $i3;

     label3:
        $i0 = staticinvoke <android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>($r1, $i2, $i0);

        return $i0;
    }

    public android.text.Editable getEditable()
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.text.Editable $r1;
        android.text.Editable$Factory $r2;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 = $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        $r1 = virtualinvoke $r2.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>("");

        $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable> = $r1;

        $r1 = $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r1, 0);

     label1:
        $r1 = $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        return $r1;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        int $i0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $i0 := @parameter1: int;

        return null;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Editable $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        $i4 = $i3;

        if $i2 <= $i3 goto label2;

        $i4 = $i2;

     label2:
        $i2 = $i4 + $i1;

        $i3 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        if $i2 <= $i3 goto label3;

        $i1 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        $i1 = $i1 - $i4;

     label3:
        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        $i1 = $i4 + $i1;

        $r2 = interfaceinvoke $r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>($i4, $i1);

        return $r2;

     label4:
        $i1 = $i4 + $i1;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r1, $i4, $i1);

        return $r3;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Editable $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        $i3 = $i2;

        $i4 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        if $i2 <= $i4 goto label2;

        $i3 = $i4;

     label2:
        if $i1 <= $i3 goto label3;

        $i1 = $i3;

     label3:
        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        $i1 = $i3 - $i1;

        $r2 = interfaceinvoke $r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>($i1, $i3);

        return $r2;

     label4:
        $i1 = $i3 - $i1;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r1, $i1, $i3);

        return $r3;
    }

    public boolean performContextMenuAction(int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean performEditorAction(int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public boolean reportFullscreenMode(boolean)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        boolean $z0;
        android.view.inputmethod.InputMethodManager $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        virtualinvoke $r1.<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)>($z0);

        return 1;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        android.view.KeyEvent $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.view.inputmethod.InputMethodManager$H $r3;
        android.view.View $r4;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r3 = $r2.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        if $r4 == null goto label6;

        $r4 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.os.Handler getHandler()>();

     label2:
        if $r5 != null goto label3;

        $r2 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r4 = $r2.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == null goto label3;

        $r2 = $r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r4 = $r2.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.os.Handler getHandler()>();

     label3:
        if $r5 == null goto label4;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1011, $r1);

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

     label4:
        exitmonitor $r3;

     label5:
        return 0;

     label6:
        $r5 = null;

        goto label2;

     label7:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label5 with label7;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        java.lang.CharSequence $r1;
        int $i0;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>($r1, $i0, 1);

        return 1;
    }

    public boolean setSelection(int, int)
    {
        android.view.inputmethod.BaseInputConnection $r0;
        int $i0, $i1, $i2;
        android.text.Editable $r1;

        $r0 := @this: android.view.inputmethod.BaseInputConnection;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $i2 = interfaceinvoke $r1.<android.text.Editable: int length()>();

        if $i0 > $i2 goto label2;

        if $i1 <= $i2 goto label3;

     label2:
        return 1;

     label3:
        if $i0 != $i1 goto label5;

        $i2 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>($r1, 65536);

        if $i2 == 0 goto label5;

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>($r1, $i0);

     label4:
        return 1;

     label5:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r1, $i0, $i1);

        goto label4;
    }
}
