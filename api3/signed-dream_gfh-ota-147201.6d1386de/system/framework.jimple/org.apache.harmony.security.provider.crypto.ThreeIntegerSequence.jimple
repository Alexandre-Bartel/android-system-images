class org.apache.harmony.security.provider.crypto.ThreeIntegerSequence extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    private byte[] encoding;
    byte[] g;
    byte[] p;
    byte[] q;

    static void <clinit>()
    {
        org.apache.harmony.security.provider.crypto.ThreeIntegerSequence$1 $r0;
        org.apache.harmony.security.asn1.ASN1Type[] $r1;
        org.apache.harmony.security.asn1.ASN1Integer $r2;

        $r0 = new org.apache.harmony.security.provider.crypto.ThreeIntegerSequence$1;

        $r1 = newarray (org.apache.harmony.security.asn1.ASN1Type)[3];

        $r2 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        $r1[2] = $r2;

        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r1);

        <org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r0;

        return;
    }

    void <init>(byte[], byte[], byte[])
    {
        org.apache.harmony.security.provider.crypto.ThreeIntegerSequence $r0;
        byte[] $r1, $r2, $r3;

        $r0 := @this: org.apache.harmony.security.provider.crypto.ThreeIntegerSequence;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] p> = $r1;

        $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] q> = $r2;

        $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] g> = $r3;

        $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding> = null;

        return;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.provider.crypto.ThreeIntegerSequence $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Sequence $r2;

        $r0 := @this: org.apache.harmony.security.provider.crypto.ThreeIntegerSequence;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r0);

        $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding>;

        return $r1;
    }
}
