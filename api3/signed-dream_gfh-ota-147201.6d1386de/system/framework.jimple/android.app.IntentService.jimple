public abstract class android.app.IntentService extends android.app.Service
{
    private java.lang.String mName;
    private volatile android.app.IntentService$ServiceHandler mServiceHandler;
    private volatile android.os.Looper mServiceLooper;

    public void <init>(java.lang.String)
    {
        android.app.IntentService $r0;
        java.lang.String $r1;

        $r0 := @this: android.app.IntentService;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<android.app.Service: void <init>()>();

        $r0.<android.app.IntentService: java.lang.String mName> = $r1;

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.app.IntentService $r0;
        android.content.Intent $r1;

        $r0 := @this: android.app.IntentService;

        $r1 := @parameter0: android.content.Intent;

        return null;
    }

    public void onCreate()
    {
        android.app.IntentService $r0;
        android.os.HandlerThread $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.os.Looper $r4;
        android.app.IntentService$ServiceHandler $r5;

        $r0 := @this: android.app.IntentService;

        specialinvoke $r0.<android.app.Service: void onCreate()>();

        $r1 = new android.os.HandlerThread;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IntentService[");

        $r3 = $r0.<android.app.IntentService: java.lang.String mName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.os.HandlerThread: void <init>(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        $r4 = virtualinvoke $r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r0.<android.app.IntentService: android.os.Looper mServiceLooper> = $r4;

        $r5 = new android.app.IntentService$ServiceHandler;

        $r4 = $r0.<android.app.IntentService: android.os.Looper mServiceLooper>;

        specialinvoke $r5.<android.app.IntentService$ServiceHandler: void <init>(android.app.IntentService,android.os.Looper)>($r0, $r4);

        $r0.<android.app.IntentService: android.app.IntentService$ServiceHandler mServiceHandler> = $r5;

        return;
    }

    public void onDestroy()
    {
        android.app.IntentService $r0;
        android.os.Looper $r1;

        $r0 := @this: android.app.IntentService;

        $r1 = $r0.<android.app.IntentService: android.os.Looper mServiceLooper>;

        virtualinvoke $r1.<android.os.Looper: void quit()>();

        return;
    }

    protected abstract void onHandleIntent(android.content.Intent);

    public void onStart(android.content.Intent, int)
    {
        android.app.IntentService $r0;
        android.content.Intent $r1;
        int $i0;
        android.os.Message $r2;
        android.app.IntentService$ServiceHandler $r3;

        $r0 := @this: android.app.IntentService;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.app.Service: void onStart(android.content.Intent,int)>($r1, $i0);

        $r3 = $r0.<android.app.IntentService: android.app.IntentService$ServiceHandler mServiceHandler>;

        $r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage()>();

        $r2.<android.os.Message: int arg1> = $i0;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $r3 = $r0.<android.app.IntentService: android.app.IntentService$ServiceHandler mServiceHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }
}
