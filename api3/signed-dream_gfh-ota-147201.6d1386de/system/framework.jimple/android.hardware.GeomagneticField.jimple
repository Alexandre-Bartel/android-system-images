public class android.hardware.GeomagneticField extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final long BASE_TIME;
    private static final float[][] DELTA_G;
    private static final float[][] DELTA_H;
    private static final float EARTH_REFERENCE_RADIUS_KM;
    private static final float EARTH_SEMI_MAJOR_AXIS_KM;
    private static final float EARTH_SEMI_MINOR_AXIS_KM;
    private static final float[][] G_COEFF;
    private static final float[][] H_COEFF;
    private static final float[][] SCHMIDT_QUASI_NORM_FACTORS;
    private float mGcLatitudeRad;
    private float mGcLongitudeRad;
    private float mGcRadiusKm;
    private float mX;
    private float mY;
    private float mZ;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        float[][] $r1;
        float[] $r2;
        long $l0;
        int $i1;
        java.util.GregorianCalendar r4;
        float f0;

        <android.hardware.GeomagneticField: float EARTH_SEMI_MINOR_AXIS_KM> = 6356.7524F;

        <android.hardware.GeomagneticField: float EARTH_SEMI_MAJOR_AXIS_KM> = 6378.137F;

        <android.hardware.GeomagneticField: float EARTH_REFERENCE_RADIUS_KM> = 6371.2F;

        $r0 = class "android/hardware/GeomagneticField";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <android.hardware.GeomagneticField: boolean $assertionsDisabled> = $z0;

        $r1 = newarray (float[])[13];

        $r2 = newarray (float)[1];

        f0 = 0.0F;

        $r2[0] = f0;

        $r1[0] = $r2;

        $r2 = newarray (float)[2];

        $r2[0] = -29556.8F;

        $r2[1] = -1671.7F;

        $r1[1] = $r2;

        $r2 = newarray (float)[3];

        $r2[0] = -2340.6F;

        $r2[1] = 3046.9F;

        $r2[2] = 1657.0F;

        $r1[2] = $r2;

        $r2 = newarray (float)[4];

        $r2[0] = 1335.4F;

        $r2[1] = -2305.1F;

        $r2[2] = 1246.7F;

        $r2[3] = 674.0F;

        $r1[3] = $r2;

        $r2 = newarray (float)[5];

        $r2[0] = 919.8F;

        $r2[1] = 798.1F;

        $r2[2] = 211.3F;

        $r2[3] = -379.4F;

        $r2[4] = 100.0F;

        $r1[4] = $r2;

        $r2 = newarray (float)[6];

        $r2[0] = -227.4F;

        $r2[1] = 354.6F;

        $r2[2] = 208.7F;

        $r2[3] = -136.5F;

        $r2[4] = -168.3F;

        $r2[5] = -14.1F;

        $r1[5] = $r2;

        $r2 = newarray (float)[7];

        $r2[0] = 73.2F;

        $r2[1] = 69.7F;

        $r2[2] = 76.7F;

        $r2[3] = -151.2F;

        $r2[4] = -14.9F;

        $r2[5] = 14.6F;

        $r2[6] = -86.3F;

        $r1[6] = $r2;

        $r2 = newarray (float)[8];

        $r2[0] = 80.1F;

        $r2[1] = -74.5F;

        $r2[2] = -1.4F;

        $r2[3] = 38.5F;

        $r2[4] = 12.4F;

        $r2[5] = 9.5F;

        $r2[6] = 5.7F;

        $r2[7] = 1.8F;

        $r1[7] = $r2;

        $r2 = newarray (float)[9];

        $r2[0] = 24.9F;

        $r2[1] = 7.7F;

        $r2[2] = -11.6F;

        $r2[3] = -6.9F;

        $r2[4] = -18.2F;

        $r2[5] = 10.0F;

        $r2[6] = 9.2F;

        $r2[7] = -11.6F;

        $r2[8] = -5.2F;

        $r1[8] = $r2;

        $r2 = newarray (float)[10];

        $r2[0] = 5.6F;

        $r2[1] = 9.9F;

        $r2[2] = 3.5F;

        $r2[3] = -7.0F;

        $r2[4] = 5.1F;

        $r2[5] = -10.8F;

        $r2[6] = -1.3F;

        $r2[7] = 8.8F;

        $r2[8] = -6.7F;

        $r2[9] = -9.1F;

        $r1[9] = $r2;

        $r2 = newarray (float)[11];

        $r2[0] = -2.3F;

        $r2[1] = -6.3F;

        $r2[2] = 1.6F;

        $r2[3] = -2.6F;

        $r2[4] = 0.0F;

        $r2[5] = 3.1F;

        $r2[6] = 0.4F;

        $r2[7] = 2.1F;

        $r2[8] = 3.9F;

        $r2[9] = -0.1F;

        $r2[10] = -2.3F;

        $r1[10] = $r2;

        $r2 = newarray (float)[12];

        $r2[0] = 2.8F;

        $r2[1] = -1.6F;

        $r2[2] = -1.7F;

        $r2[3] = 1.7F;

        $r2[4] = -0.1F;

        $r2[5] = 0.1F;

        $r2[6] = -0.7F;

        $r2[7] = 0.7F;

        $r2[8] = 1.8F;

        $r2[9] = 0.0F;

        $r2[10] = 1.1F;

        $r2[11] = 4.1F;

        $r1[11] = $r2;

        $r2 = newarray (float)[13];

        $r2[0] = -2.4F;

        $r2[1] = -0.4F;

        $r2[2] = 0.2F;

        $r2[3] = 0.8F;

        $r2[4] = -0.3F;

        $r2[5] = 1.1F;

        $r2[6] = -0.5F;

        $r2[7] = 0.4F;

        $r2[8] = -0.3F;

        $r2[9] = -0.3F;

        $r2[10] = -0.1F;

        $r2[11] = -0.3F;

        $r2[12] = -0.1F;

        $r1[12] = $r2;

        <android.hardware.GeomagneticField: float[][] G_COEFF> = $r1;

        $r1 = newarray (float[])[13];

        $r2 = newarray (float)[1];

        f0 = 0.0F;

        $r2[0] = f0;

        $r1[0] = $r2;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 5079.8F;

        $r1[1] = $r2;

        $r2 = newarray (float)[3];

        $r2[0] = 0.0F;

        $r2[1] = -2594.7F;

        $r2[2] = -516.7F;

        $r1[2] = $r2;

        $r2 = newarray (float)[4];

        $r2[0] = 0.0F;

        $r2[1] = -199.9F;

        $r2[2] = 269.3F;

        $r2[3] = -524.2F;

        $r1[3] = $r2;

        $r2 = newarray (float)[5];

        $r2[0] = 0.0F;

        $r2[1] = 281.5F;

        $r2[2] = -226.0F;

        $r2[3] = 145.8F;

        $r2[4] = -304.7F;

        $r1[4] = $r2;

        $r2 = newarray (float)[6];

        $r2[0] = 0.0F;

        $r2[1] = 42.4F;

        $r2[2] = 179.8F;

        $r2[3] = -123.0F;

        $r2[4] = -19.5F;

        $r2[5] = 103.6F;

        $r1[5] = $r2;

        $r2 = newarray (float)[7];

        $r2[0] = 0.0F;

        $r2[1] = -20.3F;

        $r2[2] = 54.7F;

        $r2[3] = 63.6F;

        $r2[4] = -63.4F;

        $r2[5] = -0.1F;

        $r2[6] = 50.4F;

        $r1[6] = $r2;

        $r2 = newarray (float)[8];

        $r2[0] = 0.0F;

        $r2[1] = -61.5F;

        $r2[2] = -22.4F;

        $r2[3] = 7.2F;

        $r2[4] = 25.4F;

        $r2[5] = 11.0F;

        $r2[6] = -26.4F;

        $r2[7] = -5.1F;

        $r1[7] = $r2;

        $r2 = newarray (float)[9];

        $r2[0] = 0.0F;

        $r2[1] = 11.2F;

        $r2[2] = -21.0F;

        $r2[3] = 9.6F;

        $r2[4] = -19.8F;

        $r2[5] = 16.1F;

        $r2[6] = 7.7F;

        $r2[7] = -12.9F;

        $r2[8] = -0.2F;

        $r1[8] = $r2;

        $r2 = newarray (float)[10];

        $r2[0] = 0.0F;

        $r2[1] = -20.1F;

        $r2[2] = 12.9F;

        $r2[3] = 12.6F;

        $r2[4] = -6.7F;

        $r2[5] = -8.1F;

        $r2[6] = 8.0F;

        $r2[7] = 2.9F;

        $r2[8] = -7.9F;

        $r2[9] = 6.0F;

        $r1[9] = $r2;

        $r2 = newarray (float)[11];

        $r2[0] = 0.0F;

        $r2[1] = 2.4F;

        $r2[2] = 0.2F;

        $r2[3] = 4.4F;

        $r2[4] = 4.8F;

        $r2[5] = -6.5F;

        $r2[6] = -1.1F;

        $r2[7] = -3.4F;

        $r2[8] = -0.8F;

        $r2[9] = -2.3F;

        $r2[10] = -7.9F;

        $r1[10] = $r2;

        $r2 = newarray (float)[12];

        $r2[0] = 0.0F;

        $r2[1] = 0.3F;

        $r2[2] = 1.2F;

        $r2[3] = -0.8F;

        $r2[4] = -2.5F;

        $r2[5] = 0.9F;

        $r2[6] = -0.6F;

        $r2[7] = -2.7F;

        $r2[8] = -0.9F;

        $r2[9] = -1.3F;

        $r2[10] = -2.0F;

        $r2[11] = -1.2F;

        $r1[11] = $r2;

        $r2 = newarray (float)[13];

        $r2[0] = 0.0F;

        $r2[1] = -0.4F;

        $r2[2] = 0.3F;

        $r2[3] = 2.4F;

        $r2[4] = -2.6F;

        $r2[5] = 0.6F;

        $r2[6] = 0.3F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.3F;

        $r2[10] = -0.9F;

        $r2[11] = -0.4F;

        $r2[12] = 0.8F;

        $r1[12] = $r2;

        <android.hardware.GeomagneticField: float[][] H_COEFF> = $r1;

        $r1 = newarray (float[])[13];

        $r2 = newarray (float)[1];

        f0 = 0.0F;

        $r2[0] = f0;

        $r1[0] = $r2;

        $r2 = newarray (float)[2];

        $r2[0] = 8.0F;

        $r2[1] = 10.6F;

        $r1[1] = $r2;

        $r2 = newarray (float)[3];

        $r2[0] = -15.1F;

        $r2[1] = -7.8F;

        $r2[2] = -0.8F;

        $r1[2] = $r2;

        $r2 = newarray (float)[4];

        $r2[0] = 0.4F;

        $r2[1] = -2.6F;

        $r2[2] = -1.2F;

        $r2[3] = -6.5F;

        $r1[3] = $r2;

        $r2 = newarray (float)[5];

        $r2[0] = -2.5F;

        $r2[1] = 2.8F;

        $r2[2] = -7.0F;

        $r2[3] = 6.2F;

        $r2[4] = -3.8F;

        $r1[4] = $r2;

        $r2 = newarray (float)[6];

        $r2[0] = -2.8F;

        $r2[1] = 0.7F;

        $r2[2] = -3.2F;

        $r2[3] = -1.1F;

        $r2[4] = 0.1F;

        $r2[5] = -0.8F;

        $r1[5] = $r2;

        $r2 = newarray (float)[7];

        $r2[0] = -0.7F;

        $r2[1] = 0.4F;

        $r2[2] = -0.3F;

        $r2[3] = 2.3F;

        $r2[4] = -2.1F;

        $r2[5] = -0.6F;

        $r2[6] = 1.4F;

        $r1[6] = $r2;

        $r2 = newarray (float)[8];

        $r2[0] = 0.2F;

        $r2[1] = -0.1F;

        $r2[2] = -0.3F;

        $r2[3] = 1.1F;

        $r2[4] = 0.6F;

        $r2[5] = 0.5F;

        $r2[6] = -0.4F;

        $r2[7] = 0.6F;

        $r1[7] = $r2;

        $r2 = newarray (float)[9];

        $r2[0] = 0.1F;

        $r2[1] = 0.3F;

        $r2[2] = -0.4F;

        $r2[3] = 0.3F;

        $r2[4] = -0.3F;

        $r2[5] = 0.2F;

        $r2[6] = 0.4F;

        $r2[7] = -0.7F;

        $r2[8] = 0.4F;

        $r1[8] = $r2;

        $r2 = newarray (float)[10];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r1[9] = $r2;

        $r2 = newarray (float)[11];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = 0.0F;

        $r1[10] = $r2;

        $r2 = newarray (float)[12];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = 0.0F;

        $r2[11] = 0.0F;

        $r1[11] = $r2;

        $r2 = newarray (float)[13];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = 0.0F;

        $r2[11] = 0.0F;

        $r2[12] = 0.0F;

        $r1[12] = $r2;

        <android.hardware.GeomagneticField: float[][] DELTA_G> = $r1;

        $r1 = newarray (float[])[13];

        $r2 = newarray (float)[1];

        f0 = 0.0F;

        $r2[0] = f0;

        $r1[0] = $r2;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = -20.9F;

        $r1[1] = $r2;

        $r2 = newarray (float)[3];

        $r2[0] = 0.0F;

        $r2[1] = -23.2F;

        $r2[2] = -14.6F;

        $r1[2] = $r2;

        $r2 = newarray (float)[4];

        $r2[0] = 0.0F;

        $r2[1] = 5.0F;

        $r2[2] = -7.0F;

        $r2[3] = -0.6F;

        $r1[3] = $r2;

        $r2 = newarray (float)[5];

        $r2[0] = 0.0F;

        $r2[1] = 2.2F;

        $r2[2] = 1.6F;

        $r2[3] = 5.8F;

        $r2[4] = 0.1F;

        $r1[4] = $r2;

        $r2 = newarray (float)[6];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 1.7F;

        $r2[3] = 2.1F;

        $r2[4] = 4.8F;

        $r2[5] = -1.1F;

        $r1[5] = $r2;

        $r2 = newarray (float)[7];

        $r2[0] = 0.0F;

        $r2[1] = -0.6F;

        $r2[2] = -1.9F;

        $r2[3] = -0.4F;

        $r2[4] = -0.5F;

        $r2[5] = -0.3F;

        $r2[6] = 0.7F;

        $r1[6] = $r2;

        $r2 = newarray (float)[8];

        $r2[0] = 0.0F;

        $r2[1] = 0.6F;

        $r2[2] = 0.4F;

        $r2[3] = 0.2F;

        $r2[4] = 0.3F;

        $r2[5] = -0.8F;

        $r2[6] = -0.2F;

        $r2[7] = 0.1F;

        $r1[7] = $r2;

        $r2 = newarray (float)[9];

        $r2[0] = 0.0F;

        $r2[1] = -0.2F;

        $r2[2] = 0.1F;

        $r2[3] = 0.3F;

        $r2[4] = 0.4F;

        $r2[5] = 0.1F;

        $r2[6] = -0.2F;

        $r2[7] = 0.4F;

        $r2[8] = 0.4F;

        $r1[8] = $r2;

        $r2 = newarray (float)[10];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r1[9] = $r2;

        $r2 = newarray (float)[11];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = 0.0F;

        $r1[10] = $r2;

        $r2 = newarray (float)[12];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = 0.0F;

        $r2[11] = 0.0F;

        $r1[11] = $r2;

        $r2 = newarray (float)[13];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        $r2[3] = 0.0F;

        $r2[4] = 0.0F;

        $r2[5] = 0.0F;

        $r2[6] = 0.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = 0.0F;

        $r2[11] = 0.0F;

        $r2[12] = 0.0F;

        $r1[12] = $r2;

        <android.hardware.GeomagneticField: float[][] DELTA_H> = $r1;

        r4 = new java.util.GregorianCalendar;

        specialinvoke r4.<java.util.GregorianCalendar: void <init>(int,int,int)>(2005, 1, 1);

        $l0 = virtualinvoke r4.<java.util.Calendar: long getTimeInMillis()>();

        <android.hardware.GeomagneticField: long BASE_TIME> = $l0;

        $r1 = <android.hardware.GeomagneticField: float[][] G_COEFF>;

        $i1 = lengthof $r1;

        $r1 = staticinvoke <android.hardware.GeomagneticField: float[][] computeSchmidtQuasiNormFactors(int)>($i1);

        <android.hardware.GeomagneticField: float[][] SCHMIDT_QUASI_NORM_FACTORS> = $r1;

        return;

     label2:
        $z0 = 0;

        goto label1;

        return;
    }

    public void <init>(float, float, float, long)
    {
        android.hardware.GeomagneticField $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        long $l0, $l5;
        float[] $r1, $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3;
        android.hardware.GeomagneticField$LegendreTable $r2, r9;
        int $i1, $i2, $i3, $i4;
        float[][] $r3;
        boolean $z0;
        java.lang.AssertionError r8;

        $r0 := @this: android.hardware.GeomagneticField;

        $f6 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $l0 := @parameter3: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = <android.hardware.GeomagneticField: float[][] G_COEFF>;

        $i2 = lengthof $r3;

        $f6 = staticinvoke <java.lang.Math: float max(float,float)>(-89.99999F, $f6);

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>(89.99999F, $f6);

        specialinvoke $r0.<android.hardware.GeomagneticField: void computeGeocentricCoordinates(float,float,float)>($f6, $f0, $f1);

        $z0 = <android.hardware.GeomagneticField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = <android.hardware.GeomagneticField: float[][] G_COEFF>;

        $i1 = lengthof $r3;

        $r3 = <android.hardware.GeomagneticField: float[][] H_COEFF>;

        $i3 = lengthof $r3;

        if $i1 == $i3 goto label1;

        r8 = new java.lang.AssertionError;

        specialinvoke r8.<java.lang.AssertionError: void <init>()>();

        throw r8;

     label1:
        r9 = new android.hardware.GeomagneticField$LegendreTable;

        $r2 = r9;

        $i1 = $i2 - 1;

        $f0 = $r0.<android.hardware.GeomagneticField: float mGcLatitudeRad>;

        $d0 = (double) $f0;

        $d0 = 1.5707963267948966 - $d0;

        $f0 = (float) $d0;

        specialinvoke r9.<android.hardware.GeomagneticField$LegendreTable: void <init>(int,float)>($i1, $f0);

        $i1 = $i2 + 2;

        $r5 = newarray (float)[$i1];

        $f0 = 1.06535322E9F;

        $r5[0] = $f0;

        $f0 = $r0.<android.hardware.GeomagneticField: float mGcRadiusKm>;

        $f0 = 6371.2F / $f0;

        $r5[1] = $f0;

        $i1 = 2;

     label2:
        $i3 = lengthof $r5;

        if $i1 >= $i3 goto label3;

        $i3 = $i1 - 1;

        $f0 = $r5[$i3];

        $f1 = $r5[1];

        $f0 = $f0 * $f1;

        $r5[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r6 = newarray (float)[$i2];

        $r1 = newarray (float)[$i2];

        $f0 = 0.0F;

        $r6[0] = $f0;

        $f0 = 1.06535322E9F;

        $r1[0] = $f0;

        $f0 = $r0.<android.hardware.GeomagneticField: float mGcLongitudeRad>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f0 = (float) $d0;

        $r6[1] = $f0;

        $f0 = $r0.<android.hardware.GeomagneticField: float mGcLongitudeRad>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $f0 = (float) $d0;

        $r1[1] = $f0;

        $i3 = 2;

     label4:
        if $i3 >= $i2 goto label5;

        $i1 = $i3 >> 1;

        $i4 = $i3 - $i1;

        $f0 = $r6[$i4];

        $f1 = $r1[$i1];

        $f0 = $f0 * $f1;

        $i4 = $i3 - $i1;

        $f1 = $r1[$i4];

        $f7 = $r6[$i1];

        $f1 = $f1 * $f7;

        $f0 = $f0 + $f1;

        $r6[$i3] = $f0;

        $i4 = $i3 - $i1;

        $f0 = $r1[$i4];

        $f1 = $r1[$i1];

        $f0 = $f0 * $f1;

        $i4 = $i3 - $i1;

        $f1 = $r6[$i4];

        $f7 = $r6[$i1];

        $f1 = $f1 * $f7;

        $f0 = $f0 - $f1;

        $r1[$i3] = $f0;

        $i3 = $i3 + 1;

        goto label4;

     label5:
        $f0 = $r0.<android.hardware.GeomagneticField: float mGcLatitudeRad>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $f0 = (float) $d0;

        $f4 = 1.0F / $f0;

        $l5 = <android.hardware.GeomagneticField: long BASE_TIME>;

        $l0 = $l0 - $l5;

        $f0 = (float) $l0;

        $f5 = $f0 / 3.1536001E10F;

        $f1 = 0.0F;

        $f7 = 0.0F;

        $f0 = 0.0F;

        $i1 = 1;

     label6:
        if $i1 >= $i2 goto label9;

        $i3 = 0;

     label7:
        if $i3 > $i1 goto label8;

        $r3 = <android.hardware.GeomagneticField: float[][] G_COEFF>;

        $r7 = $r3[$i1];

        $f2 = $r7[$i3];

        $r3 = <android.hardware.GeomagneticField: float[][] DELTA_G>;

        $r7 = $r3[$i1];

        $f3 = $r7[$i3];

        $f3 = $f3 * $f5;

        $f2 = $f2 + $f3;

        $r3 = <android.hardware.GeomagneticField: float[][] H_COEFF>;

        $r7 = $r3[$i1];

        $f3 = $r7[$i3];

        $r3 = <android.hardware.GeomagneticField: float[][] DELTA_H>;

        $r7 = $r3[$i1];

        $f8 = $r7[$i3];

        $f8 = $f8 * $f5;

        $f3 = $f3 + $f8;

        $i4 = $i1 + 2;

        $f8 = $r5[$i4];

        $f9 = $r1[$i3];

        $f9 = $f9 * $f2;

        $f10 = $r6[$i3];

        $f10 = $f10 * $f3;

        $f9 = $f9 + $f10;

        $f8 = $f8 * $f9;

        $r3 = $r2.<android.hardware.GeomagneticField$LegendreTable: float[][] mPDeriv>;

        $r7 = $r3[$i1];

        $f9 = $r7[$i3];

        $f8 = $f8 * $f9;

        $r3 = <android.hardware.GeomagneticField: float[][] SCHMIDT_QUASI_NORM_FACTORS>;

        $r7 = $r3[$i1];

        $f9 = $r7[$i3];

        $f8 = $f8 * $f9;

        $f1 = $f1 + $f8;

        $i4 = $i1 + 2;

        $f8 = $r5[$i4];

        $f9 = (float) $i3;

        $f8 = $f8 * $f9;

        $f9 = $r6[$i3];

        $f9 = $f9 * $f2;

        $f10 = $r1[$i3];

        $f10 = $f10 * $f3;

        $f9 = $f9 - $f10;

        $f8 = $f8 * $f9;

        $r3 = $r2.<android.hardware.GeomagneticField$LegendreTable: float[][] mP>;

        $r7 = $r3[$i1];

        $f9 = $r7[$i3];

        $f8 = $f8 * $f9;

        $r3 = <android.hardware.GeomagneticField: float[][] SCHMIDT_QUASI_NORM_FACTORS>;

        $r7 = $r3[$i1];

        $f9 = $r7[$i3];

        $f8 = $f8 * $f9;

        $f8 = $f8 * $f4;

        $f7 = $f7 + $f8;

        $i4 = $i1 + 1;

        $f8 = (float) $i4;

        $i4 = $i1 + 2;

        $f9 = $r5[$i4];

        $f8 = $f8 * $f9;

        $f9 = $r1[$i3];

        $f2 = $f9 * $f2;

        $f9 = $r6[$i3];

        $f3 = $f9 * $f3;

        $f2 = $f2 + $f3;

        $f2 = $f8 * $f2;

        $r3 = $r2.<android.hardware.GeomagneticField$LegendreTable: float[][] mP>;

        $r7 = $r3[$i1];

        $f3 = $r7[$i3];

        $f2 = $f2 * $f3;

        $r3 = <android.hardware.GeomagneticField: float[][] SCHMIDT_QUASI_NORM_FACTORS>;

        $r7 = $r3[$i1];

        $f3 = $r7[$i3];

        $f2 = $f2 * $f3;

        $f0 = $f0 - $f2;

        $i3 = $i3 + 1;

        goto label7;

     label8:
        $i1 = $i1 + 1;

        goto label6;

     label9:
        $d0 = (double) $f6;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $f6 = $r0.<android.hardware.GeomagneticField: float mGcLatitudeRad>;

        $d1 = (double) $f6;

        $d0 = $d0 - $d1;

        $d1 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d1 = $d1 * $d2;

        $d2 = (double) $f0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d2 = $d2 * $d3;

        $d1 = $d1 + $d2;

        $f6 = (float) $d1;

        $r0.<android.hardware.GeomagneticField: float mX> = $f6;

        $r0.<android.hardware.GeomagneticField: float mY> = $f7;

        $f6 = neg $f1;

        $d1 = (double) $f6;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d1 = $d1 * $d2;

        $d2 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d0 = $d2 * $d0;

        $d0 = $d1 + $d0;

        $f6 = (float) $d0;

        $r0.<android.hardware.GeomagneticField: float mZ> = $f6;

        return;
    }

    private void computeGeocentricCoordinates(float, float, float)
    {
        android.hardware.GeomagneticField $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        double $d0, $d1;

        $r0 := @this: android.hardware.GeomagneticField;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 = $f2 / 1000.0F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $f2 = (float) $d1;

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f0 = (float) $d0;

        $f5 = $f0 / $f2;

        $f4 = 4.0680636E7F * $f2;

        $f4 = $f4 * $f2;

        $f6 = 4.04083E7F * $f0;

        $f6 = $f6 * $f0;

        $f4 = $f4 + $f6;

        $d0 = (double) $f4;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f4 = (float) $d0;

        $f6 = $f4 * $f3;

        $f6 = $f6 + 4.04083E7F;

        $f5 = $f6 * $f5;

        $f4 = $f4 * $f3;

        $f4 = $f4 + 4.0680636E7F;

        $f5 = $f5 / $f4;

        $d0 = (double) $f5;

        $d0 = staticinvoke <java.lang.Math: double atan(double)>($d0);

        $f5 = (float) $d0;

        $r0.<android.hardware.GeomagneticField: float mGcLatitudeRad> = $f5;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $f1 = (float) $d0;

        $r0.<android.hardware.GeomagneticField: float mGcLongitudeRad> = $f1;

        $f1 = $f3 * $f3;

        $f3 = 2.0F * $f3;

        $f5 = 4.0680636E7F * $f2;

        $f5 = $f5 * $f2;

        $f4 = 4.04083E7F * $f0;

        $f4 = $f4 * $f0;

        $f5 = $f5 + $f4;

        $d0 = (double) $f5;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f5 = (float) $d0;

        $f3 = $f3 * $f5;

        $f1 = $f1 + $f3;

        $f3 = 4.0680636E7F * 4.0680636E7F;

        $f3 = $f3 * $f2;

        $f3 = $f3 * $f2;

        $f5 = 4.04083E7F * 4.04083E7F;

        $f5 = $f5 * $f0;

        $f5 = $f5 * $f0;

        $f3 = $f3 + $f5;

        $f5 = 4.0680636E7F * $f2;

        $f2 = $f5 * $f2;

        $f5 = 4.04083E7F * $f0;

        $f0 = $f5 * $f0;

        $f0 = $f2 + $f0;

        $f0 = $f3 / $f0;

        $f0 = $f1 + $f0;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        $r0.<android.hardware.GeomagneticField: float mGcRadiusKm> = $f0;

        return;
    }

    private static float[][] computeSchmidtQuasiNormFactors(int)
    {
        int $i0, $i1, $i2, $i3, $i4;
        float[][] $r0;
        double $d0;
        float[] $r1, $r2;
        float $f0, $f1, $f2;

        $i0 := @parameter0: int;

        $i1 = $i0 + 1;

        $r0 = newarray (float[])[$i1];

        $r1 = newarray (float)[1];

        $f0 = 1.06535322E9F;

        $r1[0] = $f0;

        $r0[0] = $r1;

        $i1 = 1;

     label1:
        if $i1 > $i0 goto label6;

        $i2 = $i1 + 1;

        $r1 = newarray (float)[$i2];

        $r0[$i1] = $r1;

        $r1 = $r0[$i1];

        $i2 = $i1 - 1;

        $r2 = $r0[$i2];

        $f0 = $r2[0];

        $i2 = $i1 * 2;

        $i2 = $i2 - 1;

        $f1 = (float) $i2;

        $f0 = $f0 * $f1;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $r1[0] = $f0;

        $i2 = 1;

     label2:
        if $i2 > $i1 goto label5;

        $r1 = $r0[$i1];

        $r2 = $r0[$i1];

        $i3 = $i2 - 1;

        $f0 = $r2[$i3];

        $i3 = $i1 - $i2;

        $i3 = $i3 + 1;

        if $i2 != 1 goto label4;

        $i4 = 2;

     label3:
        $i3 = $i3 * $i4;

        $f1 = (float) $i3;

        $i3 = $i1 + $i2;

        $f2 = (float) $i3;

        $f1 = $f1 / $f2;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f1 = (float) $d0;

        $f0 = $f0 * $f1;

        $r1[$i2] = $f0;

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $i4 = 1;

        goto label3;

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return $r0;
    }

    public float getDeclination()
    {
        android.hardware.GeomagneticField $r0;
        float $f0;
        double $d0, $d1;

        $r0 := @this: android.hardware.GeomagneticField;

        $f0 = $r0.<android.hardware.GeomagneticField: float mY>;

        $d0 = (double) $f0;

        $f0 = $r0.<android.hardware.GeomagneticField: float mX>;

        $d1 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    public float getFieldStrength()
    {
        android.hardware.GeomagneticField $r0;
        double $d0;
        float $f0, $f1, $f2;

        $r0 := @this: android.hardware.GeomagneticField;

        $f0 = $r0.<android.hardware.GeomagneticField: float mX>;

        $f1 = $r0.<android.hardware.GeomagneticField: float mX>;

        $f0 = $f0 * $f1;

        $f1 = $r0.<android.hardware.GeomagneticField: float mY>;

        $f2 = $r0.<android.hardware.GeomagneticField: float mY>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $f1 = $r0.<android.hardware.GeomagneticField: float mZ>;

        $f2 = $r0.<android.hardware.GeomagneticField: float mZ>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    public float getHorizontalStrength()
    {
        android.hardware.GeomagneticField $r0;
        float $f0, $f1, $f2;
        double $d0;

        $r0 := @this: android.hardware.GeomagneticField;

        $f1 = $r0.<android.hardware.GeomagneticField: float mX>;

        $f0 = $r0.<android.hardware.GeomagneticField: float mX>;

        $f1 = $f1 * $f0;

        $f2 = $r0.<android.hardware.GeomagneticField: float mY>;

        $f0 = $r0.<android.hardware.GeomagneticField: float mY>;

        $f0 = $f2 * $f0;

        $f1 = $f1 + $f0;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f1 = (float) $d0;

        return $f1;
    }

    public float getInclination()
    {
        android.hardware.GeomagneticField $r0;
        float $f0;
        double $d0, $d1;

        $r0 := @this: android.hardware.GeomagneticField;

        $f0 = $r0.<android.hardware.GeomagneticField: float mZ>;

        $d0 = (double) $f0;

        $f0 = virtualinvoke $r0.<android.hardware.GeomagneticField: float getHorizontalStrength()>();

        $d1 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    public float getX()
    {
        android.hardware.GeomagneticField $r0;
        float f0;

        $r0 := @this: android.hardware.GeomagneticField;

        f0 = $r0.<android.hardware.GeomagneticField: float mX>;

        return f0;
    }

    public float getY()
    {
        android.hardware.GeomagneticField $r0;
        float f0;

        $r0 := @this: android.hardware.GeomagneticField;

        f0 = $r0.<android.hardware.GeomagneticField: float mY>;

        return f0;
    }

    public float getZ()
    {
        android.hardware.GeomagneticField $r0;
        float f0;

        $r0 := @this: android.hardware.GeomagneticField;

        f0 = $r0.<android.hardware.GeomagneticField: float mZ>;

        return f0;
    }
}
