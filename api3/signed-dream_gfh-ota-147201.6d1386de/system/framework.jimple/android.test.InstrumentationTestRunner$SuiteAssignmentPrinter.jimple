class android.test.InstrumentationTestRunner$SuiteAssignmentPrinter extends java.lang.Object implements junit.framework.TestListener
{
    private long mEndTime;
    private long mStartTime;
    private android.os.Bundle mTestResult;
    private boolean mTimingValid;
    final android.test.InstrumentationTestRunner this$0;

    public void <init>(android.test.InstrumentationTestRunner)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter $r0;
        android.test.InstrumentationTestRunner $r1;

        $r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        $r1 := @parameter0: android.test.InstrumentationTestRunner;

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.test.InstrumentationTestRunner this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addError(junit.framework.Test, java.lang.Throwable)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter $r0;
        junit.framework.Test $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: java.lang.Throwable;

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

    public void addFailure(junit.framework.Test, junit.framework.AssertionFailedError)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter $r0;
        junit.framework.Test $r1;
        junit.framework.AssertionFailedError $r2;

        $r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r2 := @parameter1: junit.framework.AssertionFailedError;

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid> = 0;

        return;
    }

    public void endTest(junit.framework.Test)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter $r0;
        junit.framework.Test $r1;
        long $l0, $l2;
        android.os.Bundle $r2;
        boolean $z0;
        byte $b1;
        java.lang.String $r3, $r6;
        float $f0;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5, $r9;
        junit.framework.TestCase $r7;
        android.test.InstrumentationTestRunner $r8;

        $r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mEndTime> = $l0;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult> = $r2;

        $z0 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid>;

        if $z0 == 0 goto label1;

        $l0 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label3;

     label1:
        $r3 = "NA";

        $f0 = -1.0F;

     label2:
        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime> = -1L;

        $r2 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r7 = (junit.framework.TestCase) $r1;

        $r6 = virtualinvoke $r7.<junit.framework.TestCase: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nin ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suite\nrunTime: ");

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r6);

        $r2 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r2.<android.os.Bundle: void putFloat(java.lang.String,float)>("runtime", $f0);

        $r2 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("suiteassignment", $r3);

        $r8 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.test.InstrumentationTestRunner this$0>;

        $r2 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: android.os.Bundle mTestResult>;

        virtualinvoke $r8.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>(0, $r2);

        return;

     label3:
        $l0 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mEndTime>;

        $l2 = $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime>;

        $l0 = $l0 - $l2;

        $f0 = (float) $l0;

        $b1 = $f0 cmpg 100.0F;

        if $b1 >= 0 goto label4;

        $r5 = class "android/test/InstrumentationTestCase";

        $r9 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z0 != 0 goto label4;

        $r3 = "small";

        goto label2;

     label4:
        $b1 = $f0 cmpg 1000.0F;

        if $b1 >= 0 goto label5;

        $r3 = "medium";

        goto label2;

     label5:
        $r3 = "large";

        goto label2;
    }

    public void startTest(junit.framework.Test)
    {
        android.test.InstrumentationTestRunner$SuiteAssignmentPrinter $r0;
        junit.framework.Test $r1;
        long $l0;

        $r0 := @this: android.test.InstrumentationTestRunner$SuiteAssignmentPrinter;

        $r1 := @parameter0: junit.framework.Test;

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: boolean mTimingValid> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<android.test.InstrumentationTestRunner$SuiteAssignmentPrinter: long mStartTime> = $l0;

        return;
    }
}
