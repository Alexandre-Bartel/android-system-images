public class org.apache.harmony.security.x509.Extension extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    public static final int[] AUTHORITY_INFO_ACCESS;
    public static final int[] AUTH_KEY_ID;
    public static final int[] BASIC_CONSTRAINTS;
    public static final int[] CERTIFICATE_ISSUER;
    public static final int[] CERTIFICATE_POLICIES;
    public static final boolean CRITICAL;
    public static final int[] CRL_DISTR_POINTS;
    public static final int[] CRL_NUMBER;
    public static final int[] EXTENDED_KEY_USAGE;
    public static final int[] FRESHEST_CRL;
    public static final int[] INHIBIT_ANY_POLICY;
    public static final int[] INVALIDITY_DATE;
    public static final int[] ISSUER_ALTERNATIVE_NAME;
    public static final int[] ISSUING_DISTR_POINT;
    public static final int[] ISSUING_DISTR_POINTS;
    public static final int[] KEY_USAGE;
    public static final int[] NAME_CONSTRAINTS;
    public static final boolean NON_CRITICAL;
    public static final int[] POLICY_CONSTRAINTS;
    public static final int[] POLICY_MAPPINGS;
    public static final int[] PRIVATE_KEY_USAGE_PERIOD;
    public static final int[] REASON_CODE;
    public static final int[] SUBJECT_ALT_NAME;
    public static final int[] SUBJECT_INFO_ACCESS;
    public static final int[] SUBJ_DIRECTORY_ATTRS;
    public static final int[] SUBJ_KEY_ID;
    private final boolean critical;
    private byte[] encoding;
    private final int[] extnID;
    private java.lang.String extnID_str;
    private final byte[] extnValue;
    protected org.apache.harmony.security.x509.ExtensionValue extnValueObject;
    private byte[] rawExtnValue;
    private boolean valueDecoded;

    static void <clinit>()
    {
        int[] $r0;
        org.apache.harmony.security.x509.Extension$2 $r1;
        org.apache.harmony.security.asn1.ASN1Type[] $r2;
        org.apache.harmony.security.asn1.ASN1Oid $r3;
        org.apache.harmony.security.asn1.ASN1Boolean $r4;
        org.apache.harmony.security.x509.Extension$1 $r5;

        <org.apache.harmony.security.x509.Extension: boolean CRITICAL> = 1;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 9;

        <org.apache.harmony.security.x509.Extension: int[] SUBJ_DIRECTORY_ATTRS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 14;

        <org.apache.harmony.security.x509.Extension: int[] SUBJ_KEY_ID> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 15;

        <org.apache.harmony.security.x509.Extension: int[] KEY_USAGE> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 16;

        <org.apache.harmony.security.x509.Extension: int[] PRIVATE_KEY_USAGE_PERIOD> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 17;

        <org.apache.harmony.security.x509.Extension: int[] SUBJECT_ALT_NAME> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 18;

        <org.apache.harmony.security.x509.Extension: int[] ISSUER_ALTERNATIVE_NAME> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 19;

        <org.apache.harmony.security.x509.Extension: int[] BASIC_CONSTRAINTS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 30;

        <org.apache.harmony.security.x509.Extension: int[] NAME_CONSTRAINTS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 31;

        <org.apache.harmony.security.x509.Extension: int[] CRL_DISTR_POINTS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 32;

        <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_POLICIES> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 33;

        <org.apache.harmony.security.x509.Extension: int[] POLICY_MAPPINGS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 35;

        <org.apache.harmony.security.x509.Extension: int[] AUTH_KEY_ID> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 36;

        <org.apache.harmony.security.x509.Extension: int[] POLICY_CONSTRAINTS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 37;

        <org.apache.harmony.security.x509.Extension: int[] EXTENDED_KEY_USAGE> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 46;

        <org.apache.harmony.security.x509.Extension: int[] FRESHEST_CRL> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 54;

        <org.apache.harmony.security.x509.Extension: int[] INHIBIT_ANY_POLICY> = $r0;

        $r0 = newarray (int)[9];

        $r0[0] = 1;

        $r0[1] = 3;

        $r0[2] = 6;

        $r0[3] = 1;

        $r0[4] = 5;

        $r0[5] = 5;

        $r0[6] = 7;

        $r0[7] = 1;

        $r0[8] = 1;

        <org.apache.harmony.security.x509.Extension: int[] AUTHORITY_INFO_ACCESS> = $r0;

        $r0 = newarray (int)[9];

        $r0[0] = 1;

        $r0[1] = 3;

        $r0[2] = 6;

        $r0[3] = 1;

        $r0[4] = 5;

        $r0[5] = 5;

        $r0[6] = 7;

        $r0[7] = 1;

        $r0[8] = 11;

        <org.apache.harmony.security.x509.Extension: int[] SUBJECT_INFO_ACCESS> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 28;

        <org.apache.harmony.security.x509.Extension: int[] ISSUING_DISTR_POINT> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 20;

        <org.apache.harmony.security.x509.Extension: int[] CRL_NUMBER> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 29;

        <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_ISSUER> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 24;

        <org.apache.harmony.security.x509.Extension: int[] INVALIDITY_DATE> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 21;

        <org.apache.harmony.security.x509.Extension: int[] REASON_CODE> = $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 2;

        $r0[1] = 5;

        $r0[2] = 29;

        $r0[3] = 28;

        <org.apache.harmony.security.x509.Extension: int[] ISSUING_DISTR_POINTS> = $r0;

        $r1 = new org.apache.harmony.security.x509.Extension$2;

        $r2 = newarray (org.apache.harmony.security.asn1.ASN1Type)[3];

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        $r2[1] = $r4;

        $r5 = new org.apache.harmony.security.x509.Extension$1;

        specialinvoke $r5.<org.apache.harmony.security.x509.Extension$1: void <init>()>();

        $r2[2] = $r5;

        specialinvoke $r1.<org.apache.harmony.security.x509.Extension$2: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r2);

        <org.apache.harmony.security.x509.Extension: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r1;

        return;
    }

    public void <init>(java.lang.String, boolean, org.apache.harmony.security.x509.ExtensionValue)
    {
        org.apache.harmony.security.x509.Extension $r0;
        java.lang.String $r1;
        boolean $z0;
        org.apache.harmony.security.x509.ExtensionValue $r2;
        int[] $r3;
        byte[] $r4;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.apache.harmony.security.x509.ExtensionValue;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 0;

        $r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str> = $r1;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: int[] toIntArray(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x509.Extension: int[] extnID> = $r3;

        $r0.<org.apache.harmony.security.x509.Extension: boolean critical> = $z0;

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r2;

        $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 1;

        $r4 = virtualinvoke $r2.<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()>();

        $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue> = $r4;

        return;
    }

    public void <init>(java.lang.String, boolean, byte[])
    {
        org.apache.harmony.security.x509.Extension $r0;
        java.lang.String $r1;
        boolean $z0;
        byte[] $r2;
        int[] $r3;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 0;

        $r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str> = $r1;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: int[] toIntArray(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x509.Extension: int[] extnID> = $r3;

        $r0.<org.apache.harmony.security.x509.Extension: boolean critical> = $z0;

        $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue> = $r2;

        return;
    }

    public void <init>(java.lang.String, byte[])
    {
        org.apache.harmony.security.x509.Extension $r0;
        java.lang.String $r1;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void <init>(java.lang.String,boolean,byte[])>($r1, 0, $r2);

        return;
    }

    public void <init>(int[], boolean, byte[])
    {
        org.apache.harmony.security.x509.Extension $r0;
        int[] $r1;
        boolean $z0;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: int[];

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 0;

        $r0.<org.apache.harmony.security.x509.Extension: int[] extnID> = $r1;

        $r0.<org.apache.harmony.security.x509.Extension: boolean critical> = $z0;

        $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue> = $r2;

        return;
    }

    private void <init>(int[], boolean, byte[], byte[], byte[], org.apache.harmony.security.x509.ExtensionValue)
    {
        org.apache.harmony.security.x509.Extension $r0;
        int[] $r1;
        boolean $z0;
        byte[] $r2, $r3, $r4;
        org.apache.harmony.security.x509.ExtensionValue $r5;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: int[];

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: byte[];

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        $r5 := @parameter5: org.apache.harmony.security.x509.ExtensionValue;

        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void <init>(int[],boolean,byte[])>($r1, $z0, $r2);

        $r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue> = $r3;

        $r0.<org.apache.harmony.security.x509.Extension: byte[] encoding> = $r4;

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r5;

        if $r5 == null goto label2;

        $z0 = 1;

     label1:
        $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    void <init>(int[], boolean, byte[], byte[], byte[], org.apache.harmony.security.x509.ExtensionValue, org.apache.harmony.security.x509.Extension$1)
    {
        org.apache.harmony.security.x509.Extension $r0;
        int[] $r1;
        boolean $z0;
        byte[] $r2, $r3, $r4;
        org.apache.harmony.security.x509.ExtensionValue $r5;
        org.apache.harmony.security.x509.Extension$1 $r6;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: int[];

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: byte[];

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        $r5 := @parameter5: org.apache.harmony.security.x509.ExtensionValue;

        $r6 := @parameter6: org.apache.harmony.security.x509.Extension$1;

        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue)>($r1, $z0, $r2, $r3, $r4, $r5);

        return;
    }

    public void <init>(int[], byte[])
    {
        org.apache.harmony.security.x509.Extension $r0;
        int[] $r1;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: byte[];

        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void <init>(int[],boolean,byte[])>($r1, 0, $r2);

        return;
    }

    static boolean access$000(int[], int[])
    {
        int[] $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r0, $r1);

        return $z0;
    }

    static int[] access$200(org.apache.harmony.security.x509.Extension)
    {
        org.apache.harmony.security.x509.Extension $r0;
        int[] r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.Extension;

        r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        return r1;
    }

    static boolean access$300(org.apache.harmony.security.x509.Extension)
    {
        org.apache.harmony.security.x509.Extension $r0;
        boolean z0;

        $r0 := @parameter0: org.apache.harmony.security.x509.Extension;

        z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        return z0;
    }

    static byte[] access$400(org.apache.harmony.security.x509.Extension)
    {
        org.apache.harmony.security.x509.Extension $r0;
        byte[] r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.Extension;

        r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        return r1;
    }

    private void decodeExtensionValue() throws java.io.IOException
    {
        org.apache.harmony.security.x509.Extension $r0;
        boolean $z0;
        int[] $r1, $r2;
        byte[] $r3;
        org.apache.harmony.security.x509.SubjectKeyIdentifier $r4;
        org.apache.harmony.security.x509.KeyUsage $r5;
        org.apache.harmony.security.x509.AlternativeName $r6;
        org.apache.harmony.security.x509.BasicConstraints $r7;
        org.apache.harmony.security.x509.NameConstraints $r8;
        org.apache.harmony.security.x509.CertificatePolicies $r9;
        org.apache.harmony.security.x509.AuthorityKeyIdentifier $r10;
        org.apache.harmony.security.x509.PolicyConstraints $r11;
        org.apache.harmony.security.x509.ExtendedKeyUsage $r12;
        org.apache.harmony.security.x509.InhibitAnyPolicy $r13;
        org.apache.harmony.security.x509.CertificateIssuer $r14;
        org.apache.harmony.security.x509.CRLDistributionPoints $r15;
        org.apache.harmony.security.x509.ReasonCode $r16;
        org.apache.harmony.security.x509.InvalidityDate $r17;
        org.apache.harmony.security.x509.CRLNumber $r18;
        org.apache.harmony.security.x509.IssuingDistributionPoint $r19;
        org.apache.harmony.security.x509.InfoAccessSyntax $r20;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 1;

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] SUBJ_KEY_ID>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label02;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r4 = staticinvoke <org.apache.harmony.security.x509.SubjectKeyIdentifier: org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r4;

        return;

     label02:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] KEY_USAGE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label03;

        $r5 = new org.apache.harmony.security.x509.KeyUsage;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r5.<org.apache.harmony.security.x509.KeyUsage: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r5;

        return;

     label03:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_ALT_NAME>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label04;

        $r6 = new org.apache.harmony.security.x509.AlternativeName;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r6.<org.apache.harmony.security.x509.AlternativeName: void <init>(boolean,byte[])>(1, $r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r6;

        return;

     label04:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] ISSUER_ALTERNATIVE_NAME>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label05;

        $r6 = new org.apache.harmony.security.x509.AlternativeName;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r6.<org.apache.harmony.security.x509.AlternativeName: void <init>(boolean,byte[])>(1, $r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r6;

        return;

     label05:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] BASIC_CONSTRAINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label06;

        $r7 = new org.apache.harmony.security.x509.BasicConstraints;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r7.<org.apache.harmony.security.x509.BasicConstraints: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r7;

        return;

     label06:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] NAME_CONSTRAINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label07;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r8 = staticinvoke <org.apache.harmony.security.x509.NameConstraints: org.apache.harmony.security.x509.NameConstraints decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r8;

        return;

     label07:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_POLICIES>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label08;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r9 = staticinvoke <org.apache.harmony.security.x509.CertificatePolicies: org.apache.harmony.security.x509.CertificatePolicies decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r9;

        return;

     label08:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] AUTH_KEY_ID>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label09;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r10 = staticinvoke <org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r10;

        return;

     label09:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] POLICY_CONSTRAINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label10;

        $r11 = new org.apache.harmony.security.x509.PolicyConstraints;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r11.<org.apache.harmony.security.x509.PolicyConstraints: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r11;

        return;

     label10:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] EXTENDED_KEY_USAGE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label11;

        $r12 = new org.apache.harmony.security.x509.ExtendedKeyUsage;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r12.<org.apache.harmony.security.x509.ExtendedKeyUsage: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r12;

        return;

     label11:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] INHIBIT_ANY_POLICY>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label12;

        $r13 = new org.apache.harmony.security.x509.InhibitAnyPolicy;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r13.<org.apache.harmony.security.x509.InhibitAnyPolicy: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r13;

        return;

     label12:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_ISSUER>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label13;

        $r14 = new org.apache.harmony.security.x509.CertificateIssuer;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r14.<org.apache.harmony.security.x509.CertificateIssuer: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r14;

        return;

     label13:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] CRL_DISTR_POINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label14;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r15 = staticinvoke <org.apache.harmony.security.x509.CRLDistributionPoints: org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r15;

        return;

     label14:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_ISSUER>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label15;

        $r16 = new org.apache.harmony.security.x509.ReasonCode;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r16.<org.apache.harmony.security.x509.ReasonCode: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r16;

        return;

     label15:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] INVALIDITY_DATE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label16;

        $r17 = new org.apache.harmony.security.x509.InvalidityDate;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r17.<org.apache.harmony.security.x509.InvalidityDate: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r17;

        return;

     label16:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] REASON_CODE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label17;

        $r16 = new org.apache.harmony.security.x509.ReasonCode;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r16.<org.apache.harmony.security.x509.ReasonCode: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r16;

        return;

     label17:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] CRL_NUMBER>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label18;

        $r18 = new org.apache.harmony.security.x509.CRLNumber;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r18.<org.apache.harmony.security.x509.CRLNumber: void <init>(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r18;

        return;

     label18:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] ISSUING_DISTR_POINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label19;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r19 = staticinvoke <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r19;

        return;

     label19:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] AUTHORITY_INFO_ACCESS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label20;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r20 = staticinvoke <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r20;

        return;

     label20:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r2 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_INFO_ACCESS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r1, $r2);

        if $z0 == 0 goto label21;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r20 = staticinvoke <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[])>($r3);

        $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r20;

        return;

     label21:
        return;
    }

    private static boolean oidEquals(int[], int[])
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        $i1 = lengthof $r0;

        $i0 = lengthof $r1;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        if $i1 <= 0 goto label2;

        $i1 = $i1 + -1;

        $i2 = $r0[$i1];

        $i0 = $r1[$i1];

        if $i2 == $i0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public void dumpValue(java.lang.StringBuffer, java.lang.String)
    {
        org.apache.harmony.security.x509.Extension $r0;
        java.lang.StringBuffer $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0;
        org.apache.harmony.security.x509.ExtensionValue $r5;
        int[] $r6, $r7;
        byte[] $r8;
        java.io.IOException $r9;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: java.lang.StringBuffer;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("OID: ");

        $r4 = virtualinvoke $r0.<org.apache.harmony.security.x509.Extension: java.lang.String getExtnID()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Critical: ");

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label02;

     label01:
        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label02:
        $r5 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        if $r5 == null goto label03;

        $r5 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        virtualinvoke $r5.<org.apache.harmony.security.x509.ExtensionValue: void dumpValue(java.lang.StringBuffer,java.lang.String)>($r1, $r2);

        return;

     label03:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] SUBJ_DIRECTORY_ATTRS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label05;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Subject Directory Attributes Extension");

     label04:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unparsed Extension Value:\n");

        $r8 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r2 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String toString(byte[],java.lang.String)>($r8, $r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;

     label05:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] SUBJ_KEY_ID>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label06;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Subject Key Identifier Extension");

        goto label04;

     label06:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] KEY_USAGE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label07;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Key Usage Extension");

        goto label04;

     label07:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] PRIVATE_KEY_USAGE_PERIOD>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label08;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Private Key Usage Period Extension");

        goto label04;

     label08:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_ALT_NAME>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label09;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Subject Alternative Name Extension");

        goto label04;

     label09:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] ISSUER_ALTERNATIVE_NAME>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label10;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Issuer Alternative Name Extension");

        goto label04;

     label10:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] BASIC_CONSTRAINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label11;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Basic Constraints Extension");

        goto label04;

     label11:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] NAME_CONSTRAINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label12;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Name Constraints Extension");

        goto label04;

     label12:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] CRL_DISTR_POINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label13;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CRL Distribution Points Extension");

        goto label04;

     label13:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_POLICIES>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label14;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Certificate Policies Extension");

        goto label04;

     label14:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] POLICY_MAPPINGS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label15;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Policy Mappings Extension");

        goto label04;

     label15:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] AUTH_KEY_ID>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label16;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Authority Key Identifier Extension");

        goto label04;

     label16:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] POLICY_CONSTRAINTS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label17;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Policy Constraints Extension");

        goto label04;

     label17:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] EXTENDED_KEY_USAGE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label18;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Extended Key Usage Extension");

        goto label04;

     label18:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] INHIBIT_ANY_POLICY>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label19;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Inhibit Any-Policy Extension");

        goto label04;

     label19:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] AUTHORITY_INFO_ACCESS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label20;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Authority Information Access Extension");

        goto label04;

     label20:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_INFO_ACCESS>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label21;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Subject Information Access Extension");

        goto label04;

     label21:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] INVALIDITY_DATE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label22;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalidity Date Extension");

        goto label04;

     label22:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] CRL_NUMBER>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label23;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CRL Number Extension");

        goto label04;

     label23:
        $r6 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] REASON_CODE>;

        $z0 = staticinvoke <org.apache.harmony.security.x509.Extension: boolean oidEquals(int[],int[])>($r6, $r7);

        if $z0 == 0 goto label24;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reason Code Extension");

        goto label04;

     label24:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown Extension");

        goto label04;

     label25:
        $r9 := @caughtexception;

        goto label02;

        catch java.io.IOException from label01 to label02 with label25;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.security.x509.Extension $r0, $r2;
        java.lang.Object $r1;
        boolean $z0, $z1;
        int[] $r3, $r4;
        byte[] $r5, $r6;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.apache.harmony.security.x509.Extension;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (org.apache.harmony.security.x509.Extension) $r1;

        $r3 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r4 = $r2.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r3, $r4);

        if $z0 == 0 goto label2;

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        $z1 = $r2.<org.apache.harmony.security.x509.Extension: boolean critical>;

        if $z0 != $z1 goto label2;

        $r5 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r6 = $r2.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r5, $r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public org.apache.harmony.security.x509.BasicConstraints getBasicConstraintsValue()
    {
        org.apache.harmony.security.x509.Extension $r0;
        boolean $z0;
        org.apache.harmony.security.x509.ExtensionValue $r1;
        org.apache.harmony.security.x509.BasicConstraints $r2;
        java.io.IOException $r3;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label2;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label2:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $z0 = $r1 instanceof org.apache.harmony.security.x509.BasicConstraints;

        if $z0 == 0 goto label3;

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $r2 = (org.apache.harmony.security.x509.BasicConstraints) $r1;

        return $r2;

     label3:
        return null;

     label4:
        $r3 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public boolean getCritical()
    {
        org.apache.harmony.security.x509.Extension $r0;
        boolean z0;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        return z0;
    }

    public org.apache.harmony.security.x509.ExtensionValue getDecodedExtensionValue() throws java.io.IOException
    {
        org.apache.harmony.security.x509.Extension $r0;
        boolean $z0;
        org.apache.harmony.security.x509.ExtensionValue r1;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label1:
        r1 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        return r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.Extension $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Sequence $r2;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] encoding>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.x509.Extension: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r0);

        $r0.<org.apache.harmony.security.x509.Extension: byte[] encoding> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] encoding>;

        return $r1;
    }

    public java.lang.String getExtnID()
    {
        org.apache.harmony.security.x509.Extension $r0;
        java.lang.String $r1;
        int[] $r2;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str>;

        if $r1 != null goto label1;

        $r2 = $r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r1 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString(int[])>($r2);

        $r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str>;

        return $r1;
    }

    public byte[] getExtnValue()
    {
        org.apache.harmony.security.x509.Extension $r0;
        byte[] r1;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        return r1;
    }

    public org.apache.harmony.security.x509.KeyUsage getKeyUsageValue()
    {
        org.apache.harmony.security.x509.Extension $r0;
        boolean $z0;
        org.apache.harmony.security.x509.ExtensionValue $r1;
        org.apache.harmony.security.x509.KeyUsage $r2;
        java.io.IOException $r3;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = $r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label2;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label2:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $z0 = $r1 instanceof org.apache.harmony.security.x509.KeyUsage;

        if $z0 == 0 goto label3;

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $r2 = (org.apache.harmony.security.x509.KeyUsage) $r1;

        return $r2;

     label3:
        return null;

     label4:
        $r3 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public byte[] getRawExtnValue()
    {
        org.apache.harmony.security.x509.Extension $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1OctetString $r2;

        $r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        $r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r1);

        $r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue>;

        return $r1;
    }
}
