public class org.apache.harmony.luni.platform.PlatformAddressFactory extends java.lang.Object
{

    public void <init>()
    {
        org.apache.harmony.luni.platform.PlatformAddressFactory $r0;

        $r0 := @this: org.apache.harmony.luni.platform.PlatformAddressFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.harmony.luni.platform.PlatformAddress alloc(int)
    {
        int $i0, $i1;
        org.apache.harmony.luni.platform.IMemorySystem $r0;
        long $l2;
        org.apache.harmony.luni.platform.PlatformAddress $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;

        $i0 := @parameter0: int;

        $r0 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i1 = interfaceinvoke $r0.<org.apache.harmony.luni.platform.IMemorySystem: int malloc(int)>($i0);

        $l2 = (long) $i0;

        $r1 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.PlatformAddress on(int,long)>($i1, $l2);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void alloc(org.apache.harmony.luni.platform.PlatformAddress)>($r1);

        return $r1;
    }

    public static org.apache.harmony.luni.platform.PlatformAddress alloc(int, byte)
    {
        int $i0, $i3;
        byte $b1;
        long $l2;
        org.apache.harmony.luni.platform.IMemorySystem $r0;
        org.apache.harmony.luni.platform.PlatformAddress $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;

        $i0 := @parameter0: int;

        $b1 := @parameter1: byte;

        $r0 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i3 = interfaceinvoke $r0.<org.apache.harmony.luni.platform.IMemorySystem: int malloc(int)>($i0);

        $r0 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $l2 = (long) $i0;

        interfaceinvoke $r0.<org.apache.harmony.luni.platform.IMemorySystem: void memset(int,byte,long)>($i3, $b1, $l2);

        $l2 = (long) $i0;

        $r1 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.PlatformAddress on(int,long)>($i3, $l2);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void alloc(org.apache.harmony.luni.platform.PlatformAddress)>($r1);

        return $r1;
    }

    public static org.apache.harmony.luni.platform.PlatformAddress allocMap(int, long, long, int) throws java.io.IOException
    {
        int $i0, $i3;
        long $l1, $l2;
        org.apache.harmony.luni.platform.IMemorySystem $r0;
        org.apache.harmony.luni.platform.MappedPlatformAddress $r1;
        org.apache.harmony.luni.platform.IMemorySpy $r2;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $i3 := @parameter3: int;

        $r0 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySystem osMemory>;

        $i0 = interfaceinvoke $r0.<org.apache.harmony.luni.platform.IMemorySystem: int mmap(int,long,long,int)>($i0, $l1, $l2, $i3);

        $r1 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.MappedPlatformAddress mapOn(int,long)>($i0, $l2);

        $r2 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.IMemorySpy memorySpy>;

        interfaceinvoke $r2.<org.apache.harmony.luni.platform.IMemorySpy: void alloc(org.apache.harmony.luni.platform.PlatformAddress)>($r1);

        return $r1;
    }

    public static org.apache.harmony.luni.platform.MappedPlatformAddress mapOn(int, long)
    {
        int $i0;
        long $l1;
        org.apache.harmony.luni.platform.MappedPlatformAddress $r0;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r0 = new org.apache.harmony.luni.platform.MappedPlatformAddress;

        specialinvoke $r0.<org.apache.harmony.luni.platform.MappedPlatformAddress: void <init>(int,long)>($i0, $l1);

        return $r0;
    }

    public static org.apache.harmony.luni.platform.PlatformAddress on(int)
    {
        int $i0;
        org.apache.harmony.luni.platform.PlatformAddress $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <org.apache.harmony.luni.platform.PlatformAddressFactory: org.apache.harmony.luni.platform.PlatformAddress on(int,long)>($i0, -1L);

        return $r0;
    }

    public static org.apache.harmony.luni.platform.PlatformAddress on(int, long)
    {
        int $i0;
        long $l1;
        org.apache.harmony.luni.platform.PlatformAddress $r0;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        if $i0 != 0 goto label1;

        $r0 = <org.apache.harmony.luni.platform.PlatformAddress: org.apache.harmony.luni.platform.PlatformAddress NULL>;

        return $r0;

     label1:
        $r0 = new org.apache.harmony.luni.platform.PlatformAddress;

        specialinvoke $r0.<org.apache.harmony.luni.platform.PlatformAddress: void <init>(int,long)>($i0, $l1);

        return $r0;
    }
}
