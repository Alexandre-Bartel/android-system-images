class org.apache.harmony.awt.gl.MultiRectAreaOp$Intersection extends java.lang.Object
{

    void <init>()
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Intersection $r0;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Intersection;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.harmony.awt.gl.MultiRectArea getResult(org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0, $r1;
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r2;
        boolean $z0;
        int $i0, $i1;
        int[] $r3, $r7;
        java.awt.Rectangle $r4, $r5, $r6;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r0 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: void <init>()>();

        return $r0;

     label2:
        $r2 = new org.apache.harmony.awt.gl.MultiRectArea$RectCash;

        specialinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void <init>()>();

        $z0 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: boolean sorted>;

        if $z0 == 0 goto label3;

        $z0 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean sorted>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 <= 8 goto label3;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 > 8 goto label5;

     label3:
        $r3 = staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Intersection: int[] simpleIntersect(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>($r0, $r1);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>($r3, 0);

     label4:
        return $r2;

     label5:
        $r4 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        $r5 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        $r6 = virtualinvoke $r4.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>($r5);

        $i0 = $r6.<java.awt.Rectangle: int width>;

        if $i0 <= 0 goto label4;

        $i0 = $r6.<java.awt.Rectangle: int height>;

        if $i0 <= 0 goto label4;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r7 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i0 = $r4.<java.awt.Rectangle: int height>;

        $i0 = $i0 + 2;

        $i1 = $r5.<java.awt.Rectangle: int height>;

        $i1 = $i1 + 2;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Intersection: void intersectRegions(int[],int[],org.apache.harmony.awt.gl.MultiRectArea$RectCash,int,int)>($r3, $r7, $r2, $i0, $i1);

        goto label4;
    }

    static void intersectRegions(int[], int[], org.apache.harmony.awt.gl.MultiRectArea$RectCash, int, int)
    {
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r0;
        org.apache.harmony.awt.gl.MultiRectAreaOp$Region $r1, $r2;
        int[] $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        $r3 := @parameter0: int[];

        $r4 := @parameter1: int[];

        $r0 := @parameter2: org.apache.harmony.awt.gl.MultiRectArea$RectCash;

        $i2 := @parameter3: int;

        $i0 := @parameter4: int;

        $r1 = new org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        specialinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void <init>(int[])>($r3);

        $r2 = new org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        specialinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void <init>(int[])>($r4);

        $i3 = $i2 + $i0;

        $r3 = newarray (int)[$i3];

        $r4 = newarray (int)[$i2];

        $r5 = newarray (int)[$i0];

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void createLevel(int[])>($r4);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void createLevel(int[])>($r5);

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void sortOrdered(int[],int[],int[])>($r4, $r5, $r3);

        $i2 = $r3[1];

        $i3 = $i2 - 1;

        $i2 = 2;

     label1:
        $i0 = $r3[0];

        if $i2 >= $i0 goto label9;

        $i0 = $i3 + 1;

        $i3 = $r3[$i2];

        $i3 = $i3 - 1;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void findActive(int,int)>($i0, $i3);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void findActive(int,int)>($i0, $i3);

        $i4 = 1;

        $i5 = 1;

     label2:
        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i6 = $r4[0];

        if $i4 >= $i6 goto label8;

        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i6 = $r4[0];

        if $i5 >= $i6 goto label8;

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i6 = $r4[$i4];

        $r4 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i7 = $i4 + 2;

        $i7 = $r4[$i7];

        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i8 = $r4[$i5];

        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $i5 + 2;

        $i1 = $r4[$i1];

        if $i6 > $i8 goto label5;

        if $i7 < $i8 goto label4;

        if $i7 > $i1 goto label3;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i8, $i0, $i7, $i3);

        $i4 = $i4 + 4;

        goto label2;

     label3:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i8, $i0, $i1, $i3);

        $i5 = $i5 + 4;

        goto label2;

     label4:
        $i4 = $i4 + 4;

        goto label2;

     label5:
        if $i1 < $i6 goto label7;

        if $i1 > $i7 goto label6;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i6, $i0, $i1, $i3);

        $i5 = $i5 + 4;

        goto label2;

     label6:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i6, $i0, $i7, $i3);

        $i4 = $i4 + 4;

        goto label2;

     label7:
        $i5 = $i5 + 4;

        goto label2;

     label8:
        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive(int)>($i3);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive(int)>($i3);

        $i2 = $i2 + 1;

        goto label1;

     label9:
        return;
    }

    static int[] simpleIntersect(org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea)
    {
        int[] $r0, $r1, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.harmony.awt.gl.MultiRectArea $r2, $r3;

        $r2 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r3 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        $r0 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r1 = $r3.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i7 = 1;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp: int[] createBuf(int)>(0);

        $i8 = 1;

     label01:
        $i0 = $r0[0];

        if $i7 >= $i0 goto label12;

        $i3 = $i7 + 1;

        $i0 = $r0[$i7];

        $i7 = $i3 + 1;

        $i3 = $r0[$i3];

        $i4 = $i7 + 1;

        $i1 = $r0[$i7];

        $i7 = $i4 + 1;

        $i4 = $r0[$i4];

        $i9 = 1;

     label02:
        $i2 = $r1[0];

        if $i9 >= $i2 goto label11;

        $i2 = $i9 + 1;

        $i10 = $r1[$i9];

        $i9 = $i2 + 1;

        $i5 = $r1[$i2];

        $i6 = $i9 + 1;

        $i2 = $r1[$i9];

        $i9 = $i6 + 1;

        $i6 = $r1[$i6];

        if $i0 > $i2 goto label07;

        if $i1 < $i10 goto label07;

        if $i3 > $i6 goto label07;

        if $i4 < $i5 goto label07;

        $r5 = staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp: int[] checkBufSize(int[],int)>($r4, 4);

        $r4 = $r5;

        $i11 = $i8 + 1;

        if $i0 <= $i10 goto label03;

        $i10 = $i0;

     label03:
        $r5[$i8] = $i10;

        $i8 = $i11 + 1;

        if $i3 <= $i5 goto label08;

        $i5 = $i3;

     label04:
        $r5[$i11] = $i5;

        $i5 = $i8 + 1;

        if $i1 <= $i2 goto label09;

     label05:
        $r5[$i8] = $i2;

        $i8 = $i5 + 1;

        if $i4 <= $i6 goto label10;

        $i2 = $i6;

     label06:
        $r5[$i5] = $i2;

     label07:
        goto label02;

     label08:
        goto label04;

     label09:
        $i2 = $i1;

        goto label05;

     label10:
        $i2 = $i4;

        goto label06;

     label11:
        goto label01;

     label12:
        $r4[0] = $i8;

        return $r4;
    }
}
