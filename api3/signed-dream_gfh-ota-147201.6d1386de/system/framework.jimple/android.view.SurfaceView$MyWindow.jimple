class android.view.SurfaceView$MyWindow extends android.view.IWindow$Stub
{
    int mCurHeight;
    int mCurWidth;
    private java.lang.ref.WeakReference mSurfaceView;

    public void <init>(android.view.SurfaceView)
    {
        android.view.SurfaceView$MyWindow $r0;
        android.view.SurfaceView $r1;
        java.lang.ref.WeakReference $r2;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $r1 := @parameter0: android.view.SurfaceView;

        specialinvoke $r0.<android.view.IWindow$Stub: void <init>()>();

        $r0.<android.view.SurfaceView$MyWindow: int mCurWidth> = -1;

        $r0.<android.view.SurfaceView$MyWindow: int mCurHeight> = -1;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        $r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView> = $r2;

        return;
    }

    public void dispatchAppVisibility(boolean)
    {
        android.view.SurfaceView$MyWindow $r0;
        boolean $z0;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $z0 := @parameter0: boolean;

        return;
    }

    public void dispatchGetNewSurface()
    {
        android.view.SurfaceView$MyWindow $r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.SurfaceView $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $r1 = $r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView>;

        $r2 = virtualinvoke $r1.<java.lang.ref.Reference: java.lang.Object get()>();

        $r3 = (android.view.SurfaceView) $r2;

        if $r3 == null goto label1;

        $r4 = $r3.<android.view.SurfaceView: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r4 = $r3.<android.view.SurfaceView: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;

     label1:
        return;
    }

    public void dispatchKey(android.view.KeyEvent)
    {
        android.view.SurfaceView$MyWindow $r0;
        android.view.KeyEvent $r1;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r3;
        android.view.SurfaceView $r4;
        android.view.IWindowSession $r5;
        android.view.Surface $r6;
        android.os.RemoteException $r7;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $r1 := @parameter0: android.view.KeyEvent;

        $r3 = $r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView>;

        $r2 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        $r4 = (android.view.SurfaceView) $r2;

        if $r4 == null goto label4;

        $r5 = $r4.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        if $r5 == null goto label5;

        $r6 = $r4.<android.view.SurfaceView: android.view.Surface mSurface>;

        if $r6 == null goto label6;

        $r5 = $r4.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r0 = $r4.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

     label1:
        interfaceinvoke $r5.<android.view.IWindowSession: void finishKey(android.view.IWindow)>($r0);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        return;

     label4:
        return;

     label5:
        return;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchPointer(android.view.MotionEvent, long)
    {
        android.view.SurfaceView$MyWindow $r0;
        android.view.MotionEvent $r1;
        long $l0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 := @parameter1: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected pointer event in surface: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SurfaceView", $r3);

        return;
    }

    public void dispatchTrackball(android.view.MotionEvent, long)
    {
        android.view.SurfaceView$MyWindow $r0;
        android.view.MotionEvent $r1;
        long $l0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $r1 := @parameter0: android.view.MotionEvent;

        $l0 := @parameter1: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trackball event in surface: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SurfaceView", $r3);

        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.view.SurfaceView$MyWindow $r0;
        java.lang.String $r1, $r2;
        android.os.ParcelFileDescriptor $r3;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.ParcelFileDescriptor;

        return;
    }

    public void resized(int, int, android.graphics.Rect, android.graphics.Rect, boolean)
    {
        android.view.SurfaceView$MyWindow $r0, $r3;
        int $i0, $i1, $i2;
        android.graphics.Rect $r1, $r2;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r5;
        android.view.SurfaceView $r6;
        android.view.IWindowSession $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $r2 := @parameter3: android.graphics.Rect;

        $z0 := @parameter4: boolean;

        $r5 = $r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView>;

        $r4 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

        $r6 = (android.view.SurfaceView) $r4;

        if $r6 == null goto label11;

        entermonitor $r0;

     label01:
        $i2 = $r0.<android.view.SurfaceView$MyWindow: int mCurWidth>;

        if $i2 != $i0 goto label02;

        $i2 = $r0.<android.view.SurfaceView$MyWindow: int mCurHeight>;

        if $i2 == $i1 goto label03;

     label02:
        $r0.<android.view.SurfaceView$MyWindow: int mCurWidth> = $i0;

        $r0.<android.view.SurfaceView$MyWindow: int mCurHeight> = $i1;

     label03:
        if $z0 == 0 goto label06;

     label04:
        $r7 = $r6.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r3 = $r6.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

     label05:
        interfaceinvoke $r7.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>($r3);

     label06:
        exitmonitor $r0;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r8;

     label10:
        $r9 := @caughtexception;

        goto label06;

     label11:
        return;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label04 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        android.view.SurfaceView$MyWindow $r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: android.view.SurfaceView$MyWindow;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected focus in surface: focus=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", touchEnabled=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SurfaceView", $r2);

        return;
    }
}
