public class android.view.animation.GridLayoutAnimationController extends android.view.animation.LayoutAnimationController
{
    public static final int DIRECTION_BOTTOM_TO_TOP;
    public static final int DIRECTION_HORIZONTAL_MASK;
    public static final int DIRECTION_LEFT_TO_RIGHT;
    public static final int DIRECTION_RIGHT_TO_LEFT;
    public static final int DIRECTION_TOP_TO_BOTTOM;
    public static final int DIRECTION_VERTICAL_MASK;
    public static final int PRIORITY_COLUMN;
    public static final int PRIORITY_NONE;
    public static final int PRIORITY_ROW;
    private float mColumnDelay;
    private int mDirection;
    private int mDirectionPriority;
    private float mRowDelay;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.util.TypedValue $r5;
        android.view.animation.Animation$Description $r6;
        float $f0;
        int $i0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <com.android.internal.R$styleable: int[] GridLayoutAnimation>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        $r6 = staticinvoke <android.view.animation.Animation$Description: android.view.animation.Animation$Description parseValue(android.util.TypedValue)>($r5);

        $f0 = $r6.<android.view.animation.Animation$Description: float value>;

        $r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay> = $f0;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        $r6 = staticinvoke <android.view.animation.Animation$Description: android.view.animation.Animation$Description parseValue(android.util.TypedValue)>($r5);

        $f0 = $r6.<android.view.animation.Animation$Description: float value>;

        $r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay> = $f0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        $r0.<android.view.animation.GridLayoutAnimationController: int mDirection> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.view.animation.Animation)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        android.view.animation.Animation $r1;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $r1 := @parameter0: android.view.animation.Animation;

        specialinvoke $r0.<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>($r1, 0.5F, 0.5F);

        return;
    }

    public void <init>(android.view.animation.Animation, float, float)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        android.view.animation.Animation $r1;
        float $f0, $f1;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $r1 := @parameter0: android.view.animation.Animation;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        specialinvoke $r0.<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>($r1);

        $r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay> = $f0;

        $r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay> = $f1;

        return;
    }

    private int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        android.view.animation.GridLayoutAnimationController$AnimationParameters $r1;
        int $i0, $i1;
        java.util.Random $r2;
        float $f0, $f1;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $r1 := @parameter0: android.view.animation.GridLayoutAnimationController$AnimationParameters;

        $i1 = virtualinvoke $r0.<android.view.animation.LayoutAnimationController: int getOrder()>();

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $i1 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int column>;

     label2:
        $i0 = $r0.<android.view.animation.GridLayoutAnimationController: int mDirection>;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label6;

        $i0 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $i0 = $i0 - 1;

        $i1 = $i0 - $i1;

        return $i1;

     label3:
        $i1 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $i1 = $i1 - 1;

        $i0 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int column>;

        $i1 = $i1 - $i0;

        goto label2;

     label4:
        $r2 = $r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer>;

        if $r2 != null goto label5;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        $r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer> = $r2;

     label5:
        $i1 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $f0 = (float) $i1;

        $r2 = $r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer>;

        $f1 = virtualinvoke $r2.<java.util.Random: float nextFloat()>();

        $f0 = $f0 * $f1;

        $i1 = (int) $f0;

        goto label2;

     label6:
        return $i1;
    }

    private int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        android.view.animation.GridLayoutAnimationController$AnimationParameters $r1;
        int $i0, $i1;
        java.util.Random $r2;
        float $f0, $f1;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $r1 := @parameter0: android.view.animation.GridLayoutAnimationController$AnimationParameters;

        $i1 = virtualinvoke $r0.<android.view.animation.LayoutAnimationController: int getOrder()>();

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $i1 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int row>;

     label2:
        $i0 = $r0.<android.view.animation.GridLayoutAnimationController: int mDirection>;

        $i0 = $i0 & 2;

        if $i0 != 2 goto label6;

        $i0 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $i0 = $i0 - 1;

        $i1 = $i0 - $i1;

        return $i1;

     label3:
        $i1 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $i1 = $i1 - 1;

        $i0 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int row>;

        $i1 = $i1 - $i0;

        goto label2;

     label4:
        $r2 = $r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer>;

        if $r2 != null goto label5;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        $r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer> = $r2;

     label5:
        $i1 = $r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $f0 = (float) $i1;

        $r2 = $r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer>;

        $f1 = virtualinvoke $r2.<java.util.Random: float nextFloat()>();

        $f0 = $f0 * $f1;

        $i1 = (int) $f0;

        goto label2;

     label6:
        return $i1;
    }

    public float getColumnDelay()
    {
        android.view.animation.GridLayoutAnimationController $r0;
        float f0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        f0 = $r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay>;

        return f0;
    }

    protected long getDelayForView(android.view.View)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        android.view.View $r1;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i5;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.animation.LayoutAnimationController$AnimationParameters $r3;
        android.view.animation.GridLayoutAnimationController$AnimationParameters $r4;
        android.view.animation.Animation $r5;
        long $l4;
        android.view.animation.Interpolator $r6;
        android.view.animation.LinearInterpolator $r7;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = $r2.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters>;

        $r4 = (android.view.animation.GridLayoutAnimationController$AnimationParameters) $r3;

        if $r4 != null goto label1;

        return 0L;

     label1:
        $i2 = specialinvoke $r0.<android.view.animation.GridLayoutAnimationController: int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)>($r4);

        $i3 = specialinvoke $r0.<android.view.animation.GridLayoutAnimationController: int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)>($r4);

        $i1 = $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $i0 = $r4.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $r5 = $r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        $l4 = virtualinvoke $r5.<android.view.animation.Animation: long getDuration()>();

        $f0 = $r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay>;

        $f1 = (float) $l4;

        $f0 = $f0 * $f1;

        $f1 = $r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay>;

        $f2 = (float) $l4;

        $f1 = $f1 * $f2;

        $r6 = $r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        if $r6 != null goto label2;

        $r7 = new android.view.animation.LinearInterpolator;

        specialinvoke $r7.<android.view.animation.LinearInterpolator: void <init>()>();

        $r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator> = $r7;

     label2:
        $i5 = $r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority>;

        lookupswitch($i5)
        {
            case 1: goto label5;
            case 2: goto label6;
            default: goto label3;
        };

     label3:
        $f2 = (float) $i2;

        $f2 = $f2 * $f0;

        $f3 = (float) $i3;

        $f3 = $f3 * $f1;

        $f2 = $f2 + $f3;

        $l4 = (long) $f2;

        $f2 = (float) $i0;

        $f0 = $f2 * $f0;

        $f2 = (float) $i1;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

     label4:
        $f1 = (float) $l4;

        $f1 = $f1 / $f0;

        $r6 = $r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        $f1 = interfaceinvoke $r6.<android.view.animation.Interpolator: float getInterpolation(float)>($f1);

        $f0 = $f1 * $f0;

        $l4 = (long) $f0;

        return $l4;

     label5:
        $f0 = (float) $i3;

        $f0 = $f0 * $f1;

        $i2 = $i2 * $i1;

        $f2 = (float) $i2;

        $f2 = $f2 * $f1;

        $f0 = $f0 + $f2;

        $l4 = (long) $f0;

        $f0 = (float) $i1;

        $f0 = $f0 * $f1;

        $i0 = $i0 * $i1;

        $f2 = (float) $i0;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

        goto label4;

     label6:
        $f1 = (float) $i2;

        $f1 = $f1 * $f0;

        $i2 = $i3 * $i0;

        $f2 = (float) $i2;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $l4 = (long) $f1;

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = $i1 * $i0;

        $f2 = (float) $i0;

        $f0 = $f2 * $f0;

        $f0 = $f1 + $f0;

        goto label4;
    }

    public int getDirection()
    {
        android.view.animation.GridLayoutAnimationController $r0;
        int i0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        i0 = $r0.<android.view.animation.GridLayoutAnimationController: int mDirection>;

        return i0;
    }

    public int getDirectionPriority()
    {
        android.view.animation.GridLayoutAnimationController $r0;
        int i0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        i0 = $r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority>;

        return i0;
    }

    public float getRowDelay()
    {
        android.view.animation.GridLayoutAnimationController $r0;
        float f0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        f0 = $r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay>;

        return f0;
    }

    public void setColumnDelay(float)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        float $f0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $f0 := @parameter0: float;

        $r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay> = $f0;

        return;
    }

    public void setDirection(int)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        int $i0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $i0 := @parameter0: int;

        $r0.<android.view.animation.GridLayoutAnimationController: int mDirection> = $i0;

        return;
    }

    public void setDirectionPriority(int)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        int $i0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $i0 := @parameter0: int;

        $r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority> = $i0;

        return;
    }

    public void setRowDelay(float)
    {
        android.view.animation.GridLayoutAnimationController $r0;
        float $f0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $f0 := @parameter0: float;

        $r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay> = $f0;

        return;
    }

    public boolean willOverlap()
    {
        android.view.animation.GridLayoutAnimationController $r0;
        float $f0;
        byte $b0;

        $r0 := @this: android.view.animation.GridLayoutAnimationController;

        $f0 = $r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay>;

        $b0 = $f0 cmpg 1.0F;

        if $b0 < 0 goto label1;

        $f0 = $r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay>;

        $b0 = $f0 cmpg 1.0F;

        if $b0 >= 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <android.view.animation.GridLayoutAnimationController: int PRIORITY_ROW> = 2;

        <android.view.animation.GridLayoutAnimationController: int PRIORITY_NONE> = 0;

        <android.view.animation.GridLayoutAnimationController: int PRIORITY_COLUMN> = 1;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_VERTICAL_MASK> = 2;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_TOP_TO_BOTTOM> = 0;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_RIGHT_TO_LEFT> = 1;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_LEFT_TO_RIGHT> = 0;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_HORIZONTAL_MASK> = 1;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_BOTTOM_TO_TOP> = 2;

        return;
    }
}
