public class org.apache.harmony.awt.gl.font.AndroidLineMetrics extends org.apache.harmony.awt.gl.font.LineMetricsImpl
{

    public void <init>(org.apache.harmony.awt.gl.font.AndroidFont, java.awt.font.FontRenderContext, java.lang.String)
    {
        org.apache.harmony.awt.gl.font.AndroidLineMetrics $r0;
        org.apache.harmony.awt.gl.font.AndroidFont $r1;
        java.awt.font.FontRenderContext $r2;
        java.lang.String $r3;
        int $i0, $i1;
        float $f0, $f1;
        double $d0;
        byte $b2;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidLineMetrics;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.AndroidFont;

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.lang.String;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: void <init>()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int numChars> = $i0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int baseLineIndex> = 0;

        $i0 = $r1.<org.apache.harmony.awt.gl.font.FontPeerImpl: int ascent>;

        $f0 = (float) $i0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float ascent> = $f0;

        $i0 = $r1.<org.apache.harmony.awt.gl.font.FontPeerImpl: int descent>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float descent> = $f0;

        $i0 = $r1.<org.apache.harmony.awt.gl.font.FontPeerImpl: int leading>;

        $f0 = (float) $i0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float leading> = $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float ascent>;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float descent>;

        $f0 = $f0 + $f1;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float leading>;

        $f0 = $f0 + $f1;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float height> = $f0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float underlineThickness> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float underlineOffset> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float strikethroughThickness> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float strikethroughOffset> = 0.0F;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float maxCharWidth> = 0.0F;

        $i0 = $r1.<org.apache.harmony.awt.gl.font.FontPeerImpl: int ascent>;

        $d0 = (double) $i0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lAscent> = $i0;

        $i0 = $r1.<org.apache.harmony.awt.gl.font.FontPeerImpl: int descent>;

        $d0 = (double) $i0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $i0 = neg $i0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lDescent> = $i0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float leading>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lLeading> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lAscent>;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lDescent>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lLeading>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lHeight> = $i0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float underlineThickness>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lUnderlineThickness> = $i0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float underlineOffset>;

        $b2 = $f0 cmpl 0.0F;

        if $b2 < 0 goto label3;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float underlineOffset>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lUnderlineOffset> = $i0;

     label1:
        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float strikethroughThickness>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lStrikethroughThickness> = $i0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float strikethroughOffset>;

        $b2 = $f0 cmpl 0.0F;

        if $b2 < 0 goto label4;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float strikethroughOffset>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lStrikethroughOffset> = $i0;

     label2:
        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float maxCharWidth>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lMaxCharWidth> = $i0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int units_per_EM> = 0;

        return;

     label3:
        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float underlineOffset>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lUnderlineOffset> = $i0;

        goto label1;

     label4:
        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float strikethroughOffset>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int lStrikethroughOffset> = $i0;

        goto label2;
    }

    public int getBaselineIndex()
    {
        org.apache.harmony.awt.gl.font.AndroidLineMetrics $r0;
        float[] $r1;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidLineMetrics;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float[] baselineOffsets>;

        if $r1 != null goto label1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.font.AndroidLineMetrics: float[] getBaselineOffsets()>();

     label1:
        i0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int baseLineIndex>;

        return i0;
    }

    public float[] getBaselineOffsets()
    {
        org.apache.harmony.awt.gl.font.AndroidLineMetrics $r0;
        float[] $r1;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidLineMetrics;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float[] baselineOffsets>;

        if $r1 != null goto label1;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: int baseLineIndex> = 0;

        $r1 = newarray (float)[3];

        $f0 = 0.0F;

        $r1[0] = $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float ascent>;

        $f0 = neg $f0;

        $f1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float descent>;

        $f0 = $f0 + $f1;

        $f0 = $f0 / 2.0F;

        $r1[1] = $f0;

        $f0 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float ascent>;

        $f0 = neg $f0;

        $r1[2] = $f0;

        $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float[] baselineOffsets> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float[] baselineOffsets>;

        return $r1;
    }
}
