public class org.apache.harmony.awt.gl.font.CommonGlyphVector extends java.awt.font.GlyphVector
{
    float ascent;
    public char[] charVector;
    float[] defaultPositions;
    float descent;
    java.awt.Font font;
    protected java.awt.geom.AffineTransform[] glsTransforms;
    protected java.awt.Shape[] gvShapes;
    float height;
    protected int layoutFlags;
    float leading;
    float[] logicalPositions;
    org.apache.harmony.awt.gl.font.FontPeerImpl peer;
    java.awt.geom.AffineTransform transform;
    public org.apache.harmony.awt.gl.font.Glyph[] vector;
    protected java.awt.font.FontRenderContext vectorFRC;
    public float[] visualPositions;

    public void <init>(java.lang.String, java.awt.font.FontRenderContext, java.awt.Font)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.lang.String $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;
        char[] $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>($r4, $r2, $r3, 0);

        return;
    }

    public void <init>(java.lang.String, java.awt.font.FontRenderContext, java.awt.Font, int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.lang.String $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;
        int $i0;
        char[] $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>($r4, $r2, $r3, $i0);

        return;
    }

    public void <init>(char[], java.awt.font.FontRenderContext, java.awt.Font)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        char[] $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>($r1, $r2, $r3, 0);

        return;
    }

    public void <init>(char[], java.awt.font.FontRenderContext, java.awt.Font, int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        char[] $r1, $r4;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;
        int $i0, $i1, $i2;
        java.awt.geom.AffineTransform $r5;
        java.awt.peer.FontPeer $r6;
        org.apache.harmony.awt.gl.font.FontPeerImpl $r7;
        java.awt.Shape[] $r8;
        float[] $r9;
        java.awt.geom.AffineTransform[] $r10;
        java.lang.String $r11;
        java.awt.font.LineMetrics $r12;
        org.apache.harmony.awt.gl.font.LineMetricsImpl $r13;
        float $f0;
        char $c3;
        org.apache.harmony.awt.gl.font.Glyph[] $r14;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        $i0 := @parameter3: int;

        specialinvoke $r0.<java.awt.font.GlyphVector: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = 0;

        $i1 = lengthof $r1;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Font font> = $r3;

        $r5 = virtualinvoke $r3.<java.awt.Font: java.awt.geom.AffineTransform getTransform()>();

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform> = $r5;

        $r6 = virtualinvoke $r3.<java.awt.Font: java.awt.peer.FontPeer getPeer()>();

        $r7 = (org.apache.harmony.awt.gl.font.FontPeerImpl) $r6;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.FontPeerImpl peer> = $r7;

        $r8 = newarray (java.awt.Shape)[$i1];

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape[] gvShapes> = $r8;

        $i2 = $i1 + 1;

        $i2 = $i2 << 1;

        $r9 = newarray (float)[$i2];

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] logicalPositions> = $r9;

        $i2 = $i1 + 1;

        $i2 = $i2 << 1;

        $r9 = newarray (float)[$i2];

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions> = $r9;

        $i2 = $i1 + 1;

        $i2 = $i2 << 1;

        $r9 = newarray (float)[$i2];

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] defaultPositions> = $r9;

        $r10 = newarray (java.awt.geom.AffineTransform)[$i1];

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms> = $r10;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: char[] charVector> = $r1;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.font.FontRenderContext vectorFRC> = $r2;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r1);

        $r12 = virtualinvoke $r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>($r11, $r2);

        $r13 = (org.apache.harmony.awt.gl.font.LineMetricsImpl) $r12;

        $f0 = virtualinvoke $r13.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getAscent()>();

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float ascent> = $f0;

        $f0 = virtualinvoke $r13.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getHeight()>();

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float height> = $f0;

        $f0 = virtualinvoke $r13.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getLeading()>();

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float leading> = $f0;

        $f0 = virtualinvoke $r13.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getDescent()>();

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float descent> = $f0;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = $i0;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        $r4 = newarray (char)[$i1];

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label2;

        $i2 = $i1 - $i0;

        $i2 = $i2 - 1;

        $c3 = $r1[$i2];

        $r4[$i0] = $c3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r7 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.FontPeerImpl peer>;

        $r14 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph[] getGlyphs(char[])>($r4);

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector> = $r14;

     label3:
        $r10 = newarray (java.awt.geom.AffineTransform)[$i1];

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms> = $r10;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: void setDefaultPositions()>();

        virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: void performDefaultLayout()>();

        return;

     label4:
        $r7 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.FontPeerImpl peer>;

        $r14 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph[] getGlyphs(char[])>($r1);

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector> = $r14;

        goto label3;
    }

    private void clearLayoutFlags(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        $i0 = $i0 ^ -1;

        $i0 = $i1 & $i0;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = $i0;

        return;
    }

    public boolean equals(java.awt.font.GlyphVector)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0, $r6;
        java.awt.font.GlyphVector $r1;
        int $i0, $i1, $i3;
        java.awt.font.FontRenderContext $r2, $r3;
        boolean $z0;
        java.awt.Font $r4, $r5;
        float[] $r7;
        float $f0, $f1;
        byte $b2;
        java.awt.geom.AffineTransform $r8, $r10;
        java.awt.geom.AffineTransform[] $r9;
        java.lang.ClassCastException $r11;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: java.awt.font.GlyphVector;

        if $r1 != $r0 goto label01;

        return 1;

     label01:
        if $r1 == null goto label23;

        $r2 = virtualinvoke $r1.<java.awt.font.GlyphVector: java.awt.font.FontRenderContext getFontRenderContext()>();

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.font.FontRenderContext vectorFRC>;

        $z0 = virtualinvoke $r2.<java.awt.font.FontRenderContext: boolean equals(java.awt.font.FontRenderContext)>($r3);

        if $z0 == 0 goto label02;

        $r4 = virtualinvoke $r1.<java.awt.font.GlyphVector: java.awt.Font getFont()>();

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Font font>;

        $z0 = virtualinvoke $r4.<java.awt.Font: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label03;

     label02:
        return 0;

     label03:
        $z0 = 1;

        $i1 = 0;

     label04:
        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

     label05:
        if $i1 >= $i0 goto label21;

     label06:
        $i0 = $i1 * 2;

        $r6 = (org.apache.harmony.awt.gl.font.CommonGlyphVector) $r1;

     label07:
        $r7 = $r6.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f0 = $r7[$i0];

        $r7 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f1 = $r7[$i0];

        $b2 = $f0 cmpl $f1;

     label08:
        if $b2 != 0 goto label15;

        $r6 = (org.apache.harmony.awt.gl.font.CommonGlyphVector) $r1;

     label09:
        $r7 = $r6.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i3 = $i0 + 1;

        $f0 = $r7[$i3];

        $r7 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i0 = $i0 + 1;

        $f1 = $r7[$i0];

        $b2 = $f0 cmpl $f1;

     label10:
        if $b2 != 0 goto label15;

        $i0 = virtualinvoke $r1.<java.awt.font.GlyphVector: int getGlyphCharIndex(int)>($i1);

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getGlyphCharIndex(int)>($i1);

     label11:
        if $i0 != $i3 goto label15;

        $z0 = 1;

     label12:
        if $z0 == 0 goto label14;

        $r8 = virtualinvoke $r1.<java.awt.font.GlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>($i1);

     label13:
        if $r8 != null goto label17;

        $r9 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms>;

        $r8 = $r9[$i1];

        if $r8 != null goto label16;

        $z0 = 1;

     label14:
        if $z0 != 0 goto label20;

        return 0;

     label15:
        $z0 = 0;

        goto label12;

     label16:
        $z0 = 0;

        goto label14;

     label17:
        $r9 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms>;

     label18:
        $r10 = $r9[$i1];

        $z0 = virtualinvoke $r10.<java.awt.geom.AffineTransform: boolean equals(java.lang.Object)>($r8);

     label19:
        goto label14;

     label20:
        $i1 = $i1 + 1;

        goto label04;

     label21:
        return $z0;

     label22:
        $r11 := @caughtexception;

     label23:
        return 0;

        catch java.lang.ClassCastException from label04 to label05 with label22;
        catch java.lang.ClassCastException from label06 to label07 with label22;
        catch java.lang.ClassCastException from label08 to label09 with label22;
        catch java.lang.ClassCastException from label10 to label11 with label22;
        catch java.lang.ClassCastException from label12 to label13 with label22;
        catch java.lang.ClassCastException from label18 to label19 with label22;
    }

    public char getChar(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0;
        char[] $r1;
        char $c1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: char[] charVector>;

        $c1 = $r1[$i0];

        return $c1;
    }

    public java.awt.Font getFont()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.awt.Font r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Font font>;

        return r1;
    }

    public java.awt.font.FontRenderContext getFontRenderContext()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.awt.font.FontRenderContext r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.font.FontRenderContext vectorFRC>;

        return r1;
    }

    public char getGlyphChar(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;
        char[] $r3;
        char $c2;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: char[] charVector>;

        $c2 = $r3[$i0];

        return $c2;
    }

    public int getGlyphCharIndex(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;
        char[] $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $i1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label3;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: char[] charVector>;

        $i1 = lengthof $r3;

        $i0 = $i1 - $i0;

        $i0 = $i0 - 1;

        return $i0;

     label3:
        return $i0;
    }

    public int[] getGlyphCharIndices(int, int, int[])
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        if $i0 < 0 goto label1;

        $i2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.44");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        if $i1 < 0 goto label3;

        $i2 = $i1 + $i0;

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i2 <= $i3 goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.45");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label4:
        if $r1 != null goto label5;

        $r1 = newarray (int)[$i1];

     label5:
        $i2 = 0;

     label6:
        if $i2 >= $i1 goto label7;

        $i3 = $i2 + $i0;

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getGlyphCharIndex(int)>($i3);

        $r1[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label6;

     label7:
        return $r1;
    }

    public int getGlyphCode(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.Glyph[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r3;
        org.apache.harmony.awt.gl.font.Glyph $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r4 = $r1[$i0];

        $i0 = virtualinvoke $r4.<org.apache.harmony.awt.gl.font.Glyph: int getGlyphCode()>();

        return $i0;
    }

    public int[] getGlyphCodes(int, int, int[])
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.harmony.awt.gl.font.Glyph[] $r5;
        org.apache.harmony.awt.gl.font.Glyph $r6;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        if $i0 < 0 goto label1;

        $i2 = $i1 + $i0;

        $i3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i2 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.44");

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        if $i1 >= 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.45");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label3:
        if $r1 != null goto label4;

        $r1 = newarray (int)[$i1];

     label4:
        $i2 = $i0;

     label5:
        $i3 = $i0 + $i1;

        if $i2 >= $i3 goto label6;

        $i3 = $i2 - $i0;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r6 = $r5[$i2];

        $i4 = virtualinvoke $r6.<org.apache.harmony.awt.gl.font.Glyph: int getGlyphCode()>();

        $r1[$i3] = $i4;

        $i2 = $i2 + 1;

        goto label5;

     label6:
        return $r1;
    }

    public java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Method is not implemented");

        throw $r1;
    }

    public java.awt.Shape getGlyphLogicalBounds(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.Glyph $r1;
        java.awt.geom.GeneralPath $r2;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.String $r4;
        org.apache.harmony.awt.gl.font.Glyph[] $r5;
        float[] $r6;
        java.awt.font.GlyphMetrics $r7;
        java.awt.geom.AffineTransform $r8, $r10;
        java.lang.Object $r9;
        double $d0, $d1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r1 = $r5[$i0];

        $r6 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i1 = $i0 * 2;

        $f0 = $r6[$i1];

        $r6 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $f1 = $r6[$i1];

        $r7 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphPointMetrics()>();

        $f2 = virtualinvoke $r7.<java.awt.font.GlyphMetrics: float getAdvanceX()>();

        $r2 = new java.awt.geom.GeneralPath;

        specialinvoke $r2.<java.awt.geom.GeneralPath: void <init>()>();

        $f3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float ascent>;

        $f3 = neg $f3;

        $f4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float leading>;

        $f3 = $f3 - $f4;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>(0.0F, $f3);

        $f3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float ascent>;

        $f3 = neg $f3;

        $f4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float leading>;

        $f3 = $f3 - $f4;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f2, $f3);

        $f3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float descent>;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f2, $f3);

        $f2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float descent>;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(0.0F, $f2);

        $f2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float ascent>;

        $f2 = neg $f2;

        $f3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float leading>;

        $f2 = $f2 - $f3;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(0.0F, $f2);

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void closePath()>();

        $r8 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $r9 = virtualinvoke $r8.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        $r8 = (java.awt.geom.AffineTransform) $r9;

        $r10 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>($i0);

        if $r10 == null goto label3;

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r10);

     label3:
        $d0 = (double) $f0;

        $d1 = (double) $f1;

        $r10 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1);

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>($r10);

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r8);

        return $r2;
    }

    public java.awt.font.GlyphMetrics getGlyphMetrics(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2;
        org.apache.harmony.awt.gl.font.Glyph[] $r3;
        org.apache.harmony.awt.gl.font.Glyph $r4;
        java.awt.font.GlyphMetrics $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r4.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphMetrics()>();

        return $r5;
    }

    public java.awt.Shape getGlyphOutline(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2;
        java.awt.Shape[] $r3;
        java.awt.Shape $r4;
        org.apache.harmony.awt.gl.font.Glyph[] $r5;
        org.apache.harmony.awt.gl.font.Glyph $r6;
        java.awt.geom.GeneralPath $r7;
        java.lang.Object $r8;
        java.awt.geom.AffineTransform $r9, $r10;
        float[] $r11;
        float $f0;
        double $d0, $d1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape[] gvShapes>;

        $r4 = $r3[$i0];

        if $r4 != null goto label3;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape[] gvShapes>;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r6 = $r5[$i0];

        $r4 = virtualinvoke $r6.<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape getShape()>();

        $r3[$i0] = $r4;

     label3:
        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape[] gvShapes>;

        $r4 = $r3[$i0];

        $r7 = (java.awt.geom.GeneralPath) $r4;

        $r8 = virtualinvoke $r7.<java.awt.geom.GeneralPath: java.lang.Object clone()>();

        $r7 = (java.awt.geom.GeneralPath) $r8;

        $r9 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $r8 = virtualinvoke $r9.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        $r9 = (java.awt.geom.AffineTransform) $r8;

        $r10 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>($i0);

        if $r10 == null goto label4;

        virtualinvoke $r9.<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>($r10);

     label4:
        $i0 = $i0 << 1;

        virtualinvoke $r7.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r9);

        $r11 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f0 = $r11[$i0];

        $d0 = (double) $f0;

        $r11 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i0 = $i0 + 1;

        $f0 = $r11[$i0];

        $d1 = (double) $f0;

        $r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1);

        virtualinvoke $r7.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r9);

        return $r7;
    }

    public java.awt.Rectangle getGlyphPixelBounds(int, java.awt.font.FontRenderContext, float, float)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1, $i2, $i3;
        java.awt.font.FontRenderContext $r1;
        float $f0, $f1, $f2;
        double $d0, $d1, $d2;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r3;
        org.apache.harmony.awt.gl.font.Glyph[] $r4;
        org.apache.harmony.awt.gl.font.Glyph $r5;
        java.awt.geom.AffineTransform $r6, $r11;
        float[] $r7;
        java.awt.Rectangle $r8, $r12;
        java.awt.Shape $r9;
        java.awt.geom.GeneralPath $r10;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.awt.font.FontRenderContext;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $i1 = $i0 << 1;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r5 = $r4[$i0];

        $i2 = virtualinvoke $r5.<org.apache.harmony.awt.gl.font.Glyph: int getWidth()>();

        if $i2 != 0 goto label3;

        $r6 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $r7 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f2 = $r7[$i1];

        $f0 = $f2 + $f0;

        $d0 = (double) $f0;

        $d1 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d0 = $d0 + $d1;

        $r7 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i0 = $i1 + 1;

        $f0 = $r7[$i0];

        $f0 = $f0 + $f1;

        $d1 = (double) $f0;

        $d2 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d1 = $d1 + $d2;

        $r8 = new java.awt.Rectangle;

        $i0 = (int) $d0;

        $i1 = (int) $d1;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i0, $i1, 0, 0);

        return $r8;

     label3:
        $r9 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphOutline(int)>($i0);

        $r10 = (java.awt.geom.GeneralPath) $r9;

        $d0 = (double) $f0;

        $d1 = (double) $f1;

        $r6 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1);

        if $r1 == null goto label4;

        $r11 = virtualinvoke $r1.<java.awt.font.FontRenderContext: java.awt.geom.AffineTransform getTransform()>();

        virtualinvoke $r6.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r11);

     label4:
        virtualinvoke $r10.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r6);

        $r12 = virtualinvoke $r10.<java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()>();

        $r8 = new java.awt.Rectangle;

        $d0 = virtualinvoke $r12.<java.awt.Rectangle: double getX()>();

        $i0 = (int) $d0;

        $d0 = virtualinvoke $r12.<java.awt.Rectangle: double getY()>();

        $i1 = (int) $d0;

        $d0 = virtualinvoke $r12.<java.awt.Rectangle: double getWidth()>();

        $i2 = (int) $d0;

        $i2 = $i2 - 1;

        $d0 = virtualinvoke $r12.<java.awt.Rectangle: double getHeight()>();

        $i3 = (int) $d0;

        $i3 = $i3 - 1;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r8;
    }

    public java.awt.geom.Point2D getGlyphPosition(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.awt.geom.Point2D$Float $r1;
        org.apache.harmony.awt.gl.font.Glyph[] $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.String $r4;
        float[] $r5;
        float $f0, $f1;
        java.awt.geom.AffineTransform $r6;
        boolean $z0;
        double $d0, $d1, $d2;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r2;

        if $i0 > $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        $i1 = $i0 << 1;

        $r1 = new java.awt.geom.Point2D$Float;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f0 = $r5[$i1];

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i1 = $i1 + 1;

        $f1 = $r5[$i1];

        specialinvoke $r1.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f0, $f1);

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r2;

        if $i0 != $i1 goto label3;

        return $r1;

     label3:
        $r6 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>($i0);

        if $r6 == null goto label4;

        $z0 = virtualinvoke $r6.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z0 != 0 goto label5;

        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D$Float: double getX()>();

        $d1 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d0 = $d0 + $d1;

        $d1 = virtualinvoke $r1.<java.awt.geom.Point2D$Float: double getY()>();

        $d2 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d1 = $d1 + $d2;

        virtualinvoke $r1.<java.awt.geom.Point2D$Float: void setLocation(double,double)>($d0, $d1);

        return $r1;

     label4:
        return $r1;

     label5:
        return $r1;
    }

    public float[] getGlyphPositions(int, int, float[])
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1, $i2, $i3;
        float[] $r1, $r5;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 := @parameter2: float[];

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        $i0 = $i0 + 1;

        $i0 = $i0 << 1;

        $i1 = $i1 * 2;

        $i2 = $i2 * 2;

        if $i1 < 0 goto label1;

        $i3 = $i2 + $i1;

        if $i3 <= $i0 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.44");

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        if $i2 >= 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.45");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label3:
        if $r1 != null goto label4;

        $r1 = newarray (float)[$i2];

     label4:
        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i1, $r1, 0, $i2);

        return $r1;
    }

    public java.awt.geom.AffineTransform getGlyphTransform(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.lang.String $r1;
        org.apache.harmony.awt.gl.font.Glyph[] $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.awt.geom.AffineTransform[] $r4;
        java.awt.geom.AffineTransform $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r1 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label2:
        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms>;

        $r5 = $r4[$i0];

        return $r5;
    }

    public java.awt.Shape getGlyphVisualBounds(int)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1, $i2;
        java.awt.geom.AffineTransform $r1, $r7, $r8;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r3;
        double $d0, $d1;
        org.apache.harmony.awt.gl.font.Glyph[] $r4;
        org.apache.harmony.awt.gl.font.Glyph $r5;
        java.awt.geom.Rectangle2D$Float $r6;
        float $f0, $f1;
        boolean $z0;
        java.awt.font.GlyphMetrics $r9;
        java.awt.geom.Rectangle2D $r10;
        float[] $r11;
        java.awt.Shape $r12;
        java.awt.geom.GeneralPath $r13;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $i1 = $i0 << 1;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $d0 = virtualinvoke $r1.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d1 = virtualinvoke $r1.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r5 = $r4[$i0];

        $i2 = virtualinvoke $r5.<org.apache.harmony.awt.gl.font.Glyph: int getWidth()>();

        if $i2 != 0 goto label3;

        $r6 = new java.awt.geom.Rectangle2D$Float;

        $f0 = (float) $d0;

        $f1 = (float) $d1;

        specialinvoke $r6.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f0, $f1, 0.0F, 0.0F);

        return $r6;

     label3:
        $r1 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1);

        $r7 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>($i0);

        $r8 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $z0 = virtualinvoke $r8.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z0 == 0 goto label5;

        if $r7 == null goto label4;

        $z0 = virtualinvoke $r7.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z0 == 0 goto label5;

     label4:
        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $r5 = $r4[$i0];

        $r9 = virtualinvoke $r5.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphMetrics()>();

        $r10 = virtualinvoke $r9.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $r11 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f0 = $r11[$i1];

        $d0 = (double) $f0;

        $r11 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i0 = $i1 + 1;

        $f0 = $r11[$i0];

        $d1 = (double) $f0;

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void translate(double,double)>($d0, $d1);

        $r12 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r10);

        return $r12;

     label5:
        $r12 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphOutline(int)>($i0);

        $r13 = (java.awt.geom.GeneralPath) $r12;

        virtualinvoke $r13.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r1);

        $r10 = virtualinvoke $r13.<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r10;
    }

    public int getLayoutFlags()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        i0 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        return i0;
    }

    public java.awt.geom.Rectangle2D getLogicalBounds()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.awt.geom.Rectangle2D$Float $r1;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1;
        float[] $r2, $r3;
        int $i0;
        java.awt.geom.AffineTransform $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f1 = $r2[0];

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i0 = lengthof $r3;

        $i0 = $i0 - 2;

        $f0 = $r2[$i0];

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $d0 = virtualinvoke $r4.<java.awt.geom.AffineTransform: double getScaleY()>();

        $r1 = new java.awt.geom.Rectangle2D$Float;

        $f2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float ascent>;

        $f2 = neg $f2;

        $f3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float leading>;

        $f2 = $f2 - $f3;

        $d1 = (double) $f2;

        $d1 = $d1 * $d0;

        $f2 = (float) $d1;

        $f3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float height>;

        $d1 = (double) $f3;

        $d0 = $d1 * $d0;

        $f3 = (float) $d0;

        specialinvoke $r1.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f1, $f2, $f0, $f3);

        return $r1;
    }

    public int getNumGlyphs()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        org.apache.harmony.awt.gl.font.Glyph[] $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.awt.Shape getOutline()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.awt.Shape $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getOutline(float,float)>(0.0F, 0.0F);

        return $r1;
    }

    public java.awt.Shape getOutline(float, float)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        float $f0, $f1;
        java.awt.geom.GeneralPath $r1, $r4;
        double $d0, $d1;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.Glyph[] $r2;
        java.awt.Shape $r3;
        java.awt.geom.AffineTransform $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int)>(0);

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphOutline(int)>($i0);

        $r4 = (java.awt.geom.GeneralPath) $r3;

        $d1 = (double) $f0;

        $d0 = (double) $f1;

        $r5 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d1, $d0);

        virtualinvoke $r4.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r5);

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r4, 0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        java.awt.font.FontRenderContext $r1;
        float $f0, $f1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        int $i0, $i1, $i3, $i4;
        java.awt.Rectangle $r2;
        byte $b2;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: java.awt.font.FontRenderContext;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $d0 = 0.0;

        $d1 = 0.0;

        $d2 = 0.0;

        $d3 = 0.0;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 >= $i1 goto label7;

        $r2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Rectangle getGlyphPixelBounds(int,java.awt.font.FontRenderContext,float,float)>($i0, $r1, 0.0F, 0.0F);

        $d4 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinX()>();

        $d5 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinY()>();

        $d6 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxX()>();

        $d7 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxY()>();

        if $i0 != 0 goto label2;

        $d0 = $d4;

        $d1 = $d5;

        $d2 = $d6;

        $d3 = $d7;

     label2:
        $b2 = $d0 cmpl $d4;

        if $b2 <= 0 goto label3;

        $d0 = $d4;

     label3:
        $b2 = $d1 cmpl $d5;

        if $b2 <= 0 goto label4;

        $d1 = $d5;

     label4:
        $b2 = $d2 cmpg $d6;

        if $b2 >= 0 goto label5;

        $d2 = $d6;

     label5:
        $b2 = $d3 cmpg $d7;

        if $b2 >= 0 goto label6;

        $d3 = $d7;

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        $r2 = new java.awt.Rectangle;

        $d4 = (double) $f0;

        $d4 = $d4 + $d0;

        $i0 = (int) $d4;

        $d4 = (double) $f1;

        $d4 = $d4 + $d1;

        $i1 = (int) $d4;

        $d0 = $d2 - $d0;

        $i3 = (int) $d0;

        $d1 = $d3 - $d1;

        $i4 = (int) $d1;

        specialinvoke $r2.<java.awt.Rectangle: void <init>(int,int,int,int)>($i0, $i1, $i3, $i4);

        return $r2;
    }

    public java.awt.geom.Rectangle2D getVisualBounds()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0;
        int $i0, $i1;
        java.awt.Shape $r1;
        java.awt.geom.Rectangle2D $r2;
        double $d0, $d1;
        byte $b2;
        java.awt.geom.Rectangle2D$Float $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $f4 = 0.0F;

        $f5 = 0.0F;

        $f6 = 0.0F;

        $f7 = 0.0F;

        $z0 = 1;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 >= $i1 goto label8;

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getWidth()>();

        $b2 = $d0 cmpl 0.0;

        if $b2 != 0 goto label3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getX()>();

        $f1 = (float) $d0;

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getY()>();

        $f3 = (float) $d0;

        $d0 = (double) $f1;

        $d1 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getWidth()>();

        $d0 = $d0 + $d1;

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getHeight()>();

        $f2 = (float) $d0;

        $f2 = $f3 + $f2;

        if $z0 == 0 goto label4;

        $f4 = $f1;

        $f5 = $f3;

        $f6 = $f0;

        $f7 = $f2;

        $z0 = 0;

        goto label2;

     label4:
        $b2 = $f4 cmpl $f1;

        if $b2 <= 0 goto label5;

        $f4 = $f1;

     label5:
        $b2 = $f5 cmpl $f3;

        if $b2 <= 0 goto label6;

        $f5 = $f3;

     label6:
        $b2 = $f6 cmpg $f0;

        if $b2 >= 0 goto label7;

        $f6 = $f0;

     label7:
        $b2 = $f7 cmpg $f2;

        if $b2 >= 0 goto label2;

        $f7 = $f2;

        goto label2;

     label8:
        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        if $i0 == 0 goto label9;

        $r3 = new java.awt.geom.Rectangle2D$Float;

        $f0 = $f6 - $f4;

        $f7 = $f7 - $f5;

        specialinvoke $r3.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f4, $f5, $f0, $f7);

        return $r3;

     label9:
        return null;
    }

    public void performDefaultLayout()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        float[] $r1, $r2, $r3;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] logicalPositions>;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] logicalPositions>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: void clearLayoutFlags(int)>(2);

        return;
    }

    void setDefaultPositions()
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.font.Glyph[] $r1;
        org.apache.harmony.awt.gl.font.Glyph $r2;
        java.awt.font.GlyphMetrics $r3;
        float $f0, $f1, $f2;
        float[] $r4, $r5;
        java.awt.geom.AffineTransform $r6;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        $i2 = 1;

     label1:
        if $i2 > $i1 goto label2;

        $i0 = $i2 << 1;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i3 = $i2 - 1;

        $r2 = $r1[$i3];

        $r3 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphPointMetrics()>();

        $f0 = virtualinvoke $r3.<java.awt.font.GlyphMetrics: float getAdvanceX()>();

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i3 = $i2 - 1;

        $r2 = $r1[$i3];

        $r3 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphPointMetrics()>();

        $f1 = virtualinvoke $r3.<java.awt.font.GlyphMetrics: float getAdvanceY()>();

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] defaultPositions>;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] defaultPositions>;

        $i3 = $i0 - 2;

        $f2 = $r5[$i3];

        $f0 = $f2 + $f0;

        $r4[$i0] = $f0;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] defaultPositions>;

        $i3 = $i0 + 1;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] defaultPositions>;

        $i0 = $i0 - 1;

        $f0 = $r5[$i0];

        $f1 = $f0 + $f1;

        $r4[$i3] = $f1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r6 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform transform>;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] defaultPositions>;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] logicalPositions>;

        $i1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        $i1 = $i1 + 1;

        virtualinvoke $r6.<java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>($r4, 0, $r5, 0, $i1);

        return;
    }

    public void setGlyphPosition(int, java.awt.geom.Point2D)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.awt.geom.Point2D $r1;
        float $f0, $f1, $f2;
        org.apache.harmony.awt.gl.font.Glyph[] $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.String $r4;
        double $d0;
        float[] $r5;
        byte $b2;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.awt.geom.Point2D;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r2;

        if $i0 > $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d0;

        $i0 = $i0 << 1;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $f2 = $r5[$i0];

        $b2 = $f0 cmpl $f2;

        if $b2 != 0 goto label3;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i1 = $i0 + 1;

        $f2 = $r5[$i1];

        $b2 = $f1 cmpl $f2;

        if $b2 == 0 goto label4;

     label3:
        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $r5[$i0] = $f0;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        $i0 = $i0 + 1;

        $r5[$i0] = $f1;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        $i0 = $i0 | 2;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = $i0;

        return;

     label4:
        return;
    }

    public void setGlyphPositions(int, int, float[])
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        float[] $r1, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 := @parameter2: float[];

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        $i0 = $i0 + 1;

        $i0 = $i0 << 1;

        $i1 = $i1 * 2;

        $i2 = $i2 * 2;

        if $i1 < 0 goto label1;

        $i3 = $i2 + $i1;

        if $i3 <= $i0 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.44");

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        if $i2 >= 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.45");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label3:
        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r5, $i1, $i2);

        $i1 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        $i1 = $i1 & 2;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = $i1;

        return;
    }

    public void setGlyphPositions(float[])
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        float[] $r1, $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $r1 := @parameter0: float[];

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>();

        $i0 = $i0 + 1;

        $i0 = $i0 << 1;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.46");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r4 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] visualPositions>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i0);

        $i0 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        $i0 = $i0 & 2;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = $i0;

        return;
    }

    public void setGlyphTransform(int, java.awt.geom.AffineTransform)
    {
        org.apache.harmony.awt.gl.font.CommonGlyphVector $r0;
        int $i0, $i1;
        java.awt.geom.AffineTransform $r1, $r6;
        org.apache.harmony.awt.gl.font.Glyph[] $r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.String $r4;
        boolean $z0;
        java.awt.geom.AffineTransform[] $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.CommonGlyphVector;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.awt.geom.AffineTransform;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: org.apache.harmony.awt.gl.font.Glyph[] vector>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.43");

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z0 == 0 goto label4;

     label3:
        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms>;

        $r5[$i0] = null;

        return;

     label4:
        $r5 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform[] glsTransforms>;

        $r6 = new java.awt.geom.AffineTransform;

        specialinvoke $r6.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r1);

        $r5[$i0] = $r6;

        $i0 = $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags>;

        $i0 = $i0 | 1;

        $r0.<org.apache.harmony.awt.gl.font.CommonGlyphVector: int layoutFlags> = $i0;

        return;
    }
}
