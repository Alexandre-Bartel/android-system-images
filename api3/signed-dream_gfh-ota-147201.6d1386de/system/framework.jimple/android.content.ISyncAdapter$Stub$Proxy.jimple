class android.content.ISyncAdapter$Stub$Proxy extends java.lang.Object implements android.content.ISyncAdapter
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.content.ISyncAdapter$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.content.ISyncAdapter$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.content.ISyncAdapter$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.content.ISyncAdapter$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.content.ISyncAdapter$Stub$Proxy;

        r1 = $r0.<android.content.ISyncAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void cancelSync() throws android.os.RemoteException
    {
        android.content.ISyncAdapter$Stub$Proxy $r0;
        android.os.Parcel $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.content.ISyncAdapter$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.ISyncAdapter");

        $r2 = $r0.<android.content.ISyncAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, null, 1);

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.content.ISyncAdapter$Stub$Proxy $r0;

        $r0 := @this: android.content.ISyncAdapter$Stub$Proxy;

        return "android.content.ISyncAdapter";
    }

    public void startSync(android.content.ISyncContext, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ISyncAdapter$Stub$Proxy $r0;
        android.content.ISyncContext $r1;
        java.lang.String $r2;
        android.os.Bundle $r3;
        android.os.Parcel $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.content.ISyncAdapter$Stub$Proxy;

        $r1 := @parameter0: android.content.ISyncContext;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.ISyncAdapter");

        if $r1 == null goto label5;

        $r5 = interfaceinvoke $r1.<android.content.ISyncContext: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        if $r3 == null goto label6;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r4, 0);

     label3:
        $r5 = $r0.<android.content.ISyncAdapter$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r4, null, 1);

     label4:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r5 = null;

        goto label2;

     label6:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label3;

     label8:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
