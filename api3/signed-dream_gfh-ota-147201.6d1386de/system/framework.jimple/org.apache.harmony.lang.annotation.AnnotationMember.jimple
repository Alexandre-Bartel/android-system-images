public class org.apache.harmony.lang.annotation.AnnotationMember extends java.lang.Object implements java.io.Serializable
{
    protected static final char ARRAY;
    protected static final char ERROR;
    protected static final java.lang.Object NO_VALUE;
    protected static final char OTHER;
    protected transient java.lang.reflect.Method definingMethod;
    protected transient java.lang.Class elementType;
    protected final java.lang.String name;
    protected final char tag;
    protected final java.lang.Object value;

    static void <clinit>()
    {
        org.apache.harmony.lang.annotation.AnnotationMember$DefaultValues $r0;

        <org.apache.harmony.lang.annotation.AnnotationMember: char OTHER> = 42;

        <org.apache.harmony.lang.annotation.AnnotationMember: char ERROR> = 33;

        <org.apache.harmony.lang.annotation.AnnotationMember: char ARRAY> = 91;

        $r0 = <org.apache.harmony.lang.annotation.AnnotationMember$DefaultValues: org.apache.harmony.lang.annotation.AnnotationMember$DefaultValues NO_VALUE>;

        <org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object NO_VALUE> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Class $r3;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name> = $r1;

        if $r2 != null goto label2;

        $r2 = <org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object NO_VALUE>;

     label1:
        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value> = $r2;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = $r2 instanceof java.lang.Throwable;

        if $z0 == 0 goto label3;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag> = 33;

        return;

     label2:
        goto label1;

     label3:
        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label4;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag> = 91;

        return;

     label4:
        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag> = 42;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object, java.lang.Class, java.lang.reflect.Method)
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.Class $r3, $r5;
        java.lang.reflect.Method $r4;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Class;

        $r4 := @parameter3: java.lang.reflect.Method;

        specialinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationMember: void <init>(java.lang.String,java.lang.Object)>($r1, $r2);

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod> = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r3 != $r5 goto label1;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Integer";

        return;

     label1:
        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r3 != $r5 goto label2;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Boolean";

        return;

     label2:
        $r5 = <java.lang.Character: java.lang.Class TYPE>;

        if $r3 != $r5 goto label3;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Character";

        return;

     label3:
        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        if $r3 != $r5 goto label4;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Float";

        return;

     label4:
        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        if $r3 != $r5 goto label5;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Double";

        return;

     label5:
        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        if $r3 != $r5 goto label6;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Long";

        return;

     label6:
        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        if $r3 != $r5 goto label7;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Short";

        return;

     label7:
        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r3 != $r5 goto label8;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = class "java/lang/Byte";

        return;

     label8:
        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = $r3;

        return;
    }

    public java.lang.Object copyValue() throws java.lang.Throwable
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        char $c0;
        java.lang.Object $r1;
        int $i1;
        java.lang.Class $r2;
        int[] $r3;
        byte[] $r4;
        short[] $r5;
        long[] $r6;
        char[] $r7;
        boolean[] $r8;
        float[] $r9;
        double[] $r10;
        java.lang.Object[] $r11;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != 91 goto label01;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r1);

        if $i1 != 0 goto label02;

     label01:
        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        return $r1;

     label02:
        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != class "[I" goto label03;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r3 = (int[]) $r1;

        $r3 = (int[]) $r3;

        $r1 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label03:
        if $r2 != class "[B" goto label04;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r4 = (byte[]) $r1;

        $r4 = (byte[]) $r4;

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label04:
        if $r2 != class "[S" goto label05;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r5 = (short[]) $r1;

        $r5 = (short[]) $r5;

        $r1 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label05:
        if $r2 != class "[J" goto label06;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r6 = (long[]) $r1;

        $r6 = (long[]) $r6;

        $r1 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label06:
        if $r2 != class "[C" goto label07;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r7 = (char[]) $r1;

        $r7 = (char[]) $r7;

        $r1 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label07:
        if $r2 != class "[Z" goto label08;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r8 = (boolean[]) $r1;

        $r8 = (boolean[]) $r8;

        $r1 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label08:
        if $r2 != class "[F" goto label09;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r9 = (float[]) $r1;

        $r9 = (float[]) $r9;

        $r1 = virtualinvoke $r9.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label09:
        if $r2 != class "[D" goto label10;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r10 = (double[]) $r1;

        $r10 = (double[]) $r10;

        $r1 = virtualinvoke $r10.<java.lang.Object: java.lang.Object clone()>();

        return $r1;

     label10:
        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r11 = (java.lang.Object[]) $r1;

        $r11 = (java.lang.Object[]) $r11;

        $r1 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public boolean equalArrayValue(java.lang.Object)
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        java.lang.Object[] $r3, $r4;
        java.lang.Class $r5, $r6;
        int[] $r7, $r8;
        byte[] $r9, $r10;
        short[] $r11, $r12;
        long[] $r13, $r14;
        char[] $r15, $r16;
        boolean[] $r17, $r18;
        float[] $r19, $r20;
        double[] $r21, $r22;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = $r2 instanceof java.lang.Object[];

        if $z0 == 0 goto label01;

        $z0 = $r1 instanceof java.lang.Object[];

        if $z0 == 0 goto label01;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r3 = (java.lang.Object[]) $r2;

        $r3 = (java.lang.Object[]) $r3;

        $r4 = (java.lang.Object[]) $r1;

        $r4 = (java.lang.Object[]) $r4;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4);

        return $z0;

     label01:
        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r5 == $r6 goto label02;

        return 0;

     label02:
        if $r5 != class "[I" goto label03;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r7 = (int[]) $r2;

        $r7 = (int[]) $r7;

        $r8 = (int[]) $r1;

        $r8 = (int[]) $r8;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r7, $r8);

        return $z0;

     label03:
        if $r5 != class "[B" goto label04;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r9 = (byte[]) $r2;

        $r9 = (byte[]) $r9;

        $r10 = (byte[]) $r1;

        $r10 = (byte[]) $r10;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r9, $r10);

        return $z0;

     label04:
        if $r5 != class "[S" goto label05;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r11 = (short[]) $r2;

        $r11 = (short[]) $r11;

        $r12 = (short[]) $r1;

        $r12 = (short[]) $r12;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(short[],short[])>($r11, $r12);

        return $z0;

     label05:
        if $r5 != class "[J" goto label06;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r13 = (long[]) $r2;

        $r13 = (long[]) $r13;

        $r14 = (long[]) $r1;

        $r14 = (long[]) $r14;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>($r13, $r14);

        return $z0;

     label06:
        if $r5 != class "[C" goto label07;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r15 = (char[]) $r2;

        $r15 = (char[]) $r15;

        $r16 = (char[]) $r1;

        $r16 = (char[]) $r16;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>($r15, $r16);

        return $z0;

     label07:
        if $r5 != class "[Z" goto label08;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r17 = (boolean[]) $r2;

        $r17 = (boolean[]) $r17;

        $r18 = (boolean[]) $r1;

        $r18 = (boolean[]) $r18;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(boolean[],boolean[])>($r17, $r18);

        return $z0;

     label08:
        if $r5 != class "[F" goto label09;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r19 = (float[]) $r2;

        $r19 = (float[]) $r19;

        $r20 = (float[]) $r1;

        $r20 = (float[]) $r20;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r19, $r20);

        return $z0;

     label09:
        if $r5 != class "[D" goto label10;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r21 = (double[]) $r2;

        $r21 = (double[]) $r21;

        $r22 = (double[]) $r1;

        $r22 = (double[]) $r22;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r21, $r22);

        return $z0;

     label10:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0, $r2;
        java.lang.Object $r1, $r5;
        boolean $z0;
        java.lang.String $r3, $r4;
        char $c0, $c1;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.harmony.lang.annotation.AnnotationMember;

        if $z0 == 0 goto label4;

        $r2 = (org.apache.harmony.lang.annotation.AnnotationMember) $r1;

        $r3 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $r4 = $r2.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        $c1 = $r2.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != $c1 goto label4;

        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != 91 goto label2;

        $r1 = $r2.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = virtualinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationMember: boolean equalArrayValue(java.lang.Object)>($r1);

        return $z0;

     label2:
        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != 33 goto label3;

        return 0;

     label3:
        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r5 = $r2.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z0;

     label4:
        return 0;
    }

    public int hashCode()
    {
        int $i0, $i2;
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        java.lang.String $r1;
        char $c1;
        java.lang.Object $r2;
        java.lang.Class $r3;
        int[] $r4;
        byte[] $r5;
        short[] $r6;
        long[] $r7;
        char[] $r8;
        boolean[] $r9;
        float[] $r10;
        double[] $r11;
        java.lang.Object[] $r12;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = $i0 * 127;

        $c1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c1 != 91 goto label9;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "[I" goto label1;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r4 = (int[]) $r2;

        $r4 = (int[]) $r4;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r4);

        $i0 = $i2 ^ $i0;

        return $i0;

     label1:
        if $r3 != class "[B" goto label2;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r5 = (byte[]) $r2;

        $r5 = (byte[]) $r5;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r5);

        $i0 = $i2 ^ $i0;

        return $i0;

     label2:
        if $r3 != class "[S" goto label3;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r6 = (short[]) $r2;

        $r6 = (short[]) $r6;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(short[])>($r6);

        $i0 = $i2 ^ $i0;

        return $i0;

     label3:
        if $r3 != class "[J" goto label4;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r7 = (long[]) $r2;

        $r7 = (long[]) $r7;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(long[])>($r7);

        $i0 = $i2 ^ $i0;

        return $i0;

     label4:
        if $r3 != class "[C" goto label5;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r8 = (char[]) $r2;

        $r8 = (char[]) $r8;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(char[])>($r8);

        $i0 = $i2 ^ $i0;

        return $i0;

     label5:
        if $r3 != class "[Z" goto label6;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r9 = (boolean[]) $r2;

        $r9 = (boolean[]) $r9;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(boolean[])>($r9);

        $i0 = $i2 ^ $i0;

        return $i0;

     label6:
        if $r3 != class "[F" goto label7;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r10 = (float[]) $r2;

        $r10 = (float[]) $r10;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r10);

        $i0 = $i2 ^ $i0;

        return $i0;

     label7:
        if $r3 != class "[D" goto label8;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r11 = (double[]) $r2;

        $r11 = (double[]) $r11;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r11);

        $i0 = $i2 ^ $i0;

        return $i0;

     label8:
        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r12 = (java.lang.Object[]) $r2;

        $r12 = (java.lang.Object[]) $r12;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r12);

        $i0 = $i2 ^ $i0;

        return $i0;

     label9:
        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i2 ^ $i0;

        return $i0;
    }

    public void rethrowError() throws java.lang.Throwable
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        java.io.ByteArrayInputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        java.io.ObjectInputStream $r3;
        java.io.ObjectOutputStream $r4;
        char $c0;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.TypeNotPresentException $r6, $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.lang.EnumConstantNotPresentException $r10, $r11;
        java.lang.Class $r12;
        java.lang.ArrayStoreException $r13, $r14;
        java.lang.StackTraceElement[] $r15;
        int $i1;
        byte[] $r16;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != 33 goto label6;

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = $r5 instanceof java.lang.TypeNotPresentException;

        if $z0 == 0 goto label1;

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r6 = (java.lang.TypeNotPresentException) $r5;

        $r7 = new java.lang.TypeNotPresentException;

        $r8 = virtualinvoke $r6.<java.lang.TypeNotPresentException: java.lang.String typeName()>();

        $r9 = virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.TypeNotPresentException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r9);

        throw $r7;

     label1:
        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = $r5 instanceof java.lang.EnumConstantNotPresentException;

        if $z0 == 0 goto label2;

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r10 = (java.lang.EnumConstantNotPresentException) $r5;

        $r11 = new java.lang.EnumConstantNotPresentException;

        $r12 = virtualinvoke $r10.<java.lang.EnumConstantNotPresentException: java.lang.Class enumType()>();

        $r8 = virtualinvoke $r10.<java.lang.EnumConstantNotPresentException: java.lang.String constantName()>();

        specialinvoke $r11.<java.lang.EnumConstantNotPresentException: void <init>(java.lang.Class,java.lang.String)>($r12, $r8);

        throw $r11;

     label2:
        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = $r5 instanceof java.lang.ArrayStoreException;

        if $z0 == 0 goto label3;

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r13 = (java.lang.ArrayStoreException) $r5;

        $r14 = new java.lang.ArrayStoreException;

        $r8 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r14.<java.lang.ArrayStoreException: void <init>(java.lang.String)>($r8);

        throw $r14;

     label3:
        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r9 = (java.lang.Throwable) $r5;

        $r15 = virtualinvoke $r9.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r2 = new java.io.ByteArrayOutputStream;

        if $r15 != null goto label5;

        $i1 = 512;

     label4:
        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        $r4 = new java.io.ObjectOutputStream;

        specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r2);

        virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        virtualinvoke $r4.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke $r4.<java.io.ObjectOutputStream: void close()>();

        $r1 = new java.io.ByteArrayInputStream;

        $r16 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r16);

        $r3 = new java.io.ObjectInputStream;

        specialinvoke $r3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r1);

        $r5 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r9 = (java.lang.Throwable) $r5;

        virtualinvoke $r3.<java.io.ObjectInputStream: void close()>();

        throw $r9;

     label5:
        $i1 = lengthof $r15;

        $i1 = $i1 + 1;

        $i1 = $i1 * 80;

        goto label4;

     label6:
        return;
    }

    protected org.apache.harmony.lang.annotation.AnnotationMember setDefinition(org.apache.harmony.lang.annotation.AnnotationMember)
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0, $r1;
        java.lang.reflect.Method $r2;
        java.lang.Class $r3;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $r1 := @parameter0: org.apache.harmony.lang.annotation.AnnotationMember;

        $r2 = $r1.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod> = $r2;

        $r3 = $r1.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType>;

        $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType> = $r3;

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        java.lang.StringBuilder $r1, $r3;
        char $c0;
        java.lang.String $r2;
        java.lang.Object $r4;
        int $i1, $i2;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != 91 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(80);

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=[");

        $r4 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r4);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        if $i2 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r4 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r4, $i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r4 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.Object validateValue() throws java.lang.Throwable
    {
        org.apache.harmony.lang.annotation.AnnotationMember $r0;
        char $c0;
        java.lang.Object $r1, $r2;
        java.lang.Class $r3, $r4;
        boolean $z0;
        java.lang.annotation.AnnotationTypeMismatchException $r5;
        java.lang.reflect.Method $r6;
        java.lang.String $r7;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationMember;

        $c0 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c0 != 33 goto label1;

        virtualinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationMember: void rethrowError()>();

     label1:
        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r2 = <org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object NO_VALUE>;

        if $r1 != $r2 goto label2;

        return null;

     label2:
        $r3 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType>;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        $r3 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Class elementType>;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

     label3:
        $r1 = virtualinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object copyValue()>();

        return $r1;

     label4:
        $r5 = new java.lang.annotation.AnnotationTypeMismatchException;

        $r6 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r5.<java.lang.annotation.AnnotationTypeMismatchException: void <init>(java.lang.reflect.Method,java.lang.String)>($r6, $r7);

        throw $r5;
    }
}
