public class com.google.android.gles_jni.EGLImpl extends java.lang.Object implements javax.microedition.khronos.egl.EGL10
{
    private com.google.android.gles_jni.EGLContextImpl mContext;
    private com.google.android.gles_jni.EGLDisplayImpl mDisplay;
    private com.google.android.gles_jni.EGLSurfaceImpl mSurface;

    static void <clinit>()
    {
        staticinvoke <com.google.android.gles_jni.EGLImpl: void _nativeClassInit()>();

        return;
    }

    public void <init>()
    {
        com.google.android.gles_jni.EGLImpl $r0;
        com.google.android.gles_jni.EGLContextImpl $r1;
        com.google.android.gles_jni.EGLDisplayImpl $r2;
        com.google.android.gles_jni.EGLSurfaceImpl $r3;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r1.<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>(-1);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext> = $r1;

        $r2 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r2.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>(-1);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r2;

        $r3 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r3.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>(-1);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface> = $r3;

        return;
    }

    private native int _eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[]);

    private native int _eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[]);

    private native void _eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native int _eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native int _eglGetCurrentContext();

    private native int _eglGetCurrentDisplay();

    private native int _eglGetCurrentSurface(int);

    private native int _eglGetDisplay(java.lang.Object);

    private static native void _nativeClassInit();

    public native boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay, int[], javax.microedition.khronos.egl.EGLConfig[], int, int[]);

    public native boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, java.lang.Object);

    public javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[])
    {
        com.google.android.gles_jni.EGLImpl $r0;
        javax.microedition.khronos.egl.EGLDisplay $r1;
        javax.microedition.khronos.egl.EGLConfig $r2;
        javax.microedition.khronos.egl.EGLContext $r3;
        int[] $r4;
        com.google.android.gles_jni.EGLContextImpl $r5;
        int $i0;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        $r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        $r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        $r3 := @parameter2: javax.microedition.khronos.egl.EGLContext;

        $r4 := @parameter3: int[];

        $r5 = new com.google.android.gles_jni.EGLContextImpl;

        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>($r1, $r2, $r3, $r4);

        specialinvoke $r5.<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>($i0);

        return $r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[])
    {
        com.google.android.gles_jni.EGLImpl $r0;
        javax.microedition.khronos.egl.EGLDisplay $r1;
        javax.microedition.khronos.egl.EGLConfig $r2;
        int[] $r3;
        com.google.android.gles_jni.EGLSurfaceImpl $r4;
        int $i0;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        $r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        $r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        $r3 := @parameter2: int[];

        $r4 = new com.google.android.gles_jni.EGLSurfaceImpl;

        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>($r1, $r2, $r3);

        specialinvoke $r4.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>($i0);

        return $r4;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        com.google.android.gles_jni.EGLImpl $r0;
        javax.microedition.khronos.egl.EGLDisplay $r1;
        javax.microedition.khronos.egl.EGLConfig $r2;
        java.lang.Object $r3;
        int[] $r4;
        com.google.android.gles_jni.EGLSurfaceImpl $r5;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        $r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        $r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: int[];

        $r5 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r5.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>()>();

        specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: void _eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>($r5, $r1, $r2, $r3, $r4);

        return $r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        com.google.android.gles_jni.EGLImpl $r0;
        javax.microedition.khronos.egl.EGLDisplay $r1;
        javax.microedition.khronos.egl.EGLConfig $r2;
        java.lang.Object $r3;
        int[] $r4;
        boolean $z0;
        android.view.SurfaceView $r5;
        android.view.SurfaceHolder $r6;
        android.view.Surface $r7;
        com.google.android.gles_jni.EGLSurfaceImpl $r8;
        int $i0;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        $r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        $r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: int[];

        $z0 = $r3 instanceof android.view.SurfaceView;

        if $z0 == 0 goto label2;

        $r5 = (android.view.SurfaceView) $r3;

        $r6 = virtualinvoke $r5.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r7 = interfaceinvoke $r6.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

     label1:
        $r8 = new com.google.android.gles_jni.EGLSurfaceImpl;

        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>($r1, $r2, $r7, $r4);

        specialinvoke $r8.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>($i0);

        return $r8;

     label2:
        $z0 = $r3 instanceof android.view.SurfaceHolder;

        if $z0 == 0 goto label3;

        $r6 = (android.view.SurfaceHolder) $r3;

        $r7 = interfaceinvoke $r6.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        goto label1;

     label3:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("eglCreateWindowSurface() can only be called with an instance of SurfaceView or SurfaceHolder at the moment, this will be fixed later.");

        throw $r9;
    }

    public native boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext);

    public native boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);

    public native boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int, int[]);

    public native boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig[], int, int[]);

    public javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()
    {
        com.google.android.gles_jni.EGLImpl $r0;
        int $i0, $i1;
        com.google.android.gles_jni.EGLContextImpl $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglGetCurrentContext()>();

        $r1 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext>;

        $i1 = $r1.<com.google.android.gles_jni.EGLContextImpl: int mEGLContext>;

        if $i1 == $i0 goto label2;

        $r1 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r1.<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>($i0);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext> = $r1;

     label2:
        $r1 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext>;

     label3:
        exitmonitor $r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()
    {
        com.google.android.gles_jni.EGLImpl $r0;
        int $i0, $i1;
        com.google.android.gles_jni.EGLDisplayImpl $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglGetCurrentDisplay()>();

        $r1 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        $i1 = $r1.<com.google.android.gles_jni.EGLDisplayImpl: int mEGLDisplay>;

        if $i1 == $i0 goto label2;

        $r1 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r1.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>($i0);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r1;

     label2:
        $r1 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

     label3:
        exitmonitor $r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)
    {
        com.google.android.gles_jni.EGLImpl $r0;
        int $i0, $i1;
        com.google.android.gles_jni.EGLSurfaceImpl $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglGetCurrentSurface(int)>($i0);

        $r1 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface>;

        $i1 = $r1.<com.google.android.gles_jni.EGLSurfaceImpl: int mEGLSurface>;

        if $i1 == $i0 goto label2;

        $r1 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r1.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>($i0);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface> = $r1;

     label2:
        $r1 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface>;

     label3:
        exitmonitor $r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)
    {
        com.google.android.gles_jni.EGLImpl $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        com.google.android.gles_jni.EGLDisplayImpl $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.android.gles_jni.EGLImpl;

        $r1 := @parameter0: java.lang.Object;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.google.android.gles_jni.EGLImpl: int _eglGetDisplay(java.lang.Object)>($r1);

        $r2 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        $i1 = $r2.<com.google.android.gles_jni.EGLDisplayImpl: int mEGLDisplay>;

        if $i1 == $i0 goto label2;

        $r2 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r2.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>($i0);

        $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r2;

     label2:
        $r2 = $r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

     label3:
        exitmonitor $r0;

        return $r2;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public native int eglGetError();

    public native boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay, int[]);

    public native boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLContext);

    public native boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext, int, int[]);

    public native java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay, int);

    public native boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, int, int[]);

    public native boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);

    public native boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay);

    public native boolean eglWaitGL();

    public native boolean eglWaitNative(int, java.lang.Object);
}
