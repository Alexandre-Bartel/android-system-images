public class org.xmlpull.v1.sax2.Driver extends java.lang.Object implements org.xml.sax.Attributes, org.xml.sax.Locator, org.xml.sax.XMLReader
{
    protected static final java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE;
    protected static final java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE;
    protected static final java.lang.String DECLARATION_HANDLER_PROPERTY;
    protected static final java.lang.String LEXICAL_HANDLER_PROPERTY;
    protected static final java.lang.String NAMESPACES_FEATURE;
    protected static final java.lang.String NAMESPACE_PREFIXES_FEATURE;
    protected static final java.lang.String VALIDATION_FEATURE;
    protected org.xml.sax.ContentHandler contentHandler;
    protected org.xml.sax.ErrorHandler errorHandler;
    protected org.xmlpull.v1.XmlPullParser pp;
    protected java.lang.String systemId;

    public void <init>() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.helpers.DefaultHandler $r1;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        org.xmlpull.v1.XmlPullParser $r3;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r1.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r1;

        $r1 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r1.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r1;

        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        virtualinvoke $r2.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(1);

        $r3 = virtualinvoke $r2.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = $r3;

        return;
    }

    public void <init>(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        org.xml.sax.helpers.DefaultHandler $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r2;

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r2;

        $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = $r1;

        return;
    }

    public int getColumnNumber()
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>();

        return $i0;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.ContentHandler r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        return r1;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xmlpull.v1.sax2.Driver $r0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.xmlpull.v1.sax2.Driver $r0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.ErrorHandler r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        return r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.xmlpull.v1.XmlPullParser $r3;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/features/namespaces";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;

     label1:
        $r2 = "http://xml.org/sax/features/namespace-prefixes";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        return $z0;

     label2:
        $r2 = "http://xml.org/sax/features/validation";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;

     label3:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>($r1);

        return $z0;
    }

    public int getIndex(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getIndex(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2, $r4;
        int $i0, $i1;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = 0;

     label1:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getLength()
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        return $i0;
    }

    public int getLineNumber()
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getLineNumber()>();

        return $i0;
    }

    public java.lang.String getLocalName(int)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $i0 := @parameter0: int;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        return $r1;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.xmlpull.v1.XmlPullParser $r3;
        java.lang.Object $r4;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>($r1);

        return $r4;
    }

    public java.lang.String getPublicId()
    {
        org.xmlpull.v1.sax2.Driver $r0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public java.lang.String getQName(int)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>($i0);

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r1 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        return $r2;
    }

    public java.lang.String getSystemId()
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 = $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        return r1;
    }

    public java.lang.String getType(int)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $i0 := @parameter0: int;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>($i0);

        return $r1;
    }

    public java.lang.String getType(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>($i0);

        return $r1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getType(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2, $r4;
        int $i0, $i1;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = 0;

     label1:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>($i0);

        return $r1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getURI(int)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $i0 := @parameter0: int;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>($i0);

        return $r1;
    }

    public java.lang.String getValue(int)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        int $i0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $i0 := @parameter0: int;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>($i0);

        return $r1;
    }

    public java.lang.String getValue(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, $r1);

        return $r1;
    }

    public java.lang.String getValue(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2;
        org.xmlpull.v1.XmlPullParser $r3;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1;
        org.xml.sax.InputSource $r2;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r1);

        virtualinvoke $r0.<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.InputSource $r1;
        java.net.URL $r2, r18;
        java.lang.String $r3, $r8;
        org.xml.sax.ContentHandler $r4;
        java.io.Reader $r5;
        java.io.InputStream $r6, $r7;
        org.xml.sax.SAXParseException $r9, r17;
        org.xml.sax.ErrorHandler $r10;
        org.xmlpull.v1.XmlPullParser $r11;
        int $i0;
        java.lang.StringBuilder $r12, r19;
        org.xmlpull.v1.XmlPullParserException $r13, $r16;
        java.net.MalformedURLException $r14;
        java.io.FileNotFoundException $r15;
        java.io.FileInputStream r20;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xml.sax.InputSource;

        $r3 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r3;

        $r4 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r0);

        $r5 = virtualinvoke $r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if $r5 != null goto label23;

     label01:
        $r6 = virtualinvoke $r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        $r7 = $r6;

        $r3 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if $r6 != null goto label08;

        $r8 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

     label02:
        $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r8;

        $r8 = $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        if $r8 != null goto label05;

        r17 = new org.xml.sax.SAXParseException;

     label03:
        specialinvoke r17.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>("null source systemId", $r0);

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r10.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r17);

     label04:
        return;

     label05:
        r18 = new java.net.URL;

        $r2 = r18;

        $r8 = $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

     label06:
        specialinvoke r18.<java.net.URL: void <init>(java.lang.String)>($r8);

        $r6 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();

     label07:
        $r7 = $r6;

     label08:
        $r11 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

     label09:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r7, $r3);

     label10:
        $r4 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

     label11:
        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startDocument()>();

        $r11 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r11 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label12:
        if $i0 == 2 goto label26;

        r17 = new org.xml.sax.SAXParseException;

        $r9 = r17;

        r19 = new java.lang.StringBuilder;

     label13:
        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected start tag not");

        $r11 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r3, $r0);

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r10.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r9);

     label14:
        return;

     label15:
        $r13 := @caughtexception;

        r17 = new org.xml.sax.SAXParseException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing initialization error: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r3, $r0, $r13);

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r10.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r17);

        return;

     label16:
        $r14 := @caughtexception;

        r20 = new java.io.FileInputStream;

        $r7 = r20;

        $r8 = $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

     label17:
        specialinvoke r20.<java.io.FileInputStream: void <init>(java.lang.String)>($r8);

     label18:
        goto label08;

     label19:
        $r15 := @caughtexception;

        r17 = new org.xml.sax.SAXParseException;

        $r9 = r17;

        r19 = new java.lang.StringBuilder;

        $r12 = r19;

     label20:
        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not open file with systemId ");

        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r3, $r0, $r15);

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r10.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r9);

     label21:
        return;

     label22:
        $r16 := @caughtexception;

        r17 = new org.xml.sax.SAXParseException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing initialization error: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r3, $r0, $r16);

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r10.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r17);

        return;

     label23:
        $r11 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

     label24:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r5);

     label25:
        goto label10;

     label26:
        $r11 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        virtualinvoke $r0.<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>($r11);

        $r4 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void endDocument()>();

        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label22;
        catch java.net.MalformedURLException from label06 to label07 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label15;
        catch java.io.FileNotFoundException from label17 to label18 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label22;
    }

    public void parseSubTree(org.xmlpull.v1.XmlPullParser) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuffer $r2;
        org.xml.sax.SAXParseException $r3;
        boolean $z0;
        org.xml.sax.SAXException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r11, $r12;
        org.xmlpull.v1.XmlPullParserException $r7;
        org.xml.sax.ErrorHandler $r8;
        int[] $r9;
        org.xml.sax.ContentHandler $r10;
        char[] $r13;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = $r1;

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

     label01:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        if $i0 == 2 goto label07;

        $r4 = new org.xml.sax.SAXException;

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start tag must be read before skiping subtree");

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r6);

     label04:
        throw $r4;

     label05:
        $r7 := @caughtexception;

        $r3 = new org.xml.sax.SAXParseException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing error: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r6, $r0, $r7);

        virtualinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        $r8 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r8.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r3);

     label06:
        return;

     label07:
        $r9 = newarray (int)[2];

        $r2 = new java.lang.StringBuffer;

     label08:
        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(16);

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label09:
        $i0 = $i0 - 1;

        $i1 = 2;

     label10:
        lookupswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label13;
            case 3: goto label29;
            case 4: goto label26;
            default: goto label11;
        };

     label11:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label12:
        if $i2 > $i0 goto label10;

        return;

     label13:
        if $z0 == 0 goto label25;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label14:
        $i2 = $i1 - 1;

     label15:
        if $i0 <= $i2 goto label19;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i2);

     label16:
        $i2 = $i2 + 1;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i2);

     label17:
        if $i1 >= $i2 goto label20;

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>($i1);

        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>($i1);

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r6, $r11);

     label18:
        $i1 = $i1 + 1;

        goto label17;

     label19:
        $i1 = 0;

        goto label16;

     label20:
        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        if $r12 == null goto label21;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label21:
        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        if $r12 != null goto label23;

        $r12 = $r6;

     label22:
        virtualinvoke $r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r11, $r6, $r12);

        goto label11;

     label23:
        $r12 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label24:
        goto label22;

     label25:
        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r6, $r11, $r12);

        goto label11;

     label26:
        $r13 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>($r9);

     label27:
        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $i1 = $r9[0];

     label28:
        $i2 = $r9[1];

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r13, $i1, $i2);

        goto label11;

     label29:
        if $z0 == 0 goto label40;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        if $r12 == null goto label30;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label30:
        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        if $r12 == null goto label36;

        $r12 = $r6;

     label31:
        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r11, $r6, $r12);

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i0 <= $i1 goto label38;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i1);

     label32:
        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i2 = $i2 - 1;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i2);

     label33:
        $i2 = $i2 - 1;

     label34:
        if $i2 < $i1 goto label11;

        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>($i2);

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r6);

     label35:
        $i2 = $i2 + -1;

        goto label34;

     label36:
        $r12 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label37:
        goto label31;

     label38:
        $i1 = 0;

     label39:
        goto label32;

     label40:
        $r10 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r6, $r11, $r12);

     label41:
        goto label11;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label12 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label24 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label27 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label33 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label41 with label05;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.ContentHandler $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r1;

        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.DTDHandler $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xml.sax.DTDHandler;

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.EntityResolver $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xml.sax.EntityResolver;

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xmlpull.v1.sax2.Driver $r0;
        org.xml.sax.ErrorHandler $r1;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: org.xml.sax.ErrorHandler;

        $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r1;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r3;
        org.xmlpull.v1.XmlPullParserException $r4;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = "http://xml.org/sax/features/namespaces";

     label01:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label02:
        if $z1 == 0 goto label05;

     label03:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $z0);

     label04:
        return;

     label05:
        $r2 = "http://xml.org/sax/features/namespace-prefixes";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label06:
        if $z1 == 0 goto label12;

     label07:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

     label08:
        if $z1 == $z0 goto label18;

     label09:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes", $z0);

     label10:
        return;

     label11:
        $r4 := @caughtexception;

        return;

     label12:
        $r2 = "http://xml.org/sax/features/validation";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label13:
        if $z1 == 0 goto label16;

     label14:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#validation", $z0);

     label15:
        return;

     label16:
        $r3 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>($r1, $z0);

     label17:
        return;

     label18:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label11;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        org.xml.sax.SAXNotSupportedException $r4;
        java.lang.StringBuilder $r5;
        org.xmlpull.v1.XmlPullParser $r6;
        org.xmlpull.v1.XmlPullParserException $r7;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new org.xml.sax.SAXNotSupportedException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported setting property ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label1:
        $r3 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r4 = new org.xml.sax.SAXNotSupportedException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported setting property ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        $r6 = $r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

     label3:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>($r1, $r2);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r4 = new org.xml.sax.SAXNotSupportedException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported set property ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch org.xmlpull.v1.XmlPullParserException from label3 to label4 with label5;
    }

    protected void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xmlpull.v1.sax2.Driver $r0;
        java.lang.String $r1, $r2, $r3;
        org.xml.sax.ContentHandler $r4;

        $r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, $r3, $r0);

        return;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.sax2.Driver: java.lang.String VALIDATION_FEATURE> = "http://xml.org/sax/features/validation";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACE_PREFIXES_FEATURE> = "http://xml.org/sax/features/namespace-prefixes";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACES_FEATURE> = "http://xml.org/sax/features/namespaces";

        <org.xmlpull.v1.sax2.Driver: java.lang.String LEXICAL_HANDLER_PROPERTY> = "http://xml.org/sax/properties/lexical-handler";

        <org.xmlpull.v1.sax2.Driver: java.lang.String DECLARATION_HANDLER_PROPERTY> = "http://xml.org/sax/properties/declaration-handler";

        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/schema";

        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/dynamic";

        return;
    }
}
