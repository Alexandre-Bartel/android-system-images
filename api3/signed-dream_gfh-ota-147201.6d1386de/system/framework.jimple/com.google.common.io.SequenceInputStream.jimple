public class com.google.common.io.SequenceInputStream extends java.io.InputStream
{
    java.io.InputStream[] streamArray;
    int streamIndex;

    void <init>(java.io.InputStream)
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream $r1;
        java.io.InputStream[] $r2;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = newarray (java.io.InputStream)[1];

        $r2[0] = $r1;

        specialinvoke $r0.<com.google.common.io.SequenceInputStream: void <init>(java.io.InputStream[])>($r2);

        return;
    }

    public void <init>(java.io.InputStream, java.io.InputStream)
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream $r1, $r2;
        java.io.InputStream[] $r3;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.InputStream;

        $r3 = newarray (java.io.InputStream)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        specialinvoke $r0.<com.google.common.io.SequenceInputStream: void <init>(java.io.InputStream[])>($r3);

        return;
    }

    public void <init>(java.io.InputStream, java.io.InputStream, java.io.InputStream)
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream $r1, $r2, $r3;
        java.io.InputStream[] $r4;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.io.InputStream;

        $r4 = newarray (java.io.InputStream)[3];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r4[2] = $r3;

        specialinvoke $r0.<com.google.common.io.SequenceInputStream: void <init>(java.io.InputStream[])>($r4);

        return;
    }

    public void <init>(java.io.InputStream[])
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream[] $r1;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 := @parameter0: java.io.InputStream[];

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray> = null;

        $r0.<com.google.common.io.SequenceInputStream: int streamIndex> = 0;

        $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray> = $r1;

        return;
    }

    private java.io.InputStream getStream()
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream[] $r1;
        int $i0, $i1;
        java.io.InputStream $r2;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        if $r1 == null goto label1;

        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        return null;
    }

    private void nextStream()
    {
        com.google.common.io.SequenceInputStream $r0;
        int $i0, $i1;
        java.io.InputStream[] $r1;
        java.io.InputStream $r2;
        java.io.IOException $r3;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        if $r1 == null goto label4;

        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r2 = $r1[$i0];

     label1:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label2:
        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i1 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $i0 = $i1 + 1;

        $r0.<com.google.common.io.SequenceInputStream: int streamIndex> = $i0;

        $r1[$i1] = null;

        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label6;

        $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray> = null;

        return;

     label3:
        $r3 := @caughtexception;

        goto label2;

     label4:
        return;

     label5:
        return;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static boolean validateStreamArray(java.io.InputStream[])
    {
        java.io.InputStream[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: java.io.InputStream[];

        $i1 = 0;

     label1:
        $i0 = lengthof $r0;

        if $i1 >= $i0 goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return 1;
    }

    public int available() throws java.io.IOException
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream $r1;
        int $i0;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        entermonitor $r0;

     label1:
        $r1 = specialinvoke $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream getStream()>();

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

     label2:
        exitmonitor $r0;

        return $i0;

     label3:
        $i0 = 0;

        goto label2;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void close() throws java.io.IOException
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream[] $r1;
        boolean $z0;
        int $i0, $i1;
        java.io.InputStream $r2;
        java.lang.Throwable $r3;
        java.io.IOException $r4;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

     label02:
        if $r1 != null goto label04;

     label03:
        exitmonitor $r0;

        return;

     label04:
        $z0 = 0;

     label05:
        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i1 = lengthof $r1;

     label06:
        if $i0 >= $i1 goto label13;

     label07:
        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r2 = $r1[$i0];

     label08:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label09:
        $i0 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $i0 = $i0 + 1;

        $r0.<com.google.common.io.SequenceInputStream: int streamIndex> = $i0;

     label10:
        goto label05;

     label11:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label12:
        $r4 := @caughtexception;

        $z0 = 1;

        goto label09;

     label13:
        $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray> = null;

        if $z0 != 1 goto label03;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label14:
        nop;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.lang.Throwable from label07 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
    }

    public int read() throws java.io.IOException
    {
        com.google.common.io.SequenceInputStream $r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        entermonitor $r0;

     label1:
        $r1 = specialinvoke $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream getStream()>();

     label2:
        if $r1 != null goto label4;

        $i0 = -1;

     label3:
        exitmonitor $r0;

        return $i0;

     label4:
        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i0 = $i1;

        if $i1 != -1 goto label3;

        specialinvoke $r0.<com.google.common.io.SequenceInputStream: void nextStream()>();

     label5:
        goto label1;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.google.common.io.SequenceInputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.NullPointerException $r2;
        java.lang.Throwable $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.io.InputStream[] $r5;
        java.io.InputStream $r6;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        entermonitor $r0;

        if $r1 != null goto label03;

     label01:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label02:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label03:
        if $i1 != 0 goto label05;

        $i2 = 0;

     label04:
        exitmonitor $r0;

        return $i2;

     label05:
        if $i0 < 0 goto label07;

        if $i1 < 0 goto label07;

        $i2 = $i0 + $i1;

     label06:
        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label08;

     label07:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label08:
        $r5 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        if $r5 == null goto label09;

        $i2 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r5 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i3 = lengthof $r5;

        if $i2 < $i3 goto label10;

     label09:
        $i2 = -1;

        goto label04;

     label10:
        if $i1 != 0 goto label16;

        $i2 = 0;

        goto label04;

     label11:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>($r1, $i3, $i1);

        if $i0 == -1 goto label14;

        $i3 = $i3 + $i0;

        $i1 = $i1 - $i0;

        $i2 = $i2 + $i0;

     label12:
        if $i1 <= 0 goto label13;

        $r6 = specialinvoke $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream getStream()>();

        if $r6 != null goto label11;

     label13:
        if $i2 != 0 goto label04;

        $i2 = -1;

        goto label04;

     label14:
        specialinvoke $r0.<com.google.common.io.SequenceInputStream: void nextStream()>();

     label15:
        goto label12;

     label16:
        $i2 = 0;

        $i3 = $i0;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label06 to label15 with label02;
    }

    public long skip(long) throws java.io.IOException
    {
        com.google.common.io.SequenceInputStream $r0;
        long $l0, $l4, $l5;
        byte $b1;
        java.io.InputStream[] $r1;
        int $i2, $i3;
        java.io.InputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.common.io.SequenceInputStream;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        if $r1 == null goto label03;

        $i2 = $r0.<com.google.common.io.SequenceInputStream: int streamIndex>;

        $r1 = $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream[] streamArray>;

        $i3 = lengthof $r1;

     label02:
        if $i2 < $i3 goto label05;

     label03:
        $l4 = 0L;

     label04:
        exitmonitor $r0;

        return $l4;

     label05:
        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label12;

        $l4 = 0L;

        goto label04;

     label06:
        $l0 = virtualinvoke $r2.<java.io.InputStream: long skip(long)>($l5);

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label10;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        if $i2 != -1 goto label09;

        specialinvoke $r0.<com.google.common.io.SequenceInputStream: void nextStream()>();

     label07:
        $b1 = $l5 cmp 0L;

        if $b1 <= 0 goto label04;

        $r2 = specialinvoke $r0.<com.google.common.io.SequenceInputStream: java.io.InputStream getStream()>();

     label08:
        if $r2 != null goto label06;

        goto label04;

     label09:
        $l5 = $l5 - 1L;

        $l4 = $l4 + 1L;

        goto label07;

     label10:
        $l5 = $l5 - $l0;

        $l4 = $l4 + $l0;

        goto label07;

     label11:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label12:
        $l4 = 0L;

        $l5 = $l0;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label08 with label11;
    }
}
