public class android.text.method.PasswordTransformationMethod extends java.lang.Object implements android.text.TextWatcher, android.text.method.TransformationMethod
{
    private static char DOT;
    private static android.text.method.PasswordTransformationMethod sInstance;

    static void <clinit>()
    {
        <android.text.method.PasswordTransformationMethod: char DOT> = 8226;

        return;
    }

    public void <init>()
    {
        android.text.method.PasswordTransformationMethod $r0;

        $r0 := @this: android.text.method.PasswordTransformationMethod;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static char access$100()
    {
        char c0;

        c0 = <android.text.method.PasswordTransformationMethod: char DOT>;

        return c0;
    }

    public static android.text.method.PasswordTransformationMethod getInstance()
    {
        android.text.method.PasswordTransformationMethod $r0;

        $r0 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        if $r0 == null goto label1;

        $r0 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        return $r0;

     label1:
        $r0 = new android.text.method.PasswordTransformationMethod;

        specialinvoke $r0.<android.text.method.PasswordTransformationMethod: void <init>()>();

        <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance> = $r0;

        $r0 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        return $r0;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.text.method.PasswordTransformationMethod $r0;
        android.text.Editable $r1;

        $r0 := @this: android.text.method.PasswordTransformationMethod;

        $r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.method.PasswordTransformationMethod $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.text.method.PasswordTransformationMethod;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public java.lang.CharSequence getTransformation(java.lang.CharSequence, android.view.View)
    {
        android.text.method.PasswordTransformationMethod $r0;
        java.lang.CharSequence $r1;
        android.view.View $r2;
        boolean $z0;
        android.text.Spannable $r3;
        int $i0, $i1;
        java.lang.Object[] $r4;
        android.text.method.PasswordTransformationMethod$ViewReference[] $r5;
        android.text.method.PasswordTransformationMethod$ViewReference $r6;
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r7;

        $r0 := @this: android.text.method.PasswordTransformationMethod;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.view.View;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        $r3 = (android.text.Spannable) $r1;

        $i0 = interfaceinvoke $r3.<android.text.Spannable: int length()>();

        $r4 = interfaceinvoke $r3.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/PasswordTransformationMethod$ViewReference");

        $r5 = (android.text.method.PasswordTransformationMethod$ViewReference[]) $r4;

        $i0 = 0;

     label1:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label2;

        $r6 = $r5[$i0];

        interfaceinvoke $r3.<android.text.Spannable: void removeSpan(java.lang.Object)>($r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new android.text.method.PasswordTransformationMethod$ViewReference;

        specialinvoke $r6.<android.text.method.PasswordTransformationMethod$ViewReference: void <init>(android.view.View)>($r2);

        interfaceinvoke $r3.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, 0, 0, 34);

     label3:
        $r7 = new android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        specialinvoke $r7.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void <init>(java.lang.CharSequence)>($r1);

        return $r7;
    }

    public void onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect)
    {
        android.text.method.PasswordTransformationMethod $r0;
        android.view.View $r1;
        java.lang.CharSequence $r2;
        boolean $z0;
        int $i0, $i1;
        android.graphics.Rect $r3;
        android.text.Spannable $r4;
        java.lang.Object[] $r5;
        android.text.method.PasswordTransformationMethod$Visible[] $r6;
        android.text.method.PasswordTransformationMethod$Visible $r7;

        $r0 := @this: android.text.method.PasswordTransformationMethod;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.CharSequence;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 := @parameter4: android.graphics.Rect;

        if $z0 != 0 goto label2;

        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        $r4 = (android.text.Spannable) $r2;

        $i0 = interfaceinvoke $r4.<android.text.Spannable: int length()>();

        $r5 = interfaceinvoke $r4.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/PasswordTransformationMethod$Visible");

        $r6 = (android.text.method.PasswordTransformationMethod$Visible[]) $r5;

        $i0 = 0;

     label1:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label4;

        $r7 = $r6[$i0];

        interfaceinvoke $r4.<android.text.Spannable: void removeSpan(java.lang.Object)>($r7);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.method.PasswordTransformationMethod $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.text.Spannable $r2;
        java.lang.Object[] $r3;
        android.text.method.PasswordTransformationMethod$ViewReference[] $r4;
        android.view.View $r5;
        android.text.method.PasswordTransformationMethod$ViewReference $r6;
        java.lang.Object $r7;
        android.text.method.TextKeyListener $r8;
        android.content.Context $r9;
        android.text.method.PasswordTransformationMethod$Visible[] $r10;
        android.text.method.PasswordTransformationMethod$Visible $r11;

        $r0 := @this: android.text.method.PasswordTransformationMethod;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label06;

        $r2 = (android.text.Spannable) $r1;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r3 = interfaceinvoke $r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/method/PasswordTransformationMethod$ViewReference");

        $r4 = (android.text.method.PasswordTransformationMethod$ViewReference[]) $r3;

        $i1 = lengthof $r4;

        if $i1 != 0 goto label01;

        return;

     label01:
        $r5 = null;

        $i1 = 0;

     label02:
        if $r5 != null goto label03;

        $i3 = lengthof $r4;

        if $i1 >= $i3 goto label03;

        $r6 = $r4[$i1];

        $r7 = virtualinvoke $r6.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = (android.view.View) $r7;

        $i1 = $i1 + 1;

        goto label02;

     label03:
        if $r5 == null goto label07;

        $r8 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r9 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

        $i1 = virtualinvoke $r8.<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>($r9);

        $i1 = $i1 & 8;

        if $i1 == 0 goto label08;

        if $i2 <= 0 goto label09;

        $i1 = interfaceinvoke $r2.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke $r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/method/PasswordTransformationMethod$Visible");

        $r10 = (android.text.method.PasswordTransformationMethod$Visible[]) $r3;

        $i1 = 0;

     label04:
        $i3 = lengthof $r10;

        if $i1 >= $i3 goto label05;

        $r11 = $r10[$i1];

        interfaceinvoke $r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r11);

        $i1 = $i1 + 1;

        goto label04;

     label05:
        if $i2 != 1 goto label10;

        $r11 = new android.text.method.PasswordTransformationMethod$Visible;

        specialinvoke $r11.<android.text.method.PasswordTransformationMethod$Visible: void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod)>($r2, $r0);

        $i1 = $i0 + $i2;

        interfaceinvoke $r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r11, $i0, $i1, 33);

        return;

     label06:
        return;

     label07:
        return;

     label08:
        return;

     label09:
        return;

     label10:
        return;
    }
}
