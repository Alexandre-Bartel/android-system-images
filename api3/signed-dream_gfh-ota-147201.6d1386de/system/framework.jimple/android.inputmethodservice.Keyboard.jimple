public class android.inputmethodservice.Keyboard extends java.lang.Object
{
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    public static final int EDGE_TOP;
    private static final int GRID_HEIGHT;
    private static final int GRID_SIZE;
    private static final int GRID_WIDTH;
    public static final int KEYCODE_ALT;
    public static final int KEYCODE_CANCEL;
    public static final int KEYCODE_DELETE;
    public static final int KEYCODE_DONE;
    public static final int KEYCODE_MODE_CHANGE;
    public static final int KEYCODE_SHIFT;
    private static float SEARCH_DISTANCE;
    static final java.lang.String TAG;
    private static final java.lang.String TAG_KEY;
    private static final java.lang.String TAG_KEYBOARD;
    private static final java.lang.String TAG_ROW;
    private int mCellHeight;
    private int mCellWidth;
    private int mDefaultHeight;
    private int mDefaultHorizontalGap;
    private int mDefaultVerticalGap;
    private int mDefaultWidth;
    private int mDisplayHeight;
    private int mDisplayWidth;
    private int[][] mGridNeighbors;
    private int mKeyHeight;
    private int mKeyWidth;
    private int mKeyboardMode;
    private java.util.List mKeys;
    private java.lang.CharSequence mLabel;
    private java.util.List mModifierKeys;
    private int mProximityThreshold;
    private android.inputmethodservice.Keyboard$Key mShiftKey;
    private int mShiftKeyIndex;
    private boolean mShifted;
    private int mTotalHeight;
    private int mTotalWidth;

    static void <clinit>()
    {
        <android.inputmethodservice.Keyboard: java.lang.String TAG_ROW> = "Row";

        <android.inputmethodservice.Keyboard: java.lang.String TAG_KEYBOARD> = "Keyboard";

        <android.inputmethodservice.Keyboard: java.lang.String TAG_KEY> = "Key";

        <android.inputmethodservice.Keyboard: java.lang.String TAG> = "Keyboard";

        <android.inputmethodservice.Keyboard: int KEYCODE_SHIFT> = -1;

        <android.inputmethodservice.Keyboard: int KEYCODE_MODE_CHANGE> = -2;

        <android.inputmethodservice.Keyboard: int KEYCODE_DONE> = -4;

        <android.inputmethodservice.Keyboard: int KEYCODE_DELETE> = -5;

        <android.inputmethodservice.Keyboard: int KEYCODE_CANCEL> = -3;

        <android.inputmethodservice.Keyboard: int KEYCODE_ALT> = -6;

        <android.inputmethodservice.Keyboard: int GRID_WIDTH> = 10;

        <android.inputmethodservice.Keyboard: int GRID_SIZE> = 50;

        <android.inputmethodservice.Keyboard: int GRID_HEIGHT> = 5;

        <android.inputmethodservice.Keyboard: int EDGE_TOP> = 4;

        <android.inputmethodservice.Keyboard: int EDGE_RIGHT> = 2;

        <android.inputmethodservice.Keyboard: int EDGE_LEFT> = 1;

        <android.inputmethodservice.Keyboard: int EDGE_BOTTOM> = 8;

        <android.inputmethodservice.Keyboard: float SEARCH_DISTANCE> = 1.4F;

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.Context $r1;
        int $i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>($r1, $i0, 0);

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.Context $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        java.util.ArrayList $r5;
        android.content.res.Resources $r6;
        android.content.res.XmlResourceParser $r7;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.inputmethodservice.Keyboard: int mShiftKeyIndex> = -1;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i2 = virtualinvoke $r4.<android.view.Display: int getWidth()>();

        $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth> = $i2;

        $i2 = virtualinvoke $r4.<android.view.Display: int getHeight()>();

        $r0.<android.inputmethodservice.Keyboard: int mDisplayHeight> = $i2;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = 0;

        $i2 = $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        $i2 = $i2 / 10;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = $i2;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = 0;

        $i2 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = $i2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys> = $r5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys> = $r5;

        $r0.<android.inputmethodservice.Keyboard: int mKeyboardMode> = $i1;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        specialinvoke $r0.<android.inputmethodservice.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)>($r1, $r7);

        return;
    }

    public void <init>(android.content.Context, int, java.lang.CharSequence, int, int)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.Context $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.CharSequence $r2;
        android.inputmethodservice.Keyboard$Key $r3;
        android.inputmethodservice.Keyboard$Row $r4;
        char $c7;
        java.lang.String $r5;
        int[] $r6;
        java.util.List $r7;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.CharSequence;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        specialinvoke $r0.<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>($r1, $i0);

        $i3 = 0;

        $i0 = 0;

        $i4 = 0;

        $r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = 0;

        $r4 = new android.inputmethodservice.Keyboard$Row;

        specialinvoke $r4.<android.inputmethodservice.Keyboard$Row: void <init>(android.inputmethodservice.Keyboard)>($r0);

        $i5 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $r4.<android.inputmethodservice.Keyboard$Row: int defaultHeight> = $i5;

        $i5 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $r4.<android.inputmethodservice.Keyboard$Row: int defaultWidth> = $i5;

        $i5 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        $r4.<android.inputmethodservice.Keyboard$Row: int defaultHorizontalGap> = $i5;

        $i5 = $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        $r4.<android.inputmethodservice.Keyboard$Row: int verticalGap> = $i5;

        $r4.<android.inputmethodservice.Keyboard$Row: int rowEdgeFlags> = 12;

        if $i1 != -1 goto label6;

        $i1 = 2147483647;

     label1:
        $i5 = 0;

     label2:
        $i6 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i5 >= $i6 goto label7;

        $c7 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i5);

        if $i4 >= $i1 goto label3;

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $i6 = $i6 + $i3;

        $i6 = $i6 + $i2;

        $i8 = $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        if $i6 <= $i8 goto label4;

     label3:
        $i3 = 0;

        $i4 = $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $i4 = $i4 + $i6;

        $i0 = $i0 + $i4;

        $i4 = 0;

     label4:
        $r3 = new android.inputmethodservice.Keyboard$Key;

        specialinvoke $r3.<android.inputmethodservice.Keyboard$Key: void <init>(android.inputmethodservice.Keyboard$Row)>($r4);

        $r3.<android.inputmethodservice.Keyboard$Key: int x> = $i3;

        $r3.<android.inputmethodservice.Keyboard$Key: int y> = $i0;

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $r3.<android.inputmethodservice.Keyboard$Key: int width> = $i6;

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $r3.<android.inputmethodservice.Keyboard$Key: int height> = $i6;

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        $r3.<android.inputmethodservice.Keyboard$Key: int gap> = $i6;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c7);

        $r3.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label> = $r5;

        $r6 = newarray (int)[1];

        $r6[0] = $c7;

        $r3.<android.inputmethodservice.Keyboard$Key: int[] codes> = $r6;

        $i4 = $i4 + 1;

        $i6 = $r3.<android.inputmethodservice.Keyboard$Key: int width>;

        $i8 = $r3.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i6 = $i6 + $i8;

        $i3 = $i3 + $i6;

        $r7 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mTotalWidth>;

        if $i3 <= $i6 goto label5;

        $r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = $i3;

     label5:
        $i5 = $i5 + 1;

        goto label2;

     label6:
        goto label1;

     label7:
        $i1 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $i0 = $i1 + $i0;

        $r0.<android.inputmethodservice.Keyboard: int mTotalHeight> = $i0;

        return;
    }

    static int access$000(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @parameter0: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        return i0;
    }

    static int access$100(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @parameter0: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        return i0;
    }

    static int access$200(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @parameter0: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDisplayHeight>;

        return i0;
    }

    static int access$300(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @parameter0: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        return i0;
    }

    static int access$400(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @parameter0: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        return i0;
    }

    static int access$500(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @parameter0: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        return i0;
    }

    private void computeNearestNeighbors()
    {
        android.inputmethodservice.Keyboard $r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[][] $r3;
        java.util.List $r4;
        java.lang.Object $r5;
        android.inputmethodservice.Keyboard$Key $r6;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $i2 = virtualinvoke $r0.<android.inputmethodservice.Keyboard: int getMinWidth()>();

        $i2 = $i2 + 10;

        $i2 = $i2 - 1;

        $i2 = $i2 / 10;

        $r0.<android.inputmethodservice.Keyboard: int mCellWidth> = $i2;

        $i2 = virtualinvoke $r0.<android.inputmethodservice.Keyboard: int getHeight()>();

        $i2 = $i2 + 5;

        $i2 = $i2 - 1;

        $i2 = $i2 / 5;

        $r0.<android.inputmethodservice.Keyboard: int mCellHeight> = $i2;

        $r3 = newarray (int[])[50];

        $r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors> = $r3;

        $r4 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r2 = newarray (int)[$i2];

        $i2 = $r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i2 = $i2 * 10;

        $i1 = $r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i1 = $i1 * 5;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label8;

        $i4 = 0;

     label2:
        if $i4 >= $i1 goto label7;

        $i5 = 0;

        $i6 = 0;

     label3:
        $r4 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i6 >= $i0 goto label6;

        $r4 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i6);

        $r6 = (android.inputmethodservice.Keyboard$Key) $r5;

        $i0 = virtualinvoke $r6.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>($i3, $i4);

        $i7 = $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i0 < $i7 goto label4;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i0 = $i0 + $i3;

        $i0 = $i0 - 1;

        $i0 = virtualinvoke $r6.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>($i0, $i4);

        $i7 = $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i0 < $i7 goto label4;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i0 = $i0 + $i3;

        $i0 = $i0 - 1;

        $i7 = $r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i7 = $i7 + $i4;

        $i7 = $i7 - 1;

        $i0 = virtualinvoke $r6.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>($i0, $i7);

        $i7 = $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i0 < $i7 goto label4;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i0 = $i0 + $i4;

        $i0 = $i0 - 1;

        $i0 = virtualinvoke $r6.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>($i3, $i0);

        $i7 = $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i0 >= $i7 goto label5;

     label4:
        $r2[$i5] = $i6;

        $i5 = $i5 + 1;

     label5:
        $i6 = $i6 + 1;

        goto label3;

     label6:
        $r1 = newarray (int)[$i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i5);

        $r3 = $r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors>;

        $i5 = $r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i5 = $i4 / $i5;

        $i5 = $i5 * 10;

        $i6 = $r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i6 = $i3 / $i6;

        $i5 = $i5 + $i6;

        $r3[$i5] = $r1;

        $i5 = $r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i4 = $i4 + $i5;

        goto label2;

     label7:
        $i4 = $r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i3 = $i3 + $i4;

        goto label1;

     label8:
        return;
    }

    static int getDimensionOrFraction(android.content.res.TypedArray, int, int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2, $i3;
        android.util.TypedValue $r1;
        float $f0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i0);

        if $r1 != null goto label1;

        return $i2;

     label1:
        $i3 = $r1.<android.util.TypedValue: int type>;

        if $i3 != 5 goto label2;

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, $i2);

        return $i0;

     label2:
        $i3 = $r1.<android.util.TypedValue: int type>;

        if $i3 != 6 goto label3;

        $f0 = (float) $i2;

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getFraction(int,int,int,float)>($i0, $i1, $i1, $f0);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;

     label3:
        return $i2;
    }

    private void loadKeyboard(android.content.Context, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.Context $r1;
        android.content.res.XmlResourceParser $r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        android.inputmethodservice.Keyboard$Key $r3, $r9;
        android.inputmethodservice.Keyboard$Row $r4, $r8;
        android.content.res.Resources $r5;
        java.lang.String $r6, $r7;
        java.util.List $r10;
        int[] $r11;
        java.lang.Exception $r12;
        java.lang.StringBuilder $r13;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.res.XmlResourceParser;

        $z0 = 0;

        $z1 = 0;

        $i0 = 0;

        $i1 = 0;

        $r3 = null;

        $r4 = null;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

     label01:
        $i2 = interfaceinvoke $r2.<android.content.res.XmlResourceParser: int next()>();

     label02:
        if $i2 == 1 goto label16;

     label03:
        if $i2 != 2 goto label19;

        $r6 = interfaceinvoke $r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r7 = "Row";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label04:
        if $z2 == 0 goto label11;

        $z1 = 1;

     label05:
        $i0 = 0;

        $r8 = virtualinvoke $r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>($r5, $r2);

        $r4 = $r8;

        $i2 = $r8.<android.inputmethodservice.Keyboard$Row: int mode>;

        if $i2 == 0 goto label10;

        $i2 = $r8.<android.inputmethodservice.Keyboard$Row: int mode>;

        $i3 = $r0.<android.inputmethodservice.Keyboard: int mKeyboardMode>;

     label06:
        if $i2 == $i3 goto label10;

        $z2 = 1;

     label07:
        if $z2 == 0 goto label01;

        specialinvoke $r0.<android.inputmethodservice.Keyboard: void skipToEndOfRow(android.content.res.XmlResourceParser)>($r2);

     label08:
        $z1 = 0;

     label09:
        goto label01;

     label10:
        $z2 = 0;

        goto label07;

     label11:
        $r7 = "Key";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label12:
        if $z2 == 0 goto label18;

     label13:
        $z0 = 1;

        $r9 = virtualinvoke $r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>($r5, $r4, $i0, $i1, $r2);

        $r3 = $r9;

        $r10 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r11 = $r9.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        $i2 = $r11[0];

        if $i2 != -1 goto label17;

        $r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key mShiftKey> = $r9;

        $r10 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i2 = $i2 - 1;

        $r0.<android.inputmethodservice.Keyboard: int mShiftKeyIndex> = $i2;

        $r10 = $r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label14:
        goto label01;

     label15:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse error:");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Keyboard", $r6);

        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

     label16:
        $i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        $i1 = $i1 - $i0;

        $r0.<android.inputmethodservice.Keyboard: int mTotalHeight> = $i1;

        return;

     label17:
        $r11 = $r9.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        $i2 = $r11[0];

        if $i2 != -6 goto label01;

        $r10 = $r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label01;

     label18:
        $r7 = "Keyboard";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label01;

        specialinvoke $r0.<android.inputmethodservice.Keyboard: void parseKeyboardAttributes(android.content.res.Resources,android.content.res.XmlResourceParser)>($r5, $r2);

        goto label01;

     label19:
        if $i2 != 3 goto label01;

     label20:
        if $z0 == 0 goto label24;

     label21:
        $z0 = 0;

        $i2 = $r3.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i3 = $r3.<android.inputmethodservice.Keyboard$Key: int width>;

     label22:
        $i2 = $i2 + $i3;

     label23:
        $i0 = $i0 + $i2;

        $i2 = $r0.<android.inputmethodservice.Keyboard: int mTotalWidth>;

        if $i0 <= $i2 goto label01;

        $r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = $i0;

        goto label01;

     label24:
        if $z1 == 0 goto label01;

        $z1 = 0;

        $i2 = $r4.<android.inputmethodservice.Keyboard$Row: int verticalGap>;

        $i1 = $i1 + $i2;

        $i2 = $r4.<android.inputmethodservice.Keyboard$Row: int defaultHeight>;

     label25:
        $i1 = $i1 + $i2;

        goto label01;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label17 to label20 with label15;
        catch java.lang.Exception from label21 to label22 with label15;
        catch java.lang.Exception from label23 to label25 with label15;
    }

    private void parseKeyboardAttributes(android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.res.Resources $r1;
        android.content.res.XmlResourceParser $r2;
        android.util.AttributeSet $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        int $i0, $i1;
        float $f0, $f1;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.content.res.XmlResourceParser;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r2);

        $r4 = <com.android.internal.R$styleable: int[] Keyboard>;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        $i1 = $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        $i1 = $i1 / 10;

        $i0 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>($r5, 0, $i0, $i1);

        $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = $i0;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mDisplayHeight>;

        $i0 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>($r5, 1, $i0, 50);

        $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = $i0;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        $i0 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>($r5, 2, $i0, 0);

        $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = $i0;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mDisplayHeight>;

        $i0 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>($r5, 3, $i0, 0);

        $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = $i0;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $f0 = (float) $i0;

        $f1 = <android.inputmethodservice.Keyboard: float SEARCH_DISTANCE>;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold> = $i0;

        $i0 = $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        $i1 = $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        $i0 = $i0 * $i1;

        $r0.<android.inputmethodservice.Keyboard: int mProximityThreshold> = $i0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void skipToEndOfRow(android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.res.XmlResourceParser $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.res.XmlResourceParser;

     label1:
        $i0 = interfaceinvoke $r1.<android.content.res.XmlResourceParser: int next()>();

        if $i0 == 1 goto label2;

        if $i0 != 3 goto label1;

        $r2 = interfaceinvoke $r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Row");

        if $z0 == 0 goto label1;

        return;

     label2:
        return;
    }

    protected android.inputmethodservice.Keyboard$Key createKeyFromXml(android.content.res.Resources, android.inputmethodservice.Keyboard$Row, int, int, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.res.Resources $r1;
        android.inputmethodservice.Keyboard$Row $r2;
        int $i0, $i1;
        android.content.res.XmlResourceParser $r3;
        android.inputmethodservice.Keyboard$Key $r4;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.inputmethodservice.Keyboard$Row;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: android.content.res.XmlResourceParser;

        $r4 = new android.inputmethodservice.Keyboard$Key;

        specialinvoke $r4.<android.inputmethodservice.Keyboard$Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>($r1, $r2, $i0, $i1, $r3);

        return $r4;
    }

    protected android.inputmethodservice.Keyboard$Row createRowFromXml(android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard $r0;
        android.content.res.Resources $r1;
        android.content.res.XmlResourceParser $r2;
        android.inputmethodservice.Keyboard$Row $r3;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.content.res.XmlResourceParser;

        $r3 = new android.inputmethodservice.Keyboard$Row;

        specialinvoke $r3.<android.inputmethodservice.Keyboard$Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>($r1, $r0, $r2);

        return $r3;
    }

    public int getHeight()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mTotalHeight>;

        return i0;
    }

    protected int getHorizontalGap()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        return i0;
    }

    protected int getKeyHeight()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        return i0;
    }

    protected int getKeyWidth()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        return i0;
    }

    public java.util.List getKeys()
    {
        android.inputmethodservice.Keyboard $r0;
        java.util.List r1;

        $r0 := @this: android.inputmethodservice.Keyboard;

        r1 = $r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        return r1;
    }

    public int getMinWidth()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mTotalWidth>;

        return i0;
    }

    public java.util.List getModifierKeys()
    {
        android.inputmethodservice.Keyboard $r0;
        java.util.List r1;

        $r0 := @this: android.inputmethodservice.Keyboard;

        r1 = $r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys>;

        return r1;
    }

    public int[] getNearestKeys(int, int)
    {
        android.inputmethodservice.Keyboard $r0;
        int $i0, $i1, $i2;
        int[][] $r1;
        int[] $r2;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors>;

        if $r1 != null goto label1;

        specialinvoke $r0.<android.inputmethodservice.Keyboard: void computeNearestNeighbors()>();

     label1:
        if $i0 < 0 goto label2;

        $i2 = virtualinvoke $r0.<android.inputmethodservice.Keyboard: int getMinWidth()>();

        if $i0 >= $i2 goto label2;

        if $i1 < 0 goto label2;

        $i2 = virtualinvoke $r0.<android.inputmethodservice.Keyboard: int getHeight()>();

        if $i1 >= $i2 goto label2;

        $i2 = $r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i1 = $i1 / $i2;

        $i1 = $i1 * 10;

        $i2 = $r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i0 = $i0 / $i2;

        $i0 = $i1 + $i0;

        if $i0 >= 50 goto label2;

        $r1 = $r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors>;

        $r2 = $r1[$i0];

        return $r2;

     label2:
        $r2 = newarray (int)[0];

        return $r2;
    }

    public int getShiftKeyIndex()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mShiftKeyIndex>;

        return i0;
    }

    protected int getVerticalGap()
    {
        android.inputmethodservice.Keyboard $r0;
        int i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        i0 = $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        return i0;
    }

    public boolean isShifted()
    {
        android.inputmethodservice.Keyboard $r0;
        boolean z0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        z0 = $r0.<android.inputmethodservice.Keyboard: boolean mShifted>;

        return z0;
    }

    protected void setHorizontalGap(int)
    {
        android.inputmethodservice.Keyboard $r0;
        int $i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $i0 := @parameter0: int;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = $i0;

        return;
    }

    protected void setKeyHeight(int)
    {
        android.inputmethodservice.Keyboard $r0;
        int $i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $i0 := @parameter0: int;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = $i0;

        return;
    }

    protected void setKeyWidth(int)
    {
        android.inputmethodservice.Keyboard $r0;
        int $i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $i0 := @parameter0: int;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = $i0;

        return;
    }

    public boolean setShifted(boolean)
    {
        android.inputmethodservice.Keyboard $r0;
        boolean $z0, $z1;
        android.inputmethodservice.Keyboard$Key $r1;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key mShiftKey>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key mShiftKey>;

        $r1.<android.inputmethodservice.Keyboard$Key: boolean on> = $z0;

     label1:
        $z1 = $r0.<android.inputmethodservice.Keyboard: boolean mShifted>;

        if $z1 == $z0 goto label2;

        $r0.<android.inputmethodservice.Keyboard: boolean mShifted> = $z0;

        return 1;

     label2:
        return 0;
    }

    protected void setVerticalGap(int)
    {
        android.inputmethodservice.Keyboard $r0;
        int $i0;

        $r0 := @this: android.inputmethodservice.Keyboard;

        $i0 := @parameter0: int;

        $r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = $i0;

        return;
    }
}
