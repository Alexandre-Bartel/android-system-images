public abstract class android.widget.AbsListView extends android.widget.AdapterView implements android.text.TextWatcher, android.view.ViewTreeObserver$OnGlobalLayoutListener, android.view.ViewTreeObserver$OnTouchModeChangeListener, android.widget.Filter$FilterListener
{
    static final int LAYOUT_FORCE_BOTTOM;
    static final int LAYOUT_FORCE_TOP;
    static final int LAYOUT_MOVE_SELECTION;
    static final int LAYOUT_NORMAL;
    static final int LAYOUT_SET_SELECTION;
    static final int LAYOUT_SPECIFIC;
    static final int LAYOUT_SYNC;
    private static final boolean PROFILE_FLINGING;
    private static final boolean PROFILE_SCROLLING;
    static final int TOUCH_MODE_DONE_WAITING;
    static final int TOUCH_MODE_DOWN;
    static final int TOUCH_MODE_FAST_SCROLL;
    static final int TOUCH_MODE_FLING;
    private static final int TOUCH_MODE_OFF;
    private static final int TOUCH_MODE_ON;
    static final int TOUCH_MODE_REST;
    static final int TOUCH_MODE_SCROLL;
    static final int TOUCH_MODE_TAP;
    private static final int TOUCH_MODE_UNKNOWN;
    public static final int TRANSCRIPT_MODE_ALWAYS_SCROLL;
    public static final int TRANSCRIPT_MODE_DISABLED;
    public static final int TRANSCRIPT_MODE_NORMAL;
    android.widget.ListAdapter mAdapter;
    private int mCacheColorHint;
    boolean mCachingStarted;
    private android.view.ContextMenu$ContextMenuInfo mContextMenuInfo;
    android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver;
    private android.view.inputmethod.InputConnection mDefInputConnection;
    private float mDensityScale;
    boolean mDrawSelectorOnTop;
    boolean mFastScrollEnabled;
    private android.widget.FastScroller mFastScroller;
    private boolean mFiltered;
    private boolean mFlingProfilingStarted;
    private android.widget.AbsListView$FlingRunnable mFlingRunnable;
    private boolean mIsChildViewEnabled;
    private int mLastScrollState;
    private int mLastTouchMode;
    int mLastY;
    int mLayoutMode;
    android.graphics.Rect mListPadding;
    int mMotionCorrection;
    int mMotionPosition;
    int mMotionViewNewTop;
    int mMotionViewOriginalTop;
    int mMotionX;
    int mMotionY;
    private android.widget.AbsListView$OnScrollListener mOnScrollListener;
    private android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress;
    private android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress;
    private java.lang.Runnable mPendingCheckForTap;
    private android.widget.AbsListView$PerformClick mPerformClick;
    android.widget.PopupWindow mPopup;
    private android.view.inputmethod.InputConnectionWrapper mPublicInputConnection;
    final android.widget.AbsListView$RecycleBin mRecycler;
    int mResurrectToPosition;
    android.view.View mScrollDown;
    private boolean mScrollProfilingStarted;
    android.view.View mScrollUp;
    boolean mScrollingCacheEnabled;
    int mSelectedTop;
    int mSelectionBottomPadding;
    int mSelectionLeftPadding;
    int mSelectionRightPadding;
    int mSelectionTopPadding;
    android.graphics.drawable.Drawable mSelector;
    android.graphics.Rect mSelectorRect;
    private boolean mSmoothScrollbarEnabled;
    boolean mStackFromBottom;
    android.widget.EditText mTextFilter;
    private boolean mTextFilterEnabled;
    private android.graphics.Rect mTouchFrame;
    int mTouchMode;
    private int mTouchSlop;
    private int mTranscriptMode;
    private android.view.VelocityTracker mVelocityTracker;
    int mWidthMeasureSpec;

    public void <init>(android.content.Context)
    {
        android.widget.AbsListView $r0;
        android.content.Context $r1;
        android.content.res.TypedArray $r2;
        android.graphics.Rect $r3;
        android.widget.AbsListView$RecycleBin $r4;
        int[] $r5;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.AdapterView: void <init>(android.content.Context)>($r1);

        $r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r3;

        $r4 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r4.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>($r0);

        $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r4;

        $r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        $r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        $r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        $r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r3;

        $r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        $r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        $r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        $r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        $r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        $r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        specialinvoke $r0.<android.widget.AbsListView: void initAbsListView()>();

        virtualinvoke $r0.<android.view.View: void setVerticalScrollBarEnabled(boolean)>(1);

        $r5 = <com.android.internal.R$styleable: int[] View>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r5);

        virtualinvoke $r0.<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>($r2);

        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AbsListView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842858);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AbsListView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.Rect $r3;
        android.widget.AbsListView$RecycleBin $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.graphics.drawable.Drawable $r7;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r3;

        $r4 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r4.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>($r0);

        $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r4;

        $r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        $r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        $r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        $r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r3;

        $r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        $r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        $r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        $r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        $r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        $r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        specialinvoke $r0.<android.widget.AbsListView: void initAbsListView()>();

        $r5 = <com.android.internal.R$styleable: int[] AbsListView>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i0, 0);

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if $r7 == null goto label1;

        virtualinvoke $r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r7);

     label1:
        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        $r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = $z0;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke $r0.<android.widget.AbsListView: void setStackFromBottom(boolean)>($z0);

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 1);

        virtualinvoke $r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke $r0.<android.widget.AbsListView: void setTextFilterEnabled(boolean)>($z0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        virtualinvoke $r0.<android.widget.AbsListView: void setTranscriptMode(int)>($i0);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        virtualinvoke $r0.<android.widget.AbsListView: void setCacheColorHint(int)>($i0);

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 0);

        virtualinvoke $r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 1);

        virtualinvoke $r0.<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>($z0);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private boolean acceptFilter()
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        android.widget.Adapter $r1;
        android.widget.Filterable $r2;
        android.widget.Filter $r3;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();

        $z0 = $r1 instanceof android.widget.Filterable;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();

        $r2 = (android.widget.Filterable) $r1;

        $r3 = interfaceinvoke $r2.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if $r3 != null goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    static int access$1000(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @parameter0: android.widget.AbsListView;

        i0 = $r0.<android.view.View: int mPaddingBottom>;

        return i0;
    }

    static int access$1100(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @parameter0: android.widget.AbsListView;

        i0 = $r0.<android.view.View: int mPaddingTop>;

        return i0;
    }

    static int access$1200(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @parameter0: android.widget.AbsListView;

        i0 = $r0.<android.view.View: int mPaddingBottom>;

        return i0;
    }

    static int access$1300(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @parameter0: android.widget.AbsListView;

        i0 = $r0.<android.view.View: int mPaddingTop>;

        return i0;
    }

    static android.view.inputmethod.InputConnection access$1400(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        android.view.inputmethod.InputConnection r1;

        $r0 := @parameter0: android.widget.AbsListView;

        r1 = $r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection>;

        return r1;
    }

    static void access$1600(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @parameter0: android.widget.AbsListView;

        $r1 := @parameter1: android.view.View;

        $z0 := @parameter2: boolean;

        virtualinvoke $r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>($r1, $z0);

        return;
    }

    static void access$1700(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @parameter0: android.widget.AbsListView;

        $r1 := @parameter1: android.view.View;

        $z0 := @parameter2: boolean;

        virtualinvoke $r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>($r1, $z0);

        return;
    }

    static void access$1800(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @parameter0: android.widget.AbsListView;

        $r1 := @parameter1: android.view.View;

        $z0 := @parameter2: boolean;

        virtualinvoke $r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>($r1, $z0);

        return;
    }

    static int access$200(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.View: int getWindowAttachCount()>();

        return $i0;
    }

    static int access$300(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.View: int getWindowAttachCount()>();

        return $i0;
    }

    static boolean access$500(android.widget.AbsListView, android.view.View, int, long)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        int $i0;
        long $l1;
        boolean $z0;

        $r0 := @parameter0: android.widget.AbsListView;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $z0 = specialinvoke $r0.<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long)>($r1, $i0, $l1);

        return $z0;
    }

    static android.widget.AbsListView$CheckForLongPress access$600(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;
        android.widget.AbsListView$CheckForLongPress r1;

        $r0 := @parameter0: android.widget.AbsListView;

        r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        return r1;
    }

    static android.widget.AbsListView$CheckForLongPress access$602(android.widget.AbsListView, android.widget.AbsListView$CheckForLongPress)
    {
        android.widget.AbsListView $r0;
        android.widget.AbsListView$CheckForLongPress $r1;

        $r0 := @parameter0: android.widget.AbsListView;

        $r1 := @parameter1: android.widget.AbsListView$CheckForLongPress;

        $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress> = $r1;

        return $r1;
    }

    static void access$900(android.widget.AbsListView)
    {
        android.widget.AbsListView $r0;

        $r0 := @parameter0: android.widget.AbsListView;

        specialinvoke $r0.<android.widget.AbsListView: void clearScrollingCache()>();

        return;
    }

    private void clearScrollingCache()
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AbsListView: boolean mCachingStarted>;

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>(0);

        $i0 = $r0.<android.view.ViewGroup: int mPersistentDrawingCache>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label1;

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>(0);

     label1:
        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label2:
        $r0.<android.widget.AbsListView: boolean mCachingStarted> = 0;

        return;

     label3:
        return;
    }

    private void createScrollingCache()
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z0 == 0 goto label1;

        $z0 = $r0.<android.widget.AbsListView: boolean mCachingStarted>;

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>(1);

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>(1);

        $r0.<android.widget.AbsListView: boolean mCachingStarted> = 1;

        return;

     label1:
        return;

     label2:
        return;
    }

    private void createTextFilter(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        android.widget.PopupWindow $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.LayoutInflater $r4;
        android.view.View $r5;
        android.widget.EditText $r6;
        android.view.ViewTreeObserver $r7;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r1 = new android.widget.PopupWindow;

        specialinvoke $r1.<android.widget.PopupWindow: void <init>(android.content.Context)>($r2);

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r4 = (android.view.LayoutInflater) $r3;

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367143, null);

        $r6 = (android.widget.EditText) $r5;

        $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter> = $r6;

        $r6 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r6.<android.widget.TextView: void setRawInputType(int)>(177);

        $r6 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r6.<android.widget.TextView: void setImeOptions(int)>(268435456);

        $r6 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r6.<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>($r0);

        virtualinvoke $r1.<android.widget.PopupWindow: void setFocusable(boolean)>(0);

        virtualinvoke $r1.<android.widget.PopupWindow: void setTouchable(boolean)>(0);

        virtualinvoke $r1.<android.widget.PopupWindow: void setInputMethodMode(int)>(2);

        $r6 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r1.<android.widget.PopupWindow: void setContentView(android.view.View)>($r6);

        virtualinvoke $r1.<android.widget.PopupWindow: void setWidth(int)>(-2);

        virtualinvoke $r1.<android.widget.PopupWindow: void setHeight(int)>(-2);

        virtualinvoke $r1.<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup> = $r1;

        $r7 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r7.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r0);

     label1:
        if $z0 == 0 goto label2;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r1.<android.widget.PopupWindow: void setAnimationStyle(int)>(16973923);

        return;

     label2:
        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r1.<android.widget.PopupWindow: void setAnimationStyle(int)>(16973924);

        return;
    }

    private void drawSelector(android.graphics.Canvas)
    {
        android.widget.AbsListView $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;
        android.graphics.Rect $r3;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke $r0.<android.widget.AbsListView: boolean shouldShowSelector()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r3 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r3);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    static int getDistance(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.graphics.Rect;

        $r1 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        lookupswitch($i0)
        {
            case 17: goto label5;
            case 33: goto label6;
            case 66: goto label2;
            case 130: goto label4;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.<android.graphics.Rect: int right>;

        $i1 = $r0.<android.graphics.Rect: int top>;

        $i2 = virtualinvoke $r0.<android.graphics.Rect: int height()>();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i2 = $r1.<android.graphics.Rect: int left>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i4 = $i4 / 2;

        $i3 = $i3 + $i4;

     label3:
        $i0 = $i2 - $i0;

        $i1 = $i3 - $i1;

        $i1 = $i1 * $i1;

        $i0 = $i0 * $i0;

        $i0 = $i1 + $i0;

        return $i0;

     label4:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = virtualinvoke $r0.<android.graphics.Rect: int width()>();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r0.<android.graphics.Rect: int bottom>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        $i3 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i3 = $i3 / 2;

        $i2 = $i2 + $i3;

        $i3 = $r1.<android.graphics.Rect: int top>;

        goto label3;

     label5:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r0.<android.graphics.Rect: int top>;

        $i2 = virtualinvoke $r0.<android.graphics.Rect: int height()>();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i4 = $i4 / 2;

        $i3 = $i3 + $i4;

        goto label3;

     label6:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = virtualinvoke $r0.<android.graphics.Rect: int width()>();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r0.<android.graphics.Rect: int top>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        $i3 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i3 = $i3 / 2;

        $i2 = $i2 + $i3;

        $i3 = $r1.<android.graphics.Rect: int bottom>;

        goto label3;
    }

    private void initAbsListView()
    {
        android.widget.AbsListView $r0;
        android.content.Context $r1;
        android.view.ViewConfiguration $r2;
        int $i0;
        android.content.res.Resources $r3;
        android.util.DisplayMetrics $r4;
        float $f0;

        $r0 := @this: android.widget.AbsListView;

        virtualinvoke $r0.<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke $r0.<android.view.View: void setWillNotDraw(boolean)>(0);

        virtualinvoke $r0.<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>(0);

        virtualinvoke $r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>(1);

        $r1 = $r0.<android.view.View: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = virtualinvoke $r2.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<android.widget.AbsListView: int mTouchSlop> = $i0;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r4.<android.util.DisplayMetrics: float density>;

        $r0.<android.widget.AbsListView: float mDensityScale> = $f0;

        return;
    }

    private boolean performLongPress(android.view.View, int, long)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        int $i0;
        long $l1;
        boolean $z0;
        android.widget.AdapterView$OnItemLongClickListener $r2;
        android.view.ContextMenu$ContextMenuInfo $r3;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $z0 = 0;

        $r2 = $r0.<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        $z0 = interfaceinvoke $r2.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>($r0, $r1, $i0, $l1);

     label1:
        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>($r1, $i0, $l1);

        $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r3;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>($r0);

     label2:
        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.view.View: boolean performHapticFeedback(int)>(0);

        return $z0;

     label3:
        return $z0;
    }

    private void positionPopup()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;
        int[] $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0;
        android.widget.PopupWindow $r4;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        $r1 = newarray (int)[2];

        virtualinvoke $r0.<android.view.View: void getLocationOnScreen(int[])>($r1);

        $i1 = $r1[1];

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i0 = $i0 - $i1;

        $f0 = $r0.<android.widget.AbsListView: float mDensityScale>;

        $f0 = $f0 * 20.0F;

        $i1 = (int) $f0;

        $i0 = $i0 + $i1;

        $r4 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 != 0 goto label1;

        $r4 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i1 = $r1[0];

        virtualinvoke $r4.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>($r0, 81, $i1, $i0);

        return;

     label1:
        $r4 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i1 = $r1[0];

        virtualinvoke $r4.<android.widget.PopupWindow: void update(int,int,int,int)>($i1, $i0, -1, -1);

        return;
    }

    private void positionSelector(int, int, int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $i4 = $r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i0 = $i0 - $i4;

        $i4 = $r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i1 = $i1 - $i4;

        $i4 = $r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i2 = $i4 + $i2;

        $i4 = $r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i3 = $i4 + $i3;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    private void showPopup()
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.View: int getWindowVisibility()>();

        if $i0 != 0 goto label1;

        specialinvoke $r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        specialinvoke $r0.<android.widget.AbsListView: void positionPopup()>();

        virtualinvoke $r0.<android.widget.AdapterView: void checkFocus()>();

        return;

     label1:
        return;
    }

    private boolean startScrollIfNeeded(int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2;
        android.os.Handler $r1;
        android.widget.AbsListView$CheckForLongPress $r2;
        android.view.View $r3;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = $r0.<android.widget.AbsListView: int mTouchSlop>;

        if $i1 <= $i2 goto label3;

        specialinvoke $r0.<android.widget.AbsListView: void createScrollingCache()>();

        $r0.<android.widget.AbsListView: int mTouchMode> = 3;

        $r0.<android.widget.AbsListView: int mMotionCorrection> = $i0;

        $r1 = virtualinvoke $r0.<android.view.View: android.os.Handler getHandler()>();

        if $r1 == null goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(0);

        $i1 = $r0.<android.widget.AbsListView: int mMotionPosition>;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i1 - $i0;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        if $r3 == null goto label2;

        virtualinvoke $r3.<android.view.View: void setPressed(boolean)>(0);

     label2:
        virtualinvoke $r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(1);

        virtualinvoke $r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(1);

        return 1;

     label3:
        return 0;
    }

    private void useDefaultSelector()
    {
        android.widget.AbsListView $r0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301602);

        virtualinvoke $r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.widget.AbsListView $r0;
        java.util.ArrayList $r1;
        android.widget.ListAdapter $r2;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: java.util.ArrayList;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 != null goto label1;

        return;

     label1:
        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label4;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $i3 = $i0 + $i2;

        $z0 = interfaceinvoke $r2.<android.widget.ListAdapter: boolean isEnabled(int)>($i3);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label3:
        virtualinvoke $r3.<android.view.View: void addTouchables(java.util.ArrayList)>($r1);

        $i2 = $i2 + 1;

        goto label2;

     label4:
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.widget.AbsListView $r0;
        android.text.Editable $r1;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public boolean checkInputConnectionProxy(android.view.View)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        android.widget.EditText $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.widget.AbsListView$LayoutParams;

        return $z0;
    }

    public void clearTextFilter()
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        android.widget.EditText $r1;
        android.widget.PopupWindow $r2;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>("");

        $r0.<android.widget.AbsListView: boolean mFiltered> = 0;

        $r2 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.widget.AbsListView: void dismissPopup()>();

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label4;

        $z0 = $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label3;

        $i1 = $i0 * 100;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i3 <= 0 goto label1;

        $i2 = $i2 * 100;

        $i3 = $i2 / $i3;

        $i1 = $i1 + $i3;

     label1:
        $i0 = $i0 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i0 <= 0 goto label2;

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i3 = $i3 - $i2;

        $i3 = $i3 * 100;

        $i0 = $i3 / $i0;

        $i1 = $i1 - $i0;

     label2:
        return $i1;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.widget.AbsListView;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 < 0 goto label5;

        if $i2 <= 0 goto label5;

        $z0 = $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i0 <= 0 goto label5;

        $i1 = $i1 * 100;

        $i2 = $i2 * 100;

        $i0 = $i2 / $i0;

        $i1 = $i1 - $i0;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        return $i1;

     label1:
        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i1 != 0 goto label3;

        $i3 = 0;

     label2:
        $f1 = (float) $i1;

        $f2 = (float) $i2;

        $f3 = (float) $i3;

        $f0 = (float) $i0;

        $f0 = $f3 / $f0;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $i1 = (int) $f1;

        return $i1;

     label3:
        $i3 = $i1 + $i2;

        if $i3 != $i0 goto label4;

        $i3 = $i0;

        goto label2;

     label4:
        $i3 = $i2 / 2;

        $i3 = $i1 + $i3;

        goto label2;

     label5:
        return 0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.AbsListView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i0 = $i0 * 100;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        return $i0;

     label1:
        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        return $i0;
    }

    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View, int, long)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        int $i0;
        long $l1;
        android.widget.AdapterView$AdapterContextMenuInfo $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $r2 = new android.widget.AdapterView$AdapterContextMenuInfo;

        specialinvoke $r2.<android.widget.AdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>($r1, $i0, $l1);

        return $r2;
    }

    void dismissPopup()
    {
        android.widget.AbsListView $r0;
        android.widget.PopupWindow $r1;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r1.<android.widget.PopupWindow: void dismiss()>();

        return;

     label1:
        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.widget.AbsListView $r0;
        android.graphics.Canvas $r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i2 = 0;

        $i3 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i3 = $i3 & 34;

        if $i3 != 34 goto label5;

        $z1 = 1;

     label1:
        if $z1 == 0 goto label2;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i0 = $r0.<android.view.View: int mScrollX>;

        $i1 = $r0.<android.view.View: int mScrollY>;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $i3 + $i0;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i4 = $i4 + $i1;

        $i5 = $r0.<android.view.View: int mRight>;

        $i0 = $i5 + $i0;

        $i5 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i5;

        $i5 = $r0.<android.view.View: int mBottom>;

        $i1 = $i5 + $i1;

        $i5 = $r0.<android.view.View: int mTop>;

        $i1 = $i1 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingBottom>;

        $i1 = $i1 - $i5;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i3, $i4, $i0, $i1);

        $i3 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i3 = $i3 & -35;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i3;

     label2:
        $z0 = $r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop>;

        if $z0 != 0 goto label3;

        specialinvoke $r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>($r1);

     label3:
        specialinvoke $r0.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label4;

        specialinvoke $r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>($r1);

     label4:
        if $z1 == 0 goto label6;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

        $i2 = $r0.<android.view.ViewGroup: int mGroupFlags>;

        $i2 = $i2 | 34;

        $r0.<android.view.ViewGroup: int mGroupFlags> = $i2;

        return;

     label5:
        $z1 = 0;

        goto label1;

     label6:
        return;
    }

    protected void dispatchSetPressed(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.AbsListView $r0;
        android.graphics.Canvas $r1;
        android.widget.FastScroller $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.View: void draw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r2.<android.widget.FastScroller: void draw(android.graphics.Canvas)>($r1);

        return;

     label1:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.AbsListView $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.widget.AbsListView;

        specialinvoke $r0.<android.view.ViewGroup: void drawableStateChanged()>();

        $r2 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r1 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        return;

     label1:
        return;
    }

    abstract void fillGap(boolean);

    abstract int findMotionRow(int);

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView $r0;
        android.util.AttributeSet $r1;
        android.widget.AbsListView$LayoutParams $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke $r0.<android.widget.AbsListView: android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.AbsListView$LayoutParams $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView $r0;
        android.util.AttributeSet $r1;
        android.widget.AbsListView$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.AbsListView$LayoutParams;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.widget.AbsListView $r0;
        float $f0, $f1;
        int $i0, $i1, $i2;
        android.view.View $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $f1 = specialinvoke $r0.<android.view.View: float getBottomFadingEdgeStrength()>();

        if $i0 != 0 goto label1;

        return $f1;

     label1:
        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = $i1 + $i0;

        $i1 = $i1 - 1;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i2 = $i2 - 1;

        if $i1 >= $i2 goto label2;

        return 1.0F;

     label2:
        $i0 = $i0 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $f0 = (float) $i2;

        $i2 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i1 - $i2;

        if $i0 <= $i2 goto label3;

        $i0 = $i0 - $i1;

        $i1 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 + $i1;

        $f1 = (float) $i0;

        $f0 = $f1 / $f0;

        return $f0;

     label3:
        return $f1;
    }

    public int getCacheColorHint()
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        i0 = $r0.<android.widget.AbsListView: int mCacheColorHint>;

        return i0;
    }

    protected android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()
    {
        android.widget.AbsListView $r0;
        android.view.ContextMenu$ContextMenuInfo r1;

        $r0 := @this: android.widget.AbsListView;

        r1 = $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo>;

        return r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.AbsListView $r0;
        android.graphics.Rect $r1;
        android.view.View $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = virtualinvoke $r0.<android.widget.AbsListView: android.view.View getSelectedView()>();

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r1);

        virtualinvoke $r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r1);

        return;

     label1:
        specialinvoke $r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r1);

        return;
    }

    int getFooterViewsCount()
    {
        android.widget.AbsListView $r0;

        $r0 := @this: android.widget.AbsListView;

        return 0;
    }

    int getHeaderViewsCount()
    {
        android.widget.AbsListView $r0;

        $r0 := @this: android.widget.AbsListView;

        return 0;
    }

    public int getListPaddingBottom()
    {
        android.widget.AbsListView $r0;
        android.graphics.Rect $r1;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i0 = $r1.<android.graphics.Rect: int bottom>;

        return i0;
    }

    public int getListPaddingLeft()
    {
        android.widget.AbsListView $r0;
        android.graphics.Rect $r1;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i0 = $r1.<android.graphics.Rect: int left>;

        return i0;
    }

    public int getListPaddingRight()
    {
        android.widget.AbsListView $r0;
        android.graphics.Rect $r1;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i0 = $r1.<android.graphics.Rect: int right>;

        return i0;
    }

    public int getListPaddingTop()
    {
        android.widget.AbsListView $r0;
        android.graphics.Rect $r1;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i0 = $r1.<android.graphics.Rect: int top>;

        return i0;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;
        android.view.View $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i0 <= 0 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i0 < 0 goto label1;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i1 - $i0;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getSelector()
    {
        android.widget.AbsListView $r0;
        android.graphics.drawable.Drawable r1;

        $r0 := @this: android.widget.AbsListView;

        r1 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        return r1;
    }

    public int getSolidColor()
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        i0 = $r0.<android.widget.AbsListView: int mCacheColorHint>;

        return i0;
    }

    public java.lang.CharSequence getTextFilter()
    {
        android.widget.AbsListView $r0;
        android.text.Editable $r1;
        boolean $z0;
        android.widget.EditText $r2;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $r1 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        return $r1;

     label1:
        return null;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.widget.AbsListView $r0;
        float $f0, $f1;
        int $i0, $i1;
        android.view.View $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $f1 = specialinvoke $r0.<android.view.View: float getTopFadingEdgeStrength()>();

        if $i0 != 0 goto label1;

        return $f1;

     label1:
        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i0 <= 0 goto label2;

        return 1.0F;

     label2:
        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $f0 = (float) $i1;

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        if $i0 >= $i1 goto label3;

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f1 = (float) $i0;

        $f0 = $f1 / $f0;

        return $f0;

     label3:
        return $f1;
    }

    public int getTranscriptMode()
    {
        android.widget.AbsListView $r0;
        int i0;

        $r0 := @this: android.widget.AbsListView;

        i0 = $r0.<android.widget.AbsListView: int mTranscriptMode>;

        return i0;
    }

    protected void handleDataChanged()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        long $l3, $l4;
        byte $b5;

        $r0 := @this: android.widget.AbsListView;

        $i0 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i0 <= 0 goto label13;

        $z0 = $r0.<android.widget.AdapterView: boolean mNeedSync>;

        if $z0 == 0 goto label03;

        $r0.<android.widget.AdapterView: boolean mNeedSync> = 0;

        $i1 = $r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i1 == 2 goto label01;

        $i1 = $r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i1 != 1 goto label02;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = $i1 + $i2;

        $i2 = $r0.<android.widget.AdapterView: int mOldItemCount>;

        if $i1 < $i2 goto label02;

     label01:
        $r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label02:
        $i1 = $r0.<android.widget.AdapterView: int mSyncMode>;

        lookupswitch($i1)
        {
            case 0: goto label06;
            case 1: goto label10;
            default: goto label03;
        };

     label03:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 != 0 goto label12;

        $i2 = virtualinvoke $r0.<android.widget.AdapterView: int getSelectedItemPosition()>();

        $i1 = $i2;

        if $i2 < $i0 goto label04;

        $i1 = $i0 - 1;

     label04:
        if $i1 >= 0 goto label05;

        $i1 = 0;

     label05:
        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>($i1, 1);

        if $i0 < 0 goto label11;

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i0);

        return;

     label06:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 == 0 goto label07;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i1 = $r0.<android.widget.AdapterView: int mSyncPosition>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i0 = $i0 - 1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r0.<android.widget.AdapterView: int mSyncPosition> = $i0;

        return;

     label07:
        $i1 = virtualinvoke $r0.<android.widget.AdapterView: int findSyncPosition()>();

        if $i1 < 0 goto label03;

        $i2 = virtualinvoke $r0.<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>($i1, 1);

        if $i2 != $i1 goto label03;

        $r0.<android.widget.AdapterView: int mSyncPosition> = $i1;

        $l3 = $r0.<android.widget.AdapterView: long mSyncHeight>;

        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $l4 = (long) $i0;

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label09;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 5;

     label08:
        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i1);

        return;

     label09:
        $r0.<android.widget.AbsListView: int mLayoutMode> = 2;

        goto label08;

     label10:
        $r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i1 = $r0.<android.widget.AdapterView: int mSyncPosition>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i0 = $i0 - 1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r0.<android.widget.AdapterView: int mSyncPosition> = $i0;

        return;

     label11:
        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>($i1, 0);

        if $i0 < 0 goto label13;

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>($i0);

        return;

     label12:
        $i0 = $r0.<android.widget.AbsListView: int mResurrectToPosition>;

        if $i0 >= 0 goto label16;

     label13:
        $z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label15;

        $b5 = 3;

     label14:
        $r0.<android.widget.AbsListView: int mLayoutMode> = $b5;

        $r0.<android.widget.AdapterView: int mSelectedPosition> = -1;

        $r0.<android.widget.AdapterView: long mSelectedRowId> = -9223372036854775808L;

        $r0.<android.widget.AdapterView: int mNextSelectedPosition> = -1;

        $r0.<android.widget.AdapterView: long mNextSelectedRowId> = -9223372036854775808L;

        $r0.<android.widget.AdapterView: boolean mNeedSync> = 0;

        virtualinvoke $r0.<android.widget.AdapterView: void checkSelectionChanged()>();

        return;

     label15:
        $b5 = 1;

        goto label14;

     label16:
        return;
    }

    public boolean hasTextFilter()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        return z0;
    }

    void hideSelector()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;
        android.graphics.Rect $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i0 == -1 goto label2;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = $i0;

        $i0 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        if $i0 < 0 goto label1;

        $i1 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i1 == $i0 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mNextSelectedPosition>;

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = $i0;

     label1:
        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>(-1);

        $r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        return;

     label2:
        return;
    }

    public void invalidateViews()
    {
        android.widget.AbsListView $r0;

        $r0 := @this: android.widget.AbsListView;

        $r0.<android.widget.AdapterView: boolean mDataChanged> = 1;

        virtualinvoke $r0.<android.widget.AdapterView: void rememberSyncState()>();

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    void invokeOnItemScrollListener()
    {
        android.widget.AbsListView $r0;
        android.widget.FastScroller $r1;
        int $i0, $i1, $i2;
        android.widget.AbsListView$OnScrollListener $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        virtualinvoke $r1.<android.widget.FastScroller: void onScroll(android.widget.AbsListView,int,int,int)>($r0, $i0, $i1, $i2);

     label1:
        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        interfaceinvoke $r2.<android.widget.AbsListView$OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>($r0, $i0, $i1, $i2);

        return;

     label2:
        return;
    }

    public boolean isFastScrollEnabled()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        return z0;
    }

    protected boolean isInFilterMode()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        return z0;
    }

    public boolean isScrollingCacheEnabled()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        return z0;
    }

    public boolean isSmoothScrollbarEnabled()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        return z0;
    }

    public boolean isStackFromBottom()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        return z0;
    }

    public boolean isTextFilterEnabled()
    {
        android.widget.AbsListView $r0;
        boolean z0;

        $r0 := @this: android.widget.AbsListView;

        z0 = $r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        return z0;
    }

    protected boolean isVerticalScrollBarHidden()
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        android.widget.FastScroller $r1;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z0 = virtualinvoke $r1.<android.widget.FastScroller: boolean isVisible()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void keyPressed()
    {
        android.widget.AbsListView $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Rect $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        android.view.View $r3;
        android.graphics.drawable.TransitionDrawable $r4;
        android.widget.AbsListView$CheckForKeyLongPress $r5;
        long $l2;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        if $r1 == null goto label07;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z0 == 0 goto label08;

     label01:
        if $r2 == null goto label09;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 - $i1;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        if $r3 == null goto label03;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        virtualinvoke $r3.<android.view.View: void setPressed(boolean)>(1);

     label03:
        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(1);

        $z0 = virtualinvoke $r0.<android.view.View: boolean isLongClickable()>();

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r1 == null goto label04;

        $z1 = $r1 instanceof android.graphics.drawable.TransitionDrawable;

        if $z1 == 0 goto label04;

        if $z0 == 0 goto label06;

        $r4 = (android.graphics.drawable.TransitionDrawable) $r1;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        virtualinvoke $r4.<android.graphics.drawable.TransitionDrawable: void startTransition(int)>($i0);

     label04:
        if $z0 == 0 goto label11;

        $z0 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z0 != 0 goto label12;

        $r5 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if $r5 != null goto label05;

        $r5 = new android.widget.AbsListView$CheckForKeyLongPress;

        specialinvoke $r5.<android.widget.AbsListView$CheckForKeyLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>($r0, null);

        $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress> = $r5;

     label05:
        $r5 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        virtualinvoke $r5.<android.widget.AbsListView$WindowRunnnable: void rememberWindowAttachCount()>();

        $r5 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l2 = (long) $i0;

        virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r5, $l2);

        return;

     label06:
        $r4 = (android.graphics.drawable.TransitionDrawable) $r1;

        virtualinvoke $r4.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

        goto label04;

     label07:
        return;

     label08:
        return;

     label09:
        return;

     label10:
        return;

     label11:
        return;

     label12:
        return;
    }

    protected void layoutChildren()
    {
        android.widget.AbsListView $r0;

        $r0 := @this: android.widget.AbsListView;

        return;
    }

    android.view.View obtainView(int)
    {
        android.widget.AbsListView $r0;
        int $i0;
        android.widget.AbsListView$RecycleBin $r1;
        android.view.View $r2, $r4;
        android.widget.ListAdapter $r3;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $r2 = virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>($i0);

        if $r2 == null goto label1;

        $r3 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r4 = interfaceinvoke $r3.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>($i0, $r2, $r0);

        if $r4 == $r2 goto label2;

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View)>($r2);

        $i0 = $r0.<android.widget.AbsListView: int mCacheColorHint>;

        if $i0 == 0 goto label3;

        $i0 = $r0.<android.widget.AbsListView: int mCacheColorHint>;

        virtualinvoke $r4.<android.view.View: void setDrawingCacheBackgroundColor(int)>($i0);

        return $r4;

     label1:
        $r3 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r2 = interfaceinvoke $r3.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>($i0, null, $r0);

        $i0 = $r0.<android.widget.AbsListView: int mCacheColorHint>;

        if $i0 == 0 goto label4;

        $i0 = $r0.<android.widget.AbsListView: int mCacheColorHint>;

        virtualinvoke $r2.<android.view.View: void setDrawingCacheBackgroundColor(int)>($i0);

        return $r2;

     label2:
        return $r4;

     label3:
        return $r4;

     label4:
        return $r2;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AbsListView $r0;
        android.view.ViewTreeObserver $r1;

        $r0 := @this: android.widget.AbsListView;

        specialinvoke $r0.<android.view.View: void onAttachedToWindow()>();

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r0);

        return;

     label1:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        int[] $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $z0 = $r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke $r0.<android.view.ViewGroup: int[] onCreateDrawableState(int)>($i0);

        return $r1;

     label1:
        $r1 = <android.widget.AbsListView: int[] ENABLED_STATE_SET>;

        $i1 = $r1[0];

        $i0 = $i0 + 1;

        $r1 = specialinvoke $r0.<android.view.ViewGroup: int[] onCreateDrawableState(int)>($i0);

        $i0 = -1;

        $i2 = lengthof $r1;

        $i2 = $i2 - 1;

     label2:
        if $i2 < 0 goto label3;

        $i3 = $r1[$i2];

        if $i3 != $i1 goto label5;

        $i0 = $i2;

     label3:
        if $i0 < 0 goto label4;

        $i1 = $i0 + 1;

        $i2 = lengthof $r1;

        $i2 = $i2 - $i0;

        $i2 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r1, $i0, $i2);

     label4:
        return $r1;

     label5:
        $i2 = $i2 + -1;

        goto label2;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.AbsListView $r0;
        android.view.inputmethod.EditorInfo $r1;
        boolean $z0;
        android.view.inputmethod.InputConnectionWrapper $r2;
        android.view.inputmethod.BaseInputConnection $r3;
        android.widget.AbsListView$2 $r4;
        android.widget.EditText $r5;
        android.view.inputmethod.InputConnection $r6;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke $r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z0 == 0 goto label2;

        specialinvoke $r0.<android.widget.AbsListView: void createTextFilter(boolean)>(0);

        $r2 = $r0.<android.widget.AbsListView: android.view.inputmethod.InputConnectionWrapper mPublicInputConnection>;

        if $r2 != null goto label1;

        $r3 = new android.view.inputmethod.BaseInputConnection;

        specialinvoke $r3.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>($r0, 0);

        $r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection> = $r3;

        $r4 = new android.widget.AbsListView$2;

        $r5 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>($r1);

        specialinvoke $r4.<android.widget.AbsListView$2: void <init>(android.widget.AbsListView,android.view.inputmethod.InputConnection,boolean)>($r0, $r6, 1);

        $r0.<android.widget.AbsListView: android.view.inputmethod.InputConnectionWrapper mPublicInputConnection> = $r4;

     label1:
        $r1.<android.view.inputmethod.EditorInfo: int inputType> = 177;

        $r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 6;

        $r2 = $r0.<android.widget.AbsListView: android.view.inputmethod.InputConnectionWrapper mPublicInputConnection>;

        return $r2;

     label2:
        return null;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AbsListView $r0;
        android.view.ViewTreeObserver $r1;

        $r0 := @this: android.widget.AbsListView;

        specialinvoke $r0.<android.view.View: void onDetachedFromWindow()>();

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r0);

        return;

     label1:
        return;
    }

    public void onFilterComplete(int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i1 >= 0 goto label1;

        if $i0 <= 0 goto label2;

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        virtualinvoke $r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        int $i0;
        android.graphics.Rect $r1;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        specialinvoke $r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>($z0, $i0, $r1);

        if $z0 == 0 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i0 >= 0 goto label2;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    public void onGlobalLayout()
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        android.widget.PopupWindow $r1;

        $r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label1;

        $z0 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 != 0 goto label4;

        specialinvoke $r0.<android.widget.AbsListView: void showPopup()>();

        return;

     label1:
        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<android.widget.AbsListView: void dismissPopup()>();

        return;

     label2:
        return;

     label3:
        return;

     label4:
        return;

     label5:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        android.widget.FastScroller $r2;
        boolean $z0;
        android.view.View $r3;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        lookupswitch($i2)
        {
            case 0: goto label3;
            case 1: goto label8;
            case 2: goto label5;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        $i2 = virtualinvoke $r0.<android.widget.AbsListView: int findMotionRow(int)>($i1);

        $i3 = $r0.<android.widget.AbsListView: int mTouchMode>;

        if $i3 == 4 goto label4;

        if $i2 < 0 goto label4;

        $i3 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i3 = $i2 - $i3;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i3;

        $r0.<android.widget.AbsListView: int mMotionX> = $i0;

        $r0.<android.widget.AbsListView: int mMotionY> = $i1;

        $r0.<android.widget.AbsListView: int mMotionPosition> = $i2;

        $r0.<android.widget.AbsListView: int mTouchMode> = 0;

        specialinvoke $r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label4:
        $r0.<android.widget.AbsListView: int mLastY> = -2147483648;

        goto label2;

     label5:
        $i0 = $r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i0)
        {
            case 0: goto label7;
            default: goto label6;
        };

     label6:
        goto label2;

     label7:
        $i0 = $r0.<android.widget.AbsListView: int mMotionY>;

        $i1 = $i1 - $i0;

        $z0 = specialinvoke $r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int)>($i1);

        if $z0 == 0 goto label2;

        return 1;

     label8:
        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke $r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label2;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2;
        android.view.KeyEvent $r1;
        boolean $z0;
        android.widget.ListAdapter $r2;
        android.view.View $r3;
        long $l3;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        lookupswitch($i0)
        {
            case 23: goto label2;
            case 66: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke $r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label2:
        $z0 = virtualinvoke $r0.<android.view.View: boolean isPressed()>();

        if $z0 == 0 goto label1;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i1 < 0 goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label1;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i2 = interfaceinvoke $r2.<android.widget.ListAdapter: int getCount()>();

        if $i1 >= $i2 goto label1;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 - $i1;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $l3 = $r0.<android.widget.AdapterView: long mSelectedRowId>;

        virtualinvoke $r0.<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>($r3, $i0, $l3);

        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(0);

        if $r3 == null goto label3;

        virtualinvoke $r3.<android.view.View: void setPressed(boolean)>(0);

     label3:
        return 1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke $r0.<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r0.<android.widget.AdapterView: boolean mInLayout> = 1;

        virtualinvoke $r0.<android.widget.AbsListView: void layoutChildren()>();

        $r0.<android.widget.AdapterView: boolean mInLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 != null goto label1;

        specialinvoke $r0.<android.widget.AbsListView: void useDefaultSelector()>();

     label1:
        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i1 = $r0.<android.view.View: int mPaddingLeft>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int top> = $i0;

        $i0 = $r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i1 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = $r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i1 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int bottom> = $i0;

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AbsListView $r0;
        android.os.Parcelable $r1;
        android.widget.AbsListView$SavedState $r2;
        int $i0;
        long $l1;
        byte $b2;
        java.lang.String $r3;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (android.widget.AbsListView$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r0.<android.widget.AdapterView: boolean mDataChanged> = 1;

        $i0 = $r2.<android.widget.AbsListView$SavedState: int height>;

        $l1 = (long) $i0;

        $r0.<android.widget.AdapterView: long mSyncHeight> = $l1;

        $l1 = $r2.<android.widget.AbsListView$SavedState: long selectedId>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label2;

        $r0.<android.widget.AdapterView: boolean mNeedSync> = 1;

        $l1 = $r2.<android.widget.AbsListView$SavedState: long selectedId>;

        $r0.<android.widget.AdapterView: long mSyncRowId> = $l1;

        $i0 = $r2.<android.widget.AbsListView$SavedState: int position>;

        $r0.<android.widget.AdapterView: int mSyncPosition> = $i0;

        $i0 = $r2.<android.widget.AbsListView$SavedState: int viewTop>;

        $r0.<android.widget.AdapterView: int mSpecificTop> = $i0;

        $r0.<android.widget.AdapterView: int mSyncMode> = 0;

     label1:
        $r3 = $r2.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        virtualinvoke $r0.<android.widget.AbsListView: void setFilterText(java.lang.String)>($r3);

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        return;

     label2:
        $l1 = $r2.<android.widget.AbsListView$SavedState: long firstId>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label1;

        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>(-1);

        $r0.<android.widget.AdapterView: boolean mNeedSync> = 1;

        $l1 = $r2.<android.widget.AbsListView$SavedState: long firstId>;

        $r0.<android.widget.AdapterView: long mSyncRowId> = $l1;

        $i0 = $r2.<android.widget.AbsListView$SavedState: int position>;

        $r0.<android.widget.AdapterView: int mSyncPosition> = $i0;

        $i0 = $r2.<android.widget.AbsListView$SavedState: int viewTop>;

        $r0.<android.widget.AdapterView: int mSpecificTop> = $i0;

        $r0.<android.widget.AdapterView: int mSyncMode> = 1;

        goto label1;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AbsListView $r0;
        android.widget.AbsListView$SavedState $r1;
        android.widget.EditText $r2;
        int $i0;
        android.os.Parcelable $r3;
        boolean $z0;
        long $l1;
        byte $b2;
        android.text.Editable $r4;
        java.lang.String $r5;
        android.view.View $r6;
        android.widget.ListAdapter $r7;

        $r0 := @this: android.widget.AbsListView;

        virtualinvoke $r0.<android.widget.AbsListView: void dismissPopup()>();

        $r3 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new android.widget.AbsListView$SavedState;

        specialinvoke $r1.<android.widget.AbsListView$SavedState: void <init>(android.os.Parcelable)>($r3);

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label3;

        $z0 = 1;

     label1:
        $l1 = virtualinvoke $r0.<android.widget.AdapterView: long getSelectedItemId()>();

        $r1.<android.widget.AbsListView$SavedState: long selectedId> = $l1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $r1.<android.widget.AbsListView$SavedState: int height> = $i0;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label4;

        $i0 = $r0.<android.widget.AbsListView: int mSelectedTop>;

        $r1.<android.widget.AbsListView$SavedState: int viewTop> = $i0;

        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getSelectedItemPosition()>();

        $r1.<android.widget.AbsListView$SavedState: int position> = $i0;

        $r1.<android.widget.AbsListView$SavedState: long firstId> = -1L;

     label2:
        $r1.<android.widget.AbsListView$SavedState: java.lang.String filter> = null;

        $z0 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label6;

        $r2 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r2 == null goto label7;

        $r4 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        if $r4 == null goto label8;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r5;

        return $r1;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        $r6 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r6.<android.view.View: int getTop()>();

        $r1.<android.widget.AbsListView$SavedState: int viewTop> = $i0;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $r1.<android.widget.AbsListView$SavedState: int position> = $i0;

        $r7 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $l1 = interfaceinvoke $r7.<android.widget.ListAdapter: long getItemId(int)>($i0);

        $r1.<android.widget.AbsListView$SavedState: long firstId> = $l1;

        goto label2;

     label5:
        $r1.<android.widget.AbsListView$SavedState: int viewTop> = 0;

        $r1.<android.widget.AbsListView$SavedState: long firstId> = -1L;

        $r1.<android.widget.AbsListView$SavedState: int position> = 0;

        goto label2;

     label6:
        return $r1;

     label7:
        return $r1;

     label8:
        return $r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.FastScroller $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i4 <= 0 goto label1;

        $r0.<android.widget.AdapterView: boolean mDataChanged> = 1;

        virtualinvoke $r0.<android.widget.AdapterView: void rememberSyncState()>();

     label1:
        $r1 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r1.<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label2:
        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;
        android.widget.PopupWindow $r2;
        boolean $z0;
        android.widget.ListAdapter $r3;
        android.widget.Filterable $r4;
        android.widget.Filter $r5;
        java.lang.IllegalStateException $r6;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 == null goto label4;

        $z0 = virtualinvoke $r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z0 == 0 goto label5;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r2 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 != 0 goto label2;

        if $i0 <= 0 goto label2;

        specialinvoke $r0.<android.widget.AbsListView: void showPopup()>();

        $r0.<android.widget.AbsListView: boolean mFiltered> = 1;

     label1:
        $r3 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z0 = $r3 instanceof android.widget.Filterable;

        if $z0 == 0 goto label6;

        $r3 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r4 = (android.widget.Filterable) $r3;

        $r5 = interfaceinvoke $r4.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if $r5 == null goto label3;

        virtualinvoke $r5.<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)>($r1, $r0);

        return;

     label2:
        if $z0 == 0 goto label1;

        if $i0 != 0 goto label1;

        virtualinvoke $r0.<android.widget.AbsListView: void dismissPopup()>();

        $r0.<android.widget.AbsListView: boolean mFiltered> = 0;

        goto label1;

     label3:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot call onTextChanged with a non filterable adapter");

        throw $r6;

     label4:
        return;

     label5:
        return;

     label6:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView $r0;
        android.view.MotionEvent $r1;
        android.widget.FastScroller $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0;
        android.view.VelocityTracker $r3;
        android.widget.Adapter $r4;
        android.widget.ListAdapter $r5;
        java.lang.Runnable $r6;
        android.widget.AbsListView$CheckForTap $r7;
        long $l5;
        android.view.View $r8;
        android.os.Handler $r9;
        android.widget.AbsListView$CheckForLongPress $r10;
        android.widget.AbsListView$PerformClick $r11;
        android.graphics.drawable.Drawable $r12;
        android.graphics.drawable.TransitionDrawable $r13;
        android.widget.AbsListView$1 $r14;
        android.content.Context $r15;
        android.view.ViewConfiguration $r16;
        android.widget.AbsListView$FlingRunnable $r17;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 == null goto label01;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i2 = (int) $f0;

        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label02;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r3;

     label02:
        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label17;
            case 2: goto label10;
            case 3: goto label34;
            default: goto label03;
        };

     label03:
        return 1;

     label04:
        $i3 = virtualinvoke $r0.<android.widget.AbsListView: int pointToPosition(int,int)>($i1, $i2);

        $i0 = $i3;

        $z0 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z0 != 0 goto label06;

        $i4 = $r0.<android.widget.AbsListView: int mTouchMode>;

        if $i4 == 4 goto label08;

        if $i3 < 0 goto label08;

        $r4 = virtualinvoke $r0.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();

        $r5 = (android.widget.ListAdapter) $r4;

        $z0 = interfaceinvoke $r5.<android.widget.ListAdapter: boolean isEnabled(int)>($i3);

        if $z0 == 0 goto label08;

        $r0.<android.widget.AbsListView: int mTouchMode> = 0;

        $r6 = $r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        if $r6 != null goto label05;

        $r7 = new android.widget.AbsListView$CheckForTap;

        specialinvoke $r7.<android.widget.AbsListView$CheckForTap: void <init>(android.widget.AbsListView)>($r0);

        $r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap> = $r7;

     label05:
        $r6 = $r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        $i3 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l5 = (long) $i3;

        virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r6, $l5);

     label06:
        if $i0 < 0 goto label07;

        $i3 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i3 = $i0 - $i3;

        $r8 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i3 = virtualinvoke $r8.<android.view.View: int getTop()>();

        $r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i3;

        $r0.<android.widget.AbsListView: int mMotionX> = $i1;

        $r0.<android.widget.AbsListView: int mMotionY> = $i2;

        $r0.<android.widget.AbsListView: int mMotionPosition> = $i0;

     label07:
        $r0.<android.widget.AbsListView: int mLastY> = -2147483648;

        goto label03;

     label08:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getEdgeFlags()>();

        if $i0 == 0 goto label09;

        if $i3 >= 0 goto label09;

        return 0;

     label09:
        specialinvoke $r0.<android.widget.AbsListView: void createScrollingCache()>();

        $r0.<android.widget.AbsListView: int mTouchMode> = 3;

        $i0 = virtualinvoke $r0.<android.widget.AbsListView: int findMotionRow(int)>($i2);

        virtualinvoke $r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(1);

        goto label06;

     label10:
        $i1 = $r0.<android.widget.AbsListView: int mMotionY>;

        $i1 = $i2 - $i1;

        $i0 = $r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label13;
            default: goto label11;
        };

     label11:
        goto label03;

     label12:
        specialinvoke $r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int)>($i1);

        goto label03;

     label13:
        $i0 = $r0.<android.widget.AbsListView: int mLastY>;

        if $i2 == $i0 goto label03;

        $i0 = $r0.<android.widget.AbsListView: int mMotionCorrection>;

        $i1 = $i1 - $i0;

        $i0 = $r0.<android.widget.AbsListView: int mLastY>;

        if $i0 == -2147483648 goto label16;

        $i0 = $r0.<android.widget.AbsListView: int mLastY>;

        $i0 = $i2 - $i0;

     label14:
        virtualinvoke $r0.<android.widget.AbsListView: void trackMotionScroll(int,int)>($i1, $i0);

        $i1 = $r0.<android.widget.AbsListView: int mMotionPosition>;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = $i1 - $i0;

        $r8 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        if $r8 == null goto label15;

        $i1 = virtualinvoke $r8.<android.view.View: int getTop()>();

        $i0 = $r0.<android.widget.AbsListView: int mMotionViewNewTop>;

        if $i1 == $i0 goto label15;

        $i1 = virtualinvoke $r0.<android.widget.AbsListView: int findMotionRow(int)>($i2);

        $r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i1 - $i0;

        $r8 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i0 = virtualinvoke $r8.<android.view.View: int getTop()>();

        $r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i0;

        $r0.<android.widget.AbsListView: int mMotionY> = $i2;

        $r0.<android.widget.AbsListView: int mMotionPosition> = $i1;

     label15:
        $r0.<android.widget.AbsListView: int mLastY> = $i2;

        goto label03;

     label16:
        $i0 = $i1;

        goto label14;

     label17:
        $i2 = $r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i2)
        {
            case 0: goto label20;
            case 1: goto label20;
            case 2: goto label20;
            case 3: goto label31;
            default: goto label18;
        };

     label18:
        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(0);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $r9 = virtualinvoke $r0.<android.view.View: android.os.Handler getHandler()>();

        if $r9 == null goto label19;

        $r10 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke $r9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r10);

     label19:
        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 == null goto label03;

        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void recycle()>();

        $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = null;

        goto label03;

     label20:
        $i2 = $r0.<android.widget.AbsListView: int mMotionPosition>;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = $i2 - $i1;

        $r8 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        if $r8 == null goto label30;

        $z0 = virtualinvoke $r8.<android.view.View: boolean hasFocusable()>();

        if $z0 != 0 goto label30;

        $i1 = $r0.<android.widget.AbsListView: int mTouchMode>;

        if $i1 == 0 goto label21;

        virtualinvoke $r8.<android.view.View: void setPressed(boolean)>(0);

     label21:
        $r11 = $r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r11 != null goto label22;

        $r11 = new android.widget.AbsListView$PerformClick;

        specialinvoke $r11.<android.widget.AbsListView$PerformClick: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>($r0, null);

        $r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick> = $r11;

     label22:
        $r11 = $r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        $r11.<android.widget.AbsListView$PerformClick: android.view.View mChild> = $r8;

        $r11.<android.widget.AbsListView$PerformClick: int mClickMotionPosition> = $i2;

        virtualinvoke $r11.<android.widget.AbsListView$WindowRunnnable: void rememberWindowAttachCount()>();

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = $i2;

        $i2 = $r0.<android.widget.AbsListView: int mTouchMode>;

        if $i2 == 0 goto label23;

        $i2 = $r0.<android.widget.AbsListView: int mTouchMode>;

        if $i2 != 1 goto label29;

     label23:
        $r9 = virtualinvoke $r0.<android.view.View: android.os.Handler getHandler()>();

        if $r9 == null goto label25;

        $i2 = $r0.<android.widget.AbsListView: int mTouchMode>;

        if $i2 != 0 goto label28;

        $r6 = $r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

     label24:
        virtualinvoke $r9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

     label25:
        $r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $r0.<android.widget.AbsListView: int mTouchMode> = 1;

        $z0 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z0 != 0 goto label27;

        $i2 = $r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>($i2);

        virtualinvoke $r0.<android.widget.AbsListView: void layoutChildren()>();

        virtualinvoke $r8.<android.view.View: void setPressed(boolean)>(1);

        virtualinvoke $r0.<android.widget.AbsListView: void positionSelector(android.view.View)>($r8);

        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(1);

        $r12 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r12 == null goto label26;

        $r12 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r12 = virtualinvoke $r12.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r12 == null goto label26;

        $z0 = $r12 instanceof android.graphics.drawable.TransitionDrawable;

        if $z0 == 0 goto label26;

        $r13 = (android.graphics.drawable.TransitionDrawable) $r12;

        virtualinvoke $r13.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

     label26:
        $r14 = new android.widget.AbsListView$1;

        specialinvoke $r14.<android.widget.AbsListView$1: void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick)>($r0, $r8, $r11);

        $i2 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l5 = (long) $i2;

        virtualinvoke $r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r14, $l5);

     label27:
        return 1;

     label28:
        $r6 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        goto label24;

     label29:
        $z0 = $r0.<android.widget.AdapterView: boolean mDataChanged>;

        if $z0 != 0 goto label30;

        virtualinvoke $r0.<android.view.View: boolean post(java.lang.Runnable)>($r11);

     label30:
        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        goto label18;

     label31:
        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $f0 = virtualinvoke $r3.<android.view.VelocityTracker: float getYVelocity()>();

        $i2 = (int) $f0;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $r15 = $r0.<android.view.View: android.content.Context mContext>;

        $r16 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r15);

        $i0 = virtualinvoke $r16.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        if $i1 <= $i0 goto label33;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label33;

        $r17 = $r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r17 != null goto label32;

        $r17 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r17.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>($r0);

        $r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r17;

     label32:
        virtualinvoke $r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r17 = $r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i2 = neg $i2;

        virtualinvoke $r17.<android.widget.AbsListView$FlingRunnable: void start(int)>($i2);

        goto label18;

     label33:
        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke $r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label18;

     label34:
        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke $r0.<android.view.View: void setPressed(boolean)>(0);

        $i2 = $r0.<android.widget.AbsListView: int mMotionPosition>;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $i2 - $i1;

        $r8 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        if $r8 == null goto label35;

        virtualinvoke $r8.<android.view.View: void setPressed(boolean)>(0);

     label35:
        specialinvoke $r0.<android.widget.AbsListView: void clearScrollingCache()>();

        $r9 = virtualinvoke $r0.<android.view.View: android.os.Handler getHandler()>();

        if $r9 == null goto label36;

        $r10 = $r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke $r9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r10);

     label36:
        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 == null goto label03;

        $r3 = $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void recycle()>();

        $r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = null;

        goto label03;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.widget.AbsListView: void hideSelector()>();

        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        if $i0 <= 0 goto label2;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label3;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        virtualinvoke $r0.<android.widget.AbsListView: void layoutChildren()>();

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0, $z1;
        byte $b0;
        android.widget.AbsListView$FlingRunnable $r1;
        int $i1;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.View: void onWindowFocusChanged(boolean)>($z0);

        $z1 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z1 == 0 goto label3;

        $b0 = 0;

     label1:
        if $z0 != 0 goto label4;

        virtualinvoke $r0.<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>(0);

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r1);

        virtualinvoke $r0.<android.widget.AbsListView: void dismissPopup()>();

        if $b0 != 1 goto label2;

        $i1 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        $r0.<android.widget.AbsListView: int mResurrectToPosition> = $i1;

     label2:
        $r0.<android.widget.AbsListView: int mLastTouchMode> = $b0;

        return;

     label3:
        $b0 = 1;

        goto label1;

     label4:
        $z0 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label5;

        specialinvoke $r0.<android.widget.AbsListView: void showPopup()>();

     label5:
        $i1 = $r0.<android.widget.AbsListView: int mLastTouchMode>;

        if $b0 == $i1 goto label2;

        $i1 = $r0.<android.widget.AbsListView: int mLastTouchMode>;

        if $i1 == -1 goto label2;

        if $b0 != 1 goto label6;

        virtualinvoke $r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        goto label2;

     label6:
        virtualinvoke $r0.<android.widget.AbsListView: void hideSelector()>();

        $r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        virtualinvoke $r0.<android.widget.AbsListView: void layoutChildren()>();

        goto label2;
    }

    public int pointToPosition(int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r1;
        android.view.View $r2;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

        if $r1 != null goto label1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame> = $r1;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

     label1:
        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = $i2 - 1;

     label2:
        if $i2 < 0 goto label4;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $i3 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i3 != 0 goto label3;

        virtualinvoke $r2.<android.view.View: void getHitRect(android.graphics.Rect)>($r1);

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        if $z0 == 0 goto label3;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i0 = $i0 + $i2;

        return $i0;

     label3:
        $i2 = $i2 + -1;

        goto label2;

     label4:
        return -1;
    }

    public long pointToRowId(int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;
        android.widget.ListAdapter $r1;
        long $l2;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = virtualinvoke $r0.<android.widget.AbsListView: int pointToPosition(int,int)>($i0, $i1);

        if $i0 < 0 goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l2 = interfaceinvoke $r1.<android.widget.ListAdapter: long getItemId(int)>($i0);

        return $l2;

     label1:
        return -9223372036854775808L;
    }

    void positionSelector(android.view.View)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        boolean $z0, $z1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        specialinvoke $r0.<android.widget.AbsListView: void positionSelector(int,int,int,int)>($i0, $i1, $i2, $i3);

        $z0 = $r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        $z1 = virtualinvoke $r1.<android.view.View: boolean isEnabled()>();

        if $z1 == $z0 goto label3;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<android.widget.AbsListView: boolean mIsChildViewEnabled> = $z0;

        virtualinvoke $r0.<android.view.View: void refreshDrawableState()>();

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return;
    }

    public void reclaimViews(java.util.List)
    {
        android.widget.AbsListView $r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        android.widget.AbsListView$RecycleBin $r2;
        android.widget.AbsListView$RecyclerListener $r3;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.widget.AbsListView$LayoutParams $r6;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: java.util.List;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $r3 = staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$1500(android.widget.AbsListView$RecycleBin)>($r2);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r4 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.widget.AbsListView$LayoutParams) $r5;

        if $r6 == null goto label2;

        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $i0 = $r6.<android.widget.AbsListView$LayoutParams: int viewType>;

        $z0 = virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: boolean shouldRecycleViewType(int)>($i0);

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        if $r3 == null goto label2;

        interfaceinvoke $r3.<android.widget.AbsListView$RecyclerListener: void onMovedToScrapHeap(android.view.View)>($r4);

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void reclaimScrapViews(java.util.List)>($r1);

        virtualinvoke $r0.<android.view.ViewGroup: void removeAllViewsInLayout()>();

        return;
    }

    int reconcileSelectedPosition()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.AbsListView;

        $i0 = $r0.<android.widget.AdapterView: int mSelectedPosition>;

        if $i0 >= 0 goto label1;

        $i0 = $r0.<android.widget.AbsListView: int mResurrectToPosition>;

     label1:
        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i1 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i1 = $i1 - 1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;
    }

    void reportScrollStateChange(int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1;
        android.widget.AbsListView$OnScrollListener $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.AbsListView: int mLastScrollState>;

        if $i0 == $i1 goto label1;

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        interfaceinvoke $r1.<android.widget.AbsListView$OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>($r0, $i0);

        $r0.<android.widget.AbsListView: int mLastScrollState> = $i0;

        return;

     label1:
        return;

     label2:
        return;
    }

    public void requestLayout()
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 = $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<android.widget.AdapterView: boolean mInLayout>;

        if $z0 != 0 goto label2;

        specialinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    void requestLayoutIfNecessary()
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label1;

        virtualinvoke $r0.<android.widget.AbsListView: void resetList()>();

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    void resetList()
    {
        android.widget.AbsListView $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.widget.AbsListView;

        virtualinvoke $r0.<android.view.ViewGroup: void removeAllViewsInLayout()>();

        $r0.<android.widget.AdapterView: int mFirstPosition> = 0;

        $r0.<android.widget.AdapterView: boolean mDataChanged> = 0;

        $r0.<android.widget.AdapterView: boolean mNeedSync> = 0;

        $r0.<android.widget.AdapterView: int mOldSelectedPosition> = -1;

        $r0.<android.widget.AdapterView: long mOldSelectedRowId> = -9223372036854775808L;

        virtualinvoke $r0.<android.widget.AdapterView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke $r0.<android.widget.AdapterView: void setNextSelectedPositionInt(int)>(-1);

        $r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    void resetListAndClearViews()
    {
        android.widget.AbsListView $r0;
        int $i0;
        android.widget.AbsListView$RecycleBin $r1;
        android.widget.ListAdapter $r2;

        $r0 := @this: android.widget.AbsListView;

        virtualinvoke $r0.<android.widget.AdapterView: void rememberSyncState()>();

        virtualinvoke $r0.<android.view.ViewGroup: void removeAllViewsInLayout()>();

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: void clear()>();

        $r1 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i0 = interfaceinvoke $r2.<android.widget.ListAdapter: int getViewTypeCount()>();

        virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: void setViewTypeCount(int)>($i0);

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayout()>();

        return;
    }

    boolean resurrectSelection()
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Rect $r1;
        boolean $z0;
        android.view.View $r2;
        android.widget.AbsListView$FlingRunnable $r3;

        $r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 > 0 goto label01;

        return 0;

     label01:
        $i1 = 0;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        $i3 = $i2;

        $i4 = $r0.<android.view.View: int mBottom>;

        $i5 = $r0.<android.view.View: int mTop>;

        $i4 = $i4 - $i5;

        $r1 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i5 = $r1.<android.graphics.Rect: int bottom>;

        $i6 = $i4 - $i5;

        $i4 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i7 = $r0.<android.widget.AbsListView: int mResurrectToPosition>;

        $z0 = 1;

        if $i7 < $i4 goto label05;

        $i5 = $i4 + $i0;

        if $i7 >= $i5 goto label05;

        $i5 = $i7;

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = $i7 - $i1;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $i0 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i0;

        $i3 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        if $i0 >= $i2 goto label04;

        $i1 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i1 = $i2 + $i1;

     label02:
        $r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        $r3 = $r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r3);

        $r0.<android.widget.AbsListView: int mTouchMode> = -1;

        specialinvoke $r0.<android.widget.AbsListView: void clearScrollingCache()>();

        $r0.<android.widget.AdapterView: int mSpecificTop> = $i1;

        $i1 = virtualinvoke $r0.<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>($i5, $z0);

        $i5 = $i1;

        if $i1 < $i4 goto label15;

        $i4 = virtualinvoke $r0.<android.widget.AdapterView: int getLastVisiblePosition()>();

        if $i1 > $i4 goto label15;

        $r0.<android.widget.AbsListView: int mLayoutMode> = 4;

        virtualinvoke $r0.<android.widget.AbsListView: void setSelectionInt(int)>($i1);

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

     label03:
        virtualinvoke $r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        if $i5 < 0 goto label16;

        return 1;

     label04:
        if $i3 <= $i6 goto label02;

        $i1 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();

        $i1 = $i6 - $i1;

        $i0 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i1 = $i1 - $i0;

        goto label02;

     label05:
        if $i7 >= $i4 goto label10;

        $i5 = $i4;

        $i6 = 0;

     label06:
        if $i6 >= $i0 goto label02;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i6);

        $i2 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if $i6 != 0 goto label08;

        $i1 = $i2;

        if $i4 > 0 goto label07;

        if $i2 >= $i3 goto label08;

     label07:
        $i7 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i3 = $i3 + $i7;

     label08:
        if $i2 < $i3 goto label09;

        $i5 = $i4 + $i6;

        $i1 = $i2;

        goto label02;

     label09:
        $i6 = $i6 + 1;

        goto label06;

     label10:
        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        $z0 = 0;

        $i5 = $i4 + $i0;

        $i5 = $i5 - 1;

        $i3 = $i0 - 1;

     label11:
        if $i3 < 0 goto label02;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i7 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i8 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i9 = $i0 - 1;

        if $i3 != $i9 goto label13;

        $i1 = $i7;

        $i9 = $i4 + $i0;

        if $i9 < $i2 goto label12;

        if $i8 <= $i6 goto label13;

     label12:
        $i9 = virtualinvoke $r0.<android.view.View: int getVerticalFadingEdgeLength()>();

        $i6 = $i6 - $i9;

     label13:
        if $i8 > $i6 goto label14;

        $i5 = $i4 + $i3;

        $i1 = $i7;

        goto label02;

     label14:
        $i3 = $i3 + -1;

        goto label11;

     label15:
        $i5 = -1;

        goto label03;

     label16:
        return 0;
    }

    boolean sendToTextFilter(int, int, android.view.KeyEvent)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2;
        android.view.KeyEvent $r1, $r2;
        boolean $z0, $z1;
        long $l3;
        android.widget.PopupWindow $r3;
        android.widget.EditText $r4;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.widget.AbsListView: boolean acceptFilter()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z0 = 0;

        $z1 = 1;

        lookupswitch($i0)
        {
            case 4: goto label06;
            case 19: goto label05;
            case 20: goto label05;
            case 21: goto label05;
            case 22: goto label05;
            case 23: goto label05;
            case 62: goto label08;
            case 66: goto label05;
            default: goto label02;
        };

     label02:
        if $z1 == 0 goto label04;

        specialinvoke $r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        $r2 = $r1;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i2 <= 0 goto label03;

        $l3 = virtualinvoke $r1.<android.view.KeyEvent: long getEventTime()>();

        $r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>($r1, $l3, 0);

     label03:
        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        lookupswitch($i2)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            default: goto label04;
        };

     label04:
        return $z0;

     label05:
        $z1 = 0;

        goto label02;

     label06:
        $z1 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z1 == 0 goto label07;

        $r3 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r3 == null goto label07;

        $r3 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label07;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 0 goto label07;

        $z0 = 1;

        $r4 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>("");

     label07:
        $z1 = 0;

        goto label02;

     label08:
        $z1 = 1;

        $r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        goto label02;

     label09:
        $r4 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $z0 = virtualinvoke $r4.<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r2);

        goto label04;

     label10:
        $r4 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $z0 = virtualinvoke $r4.<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r2);

        goto label04;

     label11:
        $r4 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $z0 = virtualinvoke $r4.<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>($i0, $i1, $r1);

        goto label04;
    }

    public void setCacheColorHint(int)
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $r0.<android.widget.AbsListView: int mCacheColorHint> = $i0;

        return;
    }

    public void setDrawSelectorOnTop(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = $z0;

        return;
    }

    public void setFastScrollEnabled(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;
        android.content.Context $r1;
        android.widget.FastScroller $r2;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.AbsListView: boolean mFastScrollEnabled> = $z0;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 != null goto label2;

        $r2 = new android.widget.FastScroller;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.FastScroller: void <init>(android.content.Context,android.widget.AbsListView)>($r1, $r0);

        $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller> = $r2;

        return;

     label1:
        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r2.<android.widget.FastScroller: void stop()>();

        $r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller> = null;

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setFilterText(java.lang.String)
    {
        android.widget.AbsListView $r0;
        java.lang.String $r1;
        boolean $z0;
        android.widget.EditText $r2;
        int $i0;
        android.widget.ListAdapter $r3;
        android.widget.PopupWindow $r4;
        android.widget.Filterable $r5;
        android.widget.Filter $r6;
        android.widget.AdapterView$AdapterDataSetObserver $r7;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: java.lang.String;

        $z0 = $r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        specialinvoke $r0.<android.widget.AbsListView: void createTextFilter(boolean)>(0);

        $r2 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r2 = $r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        virtualinvoke $r2.<android.widget.EditText: void setSelection(int)>($i0);

        $r3 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z0 = $r3 instanceof android.widget.Filterable;

        if $z0 == 0 goto label4;

        $r4 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r4 != null goto label1;

        $r3 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r5 = (android.widget.Filterable) $r3;

        $r6 = interfaceinvoke $r5.<android.widget.Filterable: android.widget.Filter getFilter()>();

        virtualinvoke $r6.<android.widget.Filter: void filter(java.lang.CharSequence)>($r1);

     label1:
        $r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        $r7 = $r0.<android.widget.AbsListView: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        virtualinvoke $r7.<android.widget.AdapterView$AdapterDataSetObserver: void clearSavedState()>();

        return;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.widget.PopupWindow $r1;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = specialinvoke $r0.<android.view.View: boolean setFrame(int,int,int,int)>($i0, $i1, $i2, $i3);

        $z1 = $r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<android.view.View: int getWindowVisibility()>();

        if $i0 != 0 goto label3;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label4;

        $r1 = $r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label5;

        specialinvoke $r0.<android.widget.AbsListView: void positionPopup()>();

        return $z0;

     label1:
        return $z0;

     label2:
        return $z0;

     label3:
        return $z0;

     label4:
        return $z0;

     label5:
        return $z0;
    }

    public void setOnScrollListener(android.widget.AbsListView$OnScrollListener)
    {
        android.widget.AbsListView $r0;
        android.widget.AbsListView$OnScrollListener $r1;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.widget.AbsListView$OnScrollListener;

        $r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener> = $r1;

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return;
    }

    public void setRecyclerListener(android.widget.AbsListView$RecyclerListener)
    {
        android.widget.AbsListView $r0;
        android.widget.AbsListView$RecyclerListener $r1;
        android.widget.AbsListView$RecycleBin $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.widget.AbsListView$RecyclerListener;

        $r2 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$1502(android.widget.AbsListView$RecycleBin,android.widget.AbsListView$RecyclerListener)>($r2, $r1);

        return;
    }

    public void setScrollIndicators(android.view.View, android.view.View)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1, $r2;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $r0.<android.widget.AbsListView: android.view.View mScrollUp> = $r1;

        $r0.<android.widget.AbsListView: android.view.View mScrollDown> = $r2;

        return;
    }

    public void setScrollingCacheEnabled(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0, $z1;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z1 == 0 goto label1;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label1:
        $r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled> = $z0;

        return;
    }

    abstract void setSelectionInt(int);

    public void setSelector(int)
    {
        android.widget.AbsListView $r0;
        int $i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        virtualinvoke $r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setSelector(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView $r0;
        android.graphics.drawable.Drawable $r1, $r4;
        android.graphics.Rect $r2;
        int[] $r3;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r4 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r4 == null goto label1;

        $r4 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r4 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r0.<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r4);

     label1:
        $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i0 = $r2.<android.graphics.Rect: int left>;

        $r0.<android.widget.AbsListView: int mSelectionLeftPadding> = $i0;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $r0.<android.widget.AbsListView: int mSelectionTopPadding> = $i0;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $r0.<android.widget.AbsListView: int mSelectionRightPadding> = $i0;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $r0.<android.widget.AbsListView: int mSelectionBottomPadding> = $i0;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        $r3 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        return;
    }

    public void setSmoothScrollbarEnabled(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = $z0;

        return;
    }

    public void setStackFromBottom(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0, $z1;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 == $z0 goto label1;

        $r0.<android.widget.AbsListView: boolean mStackFromBottom> = $z0;

        virtualinvoke $r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

        return;

     label1:
        return;
    }

    public void setTextFilterEnabled(boolean)
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.AbsListView: boolean mTextFilterEnabled> = $z0;

        return;
    }

    public void setTranscriptMode(int)
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $i0 := @parameter0: int;

        $r0.<android.widget.AbsListView: int mTranscriptMode> = $i0;

        return;
    }

    boolean shouldShowSelector()
    {
        android.widget.AbsListView $r0;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke $r0.<android.view.ViewGroup: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 == 0 goto label2;

     label1:
        $z0 = virtualinvoke $r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        android.widget.AbsListView $r0;
        android.view.View $r1, $r4;
        int $i0, $i2;
        android.widget.ListAdapter $r2;
        long $l1;
        boolean $z0;
        android.widget.AdapterView$OnItemLongClickListener $r3;
        android.view.ContextMenu$ContextMenuInfo $r5;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getPositionForView(android.view.View)>($r1);

        if $i0 < 0 goto label3;

        $r2 = $r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l1 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>($i0);

        $z0 = 0;

        $r3 = $r0.<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        $z0 = interfaceinvoke $r3.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>($r0, $r1, $i0, $l1);

     label1:
        if $z0 != 0 goto label2;

        $i2 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i2 = $i0 - $i2;

        $r4 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r5 = virtualinvoke $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>($r4, $i0, $l1);

        $r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r5;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>($r1);

     label2:
        return $z0;

     label3:
        return 0;
    }

    boolean touchModeDrawsInPressedState()
    {
        android.widget.AbsListView $r0;
        int $i0;

        $r0 := @this: android.widget.AbsListView;

        $i0 = $r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    void trackMotionScroll(int, int)
    {
        android.widget.AbsListView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;
        android.widget.AbsListView$RecycleBin $r3;

        $r0 := @this: android.widget.AbsListView;

        $i4 := @parameter0: int;

        $i5 := @parameter1: int;

        $i6 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i6 != 0 goto label01;

        return;

     label01:
        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i7 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i8 = $i6 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i8);

        $i8 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i3 = $i1 - $i7;

        $i1 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i2;

        $i2 = $i8 - $i1;

        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i9 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 - $i9;

        $i9 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $i0 - $i9;

        if $i4 >= 0 goto label04;

        $i9 = $i0 - 1;

        $i9 = neg $i9;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i4);

     label02:
        if $i5 >= 0 goto label05;

        $i0 = $i0 - 1;

        $i0 = neg $i0;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i5);

     label03:
        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        if $i3 < $i0 goto label06;

        if $i2 < $i0 goto label06;

        virtualinvoke $r0.<android.widget.AbsListView: void hideSelector()>();

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i5);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        $i5 = $r0.<android.widget.AbsListView: int mMotionViewOriginalTop>;

        $i4 = $i5 + $i4;

        $r0.<android.widget.AbsListView: int mMotionViewNewTop> = $i4;

        return;

     label04:
        $i9 = $i0 - 1;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i4);

        goto label02;

     label05:
        $i0 = $i0 - 1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i5);

        goto label03;

     label06:
        $i3 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i3 != 0 goto label07;

        $i2 = $r2.<android.graphics.Rect: int top>;

        if $i7 < $i2 goto label07;

        if $i4 > 0 goto label19;

     label07:
        $i7 = $i3 + $i6;

        $i2 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i7 != $i2 goto label08;

        if $i8 > $i1 goto label08;

        if $i4 < 0 goto label20;

     label08:
        if $i5 >= 0 goto label13;

        $z0 = 1;

     label09:
        virtualinvoke $r0.<android.widget.AbsListView: void hideSelector()>();

        $i7 = virtualinvoke $r0.<android.widget.AbsListView: int getHeaderViewsCount()>();

        $i8 = $r0.<android.widget.AdapterView: int mItemCount>;

        $i1 = virtualinvoke $r0.<android.widget.AbsListView: int getFooterViewsCount()>();

        $i2 = $i8 - $i1;

        $i1 = 0;

        $i8 = 0;

        if $z0 == 0 goto label16;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i5;

        $i9 = 0;

     label10:
        if $i9 >= $i6 goto label11;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i9);

        $i10 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        if $i10 < $i0 goto label14;

     label11:
        $i6 = $r0.<android.widget.AbsListView: int mMotionViewOriginalTop>;

        $i4 = $i6 + $i4;

        $r0.<android.widget.AbsListView: int mMotionViewNewTop> = $i4;

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 1;

        virtualinvoke $r0.<android.view.ViewGroup: void detachViewsFromParent(int,int)>($i1, $i8);

        virtualinvoke $r0.<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>($i5);

        if $z0 == 0 goto label12;

        $i4 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i4 = $i4 + $i8;

        $r0.<android.widget.AdapterView: int mFirstPosition> = $i4;

     label12:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        virtualinvoke $r0.<android.widget.AbsListView: void fillGap(boolean)>($z0);

        $r0.<android.widget.AdapterView: boolean mBlockLayoutRequests> = 0;

        virtualinvoke $r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return;

     label13:
        $z0 = 0;

        goto label09;

     label14:
        $i8 = $i8 + 1;

        $i10 = $i3 + $i9;

        if $i10 < $i7 goto label15;

        if $i10 >= $i2 goto label15;

        $r3 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View)>($r1);

     label15:
        $i9 = $i9 + 1;

        goto label10;

     label16:
        $i0 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i9 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i9;

        $i0 = $i0 - $i5;

        $i6 = $i6 - 1;

     label17:
        if $i6 < 0 goto label11;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i6);

        $i9 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i9 <= $i0 goto label11;

        $i1 = $i6;

        $i8 = $i8 + 1;

        $i9 = $i3 + $i6;

        if $i9 < $i7 goto label18;

        if $i9 >= $i2 goto label18;

        $r3 = $r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View)>($r1);

     label18:
        $i6 = $i6 + -1;

        goto label17;

     label19:
        return;

     label20:
        return;
    }

    void updateScrollIndicators()
    {
        android.widget.AbsListView $r0;
        android.view.View $r1;
        int $i0, $i1, $i3;
        boolean $z0;
        android.graphics.Rect $r2;
        byte $b2;

        $r0 := @this: android.widget.AbsListView;

        $r1 = $r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        if $r1 == null goto label04;

        $i0 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        if $i0 <= 0 goto label08;

        $z0 = 1;

     label01:
        if $z0 != 0 goto label02;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label02;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        if $i0 >= $i1 goto label09;

        $z0 = 1;

     label02:
        $r1 = $r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        if $z0 == 0 goto label10;

        $b2 = 0;

     label03:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b2);

     label04:
        $r1 = $r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        if $r1 == null goto label14;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = $r0.<android.widget.AdapterView: int mFirstPosition>;

        $i1 = $i1 + $i0;

        $i3 = $r0.<android.widget.AdapterView: int mItemCount>;

        if $i1 >= $i3 goto label11;

        $z0 = 1;

     label05:
        if $z0 != 0 goto label06;

        if $i0 <= 0 goto label06;

        $i0 = $i0 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = $r0.<android.view.View: int mBottom>;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i3;

        if $i0 <= $i1 goto label12;

        $z0 = 1;

     label06:
        $r1 = $r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        if $z0 == 0 goto label13;

        $b2 = 0;

     label07:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b2);

        return;

     label08:
        $z0 = 0;

        goto label01;

     label09:
        $z0 = 0;

        goto label02;

     label10:
        $b2 = 4;

        goto label03;

     label11:
        $z0 = 0;

        goto label05;

     label12:
        $z0 = 0;

        goto label06;

     label13:
        $b2 = 4;

        goto label07;

     label14:
        return;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.AbsListView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 == $r1 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <android.widget.AbsListView: int TRANSCRIPT_MODE_NORMAL> = 1;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_DISABLED> = 0;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_ALWAYS_SCROLL> = 2;

        <android.widget.AbsListView: int TOUCH_MODE_UNKNOWN> = -1;

        <android.widget.AbsListView: int TOUCH_MODE_TAP> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_SCROLL> = 3;

        <android.widget.AbsListView: int TOUCH_MODE_REST> = -1;

        <android.widget.AbsListView: int TOUCH_MODE_ON> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_OFF> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_FLING> = 4;

        <android.widget.AbsListView: int TOUCH_MODE_FAST_SCROLL> = 5;

        <android.widget.AbsListView: int TOUCH_MODE_DOWN> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_DONE_WAITING> = 2;

        <android.widget.AbsListView: boolean PROFILE_SCROLLING> = 0;

        <android.widget.AbsListView: boolean PROFILE_FLINGING> = 0;

        <android.widget.AbsListView: int LAYOUT_SYNC> = 5;

        <android.widget.AbsListView: int LAYOUT_SPECIFIC> = 4;

        <android.widget.AbsListView: int LAYOUT_SET_SELECTION> = 2;

        <android.widget.AbsListView: int LAYOUT_NORMAL> = 0;

        <android.widget.AbsListView: int LAYOUT_MOVE_SELECTION> = 6;

        <android.widget.AbsListView: int LAYOUT_FORCE_TOP> = 1;

        <android.widget.AbsListView: int LAYOUT_FORCE_BOTTOM> = 3;

        return;
    }
}
