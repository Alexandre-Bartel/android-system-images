public abstract class org.apache.harmony.awt.wtk.NativeIM extends java.lang.Object implements java.awt.im.spi.InputMethod, java.awt.im.spi.InputMethodDescriptor
{
    protected java.awt.im.spi.InputMethodContext imc;

    public void <init>()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void activate()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return;
    }

    public java.awt.im.spi.InputMethod createInputMethod() throws java.lang.Exception
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return $r0;
    }

    public void deactivate(boolean)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $z0 := @parameter0: boolean;

        return;
    }

    public abstract void disableIME();

    public void dispatchEvent(java.awt.AWTEvent)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.awt.AWTEvent $r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.awt.AWTEvent;

        return;
    }

    public void dispose()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return;
    }

    public void endComposition()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return;
    }

    public java.util.Locale[] getAvailableLocales() throws java.awt.AWTException
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.util.Locale $r1;
        java.util.Locale[] $r2;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r2 = newarray (java.util.Locale)[2];

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2[0] = $r1;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2[1] = $r1;

        return $r2;
    }

    public java.lang.Object getControlObject()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return null;
    }

    public java.lang.String getInputMethodDisplayName(java.util.Locale, java.util.Locale)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.util.Locale $r1, $r2;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.util.Locale;

        $r2 := @parameter1: java.util.Locale;

        return "System input methods";
    }

    public java.awt.Image getInputMethodIcon(java.util.Locale)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.util.Locale $r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.util.Locale;

        return null;
    }

    public java.util.Locale getLocale()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return null;
    }

    public boolean hasDynamicLocaleList()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return 0;
    }

    public void hideWindows()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return;
    }

    public boolean isCompositionEnabled()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return 0;
    }

    public void notifyClientWindowChange(java.awt.Rectangle)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.awt.Rectangle $r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.awt.Rectangle;

        return;
    }

    public void reconvert()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return;
    }

    public void removeNotify()
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        return;
    }

    public void setCharacterSubsets(java.lang.Character$Subset[])
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.lang.Character$Subset[] $r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.lang.Character$Subset[];

        return;
    }

    public void setCompositionEnabled(boolean)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $z0 := @parameter0: boolean;

        return;
    }

    public void setInputMethodContext(java.awt.im.spi.InputMethodContext)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.awt.im.spi.InputMethodContext $r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.awt.im.spi.InputMethodContext;

        $r0.<org.apache.harmony.awt.wtk.NativeIM: java.awt.im.spi.InputMethodContext imc> = $r1;

        return;
    }

    public boolean setLocale(java.util.Locale)
    {
        org.apache.harmony.awt.wtk.NativeIM $r0;
        java.util.Locale $r1;

        $r0 := @this: org.apache.harmony.awt.wtk.NativeIM;

        $r1 := @parameter0: java.util.Locale;

        return 0;
    }
}
