abstract class android.location.LocationManager$LpComparator extends java.lang.Object implements java.util.Comparator
{
    final android.location.LocationManager this$0;

    private void <init>(android.location.LocationManager)
    {
        android.location.LocationManager$LpComparator $r0;
        android.location.LocationManager $r1;

        $r0 := @this: android.location.LocationManager$LpComparator;

        $r1 := @parameter0: android.location.LocationManager;

        $r0.<android.location.LocationManager$LpComparator: android.location.LocationManager this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.location.LocationManager, android.location.LocationManager$1)
    {
        android.location.LocationManager$LpComparator $r0;
        android.location.LocationManager $r1;
        android.location.LocationManager$1 $r2;

        $r0 := @this: android.location.LocationManager$LpComparator;

        $r1 := @parameter0: android.location.LocationManager;

        $r2 := @parameter1: android.location.LocationManager$1;

        specialinvoke $r0.<android.location.LocationManager$LpComparator: void <init>(android.location.LocationManager)>($r1);

        return;
    }

    public int compare(float, float)
    {
        android.location.LocationManager$LpComparator $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: android.location.LocationManager$LpComparator;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        return -1;

     label1:
        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int compare(int, int)
    {
        android.location.LocationManager$LpComparator $r0;
        int $i0, $i1;

        $r0 := @this: android.location.LocationManager$LpComparator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= $i1 goto label1;

        return -1;

     label1:
        if $i0 <= $i1 goto label2;

        return 1;

     label2:
        return 0;
    }
}
