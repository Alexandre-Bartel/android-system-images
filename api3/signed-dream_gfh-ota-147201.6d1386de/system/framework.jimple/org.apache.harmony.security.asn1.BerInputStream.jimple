public class org.apache.harmony.security.asn1.BerInputStream extends java.lang.Object
{
    private static final int BUF_INCREASE_SIZE;
    protected static final int INDEFINIT_LENGTH;
    protected byte[] buffer;
    public int choiceIndex;
    public java.lang.Object content;
    protected int contentOffset;
    protected java.io.InputStream in;
    protected boolean isIndefinedLength;
    protected boolean isVerify;
    protected int length;
    protected int offset;
    public int oidElement;
    private java.lang.Object[][] pool;
    public int tag;
    protected int tagOffset;
    public int[] times;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void <init>(java.io.InputStream,int)>($r1, 16384);

        return;
    }

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        byte[] $r2, $r4;
        java.lang.String $r3;
        org.apache.harmony.security.asn1.ASN1Exception $r5;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = 0;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: java.io.InputStream in> = $r1;

        $r2 = newarray (byte)[$i0];

        $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer> = $r2;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 == -1 goto label1;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = lengthof $r2;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 >= $i1 goto label2;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $r2 = newarray (byte)[$i0];

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i0);

        $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer> = $r2;

        return;

     label1:
        $r0.<org.apache.harmony.security.asn1.BerInputStream: boolean isIndefinedLength> = 1;

        $r5 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.112");

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r5;

     label2:
        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void <init>(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        org.apache.harmony.security.asn1.ASN1Exception $r3;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = 0;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer> = $r1;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = $i0;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i2 == -1 goto label1;

        $i0 = $i0 + $i1;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i1 = $i2 + $i1;

        if $i0 == $i1 goto label2;

        $r3 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.111");

        specialinvoke $r3.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        return;

     label2:
        return;
    }

    private final void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1ValueCollection $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.security.asn1.ASN1Type $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.harmony.security.asn1.ASN1Exception $r5;
        java.lang.String $r6;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1ValueCollection;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i1 = $i0 + $i1;

        $r2 = $r1.<org.apache.harmony.security.asn1.ASN1ValueCollection: org.apache.harmony.security.asn1.ASN1Type type>;

        $z0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify>;

        if $z0 == 0 goto label2;

     label1:
        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        if $i1 <= $i2 goto label5;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r0);

        goto label1;

     label2:
        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label3:
        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        if $i1 <= $i3 goto label4;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        $r4 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label4:
        $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content> = $r3;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset> = $i2;

     label5:
        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        if $i2 == $i1 goto label6;

        $r5 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.134", $i0);

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        return;
    }

    public static int getLength(byte[])
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2, $i3, $i4;
        short $s5;

        $r0 := @parameter0: byte[];

        $b0 = $r0[1];

        $i1 = $b0 & 255;

        $i2 = 0;

        $i3 = $i1 & 128;

        if $i3 == 0 goto label2;

        $i2 = $i1 & 127;

        $b0 = $r0[2];

        $i1 = $b0 & 255;

        $i3 = 3;

     label1:
        $i4 = $i2 + 2;

        if $i3 >= $i4 goto label2;

        $i1 = $i1 << 8;

        $b0 = $r0[$i3];

        $s5 = $b0 & 255;

        $i1 = $i1 + $s5;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i2 = $i2 + 2;

        $i1 = $i2 + $i1;

        return $i1;
    }

    private int strToInt(int, int) throws org.apache.harmony.security.asn1.ASN1Exception
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;
        byte[] $r2;
        byte $b4;
        org.apache.harmony.security.asn1.ASN1Exception $r3;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = 0;

        $i3 = $i0;

        $i1 = $i0 + $i1;

     label1:
        if $i3 >= $i1 goto label4;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $b4 = $r2[$i3];

        $i0 = $b4 - 48;

        if $i0 < 0 goto label2;

        if $i0 <= 9 goto label3;

     label2:
        $r3 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.126");

        specialinvoke $r3.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r1);

        throw $r3;

     label3:
        $i2 = $i2 * 10;

        $i2 = $i2 + $i0;

        $i3 = $i3 + 1;

        goto label1;

     label4:
        return $i2;
    }

    public void compactBuffer()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label1;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer> = $r1;

        return;

     label1:
        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        java.lang.Object $r1, $r4;
        java.lang.Object[][] $r2;
        int $i0, $i1;
        java.lang.Object[] $r3;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        if $r2 != null goto label1;

        return null;

     label1:
        $i0 = 0;

     label2:
        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r3 = $r2[0];

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r3 = $r2[0];

        $r4 = $r3[$i0];

        if $r4 != $r1 goto label3;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r3 = $r2[1];

        $r1 = $r3[$i0];

        return $r1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return null;
    }

    public final byte[] getBuffer()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte[] r1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        return r1;
    }

    public final int getContentOffset()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int i0;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        return i0;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $i0 = $i0 - $i1;

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, 0, $i0);

        return $r1;
    }

    public final int getEndOffset()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public final int getLength()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int i0;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        return i0;
    }

    public final int getOffset()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int i0;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        return i0;
    }

    public final int getTagOffset()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int i0;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        return i0;
    }

    public int next() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset> = $i0;

        $i0 = virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int read()>();

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag> = $i0;

        $i0 = virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int read()>();

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int length> = $i0;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 == 128 goto label4;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i0 & 128;

        if $i0 == 0 goto label5;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i0 & 127;

        if $i0 <= 5 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.113", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $i1 = virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int read()>();

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int length> = $i1;

        $i1 = 1;

     label2:
        if $i1 >= $i0 goto label3;

        $i2 = virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int read()>();

        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i3 = $i3 << 8;

        $i2 = $i3 + $i2;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int length> = $i2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 <= 16777215 goto label5;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.113", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label4:
        $r0.<org.apache.harmony.security.asn1.BerInputStream: int length> = -1;

     label5:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset> = $i0;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        return $i0;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        java.lang.Object $r1, $r2, $r5;
        java.lang.Object[][] $r3, $r7;
        int[] $r4;
        int $i0, $i1;
        java.lang.Object[] $r6, $r8, $r9;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        if $r3 != null goto label1;

        $r4 = newarray (int)[2];

        $r4[0] = 2;

        $r4[1] = 10;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "java/lang/Object", $r4);

        $r3 = (java.lang.Object[][]) $r5;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool> = $r3;

     label1:
        $i0 = 0;

     label2:
        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[0];

        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label4;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[0];

        $r5 = $r6[$i0];

        if $r5 == null goto label4;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[0];

        $r5 = $r6[$i0];

        if $r5 != $r1 goto label3;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[1];

        $r6[$i0] = $r2;

        return;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[0];

        $i1 = lengthof $r6;

        if $i0 != $i1 goto label5;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[0];

        $i0 = lengthof $r6;

        $i0 = $i0 * 2;

        $r4 = newarray (int)[2];

        $r4[0] = $i0;

        $r4[1] = 2;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "java/lang/Object", $r4);

        $r3 = (java.lang.Object[][]) $r1;

        $r7 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r7[0];

        $r8 = $r3[0];

        $r7 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r9 = $r7[0];

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r8, 0, $i0);

        $r7 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r7[1];

        $r8 = $r3[1];

        $r7 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r9 = $r7[0];

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r8, 0, $i0);

        $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool> = $r3;

        return;

     label5:
        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[0];

        $r6[$i0] = $r1;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object[][] pool>;

        $r6 = $r3[1];

        $r6[$i0] = $r2;

        return;
    }

    protected int read() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i1, $i4;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.String $r3;
        java.io.InputStream $r4;
        byte $b2;
        short $s3;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.13B");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.io.InputStream in>;

        if $r4 != null goto label2;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = $i1;

        $b2 = $r1[$i0];

        $s3 = $b2 & 255;

        return $s3;

     label2:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label3;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.13B");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i4 = $i1 + 1;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = $i4;

        $b2 = (byte) $i0;

        $r1[$i1] = $b2;

        return $i0;
    }

    public void readBitString() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;
        byte[] $r3;
        byte $b1;
        java.lang.Integer $r4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 3 goto label3;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 != 0 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.114", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b1 = $r3[$i0];

        if $b1 <= 7 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.115", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 != 1 goto label5;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b1 = $r3[$i0];

        if $b1 == 0 goto label6;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.116", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label3:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 35 goto label4;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.117");

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label4:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.118", $r4, $r2);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label5:
        return;

     label6:
        return;
    }

    public void readBoolean() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 1 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.11C", $r2, $r3);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 == 1 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.11D", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        return;
    }

    public void readContent() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i1;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.String $r3;
        java.io.InputStream $r4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i0 + $i1;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.13B");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.io.InputStream in>;

        if $r4 != null goto label2;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = $i0;

        return;

     label2:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: java.io.InputStream in>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 == $i1 goto label3;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.13C");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset> = $i0;

        return;
    }

    public void readEnumerated() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i2;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;
        byte[] $r4;
        byte $b1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 10 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.119", $r2, $r3);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 != 0 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.11A", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 <= 1 goto label5;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b1 = $r4[$i0];

        $i0 = $b1 & 255;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i2 = $i2 + 1;

        $b1 = $r4[$i2];

        if $b1 >= 0 goto label3;

        $i0 = $i0 + 256;

     label3:
        if $i0 == 0 goto label4;

        if $i0 != 511 goto label6;

     label4:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.11B", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label5:
        return;

     label6:
        return;
    }

    public void readGeneralizedTime() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte $b0;
        int $i1, $i2;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.String $r3;
        int[] $r4, $r5;
        java.lang.Integer $r6;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i1 != 24 goto label07;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $i1 - 1;

        $b0 = $r1[$i1];

        if $b0 == 90 goto label01;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.11E");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label01:
        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 == 15 goto label03;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 < 17 goto label02;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 <= 19 goto label03;

     label02:
        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.11F", $i1);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label03:
        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 <= 16 goto label04;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 14;

        $b0 = $r1[$i1];

        if $b0 == 46 goto label04;

        if $b0 == 44 goto label04;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.11F", $i1);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label04:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        if $r4 != null goto label05;

        $r4 = newarray (int)[7];

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times> = $r4;

     label05:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, 4);

        $r4[0] = $i1;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 4;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, 2);

        $r4[1] = $i1;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 6;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, 2);

        $r4[2] = $i1;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 8;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, 2);

        $r4[3] = $i1;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 10;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, 2);

        $r4[4] = $i1;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 12;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, 2);

        $r4[5] = $i1;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 <= 16 goto label09;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = $i1 + 15;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i2 = $i2 - 16;

        $i1 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i1, $i2);

        $r4[6] = $i1;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 != 17 goto label06;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r5[6];

        $i1 = $i1 * 100;

        $r4[6] = $i1;

        return;

     label06:
        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 != 18 goto label10;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i1 = $r5[6];

        $i1 = $i1 * 10;

        $r4[6] = $i1;

        return;

     label07:
        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i1 != 56 goto label08;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.120");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label08:
        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.121", $r6, $r3);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label09:
        return;

     label10:
        return;
    }

    public void readInteger() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte $b0, $b1;
        int $i2, $i3;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;
        byte[] $r4;
        short $s4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i2 == 2 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.127", $r2, $r3);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i2 >= 1 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.128", $i2);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i2 <= 1 goto label5;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i2 = $i2 - $i3;

        $b0 = $r4[$i2];

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i2 = $i2 - $i3;

        $i2 = $i2 + 1;

        $b1 = $r4[$i2];

        $s4 = $b1 & 128;

        $b1 = (byte) $s4;

        if $b0 != 0 goto label3;

        if $b1 == 0 goto label4;

     label3:
        if $b0 != -1 goto label6;

        if $b1 != -128 goto label7;

     label4:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i2 = $i2 - $i3;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.129", $i2);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label5:
        return;

     label6:
        return;

     label7:
        return;
    }

    public void readOID() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0, $i3;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;
        byte[] $r4;
        byte $b1;
        short $s2;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 6 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.12C", $r2, $r3);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 >= 1 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.12D", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i0 = $i0 - 1;

        $b1 = $r4[$i0];

        $s2 = $b1 & 128;

        if $s2 == 0 goto label3;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i0 = $i0 - 1;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.12E", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label3:
        $r0.<org.apache.harmony.security.asn1.BerInputStream: int oidElement> = 1;

        $i0 = 0;

     label4:
        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 >= $i3 goto label7;

     label5:
        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i3 = $i3 + $i0;

        $b1 = $r4[$i3];

        $s2 = $b1 & 128;

        if $s2 != 128 goto label6;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $i0 = $i0 + 1;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int oidElement>;

        $i3 = $i3 + 1;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int oidElement> = $i3;

        goto label4;

     label7:
        return;
    }

    public void readOctetString() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;
        java.lang.Integer $r3;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 4 goto label1;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        return;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 36 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.12A");

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.12B", $r3, $r2);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public void readSequence(org.apache.harmony.security.asn1.ASN1Sequence) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.harmony.security.asn1.ASN1Type[] $r2;
        java.lang.Object[] $r3, $r9;
        org.apache.harmony.security.asn1.ASN1Exception $r4;
        java.lang.Integer $r5;
        java.lang.String $r6;
        boolean $z0;
        org.apache.harmony.security.asn1.ASN1Type $r7;
        boolean[] $r8;
        java.lang.Object $r10;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Sequence;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 48 goto label01;

        $r4 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.12F", $r5, $r6);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r4;

     label01:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $i1 = $i0 + $i1;

        $r2 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: org.apache.harmony.security.asn1.ASN1Type[] type>;

        $i3 = 0;

        $z0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify>;

        if $z0 == 0 goto label09;

     label02:
        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        if $i2 >= $i1 goto label08;

        $i2 = lengthof $r2;

        if $i3 >= $i2 goto label08;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

     label03:
        $r7 = $r2[$i3];

        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $z0 = virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1Type: boolean checkTag(int)>($i2);

        if $z0 != 0 goto label06;

        $r8 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: boolean[] OPTIONAL>;

        $z0 = $r8[$i3];

        if $z0 == 0 goto label04;

        $i2 = lengthof $r2;

        $i2 = $i2 - 1;

        if $i3 != $i2 goto label05;

     label04:
        $r4 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.130", $i0);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r4;

     label05:
        $i3 = $i3 + 1;

        goto label03;

     label06:
        $r7 = $r2[$i3];

        virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r0);

        $i3 = $i3 + 1;

        goto label02;

     label07:
        $i3 = $i3 + 1;

     label08:
        $i2 = lengthof $r2;

        if $i3 >= $i2 goto label20;

        $r8 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: boolean[] OPTIONAL>;

        $z0 = $r8[$i3];

        if $z0 != 0 goto label07;

        $r4 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.131", $i0);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r4;

     label09:
        $i2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $i4 = lengthof $r2;

        $r3 = newarray (java.lang.Object)[$i4];

     label10:
        $i4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        if $i4 >= $i1 goto label18;

        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label18;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

     label11:
        $r7 = $r2[$i3];

        $i4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $z0 = virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1Type: boolean checkTag(int)>($i4);

        if $z0 != 0 goto label15;

        $r8 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: boolean[] OPTIONAL>;

        $z0 = $r8[$i3];

        if $z0 == 0 goto label12;

        $i4 = lengthof $r2;

        $i4 = $i4 - 1;

        if $i3 != $i4 goto label13;

     label12:
        $r4 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.132", $i0);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r4;

     label13:
        $r9 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: java.lang.Object[] DEFAULT>;

        $r10 = $r9[$i3];

        if $r10 == null goto label14;

        $r9 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: java.lang.Object[] DEFAULT>;

        $r10 = $r9[$i3];

        $r3[$i3] = $r10;

     label14:
        $i3 = $i3 + 1;

        goto label11;

     label15:
        $r7 = $r2[$i3];

        $r10 = virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r0);

        $r3[$i3] = $r10;

        $i3 = $i3 + 1;

        goto label10;

     label16:
        $r9 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: java.lang.Object[] DEFAULT>;

        $r10 = $r9[$i3];

        if $r10 == null goto label17;

        $r9 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: java.lang.Object[] DEFAULT>;

        $r10 = $r9[$i3];

        $r3[$i3] = $r10;

     label17:
        $i3 = $i3 + 1;

     label18:
        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label19;

        $r8 = $r1.<org.apache.harmony.security.asn1.ASN1TypeCollection: boolean[] OPTIONAL>;

        $z0 = $r8[$i3];

        if $z0 != 0 goto label16;

        $r4 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.133", $i0);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r4;

     label19:
        $r0.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content> = $r3;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset> = $i2;

     label20:
        $i3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        if $i3 == $i1 goto label21;

        $r4 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r6 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.134", $i0);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r6);

        throw $r4;

     label21:
        return;
    }

    public void readSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r1;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SequenceOf;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 48 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.135", $r3, $r4);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection)>($r1);

        return;
    }

    public void readSet(org.apache.harmony.security.asn1.ASN1Set) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1Set $r1;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Set;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 49 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.136", $r3, $r4);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.137");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1SetOf $r1;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SetOf;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 == 49 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.138", $r3, $r4);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection)>($r1);

        return;
    }

    public void readString(org.apache.harmony.security.asn1.ASN1StringType) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1StringType $r1;
        int $i0, $i1;
        org.apache.harmony.security.asn1.ASN1Exception $r2;
        java.lang.String $r3;
        java.lang.Integer $r4;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1StringType;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $i1 = $r1.<org.apache.harmony.security.asn1.ASN1Type: int id>;

        if $i0 != $i1 goto label1;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        return;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $i1 = $r1.<org.apache.harmony.security.asn1.ASN1Type: int constrId>;

        if $i0 != $i1 goto label2;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.139");

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.13A", $r4, $r3);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    public void readUTCTime() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;
        byte[] $r3;
        byte $b1;
        java.lang.StringBuilder $r4;
        int[] $r5;
        java.lang.Integer $r6;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 23 goto label08;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        lookupswitch($i0)
        {
            case 11: goto label03;
            case 12: goto label01;
            case 13: goto label03;
            case 14: goto label01;
            case 15: goto label02;
            case 16: goto label01;
            case 17: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.123", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label02:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.122");

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label03:
        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i0 = $i0 - 1;

        $b1 = $r3[$i0];

        if $b1 == 90 goto label04;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ASN.1 UTCTime wrongly encoded at [");

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label04:
        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        if $r5 != null goto label05;

        $r5 = newarray (int)[7];

        $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times> = $r5;

     label05:
        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i0, 2);

        $r5[0] = $i0;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r5[0];

        if $i0 <= 49 goto label07;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r5[0];

        $i0 = $i0 + 1900;

        $r5[0] = $i0;

     label06:
        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = $i0 + 2;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i0, 2);

        $r5[1] = $i0;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = $i0 + 4;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i0, 2);

        $r5[2] = $i0;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = $i0 + 6;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i0, 2);

        $r5[3] = $i0;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = $i0 + 8;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i0, 2);

        $r5[4] = $i0;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 != 13 goto label10;

        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = $i0 + 10;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int strToInt(int,int)>($i0, 2);

        $r5[5] = $i0;

        return;

     label07:
        $r5 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int[] times>;

        $i0 = $r5[0];

        $i0 = $i0 + 2000;

        $r5[0] = $i0;

        goto label06;

     label08:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 55 goto label09;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.124");

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label09:
        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>("security.125", $r6, $r2);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label10:
        return;
    }

    public final void reset(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r1 := @parameter0: byte[];

        $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer> = $r1;

        virtualinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        return;
    }

    public final void setVerify()
    {
        org.apache.harmony.security.asn1.BerInputStream $r0;

        $r0 := @this: org.apache.harmony.security.asn1.BerInputStream;

        $r0.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify> = 1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.security.asn1.BerInputStream: int INDEFINIT_LENGTH> = -1;

        <org.apache.harmony.security.asn1.BerInputStream: int BUF_INCREASE_SIZE> = 16384;

        return;
    }
}
