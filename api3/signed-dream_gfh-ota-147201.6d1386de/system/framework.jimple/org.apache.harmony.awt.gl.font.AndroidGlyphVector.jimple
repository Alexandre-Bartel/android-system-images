public class org.apache.harmony.awt.gl.font.AndroidGlyphVector extends java.awt.font.GlyphVector
{
    float ascent;
    public char[] charVector;
    float[] defaultPositions;
    float descent;
    java.awt.Font font;
    protected java.awt.Shape[] gvShapes;
    float height;
    protected int layoutFlags;
    float leading;
    float[] logicalPositions;
    org.apache.harmony.awt.gl.font.FontPeerImpl peer;
    java.awt.geom.AffineTransform transform;
    public org.apache.harmony.awt.gl.font.Glyph[] vector;
    protected java.awt.font.FontRenderContext vectorFRC;
    public float[] visualPositions;

    public void <init>(java.lang.String, java.awt.font.FontRenderContext, java.awt.Font)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.String $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;
        char[] $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>($r4, $r2, $r3, 0);

        return;
    }

    public void <init>(java.lang.String, java.awt.font.FontRenderContext, java.awt.Font, int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.String $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;
        int $i0;
        char[] $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        $i0 := @parameter3: int;

        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>($r4, $r2, $r3, $i0);

        return;
    }

    public void <init>(char[], java.awt.font.FontRenderContext, java.awt.Font)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        char[] $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>($r1, $r2, $r3, 0);

        return;
    }

    public void <init>(char[], java.awt.font.FontRenderContext, java.awt.Font, int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        char[] $r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.Font $r3;
        int $i0;
        java.lang.String $r4;
        java.awt.font.LineMetrics $r5;
        org.apache.harmony.awt.gl.font.LineMetricsImpl $r6;
        float $f0;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.awt.font.FontRenderContext;

        $r3 := @parameter2: java.awt.Font;

        $i0 := @parameter3: int;

        specialinvoke $r0.<java.awt.font.GlyphVector: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: int layoutFlags> = 0;

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Font font> = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r1);

        $r5 = virtualinvoke $r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>($r4, $r2);

        $r6 = (org.apache.harmony.awt.gl.font.LineMetricsImpl) $r5;

        $f0 = virtualinvoke $r6.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getAscent()>();

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: float ascent> = $f0;

        $f0 = virtualinvoke $r6.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getHeight()>();

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: float height> = $f0;

        $f0 = virtualinvoke $r6.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getLeading()>();

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: float leading> = $f0;

        $f0 = virtualinvoke $r6.<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getDescent()>();

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: float descent> = $f0;

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector> = $r1;

        $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.font.FontRenderContext vectorFRC> = $r2;

        return;
    }

    public boolean equals(java.awt.font.GlyphVector)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.awt.font.GlyphVector $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 := @parameter0: java.awt.font.GlyphVector;

        return 0;
    }

    public android.graphics.Path getAndroidGlyphOutline(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.String $r1;
        android.graphics.Path $r2;
        char[] $r3, $r4;
        char $c1;
        android.graphics.Paint $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        staticinvoke <com.android.internal.awt.AndroidGraphics2D: com.android.internal.awt.AndroidGraphics2D getInstance()>();

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        $r3 = newarray (char)[1];

        $r4 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector>;

        $c1 = $r4[$i0];

        $r3[0] = $c1;

        $r5 = staticinvoke <com.android.internal.awt.AndroidGraphics2D: android.graphics.Paint getAndroidPaint()>();

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        virtualinvoke $r5.<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>($r1, 0, 1, 0.0F, 0.0F, $r2);

        return $r2;
    }

    public android.graphics.Path getAndroidOutline()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.String $r1;
        android.graphics.Path $r2;
        android.graphics.Paint $r3;
        char[] $r4;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        staticinvoke <com.android.internal.awt.AndroidGraphics2D: com.android.internal.awt.AndroidGraphics2D getInstance()>();

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        $r3 = staticinvoke <com.android.internal.awt.AndroidGraphics2D: android.graphics.Paint getAndroidPaint()>();

        $r1 = new java.lang.String;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r4);

        $r4 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector>;

        $i0 = lengthof $r4;

        virtualinvoke $r3.<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>($r1, 0, $i0, 0.0F, 0.0F, $r2);

        return $r2;
    }

    public java.awt.Font getFont()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.awt.Font r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        r1 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Font font>;

        return r1;
    }

    public java.awt.font.FontRenderContext getFontRenderContext()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.awt.font.FontRenderContext r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        r1 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.font.FontRenderContext vectorFRC>;

        return r1;
    }

    public int getGlyphCode(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        char[] $r1;
        char $c1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector>;

        $c1 = $r1[$i0];

        return $c1;
    }

    public int[] getGlyphCodes(int, int, int[])
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0, $i1;
        int[] $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r2;
    }

    public java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.Shape getGlyphLogicalBounds(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.font.GlyphMetrics getGlyphMetrics(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.Shape getGlyphOutline(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.geom.Point2D getGlyphPosition(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public float[] getGlyphPositions(int, int, float[])
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0, $i1;
        float[] $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r2;
    }

    public java.awt.geom.AffineTransform getGlyphTransform(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.Shape getGlyphVisualBounds(int)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public char[] getGlyphs()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        char[] r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        r1 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector>;

        return r1;
    }

    public java.awt.geom.Rectangle2D getLogicalBounds()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public int getNumGlyphs()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        char[] $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] charVector>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.awt.Shape getOutline()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.Shape getOutline(float, float)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        float $f0, $f1;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public java.awt.geom.Rectangle2D getVisualBounds()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public void performDefaultLayout()
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        java.lang.RuntimeException $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r1;
    }

    public void setGlyphPosition(int, java.awt.geom.Point2D)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.awt.geom.Point2D $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.awt.geom.Point2D;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r2;
    }

    public void setGlyphTransform(int, java.awt.geom.AffineTransform)
    {
        org.apache.harmony.awt.gl.font.AndroidGlyphVector $r0;
        int $i0;
        java.awt.geom.AffineTransform $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.AndroidGlyphVector;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.awt.geom.AffineTransform;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented!");

        throw $r2;
    }
}
