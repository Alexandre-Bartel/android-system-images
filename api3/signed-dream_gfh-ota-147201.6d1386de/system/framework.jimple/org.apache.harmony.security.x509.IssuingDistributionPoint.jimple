public class org.apache.harmony.security.x509.IssuingDistributionPoint extends org.apache.harmony.security.x509.ExtensionValue
{
    public static org.apache.harmony.security.asn1.ASN1Type ASN1;
    private org.apache.harmony.security.x509.DistributionPointName distributionPoint;
    private boolean indirectCRL;
    private boolean onlyContainsAttributeCerts;
    private boolean onlyContainsCACerts;
    private boolean onlyContainsUserCerts;
    private org.apache.harmony.security.x509.ReasonFlags onlySomeReasons;

    static void <clinit>()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint$1 $r0;
        org.apache.harmony.security.asn1.ASN1Type[] $r1;
        org.apache.harmony.security.asn1.ASN1Explicit $r2;
        org.apache.harmony.security.asn1.ASN1Choice $r3;
        org.apache.harmony.security.asn1.ASN1Implicit $r4;
        org.apache.harmony.security.asn1.ASN1Boolean $r5;
        org.apache.harmony.security.asn1.ASN1BitString $r6;

        $r0 = new org.apache.harmony.security.x509.IssuingDistributionPoint$1;

        $r1 = newarray (org.apache.harmony.security.asn1.ASN1Type)[6];

        $r2 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r3 = <org.apache.harmony.security.x509.DistributionPointName: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r3);

        $r1[0] = $r2;

        $r4 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r5 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(1, $r5);

        $r1[1] = $r4;

        $r4 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r5 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(2, $r5);

        $r1[2] = $r4;

        $r4 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r6 = <org.apache.harmony.security.x509.ReasonFlags: org.apache.harmony.security.asn1.ASN1BitString ASN1>;

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(3, $r6);

        $r1[3] = $r4;

        $r4 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r5 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(4, $r5);

        $r1[4] = $r4;

        $r4 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r5 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(5, $r5);

        $r1[5] = $r4;

        specialinvoke $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r1);

        <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.asn1.ASN1Type ASN1> = $r0;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.DistributionPointName, org.apache.harmony.security.x509.ReasonFlags)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        org.apache.harmony.security.x509.DistributionPointName $r1;
        org.apache.harmony.security.x509.ReasonFlags $r2;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $r1 := @parameter0: org.apache.harmony.security.x509.DistributionPointName;

        $r2 := @parameter1: org.apache.harmony.security.x509.ReasonFlags;

        specialinvoke $r0.<org.apache.harmony.security.x509.ExtensionValue: void <init>()>();

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts> = 0;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts> = 0;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL> = 0;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts> = 0;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint> = $r1;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons> = $r2;

        return;
    }

    static org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        org.apache.harmony.security.x509.DistributionPointName r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        r1 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        return r1;
    }

    static boolean access$100(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts>;

        return z0;
    }

    static boolean access$200(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts>;

        return z0;
    }

    static org.apache.harmony.security.x509.ReasonFlags access$300(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        org.apache.harmony.security.x509.ReasonFlags r1;

        $r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        r1 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        return r1;
    }

    static boolean access$400(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL>;

        return z0;
    }

    static boolean access$500(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts>;

        return z0;
    }

    public static org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.apache.harmony.security.asn1.ASN1Type $r1;
        java.lang.Object $r2;
        org.apache.harmony.security.x509.IssuingDistributionPoint $r3;

        $r0 := @parameter0: byte[];

        $r1 = <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r0);

        $r3 = (org.apache.harmony.security.x509.IssuingDistributionPoint) $r2;

        $r3.<org.apache.harmony.security.x509.ExtensionValue: byte[] encoding> = $r0;

        return $r3;
    }

    public void dumpValue(java.lang.StringBuffer, java.lang.String)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        java.lang.StringBuffer $r1, $r3;
        java.lang.String $r2, $r6;
        org.apache.harmony.security.x509.DistributionPointName $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        org.apache.harmony.security.x509.ReasonFlags $r7;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $r1 := @parameter0: java.lang.StringBuffer;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Issuing Distribution Point: [\n");

        $r4 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        if $r4 == null goto label1;

        $r4 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.harmony.security.x509.DistributionPointName: void dumpValue(java.lang.StringBuffer,java.lang.String)>($r1, $r6);

     label1:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  onlyContainsUserCerts: ");

        $z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  onlyContainsCACerts: ");

        $z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r7 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        if $r7 == null goto label2;

        $r7 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.harmony.security.x509.ReasonFlags: void dumpValue(java.lang.StringBuffer,java.lang.String)>($r1, $r6);

     label2:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  indirectCRL: ");

        $z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  onlyContainsAttributeCerts: ");

        $z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        return;
    }

    public org.apache.harmony.security.x509.DistributionPointName getDistributionPoint()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        org.apache.harmony.security.x509.DistributionPointName r1;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        r1 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        return r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1Type $r2;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $r1 = $r0.<org.apache.harmony.security.x509.ExtensionValue: byte[] encoding>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r0);

        $r0.<org.apache.harmony.security.x509.ExtensionValue: byte[] encoding> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x509.ExtensionValue: byte[] encoding>;

        return $r1;
    }

    public boolean getIndirectCRL()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL>;

        return z0;
    }

    public boolean getOnlyContainsAttributeCerts()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts>;

        return z0;
    }

    public boolean getOnlyContainsCACerts()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts>;

        return z0;
    }

    public boolean getOnlyContainsUserCerts()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts>;

        return z0;
    }

    public org.apache.harmony.security.x509.ReasonFlags getOnlySomeReasons()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        org.apache.harmony.security.x509.ReasonFlags r1;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        r1 = $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        return r1;
    }

    public void setIndirectCRL(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 := @parameter0: boolean;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL> = $z0;

        return;
    }

    public void setOnlyContainsAttributeCerts(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 := @parameter0: boolean;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts> = $z0;

        return;
    }

    public void setOnlyContainsCACerts(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 := @parameter0: boolean;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts> = $z0;

        return;
    }

    public void setOnlyContainsUserCerts(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint $r0;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 := @parameter0: boolean;

        $r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts> = $z0;

        return;
    }
}
