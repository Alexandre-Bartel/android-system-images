class android.test.suitebuilder.TestGrouping$TestCasePredicate extends java.lang.Object implements com.android.internal.util.Predicate
{

    private void <init>()
    {
        android.test.suitebuilder.TestGrouping$TestCasePredicate $r0;

        $r0 := @this: android.test.suitebuilder.TestGrouping$TestCasePredicate;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.test.suitebuilder.TestGrouping$1)
    {
        android.test.suitebuilder.TestGrouping$TestCasePredicate $r0;
        android.test.suitebuilder.TestGrouping$1 $r1;

        $r0 := @this: android.test.suitebuilder.TestGrouping$TestCasePredicate;

        $r1 := @parameter0: android.test.suitebuilder.TestGrouping$1;

        specialinvoke $r0.<android.test.suitebuilder.TestGrouping$TestCasePredicate: void <init>()>();

        return;
    }

    private boolean hasValidConstructor(java.lang.Class)
    {
        android.test.suitebuilder.TestGrouping$TestCasePredicate $r0;
        java.lang.Class $r1;
        java.lang.reflect.Constructor $r2;
        int $i0, $i1, $i2;
        java.lang.reflect.Constructor[] $r3;
        boolean $z0;
        java.lang.Class[] $r4;

        $r0 := @this: android.test.suitebuilder.TestGrouping$TestCasePredicate;

        $r1 := @parameter0: java.lang.Class;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $r3 = (java.lang.reflect.Constructor[]) $r3;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r3[$i1];

        $i2 = virtualinvoke $r2.<java.lang.reflect.Constructor: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i2);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r4;

        if $i2 == 0 goto label2;

        $i2 = lengthof $r4;

        if $i2 != 1 goto label3;

        $r1 = $r4[0];

        if $r1 != class "java/lang/String" goto label3;

     label2:
        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    public boolean apply(java.lang.Class)
    {
        android.test.suitebuilder.TestGrouping$TestCasePredicate $r0;
        java.lang.Class $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.test.suitebuilder.TestGrouping$TestCasePredicate;

        $r1 := @parameter0: java.lang.Class;

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $r2 = class "junit/framework/TestCase";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z0 != 0 goto label1;

        $z0 = specialinvoke $r0.<android.test.suitebuilder.TestGrouping$TestCasePredicate: boolean hasValidConstructor(java.lang.Class)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        android.test.suitebuilder.TestGrouping$TestCasePredicate $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Class $r2;

        $r0 := @this: android.test.suitebuilder.TestGrouping$TestCasePredicate;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Class) $r1;

        $z0 = virtualinvoke $r0.<android.test.suitebuilder.TestGrouping$TestCasePredicate: boolean apply(java.lang.Class)>($r2);

        return $z0;
    }
}
