class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence extends java.lang.Object implements android.text.GetChars, java.lang.CharSequence
{
    private char[] mOriginal;
    private char[] mReplacement;
    private java.lang.CharSequence mSource;

    public void <init>(java.lang.CharSequence, char[], char[])
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence $r0;
        java.lang.CharSequence $r1;
        char[] $r2, $r3;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: char[];

        $r3 := @parameter2: char[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource> = $r1;

        $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal> = $r2;

        $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mReplacement> = $r3;

        return;
    }

    public char charAt(int)
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence $r0;
        int $i0, $i2;
        char $c1, $c3;
        java.lang.CharSequence $r1;
        char[] $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        $i0 = lengthof $r2;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        $c3 = $r2[$i2];

        if $c1 != $c3 goto label2;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mReplacement>;

        $c1 = $r2[$i2];

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $c1;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence $r0;
        int $i0, $i1, $i2, $i4;
        char[] $r1, $r3;
        char $c3, $c5;
        java.lang.CharSequence $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: char[];

        $i2 := @parameter3: int;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r2, $i0, $i1, $r1, $i2);

        $i0 = $i1 - $i0;

        $i1 = $i0 + $i2;

        $r3 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        $i0 = lengthof $r3;

     label1:
        if $i2 >= $i1 goto label5;

        $c3 = $r1[$i2];

        $i4 = 0;

     label2:
        if $i4 >= $i0 goto label4;

        $r3 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        $c5 = $r3[$i4];

        if $c3 != $c5 goto label3;

        $r3 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mReplacement>;

        $c5 = $r3[$i4];

        $r1[$i2] = $c5;

     label3:
        $i4 = $i4 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return;
    }

    public int length()
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence $r0;
        int $i0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $r1 = $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence $r0;
        int $i0, $i1, $i2;
        char[] $r1;
        java.lang.String $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 - $i0;

        $r1 = newarray (char)[$i2];

        virtualinvoke $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void getChars(int,int,char[],int)>($i0, $i1, $r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence $r0;
        char[] $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $i0 = virtualinvoke $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()>();

        $r1 = newarray (char)[$i0];

        $i0 = virtualinvoke $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()>();

        virtualinvoke $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void getChars(int,int,char[],int)>(0, $i0, $r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
}
