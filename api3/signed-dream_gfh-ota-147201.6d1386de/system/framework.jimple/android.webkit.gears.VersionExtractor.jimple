public final class android.webkit.gears.VersionExtractor extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String URL;
    private static final java.lang.String VERSION;

    public void <init>()
    {
        android.webkit.gears.VersionExtractor $r0;

        $r0 := @this: android.webkit.gears.VersionExtractor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean extract(java.lang.String, long)
    {
        java.lang.String $r0, $r6;
        long $l0;
        javax.xml.parsers.DocumentBuilderFactory $r1;
        javax.xml.parsers.DocumentBuilder $r2;
        org.xml.sax.InputSource $r3;
        java.io.StringReader $r4;
        org.w3c.dom.Document $r5;
        javax.xml.parsers.FactoryConfigurationError $r7;
        java.lang.StringBuilder $r8;
        javax.xml.parsers.ParserConfigurationException $r9;
        org.xml.sax.SAXException $r10;
        java.io.IOException $r11;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

     label01:
        $r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(0);

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label02:
        $r3 = new org.xml.sax.InputSource;

     label03:
        $r4 = new java.io.StringReader;

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>($r0);

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r4);

        $r5 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r3);

        $r0 = staticinvoke <android.webkit.gears.VersionExtractor: java.lang.String extractText(org.w3c.dom.Document,java.lang.String)>($r5, "em:version");

        $r6 = staticinvoke <android.webkit.gears.VersionExtractor: java.lang.String extractText(org.w3c.dom.Document,java.lang.String)>($r5, "em:updateLink");

     label04:
        if $r0 == null goto label07;

     label05:
        if $r6 == null goto label07;

        staticinvoke <android.webkit.gears.VersionExtractor: void setVersionAndUrl(java.lang.String,java.lang.String,long)>($r0, $r6, $l0);

     label06:
        return 1;

     label07:
        return 0;

     label08:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create the DocumentBuilderFactory ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J-VersionExtractor", $r0);

     label09:
        return 0;

     label10:
        $r9 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create the DocumentBuilder ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J-VersionExtractor", $r0);

        goto label09;

     label11:
        $r10 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse the xml ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J-VersionExtractor", $r0);

        goto label09;

     label12:
        $r11 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read the xml ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J-VersionExtractor", $r0);

        goto label09;

        catch javax.xml.parsers.FactoryConfigurationError from label01 to label04 with label08;
        catch javax.xml.parsers.FactoryConfigurationError from label05 to label06 with label08;
        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label10;
        catch javax.xml.parsers.ParserConfigurationException from label03 to label04 with label10;
        catch javax.xml.parsers.ParserConfigurationException from label05 to label06 with label10;
        catch org.xml.sax.SAXException from label01 to label02 with label11;
        catch org.xml.sax.SAXException from label03 to label04 with label11;
        catch org.xml.sax.SAXException from label05 to label06 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
    }

    private static java.lang.String extractText(org.w3c.dom.Document, java.lang.String)
    {
        org.w3c.dom.Document $r0;
        java.lang.String $r1, $r2;
        org.w3c.dom.NodeList $r3;
        int $i0, $i1;
        org.w3c.dom.Node $r4;
        short $s2;
        java.lang.StringBuilder $r5;
        org.w3c.dom.DOMException $r6, $r7;

        $r0 := @parameter0: org.w3c.dom.Document;

        $r1 := @parameter1: java.lang.String;

        $r2 = null;

        $r3 = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label08;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r3 = interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i0 = 0;

        $r1 = null;

     label01:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 >= $i1 goto label07;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $s2 = interfaceinvoke $r4.<org.w3c.dom.Node: short getNodeType()>();

     label02:
        if $s2 != 3 goto label13;

        if $r1 != null goto label12;

     label03:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>()>();

     label04:
        $r5 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $i0 = $i0 + 1;

        goto label01;

     label07:
        $r2 = $r1;

     label08:
        if $r2 == null goto label14;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r1;

     label09:
        $r6 := @caughtexception;

        $r2 = $r1;

     label10:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNodeValue() failed ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J-VersionExtractor", $r1);

        goto label08;

     label11:
        $r7 := @caughtexception;

        $r6 = $r7;

        goto label10;

     label12:
        $r2 = $r1;

        goto label04;

     label13:
        goto label06;

     label14:
        return $r2;

        catch org.w3c.dom.DOMException from label01 to label02 with label09;
        catch org.w3c.dom.DOMException from label03 to label04 with label09;
        catch org.w3c.dom.DOMException from label05 to label06 with label11;
    }

    private static native void setVersionAndUrl(java.lang.String, java.lang.String, long);

    public static void <clinit>()
    {
        <android.webkit.gears.VersionExtractor: java.lang.String VERSION> = "em:version";

        <android.webkit.gears.VersionExtractor: java.lang.String URL> = "em:updateLink";

        <android.webkit.gears.VersionExtractor: java.lang.String TAG> = "Gears-J-VersionExtractor";

        return;
    }
}
