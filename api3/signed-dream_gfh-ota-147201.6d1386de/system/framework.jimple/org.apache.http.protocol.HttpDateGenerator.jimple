public class org.apache.http.protocol.HttpDateGenerator extends java.lang.Object
{
    public static final java.util.TimeZone GMT;
    public static final java.lang.String PATTERN_RFC1123;
    private long dateAsLong;
    private java.lang.String dateAsText;
    private final java.text.DateFormat dateformat;

    static void <clinit>()
    {
        java.util.TimeZone $r0;

        <org.apache.http.protocol.HttpDateGenerator: java.lang.String PATTERN_RFC1123> = "EEE, dd MMM yyyy HH:mm:ss zzz";

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <org.apache.http.protocol.HttpDateGenerator: java.util.TimeZone GMT> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.protocol.HttpDateGenerator $r0;
        java.util.Locale $r1;
        java.text.SimpleDateFormat $r2;
        java.text.DateFormat $r3;
        java.util.TimeZone $r4;

        $r0 := @this: org.apache.http.protocol.HttpDateGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.http.protocol.HttpDateGenerator: long dateAsLong> = 0L;

        $r0.<org.apache.http.protocol.HttpDateGenerator: java.lang.String dateAsText> = null;

        $r2 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss zzz", $r1);

        $r0.<org.apache.http.protocol.HttpDateGenerator: java.text.DateFormat dateformat> = $r2;

        $r3 = $r0.<org.apache.http.protocol.HttpDateGenerator: java.text.DateFormat dateformat>;

        $r4 = <org.apache.http.protocol.HttpDateGenerator: java.util.TimeZone GMT>;

        virtualinvoke $r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        return;
    }

    public java.lang.String getCurrentDate()
    {
        org.apache.http.protocol.HttpDateGenerator $r0;
        java.util.Date $r1;
        long $l0, $l1;
        byte $b2;
        java.text.DateFormat $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.http.protocol.HttpDateGenerator;

        entermonitor $r0;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $r0.<org.apache.http.protocol.HttpDateGenerator: long dateAsLong>;

        $l1 = $l0 - $l1;

        $b2 = $l1 cmp 1000L;

        if $b2 <= 0 goto label2;

        $r2 = $r0.<org.apache.http.protocol.HttpDateGenerator: java.text.DateFormat dateformat>;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r3 = virtualinvoke $r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r1);

        $r0.<org.apache.http.protocol.HttpDateGenerator: java.lang.String dateAsText> = $r3;

        $r0.<org.apache.http.protocol.HttpDateGenerator: long dateAsLong> = $l0;

     label2:
        $r3 = $r0.<org.apache.http.protocol.HttpDateGenerator: java.lang.String dateAsText>;

     label3:
        exitmonitor $r0;

        return $r3;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
}
