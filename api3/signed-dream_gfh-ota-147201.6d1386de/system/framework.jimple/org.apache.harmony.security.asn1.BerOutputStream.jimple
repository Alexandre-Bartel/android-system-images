public class org.apache.harmony.security.asn1.BerOutputStream extends java.lang.Object
{
    public java.lang.Object content;
    public byte[] encoded;
    public int length;
    protected int offset;

    public void <init>()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void encodeANY()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void encodeBitString()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        java.lang.Object $r1;
        org.apache.harmony.security.asn1.BitString $r2;
        byte[] $r3, $r4;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r2 = (org.apache.harmony.security.asn1.BitString) $r1;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r2.<org.apache.harmony.security.asn1.BitString: int unusedBits>;

        $b2 = (byte) $i1;

        $r3[$i0] = $b2;

        $r3 = $r2.<org.apache.harmony.security.asn1.BitString: byte[] bytes>;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = $i0 + 1;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i1 = $i1 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void encodeBoolean()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Boolean $r2;
        byte[] $r3;
        int $i0;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $r3[$i0] = -1;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;

     label2:
        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $r3[$i0] = 0;

        goto label1;
    }

    public void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Choice $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Choice;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Explicit $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Explicit;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeGeneralizedTime()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void encodeInteger()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void encodeOID()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        java.lang.Object $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r3;
        byte $b5;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r2 = (int[]) $r1;

        $r2 = (int[]) $r2;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i1 = lengthof $r2;

        $i1 = $i1 - 1;

     label1:
        if $i1 <= 1 goto label5;

        $i2 = $r2[$i1];

        if $i2 <= 127 goto label3;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i3 = $i3 + $i0;

        $i3 = $i3 - 1;

        $i4 = $i2 & 127;

        $b5 = (byte) $i4;

        $r3[$i3] = $b5;

        $i2 = $i2 >> 7;

     label2:
        if $i2 <= 0 goto label4;

        $i0 = $i0 + -1;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i3 = $i3 + $i0;

        $i3 = $i3 - 1;

        $i4 = $i2 | 128;

        $b5 = (byte) $i4;

        $r3[$i3] = $b5;

        $i2 = $i2 >> 7;

        goto label2;

     label3:
        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i3 = $i3 + $i0;

        $i3 = $i3 - 1;

        $b5 = (byte) $i2;

        $r3[$i3] = $b5;

     label4:
        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

        goto label1;

     label5:
        $i1 = $r2[0];

        $i1 = $i1 * 40;

        $i2 = $r2[1];

        $i1 = $i1 + $i2;

        if $i1 <= 127 goto label7;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = $i2 + $i0;

        $i2 = $i2 - 1;

        $i3 = $i1 & 127;

        $b5 = (byte) $i3;

        $r3[$i2] = $b5;

        $i1 = $i1 >> 7;

     label6:
        if $i1 <= 0 goto label8;

        $i0 = $i0 + -1;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = $i2 + $i0;

        $i2 = $i2 - 1;

        $i3 = $i1 | 128;

        $b5 = (byte) $i3;

        $r3[$i2] = $b5;

        $i1 = $i1 >> 7;

        goto label6;

     label7:
        $r3 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = $i2 + $i0;

        $i0 = $i0 - 1;

        $b5 = (byte) $i1;

        $r3[$i0] = $b5;

     label8:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void encodeOctetString()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Sequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SequenceOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeSet(org.apache.harmony.security.asn1.ASN1Set)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Set $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Set;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1SetOf $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SetOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeString()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public final void encodeTag(int)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        int $i0, $i1, $i2, $i6;
        byte[] $r1;
        byte $b3, $b5;
        short $s4;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i2;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        if $i0 <= 127 goto label5;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 >> 8;

        $b3 = 1;

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $b3 + 1;

        $b3 = (byte) $i1;

        $i0 = $i0 >> 8;

        goto label1;

     label2:
        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $s4 = $b3 | 128;

        $b5 = (byte) $s4;

        $r1[$i0] = $b5;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = $i0 + 1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $i1 + $b3;

        $i1 = $i1 - 1;

        $i2 = 0;

     label3:
        if $i2 >= $b3 goto label4;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i6 = $i1 - $i2;

        $b5 = (byte) $i0;

        $r1[$i6] = $b5;

        $i2 = $i2 + 1;

        $i0 = $i0 >> 8;

        goto label3;

     label4:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = $i0 + $b3;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;

     label5:
        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i1;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $b3 = (byte) $i1;

        $r1[$i0] = $b3;

        return;
    }

    public void encodeUTCTime()
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i0, $i1);

        $i0 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i1 = $r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i0;

        return;
    }

    public void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Choice $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Choice;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Explicit $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Explicit;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Sequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SequenceOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSetLength(org.apache.harmony.security.asn1.ASN1Set)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1Set $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Set;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        org.apache.harmony.security.asn1.ASN1SetOf $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SetOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public int getStringLength(java.lang.Object)
    {
        org.apache.harmony.security.asn1.BerOutputStream $r0;
        java.lang.Object $r1;
        java.lang.RuntimeException $r2;

        $r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }
}
