public class org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl extends javax.net.ssl.SSLServerSocketFactory
{
    private java.io.IOException instantiationException;
    private org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters;

    public void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;
        java.security.KeyManagementException $r2;
        java.io.IOException $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        specialinvoke $r0.<javax.net.ssl.SSLServerSocketFactory: void <init>()>();

     label1:
        $r1 = staticinvoke <org.apache.harmony.xnet.provider.jsse.SSLParameters: org.apache.harmony.xnet.provider.jsse.SSLParameters getDefault()>();

     label2:
        $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters> = $r1;

     label3:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLParameters: void setUseClientMode(boolean)>(0);

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Delayed instantiation exception:");

        $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.io.IOException instantiationException> = $r3;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.io.IOException instantiationException>;

        virtualinvoke $r3.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        return;

        catch java.security.KeyManagementException from label1 to label2 with label5;
        catch java.security.KeyManagementException from label3 to label4 with label5;
    }

    public void <init>(org.apache.harmony.xnet.provider.jsse.SSLParameters)
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $r1 := @parameter0: org.apache.harmony.xnet.provider.jsse.SSLParameters;

        specialinvoke $r0.<javax.net.ssl.SSLServerSocketFactory: void <init>()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters> = $r1;

        return;
    }

    public java.net.ServerSocket createServerSocket() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;
        java.lang.Object $r2;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r3;

        $r3 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $r0 = new org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl;

        $r1 = $r3.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r1 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r2;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void <init>(org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r1);

        return $r0;
    }

    public java.net.ServerSocket createServerSocket(int) throws java.io.IOException
    {
        int $i0;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;
        java.lang.Object $r2;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r3;

        $r3 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $i0 := @parameter0: int;

        $r0 = new org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl;

        $r1 = $r3.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r1 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r2;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void <init>(int,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($i0, $r1);

        return $r0;
    }

    public java.net.ServerSocket createServerSocket(int, int) throws java.io.IOException
    {
        int $i0, $i1;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;
        java.lang.Object $r2;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r3;

        $r3 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl;

        $r1 = $r3.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r1 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r2;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void <init>(int,int,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($i0, $i1, $r1);

        return $r0;
    }

    public java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress) throws java.io.IOException
    {
        int $i0, $i1;
        java.net.InetAddress $r0;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl $r1;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r2;
        java.lang.Object $r3;
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r4;

        $r4 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: java.net.InetAddress;

        $r1 = new org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl;

        $r2 = $r4.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r2 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r3;

        specialinvoke $r1.<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void <init>(int,int,java.net.InetAddress,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($i0, $i1, $r0, $r2);

        return $r1;
    }

    public java.lang.String[] getDefaultCipherSuites()
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r0;
        java.lang.String[] $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $r1 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] nativegetsupportedciphersuites()>();

        return $r1;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl $r0;
        java.lang.String[] $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl;

        $r1 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] nativegetsupportedciphersuites()>();

        return $r1;
    }
}
