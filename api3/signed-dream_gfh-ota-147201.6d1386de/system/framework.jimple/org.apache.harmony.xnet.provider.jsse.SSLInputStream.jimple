public abstract class org.apache.harmony.xnet.provider.jsse.SSLInputStream extends java.io.InputStream
{

    public void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        return;
    }

    public abstract int available() throws java.io.IOException;

    public abstract int read() throws java.io.IOException;

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i3, $i4, $i5;
        byte $b2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = 0;

     label1:
        $i4 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        if $i4 != -1 goto label3;

        if $i3 != 0 goto label2;

        return -1;

     label2:
        return $i3;

     label3:
        $i5 = $i0 + $i3;

        $b2 = (byte) $i4;

        $r1[$i5] = $b2;

        $i3 = $i3 + 1;

        $i4 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int available()>();

        if $i4 == 0 goto label4;

        if $i3 < $i1 goto label1;

     label4:
        return $i3;
    }

    public byte[] read(int) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[$i0];

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $b3 = (byte) $i1;

        $r1[$i2] = $b3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public int readUint16() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $i0 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i0 = $i0 << 8;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 & 255;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public int readUint24() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $i0 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i0 = $i0 << 16;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 & 255;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public long readUint32() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        int $i0, $i1;
        long $l2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $i0 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i0 = $i0 << 24;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 16;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 & 255;

        $i0 = $i0 | $i1;

        $l2 = (long) $i0;

        return $l2;
    }

    public long readUint64() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        int $i0, $i1;
        long $l2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $i0 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i0 = $i0 << 56;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 48;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 40;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 32;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 24;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 16;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i1 = $i1 & 255;

        $i0 = $i0 | $i1;

        $l2 = (long) $i0;

        return $l2;
    }

    public int readUint8() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $i0 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $i0 = $i0 & 255;

        return $i0;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLInputStream $r0;
        long $l0, $l1;
        byte $b2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.SSLInputStream;

        $l1 := @parameter0: long;

        $l0 = $l1;

     label1:
        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read()>();

        $l1 = $l1 - 1L;

        goto label1;

     label2:
        return $l0;
    }
}
