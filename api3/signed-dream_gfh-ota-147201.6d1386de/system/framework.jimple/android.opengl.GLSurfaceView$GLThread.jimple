class android.opengl.GLSurfaceView$GLThread extends java.lang.Thread
{
    private boolean mDone;
    private android.opengl.GLSurfaceView$EglHelper mEglHelper;
    private java.util.ArrayList mEventQueue;
    private boolean mHasSurface;
    private int mHeight;
    private boolean mPaused;
    private int mRenderMode;
    private android.opengl.GLSurfaceView$Renderer mRenderer;
    private boolean mRequestRender;
    private int mWidth;
    final android.opengl.GLSurfaceView this$0;

    void <init>(android.opengl.GLSurfaceView, android.opengl.GLSurfaceView$Renderer)
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        android.opengl.GLSurfaceView $r1;
        android.opengl.GLSurfaceView$Renderer $r2;
        java.util.ArrayList $r3;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        $r1 := @parameter0: android.opengl.GLSurfaceView;

        $r2 := @parameter1: android.opengl.GLSurfaceView$Renderer;

        $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView this$0> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<android.opengl.GLSurfaceView$GLThread: java.util.ArrayList mEventQueue> = $r3;

        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mDone> = 0;

        $r0.<android.opengl.GLSurfaceView$GLThread: int mWidth> = 0;

        $r0.<android.opengl.GLSurfaceView$GLThread: int mHeight> = 0;

        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mRequestRender> = 1;

        $r0.<android.opengl.GLSurfaceView$GLThread: int mRenderMode> = 1;

        $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$Renderer mRenderer> = $r2;

        virtualinvoke $r0.<java.lang.Thread: void setName(java.lang.String)>("GLThread");

        return;
    }

    private java.lang.Runnable getEvent()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Runnable $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: java.util.ArrayList mEventQueue>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: java.util.ArrayList mEventQueue>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r3 = (java.lang.Runnable) $r2;

        exitmonitor $r0;

     label2:
        return $r3;

     label3:
        exitmonitor $r0;

     label4:
        return null;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void guardedRun() throws java.lang.InterruptedException
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        int $i0, $i1;
        android.opengl.GLSurfaceView$EglHelper $r1;
        android.opengl.GLSurfaceView $r2;
        javax.microedition.khronos.opengles.GL10 $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Runnable $r4;
        java.lang.Throwable $r5;
        android.view.SurfaceHolder $r6;
        javax.microedition.khronos.opengles.GL $r7;
        android.opengl.GLSurfaceView$Renderer $r8;
        javax.microedition.khronos.egl.EGLConfig $r9;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        $r1 = new android.opengl.GLSurfaceView$EglHelper;

        $r2 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView this$0>;

        specialinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: void <init>(android.opengl.GLSurfaceView)>($r2);

        $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper> = $r1;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: void start()>();

        $r3 = null;

        $z0 = 1;

        $z1 = 1;

     label01:
        $z2 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mDone>;

        if $z2 != 0 goto label08;

        $z2 = 0;

        entermonitor $r0;

     label02:
        $r4 = specialinvoke $r0.<android.opengl.GLSurfaceView$GLThread: java.lang.Runnable getEvent()>();

        if $r4 == null goto label05;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

        goto label02;

     label03:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r5;

     label05:
        $z3 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mPaused>;

        if $z3 == 0 goto label06;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: void finish()>();

        $z2 = 1;

     label06:
        $z3 = specialinvoke $r0.<android.opengl.GLSurfaceView$GLThread: boolean needToWait()>();

        if $z3 == 0 goto label07;

        virtualinvoke $r0.<java.lang.Object: void wait()>();

        goto label06;

     label07:
        $z3 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mDone>;

        if $z3 == 0 goto label09;

        exitmonitor $r0;

     label08:
        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: void finish()>();

        return;

     label09:
        $r2 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView this$0>;

        $z3 = staticinvoke <android.opengl.GLSurfaceView: boolean access$400(android.opengl.GLSurfaceView)>($r2);

        $i1 = $r0.<android.opengl.GLSurfaceView$GLThread: int mWidth>;

        $i0 = $r0.<android.opengl.GLSurfaceView$GLThread: int mHeight>;

        $r2 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView this$0>;

        staticinvoke <android.opengl.GLSurfaceView: boolean access$402(android.opengl.GLSurfaceView,boolean)>($r2, 0);

        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mRequestRender> = 0;

        exitmonitor $r0;

     label10:
        if $z2 == 0 goto label11;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: void start()>();

        $z0 = 1;

        $z3 = 1;

     label11:
        if $z3 == 0 goto label12;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        $r2 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView this$0>;

        $r6 = virtualinvoke $r2.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r7 = virtualinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder)>($r6);

        $r3 = (javax.microedition.khronos.opengles.GL10) $r7;

        $z1 = 1;

     label12:
        if $z0 == 0 goto label13;

        $r8 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$Renderer mRenderer>;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        $r9 = $r1.<android.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.egl.EGLConfig mEglConfig>;

        interfaceinvoke $r8.<android.opengl.GLSurfaceView$Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>($r3, $r9);

        $z0 = 0;

     label13:
        if $z1 == 0 goto label14;

        $r8 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$Renderer mRenderer>;

        interfaceinvoke $r8.<android.opengl.GLSurfaceView$Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>($r3, $i1, $i0);

        $z1 = 0;

     label14:
        if $i1 <= 0 goto label01;

        if $i0 <= 0 goto label01;

        $r8 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$Renderer mRenderer>;

        interfaceinvoke $r8.<android.opengl.GLSurfaceView$Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>($r3);

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView$EglHelper mEglHelper>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$EglHelper: boolean swap()>();

        goto label01;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label05 to label08 with label03;
        catch java.lang.Throwable from label09 to label10 with label03;
    }

    private boolean needToWait()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        $z0 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mDone>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mPaused>;

        if $z0 != 0 goto label2;

        $z0 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mHasSurface>;

        if $z0 != 0 goto label3;

     label2:
        return 1;

     label3:
        $i0 = $r0.<android.opengl.GLSurfaceView$GLThread: int mWidth>;

        if $i0 <= 0 goto label5;

        $i0 = $r0.<android.opengl.GLSurfaceView$GLThread: int mHeight>;

        if $i0 <= 0 goto label5;

        $z0 = $r0.<android.opengl.GLSurfaceView$GLThread: boolean mRequestRender>;

        if $z0 != 0 goto label4;

        $i0 = $r0.<android.opengl.GLSurfaceView$GLThread: int mRenderMode>;

        if $i0 != 1 goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    public int getRenderMode()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.opengl.GLSurfaceView$GLThread: int mRenderMode>;

        exitmonitor $r0;

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onPause()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mPaused> = 1;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onResume()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mPaused> = 0;

        virtualinvoke $r0.<java.lang.Object: void notify()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onWindowResize(int, int)
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        int $i0, $i1;
        android.opengl.GLSurfaceView $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: int mWidth> = $i0;

        $r0.<android.opengl.GLSurfaceView$GLThread: int mHeight> = $i1;

        $r1 = $r0.<android.opengl.GLSurfaceView$GLThread: android.opengl.GLSurfaceView this$0>;

        staticinvoke <android.opengl.GLSurfaceView: boolean access$402(android.opengl.GLSurfaceView,boolean)>($r1, 1);

        virtualinvoke $r0.<java.lang.Object: void notify()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void queueEvent(java.lang.Runnable)
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Runnable $r1;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        $r1 := @parameter0: java.lang.Runnable;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.opengl.GLSurfaceView$GLThread: java.util.ArrayList mEventQueue>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void requestExitAndWait()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.InterruptedException $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mDone> = 1;

        virtualinvoke $r0.<java.lang.Object: void notify()>();

        exitmonitor $r0;

     label2:
        virtualinvoke $r0.<java.lang.Thread: void join()>();

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r3;

     label7:
        $r1 := @caughtexception;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.InterruptedException from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void requestRender()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mRequestRender> = 1;

        virtualinvoke $r0.<java.lang.Object: void notify()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void run()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.util.concurrent.Semaphore $r1;
        java.lang.InterruptedException $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

     label1:
        $r1 = staticinvoke <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore access$300()>();

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void acquire()>();

     label2:
        specialinvoke $r0.<android.opengl.GLSurfaceView$GLThread: void guardedRun()>();

     label3:
        $r1 = staticinvoke <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore access$300()>();

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;

     label4:
        $r2 := @caughtexception;

        $r1 = staticinvoke <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore access$300()>();

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;

     label5:
        $r3 := @caughtexception;

        $r1 = staticinvoke <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore access$300()>();

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;

     label6:
        $r4 := @caughtexception;

        $r1 = staticinvoke <android.opengl.GLSurfaceView: java.util.concurrent.Semaphore access$300()>();

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        throw $r4;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.InterruptedException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    public void setRenderMode(int)
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        if $i0 <= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("renderMode");

        throw $r1;

     label2:
        entermonitor $r0;

     label3:
        $r0.<android.opengl.GLSurfaceView$GLThread: int mRenderMode> = $i0;

        if $i0 != 1 goto label4;

        virtualinvoke $r0.<java.lang.Object: void notify()>();

     label4:
        exitmonitor $r0;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void surfaceCreated()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mHasSurface> = 1;

        virtualinvoke $r0.<java.lang.Object: void notify()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void surfaceDestroyed()
    {
        android.opengl.GLSurfaceView$GLThread $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.opengl.GLSurfaceView$GLThread;

        entermonitor $r0;

     label1:
        $r0.<android.opengl.GLSurfaceView$GLThread: boolean mHasSurface> = 0;

        virtualinvoke $r0.<java.lang.Object: void notify()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
