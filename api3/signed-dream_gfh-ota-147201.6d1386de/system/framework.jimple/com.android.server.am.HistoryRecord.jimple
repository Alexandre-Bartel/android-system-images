class com.android.server.am.HistoryRecord extends android.view.IApplicationToken$Stub
{
    com.android.server.am.ProcessRecord app;
    final java.lang.String baseDir;
    final boolean componentSpecified;
    int configChangeFlags;
    boolean configDestroy;
    android.content.res.Configuration configuration;
    java.util.HashSet connections;
    final java.lang.String dataDir;
    java.lang.CharSequence description;
    boolean finishing;
    boolean frontOfTask;
    boolean frozenBeforeDestroy;
    final boolean fullscreen;
    boolean hasBeenLaunched;
    boolean haveState;
    android.os.Bundle icicle;
    int icon;
    boolean idle;
    boolean inHistory;
    final android.content.pm.ActivityInfo info;
    final android.content.Intent intent;
    final boolean isHomeActivity;
    boolean keysPaused;
    int labelRes;
    boolean launchFailed;
    int launchMode;
    final int launchedFromUid;
    java.util.ArrayList newIntents;
    java.lang.CharSequence nonLocalizedLabel;
    boolean nowVisible;
    final java.lang.String packageName;
    java.util.HashSet pendingResults;
    boolean persistent;
    final java.lang.String processName;
    java.util.HashSet readUriPermissions;
    final android.content.ComponentName realActivity;
    final int requestCode;
    final java.lang.String resDir;
    final java.lang.String resolvedType;
    com.android.server.am.HistoryRecord resultTo;
    final java.lang.String resultWho;
    java.util.ArrayList results;
    final com.android.server.am.ActivityManagerService service;
    final java.lang.String shortComponentName;
    long startTime;
    com.android.server.am.ActivityManagerService$ActivityState state;
    final boolean stateNotNeeded;
    boolean stopped;
    com.android.server.am.TaskRecord task;
    final java.lang.String taskAffinity;
    int theme;
    android.graphics.Bitmap thumbnail;
    boolean thumbnailNeeded;
    boolean visible;
    boolean waitingVisible;
    java.util.HashSet writeUriPermissions;

    void <init>(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, int, android.content.Intent, java.lang.String, android.content.pm.ActivityInfo, android.content.res.Configuration, com.android.server.am.HistoryRecord, java.lang.String, int, boolean)
    {
        com.android.server.am.HistoryRecord $r0, $r7;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.ProcessRecord $r2;
        int $i0, $i1, $i2;
        android.content.Intent $r3, $r15;
        java.lang.String $r4, $r8, $r12;
        android.content.pm.ActivityInfo $r5;
        android.content.res.Configuration $r6;
        boolean $z0, $z1;
        android.content.pm.ApplicationInfo $r9;
        int[] $r10;
        android.content.ComponentName $r11;
        com.android.server.am.ActivityManagerService$ActivityState $r13;
        java.lang.CharSequence $r14;
        com.android.server.AttributeCache $r16;
        com.android.server.AttributeCache$Entry $r17;
        android.content.res.TypedArray $r18;
        java.util.Set $r19;
        android.net.Uri $r20;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: com.android.server.am.ActivityManagerService;

        $r2 := @parameter1: com.android.server.am.ProcessRecord;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.content.Intent;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: android.content.pm.ActivityInfo;

        $r6 := @parameter6: android.content.res.Configuration;

        $r7 := @parameter7: com.android.server.am.HistoryRecord;

        $r8 := @parameter8: java.lang.String;

        $i1 := @parameter9: int;

        $z0 := @parameter10: boolean;

        specialinvoke $r0.<android.view.IApplicationToken$Stub: void <init>()>();

        $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service> = $r1;

        $r0.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info> = $r5;

        $r0.<com.android.server.am.HistoryRecord: int launchedFromUid> = $i0;

        $r0.<com.android.server.am.HistoryRecord: android.content.Intent intent> = $r3;

        $r11 = virtualinvoke $r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r0.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName> = $r12;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String resolvedType> = $r4;

        $r0.<com.android.server.am.HistoryRecord: boolean componentSpecified> = $z0;

        $r0.<com.android.server.am.HistoryRecord: android.content.res.Configuration configuration> = $r6;

        $r0.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo> = $r7;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String resultWho> = $r8;

        $r0.<com.android.server.am.HistoryRecord: int requestCode> = $i1;

        $r13 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState INITIALIZING>;

        $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r13;

        $r0.<com.android.server.am.HistoryRecord: boolean frontOfTask> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean launchFailed> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean haveState> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean stopped> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean finishing> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean configDestroy> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean keysPaused> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean inHistory> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean persistent> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean visible> = 1;

        $r0.<com.android.server.am.HistoryRecord: boolean waitingVisible> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean nowVisible> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean thumbnailNeeded> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean idle> = 0;

        $r0.<com.android.server.am.HistoryRecord: boolean hasBeenLaunched> = 0;

        if $r5 == null goto label18;

        $r4 = $r5.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r4 == null goto label01;

        $i1 = $r5.<android.content.pm.ActivityInfo: int launchMode>;

        if $i1 == 0 goto label01;

        $i1 = $r5.<android.content.pm.ActivityInfo: int launchMode>;

        if $i1 != 1 goto label11;

     label01:
        $r11 = virtualinvoke $r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r0.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity> = $r11;

     label02:
        $r4 = $r5.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity> = $r4;

        $i1 = $r5.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i1 & 16;

        if $i1 == 0 goto label12;

        $z1 = 1;

     label03:
        $r0.<com.android.server.am.HistoryRecord: boolean stateNotNeeded> = $z1;

        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r9.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String baseDir> = $r4;

        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r9.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String resDir> = $r4;

        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r9.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String dataDir> = $r4;

        $r14 = $r5.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.CharSequence nonLocalizedLabel> = $r14;

        $i1 = $r5.<android.content.pm.PackageItemInfo: int labelRes>;

        $r0.<com.android.server.am.HistoryRecord: int labelRes> = $i1;

        $r14 = $r0.<com.android.server.am.HistoryRecord: java.lang.CharSequence nonLocalizedLabel>;

        if $r14 != null goto label04;

        $i1 = $r0.<com.android.server.am.HistoryRecord: int labelRes>;

        if $i1 != 0 goto label04;

        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r9.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.CharSequence nonLocalizedLabel> = $r14;

        $i1 = $r9.<android.content.pm.PackageItemInfo: int labelRes>;

        $r0.<com.android.server.am.HistoryRecord: int labelRes> = $i1;

     label04:
        $i1 = virtualinvoke $r5.<android.content.pm.ComponentInfo: int getIconResource()>();

        $r0.<com.android.server.am.HistoryRecord: int icon> = $i1;

        $i1 = virtualinvoke $r5.<android.content.pm.ActivityInfo: int getThemeResource()>();

        $r0.<com.android.server.am.HistoryRecord: int theme> = $i1;

        $i1 = $r5.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label13;

        if $r2 == null goto label13;

        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 == 1000 goto label05;

        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        $r9 = $r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 != $i2 goto label13;

     label05:
        $r4 = $r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String processName> = $r4;

     label06:
        $r15 = $r0.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        if $r15 == null goto label07;

        $i1 = $r5.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i1 & 32;

        if $i1 == 0 goto label07;

        $r15 = $r0.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        virtualinvoke $r15.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

     label07:
        $r9 = $r5.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r9.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String packageName> = $r4;

        $i1 = $r5.<android.content.pm.ActivityInfo: int launchMode>;

        $r0.<com.android.server.am.HistoryRecord: int launchMode> = $i1;

        $r16 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $i1 = $r0.<com.android.server.am.HistoryRecord: int theme>;

        if $i1 == 0 goto label14;

        $i1 = $r0.<com.android.server.am.HistoryRecord: int theme>;

     label08:
        $r10 = <com.android.internal.R$styleable: int[] Window>;

        $r17 = virtualinvoke $r16.<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[])>($r4, $i1, $r10);

        if $r17 == null goto label15;

        $r18 = $r17.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z1 = virtualinvoke $r18.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z1 != 0 goto label15;

        $r18 = $r17.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z1 = virtualinvoke $r18.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        if $z1 != 0 goto label15;

        $z1 = 1;

     label09:
        $r0.<com.android.server.am.HistoryRecord: boolean fullscreen> = $z1;

        if $z0 == 0 goto label10;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 == $i1 goto label10;

        if $i0 != 0 goto label17;

     label10:
        $r4 = "android.intent.action.MAIN";

        $r8 = virtualinvoke $r3.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label16;

        $z0 = virtualinvoke $r3.<android.content.Intent: boolean hasCategory(java.lang.String)>("android.intent.category.HOME");

        if $z0 == 0 goto label16;

        $r19 = virtualinvoke $r3.<android.content.Intent: java.util.Set getCategories()>();

        $i0 = interfaceinvoke $r19.<java.util.Set: int size()>();

        if $i0 != 1 goto label16;

        $r20 = virtualinvoke $r3.<android.content.Intent: android.net.Uri getData()>();

        if $r20 != null goto label16;

        $r4 = virtualinvoke $r3.<android.content.Intent: java.lang.String getType()>();

        if $r4 != null goto label16;

        $r3 = $r0.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $i0 = virtualinvoke $r3.<android.content.Intent: int getFlags()>();

        $i0 = $i0 & 268435456;

        if $i0 == 0 goto label16;

        $r4 = "android";

        $r11 = $r0.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r8 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label16;

        $r0.<com.android.server.am.HistoryRecord: boolean isHomeActivity> = 1;

        return;

     label11:
        $r11 = new android.content.ComponentName;

        $r4 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = $r5.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, $r8);

        $r0.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity> = $r11;

        goto label02;

     label12:
        $z1 = 0;

        goto label03;

     label13:
        $r4 = $r5.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String processName> = $r4;

        goto label06;

     label14:
        $i1 = 16973829;

        goto label08;

     label15:
        $z1 = 0;

        goto label09;

     label16:
        $r0.<com.android.server.am.HistoryRecord: boolean isHomeActivity> = 0;

        return;

     label17:
        $r0.<com.android.server.am.HistoryRecord: boolean isHomeActivity> = 0;

        return;

     label18:
        $r0.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity> = null;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity> = null;

        $r0.<com.android.server.am.HistoryRecord: boolean stateNotNeeded> = 0;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String baseDir> = null;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String resDir> = null;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String dataDir> = null;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String processName> = null;

        $r0.<com.android.server.am.HistoryRecord: java.lang.String packageName> = null;

        $r0.<com.android.server.am.HistoryRecord: boolean fullscreen> = 1;

        $r0.<com.android.server.am.HistoryRecord: boolean isHomeActivity> = 0;

        return;
    }

    private com.android.server.am.HistoryRecord getWaitingHistoryRecordLocked()
    {
        com.android.server.am.HistoryRecord $r0, $r1;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r2;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        if $z0 == 0 goto label2;

        $r2 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r1 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r1 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

     label1:
        if $r1 != null goto label3;

        return $r0;

     label2:
        return $r0;

     label3:
        return $r1;
    }

    void addNewIntentLocked(android.content.Intent)
    {
        com.android.server.am.HistoryRecord $r0;
        android.content.Intent $r1;
        java.util.ArrayList $r2;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: android.content.Intent;

        $r2 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents> = $r2;

     label1:
        $r2 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    void addResultLocked(com.android.server.am.HistoryRecord, java.lang.String, int, int, android.content.Intent)
    {
        com.android.server.am.HistoryRecord $r0, $r1;
        java.lang.String $r2;
        int $i0, $i1;
        android.content.Intent $r3;
        com.android.server.am.ActivityResult $r4;
        java.util.ArrayList $r5;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: android.content.Intent;

        $r4 = new com.android.server.am.ActivityResult;

        specialinvoke $r4.<com.android.server.am.ActivityResult: void <init>(com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>($r1, $r2, $i0, $i1, $r3);

        $r5 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        if $r5 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results> = $r5;

     label1:
        $r5 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.HistoryRecord $r0, $r10;
        java.io.PrintWriter $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0;
        com.android.server.am.ProcessRecord $r5;
        android.content.Intent $r6;
        boolean $z0;
        com.android.server.am.TaskRecord $r7;
        android.content.ComponentName $r8;
        android.content.res.Configuration $r9;
        java.util.ArrayList $r11;
        java.util.HashSet $r12;
        android.os.Bundle $r13;
        com.android.server.am.ActivityManagerService$ActivityState $r14;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: java.io.PrintWriter;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("packageName=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" processName=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchedFromUid=");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int launchedFromUid>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" app=");

        $r5 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = $r0.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frontOfTask=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean frontOfTask>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" task=");

        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taskAffinity=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("realActivity=");

        $r8 = $r0.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dir=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String baseDir>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" res=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String resDir>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String dataDir>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("labelRes=0x");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int labelRes>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" icon=0x");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int icon>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" theme=0x");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int theme>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stateNotNeeded=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean stateNotNeeded>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" componentSpecified=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean componentSpecified>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isHomeActivity=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean isHomeActivity>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configuration=");

        $r9 = $r0.<com.android.server.am.HistoryRecord: android.content.res.Configuration configuration>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resultTo=");

        $r10 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resultWho=");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resultCode=");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int requestCode>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("results=");

        $r11 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pendingResults=");

        $r12 = $r0.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readUriPermissions=");

        $r12 = $r0.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeUriPermissions=");

        $r12 = $r0.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchFailed=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean launchFailed>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" haveState=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean haveState>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" icicle=");

        $r13 = $r0.<com.android.server.am.HistoryRecord: android.os.Bundle icicle>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state=");

        $r14 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stopped=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean stopped>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" finishing=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean finishing>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keysPaused=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean keysPaused>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inHistory=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean inHistory>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" persistent=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean persistent>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" launchMode=");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int launchMode>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fullscreen=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visible=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean visible>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" frozenBeforeDestroy=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean frozenBeforeDestroy>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" thumbnailNeeded=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean thumbnailNeeded>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" idle=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean idle>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("waitingVisible=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nowVisible=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configDestroy=");

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean configDestroy>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configChangeFlags=");

        $i0 = $r0.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connections=");

        $r12 = $r0.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    public long getKeyDispatchingTimeout()
    {
        com.android.server.am.HistoryRecord $r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.ProcessRecord $r2;
        android.content.ComponentName $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor $r1;

     label1:
        $r0 = specialinvoke $r0.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord getWaitingHistoryRecordLocked()>();

        if $r0 == null goto label2;

        $r2 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r3 = $r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r3 != null goto label4;

     label2:
        exitmonitor $r1;

     label3:
        return 5000L;

     label4:
        exitmonitor $r1;

     label5:
        return 60000L;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isInterestingToUserLocked()
    {
        com.android.server.am.HistoryRecord $r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService$ActivityState $r1, $r2;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r2 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSING>;

        if $r1 == $r2 goto label1;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r2 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean keyDispatchingTimedOut()
    {
        com.android.server.am.HistoryRecord $r0, $r2;
        android.os.Bundle $r1;
        com.android.server.am.ActivityManagerService $r3, $r6;
        com.android.server.am.ProcessRecord $r4;
        boolean $z0;
        android.content.ComponentName $r5;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r3 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor $r3;

     label1:
        $r2 = specialinvoke $r0.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord getWaitingHistoryRecordLocked()>();

        if $r2 == null goto label4;

        $r4 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label4;

        $r4 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean debugging>;

        if $z0 == 0 goto label3;

        exitmonitor $r3;

     label2:
        return 0;

     label3:
        $r4 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r5 != null goto label6;

        $r6 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r4 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void appNotRespondingLocked(com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord,java.lang.String)>($r4, $r2, "keyDispatchingTimedOut");

     label4:
        exitmonitor $r3;

     label5:
        return 1;

     label6:
        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "keyDispatchingTimedOut");

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", "Timed out while dispatching key event");

        $r6 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r4 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>($r4, 0, $r1);

        goto label4;

     label7:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    public boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.HistoryRecord $r0;
        com.android.server.am.ProcessRecord $r1;
        boolean $z0;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        if $r1 == null goto label1;

        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 != 0 goto label2;

        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    void pauseKeyDispatchingLocked()
    {
        com.android.server.am.HistoryRecord $r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.WindowManagerService $r2;
        android.os.IBinder r3;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean keysPaused>;

        if $z0 != 0 goto label1;

        $r0.<com.android.server.am.HistoryRecord: boolean keysPaused> = 1;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r3 = (android.os.IBinder) $r0;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void pauseKeyDispatching(android.os.IBinder)>(r3);

        return;

     label1:
        return;
    }

    void removeResultsLocked(com.android.server.am.HistoryRecord, java.lang.String, int)
    {
        com.android.server.am.HistoryRecord $r0, $r1, $r6;
        java.lang.String $r2, $r7;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityResult $r5;
        boolean $z0;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        if $r3 == null goto label6;

        $r3 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label7;

        $r3 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.ActivityResult) $r4;

        $r6 = $r5.<com.android.server.am.ActivityResult: com.android.server.am.HistoryRecord mFrom>;

        if $r6 == $r1 goto label3;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        $r7 = $r5.<android.app.ResultInfo: java.lang.String mResultWho>;

        if $r7 != null goto label5;

        if $r2 != null goto label2;

     label4:
        $i2 = $r5.<android.app.ResultInfo: int mRequestCode>;

        if $i2 != $i0 goto label2;

        $r3 = $r0.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        goto label2;

     label5:
        $r7 = $r5.<android.app.ResultInfo: java.lang.String mResultWho>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label4;

        goto label2;

     label6:
        return;

     label7:
        return;
    }

    void resumeKeyDispatchingLocked()
    {
        com.android.server.am.HistoryRecord $r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.WindowManagerService $r2;
        android.os.IBinder r3;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean keysPaused>;

        if $z0 == 0 goto label1;

        $r0.<com.android.server.am.HistoryRecord: boolean keysPaused> = 0;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r3 = (android.os.IBinder) $r0;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void resumeKeyDispatching(android.os.IBinder)>(r3);

        return;

     label1:
        return;
    }

    public void startFreezingScreenLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.HistoryRecord $r0;
        com.android.server.am.ProcessRecord $r1;
        int $i0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.WindowManagerService $r3;
        android.os.IBinder r4;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<com.android.server.am.HistoryRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r4 = (android.os.IBinder) $r0;

        virtualinvoke $r3.<com.android.server.WindowManagerService: void startAppFreezingScreen(android.os.IBinder,int)>(r4, $i0);

        return;

     label1:
        return;
    }

    public void stopFreezingScreenLocked(boolean)
    {
        com.android.server.am.HistoryRecord $r0;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.WindowManagerService $r2;
        android.os.IBinder r3;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $z1 = $r0.<com.android.server.am.HistoryRecord: boolean frozenBeforeDestroy>;

        if $z1 == 0 goto label2;

     label1:
        $r0.<com.android.server.am.HistoryRecord: boolean frozenBeforeDestroy> = 0;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r3 = (android.os.IBinder) $r0;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void stopAppFreezingScreen(android.os.IBinder,boolean)>(r3, $z0);

        return;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.am.HistoryRecord $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        android.content.Intent $r3;
        android.content.ComponentName $r4;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HistoryRecord{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = $r0.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r2 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String toShortString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void windowsGone()
    {
        com.android.server.am.HistoryRecord $r0;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r0.<com.android.server.am.HistoryRecord: boolean nowVisible> = 0;

        return;
    }

    public void windowsVisible()
    {
        com.android.server.am.HistoryRecord $r0, $r10;
        long $l0, $l2;
        com.android.server.am.ActivityManagerService $r1, $r7;
        byte $b1;
        java.lang.Object[] $r2;
        int $i3, $i4;
        java.lang.Integer $r3;
        java.lang.String $r4;
        java.lang.Long $r5;
        java.lang.StringBuilder $r6;
        boolean $z0;
        java.util.ArrayList $r8;
        java.lang.Object $r9;
        android.os.Message $r11;
        android.os.Handler $r12;
        java.lang.Throwable $r13;

        $r0 := @this: com.android.server.am.HistoryRecord;

        $r1 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor $r1;

     label01:
        $l0 = $r0.<com.android.server.am.HistoryRecord: long startTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label02;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $r0.<com.android.server.am.HistoryRecord: long startTime>;

        $l0 = $l0 - $l2;

        $r2 = newarray (java.lang.Object)[3];

        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2[0] = $r3;

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[2] = $r5;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30009, $r2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Displayed activity ");

        $r4 = $r0.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r0.<com.android.server.am.HistoryRecord: long startTime> = 0L;

     label02:
        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        if $z0 != 0 goto label04;

        $r0.<com.android.server.am.HistoryRecord: boolean nowVisible> = 1;

        $z0 = $r0.<com.android.server.am.HistoryRecord: boolean idle>;

        if $z0 != 0 goto label06;

        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: java.util.ArrayList processStoppingActivitiesLocked(boolean)>(0);

     label03:
        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label04:
        exitmonitor $r1;

     label05:
        return;

     label06:
        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label03;

        $i4 = 0;

     label07:
        if $i4 >= $i3 goto label08;

        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r10 = (com.android.server.am.HistoryRecord) $r9;

        $r10.<com.android.server.am.HistoryRecord: boolean waitingVisible> = 0;

        $i4 = $i4 + 1;

        goto label07;

     label08:
        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        $r11 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r11.<android.os.Message: int what> = 11;

        $r7 = $r0.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService service>;

        $r12 = $r7.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.os.Handler: boolean sendMessage(android.os.Message)>($r11);

        goto label03;

     label09:
        $r13 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r13;

        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.lang.Throwable from label06 to label10 with label09;
    }
}
