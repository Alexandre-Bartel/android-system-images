final class android.database.sqlite.SQLiteCursor$QueryThread extends java.lang.Object implements java.lang.Runnable
{
    private final int mThreadState;
    final android.database.sqlite.SQLiteCursor this$0;

    void <init>(android.database.sqlite.SQLiteCursor, int)
    {
        android.database.sqlite.SQLiteCursor$QueryThread $r0;
        android.database.sqlite.SQLiteCursor $r1;
        int $i0;

        $r0 := @this: android.database.sqlite.SQLiteCursor$QueryThread;

        $r1 := @parameter0: android.database.sqlite.SQLiteCursor;

        $i0 := @parameter1: int;

        $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.database.sqlite.SQLiteCursor$QueryThread: int mThreadState> = $i0;

        return;
    }

    private void sendMessage()
    {
        android.database.sqlite.SQLiteCursor$QueryThread $r0;
        android.database.sqlite.SQLiteCursor $r1;
        android.database.sqlite.SQLiteCursor$MainThreadNotificationHandler $r2;

        $r0 := @this: android.database.sqlite.SQLiteCursor$QueryThread;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r2 = $r1.<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteCursor$MainThreadNotificationHandler mNotificationHandler>;

        if $r2 == null goto label1;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r2 = $r1.<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteCursor$MainThreadNotificationHandler mNotificationHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        staticinvoke <android.database.sqlite.SQLiteCursor: boolean access$002(android.database.sqlite.SQLiteCursor,boolean)>($r1, 0);

        return;

     label1:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        staticinvoke <android.database.sqlite.SQLiteCursor: boolean access$002(android.database.sqlite.SQLiteCursor,boolean)>($r1, 1);

        return;
    }

    public void run()
    {
        android.database.sqlite.SQLiteCursor$QueryThread $r0;
        android.database.sqlite.SQLiteCursor $r1, $r5;
        android.database.CursorWindow $r2;
        int $i0, $i1;
        java.util.concurrent.locks.ReentrantLock $r3;
        android.database.sqlite.SQLiteQuery $r4;
        java.lang.Exception $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.database.sqlite.SQLiteCursor$QueryThread;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r2 = staticinvoke <android.database.sqlite.SQLiteCursor: android.database.CursorWindow access$100(android.database.sqlite.SQLiteCursor)>($r1);

        $i0 = staticinvoke <android.os.Process: int myTid()>();

        staticinvoke <android.os.Process: void setThreadPriority(int,int)>($i0, 10);

     label01:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $i0 = staticinvoke <android.database.sqlite.SQLiteCursor: int access$300(android.database.sqlite.SQLiteCursor)>($r1);

        $i1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: int mThreadState>;

        if $i0 == $i1 goto label02;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label02:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r4 = staticinvoke <android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteQuery access$600(android.database.sqlite.SQLiteCursor)>($r1);

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $i0 = staticinvoke <android.database.sqlite.SQLiteCursor: int access$400(android.database.sqlite.SQLiteCursor)>($r1);

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $i1 = staticinvoke <android.database.sqlite.SQLiteCursor: int access$500(android.database.sqlite.SQLiteCursor)>($r1);

        $i0 = virtualinvoke $r4.<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int)>($r2, $i0, $i1);

     label03:
        if $i0 == 0 goto label08;

     label04:
        if $i0 != -1 goto label06;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r5 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $i0 = staticinvoke <android.database.sqlite.SQLiteCursor: int access$400(android.database.sqlite.SQLiteCursor)>($r5);

        staticinvoke <android.database.sqlite.SQLiteCursor: int access$512(android.database.sqlite.SQLiteCursor,int)>($r1, $i0);

        specialinvoke $r0.<android.database.sqlite.SQLiteCursor$QueryThread: void sendMessage()>();

     label05:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label01;

     label06:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        staticinvoke <android.database.sqlite.SQLiteCursor: int access$502(android.database.sqlite.SQLiteCursor,int)>($r1, $i0);

        specialinvoke $r0.<android.database.sqlite.SQLiteCursor$QueryThread: void sendMessage()>();

     label07:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label08:
        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label09:
        $r6 := @caughtexception;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label10:
        $r7 := @caughtexception;

        $r1 = $r0.<android.database.sqlite.SQLiteCursor$QueryThread: android.database.sqlite.SQLiteCursor this$0>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(android.database.sqlite.SQLiteCursor)>($r1);

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label10;
    }
}
