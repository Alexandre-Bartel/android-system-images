public abstract class com.google.masf.protocol.SimpleRequest extends com.google.masf.protocol.Request
{
    private byte[] blockHeader;
    private int blockType;
    private java.lang.String serviceUri;
    private int serviceVersion;

    protected void <init>()
    {
        com.google.masf.protocol.SimpleRequest $r0;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        specialinvoke $r0.<com.google.masf.protocol.Request: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, int)
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.masf.protocol.Request: void <init>()>();

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setServiceUri(java.lang.String)>($r1);

        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: void setServiceVersion(int)>($i0);

        return;
    }

    public void dispose()
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.SimpleRequest: byte[] blockHeader> = null;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected byte[] generateBlockHeader() throws java.io.IOException
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.io.ByteArrayOutputStream $r1;
        java.io.DataOutputStream $r2;
        int $i0;
        byte[] $r3;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(7);

        $r2 = new java.io.DataOutputStream;

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

        $i0 = virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: int getBodyStreamLength()>();

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        virtualinvoke $r2.<java.io.DataOutputStream: void writeByte(int)>(0);

        $i0 = $r0.<com.google.masf.protocol.SimpleRequest: int blockType>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>($i0);

        virtualinvoke $r2.<java.io.FilterOutputStream: void close()>();

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

        $r3 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r0.<com.google.masf.protocol.SimpleRequest: byte[] blockHeader> = $r3;

        $r3 = $r0.<com.google.masf.protocol.SimpleRequest: byte[] blockHeader>;

        return $r3;
    }

    protected abstract java.io.InputStream getBodyInputStream() throws java.io.IOException;

    protected abstract int getBodyStreamLength() throws java.io.IOException;

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.io.ByteArrayInputStream $r1;
        java.io.InputStream $r2;
        com.google.common.io.SequenceInputStream $r3;
        byte[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: byte[] generateBlockHeader()>();

        $r3 = new com.google.common.io.SequenceInputStream;

        $r1 = new java.io.ByteArrayInputStream;

        $r4 = $r0.<com.google.masf.protocol.SimpleRequest: byte[] blockHeader>;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r2 = virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: java.io.InputStream getBodyInputStream()>();

        specialinvoke $r3.<com.google.common.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r1, $r2);

     label2:
        exitmonitor $r0;

        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.String getServiceUri()
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.google.masf.protocol.SimpleRequest: java.lang.String serviceUri>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int getServiceVersion()
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        entermonitor $r0;

     label1:
        i0 = $r0.<com.google.masf.protocol.SimpleRequest: int serviceVersion>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getStreamLength() throws java.io.IOException
    {
        com.google.masf.protocol.SimpleRequest $r0;
        int $i0, $i1;
        byte[] $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: byte[] generateBlockHeader()>();

        $r1 = $r0.<com.google.masf.protocol.SimpleRequest: byte[] blockHeader>;

        $i1 = lengthof $r1;

        $i0 = virtualinvoke $r0.<com.google.masf.protocol.SimpleRequest: int getBodyStreamLength()>();

     label2:
        $i0 = $i1 + $i0;

        exitmonitor $r0;

        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void setBlockType(int)
    {
        com.google.masf.protocol.SimpleRequest $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.SimpleRequest: int blockType> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void setServiceUri(java.lang.String)
    {
        com.google.masf.protocol.SimpleRequest $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.SimpleRequest: java.lang.String serviceUri> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void setServiceVersion(int)
    {
        com.google.masf.protocol.SimpleRequest $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.masf.protocol.SimpleRequest;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r0.<com.google.masf.protocol.SimpleRequest: int serviceVersion> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
