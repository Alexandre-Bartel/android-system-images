public class org.bouncycastle.x509.X509V1CertificateGenerator extends java.lang.Object
{
    private org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId;
    private org.bouncycastle.asn1.DERObjectIdentifier sigOID;
    private java.lang.String signatureAlgorithm;
    private org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen;

    public void <init>()
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r1;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.asn1.x509.V1TBSCertificateGenerator;

        specialinvoke $r1.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void <init>()>();

        $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen> = $r1;

        return;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.security.PrivateKey $r1;
        java.security.cert.X509Certificate $r2;
        java.security.NoSuchProviderException $r3;
        java.lang.SecurityException $r4;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.security.PrivateKey;

     label1:
        $r2 = virtualinvoke $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>($r1, "BC", null);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("BC provider not installed!");

        throw $r4;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.security.PrivateKey $r1;
        java.lang.String $r2;
        java.security.cert.X509Certificate $r3;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>($r1, $r2, null);

        return $r3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.security.PrivateKey $r1;
        java.lang.String $r2, $r8;
        java.security.SecureRandom $r3;
        java.io.ByteArrayOutputStream $r4;
        org.bouncycastle.asn1.DEROutputStream $r5;
        org.bouncycastle.asn1.ASN1EncodableVector $r6;
        org.bouncycastle.asn1.DERObjectIdentifier $r7;
        java.security.Signature $r9;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r10;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r11;
        byte[] $r12;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r13;
        org.bouncycastle.asn1.DERBitString $r14;
        org.bouncycastle.jce.provider.X509CertificateObject $r15;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r16;
        org.bouncycastle.asn1.DERSequence $r17;
        java.security.NoSuchAlgorithmException $r18, $r19;
        java.lang.SecurityException $r20;
        java.lang.StringBuilder $r21;
        java.lang.Exception $r22;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.security.SecureRandom;

        $r7 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

     label01:
        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r8, $r2);

     label02:
        if $r3 == null goto label10;

        virtualinvoke $r9.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r1, $r3);

     label03:
        $r10 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r11 = virtualinvoke $r10.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure generateTBSCertificate()>();

        $r4 = new java.io.ByteArrayOutputStream;

     label04:
        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = new org.bouncycastle.asn1.DEROutputStream;

        specialinvoke $r5.<org.bouncycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r4);

        virtualinvoke $r5.<org.bouncycastle.asn1.DEROutputStream: void writeObject(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r9.<java.security.Signature: void update(byte[])>($r12);

     label05:
        $r6 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r6.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke $r6.<org.bouncycastle.asn1.DEREncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r11);

        $r13 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId>;

        virtualinvoke $r6.<org.bouncycastle.asn1.DEREncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r13);

        $r14 = new org.bouncycastle.asn1.DERBitString;

        $r12 = virtualinvoke $r9.<java.security.Signature: byte[] sign()>();

        specialinvoke $r14.<org.bouncycastle.asn1.DERBitString: void <init>(byte[])>($r12);

        virtualinvoke $r6.<org.bouncycastle.asn1.DEREncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r14);

        $r15 = new org.bouncycastle.jce.provider.X509CertificateObject;

        $r16 = new org.bouncycastle.asn1.x509.X509CertificateStructure;

        $r17 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r17.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r6);

        specialinvoke $r16.<org.bouncycastle.asn1.x509.X509CertificateStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r17);

        specialinvoke $r15.<org.bouncycastle.jce.provider.X509CertificateObject: void <init>(org.bouncycastle.asn1.x509.X509CertificateStructure)>($r16);

        return $r15;

     label06:
        $r18 := @caughtexception;

        $r8 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: java.lang.String signatureAlgorithm>;

     label07:
        $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r8, $r2);

     label08:
        goto label02;

     label09:
        $r19 := @caughtexception;

        $r20 = new java.lang.SecurityException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception creating signature: ");

        $r2 = virtualinvoke $r19.<java.lang.Throwable: java.lang.String toString()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r20;

     label10:
        virtualinvoke $r9.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1);

        goto label03;

     label11:
        $r22 := @caughtexception;

        $r20 = new java.lang.SecurityException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception encoding TBS cert - ");

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r20;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.security.PrivateKey $r1;
        java.security.SecureRandom $r2;
        java.security.cert.X509Certificate $r3;
        java.security.NoSuchProviderException $r4;
        java.lang.SecurityException $r5;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: java.security.SecureRandom;

     label1:
        $r3 = virtualinvoke $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>($r1, "BC", $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("BC provider not installed!");

        throw $r5;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public java.util.Iterator getSignatureAlgNames()
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.util.Iterator $r1;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 = staticinvoke <org.bouncycastle.x509.X509Util: java.util.Iterator getAlgNames()>();

        return $r1;
    }

    public void reset()
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r1;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 = new org.bouncycastle.asn1.x509.V1TBSCertificateGenerator;

        specialinvoke $r1.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void <init>()>();

        $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen> = $r1;

        return;
    }

    public void setIssuerDN(javax.security.auth.x500.X500Principal)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        javax.security.auth.x500.X500Principal $r1;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;
        org.bouncycastle.jce.X509Principal $r3;
        byte[] $r4;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: javax.security.auth.x500.X500Principal;

        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new org.bouncycastle.jce.X509Principal;

     label1:
        $r4 = virtualinvoke $r1.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r3.<org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r4);

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setIssuer(org.bouncycastle.asn1.x509.X509Name)>($r3);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process principal: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        org.bouncycastle.asn1.x509.X509Name $r1;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: org.bouncycastle.asn1.x509.X509Name;

        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setIssuer(org.bouncycastle.asn1.x509.X509Name)>($r1);

        return;
    }

    public void setNotAfter(java.util.Date)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.util.Date $r1;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;
        org.bouncycastle.asn1.x509.Time $r3;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.util.Date;

        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new org.bouncycastle.asn1.x509.Time;

        specialinvoke $r3.<org.bouncycastle.asn1.x509.Time: void <init>(java.util.Date)>($r1);

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setEndDate(org.bouncycastle.asn1.x509.Time)>($r3);

        return;
    }

    public void setNotBefore(java.util.Date)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.util.Date $r1;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;
        org.bouncycastle.asn1.x509.Time $r3;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.util.Date;

        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new org.bouncycastle.asn1.x509.Time;

        specialinvoke $r3.<org.bouncycastle.asn1.x509.Time: void <init>(java.util.Date)>($r1);

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setStartDate(org.bouncycastle.asn1.x509.Time)>($r3);

        return;
    }

    public void setPublicKey(java.security.PublicKey)
    {
        java.security.PublicKey $r0;
        java.io.ByteArrayInputStream $r1;
        org.bouncycastle.x509.X509V1CertificateGenerator $r2;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r3;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r4;
        org.bouncycastle.asn1.ASN1InputStream $r5;
        byte[] $r6;
        org.bouncycastle.asn1.DERObject $r7;
        org.bouncycastle.asn1.ASN1Sequence $r8;
        java.lang.Exception $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        $r2 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r0 := @parameter0: java.security.PublicKey;

     label1:
        $r3 = $r2.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

     label2:
        $r4 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r5 = new org.bouncycastle.asn1.ASN1InputStream;

     label3:
        $r1 = new java.io.ByteArrayInputStream;

        $r6 = interfaceinvoke $r0.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        specialinvoke $r5.<org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r1);

        $r7 = virtualinvoke $r5.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

        specialinvoke $r4.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r8);

        virtualinvoke $r3.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r4);

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process key - ");

        $r12 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void setSerialNumber(java.math.BigInteger)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.math.BigInteger $r1, $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r4;
        org.bouncycastle.asn1.DERInteger $r5;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("serial number must be a positive integer");

        throw $r3;

     label1:
        $r4 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r5 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r5.<org.bouncycastle.asn1.DERInteger: void <init>(java.math.BigInteger)>($r1);

        virtualinvoke $r4.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSerialNumber(org.bouncycastle.asn1.DERInteger)>($r5);

        return;
    }

    public void setSignatureAlgorithm(java.lang.String)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        java.lang.String $r1;
        org.bouncycastle.asn1.DERObjectIdentifier $r2;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r4;
        java.lang.Exception $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: java.lang.String;

        $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: java.lang.String signatureAlgorithm> = $r1;

     label1:
        $r2 = staticinvoke <org.bouncycastle.x509.X509Util: org.bouncycastle.asn1.DERObjectIdentifier getAlgorithmOID(java.lang.String)>($r1);

        $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID> = $r2;

     label2:
        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r3 = staticinvoke <org.bouncycastle.x509.X509Util: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigAlgID(org.bouncycastle.asn1.DERObjectIdentifier)>($r2);

        $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId> = $r3;

        $r4 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId>;

        virtualinvoke $r4.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>($r3);

        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown signature type requested");

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setSubjectDN(javax.security.auth.x500.X500Principal)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        javax.security.auth.x500.X500Principal $r1;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;
        org.bouncycastle.jce.X509Principal $r3;
        byte[] $r4;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: javax.security.auth.x500.X500Principal;

        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new org.bouncycastle.jce.X509Principal;

     label1:
        $r4 = virtualinvoke $r1.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r3.<org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r4);

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSubject(org.bouncycastle.asn1.x509.X509Name)>($r3);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process principal: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)
    {
        org.bouncycastle.x509.X509V1CertificateGenerator $r0;
        org.bouncycastle.asn1.x509.X509Name $r1;
        org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;

        $r0 := @this: org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 := @parameter0: org.bouncycastle.asn1.x509.X509Name;

        $r2 = $r0.<org.bouncycastle.x509.X509V1CertificateGenerator: org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        virtualinvoke $r2.<org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSubject(org.bouncycastle.asn1.x509.X509Name)>($r1);

        return;
    }
}
