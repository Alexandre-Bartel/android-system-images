class org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1 $r0;

        $r0 := @this: org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1 $r0;
        java.io.File $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        java.io.FileInputStream $r4;
        java.io.FileNotFoundException $r5;

        $r0 := @this: org.apache.harmony.security.provider.crypto.RandomBitsSupplier$1;

        $i0 = 0;

     label1:
        $r2 = <org.apache.harmony.security.provider.crypto.SHA1_Data: java.lang.String[] DEVICE_NAMES>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label8;

        $r1 = new java.io.File;

        $r2 = <org.apache.harmony.security.provider.crypto.SHA1_Data: java.lang.String[] DEVICE_NAMES>;

        $r3 = $r2[$i0];

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

     label2:
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        staticinvoke <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.FileInputStream access$002(java.io.FileInputStream)>($r4);

        staticinvoke <org.apache.harmony.security.provider.crypto.RandomBitsSupplier: java.io.File access$102(java.io.File)>($r1);

     label5:
        return null;

     label6:
        $r5 := @caughtexception;

     label7:
        $i0 = $i0 + 1;

        goto label1;

     label8:
        return null;

        catch java.io.FileNotFoundException from label2 to label3 with label6;
        catch java.io.FileNotFoundException from label4 to label5 with label6;
    }
}
