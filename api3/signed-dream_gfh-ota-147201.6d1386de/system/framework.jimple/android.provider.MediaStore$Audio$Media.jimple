public final class android.provider.MediaStore$Audio$Media extends java.lang.Object implements android.provider.MediaStore$Audio$AudioColumns
{
    public static final java.lang.String CONTENT_TYPE;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final android.net.Uri EXTERNAL_CONTENT_URI;
    public static final java.lang.String EXTRA_MAX_BYTES;
    public static final android.net.Uri INTERNAL_CONTENT_URI;
    public static final java.lang.String RECORD_SOUND_ACTION;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <android.provider.MediaStore$Audio$Media: java.lang.String RECORD_SOUND_ACTION> = "android.provider.MediaStore.RECORD_SOUND";

        <android.provider.MediaStore$Audio$Media: java.lang.String EXTRA_MAX_BYTES> = "android.provider.MediaStore.extra.MAX_BYTES";

        <android.provider.MediaStore$Audio$Media: java.lang.String DEFAULT_SORT_ORDER> = "title";

        <android.provider.MediaStore$Audio$Media: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/audio";

        $r0 = staticinvoke <android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>("internal");

        <android.provider.MediaStore$Audio$Media: android.net.Uri INTERNAL_CONTENT_URI> = $r0;

        $r0 = staticinvoke <android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>("external");

        <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI> = $r0;

        return;
    }

    public void <init>()
    {
        android.provider.MediaStore$Audio$Media $r0;

        $r0 := @this: android.provider.MediaStore$Audio$Media;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri getContentUri(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        android.net.Uri $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://media/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/audio/media");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r0);

        return $r2;
    }

    public static android.net.Uri getContentUriForPath(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.io.File $r1;
        boolean $z0;
        android.net.Uri r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        r3 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        return r3;

     label1:
        r3 = <android.provider.MediaStore$Audio$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        return r3;
    }
}
