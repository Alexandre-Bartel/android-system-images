public final class org.apache.harmony.lang.annotation.AnnotationFactory extends java.lang.Object implements java.io.Serializable, java.lang.reflect.InvocationHandler
{
    private static final transient java.util.Map cache;
    private org.apache.harmony.lang.annotation.AnnotationMember[] elements;
    private final java.lang.Class klazz;

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <org.apache.harmony.lang.annotation.AnnotationFactory: java.util.Map cache> = $r0;

        return;
    }

    private void <init>(java.lang.Class, org.apache.harmony.lang.annotation.AnnotationMember[])
    {
        org.apache.harmony.lang.annotation.AnnotationFactory $r0;
        java.lang.Class $r1;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r2, $r4, $r5;
        int $i0, $i1, $i2;
        org.apache.harmony.lang.annotation.AnnotationMember $r3, $r7;
        java.lang.String $r6, $r8;
        boolean $z0;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationFactory;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.apache.harmony.lang.annotation.AnnotationMember[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz> = $r1;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz>;

        $r4 = staticinvoke <org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] getElementsDescription(java.lang.Class)>($r1);

        if $r2 != null goto label1;

        $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements> = $r4;

        return;

     label1:
        $i0 = lengthof $r4;

        $r5 = newarray (org.apache.harmony.lang.annotation.AnnotationMember)[$i0];

        $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements> = $r5;

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i0 = lengthof $r5;

        $i1 = $i0 - 1;

     label2:
        if $i1 < 0 goto label7;

        $i0 = lengthof $r2;

        $i2 = 0;

     label3:
        if $i2 >= $i0 goto label6;

        $r3 = $r2[$i2];

        $r6 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $r7 = $r4[$i1];

        $r8 = $r7.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label5;

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $r7 = $r4[$i1];

        $r3 = virtualinvoke $r3.<org.apache.harmony.lang.annotation.AnnotationMember: org.apache.harmony.lang.annotation.AnnotationMember setDefinition(org.apache.harmony.lang.annotation.AnnotationMember)>($r7);

        $r5[$i1] = $r3;

     label4:
        $i1 = $i1 + -1;

        goto label2;

     label5:
        $i2 = $i2 + 1;

        goto label3;

     label6:
        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $r3 = $r4[$i1];

        $r5[$i1] = $r3;

        goto label4;

     label7:
        return;
    }

    public static java.lang.annotation.Annotation createAnnotation(java.lang.Class, org.apache.harmony.lang.annotation.AnnotationMember[])
    {
        org.apache.harmony.lang.annotation.AnnotationMember[] $r0;
        org.apache.harmony.lang.annotation.AnnotationFactory $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        java.lang.Class[] $r4;
        java.lang.Object $r5;
        java.lang.annotation.Annotation $r6;

        $r2 := @parameter0: java.lang.Class;

        $r0 := @parameter1: org.apache.harmony.lang.annotation.AnnotationMember[];

        $r1 = new org.apache.harmony.lang.annotation.AnnotationFactory;

        specialinvoke $r1.<org.apache.harmony.lang.annotation.AnnotationFactory: void <init>(java.lang.Class,org.apache.harmony.lang.annotation.AnnotationMember[])>($r2, $r0);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = $r2;

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r3, $r4, $r1);

        $r6 = (java.lang.annotation.Annotation) $r5;

        return $r6;
    }

    public static org.apache.harmony.lang.annotation.AnnotationMember[] getElementsDescription(java.lang.Class)
    {
        java.lang.Class $r0, $r9;
        java.lang.reflect.Method $r1;
        int $i0, $i1, $i2;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.reflect.Method[] $r8;
        org.apache.harmony.lang.annotation.AnnotationMember $r10;
        java.lang.Throwable $r11;

        $r0 := @parameter0: java.lang.Class;

        $r2 = <org.apache.harmony.lang.annotation.AnnotationFactory: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (org.apache.harmony.lang.annotation.AnnotationMember[]) $r3;

        if $r4 != null goto label7;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAnnotation()>();

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is not annotation: ");

        $r7 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r8 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i0 = lengthof $r8;

        $r4 = newarray (org.apache.harmony.lang.annotation.AnnotationMember)[$i0];

        $i1 = 0;

        $i0 = lengthof $r8;

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label6;

        $r1 = $r8[$i2];

        $r7 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r9 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

     label3:
        $r10 = new org.apache.harmony.lang.annotation.AnnotationMember;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object getDefaultValue()>();

        specialinvoke $r10.<org.apache.harmony.lang.annotation.AnnotationMember: void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>($r7, $r3, $r9, $r1);

        $r4[$i1] = $r10;

     label4:
        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label2;

     label5:
        $r11 := @caughtexception;

        $r10 = new org.apache.harmony.lang.annotation.AnnotationMember;

        specialinvoke $r10.<org.apache.harmony.lang.annotation.AnnotationMember: void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>($r7, $r11, $r9, $r1);

        $r4[$i1] = $r10;

        goto label4;

     label6:
        $r2 = <org.apache.harmony.lang.annotation.AnnotationFactory: java.util.Map cache>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4);

        return $r4;

     label7:
        return $r4;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.harmony.lang.annotation.AnnotationFactory $r0;
        org.apache.harmony.lang.annotation.AnnotationMember $r1, $r2;
        java.util.ArrayList $r3;
        java.io.ObjectInputStream $r4;
        java.lang.Class $r5;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r6, $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r8, $r9;
        boolean $z0;
        java.lang.Object[] $r10;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationFactory;

        $r4 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r4.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz>;

        $r6 = staticinvoke <org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] getElementsDescription(java.lang.Class)>($r5);

        $r7 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $r3 = new java.util.ArrayList;

        $i0 = lengthof $r6;

        $i1 = lengthof $r7;

        $i0 = $i0 + $i1;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r7;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label06;

        $r1 = $r7[$i1];

        $i2 = lengthof $r6;

        $i3 = 0;

     label02:
        if $i3 >= $i2 goto label05;

        $r2 = $r6[$i3];

        $r8 = $r2.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $r9 = $r1.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label04;

     label03:
        $i1 = $i1 + 1;

        goto label01;

     label04:
        $i3 = $i3 + 1;

        goto label02;

     label05:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label03;

     label06:
        $i0 = lengthof $r6;

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label12;

        $r1 = $r6[$i1];

        $i2 = lengthof $r7;

        $i3 = 0;

     label08:
        if $i3 >= $i2 goto label11;

        $r2 = $r7[$i3];

        $r8 = $r2.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $r9 = $r1.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label10;

        $r1 = virtualinvoke $r2.<org.apache.harmony.lang.annotation.AnnotationMember: org.apache.harmony.lang.annotation.AnnotationMember setDefinition(org.apache.harmony.lang.annotation.AnnotationMember)>($r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label09:
        $i1 = $i1 + 1;

        goto label07;

     label10:
        $i3 = $i3 + 1;

        goto label08;

     label11:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label09;

     label12:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r6 = newarray (org.apache.harmony.lang.annotation.AnnotationMember)[$i0];

        $r10 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (org.apache.harmony.lang.annotation.AnnotationMember[]) $r10;

        $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements> = $r6;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.lang.annotation.AnnotationFactory $r0, $r7;
        java.lang.Object $r1, $r12, $r13;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r2, $r8;
        org.apache.harmony.lang.annotation.AnnotationMember $r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r5;
        boolean $z0;
        java.lang.reflect.InvocationHandler $r6;
        char $c4;
        java.lang.reflect.Method $r9;
        org.apache.harmony.lang.annotation.AnnotationFactory$1 $r10;
        java.lang.Object[] $r11;
        java.lang.Throwable $r14;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationFactory;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label01;

        return 1;

     label01:
        $r5 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz>;

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r5);

        if $z0 == 0 goto label09;

        $r6 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>($r1);

        $z0 = $r6 instanceof org.apache.harmony.lang.annotation.AnnotationFactory;

        if $z0 == 0 goto label09;

        $r7 = (org.apache.harmony.lang.annotation.AnnotationFactory) $r6;

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i1 = lengthof $r2;

        $r2 = $r7.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i0 = lengthof $r2;

        if $i1 == $i0 goto label03;

        return 0;

     label03:
        $r8 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i1 = lengthof $r8;

        $i2 = 0;

     label04:
        if $i2 >= $i1 goto label08;

        $r3 = $r8[$i2];

        $r2 = $r7.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i0 = lengthof $r2;

        $i3 = 0;

     label05:
        if $i3 >= $i0 goto label07;

        $r4 = $r2[$i3];

        $z0 = virtualinvoke $r3.<org.apache.harmony.lang.annotation.AnnotationMember: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label06;

        $i2 = $i2 + 1;

        goto label04;

     label06:
        $i3 = $i3 + 1;

        goto label05;

     label07:
        return 0;

     label08:
        return 1;

     label09:
        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i1 = lengthof $r2;

        $i0 = 0;

     label10:
        if $i0 >= $i1 goto label20;

        $r3 = $r2[$i0];

        $c4 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c4 != 33 goto label11;

        return 0;

     label11:
        $r9 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $z0 = virtualinvoke $r9.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();

        if $z0 != 0 goto label12;

        $r10 = new org.apache.harmony.lang.annotation.AnnotationFactory$1;

        specialinvoke $r10.<org.apache.harmony.lang.annotation.AnnotationFactory$1: void <init>(org.apache.harmony.lang.annotation.AnnotationFactory,org.apache.harmony.lang.annotation.AnnotationMember)>($r0, $r3);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r10);

     label12:
        $r9 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $r11 = newarray (java.lang.Object)[0];

        $r12 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r11);

        if $r12 == null goto label16;

        $c4 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: char tag>;

        if $c4 != 91 goto label14;

        $z0 = virtualinvoke $r3.<org.apache.harmony.lang.annotation.AnnotationMember: boolean equalArrayValue(java.lang.Object)>($r12);

     label13:
        if $z0 != 0 goto label19;

        return 0;

     label14:
        $r13 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $z0 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

     label15:
        if $z0 != 0 goto label19;

        return 0;

     label16:
        $r12 = $r3.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object value>;

        $r13 = <org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object NO_VALUE>;

     label17:
        if $r12 == $r13 goto label19;

        return 0;

     label18:
        $r14 := @caughtexception;

        return 0;

     label19:
        $i0 = $i0 + 1;

        goto label10;

     label20:
        return 1;

        catch java.lang.Throwable from label11 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public int hashCode()
    {
        org.apache.harmony.lang.annotation.AnnotationFactory $r0;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r1;
        org.apache.harmony.lang.annotation.AnnotationMember $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationFactory;

        $i2 = 0;

        $r1 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i0 = lengthof $r1;

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label2;

        $r2 = $r1[$i3];

        $i1 = virtualinvoke $r2.<org.apache.harmony.lang.annotation.AnnotationMember: int hashCode()>();

        $i2 = $i2 + $i1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.apache.harmony.lang.annotation.AnnotationFactory $r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2, $r11;
        java.lang.Object[] $r3;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r4;
        org.apache.harmony.lang.annotation.AnnotationMember $r5, $r10;
        int $i0, $i1;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r7;
        boolean $z0;
        java.lang.Integer $r9;
        java.lang.IllegalArgumentException $r12;
        java.lang.annotation.IncompleteAnnotationException $r13;
        java.lang.Class $r14;
        java.lang.Boolean $r15;
        java.lang.StringBuilder $r16;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationFactory;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Method;

        $r3 := @parameter2: java.lang.Object[];

        $r6 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r7;

        if $i0 != 0 goto label10;

        $r8 = "annotationType";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label01;

        $r14 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz>;

        return $r14;

     label01:
        $r8 = "toString";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label02;

        $r6 = virtualinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.String toString()>();

        return $r6;

     label02:
        $r8 = "hashCode";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label03;

        $i0 = virtualinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: int hashCode()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r9;

     label03:
        $r10 = null;

        $r4 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label05;

        $r5 = $r4[$i1];

        $r8 = $r5.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String name>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label07;

        $r10 = $r5;

     label05:
        if $r10 == null goto label06;

        $r11 = $r10.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $z0 = virtualinvoke $r2.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label08;

     label06:
        $r12 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r12;

     label07:
        $i1 = $i1 + 1;

        goto label04;

     label08:
        $r1 = virtualinvoke $r10.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.Object validateValue()>();

        if $r1 != null goto label09;

        $r13 = new java.lang.annotation.IncompleteAnnotationException;

        $r14 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz>;

        specialinvoke $r13.<java.lang.annotation.IncompleteAnnotationException: void <init>(java.lang.Class,java.lang.String)>($r14, $r6);

        throw $r13;

     label09:
        return $r1;

     label10:
        $i0 = lengthof $r7;

        if $i0 != 1 goto label11;

        $r14 = $r7[0];

        if $r14 != class "java/lang/Object" goto label11;

        $r8 = "equals";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label11;

        $r1 = $r3[0];

        $z0 = virtualinvoke $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: boolean equals(java.lang.Object)>($r1);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r15;

     label11:
        $r12 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid method for annotation type: ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r12;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.lang.annotation.AnnotationFactory $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        int $i0, $i1;
        org.apache.harmony.lang.annotation.AnnotationMember[] $r4;
        org.apache.harmony.lang.annotation.AnnotationMember $r5;

        $r0 := @this: org.apache.harmony.lang.annotation.AnnotationFactory;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r2 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: java.lang.Class klazz>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = 0;

     label1:
        $r4 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

        if $i0 == 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = $r0.<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] elements>;

        $r5 = $r4[$i0];

        $r3 = virtualinvoke $r5.<org.apache.harmony.lang.annotation.AnnotationMember: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
