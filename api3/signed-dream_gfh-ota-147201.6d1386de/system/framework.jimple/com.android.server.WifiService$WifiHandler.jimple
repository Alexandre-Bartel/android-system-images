class com.android.server.WifiService$WifiHandler extends android.os.Handler
{
    final com.android.server.WifiService this$0;

    public void <init>(com.android.server.WifiService, android.os.Looper)
    {
        com.android.server.WifiService$WifiHandler $r0;
        com.android.server.WifiService $r1;
        android.os.Looper $r2;

        $r0 := @this: com.android.server.WifiService$WifiHandler;

        $r1 := @parameter0: com.android.server.WifiService;

        $r2 := @parameter1: android.os.Looper;

        $r0.<com.android.server.WifiService$WifiHandler: com.android.server.WifiService this$0> = $r1;

        specialinvoke $r0.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.WifiService$WifiHandler $r0;
        android.os.Message $r1;
        int $i0;
        com.android.server.WifiService $r2;
        boolean $z0;
        android.os.PowerManager$WakeLock $r3, $r5;
        android.net.wifi.WifiStateTracker $r4;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.WifiService$WifiHandler;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label08;
            case 2: goto label11;
            case 3: goto label05;
            case 4: goto label12;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r2 = $r0.<com.android.server.WifiService$WifiHandler: com.android.server.WifiService this$0>;

        $i0 = $r1.<android.os.Message: int arg1>;

        if $i0 != 1 goto label04;

        $z0 = 1;

     label03:
        $i0 = $r1.<android.os.Message: int arg2>;

        staticinvoke <com.android.server.WifiService: boolean access$1300(com.android.server.WifiService,boolean,boolean,int)>($r2, 1, $z0, $i0);

        $r3 = staticinvoke <com.android.server.WifiService: android.os.PowerManager$WakeLock access$1400()>();

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $r2 = $r0.<com.android.server.WifiService$WifiHandler: com.android.server.WifiService this$0>;

        $r4 = staticinvoke <com.android.server.WifiService: android.net.wifi.WifiStateTracker access$1000(com.android.server.WifiService)>($r2);

        $i0 = $r1.<android.os.Message: int arg1>;

        if $i0 == 0 goto label07;

        $z0 = 1;

     label06:
        virtualinvoke $r4.<android.net.wifi.WifiStateTracker: void setScanOnlyMode(boolean)>($z0);

        $r2 = $r0.<com.android.server.WifiService$WifiHandler: com.android.server.WifiService this$0>;

        $r4 = staticinvoke <com.android.server.WifiService: android.net.wifi.WifiStateTracker access$1000(com.android.server.WifiService)>($r2);

        virtualinvoke $r4.<android.net.wifi.WifiStateTracker: boolean restart()>();

        $r3 = staticinvoke <com.android.server.WifiService: android.os.PowerManager$WakeLock access$1400()>();

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label07:
        $z0 = 0;

        goto label06;

     label08:
        $r2 = $r0.<com.android.server.WifiService$WifiHandler: com.android.server.WifiService this$0>;

        $i0 = $r1.<android.os.Message: int arg1>;

        if $i0 != 1 goto label10;

        $z0 = 1;

     label09:
        $i0 = $r1.<android.os.Message: int arg2>;

        staticinvoke <com.android.server.WifiService: boolean access$1300(com.android.server.WifiService,boolean,boolean,int)>($r2, 0, $z0, $i0);

        $r3 = staticinvoke <com.android.server.WifiService: android.os.PowerManager$WakeLock access$1400()>();

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label10:
        $z0 = 0;

        goto label09;

     label11:
        $r2 = $r0.<com.android.server.WifiService$WifiHandler: com.android.server.WifiService this$0>;

        $r4 = staticinvoke <com.android.server.WifiService: android.net.wifi.WifiStateTracker access$1000(com.android.server.WifiService)>($r2);

        virtualinvoke $r4.<android.net.wifi.WifiStateTracker: boolean disconnectAndStop()>();

        return;

     label12:
        $r3 = staticinvoke <com.android.server.WifiService: android.os.PowerManager$WakeLock access$200()>();

        entermonitor $r3;

     label13:
        $r5 = staticinvoke <com.android.server.WifiService: android.os.PowerManager$WakeLock access$200()>();

        $z0 = virtualinvoke $r5.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label14;

        $r5 = staticinvoke <com.android.server.WifiService: android.os.PowerManager$WakeLock access$200()>();

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();

     label14:
        exitmonitor $r3;

     label15:
        return;

     label16:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label17:
        throw $r6;

        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }
}
