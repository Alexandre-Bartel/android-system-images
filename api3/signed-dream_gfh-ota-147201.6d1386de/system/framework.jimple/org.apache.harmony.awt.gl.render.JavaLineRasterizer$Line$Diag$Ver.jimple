class org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver extends org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag
{

    void <init>(int, int, int, int, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: void <init>(int,int,int,int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $i2, $i3, $r1);

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ady>;

        $i0 = $i0 - $i1;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eBase> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ady>;

        $i0 = $i0 - $i1;

        $i0 = $i0 * 2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ePos> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eNeg> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ady>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int xcount> = $i0;

        return;
    }

    void rasterize()
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eBase>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int xcount>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver: void rasterize(int)>($i0);

        return;
    }

    void rasterize(int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver $r0;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver;

        $i0 := @parameter0: int;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i2 = $i0;

     label1:
        $i0 = $i2 - 1;

        if $i2 <= 0 goto label3;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e>;

        if $i2 < 0 goto label2;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: org.apache.harmony.awt.gl.MultiRectArea dst>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x>;

        $i4 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i2, $i1, $i3, $i4);

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int sx>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x> = $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int sy>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ePos>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i2 = $i0;

        goto label1;

     label2:
        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int sy>;

        $i2 = $i2 + $i3;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i2;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eNeg>;

        $i2 = $i2 + $i3;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i2;

        $i2 = $i0;

        goto label1;

     label3:
        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: org.apache.harmony.awt.gl.MultiRectArea dst>;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x>;

        $i3 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    void rasterizeClipped(int, int, int, int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eBase>;

        $i4 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i5 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $i5 = $i1 - $i5;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $i4 = $i4 * $i5;

        $i5 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ady>;

        $i6 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i6 = $i0 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 * $i6;

        $i4 = $i4 - $i5;

        $i4 = $i4 * 2;

        $i2 = $i2 + $i4;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x> = $i0;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i1;

        $i0 = $i3 - $i1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver: void rasterize(int)>($i0);

        return;
    }

    void skip(int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver $r0;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver;

        $i0 := @parameter0: int;

        $i1 = $i0;

     label1:
        $i0 = $i1 - 1;

        if $i1 <= 0 goto label3;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int sy>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e>;

        if $i1 < 0 goto label2;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int sx>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x> = $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ePos>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i1;

        $i1 = $i0;

        goto label1;

     label2:
        $i1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eNeg>;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i1;

        $i1 = $i0;

        goto label1;

     label3:
        return;
    }
}
