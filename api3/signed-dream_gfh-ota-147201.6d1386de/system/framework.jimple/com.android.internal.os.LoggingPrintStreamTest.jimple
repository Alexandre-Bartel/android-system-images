public class com.android.internal.os.LoggingPrintStreamTest extends junit.framework.TestCase
{
    com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out;

    public void <init>()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r1;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        specialinvoke $r0.<junit.framework.TestCase: void <init>()>();

        $r1 = new com.android.internal.os.LoggingPrintStreamTest$TestPrintStream;

        specialinvoke $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: void <init>()>();

        $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out> = $r1;

        return;
    }

    public void testAppend()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r1;
        java.io.PrintStream $r2;
        java.lang.String[] $r3;
        java.util.List $r4, $r5;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r2 = virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(java.lang.CharSequence)>("Foo\n");

        $r2 = virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream append(char)>(52);

        $r2 = virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream append(char)>(10);

        $r2 = virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence,int,int)>("Bar", 1, 2);

        virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream append(char)>(10);

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "Foo";

        $r3[1] = "4";

        $r3[2] = "a";

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r5 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);

        return;
    }

    public void testPrintCharArray()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r1;
        java.lang.String $r2;
        char[] $r3;
        java.lang.String[] $r4;
        java.util.List $r5, $r6;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r2 = "Foo\nBar\nTee";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void print(char[])>($r3);

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "Foo";

        $r4[1] = "Bar";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r6 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void flush()>();

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "Foo";

        $r4[1] = "Bar";

        $r4[2] = "Tee";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r6 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public void testPrintException()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.io.StringWriter $r1, r10;
        java.lang.Throwable $r2, r9;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r4;
        java.lang.String $r5;
        java.lang.String[] $r6;
        java.util.List $r7, $r8;
        java.io.PrintWriter r11;
        java.io.PrintStream r12;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        r9 = new java.lang.Throwable;

        $r2 = r9;

        specialinvoke r9.<java.lang.Throwable: void <init>(java.lang.String)>("Ignore me.");

        r10 = new java.io.StringWriter;

        $r1 = r10;

        specialinvoke r10.<java.io.StringWriter: void <init>()>();

        r11 = new java.io.PrintWriter;

        specialinvoke r11.<java.io.PrintWriter: void <init>(java.io.Writer)>($r1);

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r11);

        $r4 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        r12 = (java.io.PrintStream) $r4;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r12);

        $r5 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\n");

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        $r4 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r8 = $r4.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        return;
    }

    public void testPrintInt()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r1;
        java.util.List $r2, $r3;
        boolean $z0;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void print(int)>(4);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void print(int)>(2);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r2 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertTrue(boolean)>($z0);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void flush()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("42");

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r3 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }

    public void testPrintObject()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.lang.Object $r1;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r2;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.util.List $r6, $r7;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void print(int)>(4);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void print(java.lang.Object)>($r1);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void print(int)>(2);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void flush()>();

        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r7 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        return;
    }

    public void testPrintString()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r1;
        java.lang.String[] $r2;
        java.util.List $r3, $r4;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void print(java.lang.String)>("Foo\nBar\nTee");

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "Foo";

        $r2[1] = "Bar";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r4 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void flush()>();

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "Foo";

        $r2[1] = "Bar";

        $r2[2] = "Tee";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r4 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        return;
    }

    public void testPrintf()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.lang.Object[] $r1;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r2;
        java.lang.String[] $r3;
        java.util.List $r4, $r5;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "Bob";

        $r1[1] = "Google";

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Name: %s\nEmployer: %s", $r1);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "Name: Bob";

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r5 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void flush()>();

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "Name: Bob";

        $r3[1] = "Employer: Google";

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r5 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);

        return;
    }

    public void testPrintlnCharArray()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r1;
        java.lang.String $r2;
        char[] $r3;
        java.lang.String[] $r4;
        java.util.List $r5, $r6;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r2 = "Foo\nBar\nTee";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r1.<com.android.internal.os.LoggingPrintStream: void println(char[])>($r3);

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "Foo";

        $r4[1] = "Bar";

        $r4[2] = "Tee";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r1 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r6 = $r1.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public void testPrintlnInt()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.util.List $r1, $r4;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void println(int)>(4);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void println(int)>(2);

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "4";

        $r3[1] = "2";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r4 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r4);

        return;
    }

    public void testPrintlnObject()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.lang.Object $r1;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r2;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.util.List $r6, $r7;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void print(int)>(4);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void println(java.lang.Object)>($r1);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void print(int)>(2);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void flush()>();

        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r5;

        $r3[1] = "2";

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r7 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        return;
    }

    public void testPrintlnString()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.util.List $r1, $r4;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void println(java.lang.String)>("Foo\nBar\nTee");

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "Foo";

        $r3[1] = "Bar";

        $r3[2] = "Tee";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r4 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r4);

        return;
    }

    public void testPrintlnStringWithBufferedData()
    {
        com.android.internal.os.LoggingPrintStreamTest $r0;
        java.util.List $r1, $r4;
        com.android.internal.os.LoggingPrintStreamTest$TestPrintStream $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.android.internal.os.LoggingPrintStreamTest;

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void print(int)>(5);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        virtualinvoke $r2.<com.android.internal.os.LoggingPrintStream: void println(java.lang.String)>("Foo\nBar\nTee");

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "5Foo";

        $r3[1] = "Bar";

        $r3[2] = "Tee";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r2 = $r0.<com.android.internal.os.LoggingPrintStreamTest: com.android.internal.os.LoggingPrintStreamTest$TestPrintStream out>;

        $r4 = $r2.<com.android.internal.os.LoggingPrintStreamTest$TestPrintStream: java.util.List lines>;

        staticinvoke <com.android.internal.os.LoggingPrintStreamTest: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r4);

        return;
    }
}
