public abstract class android.view.LayoutInflater extends java.lang.Object
{
    private static final java.lang.String TAG_INCLUDE;
    private static final java.lang.String TAG_MERGE;
    private static final java.lang.String TAG_REQUEST_FOCUS;
    private static final java.lang.Class[] mConstructorSignature;
    private static final java.util.HashMap sConstructorMap;
    private final boolean DEBUG;
    private final java.lang.Object[] mConstructorArgs;
    protected final android.content.Context mContext;
    private android.view.LayoutInflater$Factory mFactory;
    private boolean mFactorySet;
    private android.view.LayoutInflater$Filter mFilter;
    private java.util.HashMap mFilterMap;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.util.HashMap $r1;

        <android.view.LayoutInflater: java.lang.String TAG_REQUEST_FOCUS> = "requestFocus";

        <android.view.LayoutInflater: java.lang.String TAG_MERGE> = "merge";

        <android.view.LayoutInflater: java.lang.String TAG_INCLUDE> = "include";

        $r0 = newarray (java.lang.Class)[2];

        $r0[0] = class "android/content/Context";

        $r0[1] = class "android/util/AttributeSet";

        <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.view.LayoutInflater: java.util.HashMap sConstructorMap> = $r1;

        return;
    }

    protected void <init>(android.content.Context)
    {
        android.view.LayoutInflater $r0;
        android.content.Context $r1;
        java.lang.Object[] $r2;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.LayoutInflater: boolean DEBUG> = 0;

        $r2 = newarray (java.lang.Object)[2];

        $r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r2;

        $r0.<android.view.LayoutInflater: android.content.Context mContext> = $r1;

        return;
    }

    protected void <init>(android.view.LayoutInflater, android.content.Context)
    {
        android.view.LayoutInflater $r0, $r1;
        android.content.Context $r2;
        java.lang.Object[] $r3;
        android.view.LayoutInflater$Factory $r4;
        android.view.LayoutInflater$Filter $r5;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.view.LayoutInflater: boolean DEBUG> = 0;

        $r3 = newarray (java.lang.Object)[2];

        $r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r3;

        $r0.<android.view.LayoutInflater: android.content.Context mContext> = $r2;

        $r4 = $r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r4;

        $r5 = $r1.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter> = $r5;

        return;
    }

    private void failNotAllowed(java.lang.String, java.lang.String, android.util.AttributeSet)
    {
        android.view.LayoutInflater $r0;
        java.lang.String $r1, $r2, $r6;
        android.util.AttributeSet $r3;
        android.view.InflateException $r4;
        java.lang.StringBuilder $r5, $r7;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 = new android.view.InflateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class not allowed to be inflated ");

        if $r2 == null goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.view.InflateException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        goto label1;
    }

    public static android.view.LayoutInflater 'from'(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.view.LayoutInflater $r2;
        java.lang.AssertionError $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r2 = (android.view.LayoutInflater) $r1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("LayoutInflater not found.");

        throw $r3;

     label1:
        return $r2;
    }

    private void parseInclude(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.View $r2, $r14;
        android.util.AttributeSet $r3, $r11;
        java.lang.RuntimeException $r4;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r13;
        android.view.InflateException $r6;
        java.lang.StringBuilder $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        android.content.res.XmlResourceParser $r10;
        java.lang.Throwable $r12, $r19;
        android.view.ViewGroup $r15;
        android.view.ViewGroup$LayoutParams $r16;
        int[] $r17;
        android.content.res.TypedArray $r18;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.util.AttributeSet;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label32;

        $i0 = interfaceinvoke $r3.<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "layout", 0);

        if $i0 != 0 goto label02;

        $r5 = interfaceinvoke $r3.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "layout");

        if $r5 != null goto label01;

        $r6 = new android.view.InflateException;

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>("You must specifiy a layout in the include tag: <include layout=\"@layout/layoutID\" />");

        throw $r6;

     label01:
        $r6 = new android.view.InflateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You must specifiy a valid layout reference. The layout ID ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label02:
        $r8 = virtualinvoke $r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>($i0);

     label03:
        $r11 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r10);

     label04:
        $i0 = interfaceinvoke $r10.<android.content.res.XmlResourceParser: int next()>();

     label05:
        if $i0 == 2 goto label07;

     label06:
        if $i0 != 1 goto label04;

     label07:
        if $i0 == 2 goto label09;

        $r6 = new android.view.InflateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke $r10.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label08:
        $r12 := @caughtexception;

        interfaceinvoke $r10.<android.content.res.XmlResourceParser: void close()>();

        throw $r12;

     label09:
        $r5 = interfaceinvoke $r10.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r13 = "merge";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label13;

        specialinvoke $r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>($r10, $r2, $r11);

     label10:
        interfaceinvoke $r10.<android.content.res.XmlResourceParser: void close()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label11:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label12;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label33;

     label12:
        if $i1 != 1 goto label11;

        return;

     label13:
        $r14 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View createViewFromTag(java.lang.String,android.util.AttributeSet)>($r5, $r11);

        $r15 = (android.view.ViewGroup) $r2;

     label14:
        $r16 = virtualinvoke $r15.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r3);

     label15:
        if $r16 == null goto label17;

     label16:
        virtualinvoke $r14.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r16);

     label17:
        specialinvoke $r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>($r10, $r14, $r11);

        $r8 = $r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r17 = <com.android.internal.R$styleable: int[] View>;

        $r18 = virtualinvoke $r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r3, $r17, 0, 0);

        $i0 = virtualinvoke $r18.<android.content.res.TypedArray: int getResourceId(int,int)>(8, -1);

        $i1 = virtualinvoke $r18.<android.content.res.TypedArray: int getInt(int,int)>(20, -1);

        virtualinvoke $r18.<android.content.res.TypedArray: void recycle()>();

        if $i0 == -1 goto label18;

        virtualinvoke $r14.<android.view.View: void setId(int)>($i0);

     label18:
        lookupswitch($i1)
        {
            case 0: goto label28;
            case 1: goto label29;
            case 2: goto label30;
            default: goto label19;
        };

     label19:
        virtualinvoke $r15.<android.view.ViewGroup: void addView(android.view.View)>($r14);

     label20:
        goto label10;

     label21:
        $r4 := @caughtexception;

     label22:
        $r16 = virtualinvoke $r15.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r11);

     label23:
        if $r16 == null goto label17;

     label24:
        virtualinvoke $r14.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r16);

        goto label17;

     label25:
        $r19 := @caughtexception;

     label26:
        goto label27;

     label27:
        throw $r19;

     label28:
        virtualinvoke $r14.<android.view.View: void setVisibility(int)>(0);

        goto label19;

     label29:
        virtualinvoke $r14.<android.view.View: void setVisibility(int)>(4);

        goto label19;

     label30:
        virtualinvoke $r14.<android.view.View: void setVisibility(int)>(8);

     label31:
        goto label19;

     label32:
        $r6 = new android.view.InflateException;

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>("<include /> can only be used inside of a ViewGroup");

        throw $r6;

     label33:
        return;

        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.RuntimeException from label14 to label15 with label21;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label20 with label08;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label24 to label25 with label08;
        catch java.lang.Throwable from label26 to label31 with label08;
    }

    private void parseRequestFocus(org.xmlpull.v1.XmlPullParser, android.view.View) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.View $r2;
        int $i0, $i1, $i2;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: android.view.View;

        virtualinvoke $r2.<android.view.View: boolean requestFocus()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label3;

     label2:
        if $i1 != 1 goto label1;

        return;

     label3:
        return;
    }

    private void rInflate(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.View $r2, $r7;
        android.util.AttributeSet $r3;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r5;
        boolean $z0;
        android.view.InflateException $r6;
        android.view.ViewGroup $r8;
        android.view.ViewGroup$LayoutParams $r9;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.util.AttributeSet;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label7;

     label2:
        if $i1 == 1 goto label7;

        if $i1 != 2 goto label1;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "requestFocus";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        specialinvoke $r0.<android.view.LayoutInflater: void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View)>($r1, $r2);

        goto label1;

     label3:
        $r5 = "include";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 != 0 goto label4;

        $r6 = new android.view.InflateException;

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>("<include /> cannot be the root element");

        throw $r6;

     label4:
        specialinvoke $r0.<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>($r1, $r2, $r3);

        goto label1;

     label5:
        $r5 = "merge";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r6 = new android.view.InflateException;

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> must be the root element");

        throw $r6;

     label6:
        $r7 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View createViewFromTag(java.lang.String,android.util.AttributeSet)>($r4, $r3);

        $r8 = (android.view.ViewGroup) $r2;

        $r9 = virtualinvoke $r8.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r3);

        specialinvoke $r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>($r1, $r7, $r3);

        virtualinvoke $r8.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r7, $r9);

        goto label1;

     label7:
        virtualinvoke $r2.<android.view.View: void onFinishInflate()>();

        return;
    }

    public abstract android.view.LayoutInflater cloneInContext(android.content.Context);

    public final android.view.View createView(java.lang.String, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException, android.view.InflateException
    {
        java.lang.String $r0, $r1, $r11;
        android.util.AttributeSet $r2;
        java.lang.Object[] $r3;
        android.view.LayoutInflater $r4;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        java.lang.reflect.Constructor $r7, $r15;
        android.content.Context $r8;
        java.lang.ClassLoader $r9;
        java.lang.StringBuilder $r10, $r20;
        java.lang.Class $r12;
        android.view.LayoutInflater$Filter $r13;
        boolean $z0;
        java.lang.Class[] $r14;
        android.view.View $r16;
        java.lang.Boolean $r17, $r21;
        java.lang.NoSuchMethodException $r18;
        android.view.InflateException $r19;
        java.lang.ClassNotFoundException $r22;
        java.lang.Exception $r23;

        $r4 := @this: android.view.LayoutInflater;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.util.AttributeSet;

        $r5 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r7 = (java.lang.reflect.Constructor) $r6;

        if $r7 != null goto label19;

     label01:
        $r8 = $r4.<android.view.LayoutInflater: android.content.Context mContext>;

     label02:
        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label03:
        if $r1 == null goto label17;

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r12 = virtualinvoke $r9.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r11);

     label06:
        $r13 = $r4.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

     label07:
        if $r13 == null goto label10;

     label08:
        if $r12 == null goto label10;

     label09:
        $r13 = $r4.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z0 = interfaceinvoke $r13.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>($r12);

        if $z0 != 0 goto label10;

        specialinvoke $r4.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>($r0, $r1, $r2);

     label10:
        $r14 = <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature>;

        $r15 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r14);

     label11:
        $r7 = $r15;

     label12:
        $r5 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r15);

     label13:
        $r3 = $r4.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

     label14:
        $r3[1] = $r2;

        $r6 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

     label15:
        $r16 = (android.view.View) $r6;

     label16:
        return $r16;

     label17:
        $r11 = $r0;

     label18:
        goto label05;

     label19:
        $r13 = $r4.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        if $r13 == null goto label13;

     label20:
        $r5 = $r4.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

     label21:
        $r17 = (java.lang.Boolean) $r6;

        if $r17 != null goto label36;

     label22:
        $r8 = $r4.<android.view.LayoutInflater: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label23:
        if $r1 == null goto label34;

     label24:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label25:
        $r12 = virtualinvoke $r9.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r11);

     label26:
        if $r12 == null goto label35;

     label27:
        $r13 = $r4.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z0 = interfaceinvoke $r13.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>($r12);

     label28:
        if $z0 == 0 goto label35;

     label29:
        $z0 = 1;

     label30:
        $r5 = $r4.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r17);

        if $z0 != 0 goto label13;

        specialinvoke $r4.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>($r0, $r1, $r2);

     label31:
        goto label13;

     label32:
        $r18 := @caughtexception;

        $r19 = new android.view.InflateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        if $r1 == null goto label40;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label33:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.view.InflateException: void <init>(java.lang.String)>($r0);

        virtualinvoke $r19.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r18);

        throw $r19;

     label34:
        $r11 = $r0;

        goto label25;

     label35:
        $z0 = 0;

        goto label30;

     label36:
        $r21 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label37:
        $z0 = virtualinvoke $r17.<java.lang.Boolean: boolean equals(java.lang.Object)>($r21);

        if $z0 == 0 goto label13;

        specialinvoke $r4.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>($r0, $r1, $r2);

     label38:
        goto label13;

     label39:
        $r22 := @caughtexception;

        throw $r22;

     label40:
        goto label33;

     label41:
        $r23 := @caughtexception;

        $r19 = new android.view.InflateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r0 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        if $r7 != null goto label43;

        $r0 = "<unknown>";

     label42:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.view.InflateException: void <init>(java.lang.String)>($r0);

        virtualinvoke $r19.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r23);

        throw $r19;

     label43:
        $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r0 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        goto label42;

        catch java.lang.NoSuchMethodException from label02 to label03 with label32;
        catch java.lang.NoSuchMethodException from label04 to label06 with label32;
        catch java.lang.NoSuchMethodException from label09 to label11 with label32;
        catch java.lang.NoSuchMethodException from label12 to label13 with label32;
        catch java.lang.NoSuchMethodException from label14 to label15 with label32;
        catch java.lang.NoSuchMethodException from label18 to label19 with label32;
        catch java.lang.NoSuchMethodException from label20 to label21 with label32;
        catch java.lang.NoSuchMethodException from label22 to label23 with label32;
        catch java.lang.NoSuchMethodException from label24 to label26 with label32;
        catch java.lang.NoSuchMethodException from label27 to label28 with label32;
        catch java.lang.NoSuchMethodException from label30 to label31 with label32;
        catch java.lang.ClassNotFoundException from label02 to label03 with label39;
        catch java.lang.ClassNotFoundException from label04 to label06 with label39;
        catch java.lang.ClassNotFoundException from label09 to label11 with label39;
        catch java.lang.ClassNotFoundException from label12 to label13 with label39;
        catch java.lang.ClassNotFoundException from label14 to label15 with label39;
        catch java.lang.ClassNotFoundException from label18 to label19 with label39;
        catch java.lang.ClassNotFoundException from label20 to label21 with label39;
        catch java.lang.ClassNotFoundException from label22 to label23 with label39;
        catch java.lang.ClassNotFoundException from label24 to label26 with label39;
        catch java.lang.ClassNotFoundException from label27 to label28 with label39;
        catch java.lang.ClassNotFoundException from label30 to label31 with label39;
        catch java.lang.Exception from label01 to label03 with label41;
        catch java.lang.Exception from label04 to label07 with label41;
        catch java.lang.Exception from label08 to label11 with label41;
        catch java.lang.Exception from label12 to label16 with label41;
        catch java.lang.Exception from label18 to label23 with label41;
        catch java.lang.Exception from label24 to label28 with label41;
        catch java.lang.Exception from label29 to label31 with label41;
        catch java.lang.NoSuchMethodException from label37 to label38 with label32;
        catch java.lang.ClassNotFoundException from label37 to label38 with label39;
        catch java.lang.Exception from label37 to label38 with label41;
    }

    android.view.View createViewFromTag(java.lang.String, android.util.AttributeSet)
    {
        android.view.LayoutInflater $r0;
        android.util.AttributeSet $r1;
        java.lang.String $r2, $r9;
        boolean $z0;
        android.view.LayoutInflater$Factory $r3;
        android.view.View $r4;
        int $i0;
        android.content.Context $r5;
        android.view.InflateException $r6;
        java.lang.ClassNotFoundException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Exception $r10;

        $r0 := @this: android.view.LayoutInflater;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.util.AttributeSet;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("view");

        if $z0 == 0 goto label01;

        $r2 = interfaceinvoke $r1.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

     label01:
        $r3 = $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r3 != null goto label06;

     label02:
        $r4 = null;

     label03:
        if $r4 != null goto label14;

     label04:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(46);

        if -1 != $i0 goto label09;

        $r4 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>($r2, $r1);

     label05:
        return $r4;

     label06:
        $r3 = $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

     label07:
        $r5 = $r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r4 = interfaceinvoke $r3.<android.view.LayoutInflater$Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>($r2, $r5, $r1);

     label08:
        goto label03;

     label09:
        $r4 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>($r2, null, $r1);

     label10:
        return $r4;

     label11:
        $r6 := @caughtexception;

        throw $r6;

     label12:
        $r7 := @caughtexception;

        $r6 = new android.view.InflateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke $r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>($r2);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r7);

        throw $r6;

     label13:
        $r10 := @caughtexception;

        $r6 = new android.view.InflateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke $r1.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>($r2);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r10);

        throw $r6;

     label14:
        return $r4;

        catch android.view.InflateException from label04 to label05 with label11;
        catch android.view.InflateException from label07 to label08 with label11;
        catch android.view.InflateException from label09 to label10 with label11;
        catch java.lang.ClassNotFoundException from label04 to label05 with label12;
        catch java.lang.ClassNotFoundException from label07 to label08 with label12;
        catch java.lang.ClassNotFoundException from label09 to label10 with label12;
        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label05 with label13;
        catch java.lang.Exception from label06 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
    }

    public android.content.Context getContext()
    {
        android.view.LayoutInflater $r0;
        android.content.Context r1;

        $r0 := @this: android.view.LayoutInflater;

        r1 = $r0.<android.view.LayoutInflater: android.content.Context mContext>;

        return r1;
    }

    public final android.view.LayoutInflater$Factory getFactory()
    {
        android.view.LayoutInflater $r0;
        android.view.LayoutInflater$Factory r1;

        $r0 := @this: android.view.LayoutInflater;

        r1 = $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        return r1;
    }

    public android.view.LayoutInflater$Filter getFilter()
    {
        android.view.LayoutInflater $r0;
        android.view.LayoutInflater$Filter r1;

        $r0 := @this: android.view.LayoutInflater;

        r1 = $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        return r1;
    }

    public android.view.View inflate(int, android.view.ViewGroup)
    {
        android.view.LayoutInflater $r0;
        int $i0;
        android.view.ViewGroup $r1;
        android.view.View $r2;
        boolean $z0;

        $r0 := @this: android.view.LayoutInflater;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.ViewGroup;

        if $r1 == null goto label2;

        $z0 = 1;

     label1:
        $r2 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r1, $z0);

        return $r2;

     label2:
        $z0 = 0;

        goto label1;
    }

    public android.view.View inflate(int, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater $r0;
        int $i0;
        android.view.ViewGroup $r1;
        boolean $z0;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        android.content.res.XmlResourceParser $r4;
        android.view.View $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.view.LayoutInflater;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.ViewGroup;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke $r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>($i0);

     label1:
        $r5 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>($r4, $r1, $z0);

     label2:
        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        return $r5;

     label3:
        $r6 := @caughtexception;

        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup)
    {
        android.view.LayoutInflater $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.ViewGroup $r2;
        android.view.View $r3;
        boolean $z0;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: android.view.ViewGroup;

        if $r2 == null goto label2;

        $z0 = 1;

     label1:
        $r3 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>($r1, $r2, $z0);

        return $r3;

     label2:
        $z0 = 0;

        goto label1;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.ViewGroup $r2;
        boolean $z0, $z1;
        java.lang.Object[] $r3, $r5;
        android.util.AttributeSet $r4;
        android.content.Context $r6;
        android.view.View $r7, $r15;
        int $i0;
        android.view.InflateException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, $r13;
        org.xmlpull.v1.XmlPullParserException $r11;
        java.lang.Throwable $r12;
        java.io.IOException $r14;
        android.view.ViewGroup$LayoutParams $r16, $r17;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: android.view.ViewGroup;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        entermonitor $r3;

     label01:
        $r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

        $r5 = $r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r6 = $r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r5[0] = $r6;

     label02:
        $r7 = $r2;

     label03:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        if $i0 == 2 goto label06;

     label05:
        if $i0 != 1 goto label03;

     label06:
        if $i0 == 2 goto label14;

     label07:
        $r8 = new android.view.InflateException;

     label08:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.view.InflateException: void <init>(java.lang.String)>($r10);

     label09:
        throw $r8;

     label10:
        $r11 := @caughtexception;

     label11:
        $r8 = new android.view.InflateException;

        $r10 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r8.<android.view.InflateException: void <init>(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r11);

        throw $r8;

     label12:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label13:
        throw $r12;

     label14:
        $r10 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r13 = "merge";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label24;

     label15:
        if $r2 == null goto label17;

     label16:
        if $z0 != 0 goto label21;

     label17:
        $r8 = new android.view.InflateException;

        specialinvoke $r8.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> can be used only with a valid ViewGroup root and attachToRoot=true");

     label18:
        throw $r8;

     label19:
        $r14 := @caughtexception;

     label20:
        $r8 = new android.view.InflateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = virtualinvoke $r14.<java.lang.Throwable: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.view.InflateException: void <init>(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r14);

        throw $r8;

     label21:
        specialinvoke $r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>($r1, $r2, $r4);

     label22:
        exitmonitor $r3;

     label23:
        return $r7;

     label24:
        $r15 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View createViewFromTag(java.lang.String,android.util.AttributeSet)>($r10, $r4);

     label25:
        $r16 = null;

     label26:
        if $r2 == null goto label29;

        $r17 = virtualinvoke $r2.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r4);

     label27:
        $r16 = $r17;

     label28:
        if $z0 != 0 goto label29;

        virtualinvoke $r15.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r17);

     label29:
        specialinvoke $r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>($r1, $r15, $r4);

     label30:
        if $r2 == null goto label32;

     label31:
        if $z0 == 0 goto label32;

        virtualinvoke $r2.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r15, $r16);

     label32:
        if $r2 == null goto label33;

        if $z0 != 0 goto label22;

     label33:
        $r7 = $r15;

        goto label22;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label07 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label10;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label05 to label07 with label19;
        catch java.io.IOException from label08 to label09 with label19;
        catch java.lang.Throwable from label03 to label10 with label12;
        catch java.lang.Throwable from label11 to label13 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label18 with label10;
        catch java.io.IOException from label14 to label15 with label19;
        catch java.io.IOException from label16 to label18 with label19;
        catch java.lang.Throwable from label14 to label19 with label12;
        catch java.lang.Throwable from label20 to label21 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label10;
        catch java.io.IOException from label21 to label22 with label19;
        catch java.lang.Throwable from label21 to label22 with label12;
        catch java.lang.Throwable from label22 to label23 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label30 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label10;
        catch java.io.IOException from label24 to label25 with label19;
        catch java.io.IOException from label26 to label27 with label19;
        catch java.io.IOException from label28 to label30 with label19;
        catch java.io.IOException from label31 to label32 with label19;
        catch java.lang.Throwable from label24 to label32 with label12;
    }

    protected android.view.View onCreateView(java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater $r0;
        java.lang.String $r1;
        android.util.AttributeSet $r2;
        android.view.View $r3;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke $r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>($r1, "android.view.", $r2);

        return $r3;
    }

    public void setFactory(android.view.LayoutInflater$Factory)
    {
        android.view.LayoutInflater $r0;
        android.view.LayoutInflater$Factory $r1, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.NullPointerException $r3;
        android.view.LayoutInflater$FactoryMerger $r5;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: android.view.LayoutInflater$Factory;

        $z0 = $r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r3;

     label2:
        $r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        $r4 = $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r4 != null goto label3;

        $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r1;

        return;

     label3:
        $r5 = new android.view.LayoutInflater$FactoryMerger;

        $r4 = $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        specialinvoke $r5.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory)>($r1, $r4);

        $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r5;

        return;
    }

    public void setFilter(android.view.LayoutInflater$Filter)
    {
        android.view.LayoutInflater $r0;
        android.view.LayoutInflater$Filter $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.view.LayoutInflater;

        $r1 := @parameter0: android.view.LayoutInflater$Filter;

        $r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter> = $r1;

        if $r1 == null goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap> = $r2;

        return;

     label1:
        return;
    }
}
