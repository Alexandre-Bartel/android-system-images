public class com.android.commands.monkey.Monkey extends java.lang.Object
{
    private static final int DEBUG_ALLOW_ANY_RESTARTS;
    private static final int DEBUG_ALLOW_ANY_STARTS;
    private static final java.io.File TOMBSTONES_PATH;
    private boolean mAbort;
    private android.app.IActivityManager mAm;
    private java.lang.String[] mArgs;
    int mCount;
    private java.lang.String mCurArgData;
    long mDroppedFlipEvents;
    long mDroppedKeyEvents;
    long mDroppedPointerEvents;
    long mDroppedTrackballEvents;
    com.android.commands.monkey.MonkeyEventSource mEventSource;
    float[] mFactors;
    private boolean mGenerateHprof;
    private boolean mIgnoreCrashes;
    private boolean mIgnoreSecurityExceptions;
    private boolean mIgnoreTimeouts;
    private boolean mKillProcessAfterError;
    private java.util.ArrayList mMainApps;
    java.util.ArrayList mMainCategories;
    private boolean mMonitorNativeCrashes;
    private int mNextArg;
    private android.content.pm.IPackageManager mPm;
    private boolean mRequestAnrTraces;
    private boolean mRequestDumpsysMemInfo;
    private java.lang.String mScriptFileName;
    long mSeed;
    private boolean mSendNoEvents;
    long mThrottle;
    private java.util.HashSet mTombstones;
    private java.util.HashSet mValidPackages;
    private int mVerbose;
    private android.view.IWindowManager mWm;

    static void <clinit>()
    {
        java.io.File $r0;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/data/tombstones");

        <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.commands.monkey.Monkey $r0;
        java.util.HashSet $r1;
        java.util.ArrayList $r2;
        float[] $r3;

        $r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps> = $r2;

        $r0.<com.android.commands.monkey.Monkey: long mThrottle> = 0L;

        $r0.<com.android.commands.monkey.Monkey: int mCount> = 1000;

        $r0.<com.android.commands.monkey.Monkey: long mSeed> = 0L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents> = 0L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents> = 0L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedTrackballEvents> = 0L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents> = 0L;

        $r0.<com.android.commands.monkey.Monkey: java.lang.String mScriptFileName> = null;

        $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = null;

        $r3 = newarray (float)[9];

        $r0.<com.android.commands.monkey.Monkey: float[] mFactors> = $r3;

        return;
    }

    static int access$000(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey $r0;
        int i0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        i0 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        return i0;
    }

    static java.util.HashSet access$100(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey $r0;
        java.util.HashSet r1;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        r1 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        return r1;
    }

    static boolean access$200(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey $r0;
        boolean z0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 = $r0.<com.android.commands.monkey.Monkey: boolean mIgnoreCrashes>;

        return z0;
    }

    static boolean access$302(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 := @parameter1: boolean;

        $r0.<com.android.commands.monkey.Monkey: boolean mAbort> = $z0;

        return $z0;
    }

    static boolean access$400(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey $r0;
        boolean z0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 = $r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError>;

        return z0;
    }

    static void access$500(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey $r0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void reportProcRank()>();

        return;
    }

    static boolean access$602(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 := @parameter1: boolean;

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = $z0;

        return $z0;
    }

    static boolean access$702(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 := @parameter1: boolean;

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = $z0;

        return $z0;
    }

    static boolean access$800(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey $r0;
        boolean z0;

        $r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 = $r0.<com.android.commands.monkey.Monkey: boolean mIgnoreTimeouts>;

        return z0;
    }

    private boolean checkInternalConfiguration()
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.io.PrintStream $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = null;

     label1:
        $r1 = staticinvoke <com.android.commands.monkey.MonkeySourceRandom: java.lang.String getLastKeyName()>();

     label2:
        $r2 = "TAG_LAST_KEYCODE";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("** Error: Key names array malformed (internal error).");

        return 0;

     label3:
        return 1;

     label4:
        $r4 := @caughtexception;

        goto label2;

        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    private boolean checkNativeCrashes()
    {
        com.android.commands.monkey.Monkey $r0;
        int $i0, $i1;
        java.util.HashSet $r1, $r5;
        java.lang.String $r2;
        java.io.File $r3;
        java.lang.String[] $r4;
        boolean $z0;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r3 = <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String[] list()>();

        if $r4 == null goto label1;

        $i0 = lengthof $r4;

        if $i0 != 0 goto label2;

     label1:
        $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = null;

        return 0;

     label2:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r2 = $r4[$i1];

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r5 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones>;

        if $r5 == null goto label5;

        $r5 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones>;

        $z0 = virtualinvoke $r5.<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>($r1);

        if $z0 != 0 goto label7;

     label5:
        $z0 = 1;

     label6:
        $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = $r1;

        return $z0;

     label7:
        $z0 = 0;

        goto label6;
    }

    private void commandLineReport(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String $r1, $r2, $r7;
        java.io.BufferedReader $r3;
        java.io.InputStreamReader $r4;
        java.io.PrintStream $r5;
        java.lang.StringBuilder $r6;
        java.lang.Runtime $r8;
        java.lang.Process $r9;
        java.io.InputStream $r10;
        java.lang.Exception $r11;
        int $i0;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);

        staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

     label1:
        $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r9 = virtualinvoke $r8.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.Process: java.io.InputStream getInputStream()>();

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        $r3 = new java.io.BufferedReader;

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label2:
        $r2 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 == null goto label5;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label3:
        goto label2;

     label4:
        $r11 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Exception from ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r1 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label5:
        $i0 = virtualinvoke $r9.<java.lang.Process: int waitFor()>();

     label6:
        $r5 = <java.lang.System: java.io.PrintStream err>;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status was ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label8:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label4;
        catch java.lang.Exception from label7 to label8 with label4;
    }

    private boolean getMainApps()
    {
        com.android.commands.monkey.Monkey $r0;
        android.content.Intent $r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3;
        java.lang.String $r4, $r14;
        android.content.pm.IPackageManager $r5;
        java.util.List $r6;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8;
        android.content.pm.ResolveInfo $r9;
        java.util.HashSet $r10;
        android.content.pm.ActivityInfo $r11;
        android.content.pm.ApplicationInfo $r12;
        boolean $z0;
        android.content.ComponentName $r13;
        android.os.RemoteException $r15;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r2 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

     label01:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label39;

     label04:
        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        $r2 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.String) $r3;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 <= 0 goto label05;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>($r4);

     label05:
        $r5 = $r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm>;

        $r6 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int)>($r1, null, 0);

        if $r6 == null goto label07;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

     label06:
        if $i2 != 0 goto label10;

     label07:
        $r7 = <java.lang.System: java.io.PrintStream err>;

     label08:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Warning: no activities found for category ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label09:
        $i1 = $i1 + 1;

        goto label03;

     label10:
        $i2 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

     label11:
        if $i2 < 2 goto label14;

     label12:
        $r7 = <java.lang.System: java.io.PrintStream out>;

     label13:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Selecting main activities from category ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label14:
        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

     label15:
        $i3 = 0;

     label16:
        if $i3 >= $i2 goto label09;

        $r3 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3);

     label17:
        $r9 = (android.content.pm.ResolveInfo) $r3;

     label18:
        $r10 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $i4 = virtualinvoke $r10.<java.util.HashSet: int size()>();

     label19:
        if $i4 == 0 goto label22;

        $r10 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r11.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label20:
        $r4 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r10.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

     label21:
        if $z0 == 0 goto label31;

     label22:
        $i4 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i4 < 2 goto label28;

        $r7 = <java.lang.System: java.io.PrintStream out>;

     label23:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   + Using main activity ");

     label24:
        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label25:
        $r4 = $r11.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from package ");

     label26:
        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r11.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label27:
        $r4 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label28:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $r13 = new android.content.ComponentName;

        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r11.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label29:
        $r14 = $r11.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, $r14);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label30:
        $i3 = $i3 + 1;

        goto label16;

     label31:
        $i4 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i4 < 3 goto label30;

        $r7 = <java.lang.System: java.io.PrintStream out>;

     label32:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   - NOT USING main activity ");

     label33:
        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label34:
        $r4 = $r11.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from package ");

     label35:
        $r11 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r11.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label36:
        $r4 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label37:
        goto label30;

     label38:
        $r15 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("** Failed talking with package manager!");

        return 0;

     label39:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label40;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("** No activities found to run, monkey aborted.");

        return 0;

     label40:
        return 1;

        catch android.os.RemoteException from label01 to label02 with label38;
        catch android.os.RemoteException from label04 to label06 with label38;
        catch android.os.RemoteException from label08 to label09 with label38;
        catch android.os.RemoteException from label11 to label12 with label38;
        catch android.os.RemoteException from label13 to label15 with label38;
        catch android.os.RemoteException from label16 to label17 with label38;
        catch android.os.RemoteException from label18 to label19 with label38;
        catch android.os.RemoteException from label20 to label21 with label38;
        catch android.os.RemoteException from label23 to label24 with label38;
        catch android.os.RemoteException from label25 to label26 with label38;
        catch android.os.RemoteException from label27 to label28 with label38;
        catch android.os.RemoteException from label29 to label30 with label38;
        catch android.os.RemoteException from label32 to label33 with label38;
        catch android.os.RemoteException from label34 to label35 with label38;
        catch android.os.RemoteException from label36 to label37 with label38;
    }

    private boolean getSystemInterfaces()
    {
        com.android.commands.monkey.Monkey $r0;
        android.app.IActivityManager $r1;
        java.io.PrintStream $r2;
        android.os.IBinder $r3;
        android.view.IWindowManager $r4;
        android.content.pm.IPackageManager $r5;
        com.android.commands.monkey.Monkey$ActivityWatcher $r6, r8;
        android.os.RemoteException $r7;
        android.app.IActivityWatcher r9;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm> = $r1;

        $r1 = $r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        if $r1 != null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("** Error: Unable to connect to activity manager; is the system running?");

        return 0;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r3);

        $r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm> = $r4;

        $r4 = $r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        if $r4 != null goto label2;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("** Error: Unable to connect to window manager; is the system running?");

        return 0;

     label2:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r5 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r3);

        $r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm> = $r5;

        $r5 = $r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm>;

        if $r5 != null goto label3;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("** Error: Unable to connect to package manager; is the system running?");

        return 0;

     label3:
        $r1 = $r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        r8 = new com.android.commands.monkey.Monkey$ActivityWatcher;

        $r6 = r8;

     label4:
        specialinvoke r8.<com.android.commands.monkey.Monkey$ActivityWatcher: void <init>(com.android.commands.monkey.Monkey,com.android.commands.monkey.Monkey$1)>($r0, null);

        r9 = (android.app.IActivityWatcher) $r6;

        interfaceinvoke $r1.<android.app.IActivityManager: void setActivityWatcher(android.app.IActivityWatcher)>(r9);

     label5:
        return 1;

     label6:
        $r7 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("** Failed talking with activity manager!");

        return 0;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        com.android.commands.monkey.Monkey $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.monkey.Monkey;

        specialinvoke $r1.<com.android.commands.monkey.Monkey: void <init>()>();

        $i0 = specialinvoke $r1.<com.android.commands.monkey.Monkey: int run(java.lang.String[])>($r0);

        staticinvoke <java.lang.System: void exit(int)>($i0);

        return;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r1 = $r2[$i0];

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i0;

        return $r1;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        java.lang.String[] $r2;
        boolean $z0;
        char $c2;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        return null;

     label1:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r1 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i0;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label5;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        if $c2 == 45 goto label5;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 2 goto label4;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(2);

        $r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = $r3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r1;

     label4:
        $r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = null;

        return $r1;

     label5:
        $r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = null;

        return $r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData>;

        return $r1;

     label1:
        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        return null;

     label2:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r1 = $r2[$i0];

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i0;

        return $r1;
    }

    private long nextOptionLong(java.lang.String)
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String $r1, $r2;
        long $l0;
        java.lang.NumberFormatException $r3;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a number");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r1);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean processOptions()
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.String[] $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        long $l1;
        java.lang.RuntimeException $r3;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5;
        java.util.HashSet $r6;
        java.util.ArrayList $r7;
        float[] $r8;
        float $f0;
        java.lang.NumberFormatException $r9;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = lengthof $r1;

        if $i0 >= 1 goto label01;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label01:
        $r2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: java.lang.String nextOption()>();

        if $r2 == null goto label45;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z0 == 0 goto label04;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Seed");

        $r0.<com.android.commands.monkey.Monkey: long mSeed> = $l1;

     label02:
        goto label01;

     label03:
        $r3 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: ");

        $r2 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r2);

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label04:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z0 == 0 goto label05;

        $r6 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $r2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        goto label01;

     label05:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z0 == 0 goto label06;

        $r7 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label01;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z0 == 0 goto label07;

        $i0 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        $i0 = $i0 + 1;

        $r0.<com.android.commands.monkey.Monkey: int mVerbose> = $i0;

        goto label01;

     label07:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-crashes");

        if $z0 == 0 goto label08;

        $r0.<com.android.commands.monkey.Monkey: boolean mIgnoreCrashes> = 1;

        goto label01;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-timeouts");

        if $z0 == 0 goto label09;

        $r0.<com.android.commands.monkey.Monkey: boolean mIgnoreTimeouts> = 1;

        goto label01;

     label09:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-security-exceptions");

        if $z0 == 0 goto label10;

        $r0.<com.android.commands.monkey.Monkey: boolean mIgnoreSecurityExceptions> = 1;

        goto label01;

     label10:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--monitor-native-crashes");

        if $z0 == 0 goto label11;

        $r0.<com.android.commands.monkey.Monkey: boolean mMonitorNativeCrashes> = 1;

        goto label01;

     label11:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--kill-process-after-error");

        if $z0 == 0 goto label12;

        $r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError> = 1;

        goto label01;

     label12:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--hprof");

        if $z0 == 0 goto label13;

        $r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof> = 1;

        goto label01;

     label13:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-touch");

        if $z0 == 0 goto label16;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("touch events percentage");

     label14:
        $l1 = neg $l1;

     label15:
        $f0 = (float) $l1;

        $r8[0] = $f0;

        goto label01;

     label16:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-motion");

        if $z0 == 0 goto label19;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("motion events percentage");

     label17:
        $l1 = neg $l1;

     label18:
        $f0 = (float) $l1;

        $r8[1] = $f0;

        goto label01;

     label19:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-trackball");

        if $z0 == 0 goto label22;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("trackball events percentage");

     label20:
        $l1 = neg $l1;

     label21:
        $f0 = (float) $l1;

        $r8[2] = $f0;

        goto label01;

     label22:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-nav");

        if $z0 == 0 goto label25;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("nav events percentage");

     label23:
        $l1 = neg $l1;

     label24:
        $f0 = (float) $l1;

        $r8[3] = $f0;

        goto label01;

     label25:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-majornav");

        if $z0 == 0 goto label28;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("major nav events percentage");

     label26:
        $l1 = neg $l1;

     label27:
        $f0 = (float) $l1;

        $r8[4] = $f0;

        goto label01;

     label28:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-appswitch");

        if $z0 == 0 goto label31;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("app switch events percentage");

     label29:
        $l1 = neg $l1;

     label30:
        $f0 = (float) $l1;

        $r8[6] = $f0;

        goto label01;

     label31:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-flip");

        if $z0 == 0 goto label34;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("keyboard flip percentage");

     label32:
        $l1 = neg $l1;

     label33:
        $f0 = (float) $l1;

        $r8[7] = $f0;

        goto label01;

     label34:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--pct-anyevent");

        if $z0 == 0 goto label37;

        $r8 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("any events percentage");

     label35:
        $l1 = neg $l1;

     label36:
        $f0 = (float) $l1;

        $r8[8] = $f0;

        goto label01;

     label37:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--throttle");

        if $z0 == 0 goto label38;

        $l1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("delay (in milliseconds) to wait between events");

        $r0.<com.android.commands.monkey.Monkey: long mThrottle> = $l1;

        goto label01;

     label38:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--wait-dbg");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--dbg-no-events");

        if $z0 == 0 goto label39;

        $r0.<com.android.commands.monkey.Monkey: boolean mSendNoEvents> = 1;

        goto label01;

     label39:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z0 == 0 goto label40;

        $r2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        $r0.<com.android.commands.monkey.Monkey: java.lang.String mScriptFileName> = $r2;

        goto label01;

     label40:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-h");

        if $z0 == 0 goto label42;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void showUsage()>();

     label41:
        return 0;

     label42:
        $r4 = <java.lang.System: java.io.PrintStream err>;

     label43:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: Unknown option: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r2);

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void showUsage()>();

     label44:
        return 0;

     label45:
        $r2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: java.lang.String nextArg()>();

        if $r2 != null goto label46;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("** Error: Count not specified");

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label46:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label47:
        $r0.<com.android.commands.monkey.Monkey: int mCount> = $i0;

        return 1;

     label48:
        $r9 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("** Error: Count is not a number");

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label04 to label14 with label03;
        catch java.lang.RuntimeException from label15 to label17 with label03;
        catch java.lang.RuntimeException from label18 to label20 with label03;
        catch java.lang.RuntimeException from label21 to label23 with label03;
        catch java.lang.RuntimeException from label24 to label26 with label03;
        catch java.lang.RuntimeException from label27 to label29 with label03;
        catch java.lang.RuntimeException from label30 to label32 with label03;
        catch java.lang.RuntimeException from label33 to label35 with label03;
        catch java.lang.RuntimeException from label36 to label41 with label03;
        catch java.lang.RuntimeException from label43 to label44 with label03;
        catch java.lang.NumberFormatException from label46 to label47 with label48;
    }

    private void reportAnrTraces()
    {
        com.android.commands.monkey.Monkey $r0;
        java.lang.InterruptedException $r1;

        $r0 := @this: com.android.commands.monkey.Monkey;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(5000L);

     label2:
        specialinvoke $r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("anr traces", "cat /data/anr/traces.txt");

        return;

     label3:
        $r1 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void reportDumpsysMemInfo()
    {
        com.android.commands.monkey.Monkey $r0;

        $r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("meminfo", "dumpsys meminfo");

        return;
    }

    private void reportProcRank()
    {
        com.android.commands.monkey.Monkey $r0;

        $r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("procrank", "procrank");

        return;
    }

    private int run(java.lang.String[])
    {
        com.android.commands.monkey.Monkey $r0;
        java.util.ArrayList $r1;
        long $l0, $l3;
        int $i1, $i2, $i5;
        java.lang.String $r2, $r4;
        java.lang.String[] $r3;
        boolean $z0;
        float[] $r5;
        java.io.PrintStream $r6;
        java.lang.StringBuilder $r7, r17;
        java.util.HashSet $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        com.android.commands.monkey.MonkeySourceScript $r11, r18;
        com.android.commands.monkey.MonkeyEventSource $r12;
        com.android.commands.monkey.MonkeySourceRandom $r13, r19;
        float $f0;
        byte $b4;
        android.app.IActivityManager $r14;
        java.lang.Throwable $r15;
        android.os.RemoteException $r16;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r3 := @parameter0: java.lang.String[];

        $i1 = lengthof $r3;

        $i2 = 0;

     label01:
        if $i2 >= $i1 goto label03;

        $r2 = $r3[$i2];

        $r4 = "--wait-dbg";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label02;

        staticinvoke <android.os.Debug: void waitForDebugger()>();

     label02:
        $i2 = $i2 + 1;

        goto label01;

     label03:
        $r0.<com.android.commands.monkey.Monkey: int mVerbose> = 0;

        $r0.<com.android.commands.monkey.Monkey: int mCount> = 1000;

        $r0.<com.android.commands.monkey.Monkey: long mSeed> = 0L;

        $r0.<com.android.commands.monkey.Monkey: long mThrottle> = 0L;

        $r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs> = $r3;

        $r0.<com.android.commands.monkey.Monkey: int mNextArg> = 0;

        $i1 = 0;

     label04:
        if $i1 >= 9 goto label05;

        $r5 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $f0 = 1.06535322E9F;

        $r5[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label04;

     label05:
        $z0 = specialinvoke $r0.<com.android.commands.monkey.Monkey: boolean processOptions()>();

        if $z0 != 0 goto label06;

        return -1;

     label06:
        $r1 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label07;

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>("android.intent.category.LAUNCHER");

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>("android.intent.category.MONKEY");

     label07:
        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i1 <= 0 goto label11;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Monkey: seed=");

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r8 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $i1 = virtualinvoke $r8.<java.util.HashSet: int size()>();

        if $i1 <= 0 goto label09;

        $r8 = $r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":AllowPackage: ");

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r10;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label08;

     label09:
        $r1 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 == 0 goto label11;

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r9 = virtualinvoke $r1.<java.util.AbstractList: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":IncludeCategory: ");

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r10;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label10;

     label11:
        $z0 = specialinvoke $r0.<com.android.commands.monkey.Monkey: boolean checkInternalConfiguration()>();

        if $z0 != 0 goto label12;

        return -2;

     label12:
        $z0 = specialinvoke $r0.<com.android.commands.monkey.Monkey: boolean getSystemInterfaces()>();

        if $z0 != 0 goto label13;

        return -3;

     label13:
        $z0 = specialinvoke $r0.<com.android.commands.monkey.Monkey: boolean getMainApps()>();

        if $z0 != 0 goto label14;

        return -4;

     label14:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String mScriptFileName>;

        if $r2 == null goto label16;

        r18 = new com.android.commands.monkey.MonkeySourceScript;

        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String mScriptFileName>;

        specialinvoke r18.<com.android.commands.monkey.MonkeySourceScript: void <init>(java.lang.String)>($r2);

        $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = r18;

        $r12 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r12.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i1);

     label15:
        $r12 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $z0 = interfaceinvoke $r12.<com.android.commands.monkey.MonkeyEventSource: boolean validate()>();

        if $z0 != 0 goto label21;

        return -5;

     label16:
        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i1 < 2 goto label17;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Seeded: ");

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label17:
        r19 = new com.android.commands.monkey.MonkeySourceRandom;

        $l3 = $r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r1 = $r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        specialinvoke r19.<com.android.commands.monkey.MonkeySourceRandom: void <init>(long,java.util.ArrayList,long)>($l3, $r1, $l0);

        $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = r19;

        $r12 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r12.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i1);

        $i1 = 0;

     label18:
        if $i1 >= 9 goto label20;

        $r5 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $f0 = $r5[$i1];

        $b4 = $f0 cmpg 0.0F;

        if $b4 > 0 goto label19;

        $r12 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r13 = (com.android.commands.monkey.MonkeySourceRandom) $r12;

        $r5 = $r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $f0 = $r5[$i1];

        virtualinvoke $r13.<com.android.commands.monkey.MonkeySourceRandom: void setFactors(int,float)>($i1, $f0);

     label19:
        $i1 = $i1 + 1;

        goto label18;

     label20:
        $r12 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r13 = (com.android.commands.monkey.MonkeySourceRandom) $r12;

        virtualinvoke $r13.<com.android.commands.monkey.MonkeySourceRandom: void generateActivity()>();

        goto label15;

     label21:
        $r2 = $r0.<com.android.commands.monkey.Monkey: java.lang.String mScriptFileName>;

        if $r2 == null goto label22;

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        $r12 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r11 = (com.android.commands.monkey.MonkeySourceScript) $r12;

        $i2 = virtualinvoke $r11.<com.android.commands.monkey.MonkeySourceScript: int getOneRoundEventCount()>();

        $i1 = $i1 * $i2;

        $r0.<com.android.commands.monkey.Monkey: int mCount> = $i1;

     label22:
        $z0 = $r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof>;

        if $z0 == 0 goto label23;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>();

     label23:
        $i2 = specialinvoke $r0.<com.android.commands.monkey.Monkey: int runMonkeyCycles()>();

        $i1 = $i2;

        entermonitor $r0;

     label24:
        $z0 = $r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces>;

        if $z0 == 0 goto label25;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void reportAnrTraces()>();

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

     label25:
        $z0 = $r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo>;

        if $z0 == 0 goto label26;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void reportDumpsysMemInfo()>();

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

     label26:
        exitmonitor $r0;

     label27:
        $z0 = $r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof>;

        if $z0 == 0 goto label28;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>();

        $i5 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i5 <= 0 goto label28;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("// Generated profiling reports in /data/misc");

     label28:
        $r14 = $r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

     label29:
        interfaceinvoke $r14.<android.app.IActivityManager: void setActivityWatcher(android.app.IActivityWatcher)>(null);

     label30:
        $i2 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i2 <= 0 goto label31;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>(":Dropped: keys=");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents>;

        virtualinvoke $r6.<java.io.PrintStream: void print(long)>($l0);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>(" pointers=");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents>;

        virtualinvoke $r6.<java.io.PrintStream: void print(long)>($l0);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>(" trackballs=");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mDroppedTrackballEvents>;

        virtualinvoke $r6.<java.io.PrintStream: void print(long)>($l0);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>(" flips=");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents>;

        virtualinvoke $r6.<java.io.PrintStream: void println(long)>($l0);

     label31:
        $i2 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        $i2 = $i2 - 1;

        if $i1 >= $i2 goto label36;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** System appears to have crashed at event ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $i2 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using seed ");

        $l0 = $r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return $i1;

     label32:
        $r15 := @caughtexception;

     label33:
        exitmonitor $r0;

     label34:
        throw $r15;

     label35:
        $r16 := @caughtexception;

        $i5 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        if $i2 < $i5 goto label30;

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        $i1 = $i1 - 1;

        goto label30;

     label36:
        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i1 <= 0 goto label37;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("// Monkey finished");

     label37:
        return 0;

        catch java.lang.Throwable from label24 to label27 with label32;
        catch android.os.RemoteException from label29 to label30 with label35;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    private int runMonkeyCycles()
    {
        com.android.commands.monkey.Monkey $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        com.android.commands.monkey.MonkeyEventSource $r5;
        com.android.commands.monkey.MonkeyEvent $r6;
        android.view.IWindowManager $r7;
        android.app.IActivityManager $r8;
        long $l2;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $i0 = 0;

        $z0 = 0;

     label01:
        if $z0 != 0 goto label24;

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        if $i0 >= $i1 goto label24;

        entermonitor $r0;

     label02:
        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces>;

        if $z1 == 0 goto label03;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void reportAnrTraces()>();

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

     label03:
        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo>;

        if $z1 == 0 goto label04;

        specialinvoke $r0.<com.android.commands.monkey.Monkey: void reportDumpsysMemInfo()>();

        $r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

     label04:
        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mMonitorNativeCrashes>;

        if $z1 == 0 goto label07;

        $z1 = specialinvoke $r0.<com.android.commands.monkey.Monkey: boolean checkNativeCrashes()>();

        if $z1 == 0 goto label07;

        if $i0 <= 0 goto label07;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("** New native crash detected.");

        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mAbort>;

        if $z1 != 0 goto label05;

        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError>;

        if $z1 == 0 goto label09;

     label05:
        $z1 = 1;

     label06:
        $r0.<com.android.commands.monkey.Monkey: boolean mAbort> = $z1;

     label07:
        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mAbort>;

        if $z1 == 0 goto label10;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("** Monkey aborted due to error.");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Events injected: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        exitmonitor $r0;

     label08:
        return $i0;

     label09:
        $z1 = 0;

        goto label06;

     label10:
        exitmonitor $r0;

     label11:
        $z1 = $r0.<com.android.commands.monkey.Monkey: boolean mSendNoEvents>;

        if $z1 == 0 goto label15;

        $i0 = $i0 + 1;

        goto label01;

     label12:
        $r4 := @caughtexception;

     label13:
        exitmonitor $r0;

     label14:
        throw $r4;

     label15:
        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i1 <= 0 goto label16;

        $i1 = $i0 % 100;

        if $i1 != 0 goto label16;

        if $i0 == 0 goto label16;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    // Sending event #");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label16:
        $r5 = $r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r6 = interfaceinvoke $r5.<com.android.commands.monkey.MonkeyEventSource: com.android.commands.monkey.MonkeyEvent getNextEvent()>();

        if $r6 == null goto label01;

        $z1 = $r6 instanceof com.android.commands.monkey.MonkeyThrottleEvent;

        if $z1 != 0 goto label17;

        $i0 = $i0 + 1;

     label17:
        $r7 = $r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r8 = $r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i1 = $r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        $i1 = virtualinvoke $r6.<com.android.commands.monkey.MonkeyEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r7, $r8, $i1);

        if $i1 != 0 goto label20;

        $z1 = $r6 instanceof com.android.commands.monkey.MonkeyKeyEvent;

        if $z1 == 0 goto label18;

        $l2 = $r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents>;

        $l2 = $l2 + 1L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents> = $l2;

        goto label01;

     label18:
        $z1 = $r6 instanceof com.android.commands.monkey.MonkeyMotionEvent;

        if $z1 == 0 goto label19;

        $l2 = $r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents>;

        $l2 = $l2 + 1L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents> = $l2;

        goto label01;

     label19:
        $z1 = $r6 instanceof com.android.commands.monkey.MonkeyFlipEvent;

        if $z1 == 0 goto label01;

        $l2 = $r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents>;

        $l2 = $l2 + 1L;

        $r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents> = $l2;

        goto label01;

     label20:
        if $i1 != -1 goto label21;

        $z0 = 1;

        goto label01;

     label21:
        if $i1 != -2 goto label01;

        $z0 = $r0.<com.android.commands.monkey.Monkey: boolean mIgnoreSecurityExceptions>;

        if $z0 != 0 goto label23;

        $z0 = 1;

     label22:
        goto label01;

     label23:
        $z0 = 0;

        goto label22;

     label24:
        $i0 = $r0.<com.android.commands.monkey.Monkey: int mCount>;

        return $i0;

        catch java.lang.Throwable from label02 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void showUsage()
    {
        com.android.commands.monkey.Monkey $r0;
        java.io.PrintStream $r1;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("usage: monkey [-p ALLOWED_PACKAGE [-p ALLOWED_PACKAGE] ...]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [-c MAIN_CATEGORY [-c MAIN_CATEGORY] ...]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--ignore-crashes] [--ignore-timeouts]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--ignore-security-exceptions] [--monitor-native-crashes]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--kill-process-after-error] [--hprof]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--pct-touch PERCENT] [--pct-motion PERCENT]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--pct-trackball PERCENT] [--pct-syskeys PERCENT]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--pct-nav PERCENT] [--pct-majornav PERCENT]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--pct-appswitch PERCENT] [--pct-flip PERCENT]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--pct-anyevent PERCENT]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [--wait-dbg] [--dbg-no-events] [-f scriptfile]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              [-s SEED] [-v [-v] ...] [--throttle MILLISEC]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              COUNT");

        return;
    }

    private void signalPersistentProcesses()
    {
        com.android.commands.monkey.Monkey $r0;
        android.app.IActivityManager $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.io.PrintStream $r4;
        java.lang.InterruptedException $r5;

        $r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = $r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

     label1:
        interfaceinvoke $r1.<android.app.IActivityManager: void signalPersistentProcesses(int)>(10);

     label2:
        entermonitor $r0;

     label3:
        virtualinvoke $r0.<java.lang.Object: void wait(long)>(2000L);

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r2;

     label7:
        $r3 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("** Failed talking with activity manager!");

        return;

     label8:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.InterruptedException from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch android.os.RemoteException from label6 to label7 with label7;
        catch java.lang.InterruptedException from label6 to label7 with label8;
    }
}
