public class org.apache.http.impl.cookie.BasicExpiresHandler extends org.apache.http.impl.cookie.AbstractCookieAttributeHandler
{
    private final java.lang.String[] datepatterns;

    public void <init>(java.lang.String[])
    {
        org.apache.http.impl.cookie.BasicExpiresHandler $r0;
        java.lang.String[] $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: org.apache.http.impl.cookie.BasicExpiresHandler;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array of date patterns may not be null");

        throw $r2;

     label1:
        $r0.<org.apache.http.impl.cookie.BasicExpiresHandler: java.lang.String[] datepatterns> = $r1;

        return;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.BasicExpiresHandler $r0;
        org.apache.http.cookie.SetCookie $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.cookie.MalformedCookieException $r4;
        java.lang.String[] $r5;
        java.util.Date $r6;
        org.apache.http.impl.cookie.DateParseException $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: org.apache.http.impl.cookie.BasicExpiresHandler;

        $r1 := @parameter0: org.apache.http.cookie.SetCookie;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for expires attribute");

        throw $r4;

     label2:
        $r5 = $r0.<org.apache.http.impl.cookie.BasicExpiresHandler: java.lang.String[] datepatterns>;

     label3:
        $r6 = staticinvoke <org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[])>($r2, $r5);

        interfaceinvoke $r1.<org.apache.http.cookie.SetCookie: void setExpiryDate(java.util.Date)>($r6);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse expires attribute: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r2);

        throw $r4;

        catch org.apache.http.impl.cookie.DateParseException from label3 to label4 with label5;
    }
}
