class com.android.internal.policy.impl.LockPatternKeyguardView$1 extends java.lang.Object implements com.android.internal.policy.impl.KeyguardScreenCallback
{
    final com.android.internal.policy.impl.LockPatternKeyguardView this$0;

    void <init>(com.android.internal.policy.impl.LockPatternKeyguardView)
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 := @parameter0: com.android.internal.policy.impl.LockPatternKeyguardView;

        $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean doesFallbackUnlockScreenExist()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        boolean $z0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$600(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        return $z0;
    }

    public void goToLockScreen()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;
        boolean $z0;
        com.android.internal.policy.impl.KeyguardViewCallback $r2;
        com.android.internal.policy.impl.LockPatternKeyguardView$Mode $r3;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$000(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$002(com.android.internal.policy.impl.LockPatternKeyguardView,boolean)>($r1, 0);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r2 = virtualinvoke $r1.<com.android.internal.policy.impl.KeyguardViewBase: com.android.internal.policy.impl.KeyguardViewCallback getCallback()>();

        interfaceinvoke $r2.<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDone(boolean)>(0);

        return;

     label1:
        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r3 = <com.android.internal.policy.impl.LockPatternKeyguardView$Mode: com.android.internal.policy.impl.LockPatternKeyguardView$Mode LockScreen>;

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: void access$100(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode)>($r1, $r3);

        return;
    }

    public void goToUnlockScreen()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;
        com.android.internal.policy.impl.KeyguardUpdateMonitor $r2;
        com.android.internal.telephony.SimCard$State $r3, $r4;
        boolean $z0;
        com.android.internal.policy.impl.KeyguardViewCallback $r5;
        com.android.internal.policy.impl.LockPatternKeyguardView$Mode $r6;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.KeyguardUpdateMonitor access$200(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        $r3 = virtualinvoke $r2.<com.android.internal.policy.impl.KeyguardUpdateMonitor: com.android.internal.telephony.SimCard$State getSimState()>();

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$300(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        if $z0 != 0 goto label3;

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PUK_REQUIRED>;

        if $r3 != $r4 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: boolean isSecure()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r5 = virtualinvoke $r1.<com.android.internal.policy.impl.KeyguardViewBase: com.android.internal.policy.impl.KeyguardViewCallback getCallback()>();

        interfaceinvoke $r5.<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDone(boolean)>(1);

        return;

     label2:
        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r6 = <com.android.internal.policy.impl.LockPatternKeyguardView$Mode: com.android.internal.policy.impl.LockPatternKeyguardView$Mode UnlockScreen>;

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: void access$100(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode)>($r1, $r6);

        return;

     label3:
        return;
    }

    public boolean isSecure()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        boolean $z0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$400(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        return $z0;
    }

    public boolean isVerifyUnlockOnly()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        boolean $z0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$000(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        return $z0;
    }

    public void keyguardDone(boolean)
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        boolean $z0;
        com.android.internal.policy.impl.KeyguardViewCallback $r1;
        com.android.internal.policy.impl.LockPatternKeyguardView $r2;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r1 = virtualinvoke $r2.<com.android.internal.policy.impl.KeyguardViewBase: com.android.internal.policy.impl.KeyguardViewCallback getCallback()>();

        interfaceinvoke $r1.<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDone(boolean)>($z0);

        return;
    }

    public void keyguardDoneDrawing()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        return;
    }

    public void pokeWakelock()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        com.android.internal.policy.impl.KeyguardViewCallback $r1;
        com.android.internal.policy.impl.LockPatternKeyguardView $r2;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r1 = virtualinvoke $r2.<com.android.internal.policy.impl.KeyguardViewBase: com.android.internal.policy.impl.KeyguardViewCallback getCallback()>();

        interfaceinvoke $r1.<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock()>();

        return;
    }

    public void pokeWakelock(int)
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        int $i0;
        com.android.internal.policy.impl.KeyguardViewCallback $r1;
        com.android.internal.policy.impl.LockPatternKeyguardView $r2;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $i0 := @parameter0: int;

        $r2 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r1 = virtualinvoke $r2.<com.android.internal.policy.impl.KeyguardViewBase: com.android.internal.policy.impl.KeyguardViewCallback getCallback()>();

        interfaceinvoke $r1.<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock(int)>($i0);

        return;
    }

    public void recreateMe()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: void access$500(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        return;
    }

    public void reportFailedPatternAttempt()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        com.android.internal.policy.impl.LockPatternKeyguardView $r1, $r4;
        com.android.internal.policy.impl.KeyguardUpdateMonitor $r2;
        int $i0;
        boolean $z0;
        com.android.internal.widget.LockPatternUtils $r3;
        com.android.internal.policy.impl.LockPatternKeyguardView$Mode $r5;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.KeyguardUpdateMonitor access$200(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        virtualinvoke $r2.<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportFailedAttempt()>();

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.KeyguardUpdateMonitor access$200(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        $i0 = virtualinvoke $r2.<com.android.internal.policy.impl.KeyguardUpdateMonitor: int getFailedAttempts()>();

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$600(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        if $z0 == 0 goto label1;

        if $i0 != 15 goto label1;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: void access$700(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        return;

     label1:
        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $z0 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$600(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        if $z0 == 0 goto label2;

        if $i0 < 20 goto label2;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r3 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.widget.LockPatternUtils access$800(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)>(1);

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r4 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r5 = staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.LockPatternKeyguardView$Mode access$900(com.android.internal.policy.impl.LockPatternKeyguardView)>($r4);

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: void access$100(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode)>($r1, $r5);

        return;

     label2:
        $i0 = $i0 % 5;

        if $i0 != 0 goto label3;

        $r1 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        staticinvoke <com.android.internal.policy.impl.LockPatternKeyguardView: void access$1000(com.android.internal.policy.impl.LockPatternKeyguardView)>($r1);

        return;

     label3:
        return;
    }

    public void takeEmergencyCallAction()
    {
        com.android.internal.policy.impl.LockPatternKeyguardView$1 $r0;
        android.content.Intent $r1;
        android.content.Context $r2;
        com.android.internal.policy.impl.LockPatternKeyguardView $r3;

        $r0 := @this: com.android.internal.policy.impl.LockPatternKeyguardView$1;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("com.android.phone.EmergencyDialer.DIAL");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setFlags(int)>(276824064);

        $r3 = $r0.<com.android.internal.policy.impl.LockPatternKeyguardView$1: com.android.internal.policy.impl.LockPatternKeyguardView this$0>;

        $r2 = virtualinvoke $r3.<android.view.View: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void startActivity(android.content.Intent)>($r1);

        return;
    }
}
