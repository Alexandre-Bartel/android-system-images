public class org.bouncycastle.crypto.generators.DSAKeyPairGenerator extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator
{
    private static java.math.BigInteger ZERO;
    private org.bouncycastle.crypto.params.DSAKeyGenerationParameters param;

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        <org.bouncycastle.crypto.generators.DSAKeyPairGenerator: java.math.BigInteger ZERO> = $r0;

        return;
    }

    public void <init>()
    {
        org.bouncycastle.crypto.generators.DSAKeyPairGenerator $r0;

        $r0 := @this: org.bouncycastle.crypto.generators.DSAKeyPairGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        org.bouncycastle.crypto.generators.DSAKeyPairGenerator $r0;
        java.math.BigInteger $r1, $r7, $r8, $r9, $r10;
        org.bouncycastle.crypto.params.DSAPublicKeyParameters $r2;
        org.bouncycastle.crypto.params.DSAPrivateKeyParameters $r3;
        org.bouncycastle.crypto.params.DSAKeyGenerationParameters $r4;
        org.bouncycastle.crypto.params.DSAParameters $r5;
        java.security.SecureRandom $r6;
        boolean $z0;
        int $i0;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r11;

        $r0 := @this: org.bouncycastle.crypto.generators.DSAKeyPairGenerator;

        $r4 = $r0.<org.bouncycastle.crypto.generators.DSAKeyPairGenerator: org.bouncycastle.crypto.params.DSAKeyGenerationParameters param>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.DSAKeyGenerationParameters: org.bouncycastle.crypto.params.DSAParameters getParameters()>();

        $r4 = $r0.<org.bouncycastle.crypto.generators.DSAKeyPairGenerator: org.bouncycastle.crypto.params.DSAKeyGenerationParameters param>;

        $r6 = virtualinvoke $r4.<org.bouncycastle.crypto.KeyGenerationParameters: java.security.SecureRandom getRandom()>();

        $r7 = virtualinvoke $r5.<org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r8 = virtualinvoke $r5.<org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $r9 = virtualinvoke $r5.<org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getG()>();

     label1:
        $r1 = new java.math.BigInteger;

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,java.util.Random)>(160, $r6);

        $r10 = <org.bouncycastle.crypto.generators.DSAKeyPairGenerator: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r7);

        if $i0 >= 0 goto label1;

        $r7 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r1, $r8);

        $r11 = new org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r2 = new org.bouncycastle.crypto.params.DSAPublicKeyParameters;

        specialinvoke $r2.<org.bouncycastle.crypto.params.DSAPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DSAParameters)>($r7, $r5);

        $r3 = new org.bouncycastle.crypto.params.DSAPrivateKeyParameters;

        specialinvoke $r3.<org.bouncycastle.crypto.params.DSAPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DSAParameters)>($r1, $r5);

        specialinvoke $r11.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.bouncycastle.crypto.CipherParameters,org.bouncycastle.crypto.CipherParameters)>($r2, $r3);

        return $r11;
    }

    public void init(org.bouncycastle.crypto.KeyGenerationParameters)
    {
        org.bouncycastle.crypto.generators.DSAKeyPairGenerator $r0;
        org.bouncycastle.crypto.KeyGenerationParameters $r1;
        org.bouncycastle.crypto.params.DSAKeyGenerationParameters $r2;

        $r0 := @this: org.bouncycastle.crypto.generators.DSAKeyPairGenerator;

        $r1 := @parameter0: org.bouncycastle.crypto.KeyGenerationParameters;

        $r2 = (org.bouncycastle.crypto.params.DSAKeyGenerationParameters) $r1;

        $r0.<org.bouncycastle.crypto.generators.DSAKeyPairGenerator: org.bouncycastle.crypto.params.DSAKeyGenerationParameters param> = $r2;

        return;
    }
}
