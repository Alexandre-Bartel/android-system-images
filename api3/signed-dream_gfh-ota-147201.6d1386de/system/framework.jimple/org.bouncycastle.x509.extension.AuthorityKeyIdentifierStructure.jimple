public class org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure extends org.bouncycastle.asn1.x509.AuthorityKeyIdentifier
{

    public void <init>(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure $r0;
        java.security.PublicKey $r1;
        org.bouncycastle.asn1.ASN1Sequence $r2;

        $r0 := @this: org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 = staticinvoke <org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure: org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)>($r1);

        specialinvoke $r0.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r2);

        return;
    }

    public void <init>(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure $r0;
        java.security.cert.X509Certificate $r1;
        org.bouncycastle.asn1.ASN1Sequence $r2;

        $r0 := @this: org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = staticinvoke <org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure: org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)>($r1);

        specialinvoke $r0.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r2);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure $r0;
        byte[] $r1;
        org.bouncycastle.asn1.ASN1Encodable $r2;
        org.bouncycastle.asn1.ASN1Sequence $r3;

        $r0 := @this: org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.bouncycastle.x509.extension.X509ExtensionUtil: org.bouncycastle.asn1.ASN1Encodable fromExtensionValue(byte[])>($r1);

        $r3 = (org.bouncycastle.asn1.ASN1Sequence) $r2;

        specialinvoke $r0.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r3);

        return;
    }

    private static org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate $r0;
        int $i0;
        org.bouncycastle.asn1.x509.GeneralName $r1;
        org.bouncycastle.jce.X509Principal $r2;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.bouncycastle.asn1.ASN1InputStream $r4;
        java.security.PublicKey $r5;
        byte[] $r6;
        org.bouncycastle.asn1.DERObject $r7;
        org.bouncycastle.asn1.ASN1Sequence $r8;
        org.bouncycastle.asn1.x509.AuthorityKeyIdentifier $r9;
        org.bouncycastle.asn1.x509.GeneralNames $r10;
        java.math.BigInteger $r11;
        org.bouncycastle.asn1.DERObjectIdentifier $r12;
        java.lang.String $r13;
        org.bouncycastle.asn1.ASN1Encodable $r14;
        org.bouncycastle.asn1.ASN1OctetString $r15;
        java.lang.Exception $r16;
        java.security.cert.CertificateParsingException $r17;
        java.lang.StringBuilder $r18;

        $r0 := @parameter0: java.security.cert.X509Certificate;

     label01:
        $i0 = virtualinvoke $r0.<java.security.cert.X509Certificate: int getVersion()>();

     label02:
        if $i0 == 3 goto label09;

     label03:
        $r1 = new org.bouncycastle.asn1.x509.GeneralName;

        $r2 = staticinvoke <org.bouncycastle.jce.PrincipalUtil: org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)>($r0);

        specialinvoke $r1.<org.bouncycastle.asn1.x509.GeneralName: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r2);

     label04:
        $r3 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

     label05:
        $r4 = new org.bouncycastle.asn1.ASN1InputStream;

        $r5 = virtualinvoke $r0.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r6 = interfaceinvoke $r5.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r6);

        $r7 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

        specialinvoke $r3.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r8);

     label06:
        $r9 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

     label07:
        $r10 = new org.bouncycastle.asn1.x509.GeneralNames;

        specialinvoke $r10.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r1);

        $r11 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r9.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r3, $r10, $r11);

        $r7 = virtualinvoke $r9.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

     label08:
        return $r8;

     label09:
        $r1 = new org.bouncycastle.asn1.x509.GeneralName;

        $r2 = staticinvoke <org.bouncycastle.jce.PrincipalUtil: org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)>($r0);

        specialinvoke $r1.<org.bouncycastle.asn1.x509.GeneralName: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r2);

        $r12 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier SubjectKeyIdentifier>;

        $r13 = virtualinvoke $r12.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r6 = virtualinvoke $r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r13);

        if $r6 == null goto label11;

        $r14 = staticinvoke <org.bouncycastle.x509.extension.X509ExtensionUtil: org.bouncycastle.asn1.ASN1Encodable fromExtensionValue(byte[])>($r6);

        $r15 = (org.bouncycastle.asn1.ASN1OctetString) $r14;

        $r9 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

        $r6 = virtualinvoke $r15.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r10 = new org.bouncycastle.asn1.x509.GeneralNames;

        specialinvoke $r10.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r1);

        $r11 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r9.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(byte[],org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r6, $r10, $r11);

        $r7 = virtualinvoke $r9.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

     label10:
        return $r8;

     label11:
        $r3 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

     label12:
        $r4 = new org.bouncycastle.asn1.ASN1InputStream;

        $r5 = virtualinvoke $r0.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r6 = interfaceinvoke $r5.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r6);

        $r7 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

        specialinvoke $r3.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r8);

     label13:
        $r9 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

     label14:
        $r10 = new org.bouncycastle.asn1.x509.GeneralNames;

        specialinvoke $r10.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r1);

        $r11 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r9.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r3, $r10, $r11);

        $r7 = virtualinvoke $r9.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

     label15:
        return $r8;

     label16:
        $r16 := @caughtexception;

        $r17 = new java.security.cert.CertificateParsingException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception extracting certificate details: ");

        $r13 = virtualinvoke $r16.<java.lang.Throwable: java.lang.String toString()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r13);

        throw $r17;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    private static org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r0;
        java.security.PublicKey $r1;
        org.bouncycastle.asn1.ASN1InputStream $r2;
        byte[] $r3;
        org.bouncycastle.asn1.DERObject $r4;
        org.bouncycastle.asn1.ASN1Sequence $r5;
        org.bouncycastle.asn1.x509.AuthorityKeyIdentifier $r6;
        java.lang.Exception $r7;
        java.security.InvalidKeyException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        $r1 := @parameter0: java.security.PublicKey;

        $r0 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 = new org.bouncycastle.asn1.ASN1InputStream;

     label1:
        $r3 = interfaceinvoke $r1.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

        $r4 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        specialinvoke $r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r5);

        $r6 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

        specialinvoke $r6.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r0);

        $r4 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.security.InvalidKeyException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process key: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r10);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
