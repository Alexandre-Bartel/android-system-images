final class com.android.server.MountListener extends java.lang.Object implements java.lang.Runnable
{
    private static final java.lang.String TAG;
    private static final java.lang.String VOLD_CMD_DISABLE_UMS;
    private static final java.lang.String VOLD_CMD_EJECT_MEDIA;
    private static final java.lang.String VOLD_CMD_ENABLE_UMS;
    private static final java.lang.String VOLD_CMD_FORMAT_MEDIA;
    private static final java.lang.String VOLD_CMD_MOUNT_VOLUME;
    private static final java.lang.String VOLD_CMD_SEND_UMS_STATUS;
    private static final java.lang.String VOLD_EVT_BAD_REMOVAL;
    private static final java.lang.String VOLD_EVT_CHECKING;
    private static final java.lang.String VOLD_EVT_DAMAGED;
    private static final java.lang.String VOLD_EVT_EJECTING;
    private static final java.lang.String VOLD_EVT_MOUNTED;
    private static final java.lang.String VOLD_EVT_MOUNTED_RO;
    private static final java.lang.String VOLD_EVT_NOFS;
    private static final java.lang.String VOLD_EVT_NOMEDIA;
    private static final java.lang.String VOLD_EVT_UMS;
    private static final java.lang.String VOLD_EVT_UMS_CONNECTED;
    private static final java.lang.String VOLD_EVT_UMS_DISABLED;
    private static final java.lang.String VOLD_EVT_UMS_DISCONNECTED;
    private static final java.lang.String VOLD_EVT_UMS_ENABLED;
    private static final java.lang.String VOLD_EVT_UNMOUNTED;
    private static final java.lang.String VOLD_SOCKET;
    private java.io.OutputStream mOutputStream;
    private com.android.server.MountService mService;
    private boolean mUmsConnected;
    private boolean mUmsEnabled;

    void <init>(com.android.server.MountService)
    {
        com.android.server.MountListener $r0;
        com.android.server.MountService $r1;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: com.android.server.MountService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.MountListener: com.android.server.MountService mService> = $r1;

        return;
    }

    private void handleEvent(java.lang.String)
    {
        com.android.server.MountListener $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        int $i0;
        boolean $z0;
        com.android.server.MountService $r4;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleEvent ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MountListener", $r3);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(58);

        if $i0 <= 0 goto label02;

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ums_enabled");

        if $z0 == 0 goto label03;

        $r0.<com.android.server.MountListener: boolean mUmsEnabled> = 1;

        return;

     label02:
        $r3 = null;

        goto label01;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ums_disabled");

        if $z0 == 0 goto label04;

        $r0.<com.android.server.MountListener: boolean mUmsEnabled> = 0;

        return;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ums_connected");

        if $z0 == 0 goto label05;

        $r0.<com.android.server.MountListener: boolean mUmsConnected> = 1;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyUmsConnected()>();

        return;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ums_disconnected");

        if $z0 == 0 goto label06;

        $r0.<com.android.server.MountListener: boolean mUmsConnected> = 0;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyUmsDisconnected()>();

        return;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_nomedia:");

        if $z0 == 0 goto label07;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaRemoved(java.lang.String)>($r3);

        return;

     label07:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_unmounted:");

        if $z0 == 0 goto label08;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaUnmounted(java.lang.String)>($r3);

        return;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_checking:");

        if $z0 == 0 goto label09;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaChecking(java.lang.String)>($r3);

        return;

     label09:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_nofs:");

        if $z0 == 0 goto label10;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaNoFs(java.lang.String)>($r3);

        return;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_mounted:");

        if $z0 == 0 goto label11;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaMounted(java.lang.String,boolean)>($r3, 0);

        return;

     label11:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_mounted_ro:");

        if $z0 == 0 goto label12;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaMounted(java.lang.String,boolean)>($r3, 1);

        return;

     label12:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_ums");

        if $z0 == 0 goto label13;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaShared(java.lang.String)>($r3);

        return;

     label13:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_badremoval:");

        if $z0 == 0 goto label14;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaBadRemoval(java.lang.String)>($r3);

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaEject(java.lang.String)>($r3);

        return;

     label14:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_damaged:");

        if $z0 == 0 goto label15;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaUnmountable(java.lang.String)>($r3);

        return;

     label15:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("volume_ejecting:");

        if $z0 == 0 goto label16;

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaEject(java.lang.String)>($r3);

        return;

     label16:
        return;
    }

    private void listenToSocket()
    {
        com.android.server.MountListener $r0;
        android.net.LocalSocketAddress $r1;
        byte[] $r2;
        java.lang.String $r3;
        java.io.IOException $r4, $r11, $r13, $r14;
        android.net.LocalSocket $r5, $r6;
        android.net.LocalSocketAddress$Namespace $r7;
        java.io.InputStream $r8;
        java.io.OutputStream $r9;
        int $i0, $i1, $i2, $i4;
        java.lang.IllegalStateException $r10;
        byte $b3;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.MountListener;

        $r6 = null;

        $r5 = new android.net.LocalSocket;

     label01:
        specialinvoke $r5.<android.net.LocalSocket: void <init>()>();

     label02:
        $r1 = new android.net.LocalSocketAddress;

        $r7 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

     label03:
        specialinvoke $r1.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("vold", $r7);

        virtualinvoke $r5.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r1);

        $r8 = virtualinvoke $r5.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        $r9 = virtualinvoke $r5.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

     label04:
        $r0.<com.android.server.MountListener: java.io.OutputStream mOutputStream> = $r9;

     label05:
        $r2 = newarray (byte)[100];

        specialinvoke $r0.<com.android.server.MountListener: void writeCommand(java.lang.String)>("send_ums_status");

     label06:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r2);

     label07:
        if $i0 >= 0 goto label18;

        $r6 = $r5;

     label08:
        entermonitor $r0;

     label09:
        $r9 = $r0.<com.android.server.MountListener: java.io.OutputStream mOutputStream>;

     label10:
        if $r9 == null goto label14;

     label11:
        $r9 = $r0.<com.android.server.MountListener: java.io.OutputStream mOutputStream>;

     label12:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label13:
        $r0.<com.android.server.MountListener: java.io.OutputStream mOutputStream> = null;

     label14:
        exitmonitor $r0;

     label15:
        if $r6 == null goto label17;

     label16:
        virtualinvoke $r6.<android.net.LocalSocket: void close()>();

     label17:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MountListener", "Failed to connect to vold", $r10);

        staticinvoke <android.os.SystemClock: void sleep(long)>(2000L);

        return;

     label18:
        $i1 = 0;

        $i2 = 0;

     label19:
        if $i2 >= $i0 goto label06;

        $b3 = $r2[$i2];

        if $b3 != 0 goto label22;

        $r3 = new java.lang.String;

        $i4 = $i2 - $i1;

     label20:
        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>($r2, $i1, $i4);

        specialinvoke $r0.<com.android.server.MountListener: void handleEvent(java.lang.String)>($r3);

     label21:
        $i1 = $i2 + 1;

     label22:
        $i2 = $i2 + 1;

        goto label19;

     label23:
        $r11 := @caughtexception;

     label24:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MountListener", "IOException closing output stream");

        goto label13;

     label25:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label26:
        throw $r12;

     label27:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MountListener", "IOException closing socket");

        goto label17;

     label28:
        $r13 := @caughtexception;

        goto label08;

     label29:
        $r14 := @caughtexception;

        $r6 = $r5;

        goto label08;

        catch java.io.IOException from label01 to label02 with label28;
        catch java.io.IOException from label03 to label04 with label29;
        catch java.io.IOException from label05 to label07 with label29;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.io.IOException from label12 to label13 with label23;
        catch java.lang.Throwable from label11 to label13 with label25;
        catch java.lang.Throwable from label13 to label15 with label25;
        catch java.io.IOException from label16 to label17 with label27;
        catch java.io.IOException from label20 to label21 with label29;
        catch java.lang.Throwable from label24 to label26 with label25;
    }

    private void writeCommand(java.lang.String)
    {
        com.android.server.MountListener $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.android.server.MountListener: void writeCommand2(java.lang.String,java.lang.String)>($r1, null);

        return;
    }

    private void writeCommand2(java.lang.String, java.lang.String)
    {
        com.android.server.MountListener $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalStateException $r4;
        java.io.OutputStream $r5;
        byte[] $r6;
        java.io.IOException $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label01:
        $r5 = $r0.<com.android.server.MountListener: java.io.OutputStream mOutputStream>;

        if $r5 != null goto label04;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MountListener", "No connection to vold", $r4);

     label02:
        exitmonitor $r0;

     label03:
        return;

     label04:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        if $r2 == null goto label05;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label05:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

     label06:
        $r5 = $r0.<com.android.server.MountListener: java.io.OutputStream mOutputStream>;

     label07:
        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r6);

     label08:
        goto label02;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MountListener", "IOException in writeCommand", $r7);

        goto label02;

     label11:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label08 with label11;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    public void ejectMedia(java.lang.String)
    {
        com.android.server.MountListener $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.android.server.MountListener: void writeCommand2(java.lang.String,java.lang.String)>("eject_media:", $r1);

        return;
    }

    public void formatMedia(java.lang.String)
    {
        com.android.server.MountListener $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.android.server.MountListener: void writeCommand2(java.lang.String,java.lang.String)>("format_media:", $r1);

        return;
    }

    boolean getMassStorageConnected()
    {
        com.android.server.MountListener $r0;
        boolean z0;

        $r0 := @this: com.android.server.MountListener;

        z0 = $r0.<com.android.server.MountListener: boolean mUmsConnected>;

        return z0;
    }

    boolean getMassStorageEnabled()
    {
        com.android.server.MountListener $r0;
        boolean z0;

        $r0 := @this: com.android.server.MountListener;

        z0 = $r0.<com.android.server.MountListener: boolean mUmsEnabled>;

        return z0;
    }

    public void mountMedia(java.lang.String)
    {
        com.android.server.MountListener $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.server.MountListener;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.android.server.MountListener: void writeCommand2(java.lang.String,java.lang.String)>("mount_volume:", $r1);

        return;
    }

    public void run()
    {
        com.android.server.MountListener $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.android.server.MountService $r4;
        java.io.File $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: com.android.server.MountListener;

        $r2 = "simulator";

        $r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.product.device");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("EXTERNAL_STORAGE_STATE", "mounted");

        $r4 = $r0.<com.android.server.MountListener: com.android.server.MountService mService>;

        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r4.<com.android.server.MountService: void notifyMediaMounted(java.lang.String,boolean)>($r2, 0);

        return;

     label1:
        specialinvoke $r0.<com.android.server.MountListener: void listenToSocket()>();

     label2:
        goto label1;

     label3:
        $r1 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fatal error ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in MountListener thread!");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MountListener", $r2);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setMassStorageEnabled(boolean)
    {
        com.android.server.MountListener $r0;
        boolean $z0;
        java.lang.String $r1;

        $r0 := @this: com.android.server.MountListener;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $r1 = "enable_ums";

     label1:
        specialinvoke $r0.<com.android.server.MountListener: void writeCommand(java.lang.String)>($r1);

        return;

     label2:
        $r1 = "disable_ums";

        goto label1;
    }

    public static void <clinit>()
    {
        <com.android.server.MountListener: java.lang.String VOLD_SOCKET> = "vold";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_UNMOUNTED> = "volume_unmounted:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_UMS_ENABLED> = "ums_enabled";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_UMS_DISCONNECTED> = "ums_disconnected";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_UMS_DISABLED> = "ums_disabled";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_UMS_CONNECTED> = "ums_connected";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_UMS> = "volume_ums";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_NOMEDIA> = "volume_nomedia:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_NOFS> = "volume_nofs:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_MOUNTED_RO> = "volume_mounted_ro:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_MOUNTED> = "volume_mounted:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_EJECTING> = "volume_ejecting:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_DAMAGED> = "volume_damaged:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_CHECKING> = "volume_checking:";

        <com.android.server.MountListener: java.lang.String VOLD_EVT_BAD_REMOVAL> = "volume_badremoval:";

        <com.android.server.MountListener: java.lang.String VOLD_CMD_SEND_UMS_STATUS> = "send_ums_status";

        <com.android.server.MountListener: java.lang.String VOLD_CMD_MOUNT_VOLUME> = "mount_volume:";

        <com.android.server.MountListener: java.lang.String VOLD_CMD_FORMAT_MEDIA> = "format_media:";

        <com.android.server.MountListener: java.lang.String VOLD_CMD_ENABLE_UMS> = "enable_ums";

        <com.android.server.MountListener: java.lang.String VOLD_CMD_EJECT_MEDIA> = "eject_media:";

        <com.android.server.MountListener: java.lang.String VOLD_CMD_DISABLE_UMS> = "disable_ums";

        <com.android.server.MountListener: java.lang.String TAG> = "MountListener";

        return;
    }
}
