public class org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl extends javax.net.ssl.KeyManagerFactorySpi
{
    private java.security.KeyStore keyStore;
    private char[] pwd;

    public void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl;

        specialinvoke $r0.<javax.net.ssl.KeyManagerFactorySpi: void <init>()>();

        return;
    }

    public javax.net.ssl.KeyManager[] engineGetKeyManagers()
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl $r0;
        org.apache.harmony.xnet.provider.jsse.KeyManagerImpl $r1;
        java.security.KeyStore $r2;
        char[] $r3;
        java.lang.IllegalStateException $r4;
        javax.net.ssl.KeyManager[] $r5;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("KeyManagerFactory is not initialized");

        throw $r4;

     label1:
        $r5 = newarray (javax.net.ssl.KeyManager)[1];

        $r1 = new org.apache.harmony.xnet.provider.jsse.KeyManagerImpl;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: char[] pwd>;

        specialinvoke $r1.<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: void <init>(java.security.KeyStore,char[])>($r2, $r3);

        $r5[0] = $r1;

        return $r5;
    }

    public void engineInit(java.security.KeyStore, char[]) throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl $r0;
        java.security.KeyStore $r1;
        char[] $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r10;
        org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl$1 $r5;
        boolean $z0;
        int $i0;
        java.io.IOException $r6, $r14;
        java.security.KeyStoreException $r7;
        java.security.cert.CertificateException $r8, $r15;
        org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl$2 $r9;
        java.io.FileInputStream $r11;
        java.io.File $r12;
        java.io.FileNotFoundException $r13;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl;

        $r1 := @parameter0: java.security.KeyStore;

        $r2 := @parameter1: char[];

        if $r1 == null goto label02;

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: java.security.KeyStore keyStore> = $r1;

        if $r2 == null goto label01;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (char[]) $r3;

        $r2 = (char[]) $r2;

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: char[] pwd> = $r2;

        return;

     label01:
        $r2 = newarray (char)[0];

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: char[] pwd> = $r2;

        return;

     label02:
        $r4 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4);

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: java.security.KeyStore keyStore> = $r1;

        $r5 = new org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl$1;

        specialinvoke $r5.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl$1: void <init>(org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl)>($r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);

        $r4 = (java.lang.String) $r3;

        if $r4 == null goto label03;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NONE");

        if $z0 != 0 goto label03;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label08;

     label03:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

     label04:
        virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

     label05:
        return;

     label06:
        $r6 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label07:
        $r8 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label08:
        $r9 = new org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl$2;

        specialinvoke $r9.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl$2: void <init>(org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl)>($r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);

        $r10 = (java.lang.String) $r3;

        if $r10 != null goto label13;

        $r2 = newarray (char)[0];

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: char[] pwd> = $r2;

     label09:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        $r11 = new java.io.FileInputStream;

        $r12 = new java.io.File;

     label10:
        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r4);

        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.io.File)>($r12);

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: char[] pwd>;

        virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r11, $r2);

     label11:
        return;

     label12:
        $r13 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r13);

        throw $r7;

     label13:
        $r2 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl: char[] pwd> = $r2;

        goto label09;

     label14:
        $r14 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r14);

        throw $r7;

     label15:
        $r15 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r15);

        throw $r7;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.security.cert.CertificateException from label04 to label05 with label07;
        catch java.io.FileNotFoundException from label10 to label11 with label12;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.security.cert.CertificateException from label10 to label11 with label15;
    }

    public void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
    {
        org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl $r0;
        javax.net.ssl.ManagerFactoryParameters $r1;
        java.security.InvalidAlgorithmParameterException $r2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl;

        $r1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ManagerFactoryParameters not supported");

        throw $r2;
    }
}
