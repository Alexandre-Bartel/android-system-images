public class org.bouncycastle.crypto.digests.SHA1Digest extends org.bouncycastle.crypto.digests.GeneralDigest
{
    private static final int DIGEST_LENGTH;
    private static final int Y1;
    private static final int Y2;
    private static final int Y3;
    private static final int Y4;
    private int H1;
    private int H2;
    private int H3;
    private int H4;
    private int H5;
    private int[] X;
    private int xOff;

    public void <init>()
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int[] $r1;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.GeneralDigest: void <init>()>();

        $r1 = newarray (int)[80];

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X> = $r1;

        virtualinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void reset()>();

        return;
    }

    public void <init>(org.bouncycastle.crypto.digests.SHA1Digest)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0, $r1;
        int[] $r2, $r3, $r4;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $r1 := @parameter0: org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.GeneralDigest: void <init>(org.bouncycastle.crypto.digests.GeneralDigest)>($r1);

        $r2 = newarray (int)[80];

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X> = $r2;

        $i0 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int H1>;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H1> = $i0;

        $i0 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int H2>;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H2> = $i0;

        $i0 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int H3>;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H3> = $i0;

        $i0 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int H4>;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H4> = $i0;

        $i0 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int H5>;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H5> = $i0;

        $r3 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $r2 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $r4 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $i0 = $r1.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff>;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff> = $i0;

        return;
    }

    private int f(int, int, int)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int $i0, $i1, $i2;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 = $i0 & $i1;

        $i0 = $i0 ^ -1;

        $i0 = $i0 & $i2;

        $i0 = $i1 | $i0;

        return $i0;
    }

    private int g(int, int, int)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i0 & $i1;

        $i0 = $i0 & $i2;

        $i0 = $i3 | $i0;

        $i1 = $i1 & $i2;

        $i0 = $i0 | $i1;

        return $i0;
    }

    private int h(int, int, int)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int $i0, $i1, $i2;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = $i0 ^ $i1;

        $i0 = $i0 ^ $i2;

        return $i0;
    }

    private void unpackWord(int, byte[], int)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 = $i1 + 1;

        $i3 = $i0 >>> 24;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $i3 = $i0 >>> 16;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $i3 = $i0 >>> 8;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $b4 = (byte) $i0;

        $r1[$i2] = $b4;

        return;
    }

    public int doFinal(byte[], int)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        virtualinvoke $r0.<org.bouncycastle.crypto.digests.GeneralDigest: void finish()>();

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H1>;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void unpackWord(int,byte[],int)>($i1, $r1, $i0);

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H2>;

        $i2 = $i0 + 4;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void unpackWord(int,byte[],int)>($i1, $r1, $i2);

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H3>;

        $i2 = $i0 + 8;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void unpackWord(int,byte[],int)>($i1, $r1, $i2);

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H4>;

        $i2 = $i0 + 12;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void unpackWord(int,byte[],int)>($i1, $r1, $i2);

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H5>;

        $i0 = $i0 + 16;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void unpackWord(int,byte[],int)>($i1, $r1, $i0);

        virtualinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void reset()>();

        return 20;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        return "SHA-1";
    }

    public int getDigestSize()
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        return 20;
    }

    protected void processBlock()
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r1;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $i1 = 16;

     label01:
        if $i1 >= 80 goto label02;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i2 = $i1 - 3;

        $i2 = $r1[$i2];

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i0 = $i1 - 8;

        $i0 = $r1[$i0];

        $i2 = $i2 ^ $i0;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i0 = $i1 - 14;

        $i0 = $r1[$i0];

        $i2 = $i2 ^ $i0;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i0 = $i1 - 16;

        $i0 = $r1[$i0];

        $i0 = $i2 ^ $i0;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i2 = $i0 << 1;

        $i0 = $i0 >>> 31;

        $i2 = $i2 | $i0;

        $r1[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $i3 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H1>;

        $i4 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H2>;

        $i0 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H3>;

        $i2 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H4>;

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H5>;

        $i5 = 0;

        $i6 = 0;

     label03:
        if $i5 >= 4 goto label04;

        $i7 = $i3 << 5;

        $i8 = $i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int f(int,int,int)>($i4, $i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + 1518500249;

        $i1 = $i1 + $i6;

        $i6 = $i4 << 30;

        $i4 = $i4 >>> 2;

        $i4 = $i6 | $i4;

        $i6 = $i1 << 5;

        $i8 = $i1 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int f(int,int,int)>($i3, $i4, $i0);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1518500249;

        $i2 = $i2 + $i7;

        $i7 = $i3 << 30;

        $i3 = $i3 >>> 2;

        $i3 = $i7 | $i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int f(int,int,int)>($i1, $i3, $i4);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + 1518500249;

        $i0 = $i0 + $i6;

        $i6 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i1 = $i6 | $i1;

        $i6 = $i0 << 5;

        $i8 = $i0 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int f(int,int,int)>($i2, $i1, $i3);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1518500249;

        $i4 = $i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = $i4 << 5;

        $i8 = $i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int f(int,int,int)>($i0, $i2, $i1);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + 1518500249;

        $i3 = $i3 + $i6;

        $i6 = $i0 << 30;

        $i0 = $i0 >>> 2;

        $i0 = $i6 | $i0;

        $i5 = $i5 + 1;

        $i6 = $i7;

        goto label03;

     label04:
        $i5 = 0;

     label05:
        if $i5 >= 4 goto label06;

        $i7 = $i3 << 5;

        $i8 = $i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i4, $i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + 1859775393;

        $i1 = $i1 + $i6;

        $i6 = $i4 << 30;

        $i4 = $i4 >>> 2;

        $i4 = $i6 | $i4;

        $i6 = $i1 << 5;

        $i8 = $i1 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i3, $i4, $i0);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1859775393;

        $i2 = $i2 + $i7;

        $i7 = $i3 << 30;

        $i3 = $i3 >>> 2;

        $i3 = $i7 | $i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i1, $i3, $i4);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + 1859775393;

        $i0 = $i0 + $i6;

        $i6 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i1 = $i6 | $i1;

        $i6 = $i0 << 5;

        $i8 = $i0 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i2, $i1, $i3);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1859775393;

        $i4 = $i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = $i4 << 5;

        $i8 = $i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i0, $i2, $i1);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + 1859775393;

        $i3 = $i3 + $i6;

        $i6 = $i0 << 30;

        $i0 = $i0 >>> 2;

        $i0 = $i6 | $i0;

        $i5 = $i5 + 1;

        $i6 = $i7;

        goto label05;

     label06:
        $i5 = 0;

     label07:
        if $i5 >= 4 goto label08;

        $i7 = $i3 << 5;

        $i8 = $i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int g(int,int,int)>($i4, $i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + -1894007588;

        $i1 = $i1 + $i6;

        $i6 = $i4 << 30;

        $i4 = $i4 >>> 2;

        $i4 = $i6 | $i4;

        $i6 = $i1 << 5;

        $i8 = $i1 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int g(int,int,int)>($i3, $i4, $i0);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -1894007588;

        $i2 = $i2 + $i7;

        $i7 = $i3 << 30;

        $i3 = $i3 >>> 2;

        $i3 = $i7 | $i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int g(int,int,int)>($i1, $i3, $i4);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + -1894007588;

        $i0 = $i0 + $i6;

        $i6 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i1 = $i6 | $i1;

        $i6 = $i0 << 5;

        $i8 = $i0 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int g(int,int,int)>($i2, $i1, $i3);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -1894007588;

        $i4 = $i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = $i4 << 5;

        $i8 = $i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int g(int,int,int)>($i0, $i2, $i1);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + -1894007588;

        $i3 = $i3 + $i6;

        $i6 = $i0 << 30;

        $i0 = $i0 >>> 2;

        $i0 = $i6 | $i0;

        $i5 = $i5 + 1;

        $i6 = $i7;

        goto label07;

     label08:
        $i5 = 0;

     label09:
        if $i5 > 3 goto label10;

        $i7 = $i3 << 5;

        $i8 = $i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i4, $i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + -899497514;

        $i1 = $i1 + $i6;

        $i6 = $i4 << 30;

        $i4 = $i4 >>> 2;

        $i4 = $i6 | $i4;

        $i6 = $i1 << 5;

        $i8 = $i1 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i3, $i4, $i0);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -899497514;

        $i2 = $i2 + $i7;

        $i7 = $i3 << 30;

        $i3 = $i3 >>> 2;

        $i3 = $i7 | $i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i1, $i3, $i4);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + -899497514;

        $i0 = $i0 + $i6;

        $i6 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i1 = $i6 | $i1;

        $i6 = $i0 << 5;

        $i8 = $i0 >>> 27;

        $i6 = $i6 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i2, $i1, $i3);

        $i8 = $i6 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -899497514;

        $i4 = $i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = $i4 << 5;

        $i8 = $i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int h(int,int,int)>($i0, $i2, $i1);

        $i8 = $i7 + $i8;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i7 = $i6 + 1;

        $i6 = $r1[$i6];

        $i6 = $i8 + $i6;

        $i6 = $i6 + -899497514;

        $i3 = $i3 + $i6;

        $i6 = $i0 << 30;

        $i0 = $i0 >>> 2;

        $i0 = $i6 | $i0;

        $i5 = $i5 + 1;

        $i6 = $i7;

        goto label09;

     label10:
        $i5 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H1>;

        $i3 = $i5 + $i3;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H1> = $i3;

        $i3 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H2>;

        $i4 = $i3 + $i4;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H2> = $i4;

        $i4 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H3>;

        $i0 = $i4 + $i0;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H3> = $i0;

        $i0 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H4>;

        $i2 = $i0 + $i2;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H4> = $i2;

        $i2 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H5>;

        $i1 = $i2 + $i1;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H5> = $i1;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff> = 0;

        $i1 = 0;

     label11:
        if $i1 >= 16 goto label12;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $r1[$i1] = 0;

        $i1 = $i1 + 1;

        goto label11;

     label12:
        return;
    }

    protected void processLength(long)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        long $l0, $l2;
        int $i1;
        int[] $r1;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $l0 := @parameter0: long;

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff>;

        if $i1 <= 14 goto label1;

        virtualinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void processBlock()>();

     label1:
        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $l2 = $l0 >>> 32;

        $i1 = (int) $l2;

        $r1[14] = $i1;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $l0 = -1L & $l0;

        $i1 = (int) $l0;

        $r1[15] = $i1;

        return;
    }

    protected void processWord(byte[], int)
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i5;
        int[] $r2;
        byte $b3;
        short $s4;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff>;

        $i2 = $i1 + 1;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff> = $i2;

        $b3 = $r1[$i0];

        $s4 = $b3 & 255;

        $i2 = $s4 << 24;

        $i5 = $i0 + 1;

        $b3 = $r1[$i5];

        $s4 = $b3 & 255;

        $i5 = $s4 << 16;

        $i2 = $i2 | $i5;

        $i5 = $i0 + 2;

        $b3 = $r1[$i5];

        $s4 = $b3 & 255;

        $i5 = $s4 << 8;

        $i2 = $i2 | $i5;

        $i0 = $i0 + 3;

        $b3 = $r1[$i0];

        $s4 = $b3 & 255;

        $i0 = $i2 | $s4;

        $r2[$i1] = $i0;

        $i0 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff>;

        if $i0 != 16 goto label1;

        virtualinvoke $r0.<org.bouncycastle.crypto.digests.SHA1Digest: void processBlock()>();

        return;

     label1:
        return;
    }

    public void reset()
    {
        org.bouncycastle.crypto.digests.SHA1Digest $r0;
        int $i0, $i1;
        int[] $r1;

        $r0 := @this: org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r0.<org.bouncycastle.crypto.digests.GeneralDigest: void reset()>();

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H1> = 1732584193;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H2> = -271733879;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H3> = -1732584194;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H4> = 271733878;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int H5> = -1009589776;

        $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int xOff> = 0;

        $i0 = 0;

     label1:
        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label2;

        $r1 = $r0.<org.bouncycastle.crypto.digests.SHA1Digest: int[] X>;

        $r1[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.digests.SHA1Digest: int Y4> = -899497514;

        <org.bouncycastle.crypto.digests.SHA1Digest: int Y3> = -1894007588;

        <org.bouncycastle.crypto.digests.SHA1Digest: int Y2> = 1859775393;

        <org.bouncycastle.crypto.digests.SHA1Digest: int Y1> = 1518500249;

        <org.bouncycastle.crypto.digests.SHA1Digest: int DIGEST_LENGTH> = 20;

        return;
    }
}
