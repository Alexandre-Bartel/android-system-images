final class android.app.ApplicationContext$ApplicationPackageManager extends android.content.pm.PackageManager
{
    private static java.util.HashMap sIconCache;
    private static android.content.BroadcastReceiver sPackageRemovedReceiver;
    private static final java.lang.Object sPackageRemovedSync;
    private static java.util.HashMap sStringCache;
    private static final java.lang.Object sSync;
    int mCachedSafeMode;
    private final android.app.ApplicationContext mContext;
    private final android.content.pm.IPackageManager mPM;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.HashMap $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync> = $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sPackageRemovedSync> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sIconCache> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sStringCache> = $r1;

        return;
    }

    void <init>(android.app.ApplicationContext, android.content.pm.IPackageManager)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.app.ApplicationContext $r1;
        android.content.pm.IPackageManager $r2;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.app.ApplicationContext;

        $r2 := @parameter1: android.content.pm.IPackageManager;

        specialinvoke $r0.<android.content.pm.PackageManager: void <init>()>();

        $r0.<android.app.ApplicationContext$ApplicationPackageManager: int mCachedSafeMode> = -1;

        $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext> = $r1;

        $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM> = $r2;

        return;
    }

    static java.lang.Object access$200()
    {
        java.lang.Object r0;

        r0 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync>;

        return r0;
    }

    static java.util.HashMap access$300()
    {
        java.util.HashMap r0;

        r0 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sIconCache>;

        return r0;
    }

    static java.util.HashMap access$400()
    {
        java.util.HashMap r0;

        r0 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sStringCache>;

        return r0;
    }

    static void configurationChanged()
    {
        java.lang.Object $r0;
        java.util.HashMap $r1;
        java.lang.Throwable $r2;

        $r0 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor $r0;

     label1:
        $r1 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sIconCache>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r1 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sStringCache>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void establishPackageRemovedReceiver()
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.IntentFilter $r1;
        java.lang.Object $r2;
        android.content.BroadcastReceiver $r3;
        android.app.ApplicationContext$ApplicationPackageManager$PackageRemovedReceiver $r4;
        android.app.ApplicationContext $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r2 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sPackageRemovedSync>;

        entermonitor $r2;

     label1:
        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: android.content.BroadcastReceiver sPackageRemovedReceiver>;

        if $r3 != null goto label2;

        $r4 = new android.app.ApplicationContext$ApplicationPackageManager$PackageRemovedReceiver;

        specialinvoke $r4.<android.app.ApplicationContext$ApplicationPackageManager$PackageRemovedReceiver: void <init>(android.app.ApplicationContext$1)>(null);

        <android.app.ApplicationContext$ApplicationPackageManager: android.content.BroadcastReceiver sPackageRemovedReceiver> = $r4;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r5 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: android.content.BroadcastReceiver sPackageRemovedReceiver>;

        staticinvoke <android.app.ApplicationContext: android.content.Intent access$100(android.app.ApplicationContext,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,android.content.Context)>($r5, $r3, $r1, null, null, null);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationContext$ApplicationPackageManager$ResourceName)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r1;
        java.lang.Object $r2, $r4;
        java.util.HashMap $r3;
        java.lang.ref.WeakReference $r5;
        android.graphics.drawable.Drawable $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        $r2 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor $r2;

     label1:
        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sIconCache>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.lang.ref.WeakReference) $r4;

        if $r5 == null goto label4;

        $r4 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

        $r6 = (android.graphics.drawable.Drawable) $r4;

        if $r6 == null goto label3;

        exitmonitor $r2;

     label2:
        return $r6;

     label3:
        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sIconCache>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label4:
        exitmonitor $r2;

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.CharSequence getCachedString(android.app.ApplicationContext$ApplicationPackageManager$ResourceName)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r1;
        java.lang.Object $r2, $r4;
        java.util.HashMap $r3;
        java.lang.ref.WeakReference $r5;
        java.lang.CharSequence $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        $r2 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor $r2;

     label1:
        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sStringCache>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.lang.ref.WeakReference) $r4;

        if $r5 == null goto label4;

        $r4 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

        $r6 = (java.lang.CharSequence) $r4;

        if $r6 == null goto label3;

        exitmonitor $r2;

     label2:
        return $r6;

     label3:
        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sStringCache>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label4:
        exitmonitor $r2;

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.CharSequence getLabel(android.app.ApplicationContext$ApplicationPackageManager$ResourceName, android.content.pm.ApplicationInfo, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        java.lang.CharSequence $r3, $r4;
        android.content.res.Resources $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.RuntimeException $r9;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        $r2 := @parameter1: android.content.pm.ApplicationInfo;

        $i0 := @parameter2: int;

        $r3 = specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationContext$ApplicationPackageManager$ResourceName)>($r1);

        $r4 = $r3;

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r5 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r2);

        $r3 = virtualinvoke $r5.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        $r4 = $r3;

        specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: void putCachedString(android.app.ApplicationContext$ApplicationPackageManager$ResourceName,java.lang.CharSequence)>($r1, $r3);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r8 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r8);

        goto label2;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ApplicationInfo", "Failure retrieving activity name", $r9);

        goto label2;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    static android.content.Intent getLaunchIntentForPackageCategory(android.content.pm.PackageManager, java.lang.String, java.lang.String)
    {
        android.content.pm.PackageManager $r0;
        java.lang.String $r1, $r2;
        android.content.Intent $r3, $r4;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.content.pm.ResolveInfo $r8;
        android.content.pm.ActivityInfo $r9;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.MAIN", null);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>($r2);

        $r5 = virtualinvoke $r0.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r4, 0);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.content.pm.ResolveInfo) $r7;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r2 = $r9.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r2 = $r9.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;

     label2:
        return null;
    }

    private void putCachedIcon(android.app.ApplicationContext$ApplicationPackageManager$ResourceName, android.graphics.drawable.Drawable)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r1;
        android.graphics.drawable.Drawable $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        java.util.HashMap $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: void establishPackageRemovedReceiver()>();

        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor $r3;

     label1:
        $r5 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sIconCache>;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void putCachedString(android.app.ApplicationContext$ApplicationPackageManager$ResourceName, java.lang.CharSequence)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r1;
        java.lang.CharSequence $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        java.util.HashMap $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        $r2 := @parameter1: java.lang.CharSequence;

        specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: void establishPackageRemovedReceiver()>();

        $r3 = <android.app.ApplicationContext$ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor $r3;

     label1:
        $r5 = <android.app.ApplicationContext$ApplicationPackageManager: java.util.HashMap sStringCache>;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addPackageToPreferred(java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void addPackageToPreferred(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addPermission(android.content.pm.PermissionInfo)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.pm.PermissionInfo $r1;
        boolean $z0;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.pm.PermissionInfo;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $z0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>($r1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.IntentFilter $r1;
        int $i0;
        android.content.ComponentName[] $r2;
        android.content.ComponentName $r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.IntentFilter;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.ComponentName[];

        $r3 := @parameter3: android.content.ComponentName;

        $r4 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r4.<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>($r1, $i0, $r2, $r3);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkPermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1, $r2;
        int $i0;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkSignatures(java.lang.String, java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1, $r2;
        int $i0;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int checkSignatures(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDataObserver $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r3.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearPackagePreferredActivities(java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDataObserver $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r3.<android.content.pm.IPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDeleteObserver $r2;
        int $i0;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDeleteObserver;

        $i0 := @parameter2: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r3.<android.content.pm.IPackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>($r1, $r2, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void freeStorage(long, android.app.PendingIntent)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        long $l0;
        android.app.PendingIntent $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.app.PendingIntent;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void freeStorage(long,android.app.PendingIntent)>($l0, $r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        long $l0;
        android.content.pm.IPackageDataObserver $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.content.pm.IPackageDataObserver;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>($l0, $r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r1, 0);

        $r3 = virtualinvoke $r2.<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r0);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.Intent $r1;
        android.content.ComponentName $r2;
        android.graphics.drawable.Drawable $r3;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.ActivityInfo $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>($r2);

        return $r3;

     label1:
        $r4 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>($r1, 65536);

        if $r4 == null goto label2;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r3 = virtualinvoke $r5.<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r0);

        return $r3;

     label2:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke $r1.<android.content.Intent: java.lang.String toURI()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ActivityInfo $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r1, $i0);

     label2:
        if $r3 == null goto label4;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllPermissionGroups(int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        int $i0;
        java.util.List $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>($i0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getApplicationEnabledSetting(java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r2;
        android.graphics.drawable.Drawable $r3;
        android.content.res.Resources $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = $r1.<android.content.pm.PackageItemInfo: int icon>;

        if $i0 == 0 goto label4;

        $r2 = new android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        specialinvoke $r2.<android.app.ApplicationContext$ApplicationPackageManager$ResourceName: void <init>(android.content.pm.ApplicationInfo,int)>($r1, $i0);

        $r3 = specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationContext$ApplicationPackageManager$ResourceName)>($r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r1);

        $r3 = virtualinvoke $r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: void putCachedIcon(android.app.ApplicationContext$ApplicationPackageManager$ResourceName,android.graphics.drawable.Drawable)>($r2, $r3);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r7 = $r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

     label4:
        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>();

        return $r3;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Failure retrieving app icon", $r8);

        goto label4;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.ApplicationInfo $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 0);

        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        android.content.pm.ApplicationInfo $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, $i0);

     label2:
        if $r2 == null goto label4;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0;
        java.lang.CharSequence $r2;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r3;
        java.lang.String r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = $r1.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r2 == null goto label1;

        $r2 = $r1.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        return $r2;

     label1:
        $i0 = $r1.<android.content.pm.PackageItemInfo: int labelRes>;

        if $i0 == 0 goto label2;

        $r3 = new android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        specialinvoke $r3.<android.app.ApplicationContext$ApplicationPackageManager$ResourceName: void <init>(android.content.pm.ApplicationInfo,int)>($r1, $i0);

        $r2 = specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: java.lang.CharSequence getLabel(android.app.ApplicationContext$ApplicationPackageManager$ResourceName,android.content.pm.ApplicationInfo,int)>($r3, $r1, $i0);

        if $r2 == null goto label2;

        return $r2;

     label2:
        r4 = $r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        return r4;
    }

    public int getComponentEnabledSetting(android.content.ComponentName)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>($r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getDefaultActivityIcon()
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301651);

        return $r2;
    }

    public android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1, $r10;
        int $i0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r2;
        android.content.pm.ApplicationInfo $r3;
        android.graphics.drawable.Drawable $r4;
        android.content.res.Resources $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6, $r7;
        java.lang.StringBuilder $r8;
        java.lang.RuntimeException $r9;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 := @parameter2: android.content.pm.ApplicationInfo;

        $r2 = new android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        specialinvoke $r2.<android.app.ApplicationContext$ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>($r1, $i0);

        $r4 = specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationContext$ApplicationPackageManager$ResourceName)>($r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        if $r3 != null goto label3;

     label2:
        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 0);

     label3:
        $r5 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

        $r4 = virtualinvoke $r5.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: void putCachedIcon(android.app.ApplicationContext$ApplicationPackageManager$ResourceName,android.graphics.drawable.Drawable)>($r2, $r4);

     label4:
        return $r4;

     label5:
        $r6 := @caughtexception;

        return null;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r1 = $r3.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

     label7:
        return null;

     label8:
        $r9 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving icon 0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r1, $r9);

        goto label7;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label6;
        catch java.lang.RuntimeException from label3 to label4 with label8;
    }

    public java.util.List getInstalledApplications(int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        int $i0;
        java.util.List $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List getInstalledApplications(int)>($i0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getInstalledPackages(int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        int $i0;
        java.util.List $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List getInstalledPackages(int)>($i0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.content.pm.InstrumentationInfo $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>($r1, $i0);

     label2:
        if $r3 == null goto label4;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Intent getLaunchIntentForPackage(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.Intent $r2;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.app.ApplicationContext$ApplicationPackageManager: android.content.Intent getLaunchIntentForPackageCategory(android.content.pm.PackageManager,java.lang.String,java.lang.String)>($r0, $r1, "android.intent.category.INFO");

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r2 = staticinvoke <android.app.ApplicationContext$ApplicationPackageManager: android.content.Intent getLaunchIntentForPackageCategory(android.content.pm.PackageManager,java.lang.String,java.lang.String)>($r0, $r1, "android.intent.category.LAUNCHER");

        return $r2;
    }

    public java.lang.String getNameForUid(int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        int $i0;
        java.lang.String $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String getNameForUid(int)>($i0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int[] $r2;
        android.content.pm.IPackageManager $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String)>($r1);

     label2:
        if $r2 == null goto label5;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label4;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label5:
        return $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        android.content.pm.PackageInfo $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, $i0);

     label2:
        if $r2 == null goto label4;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageStatsObserver $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageStatsObserver;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r3.<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        int $i0;
        java.lang.String[] $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>($i0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        android.content.pm.PermissionGroupInfo $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>($r1, $i0);

     label2:
        if $r2 == null goto label4;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        android.content.pm.PermissionInfo $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>($r1, $i0);

     label2:
        if $r2 == null goto label4;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPreferredActivities(java.util.List, java.util.List, java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.util.List $r1, $r2;
        java.lang.String $r3;
        int $i0;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>($r1, $r2, $r3);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getPreferredPackages(int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        int $i0;
        java.util.List $r1;
        android.content.pm.IPackageManager $r2;
        java.util.ArrayList $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List getPreferredPackages(int)>($i0);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ActivityInfo $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>($r1, $i0);

     label2:
        if $r3 == null goto label4;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        android.content.pm.ActivityInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        android.content.res.Resources $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r1, 0);

        $r3 = $r2.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

        return $r4;
    }

    public android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.pm.ApplicationInfo $r1;
        java.lang.String $r2;
        boolean $z0;
        android.app.ApplicationContext $r3;
        android.app.ActivityThread $r4;
        android.content.res.Resources $r5;
        int $i0, $i1;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = $r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z0 == 0 goto label1;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

        $r4 = $r3.<android.app.ApplicationContext: android.app.ActivityThread mMainThread>;

        $r3 = virtualinvoke $r4.<android.app.ActivityThread: android.app.ApplicationContext getSystemContext()>();

        $r5 = virtualinvoke $r3.<android.app.ApplicationContext: android.content.res.Resources getResources()>();

        return $r5;

     label1:
        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

        $r4 = $r3.<android.app.ApplicationContext: android.app.ActivityThread mMainThread>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 != $i1 goto label3;

        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

     label2:
        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String)>($r2);

        if $r5 == null goto label4;

        return $r5;

     label3:
        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        goto label2;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r2);

        throw $r6;
    }

    public android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.ApplicationInfo $r2;
        android.content.res.Resources $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 0);

        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ServiceInfo $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>($r1, $i0);

     label2:
        if $r3 == null goto label4;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getSystemSharedLibraryNames()
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String[] $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1, $r10;
        int $i0;
        android.app.ApplicationContext$ApplicationPackageManager$ResourceName $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.CharSequence $r4;
        android.content.res.Resources $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6, $r7;
        java.lang.StringBuilder $r8;
        java.lang.RuntimeException $r9;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 := @parameter2: android.content.pm.ApplicationInfo;

        $r2 = new android.app.ApplicationContext$ApplicationPackageManager$ResourceName;

        specialinvoke $r2.<android.app.ApplicationContext$ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>($r1, $i0);

        $r4 = specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationContext$ApplicationPackageManager$ResourceName)>($r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        if $r3 != null goto label3;

     label2:
        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 0);

     label3:
        $r5 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

        $r4 = virtualinvoke $r5.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

        specialinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: void putCachedString(android.app.ApplicationContext$ApplicationPackageManager$ResourceName,java.lang.CharSequence)>($r2, $r4);

     label4:
        return $r4;

     label5:
        $r6 := @caughtexception;

        return null;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r1 = $r3.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

     label7:
        return null;

     label8:
        $r9 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving text 0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r1, $r9);

        goto label7;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label6;
        catch java.lang.RuntimeException from label3 to label4 with label8;
    }

    public int getUidForSharedUser(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int getUidForSharedUser(java.lang.String)>($r1);

     label2:
        if $i0 == -1 goto label4;

        return $i0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

     label4:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No shared userid for user:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1, $r8;
        int $i0;
        android.content.pm.ApplicationInfo $r2;
        android.content.res.Resources $r3;
        android.content.res.XmlResourceParser $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5, $r9;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.pm.ApplicationInfo;

        if $r2 != null goto label2;

     label1:
        $r2 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 0);

     label2:
        $r3 = virtualinvoke $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r2);

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        return null;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving xml 0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r1, $r6);

     label6:
        return null;

     label7:
        $r9 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r1 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        goto label6;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
    }

    public void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.net.Uri $r1;
        android.content.pm.IPackageInstallObserver $r2;
        int $i0;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        $i0 := @parameter2: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r3.<android.content.pm.IPackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int)>($r1, $r2, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSafeMode()
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        boolean $z0;
        int $i0;
        android.content.pm.IPackageManager $r1;
        byte $b1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $i0 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: int mCachedSafeMode>;

        if $i0 >= 0 goto label4;

        $r1 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $z0 = interfaceinvoke $r1.<android.content.pm.IPackageManager: boolean isSafeMode()>();

     label2:
        if $z0 == 0 goto label5;

        $b1 = 1;

     label3:
        $r0.<android.app.ApplicationContext$ApplicationPackageManager: int mCachedSafeMode> = $b1;

     label4:
        $i0 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: int mCachedSafeMode>;

        if $i0 == 0 goto label6;

        return 1;

     label5:
        $b1 = 0;

        goto label3;

     label6:
        return 0;

     label7:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label7;
    }

    public java.util.List queryBroadcastReceivers(android.content.Intent, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.Intent $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.app.ApplicationContext $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5;
        java.util.List $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

     label1:
        $r4 = virtualinvoke $r3.<android.app.ApplicationContext: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r4);

        $r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int)>($r1, $r5, $i0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r7);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryContentProviders(java.lang.String, int, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.List $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>($r1, $i0, $i1);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryInstrumentation(java.lang.String, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        java.util.List $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>($r1, $i0);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentActivities(android.content.Intent, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.Intent $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.app.ApplicationContext $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5;
        java.util.List $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

     label1:
        $r4 = virtualinvoke $r3.<android.app.ApplicationContext: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r4);

        $r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int)>($r1, $r5, $i0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r7);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        android.content.Intent[] $r2;
        android.content.Intent $r3, $r4;
        int $i0, $i1, $i2;
        android.app.ApplicationContext $r5;
        android.content.ContentResolver $r6;
        java.lang.String[] $r7;
        java.lang.String $r8;
        android.content.pm.IPackageManager $r9;
        java.util.List $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.content.Intent[];

        $r3 := @parameter2: android.content.Intent;

        $i0 := @parameter3: int;

        $r5 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

        $r6 = virtualinvoke $r5.<android.app.ApplicationContext: android.content.ContentResolver getContentResolver()>();

        $r7 = null;

        if $r2 == null goto label4;

        $i1 = lengthof $r2;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r4 = $r2[$i2];

        if $r4 == null goto label3;

        $r8 = virtualinvoke $r4.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        if $r8 == null goto label3;

        if $r7 != null goto label2;

        $r7 = newarray (java.lang.String)[$i1];

     label2:
        $r7[$i2] = $r8;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        $r9 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label5:
        $r8 = virtualinvoke $r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        $r10 = interfaceinvoke $r9.<android.content.pm.IPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int)>($r1, $r2, $r7, $r3, $r8, $i0);

     label6:
        return $r10;

     label7:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r11);

        throw $r12;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public java.util.List queryIntentServices(android.content.Intent, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.Intent $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.app.ApplicationContext $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5;
        java.util.List $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

     label1:
        $r4 = virtualinvoke $r3.<android.app.ApplicationContext: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r4);

        $r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int)>($r1, $r5, $i0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r7);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        java.util.List $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>($r1, $i0);

     label2:
        if $r2 == null goto label4;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePackageFromPreferred(java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void removePackageFromPreferred(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePermission(java.lang.String)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void removePermission(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.Intent $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.app.ApplicationContext $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5;
        android.content.pm.ResolveInfo $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

     label1:
        $r4 = virtualinvoke $r3.<android.app.ApplicationContext: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r4);

        $r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int)>($r1, $r5, $i0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r7);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0;
        android.content.pm.ProviderInfo $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r1, $i0);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.Intent $r1;
        int $i0;
        android.content.pm.IPackageManager $r2;
        android.app.ApplicationContext $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5;
        android.content.pm.ResolveInfo $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.app.ApplicationContext mContext>;

     label1:
        $r4 = virtualinvoke $r3.<android.app.ApplicationContext: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r4);

        $r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int)>($r1, $r5, $i0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", $r7);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setApplicationEnabledSetting(java.lang.String, int, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        java.lang.String $r1;
        int $i0, $i1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>($r1, $i0, $i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setComponentEnabledSetting(android.content.ComponentName, int, int)
    {
        android.app.ApplicationContext$ApplicationPackageManager $r0;
        android.content.ComponentName $r1;
        int $i0, $i1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        $r0 := @this: android.app.ApplicationContext$ApplicationPackageManager;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<android.app.ApplicationContext$ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

     label1:
        interfaceinvoke $r2.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>($r1, $i0, $i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
