public class com.android.internal.awt.AndroidImageDecoder extends org.apache.harmony.awt.gl.image.ImageDecoder
{
    private static final int NB_OF_LINES_PER_CHUNK;
    private static final int PNG_COLOR_TYPE_GRAY;
    private static final int PNG_COLOR_TYPE_GRAY_ALPHA;
    private static final int PNG_COLOR_TYPE_PLTE;
    private static final int PNG_COLOR_TYPE_RGB;
    private static final int PNG_COLOR_TYPE_RGBA;
    private static final int hintflags;
    int bitDepth;
    android.graphics.Bitmap bm;
    byte[] byteOut;
    byte[] cmap;
    int colorType;
    int dataElementsPerPixel;
    int imageHeight;
    int imageWidth;
    int[] intOut;
    java.awt.image.ColorModel model;
    boolean transferInts;

    public void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource, java.io.InputStream)
    {
        com.android.internal.awt.AndroidImageDecoder $r0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r1;
        java.io.InputStream $r2;

        $r0 := @this: com.android.internal.awt.AndroidImageDecoder;

        $r1 := @parameter0: org.apache.harmony.awt.gl.image.DecodingImageSource;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>($r1, $r2);

        $r0.<com.android.internal.awt.AndroidImageDecoder: int dataElementsPerPixel> = 1;

        return;
    }

    private java.awt.image.ColorModel createColorModel()
    {
        com.android.internal.awt.AndroidImageDecoder $r0;
        int $i0, $i1, $i3, $i4;
        byte[] $r1;
        java.lang.String $r3;
        android.graphics.Bitmap $r4;
        boolean $z0;
        byte $b2;
        java.awt.image.ColorModel $r5;
        java.awt.color.ColorSpace $r7;
        java.lang.IllegalArgumentException r8;
        java.awt.image.IndexColorModel r9;
        java.awt.image.DirectColorModel r10;
        java.lang.IllegalStateException r11;
        java.awt.image.ComponentColorModel r12;

        $r0 := @this: com.android.internal.awt.AndroidImageDecoder;

        $r0.<com.android.internal.awt.AndroidImageDecoder: byte[] cmap> = null;

        lookupswitch(5)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label06;
            case 5: goto label06;
            default: goto label01;
        };

     label01:
        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label02:
        $r0.<com.android.internal.awt.AndroidImageDecoder: int colorType> = 0;

        $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth> = 1;

     label03:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int colorType>;

        lookupswitch($i0)
        {
            case 0: goto label09;
            case 1: goto label04;
            case 2: goto label13;
            case 3: goto label15;
            case 4: goto label18;
            case 5: goto label04;
            case 6: goto label20;
            default: goto label04;
        };

     label04:
        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label05:
        $r0.<com.android.internal.awt.AndroidImageDecoder: int colorType> = 4;

        $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth> = 8;

        goto label03;

     label06:
        $r4 = $r0.<com.android.internal.awt.AndroidImageDecoder: android.graphics.Bitmap bm>;

        $z0 = virtualinvoke $r4.<android.graphics.Bitmap: boolean hasAlpha()>();

        if $z0 == 0 goto label08;

        $b2 = 6;

     label07:
        $r0.<com.android.internal.awt.AndroidImageDecoder: int colorType> = $b2;

        $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth> = 8;

        goto label03;

     label08:
        $b2 = 2;

        goto label07;

     label09:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 8 goto label10;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 4 goto label10;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 2 goto label10;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 1 goto label10;

        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label10:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        $i0 = 1 << $i0;

        $i1 = $i0 - 1;

        $i1 = 255 / $i1;

        $r1 = newarray (byte)[$i0];

        $i3 = 0;

     label11:
        if $i3 >= $i0 goto label12;

        $i4 = $i3 * $i1;

        $b2 = (byte) $i4;

        $r1[$i3] = $b2;

        $i3 = $i3 + 1;

        goto label11;

     label12:
        r9 = new java.awt.image.IndexColorModel;

        $i1 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        specialinvoke r9.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[])>($i1, $i0, $r1, $r1, $r1);

        $r0.<com.android.internal.awt.AndroidImageDecoder: boolean transferInts> = 0;

        return r9;

     label13:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 8 goto label14;

        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label14:
        r10 = new java.awt.image.DirectColorModel;

        specialinvoke r10.<java.awt.image.DirectColorModel: void <init>(int,int,int,int)>(24, 16711680, 65280, 255);

        $r0.<com.android.internal.awt.AndroidImageDecoder: boolean transferInts> = 1;

        return r10;

     label15:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 8 goto label16;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 4 goto label16;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 2 goto label16;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 1 goto label16;

        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label16:
        $r1 = $r0.<com.android.internal.awt.AndroidImageDecoder: byte[] cmap>;

        if $r1 != null goto label17;

        r11 = new java.lang.IllegalStateException;

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Palette color type is not supported");

        throw r11;

     label17:
        r9 = new java.awt.image.IndexColorModel;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        $r1 = $r0.<com.android.internal.awt.AndroidImageDecoder: byte[] cmap>;

        $i1 = lengthof $r1;

        $i1 = $i1 / 3;

        $r1 = $r0.<com.android.internal.awt.AndroidImageDecoder: byte[] cmap>;

        specialinvoke r9.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],int,boolean)>($i0, $i1, $r1, 0, 0);

        $r0.<com.android.internal.awt.AndroidImageDecoder: boolean transferInts> = 0;

        return r9;

     label18:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 8 goto label19;

        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label19:
        r12 = new java.awt.image.ComponentColorModel;

        $r7 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1003);

        specialinvoke r12.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r7, 1, 0, 3, 0);

        $r0.<com.android.internal.awt.AndroidImageDecoder: boolean transferInts> = 0;

        $r0.<com.android.internal.awt.AndroidImageDecoder: int dataElementsPerPixel> = 2;

        return r12;

     label20:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int bitDepth>;

        if $i0 == 8 goto label21;

        r8 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r8;

     label21:
        $r5 = staticinvoke <java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>();

        $r0.<com.android.internal.awt.AndroidImageDecoder: boolean transferInts> = 1;

        return $r5;
    }

    private void sendPixels(int)
    {
        com.android.internal.awt.AndroidImageDecoder $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        int[] $r1;
        android.graphics.Bitmap $r2;
        java.awt.image.ColorModel $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: com.android.internal.awt.AndroidImageDecoder;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageWidth>;

        $i2 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageHeight>;

        $i3 = 1;

        if $i0 <= 0 goto label1;

        if $i0 > $i2 goto label1;

        $i3 = $i0;

     label1:
        $z0 = $r0.<com.android.internal.awt.AndroidImageDecoder: boolean transferInts>;

        if $z0 == 0 goto label4;

        $i0 = $i1 * $i3;

        $r1 = newarray (int)[$i0];

        $r0.<com.android.internal.awt.AndroidImageDecoder: int[] intOut> = $r1;

        $i0 = 0;

     label2:
        if $i0 >= $i2 goto label5;

        if $i3 <= 1 goto label3;

        $i4 = $i2 - $i0;

        if $i4 >= $i3 goto label3;

        $i3 = $i2 - $i0;

     label3:
        $r2 = $r0.<com.android.internal.awt.AndroidImageDecoder: android.graphics.Bitmap bm>;

        $r1 = $r0.<com.android.internal.awt.AndroidImageDecoder: int[] intOut>;

        virtualinvoke $r2.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>($r1, 0, $i1, 0, $i0, $i1, $i3);

        $r3 = $r0.<com.android.internal.awt.AndroidImageDecoder: java.awt.image.ColorModel model>;

        $r1 = $r0.<com.android.internal.awt.AndroidImageDecoder: int[] intOut>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>(0, $i0, $i1, $i3, $r3, $r1, 0, $i1);

        $i0 = $i0 + $i3;

        goto label2;

     label4:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Byte transfer not supported");

        throw $r4;

     label5:
        return;
    }

    public void decodeImage() throws java.io.IOException
    {
        com.android.internal.awt.AndroidImageDecoder $r0;
        java.io.InputStream $r1;
        android.graphics.Bitmap $r2;
        java.io.IOException $r3;
        java.lang.Throwable $r4;
        int $i0, $i1;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.awt.image.ColorModel $r8;
        java.util.Hashtable $r9;

        $r0 := @this: com.android.internal.awt.AndroidImageDecoder;

     label01:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.io.InputStream inputStream>;

     label02:
        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r1);

     label03:
        $r0.<com.android.internal.awt.AndroidImageDecoder: android.graphics.Bitmap bm> = $r2;

        $r2 = $r0.<com.android.internal.awt.AndroidImageDecoder: android.graphics.Bitmap bm>;

        if $r2 != null goto label08;

     label04:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Input stream empty and no image cached");

        throw $r3;

     label05:
        $r3 := @caughtexception;

     label06:
        throw $r3;

     label07:
        $r4 := @caughtexception;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void closeStream()>();

        throw $r4;

     label08:
        $r2 = $r0.<com.android.internal.awt.AndroidImageDecoder: android.graphics.Bitmap bm>;

     label09:
        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

     label10:
        $r0.<com.android.internal.awt.AndroidImageDecoder: int imageWidth> = $i0;

     label11:
        $r2 = $r0.<com.android.internal.awt.AndroidImageDecoder: android.graphics.Bitmap bm>;

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

     label12:
        $r0.<com.android.internal.awt.AndroidImageDecoder: int imageHeight> = $i0;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageWidth>;

        if $i0 < 0 goto label13;

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageHeight>;

        if $i0 >= 0 goto label18;

     label13:
        $r5 = new java.lang.RuntimeException;

     label14:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal image size: ");

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageWidth>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageHeight>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

     label15:
        throw $r5;

     label16:
        $r5 := @caughtexception;

     label17:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void imageComplete(int)>(1);

        throw $r5;

     label18:
        $i0 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageWidth>;

        $i1 = $r0.<com.android.internal.awt.AndroidImageDecoder: int imageHeight>;

     label19:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setDimensions(int,int)>($i0, $i1);

        $r8 = specialinvoke $r0.<com.android.internal.awt.AndroidImageDecoder: java.awt.image.ColorModel createColorModel()>();

     label20:
        $r0.<com.android.internal.awt.AndroidImageDecoder: java.awt.image.ColorModel model> = $r8;

     label21:
        $r8 = $r0.<com.android.internal.awt.AndroidImageDecoder: java.awt.image.ColorModel model>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setColorModel(java.awt.image.ColorModel)>($r8);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setHints(int)>(22);

        $r9 = new java.util.Hashtable;

        specialinvoke $r9.<java.util.Hashtable: void <init>()>();

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setProperties(java.util.Hashtable)>($r9);

        specialinvoke $r0.<com.android.internal.awt.AndroidImageDecoder: void sendPixels(int)>(1);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void imageComplete(int)>(3);

     label22:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void closeStream()>();

        return;

        catch java.io.IOException from label02 to label03 with label05;
        catch java.io.IOException from label04 to label05 with label05;
        catch java.lang.RuntimeException from label01 to label05 with label16;
        catch java.lang.Throwable from label01 to label05 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.io.IOException from label09 to label10 with label05;
        catch java.io.IOException from label11 to label12 with label05;
        catch java.io.IOException from label14 to label15 with label05;
        catch java.lang.RuntimeException from label08 to label13 with label16;
        catch java.lang.RuntimeException from label14 to label16 with label16;
        catch java.lang.Throwable from label08 to label16 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
        catch java.io.IOException from label19 to label20 with label05;
        catch java.io.IOException from label21 to label22 with label05;
        catch java.lang.RuntimeException from label18 to label22 with label16;
        catch java.lang.Throwable from label18 to label22 with label07;
    }

    public static void <clinit>()
    {
        <com.android.internal.awt.AndroidImageDecoder: int hintflags> = 22;

        <com.android.internal.awt.AndroidImageDecoder: int PNG_COLOR_TYPE_RGBA> = 6;

        <com.android.internal.awt.AndroidImageDecoder: int PNG_COLOR_TYPE_RGB> = 2;

        <com.android.internal.awt.AndroidImageDecoder: int PNG_COLOR_TYPE_PLTE> = 3;

        <com.android.internal.awt.AndroidImageDecoder: int PNG_COLOR_TYPE_GRAY_ALPHA> = 4;

        <com.android.internal.awt.AndroidImageDecoder: int PNG_COLOR_TYPE_GRAY> = 0;

        <com.android.internal.awt.AndroidImageDecoder: int NB_OF_LINES_PER_CHUNK> = 1;

        return;
    }
}
