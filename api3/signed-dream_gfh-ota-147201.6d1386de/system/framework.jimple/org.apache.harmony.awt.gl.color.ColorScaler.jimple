public class org.apache.harmony.awt.gl.color.ColorScaler extends java.lang.Object
{
    private static final float MAX_SHORT;
    private static final float MAX_SIGNED_SHORT;
    private static final float MAX_XYZ;
    private float[] channelMinValues;
    private float[] channelMulipliers;
    private float[] invChannelMulipliers;
    boolean isTTypeIntegral;
    int nColorChannels;

    public void <init>()
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues> = null;

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers> = null;

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers> = null;

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels> = 0;

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral> = 0;

        return;
    }

    public void loadScalingData(java.awt.color.ColorSpace)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.color.ColorSpace $r1;
        int $i0, $i1;
        float[] $r2, $r3;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.color.ColorSpace;

        $i0 = virtualinvoke $r1.<java.awt.color.ColorSpace: int getNumComponents()>();

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues> = $r2;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers> = $r2;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers> = $r2;

        $i0 = 0;

     label1:
        $i1 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i0 >= $i1 goto label2;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f0 = virtualinvoke $r1.<java.awt.color.ColorSpace: float getMinValue(int)>($i0);

        $r2[$i0] = $f0;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f0 = virtualinvoke $r1.<java.awt.color.ColorSpace: float getMaxValue(int)>($i0);

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r3[$i0];

        $f0 = $f0 - $f1;

        $f0 = 65535.0F / $f0;

        $r2[$i0] = $f0;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f0 = virtualinvoke $r1.<java.awt.color.ColorSpace: float getMaxValue(int)>($i0);

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r3[$i0];

        $f0 = $f0 - $f1;

        $f0 = $f0 / 65535.0F;

        $r2[$i0] = $f0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void loadScalingData(java.awt.color.ICC_Profile)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.color.ICC_Profile $r1;
        float[] $r2, $r3, $r4;
        int $i0, $i1;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.color.ICC_Profile;

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral> = 0;

        $i0 = virtualinvoke $r1.<java.awt.color.ICC_Profile: int getNumComponents()>();

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r3 = newarray (float)[$i0];

        $i0 = virtualinvoke $r1.<java.awt.color.ICC_Profile: int getColorSpaceType()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label6;
            default: goto label1;
        };

     label1:
        $i0 = 0;

     label2:
        $i1 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i0 >= $i1 goto label4;

        $f0 = 0.0F;

        $r3[$i0] = $f0;

        $f0 = 1.06535322E9F;

        $r2[$i0] = $f0;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $f0 = 0.0F;

        $r3[0] = $f0;

        $f0 = 0.0F;

        $r3[1] = $f0;

        $f0 = 0.0F;

        $r3[2] = $f0;

        $f0 = 1.07374157E9F;

        $r2[0] = $f0;

        $f0 = 1.07374157E9F;

        $r2[1] = $f0;

        $f0 = 1.07374157E9F;

        $r2[2] = $f0;

     label4:
        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues> = $r3;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r3 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers> = $r3;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r3 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers> = $r3;

        $i0 = 0;

     label5:
        $i1 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i0 >= $i1 goto label7;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f0 = $r2[$i0];

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r4[$i0];

        $f0 = $f0 - $f1;

        $f0 = 65535.0F / $f0;

        $r3[$i0] = $f0;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f0 = $r2[$i0];

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r4[$i0];

        $f0 = $f0 - $f1;

        $f0 = $f0 / 65535.0F;

        $r3[$i0] = $f0;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $f0 = 0.0F;

        $r3[0] = $f0;

        $f0 = -1.02341018E9F;

        $r3[1] = $f0;

        $f0 = -1.02341018E9F;

        $r3[2] = $f0;

        $f0 = 1.12040346E9F;

        $r2[0] = $f0;

        $f0 = 1.1239424E9F;

        $r2[1] = $f0;

        $f0 = 1.1239424E9F;

        $r2[2] = $f0;

        goto label4;

     label7:
        return;
    }

    public void loadScalingData(java.awt.image.Raster, java.awt.color.ICC_Profile)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.image.Raster $r1;
        java.awt.color.ICC_Profile $r2;
        int $i0;
        boolean $z0;
        java.awt.image.SampleModel $r3;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.image.Raster;

        $r2 := @parameter1: java.awt.color.ICC_Profile;

        $i0 = virtualinvoke $r1.<java.awt.image.Raster: int getTransferType()>();

        if $i0 == 4 goto label2;

        $i0 = virtualinvoke $r1.<java.awt.image.Raster: int getTransferType()>();

        if $i0 == 5 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        virtualinvoke $r0.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.image.SampleModel)>($r3);

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        if $r2 == null goto label4;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ICC_Profile)>($r2);

        return;

     label4:
        return;
    }

    public void loadScalingData(java.awt.image.SampleModel)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.image.SampleModel $r1;
        float $f0, $f1;
        int $i0, $i1;
        float[] $r2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.image.SampleModel;

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral> = 1;

        $i0 = virtualinvoke $r1.<java.awt.image.SampleModel: int getNumBands()>();

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues> = $r2;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers> = $r2;

        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i0];

        $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers> = $r2;

        $i0 = virtualinvoke $r1.<java.awt.image.SampleModel: int getTransferType()>();

        if $i0 != 2 goto label4;

        $z0 = 1;

     label1:
        $i0 = 0;

     label2:
        $i1 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i0 >= $i1 goto label6;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f0 = 0.0F;

        $r2[$i0] = $f0;

        if $z0 == 0 goto label5;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f0 = 1.07374195E9F;

        $r2[$i0] = $f0;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f0 = 1.05696435E9F;

        $r2[$i0] = $f0;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $i1 = virtualinvoke $r1.<java.awt.image.SampleModel: int getSampleSize(int)>($i0);

        $i1 = 1 << $i1;

        $i1 = $i1 - 1;

        $f0 = (float) $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f1 = 65535.0F / $f0;

        $r2[$i0] = $f1;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f0 = $f0 / 65535.0F;

        $r2[$i0] = $f0;

        goto label3;

     label6:
        return;
    }

    public void scale(float[], short[], int)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        float[] $r1, $r3;
        short[] $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        short $s4;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: short[];

        $i0 := @parameter2: int;

        $i1 = 0;

     label1:
        $i2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i1 >= $i2 goto label2;

        $i2 = $i0 + $i1;

        $f0 = $r1[$i1];

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r3[$i1];

        $f0 = $f0 - $f1;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f1 = $r3[$i1];

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i3 = (int) $f0;

        $s4 = (short) $i3;

        $r2[$i2] = $s4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public short[] scale(java.awt.image.Raster)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.image.Raster $r1;
        short[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        float $f0, $f1;
        float[] $r3;
        short $s8;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.image.Raster;

        $i0 = virtualinvoke $r1.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke $r1.<java.awt.image.Raster: int getHeight()>();

        $i2 = $i0 * $i1;

        $i3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $i2 = $i2 * $i3;

        $r2 = newarray (short)[$i2];

        $i2 = 0;

        $z0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral>;

        if $z0 == 0 goto label06;

        $i3 = virtualinvoke $r1.<java.awt.image.Raster: int getMinX()>();

     label01:
        if $i3 >= $i0 goto label12;

        $i4 = virtualinvoke $r1.<java.awt.image.Raster: int getMinY()>();

     label02:
        if $i4 >= $i1 goto label05;

        $i5 = 0;

     label03:
        $i6 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i5 >= $i6 goto label04;

        $i7 = virtualinvoke $r1.<java.awt.image.Raster: int getSample(int,int,int)>($i3, $i4, $i5);

        $f0 = (float) $i7;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f1 = $r3[$i5];

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i7 = (int) $f0;

        $s8 = (short) $i7;

        $r2[$i2] = $s8;

        $i5 = $i5 + 1;

        $i2 = $i2 + 1;

        goto label03;

     label04:
        $i4 = $i4 + 1;

        goto label02;

     label05:
        $i3 = $i3 + 1;

        goto label01;

     label06:
        $i3 = virtualinvoke $r1.<java.awt.image.Raster: int getMinX()>();

     label07:
        if $i3 >= $i0 goto label13;

        $i4 = virtualinvoke $r1.<java.awt.image.Raster: int getMinY()>();

     label08:
        if $i4 >= $i1 goto label11;

        $i5 = 0;

     label09:
        $i6 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i5 >= $i6 goto label10;

        $f0 = virtualinvoke $r1.<java.awt.image.Raster: float getSampleFloat(int,int,int)>($i3, $i4, $i5);

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r3[$i5];

        $f0 = $f0 - $f1;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f1 = $r3[$i5];

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i7 = (int) $f0;

        $s8 = (short) $i7;

        $r2[$i2] = $s8;

        $i5 = $i5 + 1;

        $i2 = $i2 + 1;

        goto label09;

     label10:
        $i4 = $i4 + 1;

        goto label08;

     label11:
        $i3 = $i3 + 1;

        goto label07;

     label12:
        return $r2;

     label13:
        return $r2;
    }

    public float[][] scaleNormalize(java.awt.image.Raster)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.image.Raster $r1;
        float[] $r2, $r7;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        float[][] $r6;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.image.Raster;

        $i0 = virtualinvoke $r1.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke $r1.<java.awt.image.Raster: int getHeight()>();

        $i2 = $i0 * $i1;

        $i3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r3 = newarray (int)[2];

        $r3[0] = $i2;

        $r3[1] = $i3;

        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        $r6 = (float[][]) $r5;

        $i2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r2 = newarray (float)[$i2];

        $i2 = 0;

        $z0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral>;

        if $z0 == 0 goto label08;

        $i3 = 0;

     label01:
        $i4 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i3 >= $i4 goto label02;

        $r7 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMulipliers>;

        $f0 = $r7[$i3];

        $f0 = $f0 / 65535.0F;

        $r2[$i3] = $f0;

        $i3 = $i3 + 1;

        goto label01;

     label02:
        $i3 = virtualinvoke $r1.<java.awt.image.Raster: int getMinX()>();

     label03:
        if $i3 >= $i0 goto label14;

        $i4 = virtualinvoke $r1.<java.awt.image.Raster: int getMinY()>();

     label04:
        if $i4 >= $i1 goto label07;

        $i5 = 0;

     label05:
        $i6 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i5 >= $i6 goto label06;

        $i6 = virtualinvoke $r1.<java.awt.image.Raster: int getSample(int,int,int)>($i3, $i4, $i5);

        $r7 = $r6[$i2];

        $f1 = (float) $i6;

        $f0 = $r2[$i5];

        $f0 = $f1 * $f0;

        $r7[$i5] = $f0;

        $i5 = $i5 + 1;

        goto label05;

     label06:
        $i2 = $i2 + 1;

        $i4 = $i4 + 1;

        goto label04;

     label07:
        $i3 = $i3 + 1;

        goto label03;

     label08:
        $i3 = virtualinvoke $r1.<java.awt.image.Raster: int getMinX()>();

     label09:
        if $i3 >= $i0 goto label15;

        $i4 = virtualinvoke $r1.<java.awt.image.Raster: int getMinY()>();

     label10:
        if $i4 >= $i1 goto label13;

        $i5 = 0;

     label11:
        $i6 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i5 >= $i6 goto label12;

        $r2 = $r6[$i2];

        $f0 = virtualinvoke $r1.<java.awt.image.Raster: float getSampleFloat(int,int,int)>($i3, $i4, $i5);

        $r2[$i5] = $f0;

        $i5 = $i5 + 1;

        goto label11;

     label12:
        $i2 = $i2 + 1;

        $i4 = $i4 + 1;

        goto label10;

     label13:
        $i3 = $i3 + 1;

        goto label09;

     label14:
        return $r6;

     label15:
        return $r6;
    }

    public void unscale(float[], short[], int)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        float[] $r1, $r3;
        short[] $r2;
        int $i0, $i1, $i2;
        short $s3;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: short[];

        $i0 := @parameter2: int;

        $i1 = 0;

     label1:
        $i2 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i1 >= $i2 goto label2;

        $i2 = $i0 + $i1;

        $s3 = $r2[$i2];

        $i2 = $s3 & 65535;

        $f0 = (float) $i2;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f1 = $r3[$i1];

        $f0 = $f0 * $f1;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r3[$i1];

        $f0 = $f0 + $f1;

        $r1[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void unscale(short[], java.awt.image.WritableRaster)
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        short[] $r1;
        java.awt.image.WritableRaster $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        short $s7;
        float $f0, $f1;
        float[] $r3;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: java.awt.image.WritableRaster;

        $i0 = virtualinvoke $r2.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke $r2.<java.awt.image.Raster: int getHeight()>();

        $i2 = 0;

        $z0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral>;

        if $z0 == 0 goto label06;

        $i3 = virtualinvoke $r2.<java.awt.image.Raster: int getMinX()>();

     label01:
        if $i3 >= $i0 goto label12;

        $i4 = virtualinvoke $r2.<java.awt.image.Raster: int getMinY()>();

     label02:
        if $i4 >= $i1 goto label05;

        $i5 = 0;

     label03:
        $i6 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i5 >= $i6 goto label04;

        $i6 = $i2 + 1;

        $s7 = $r1[$i2];

        $i2 = $s7 & 65535;

        $f0 = (float) $i2;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f1 = $r3[$i5];

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        virtualinvoke $r2.<java.awt.image.WritableRaster: void setSample(int,int,int,int)>($i3, $i4, $i5, $i2);

        $i5 = $i5 + 1;

        $i2 = $i6;

        goto label03;

     label04:
        $i4 = $i4 + 1;

        goto label02;

     label05:
        $i3 = $i3 + 1;

        goto label01;

     label06:
        $i3 = virtualinvoke $r2.<java.awt.image.Raster: int getMinX()>();

     label07:
        if $i3 >= $i0 goto label13;

        $i4 = virtualinvoke $r2.<java.awt.image.Raster: int getMinY()>();

     label08:
        if $i4 >= $i1 goto label11;

        $i5 = 0;

     label09:
        $i6 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i5 >= $i6 goto label10;

        $i6 = $i2 + 1;

        $s7 = $r1[$i2];

        $i2 = $s7 & 65535;

        $f0 = (float) $i2;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f1 = $r3[$i5];

        $f0 = $f0 * $f1;

        $r3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] channelMinValues>;

        $f1 = $r3[$i5];

        $f0 = $f0 + $f1;

        virtualinvoke $r2.<java.awt.image.WritableRaster: void setSample(int,int,int,float)>($i3, $i4, $i5, $f0);

        $i5 = $i5 + 1;

        $i2 = $i6;

        goto label09;

     label10:
        $i4 = $i4 + 1;

        goto label08;

     label11:
        $i3 = $i3 + 1;

        goto label07;

     label12:
        return;

     label13:
        return;
    }

    public void unscaleNormalized(java.awt.image.WritableRaster, float[][])
    {
        org.apache.harmony.awt.gl.color.ColorScaler $r0;
        java.awt.image.WritableRaster $r1;
        float[][] $r2;
        float[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorScaler;

        $r1 := @parameter0: java.awt.image.WritableRaster;

        $r2 := @parameter1: float[][];

        $i1 = virtualinvoke $r1.<java.awt.image.Raster: int getWidth()>();

        $i2 = virtualinvoke $r1.<java.awt.image.Raster: int getHeight()>();

        $i3 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        $r3 = newarray (float)[$i3];

        $i3 = 0;

        $z0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: boolean isTTypeIntegral>;

        if $z0 == 0 goto label08;

        $i4 = 0;

     label01:
        $i5 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i4 >= $i5 goto label02;

        $r4 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: float[] invChannelMulipliers>;

        $f0 = $r4[$i4];

        $f0 = $f0 * 65535.0F;

        $r3[$i4] = $f0;

        $i4 = $i4 + 1;

        goto label01;

     label02:
        $i4 = virtualinvoke $r1.<java.awt.image.Raster: int getMinX()>();

     label03:
        if $i4 >= $i1 goto label14;

        $i5 = virtualinvoke $r1.<java.awt.image.Raster: int getMinY()>();

     label04:
        if $i5 >= $i2 goto label07;

        $i6 = 0;

     label05:
        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i6 >= $i0 goto label06;

        $r4 = $r2[$i3];

        $f0 = $r4[$i6];

        $f1 = $r3[$i6];

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        virtualinvoke $r1.<java.awt.image.WritableRaster: void setSample(int,int,int,int)>($i4, $i5, $i6, $i0);

        $i6 = $i6 + 1;

        goto label05;

     label06:
        $i3 = $i3 + 1;

        $i5 = $i5 + 1;

        goto label04;

     label07:
        $i4 = $i4 + 1;

        goto label03;

     label08:
        $i4 = virtualinvoke $r1.<java.awt.image.Raster: int getMinX()>();

     label09:
        if $i4 >= $i1 goto label15;

        $i5 = virtualinvoke $r1.<java.awt.image.Raster: int getMinY()>();

     label10:
        if $i5 >= $i2 goto label13;

        $i6 = 0;

     label11:
        $i0 = $r0.<org.apache.harmony.awt.gl.color.ColorScaler: int nColorChannels>;

        if $i6 >= $i0 goto label12;

        $r3 = $r2[$i3];

        $f0 = $r3[$i6];

        virtualinvoke $r1.<java.awt.image.WritableRaster: void setSample(int,int,int,float)>($i4, $i5, $i6, $f0);

        $i6 = $i6 + 1;

        goto label11;

     label12:
        $i3 = $i3 + 1;

        $i5 = $i5 + 1;

        goto label10;

     label13:
        $i4 = $i4 + 1;

        goto label09;

     label14:
        return;

     label15:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.awt.gl.color.ColorScaler: float MAX_XYZ> = 1.9999695F;

        <org.apache.harmony.awt.gl.color.ColorScaler: float MAX_SIGNED_SHORT> = 32767.0F;

        <org.apache.harmony.awt.gl.color.ColorScaler: float MAX_SHORT> = 65535.0F;

        return;
    }
}
