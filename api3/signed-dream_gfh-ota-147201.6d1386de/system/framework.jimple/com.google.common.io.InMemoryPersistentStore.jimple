public class com.google.common.io.InMemoryPersistentStore extends java.lang.Object implements com.google.common.io.PersistentStore
{
    private java.util.Hashtable blocks;
    private int nextWriteFailureCode;
    private final java.util.Hashtable prefs;

    public void <init>()
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.util.Hashtable $r1;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable prefs> = $r1;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks> = $r1;

        return;
    }

    private void checkFailure() throws com.google.common.io.PersistentStore$PersistentStoreException
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        int $i0;
        com.google.common.io.PersistentStore$PersistentStoreException $r1;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $i0 = $r0.<com.google.common.io.InMemoryPersistentStore: int nextWriteFailureCode>;

        if $i0 == 0 goto label1;

        $i0 = $r0.<com.google.common.io.InMemoryPersistentStore: int nextWriteFailureCode>;

        $r0.<com.google.common.io.InMemoryPersistentStore: int nextWriteFailureCode> = 0;

        $r1 = new com.google.common.io.PersistentStore$PersistentStoreException;

        specialinvoke $r1.<com.google.common.io.PersistentStore$PersistentStoreException: void <init>(java.lang.String,int)>("FORCED ERROR", $i0);

        throw $r1;

     label1:
        return;
    }

    public void clear()
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.util.Hashtable $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        virtualinvoke $r1.<java.util.Hashtable: void clear()>();

        $r1 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable prefs>;

        virtualinvoke $r1.<java.util.Hashtable: void clear()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clearPreferences()
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.util.Hashtable $r1;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable prefs>;

        virtualinvoke $r1.<java.util.Hashtable: void clear()>();

        return;
    }

    public void deleteAllBlocks(java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1, $r5;
        java.util.Hashtable $r2, $r6;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Throwable $r7;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r6 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        $r4 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

     label3:
        goto label2;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

     label5:
        $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks> = $r2;

     label6:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean deleteBlock(java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Hashtable $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r2 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void deleteBlockX(java.lang.String) throws com.google.common.io.PersistentStore$PersistentStoreException
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1;
        java.util.Hashtable $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getBlockSize(java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<com.google.common.io.InMemoryPersistentStore: int getDataSize(java.lang.String)>($r1);

        return $i0;
    }

    public int getDataSize(java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<com.google.common.io.InMemoryPersistentStore: byte[] readBlock(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        return $i0;

     label1:
        return -1;
    }

    public long getFreeSpace(java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        return -1L;
    }

    public java.lang.String[] listBlocks(java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1, $r6;
        java.util.Vector $r2;
        java.util.Hashtable $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Throwable $r7;
        int $i0;
        java.lang.String[] $r8;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r3 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Enumeration keys()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r6);

     label3:
        goto label2;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

     label5:
        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r8 = newarray (java.lang.String)[$i0];

        virtualinvoke $r2.<java.util.Vector: void copyInto(java.lang.Object[])>($r8);

     label6:
        exitmonitor $r0;

        return $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public byte[] readBlock(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        com.google.common.io.InMemoryPersistentStore $r3;
        byte[] $r4;

        $r3 := @this: com.google.common.io.InMemoryPersistentStore;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r3.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (byte[]) $r2;

        $r4 = (byte[]) $r4;

        return $r4;
    }

    public byte[] readPreference(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        com.google.common.io.InMemoryPersistentStore $r3;
        byte[] $r4;

        $r3 := @this: com.google.common.io.InMemoryPersistentStore;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r3.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable prefs>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (byte[]) $r2;

        $r4 = (byte[]) $r4;

        return $r4;
    }

    public void savePreferences()
    {
        com.google.common.io.InMemoryPersistentStore $r0;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        return;
    }

    public void setNextFailureCode(int)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.io.InMemoryPersistentStore: int nextWriteFailureCode> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setPreference(java.lang.String, byte[])
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.util.Hashtable $r3;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        if $r2 != null goto label2;

        $r3 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable prefs>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return 1;

     label2:
        $r3 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable prefs>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        goto label1;
    }

    public int writeBlock(byte[], java.lang.String)
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        byte[] $r1;
        java.lang.String $r2;
        java.util.Hashtable $r3;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

        if $r1 != null goto label5;

     label1:
        $r1 = newarray (byte)[0];

     label2:
        $r3 = $r0.<com.google.common.io.InMemoryPersistentStore: java.util.Hashtable blocks>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        $i0 = lengthof $r1;

     label3:
        exitmonitor $r0;

        return $i0;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label5:
        goto label2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public int writeBlockX(byte[], java.lang.String) throws com.google.common.io.PersistentStore$PersistentStoreException
    {
        com.google.common.io.InMemoryPersistentStore $r0;
        byte[] $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: com.google.common.io.InMemoryPersistentStore;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<com.google.common.io.InMemoryPersistentStore: int writeBlock(byte[],java.lang.String)>($r1, $r2);

        return $i0;
    }
}
