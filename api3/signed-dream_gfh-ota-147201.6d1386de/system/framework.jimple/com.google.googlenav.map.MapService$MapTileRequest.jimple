class com.google.googlenav.map.MapService$MapTileRequest extends com.google.googlenav.map.BaseTileRequest
{
    private boolean closed;
    private boolean isForeground;
    final com.google.googlenav.map.MapService this$0;
    private java.util.Vector tilePriorityList;
    private java.util.Vector tileSchedule;

    void <init>(com.google.googlenav.map.MapService)
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        com.google.googlenav.map.MapService $r1;
        int $i0;
        java.util.Vector $r2;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $r1 := @parameter0: com.google.googlenav.map.MapService;

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: com.google.googlenav.map.MapService this$0> = $r1;

        $i0 = staticinvoke <com.google.googlenav.map.MapService: int access$000(com.google.googlenav.map.MapService)>($r1);

        specialinvoke $r0.<com.google.googlenav.map.BaseTileRequest: void <init>(int)>($i0);

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule> = $r2;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tilePriorityList> = $r2;

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: boolean isForeground> = 1;

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: boolean closed> = 0;

        return;
    }

    protected void handleEndOfResponse(int)
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        int $i0;
        java.util.Vector $r1, $r3;
        java.util.Hashtable $r2;
        com.google.googlenav.map.MapService $r4;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $i0 := @parameter0: int;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        $r1 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        staticinvoke <com.google.common.util.ArrayUtil: void copyIntoVector(java.util.Vector,int,java.util.Vector)>($r1, $i0, $r3);

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule> = $r3;

        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: com.google.googlenav.map.MapService this$0>;

        $r2 = staticinvoke <com.google.googlenav.map.MapService: java.util.Hashtable access$100(com.google.googlenav.map.MapService)>($r4);

        virtualinvoke $r2.<java.util.Hashtable: void clear()>();

        return;
    }

    public boolean isForeground()
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        boolean z0;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        z0 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: boolean isForeground>;

        return z0;
    }

    protected boolean processDownloadedTile(int, com.google.googlenav.map.Tile, byte[])
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        int $i0;
        com.google.googlenav.map.Tile $r1, $r8;
        byte[] $r2;
        long $l1, $l2;
        java.util.Vector $r3;
        java.lang.Object $r4;
        com.google.googlenav.map.MapTile $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0;
        com.google.googlenav.map.MapService $r9;
        com.google.googlenav.map.MapTileStorage $r10;
        com.google.common.ui.RepaintListener $r11;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.googlenav.map.Tile;

        $r2 := @parameter2: byte[];

        $r3 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r5 = (com.google.googlenav.map.MapTile) $r4;

        if $r5 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No MapTile found for ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r7);

     label1:
        return 0;

     label2:
        $r8 = virtualinvoke $r5.<com.google.googlenav.map.MapTile: com.google.googlenav.map.Tile getLocation()>();

        $z0 = virtualinvoke $r8.<com.google.googlenav.map.Tile: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        virtualinvoke $r5.<com.google.googlenav.map.MapTile: void setData(byte[])>($r2);

        $l2 = virtualinvoke $r5.<com.google.googlenav.map.MapTile: long getLastAccessTime()>();

        $l1 = (long) $i0;

        $l1 = $l2 - $l1;

        virtualinvoke $r5.<com.google.googlenav.map.MapTile: void setLastAccessTime(long)>($l1);

        $r9 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: com.google.googlenav.map.MapService this$0>;

        $r10 = $r9.<com.google.googlenav.map.MapService: com.google.googlenav.map.MapTileStorage flashService>;

        interfaceinvoke $r10.<com.google.googlenav.map.MapTileStorage: void tileDownloaded(com.google.googlenav.map.MapTile)>($r5);

        $r9 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: com.google.googlenav.map.MapService this$0>;

        $r11 = staticinvoke <com.google.googlenav.map.MapService: com.google.common.ui.RepaintListener access$200(com.google.googlenav.map.MapService)>($r9);

        if $r11 == null goto label1;

        $r9 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: com.google.googlenav.map.MapService this$0>;

        $r11 = staticinvoke <com.google.googlenav.map.MapService: com.google.common.ui.RepaintListener access$200(com.google.googlenav.map.MapService)>($r9);

        interfaceinvoke $r11.<com.google.common.ui.RepaintListener: void repaint()>();

        goto label1;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tile out of order ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r7);

        return 1;
    }

    public boolean readResponseData(java.io.DataInput) throws java.io.IOException
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        java.io.DataInput $r1;
        int $i0;
        java.util.Vector $r2;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $r1 := @parameter0: java.io.DataInput;

        specialinvoke $r0.<com.google.googlenav.map.BaseTileRequest: boolean readResponseData(java.io.DataInput)>($r1);

        $r2 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean requestImmediately()
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        return 1;
    }

    void requestTile(com.google.googlenav.map.MapTile, int)
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        com.google.googlenav.map.MapTile $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.RuntimeException $r2;
        java.lang.Throwable $r3;
        java.util.Vector $r4;
        java.lang.StringBuilder $r5;
        com.google.googlenav.map.Tile $r6;
        java.lang.String $r7;
        java.lang.Object $r8;
        java.lang.Integer $r9;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $r1 := @parameter0: com.google.googlenav.map.MapTile;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label01:
        $z0 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: boolean closed>;

        if $z0 == 0 goto label03;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Adding tiles to closed request!");

        throw $r2;

     label02:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label03:
        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $i1 = virtualinvoke $r4.<java.util.Vector: int indexOf(java.lang.Object)>($r1);

        if $i1 == -1 goto label05;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting duplicate tile: ");

        $r6 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: com.google.googlenav.map.Tile getLocation()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r7);

     label04:
        exitmonitor $r0;

        return;

     label05:
        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $i1 = virtualinvoke $r4.<java.util.Vector: int size()>();

     label06:
        if $i1 <= 0 goto label07;

        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tilePriorityList>;

        $i2 = $i1 - 1;

        $r8 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r9 = (java.lang.Integer) $r8;

        $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if $i0 < $i2 goto label10;

        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        virtualinvoke $r4.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r1, $i1);

        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tilePriorityList>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r9, $i1);

     label07:
        if $i1 != 0 goto label08;

        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        virtualinvoke $r4.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r1, 0);

        $r4 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tilePriorityList>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r9, 0);

     label08:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Download ");

        $r6 = virtualinvoke $r1.<com.google.googlenav.map.MapTile: com.google.googlenav.map.Tile getLocation()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("MAP", $r7);

     label09:
        goto label04;

     label10:
        $i1 = $i1 + -1;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label09 with label02;
    }

    public void setForeground(boolean)
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        boolean $z0;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $z0 := @parameter0: boolean;

        $r0.<com.google.googlenav.map.MapService$MapTileRequest: boolean isForeground> = $z0;

        return;
    }

    protected void setTileEdition(int)
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        int $i0;
        com.google.googlenav.map.MapService $r1;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: com.google.googlenav.map.MapService this$0>;

        virtualinvoke $r1.<com.google.googlenav.map.MapService: void setTileEdition(int)>($i0);

        return;
    }

    public void writeRequestData(java.io.DataOutput) throws java.io.IOException
    {
        com.google.googlenav.map.MapService$MapTileRequest $r0;
        java.io.DataOutput $r1;
        com.google.googlenav.map.Tile[] $r2;
        java.util.Vector $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        com.google.googlenav.map.MapTile $r5;
        com.google.googlenav.map.Tile $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.google.googlenav.map.MapService$MapTileRequest;

        $r1 := @parameter0: java.io.DataOutput;

        entermonitor $r0;

     label1:
        $r0.<com.google.googlenav.map.MapService$MapTileRequest: boolean closed> = 1;

        exitmonitor $r0;

     label2:
        $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tilePriorityList> = null;

        $r3 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $r2 = newarray (com.google.googlenav.map.Tile)[$i0];

        $i0 = 0;

     label3:
        $r3 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label7;

        $r3 = $r0.<com.google.googlenav.map.MapService$MapTileRequest: java.util.Vector tileSchedule>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r5 = (com.google.googlenav.map.MapTile) $r4;

        $r6 = virtualinvoke $r5.<com.google.googlenav.map.MapTile: com.google.googlenav.map.Tile getLocation()>();

        $r2[$i0] = $r6;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r7;

     label7:
        virtualinvoke $r0.<com.google.googlenav.map.BaseTileRequest: void writeRequestForTiles(com.google.googlenav.map.Tile[],java.io.DataOutput)>($r2, $r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
