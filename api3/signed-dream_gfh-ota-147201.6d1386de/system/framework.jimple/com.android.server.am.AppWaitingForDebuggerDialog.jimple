class com.android.server.am.AppWaitingForDebuggerDialog extends com.android.server.am.BaseErrorDialog
{
    private java.lang.CharSequence mAppName;
    private final android.os.Handler mHandler;
    final com.android.server.am.ProcessRecord mProc;
    final com.android.server.am.ActivityManagerService mService;

    public void <init>(com.android.server.am.ActivityManagerService, android.content.Context, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.AppWaitingForDebuggerDialog $r0;
        com.android.server.am.ActivityManagerService $r1;
        android.content.Context $r2;
        com.android.server.am.ProcessRecord $r3;
        java.lang.StringBuilder $r4;
        com.android.server.am.AppWaitingForDebuggerDialog$1 $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.CharSequence $r8;
        int $i0;
        java.lang.String $r9;
        android.os.Handler $r10;
        android.os.Message $r11;
        android.view.Window $r12;

        $r0 := @this: com.android.server.am.AppWaitingForDebuggerDialog;

        $r1 := @parameter0: com.android.server.am.ActivityManagerService;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: com.android.server.am.ProcessRecord;

        specialinvoke $r0.<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>($r2);

        $r5 = new com.android.server.am.AppWaitingForDebuggerDialog$1;

        specialinvoke $r5.<com.android.server.am.AppWaitingForDebuggerDialog$1: void <init>(com.android.server.am.AppWaitingForDebuggerDialog)>($r0);

        $r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.os.Handler mHandler> = $r5;

        $r0.<com.android.server.am.AppWaitingForDebuggerDialog: com.android.server.am.ActivityManagerService mService> = $r1;

        $r0.<com.android.server.am.AppWaitingForDebuggerDialog: com.android.server.am.ProcessRecord mProc> = $r3;

        $r6 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = $r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r8 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r7);

        $r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName> = $r8;

        virtualinvoke $r0.<android.app.Dialog: void setCancelable(boolean)>(0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r8 = $r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        if $r8 == null goto label2;

        $r8 = $r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        $i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r8 = $r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (process ");

        $r9 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label1:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is waiting for the debugger to attach.");

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>($r9);

        $r10 = $r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.os.Handler mHandler>;

        $r11 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r3);

        virtualinvoke $r0.<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>("Force Close", $r11);

        virtualinvoke $r0.<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>("Waiting For Debugger");

        $r12 = virtualinvoke $r0.<android.app.Dialog: android.view.Window getWindow()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting For Debugger: ");

        $r7 = $r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = $r7.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<android.view.Window: void setTitle(java.lang.CharSequence)>($r9);

        return;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r9 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        goto label1;
    }

    public void onStop()
    {
        com.android.server.am.AppWaitingForDebuggerDialog $r0;

        $r0 := @this: com.android.server.am.AppWaitingForDebuggerDialog;

        return;
    }
}
