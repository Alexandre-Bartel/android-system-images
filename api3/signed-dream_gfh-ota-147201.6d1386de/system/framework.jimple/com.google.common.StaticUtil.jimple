public final class com.google.common.StaticUtil extends java.lang.Object
{
    private static final int BOOLEAN_CLASS;
    private static final int EMERGENCY_MEMORY_SIZE;
    private static final int INTEGER_CLASS;
    private static boolean IS_REGISTER_OUT_OF_MEMORY_HANDLER;
    private static final int LONG_CLASS;
    public static final int RECORD_STORE_FULL;
    public static final int RECORD_STORE_WRITE_FAILED;
    private static final int STRING_CLASS;
    private static byte[] emergencyMemory;
    private static final java.util.Vector outOfMemoryHandlers;

    static void <clinit>()
    {
        java.util.Vector $r0;

        <com.google.common.StaticUtil: int STRING_CLASS> = 3;

        <com.google.common.StaticUtil: int RECORD_STORE_WRITE_FAILED> = -1;

        <com.google.common.StaticUtil: int RECORD_STORE_FULL> = -2;

        <com.google.common.StaticUtil: int LONG_CLASS> = 2;

        <com.google.common.StaticUtil: int INTEGER_CLASS> = 1;

        <com.google.common.StaticUtil: int EMERGENCY_MEMORY_SIZE> = 4096;

        <com.google.common.StaticUtil: int BOOLEAN_CLASS> = 0;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        <com.google.common.StaticUtil: java.util.Vector outOfMemoryHandlers> = $r0;

        <com.google.common.StaticUtil: boolean IS_REGISTER_OUT_OF_MEMORY_HANDLER> = 1;

        staticinvoke <com.google.common.StaticUtil: void allocateEmergencyMemory()>();

        return;
    }

    private void <init>()
    {
        com.google.common.StaticUtil $r0;

        $r0 := @this: com.google.common.StaticUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void allocateEmergencyMemory()
    {
        byte[] $r0;
        java.lang.OutOfMemoryError $r1;

        $r0 = <com.google.common.StaticUtil: byte[] emergencyMemory>;

        if $r0 == null goto label4;

        staticinvoke <java.lang.System: void gc()>();

     label1:
        $r0 = newarray (byte)[4096];

        <com.google.common.StaticUtil: byte[] emergencyMemory> = $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        return;

     label4:
        return;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public static boolean deleteRecordStore(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.io.PersistentStore $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        $z0 = interfaceinvoke $r1.<com.google.common.io.PersistentStore: boolean deleteBlock(java.lang.String)>($r0);

        return $z0;
    }

    private static com.google.common.io.PersistentStore getPersistentStore()
    {
        com.google.common.Config $r0;
        com.google.common.io.PersistentStore $r1;

        $r0 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r1 = virtualinvoke $r0.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        return $r1;
    }

    public static int getSystemPropertyAsInt(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.lang.NumberFormatException $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r0);

        if $r0 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, $i0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

     label4:
        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void handleOutOfMemory()
    {
        java.io.PrintStream $r0;
        int $i0, $i1;
        java.util.Vector $r1;
        java.lang.Object $r2;
        com.google.common.OutOfMemoryHandler $r3;

        <com.google.common.StaticUtil: byte[] emergencyMemory> = null;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("OutOfMemory");

        $i0 = 0;

     label1:
        $r1 = <com.google.common.StaticUtil: java.util.Vector outOfMemoryHandlers>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = <com.google.common.StaticUtil: java.util.Vector outOfMemoryHandlers>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (com.google.common.OutOfMemoryHandler) $r2;

        interfaceinvoke $r3.<com.google.common.OutOfMemoryHandler: void handleOutOfMemory()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <com.google.common.StaticUtil: void allocateEmergencyMemory()>();

        return;
    }

    public static boolean isEmergencyMemoryAvailable()
    {
        byte[] $r0;

        $r0 = <com.google.common.StaticUtil: byte[] emergencyMemory>;

        if $r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.util.Hashtable loadPropertiesFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r3;
        java.io.DataInputStream $r1;
        java.util.Hashtable $r2;
        java.lang.Class $r4;
        java.io.InputStream $r5;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r3 = "";

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r0);

        if $r5 == null goto label3;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        $r1 = new java.io.DataInputStream;

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r5);

        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r0 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r3 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

        return $r2;

     label3:
        return null;
    }

    public static java.io.DataInput readBlockAsDataInput(com.google.common.io.PersistentStore, java.lang.String)
    {
        com.google.common.io.PersistentStore $r0;
        java.lang.String $r1;
        java.io.DataInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        byte[] $r4;

        $r0 := @parameter0: com.google.common.io.PersistentStore;

        $r1 := @parameter1: java.lang.String;

        $r4 = interfaceinvoke $r0.<com.google.common.io.PersistentStore: byte[] readBlock(java.lang.String)>($r1);

        if $r4 != null goto label1;

        return null;

     label1:
        $r2 = new java.io.DataInputStream;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

        return $r2;
    }

    public static java.io.DataInput readBlockAsDataInput(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.io.PersistentStore $r1;
        java.io.DataInput $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        $r2 = staticinvoke <com.google.common.StaticUtil: java.io.DataInput readBlockAsDataInput(com.google.common.io.PersistentStore,java.lang.String)>($r1, $r0);

        return $r2;
    }

    public static byte[] readOneRecordRms(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.io.PersistentStore $r1;
        byte[] $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "com/google/common/StaticUtil";

     label1:
        $r1 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        $r2 = interfaceinvoke $r1.<com.google.common.io.PersistentStore: byte[] readBlock(java.lang.String)>($r0);

     label2:
        exitmonitor class "com/google/common/StaticUtil";

        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "com/google/common/StaticUtil";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.io.DataInput readOneRecordRmsAsDataInput(java.lang.String)
    {
        java.lang.String $r0;
        java.io.DataInput $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "com/google/common/StaticUtil";

     label1:
        $r1 = staticinvoke <com.google.common.StaticUtil: java.io.DataInput readBlockAsDataInput(java.lang.String)>($r0);

     label2:
        exitmonitor class "com/google/common/StaticUtil";

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "com/google/common/StaticUtil";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static byte[] readPreference(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.io.PersistentStore $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        $r2 = interfaceinvoke $r1.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>($r0);

        return $r2;
    }

    public static boolean readPreferenceAsBoolean(java.lang.String, boolean)
    {
        boolean $z0;
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.Boolean $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.google.common.StaticUtil: java.lang.Object readPreferenceAsObject(java.lang.String,int)>($r0, 0);

        if $r1 == null goto label1;

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return $z0;
    }

    public static java.io.DataInput readPreferenceAsDataInput(java.lang.String)
    {
        java.lang.String $r0;
        java.io.DataInputStream $r1;
        java.io.ByteArrayInputStream $r2;
        com.google.common.io.PersistentStore $r3;
        byte[] $r4;

        $r0 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        $r4 = interfaceinvoke $r3.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>($r0);

        if $r4 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.DataInputStream;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        return $r1;
    }

    public static int readPreferenceAsInt(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.common.StaticUtil: java.lang.Object readPreferenceAsObject(java.lang.String,int)>($r0, 1);

        if $r1 == null goto label1;

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return $i0;
    }

    public static long readPreferenceAsLong(java.lang.String, long)
    {
        long $l0;
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.Long $r2;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r1 = staticinvoke <com.google.common.StaticUtil: java.lang.Object readPreferenceAsObject(java.lang.String,int)>($r0, 2);

        if $r1 == null goto label1;

        $r2 = (java.lang.Long) $r1;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;

     label1:
        return $l0;
    }

    private static java.lang.Object readPreferenceAsObject(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.io.DataInput $r1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3;
        java.io.IOException $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Integer $r6;
        java.lang.Long $r7;
        long $l1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.common.StaticUtil: java.io.DataInput readPreferenceAsDataInput(java.lang.String)>($r0);

        if $r1 != null goto label01;

        return null;

     label01:
        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label08;
            case 2: goto label10;
            case 3: goto label12;
            default: goto label02;
        };

     label02:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad class: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

     label04:
        throw $r2;

     label05:
        $r4 := @caughtexception;

        return null;

     label06:
        $r5 = new java.lang.Boolean;

        $z0 = interfaceinvoke $r1.<java.io.DataInput: boolean readBoolean()>();

        specialinvoke $r5.<java.lang.Boolean: void <init>(boolean)>($z0);

     label07:
        return $r5;

     label08:
        $r6 = new java.lang.Integer;

        $i0 = interfaceinvoke $r1.<java.io.DataInput: int readInt()>();

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i0);

     label09:
        return $r6;

     label10:
        $r7 = new java.lang.Long;

        $l1 = interfaceinvoke $r1.<java.io.DataInput: long readLong()>();

        specialinvoke $r7.<java.lang.Long: void <init>(long)>($l1);

     label11:
        return $r7;

     label12:
        $r0 = interfaceinvoke $r1.<java.io.DataInput: java.lang.String readUTF()>();

     label13:
        return $r0;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label06 to label07 with label05;
        catch java.io.IOException from label08 to label09 with label05;
        catch java.io.IOException from label10 to label11 with label05;
        catch java.io.IOException from label12 to label13 with label05;
    }

    public static java.lang.String readPreferenceAsString(java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.common.StaticUtil: java.lang.Object readPreferenceAsObject(java.lang.String,int)>($r1, 3);

        $r1 = (java.lang.String) $r0;

        return $r1;
    }

    public static void registerOutOfMemoryHandler(com.google.common.OutOfMemoryHandler)
    {
        com.google.common.OutOfMemoryHandler $r0;
        boolean $z0;
        java.util.Vector $r1;

        $r0 := @parameter0: com.google.common.OutOfMemoryHandler;

        $z0 = <com.google.common.StaticUtil: boolean IS_REGISTER_OUT_OF_MEMORY_HANDLER>;

        if $z0 == 0 goto label1;

        $r1 = <com.google.common.StaticUtil: java.util.Vector outOfMemoryHandlers>;

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r0);

        return;

     label1:
        return;
    }

    public static void removeOutOfMemoryHandler(com.google.common.OutOfMemoryHandler)
    {
        com.google.common.OutOfMemoryHandler $r0;
        java.util.Vector $r1;

        $r0 := @parameter0: com.google.common.OutOfMemoryHandler;

        $r1 = <com.google.common.StaticUtil: java.util.Vector outOfMemoryHandlers>;

        virtualinvoke $r1.<java.util.Vector: boolean removeElement(java.lang.Object)>($r0);

        return;
    }

    public static void savePreferenceAsBoolean(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.Boolean $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>($z0);

        staticinvoke <com.google.common.StaticUtil: void savePreferenceAsObject(java.lang.String,java.lang.Object)>($r0, $r1);

        return;
    }

    public static void savePreferenceAsInt(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.lang.Integer $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i0);

        staticinvoke <com.google.common.StaticUtil: void savePreferenceAsObject(java.lang.String,java.lang.Object)>($r0, $r1);

        return;
    }

    public static void savePreferenceAsLong(java.lang.String, long)
    {
        java.lang.String $r0;
        long $l0;
        java.lang.Long $r1;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r1 = new java.lang.Long;

        specialinvoke $r1.<java.lang.Long: void <init>(long)>($l0);

        staticinvoke <com.google.common.StaticUtil: void savePreferenceAsObject(java.lang.String,java.lang.Object)>($r0, $r1);

        return;
    }

    private static void savePreferenceAsObject(java.lang.String, java.lang.Object)
    {
        java.lang.String $r0, $r10;
        java.lang.Object $r1;
        com.google.common.Config $r2;
        com.google.common.io.PersistentStore $r3;
        java.io.ByteArrayOutputStream $r4;
        java.io.DataOutputStream $r5;
        boolean $z0;
        java.lang.Boolean $r6;
        byte[] $r7;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Integer $r11;
        int $i0;
        java.lang.Long $r12;
        long $l1;
        java.lang.IllegalArgumentException $r13;
        java.lang.Class $r14;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r3 = virtualinvoke $r2.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        if $r1 != null goto label01;

        interfaceinvoke $r3.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>($r0, null);

        return;

     label01:
        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = new java.io.DataOutputStream;

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r4);

        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label06;

        $r6 = (java.lang.Boolean) $r1;

     label02:
        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r5.<java.io.DataOutput: void writeBoolean(boolean)>($z0);

     label03:
        $r7 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r3.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>($r0, $r7);

     label04:
        return;

     label05:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void logQuietThrowable(java.lang.String,java.lang.Throwable)>($r0, $r8);

        return;

     label06:
        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label08;

        $r10 = (java.lang.String) $r1;

     label07:
        interfaceinvoke $r5.<java.io.DataOutput: void writeUTF(java.lang.String)>($r10);

        goto label03;

     label08:
        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label10;

     label09:
        $r11 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r5.<java.io.DataOutput: void writeInt(int)>($i0);

        goto label03;

     label10:
        $z0 = $r1 instanceof java.lang.Long;

        if $z0 == 0 goto label12;

     label11:
        $r12 = (java.lang.Long) $r1;

        $l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        interfaceinvoke $r5.<java.io.DataOutput: void writeLong(long)>($l1);

        goto label03;

     label12:
        $r13 = new java.lang.IllegalArgumentException;

     label13:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad type: ");

        $r14 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

     label14:
        throw $r13;

        catch java.io.IOException from label02 to label04 with label05;
        catch java.io.IOException from label07 to label08 with label05;
        catch java.io.IOException from label09 to label10 with label05;
        catch java.io.IOException from label11 to label12 with label05;
        catch java.io.IOException from label13 to label14 with label05;
    }

    public static void savePreferenceAsString(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.google.common.StaticUtil: void savePreferenceAsObject(java.lang.String,java.lang.Object)>($r0, $r1);

        return;
    }

    public static void savePreferences()
    {
        com.google.common.io.PersistentStore $r0;

        $r0 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        interfaceinvoke $r0.<com.google.common.io.PersistentStore: void savePreferences()>();

        return;
    }

    public static void setPreference(java.lang.String, byte[])
    {
        java.lang.String $r0;
        byte[] $r1;
        com.google.common.io.PersistentStore $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = staticinvoke <com.google.common.StaticUtil: com.google.common.io.PersistentStore getPersistentStore()>();

        interfaceinvoke $r2.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>($r0, $r1);

        return;
    }

    public static void setRegisterOutOfMemoryHandlerForTest(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        return;
    }

    public static void simulateLatency(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        return;
    }
}
