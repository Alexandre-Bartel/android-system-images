class android.os.ServiceManagerProxy extends java.lang.Object implements android.os.IServiceManager
{
    private android.os.IBinder mRemote;

    public void <init>(android.os.IBinder)
    {
        android.os.ServiceManagerProxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.os.ServiceManagerProxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public void addService(java.lang.String, android.os.IBinder) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy $r0;
        java.lang.String $r1;
        android.os.IBinder $r2;
        android.os.Parcel $r3, $r4;

        $r0 := @this: android.os.ServiceManagerProxy;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.IBinder;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        $r2 = $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.ServiceManagerProxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.os.ServiceManagerProxy;

        r1 = $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        return r1;
    }

    public android.os.IBinder checkService(java.lang.String) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;

        $r0 := @this: android.os.ServiceManagerProxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, $r3, 0);

        $r4 = virtualinvoke $r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public android.os.IBinder getService(java.lang.String) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;

        $r0 := @this: android.os.ServiceManagerProxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r2, $r3, 0);

        $r4 = virtualinvoke $r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public java.lang.String[] listServices() throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.String[] $r4;

        $r0 := @this: android.os.ServiceManagerProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        $r3 = $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r1, $r2, 0);

        $r4 = virtualinvoke $r2.<android.os.Parcel: java.lang.String[] readStringArray()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public void setPermissionController(android.os.IPermissionController) throws android.os.RemoteException
    {
        android.os.ServiceManagerProxy $r0;
        android.os.IPermissionController $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;

        $r0 := @this: android.os.ServiceManagerProxy;

        $r1 := @parameter0: android.os.IPermissionController;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IServiceManager");

        $r4 = interfaceinvoke $r1.<android.os.IPermissionController: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r4 = $r0.<android.os.ServiceManagerProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;
    }
}
