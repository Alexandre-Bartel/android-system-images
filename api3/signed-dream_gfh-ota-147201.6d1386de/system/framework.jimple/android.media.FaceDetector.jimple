public class android.media.FaceDetector extends java.lang.Object
{
    private static boolean sInitialized;
    private byte[] mBWBuffer;
    private int mDCR;
    private int mFD;
    private int mHeight;
    private int mMaxFaces;
    private int mSDK;
    private int mWidth;

    static void <clinit>()
    {
        java.lang.UnsatisfiedLinkError $r0;

        <android.media.FaceDetector: boolean sInitialized> = 0;

     label1:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("FFTEm");

        staticinvoke <android.media.FaceDetector: void nativeClassInit()>();

        <android.media.FaceDetector: boolean sInitialized> = 1;

     label2:
        return;

     label3:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FFTEm", "face detection library not found!");

        return;

        catch java.lang.UnsatisfiedLinkError from label1 to label2 with label3;
    }

    public void <init>(int, int, int)
    {
        android.media.FaceDetector $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r1;

        $r0 := @this: android.media.FaceDetector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $z0 = <android.media.FaceDetector: boolean sInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<android.media.FaceDetector: int fft_initialize(int,int,int)>($i0, $i1, $i2);

        $r0.<android.media.FaceDetector: int mWidth> = $i0;

        $r0.<android.media.FaceDetector: int mHeight> = $i1;

        $r0.<android.media.FaceDetector: int mMaxFaces> = $i2;

        $i0 = $i0 * $i1;

        $r1 = newarray (byte)[$i0];

        $r0.<android.media.FaceDetector: byte[] mBWBuffer> = $r1;

        return;
    }

    private native void fft_destroy();

    private native int fft_detect(android.graphics.Bitmap);

    private native void fft_get_face(android.media.FaceDetector$Face, int);

    private native int fft_initialize(int, int, int);

    private static native void nativeClassInit();

    protected void finalize() throws java.lang.Throwable
    {
        android.media.FaceDetector $r0;

        $r0 := @this: android.media.FaceDetector;

        specialinvoke $r0.<android.media.FaceDetector: void fft_destroy()>();

        return;
    }

    public int findFaces(android.graphics.Bitmap, android.media.FaceDetector$Face[])
    {
        android.media.FaceDetector $r0;
        android.graphics.Bitmap $r1;
        android.media.FaceDetector$Face[] $r2;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r3;
        android.media.FaceDetector$Face $r4;

        $r0 := @this: android.media.FaceDetector;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: android.media.FaceDetector$Face[];

        $z0 = <android.media.FaceDetector: boolean sInitialized>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = $r0.<android.media.FaceDetector: int mWidth>;

        if $i0 != $i1 goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i1 = $r0.<android.media.FaceDetector: int mHeight>;

        if $i0 == $i1 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bitmap size doesn\'t match initialization");

        throw $r3;

     label3:
        $i0 = lengthof $r2;

        $i1 = $r0.<android.media.FaceDetector: int mMaxFaces>;

        if $i0 >= $i1 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("faces[] smaller than maxFaces");

        throw $r3;

     label4:
        $i1 = specialinvoke $r0.<android.media.FaceDetector: int fft_detect(android.graphics.Bitmap)>($r1);

        $i0 = $i1;

        $i2 = $r0.<android.media.FaceDetector: int mMaxFaces>;

        if $i1 < $i2 goto label5;

        $i0 = $r0.<android.media.FaceDetector: int mMaxFaces>;

     label5:
        $i1 = 0;

     label6:
        if $i1 >= $i0 goto label8;

        $r4 = $r2[$i1];

        if $r4 != null goto label7;

        $r4 = new android.media.FaceDetector$Face;

        specialinvoke $r4.<android.media.FaceDetector$Face: void <init>(android.media.FaceDetector,android.media.FaceDetector$1)>($r0, null);

        $r2[$i1] = $r4;

     label7:
        $r4 = $r2[$i1];

        specialinvoke $r0.<android.media.FaceDetector: void fft_get_face(android.media.FaceDetector$Face,int)>($r4, $i1);

        $i1 = $i1 + 1;

        goto label6;

     label8:
        return $i0;
    }
}
