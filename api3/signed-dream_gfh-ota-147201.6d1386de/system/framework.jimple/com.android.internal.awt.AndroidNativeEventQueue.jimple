public class com.android.internal.awt.AndroidNativeEventQueue extends org.apache.harmony.awt.wtk.NativeEventQueue
{
    private java.lang.Object eventMonitor;

    public void <init>()
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

        specialinvoke $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: java.lang.Object getEventMonitor()>();

        $r0.<com.android.internal.awt.AndroidNativeEventQueue: java.lang.Object eventMonitor> = $r1;

        return;
    }

    public void awake()
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

        $r1 = $r0.<com.android.internal.awt.AndroidNativeEventQueue: java.lang.Object eventMonitor>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.internal.awt.AndroidNativeEventQueue: java.lang.Object eventMonitor>;

        virtualinvoke $r2.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void dispatchEvent()
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": empty method called");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public long getJavaWindow()
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": empty method called");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return 0L;
    }

    public void performLater(org.apache.harmony.awt.wtk.NativeEventQueue$Task)
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        org.apache.harmony.awt.wtk.NativeEventQueue$Task $r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.NativeEventQueue$Task;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": empty method called");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void performTask(org.apache.harmony.awt.wtk.NativeEventQueue$Task)
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        org.apache.harmony.awt.wtk.NativeEventQueue$Task $r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

        $r1 := @parameter0: org.apache.harmony.awt.wtk.NativeEventQueue$Task;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": empty method called");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public boolean waitEvent()
    {
        com.android.internal.awt.AndroidNativeEventQueue $r0;
        boolean $z0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.InterruptedException $r4;

        $r0 := @this: com.android.internal.awt.AndroidNativeEventQueue;

     label1:
        $z0 = virtualinvoke $r0.<org.apache.harmony.awt.wtk.NativeEventQueue: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        $r1 = $r0.<com.android.internal.awt.AndroidNativeEventQueue: java.lang.Object eventMonitor>;

        entermonitor $r1;

     label2:
        $r2 = $r0.<com.android.internal.awt.AndroidNativeEventQueue: java.lang.Object eventMonitor>;

     label3:
        virtualinvoke $r2.<java.lang.Object: void wait(long)>(1000L);

     label4:
        exitmonitor $r1;

     label5:
        goto label1;

     label6:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r3;

     label8:
        return 0;

     label9:
        $r4 := @caughtexception;

        goto label4;

        catch java.lang.InterruptedException from label3 to label4 with label9;
        catch java.lang.Throwable from label2 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
