public class com.google.android.maps.MyLocationOverlay extends com.google.android.maps.Overlay implements android.hardware.SensorListener, android.location.LocationListener, com.google.android.maps.Overlay$Snappable
{
    private static final int ANIMATION_LEVELS;
    private static final int ANIMATION_TIME_MILLIS;
    private static final int COMPASS_CENTER_X;
    private static final int COMPASS_CENTER_Y;
    private static final java.lang.String[] DESIRED_PROVIDER_NAMES;
    private static final long FALLBACK_PROVIDER_THRESHOLD_MILLIS;
    private static final android.graphics.Paint LOCATION_ACCURACY_FILL_PAINT;
    private static final android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT;
    private static final long LOCATION_FRESHNESS_CUTOFF;
    private static final long LOCATION_UPDATE_MILLIS;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String PACKAGE_NAME;
    private static final java.lang.String PREFERRED_PROVIDER_NAME;
    private static final boolean SHOW_EDGES;
    private static final boolean SHOW_TICKS;
    private static final boolean VERBOSE_LOGGING;
    private android.graphics.drawable.Drawable mCompassArrow;
    private android.graphics.drawable.Drawable mCompassBase;
    private final android.content.Context mContext;
    private final com.google.android.maps.MapController mController;
    private final java.util.ArrayList mEnabledProviders;
    private volatile boolean mIsCompassEnabled;
    private volatile boolean mIsMyLocationEnabled;
    private volatile boolean mIsOnScreen;
    private volatile android.location.Location mLastFix;
    private volatile boolean mLocationChangedSinceLastDraw;
    private android.graphics.drawable.LevelListDrawable mLocationDot;
    private int mLocationDotHalfHeight;
    private int mLocationDotHalfWidth;
    private final com.google.android.maps.MapView mMapView;
    private volatile com.google.android.maps.GeoPoint mMyLocation;
    private volatile long mMyLocationTime;
    android.location.Location mNetworkLocation;
    android.os.Handler mNetworkLocationHandler;
    private volatile float mOrientation;
    private android.os.PowerManager mPowerManager;
    private volatile com.google.android.maps.GeoPoint mPreviousMyLocation;
    private final java.util.Queue mRunOnFirstFix;
    private final android.graphics.Point mTempPoint;
    private final android.graphics.Rect mTempRect;
    private java.lang.Runnable mUserActivityReporter;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.graphics.Paint $r1;
        android.graphics.Paint$Style $r2;

        <com.google.android.maps.MyLocationOverlay: boolean SHOW_EDGES> = 1;

        <com.google.android.maps.MyLocationOverlay: java.lang.String PREFERRED_PROVIDER_NAME> = "gps";

        <com.google.android.maps.MyLocationOverlay: java.lang.String PACKAGE_NAME> = "com.google.android.maps";

        <com.google.android.maps.MyLocationOverlay: java.lang.String LOG_TAG> = "Maps.MyLocationOverlay";

        <com.google.android.maps.MyLocationOverlay: long LOCATION_UPDATE_MILLIS> = 0L;

        <com.google.android.maps.MyLocationOverlay: long LOCATION_FRESHNESS_CUTOFF> = 60000L;

        <com.google.android.maps.MyLocationOverlay: long FALLBACK_PROVIDER_THRESHOLD_MILLIS> = 10000L;

        <com.google.android.maps.MyLocationOverlay: int COMPASS_CENTER_Y> = 58;

        <com.google.android.maps.MyLocationOverlay: int COMPASS_CENTER_X> = 50;

        <com.google.android.maps.MyLocationOverlay: int ANIMATION_TIME_MILLIS> = 1000;

        <com.google.android.maps.MyLocationOverlay: int ANIMATION_LEVELS> = 4;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "gps";

        $r0[1] = "network";

        <com.google.android.maps.MyLocationOverlay: java.lang.String[] DESIRED_PROVIDER_NAMES> = $r0;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_FILL_PAINT> = $r1;

        $r1 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_FILL_PAINT>;

        virtualinvoke $r1.<android.graphics.Paint: void setARGB(int,int,int,int)>(30, 0, 0, 255);

        $r1 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_FILL_PAINT>;

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r2);

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT> = $r1;

        $r1 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Paint: void setARGB(int,int,int,int)>(100, 0, 0, 255);

        $r1 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>(2.5F);

        $r1 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r2);

        $r1 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        return;
    }

    public void <init>(android.content.Context, com.google.android.maps.MapView)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.content.Context $r1;
        com.google.android.maps.MapView $r2;
        java.util.ArrayList $r3;
        android.graphics.Point $r4;
        android.graphics.Rect $r5;
        java.util.LinkedList $r6;
        com.google.android.maps.MyLocationOverlay$1 $r7;
        com.google.android.maps.MyLocationOverlay$2 $r8;
        java.lang.IllegalArgumentException $r9;
        com.google.android.maps.MapController $r10;
        java.lang.Object $r11;
        android.os.PowerManager $r12;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.android.maps.MapView;

        specialinvoke $r0.<com.google.android.maps.Overlay: void <init>()>();

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled> = 0;

        $r0.<com.google.android.maps.MyLocationOverlay: float mOrientation> = #NaNF;

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled> = 0;

        $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mLastFix> = null;

        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation> = null;

        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mPreviousMyLocation> = null;

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mLocationChangedSinceLastDraw> = 0;

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsOnScreen> = 1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(2);

        $r0.<com.google.android.maps.MyLocationOverlay: java.util.ArrayList mEnabledProviders> = $r3;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Rect mTempRect> = $r5;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        $r0.<com.google.android.maps.MyLocationOverlay: java.util.Queue mRunOnFirstFix> = $r6;

        $r7 = new com.google.android.maps.MyLocationOverlay$1;

        specialinvoke $r7.<com.google.android.maps.MyLocationOverlay$1: void <init>(com.google.android.maps.MyLocationOverlay)>($r0);

        $r0.<com.google.android.maps.MyLocationOverlay: java.lang.Runnable mUserActivityReporter> = $r7;

        $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mNetworkLocation> = null;

        $r8 = new com.google.android.maps.MyLocationOverlay$2;

        specialinvoke $r8.<com.google.android.maps.MyLocationOverlay$2: void <init>(com.google.android.maps.MyLocationOverlay)>($r0);

        $r0.<com.google.android.maps.MyLocationOverlay: android.os.Handler mNetworkLocationHandler> = $r8;

        if $r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mapView == null");

        throw $r9;

     label1:
        $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext> = $r1;

        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView> = $r2;

        $r10 = virtualinvoke $r2.<com.google.android.maps.MapView: com.google.android.maps.MapController getController()>();

        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapController mController> = $r10;

        $r11 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r12 = (android.os.PowerManager) $r11;

        $r0.<com.google.android.maps.MyLocationOverlay: android.os.PowerManager mPowerManager> = $r12;

        return;
    }

    static android.os.PowerManager access$000(com.google.android.maps.MyLocationOverlay)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.os.PowerManager r1;

        $r0 := @parameter0: com.google.android.maps.MyLocationOverlay;

        r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.os.PowerManager mPowerManager>;

        return r1;
    }

    private void clearNetworkLocationRebroadcasts()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.os.Handler $r1;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mNetworkLocation> = null;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.os.Handler mNetworkLocationHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        return;
    }

    private android.graphics.drawable.Drawable getCompassArrow()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.Drawable $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassArrow>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301800);

        $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassArrow> = $r1;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassArrow>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i0 = $i0 / 2;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassArrow>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassArrow>;

        $i2 = neg $i0;

        $i1 = $i1 - 28;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, -28, $i0, $i1);

     label1:
        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassArrow>;

        return $r1;
    }

    private android.graphics.drawable.Drawable getCompassBase()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassBase>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301801);

        $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassBase> = $r1;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassBase>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = $i1 / 2;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassBase>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i0 = $i0 / 2;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassBase>;

        $i3 = neg $i1;

        $i2 = neg $i0;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i2, $i1, $i0);

     label1:
        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable mCompassBase>;

        return $r1;
    }

    private android.graphics.drawable.LevelListDrawable getLocationDot()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.LevelListDrawable $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable mLocationDot>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301864);

        $r1 = (android.graphics.drawable.LevelListDrawable) $r4;

        $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable mLocationDot> = $r1;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable mLocationDot>;

        $i2 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>();

        $i2 = $i2 / 2;

        $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfWidth> = $i2;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable mLocationDot>;

        $i2 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>();

        $i2 = $i2 / 2;

        $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfHeight> = $i2;

        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable mLocationDot>;

        $i2 = $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfWidth>;

        $i2 = neg $i2;

        $i0 = $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfHeight>;

        $i3 = neg $i0;

        $i0 = $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfWidth>;

        $i1 = $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfHeight>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i3, $i0, $i1);

     label1:
        $r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable mLocationDot>;

        return $r1;
    }

    private boolean isCloseToPoint(int, int, com.google.android.maps.MapView)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1;
        com.google.android.maps.MapView $r1;
        com.google.android.maps.GeoPoint $r2;
        com.google.android.maps.Projection $r3;
        android.graphics.Point $r4;
        long $l2, $l3, $l4;
        float $f0, $f1;
        byte $b5;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.google.android.maps.MapView;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r1.<com.google.android.maps.MapView: com.google.android.maps.Projection getProjection()>();

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        interfaceinvoke $r3.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r2, $r4);

        $l2 = (long) $i0;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i0 = $r4.<android.graphics.Point: int x>;

        $l3 = (long) $i0;

        $l2 = $l2 - $l3;

        $l2 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $l3 = (long) $i1;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i0 = $r4.<android.graphics.Point: int y>;

        $l4 = (long) $i0;

        $l3 = $l3 - $l4;

        $l3 = staticinvoke <java.lang.Math: long abs(long)>($l3);

        $l2 = $l2 * $l2;

        $l3 = $l3 * $l3;

        $l2 = $l2 + $l3;

        $f0 = (float) $l2;

        $f1 = 32.0F * 32.0F;

        $b5 = $f0 cmpg $f1;

        if $b5 >= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean isLocationOnScreen(com.google.android.maps.MapView, com.google.android.maps.GeoPoint)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        com.google.android.maps.MapView $r1;
        com.google.android.maps.GeoPoint $r2;
        android.graphics.Rect $r3;
        android.graphics.Point $r4;
        com.google.android.maps.Projection $r5;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: com.google.android.maps.MapView;

        $r2 := @parameter1: com.google.android.maps.GeoPoint;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        $r5 = virtualinvoke $r1.<com.google.android.maps.MapView: com.google.android.maps.Projection getProjection()>();

        interfaceinvoke $r5.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r2, $r4);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        $i0 = $r4.<android.graphics.Point: int x>;

        $i1 = $r4.<android.graphics.Point: int y>;

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        return $z0;
    }

    private float isect(float, float, float)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        float $f0, $f1, $f2, $f3;
        double $d0;
        byte $b0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f1 = $f1 * $f1;

        $f3 = $f0 * $f0;

        $f1 = $f1 - $f3;

        $f0 = 2.0F * $f0;

        $f0 = $f0 * $f2;

        $f0 = $f1 + $f0;

        $f1 = $f2 * $f2;

        $f0 = $f0 - $f1;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;

     label1:
        return 0.0F;
    }

    public void disableCompass()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.Object $r1;
        boolean $z0;
        android.content.Context $r2;
        android.hardware.SensorManager $r3;
        com.google.android.maps.MapView $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled>;

        if $z0 == 0 goto label3;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        $r3 = (android.hardware.SensorManager) $r1;

        if $r3 == null goto label2;

        virtualinvoke $r3.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>($r0, 128);

     label2:
        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        virtualinvoke $r4.<android.view.View: void postInvalidate()>();

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled> = 0;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void disableMyLocation()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.Object $r1;
        android.content.Context $r2;
        android.location.LocationManager $r3;
        java.util.ArrayList $r4;
        android.os.Handler $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r3 = (android.location.LocationManager) $r1;

        virtualinvoke $r3.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>($r0);

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: java.util.ArrayList mEnabledProviders>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled> = 0;

        $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mNetworkLocation> = null;

        $r5 = $r0.<com.google.android.maps.MyLocationOverlay: android.os.Handler mNetworkLocationHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected boolean dispatchTap()
    {
        com.google.android.maps.MyLocationOverlay $r0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        return 0;
    }

    public boolean draw(android.graphics.Canvas, com.google.android.maps.MapView, boolean, long)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.graphics.Canvas $r1;
        com.google.android.maps.MapView $r2;
        boolean $z0;
        long $l0, $l1, $l2;
        android.location.Location $r3;
        com.google.android.maps.GeoPoint $r4;
        byte $b3;
        float $f0;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.google.android.maps.MapView;

        $z0 := @parameter2: boolean;

        $l0 := @parameter3: long;

        entermonitor $r0;

        if $z0 == 0 goto label2;

     label1:
        exitmonitor $r0;

        return 0;

     label2:
        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        if $r4 == null goto label3;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $r0.<com.google.android.maps.MyLocationOverlay: long mMyLocationTime>;

        $l1 = $l1 - $l2;

        $b3 = $l1 cmp 60000L;

        if $b3 >= 0 goto label5;

        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mLastFix>;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        virtualinvoke $r0.<com.google.android.maps.MyLocationOverlay: void drawMyLocation(android.graphics.Canvas,com.google.android.maps.MapView,android.location.Location,com.google.android.maps.GeoPoint,long)>($r1, $r2, $r3, $r4, $l0);

     label3:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled>;

        if $z0 == 0 goto label4;

        $f0 = $r0.<com.google.android.maps.MyLocationOverlay: float mOrientation>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label4;

        $f0 = $r0.<com.google.android.maps.MyLocationOverlay: float mOrientation>;

        virtualinvoke $r0.<com.google.android.maps.MyLocationOverlay: void drawCompass(android.graphics.Canvas,float)>($r1, $f0);

     label4:
        goto label1;

     label5:
        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation> = null;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        virtualinvoke $r2.<android.view.View: void postInvalidate()>();

     label6:
        goto label3;

     label7:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label2 to label6 with label7;
    }

    protected void drawCompass(android.graphics.Canvas, float)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.graphics.Canvas $r1;
        float $f0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(50.0F, 58.0F);

        $r2 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable getCompassBase()>();

        staticinvoke <com.google.android.maps.MyLocationOverlay: void drawAt(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,boolean)>($r1, $r2, 0, 0, 0);

        $f0 = neg $f0;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>($f0);

        $r2 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable getCompassArrow()>();

        staticinvoke <com.google.android.maps.MyLocationOverlay: void drawAt(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,boolean)>($r1, $r2, 0, 0, 0);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    protected void drawMyLocation(android.graphics.Canvas, com.google.android.maps.MapView, android.location.Location, com.google.android.maps.GeoPoint, long)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.graphics.Canvas $r1;
        com.google.android.maps.MapView $r2;
        android.location.Location $r3;
        com.google.android.maps.GeoPoint $r4;
        long $l0;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        boolean $z0;
        android.graphics.drawable.LevelListDrawable $r5;
        android.graphics.Rect $r6, $r10;
        com.google.android.maps.Projection $r7;
        android.graphics.Point $r8;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b5;
        android.graphics.Paint $r9;
        com.google.android.maps.MapController $r11;
        java.lang.Runnable $r12;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.google.android.maps.MapView;

        $r3 := @parameter2: android.location.Location;

        $r4 := @parameter3: com.google.android.maps.GeoPoint;

        $l0 := @parameter4: long;

        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.LevelListDrawable getLocationDot()>();

        $r6 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r7 = virtualinvoke $r2.<com.google.android.maps.MapView: com.google.android.maps.Projection getProjection()>();

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        interfaceinvoke $r7.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r4, $r8);

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i2 = $r8.<android.graphics.Point: int x>;

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i1 = $r8.<android.graphics.Point: int y>;

        $f0 = 0.0F;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasAccuracy()>();

        if $z0 == 0 goto label2;

        $f0 = virtualinvoke $r3.<android.location.Location: float getAccuracy()>();

        $i3 = (int) $f0;

        $f0 = (float) $i3;

        $f0 = interfaceinvoke $r7.<com.google.android.maps.Projection: float metersToEquatorPixels(float)>($f0);

     label2:
        $l0 = $l0 % 1000L;

        $i3 = (int) $l0;

        $i3 = $i3 * 10000;

        $i3 = $i3 / 1000;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i3);

        $i4 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i3 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $b5 = $f0 cmpl 0.0F;

        if $b5 <= 0 goto label6;

        $f1 = (float) $i2;

        $f2 = (float) $i1;

        $r9 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_FILL_PAINT>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f2, $f0, $r9);

        $f1 = (float) $i2;

        $f2 = (float) $i1;

        $r9 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f2, $f0, $r9);

        $f1 = (float) $i1;

        $f1 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: float isect(float,float,float)>($f1, $f0, 1.0F);

        $b5 = $f1 cmpl 0.0F;

        if $b5 <= 0 goto label3;

        $f2 = (float) $i2;

        $f2 = $f2 - $f1;

        $f3 = (float) $i2;

        $f1 = $f3 + $f1;

        $r9 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, 1.0F, $f1, 1.0F, $r9);

     label3:
        $f1 = (float) $i1;

        $f2 = (float) $i3;

        $f2 = $f2 - 1.0F;

        $f3 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: float isect(float,float,float)>($f1, $f0, $f2);

        $b5 = $f3 cmpl 0.0F;

        if $b5 <= 0 goto label4;

        $f1 = (float) $i2;

        $f1 = $f1 - $f3;

        $f2 = (float) $i3;

        $f2 = $f2 - 1.0F;

        $f4 = (float) $i2;

        $f3 = $f4 + $f3;

        $f4 = (float) $i3;

        $f4 = $f4 - 1.0F;

        $r9 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f2, $f3, $f4, $r9);

     label4:
        $f1 = (float) $i2;

        $f1 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: float isect(float,float,float)>($f1, $f0, 1.0F);

        $b5 = $f1 cmpl 0.0F;

        if $b5 <= 0 goto label5;

        $f2 = (float) $i1;

        $f2 = $f2 - $f1;

        $f3 = (float) $i1;

        $f1 = $f3 + $f1;

        $r9 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(1.0F, $f2, 1.0F, $f1, $r9);

     label5:
        $f1 = (float) $i2;

        $f2 = (float) $i4;

        $f2 = $f2 - 1.0F;

        $f0 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: float isect(float,float,float)>($f1, $f0, $f2);

        $b5 = $f0 cmpl 0.0F;

        if $b5 <= 0 goto label6;

        $f1 = (float) $i4;

        $f1 = $f1 - 1.0F;

        $f2 = (float) $i1;

        $f2 = $f2 - $f0;

        $f3 = (float) $i4;

        $f3 = $f3 - 1.0F;

        $f4 = (float) $i1;

        $f0 = $f4 + $f0;

        $r9 = <com.google.android.maps.MyLocationOverlay: android.graphics.Paint LOCATION_ACCURACY_STROKE_PAINT>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f2, $f3, $f0, $r9);

     label6:
        staticinvoke <com.google.android.maps.MyLocationOverlay: void drawAt(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,boolean)>($r1, $r5, $i2, $i1, 0);

        $r10 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Rect mTempRect>;

        virtualinvoke $r10.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i4, $i3);

        $r10 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Rect mTempRect>;

        $i6 = $r6.<android.graphics.Rect: int left>;

        $i6 = $i6 + $i2;

        $i7 = $r6.<android.graphics.Rect: int top>;

        $i7 = $i7 + $i1;

        $i8 = $r6.<android.graphics.Rect: int right>;

        $i8 = $i8 + $i2;

        $i9 = $r6.<android.graphics.Rect: int bottom>;

        $i9 = $i9 + $i1;

        $z0 = virtualinvoke $r10.<android.graphics.Rect: boolean intersects(int,int,int,int)>($i6, $i7, $i8, $i9);

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsOnScreen> = $z0;

        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mLocationChangedSinceLastDraw>;

        if $z0 == 0 goto label8;

        $r11 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapController mController>;

        if $r11 == null goto label8;

        $r6 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Rect mTempRect>;

        $i4 = $i4 / 20;

        $i3 = $i3 / 20;

        virtualinvoke $r6.<android.graphics.Rect: void inset(int,int)>($i4, $i3);

        $r6 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Rect mTempRect>;

        $z0 = virtualinvoke $r6.<android.graphics.Rect: boolean contains(int,int)>($i2, $i1);

        if $z0 != 0 goto label8;

        $z0 = 0;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mPreviousMyLocation>;

        if $r4 == null goto label7;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mPreviousMyLocation>;

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        interfaceinvoke $r7.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r4, $r8);

        $r6 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Rect mTempRect>;

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i3 = $r8.<android.graphics.Point: int x>;

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i4 = $r8.<android.graphics.Point: int y>;

        $z0 = virtualinvoke $r6.<android.graphics.Rect: boolean contains(int,int)>($i3, $i4);

     label7:
        if $z0 == 0 goto label8;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        $r8 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        interfaceinvoke $r7.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r4, $r8);

        $r11 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapController mController>;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        virtualinvoke $r11.<com.google.android.maps.MapController: void animateTo(com.google.android.maps.GeoPoint)>($r4);

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        $r12 = $r0.<com.google.android.maps.MyLocationOverlay: java.lang.Runnable mUserActivityReporter>;

        virtualinvoke $r2.<android.view.View: boolean post(java.lang.Runnable)>($r12);

     label8:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsOnScreen>;

        if $z0 == 0 goto label9;

        $i7 = $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfWidth>;

        $i6 = $r0.<com.google.android.maps.MyLocationOverlay: int mLocationDotHalfHeight>;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        $i3 = $i2 - $i7;

        $i4 = $i1 - $i6;

        $i2 = $i2 + $i7;

        $i1 = $i1 + $i6;

        virtualinvoke $r2.<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>(250L, $i3, $i4, $i2, $i1);

     label9:
        $r0.<com.google.android.maps.MyLocationOverlay: boolean mLocationChangedSinceLastDraw> = 0;

        return;
    }

    public boolean enableCompass()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.Object $r1;
        boolean $z0;
        android.content.Context $r2;
        android.hardware.SensorManager $r3;
        com.google.android.maps.MapView $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled>;

        if $z0 != 0 goto label2;

        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        $r3 = (android.hardware.SensorManager) $r1;

        if $r3 == null goto label4;

        virtualinvoke $r3.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>($r0, 128, 2);

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled> = 1;

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        virtualinvoke $r4.<android.view.View: void postInvalidate()>();

     label2:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled>;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", "Compass SensorManager was unavailable.");

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public boolean enableMyLocation()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.String $r1, $r9;
        java.lang.String[] $r2;
        int $i0, $i1;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.location.LocationManager $r5;
        java.util.ArrayList $r6;
        boolean $z0;
        com.google.android.maps.MyLocationOverlay$NameAndDate $r7;
        java.lang.StringBuilder $r8;
        java.lang.SecurityException $r10;
        java.lang.Throwable $r11;
        java.lang.IllegalArgumentException $r12;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        entermonitor $r0;

     label01:
        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r5 = (android.location.LocationManager) $r4;

        virtualinvoke $r5.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>($r0);

        $r6 = $r0.<com.google.android.maps.MyLocationOverlay: java.util.ArrayList mEnabledProviders>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled> = 0;

        $r2 = <com.google.android.maps.MyLocationOverlay: java.lang.String[] DESIRED_PROVIDER_NAMES>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label15;

        $r1 = $r2[$i1];

     label03:
        $z0 = virtualinvoke $r5.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>($r1);

     label04:
        if $z0 != 0 goto label06;

     label05:
        $i1 = $i1 + 1;

        goto label02;

     label06:
        $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled> = 1;

        $r6 = $r0.<com.google.android.maps.MyLocationOverlay: java.util.ArrayList mEnabledProviders>;

     label07:
        $r7 = new com.google.android.maps.MyLocationOverlay$NameAndDate;

        specialinvoke $r7.<com.google.android.maps.MyLocationOverlay$NameAndDate: void <init>(java.lang.String)>($r1);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        virtualinvoke $r5.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>($r1, 0L, 0.0F, $r0);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request updates from ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", $r9);

     label08:
        goto label05;

     label09:
        $r10 := @caughtexception;

     label10:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get provider ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", $r9);

     label11:
        goto label05;

     label12:
        $r11 := @caughtexception;

        exitmonitor $r0;

        throw $r11;

     label13:
        $r12 := @caughtexception;

     label14:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get provider ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", $r9);

        goto label05;

     label15:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled>;

        if $z0 != 0 goto label16;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", "None of the desired Location Providers are available");

     label16:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled>;

     label17:
        exitmonitor $r0;

        return $z0;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.lang.IllegalArgumentException from label03 to label04 with label13;
        catch java.lang.IllegalArgumentException from label07 to label08 with label13;
        catch java.lang.Throwable from label03 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label17 with label12;
    }

    public android.location.Location getLastFix()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.location.Location r1;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        r1 = $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mLastFix>;

        return r1;
    }

    public com.google.android.maps.GeoPoint getMyLocation()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        com.google.android.maps.GeoPoint r1;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        r1 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        return r1;
    }

    public float getOrientation()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        float f0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        f0 = $r0.<com.google.android.maps.MyLocationOverlay: float mOrientation>;

        return f0;
    }

    public boolean isCompassEnabled()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        boolean z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled>;

        return z0;
    }

    public boolean isMyLocationEnabled()
    {
        com.google.android.maps.MyLocationOverlay $r0;
        boolean z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled>;

        return z0;
    }

    public void onAccuracyChanged(int, int)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return;
    }

    public void onLocationChanged(android.location.Location)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        android.location.Location $r1, $r4;
        long $l0, $l1, $l4;
        java.lang.String $r2, $r11;
        boolean $z0;
        android.os.Handler $r3;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        java.util.ArrayList $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.google.android.maps.MyLocationOverlay$NameAndDate $r10;
        com.google.android.maps.GeoPoint $r12;
        double $d0;
        int $i2, $i3;
        com.google.android.maps.MapView $r13;
        java.util.Queue $r14;
        java.lang.Runnable $r15;
        java.lang.StringBuilder $r16;
        java.lang.Thread $r17;
        byte $b5;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: android.location.Location;

        entermonitor $r0;

     label01:
        $r2 = virtualinvoke $r1.<android.location.Location: java.lang.String getProvider()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("network");

        if $z0 == 0 goto label03;

        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.os.Handler mNetworkLocationHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(1);

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mNetworkLocation>;

        if $r4 != null goto label06;

        $r4 = new android.location.Location;

        specialinvoke $r4.<android.location.Location: void <init>(android.location.Location)>($r1);

        $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mNetworkLocation> = $r4;

     label02:
        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.os.Handler mNetworkLocationHandler>;

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.os.Handler mNetworkLocationHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r5, 15000L);

     label03:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsMyLocationEnabled>;

     label04:
        if $z0 != 0 goto label09;

     label05:
        exitmonitor $r0;

        return;

     label06:
        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mNetworkLocation>;

        virtualinvoke $r4.<android.location.Location: void set(android.location.Location)>($r1);

     label07:
        goto label02;

     label08:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

     label09:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l0 = $l1 - 10000L;

        $r2 = virtualinvoke $r1.<android.location.Location: java.lang.String getProvider()>();

        $r7 = $r0.<com.google.android.maps.MyLocationOverlay: java.util.ArrayList mEnabledProviders>;

        $r8 = virtualinvoke $r7.<java.util.AbstractList: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.google.android.maps.MyLocationOverlay$NameAndDate) $r9;

        $r11 = $r10.<com.google.android.maps.MyLocationOverlay$NameAndDate: java.lang.String name>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label13;

        $r10.<com.google.android.maps.MyLocationOverlay$NameAndDate: long date> = $l1;

     label11:
        $r0.<com.google.android.maps.MyLocationOverlay: boolean mLocationChangedSinceLastDraw> = 1;

        $r12 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mPreviousMyLocation> = $r12;

        $r12 = new com.google.android.maps.GeoPoint;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>();

        $d0 = $d0 * 1000000.0;

        $i2 = (int) $d0;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>();

        $d0 = $d0 * 1000000.0;

        $i3 = (int) $d0;

        specialinvoke $r12.<com.google.android.maps.GeoPoint: void <init>(int,int)>($i2, $i3);

        $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation> = $r12;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r0.<com.google.android.maps.MyLocationOverlay: long mMyLocationTime> = $l0;

        $r0.<com.google.android.maps.MyLocationOverlay: android.location.Location mLastFix> = $r1;

        $r13 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        $r12 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        $z0 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: boolean isLocationOnScreen(com.google.android.maps.MapView,com.google.android.maps.GeoPoint)>($r13, $r12);

        if $z0 == 0 goto label12;

        $r13 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        virtualinvoke $r13.<android.view.View: void postInvalidate()>();

     label12:
        $r14 = $r0.<com.google.android.maps.MyLocationOverlay: java.util.Queue mRunOnFirstFix>;

        $r9 = interfaceinvoke $r14.<java.util.Queue: java.lang.Object poll()>();

        $r15 = (java.lang.Runnable) $r9;

        if $r15 == null goto label05;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running deferred on first fix: ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", $r2);

        $r17 = new java.lang.Thread;

        specialinvoke $r17.<java.lang.Thread: void <init>(java.lang.Runnable)>($r15);

        virtualinvoke $r17.<java.lang.Thread: void start()>();

        goto label12;

     label13:
        $r11 = $r10.<com.google.android.maps.MyLocationOverlay$NameAndDate: java.lang.String name>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("gps");

        if $z0 == 0 goto label10;

        $l4 = $r10.<com.google.android.maps.MyLocationOverlay$NameAndDate: long date>;

        $b5 = $l4 cmp $l0;

        if $b5 <= 0 goto label10;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Maps.MyLocationOverlay", "Got fallback update soon after preferred udpate, ignoring");

     label14:
        goto label05;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label14 with label08;
    }

    public void onProviderDisabled(java.lang.String)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("network");

        if $z0 == 0 goto label1;

        specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: void clearNetworkLocationRebroadcasts()>();

        return;

     label1:
        return;
    }

    public void onProviderEnabled(java.lang.String)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.String $r1;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void onSensorChanged(int, float[])
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1, $i2, $i3;
        float[] $r1;
        boolean $z0;
        float $f0;
        android.graphics.drawable.Drawable $r2;
        android.graphics.Rect $r3;
        com.google.android.maps.MapView $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $i0 := @parameter0: int;

        $r1 := @parameter1: float[];

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.google.android.maps.MyLocationOverlay: boolean mIsCompassEnabled>;

        if $z0 == 0 goto label2;

        $f0 = $r1[0];

        $r0.<com.google.android.maps.MyLocationOverlay: float mOrientation> = $f0;

        $r2 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.drawable.Drawable getCompassBase()>();

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $r4 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.MapView mMapView>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $i0 = $i0 + 50;

        $i1 = $r3.<android.graphics.Rect: int top>;

        $i1 = $i1 + 58;

        $i2 = $r3.<android.graphics.Rect: int right>;

        $i2 = $i2 + 50;

        $i3 = $r3.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + 58;

        virtualinvoke $r4.<android.view.View: void postInvalidate(int,int,int,int)>($i0, $i1, $i2, $i3);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean onSnapToItem(int, int, android.graphics.Point, com.google.android.maps.MapView)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        int $i0, $i1;
        android.graphics.Point $r1, $r3;
        com.google.android.maps.MapView $r2;
        boolean $z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Point;

        $r2 := @parameter3: com.google.android.maps.MapView;

        $z0 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: boolean isCloseToPoint(int,int,com.google.android.maps.MapView)>($i0, $i1, $r2);

        if $z0 == 0 goto label1;

        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r1.<android.graphics.Point: int x> = $i0;

        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i0 = $r3.<android.graphics.Point: int y>;

        $r1.<android.graphics.Point: int y> = $i0;

        return 1;

     label1:
        return 0;
    }

    public void onStatusChanged(java.lang.String, int, android.os.Bundle)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Bundle $r2;
        boolean $z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("network");

        if $z0 == 0 goto label1;

        if $i0 == 2 goto label2;

        specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: void clearNetworkLocationRebroadcasts()>();

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean onTap(com.google.android.maps.GeoPoint, com.google.android.maps.MapView)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        com.google.android.maps.GeoPoint $r1, $r3;
        com.google.android.maps.MapView $r2;
        com.google.android.maps.Projection $r4;
        android.graphics.Point $r5;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: com.google.android.maps.GeoPoint;

        $r2 := @parameter1: com.google.android.maps.MapView;

        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r2.<com.google.android.maps.MapView: com.google.android.maps.Projection getProjection()>();

        $r5 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        interfaceinvoke $r4.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r1, $r5);

        $r5 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i0 = $r5.<android.graphics.Point: int x>;

        $r5 = $r0.<com.google.android.maps.MyLocationOverlay: android.graphics.Point mTempPoint>;

        $i1 = $r5.<android.graphics.Point: int y>;

        $z0 = specialinvoke $r0.<com.google.android.maps.MyLocationOverlay: boolean isCloseToPoint(int,int,com.google.android.maps.MapView)>($i0, $i1, $r2);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.google.android.maps.MyLocationOverlay: boolean dispatchTap()>();

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    public boolean runOnFirstFix(java.lang.Runnable)
    {
        com.google.android.maps.MyLocationOverlay $r0;
        java.lang.Runnable $r1;
        com.google.android.maps.GeoPoint $r2;
        boolean $z0;
        java.util.Queue $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.google.android.maps.MyLocationOverlay;

        $r1 := @parameter0: java.lang.Runnable;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.google.android.maps.MyLocationOverlay: com.google.android.maps.GeoPoint mMyLocation>;

        if $r2 == null goto label4;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label2:
        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $r3 = $r0.<com.google.android.maps.MyLocationOverlay: java.util.Queue mRunOnFirstFix>;

        interfaceinvoke $r3.<java.util.Queue: boolean offer(java.lang.Object)>($r1);

     label5:
        $z0 = 0;

        goto label3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
