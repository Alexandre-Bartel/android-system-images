public final class android.provider.Contacts$ContactMethods extends java.lang.Object implements android.provider.BaseColumns, android.provider.Contacts$ContactMethodsColumns, android.provider.Contacts$PeopleColumns
{
    public static final java.lang.String CONTENT_EMAIL_ITEM_TYPE;
    public static final java.lang.String CONTENT_EMAIL_TYPE;
    public static final android.net.Uri CONTENT_EMAIL_URI;
    public static final java.lang.String CONTENT_IM_ITEM_TYPE;
    public static final java.lang.String CONTENT_POSTAL_ITEM_TYPE;
    public static final java.lang.String CONTENT_POSTAL_TYPE;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final java.lang.String PERSON_ID;
    public static final java.lang.String POSTAL_LOCATION_LATITUDE;
    public static final java.lang.String POSTAL_LOCATION_LONGITUDE;
    public static final int PROTOCOL_AIM;
    public static final int PROTOCOL_GOOGLE_TALK;
    public static final int PROTOCOL_ICQ;
    public static final int PROTOCOL_JABBER;
    public static final int PROTOCOL_MSN;
    public static final int PROTOCOL_QQ;
    public static final int PROTOCOL_SKYPE;
    public static final int PROTOCOL_YAHOO;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_YAHOO> = 2;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_SKYPE> = 3;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_QQ> = 4;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_MSN> = 1;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_JABBER> = 7;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_ICQ> = 6;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_GOOGLE_TALK> = 5;

        <android.provider.Contacts$ContactMethods: int PROTOCOL_AIM> = 0;

        <android.provider.Contacts$ContactMethods: java.lang.String POSTAL_LOCATION_LONGITUDE> = "aux_data";

        <android.provider.Contacts$ContactMethods: java.lang.String POSTAL_LOCATION_LATITUDE> = "data";

        <android.provider.Contacts$ContactMethods: java.lang.String PERSON_ID> = "person";

        <android.provider.Contacts$ContactMethods: java.lang.String DEFAULT_SORT_ORDER> = "name ASC";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/contact-methods";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_POSTAL_TYPE> = "vnd.android.cursor.dir/postal-address";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_POSTAL_ITEM_TYPE> = "vnd.android.cursor.item/postal-address";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_IM_ITEM_TYPE> = "vnd.android.cursor.item/jabber-im";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_EMAIL_TYPE> = "vnd.android.cursor.dir/email";

        <android.provider.Contacts$ContactMethods: java.lang.String CONTENT_EMAIL_ITEM_TYPE> = "vnd.android.cursor.item/email";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/contact_methods");

        <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI> = $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/contact_methods/email");

        <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_EMAIL_URI> = $r0;

        return;
    }

    private void <init>()
    {
        android.provider.Contacts$ContactMethods $r0;

        $r0 := @this: android.provider.Contacts$ContactMethods;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object decodeImProtocol(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0;
        java.lang.Integer $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("pre:");

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(4);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("custom:");

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(7);

        return $r0;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the value is not a valid encoded protocol, ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static java.lang.String encodeCustomImProtocol(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("custom:");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String encodePredefinedImProtocol(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pre:");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static final java.lang.CharSequence getDisplayLabel(android.content.Context, int, int, java.lang.CharSequence)
    {
        android.content.Context $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        java.lang.String $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence[] $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5, $r6;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.CharSequence;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label07;
            default: goto label01;
        };

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(17039375);

        return $r2;

     label02:
        if $i1 == 0 goto label06;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>(17235968);

        $i0 = $i1 - 1;

     label03:
        $r1 = $r4[$i0];

     label04:
        return $r1;

     label05:
        $r5 := @caughtexception;

        $r1 = $r4[0];

        return $r1;

     label06:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label12;

        return $r1;

     label07:
        if $i1 == 0 goto label11;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>(17235972);

        $i0 = $i1 - 1;

     label08:
        $r1 = $r4[$i0];

     label09:
        return $r1;

     label10:
        $r6 := @caughtexception;

        $r1 = $r4[0];

        return $r1;

     label11:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label13;

        return $r1;

     label12:
        return "";

     label13:
        return "";

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label05;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label10;
    }

    public static java.lang.String lookupProviderNameFromId(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label8;
            case 4: goto label9;
            case 5: goto label2;
            case 6: goto label6;
            case 7: goto label7;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "GTalk";

     label3:
        return "AIM";

     label4:
        return "MSN";

     label5:
        return "Yahoo";

     label6:
        return "ICQ";

     label7:
        return "JABBER";

     label8:
        return "SKYPE";

     label9:
        return "QQ";
    }

    public void addPostalLocation(android.content.Context, long, double, double)
    {
        android.provider.Contacts$ContactMethods $r0;
        android.content.Context $r1;
        long $l0, $l1;
        double $d0, $d1;
        android.content.ContentValues $r2;
        android.content.ContentResolver $r3;
        java.lang.Double $r4;
        android.net.Uri $r5;
        java.lang.Long $r6;

        $r0 := @this: android.provider.Contacts$ContactMethods;

        $r1 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("data", $r4);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("aux_data", $r4);

        $r5 = <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI>;

        $r5 = virtualinvoke $r3.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, $r2);

        $l1 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r5);

        virtualinvoke $r2.<android.content.ContentValues: void clear()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("aux_data", $r6);

        $r5 = <android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI>;

        $r5 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r5, $l0);

        virtualinvoke $r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r5, $r2, null, null);

        return;
    }
}
