public class org.apache.harmony.xnet.provider.jsse.ServerHello extends org.apache.harmony.xnet.provider.jsse.Message
{
    org.apache.harmony.xnet.provider.jsse.CipherSuite cipher_suite;
    byte compression_method;
    byte[] random;
    byte[] server_version;
    byte[] session_id;

    public void <init>(java.security.SecureRandom, byte[], byte[], org.apache.harmony.xnet.provider.jsse.CipherSuite, byte)
    {
        org.apache.harmony.xnet.provider.jsse.ServerHello $r0;
        java.security.SecureRandom $r1;
        byte[] $r2, $r3, $r5;
        org.apache.harmony.xnet.provider.jsse.CipherSuite $r4;
        byte $b0, $b4;
        long $l1, $l2;
        java.util.Date $r6;
        int $i3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.ServerHello;

        $r1 := @parameter0: java.security.SecureRandom;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: org.apache.harmony.xnet.provider.jsse.CipherSuite;

        $b0 := @parameter4: byte;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void <init>()>();

        $r5 = newarray (byte)[2];

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] server_version> = $r5;

        $r5 = newarray (byte)[32];

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random> = $r5;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r6.<java.util.Date: long getTime()>();

        $l1 = $l1 / 1000L;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r5);

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        $l2 = -16777216L & $l1;

        $l2 = $l2 >>> 24;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $r5[0] = $b4;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        $l2 = 16711680L & $l1;

        $l2 = $l2 >>> 16;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $r5[1] = $b4;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        $l2 = 65280L & $l1;

        $l2 = $l2 >>> 8;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $r5[2] = $b4;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        $l1 = 255L & $l1;

        $i3 = (int) $l1;

        $b4 = (byte) $i3;

        $r5[3] = $b4;

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id> = $r3;

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: org.apache.harmony.xnet.provider.jsse.CipherSuite cipher_suite> = $r4;

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte compression_method> = $b0;

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] server_version> = $r2;

        $i3 = lengthof $r3;

        $i3 = $i3 + 38;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = $i3;

        return;
    }

    public void <init>(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream, int) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.ServerHello $r0;
        org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream $r1;
        int $i0, $i3;
        byte $b1, $b2;
        byte[] $r2;
        org.apache.harmony.xnet.provider.jsse.CipherSuite $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.ServerHello;

        $r1 := @parameter0: org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream;

        $i0 := @parameter1: int;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void <init>()>();

        $r2 = newarray (byte)[2];

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] server_version> = $r2;

        $r2 = newarray (byte)[32];

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random> = $r2;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] server_version>;

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read()>();

        $b1 = (byte) $i3;

        $r2[0] = $b1;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] server_version>;

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read()>();

        $b1 = (byte) $i3;

        $r2[1] = $b1;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read(byte[],int,int)>($r2, 0, 32);

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int readUint8()>();

        $r2 = newarray (byte)[$i3];

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id> = $r2;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read(byte[],int,int)>($r2, 0, $i3);

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read()>();

        $b1 = (byte) $i3;

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read()>();

        $b2 = (byte) $i3;

        $r3 = staticinvoke <org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte)>($b1, $b2);

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: org.apache.harmony.xnet.provider.jsse.CipherSuite cipher_suite> = $r3;

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: int read()>();

        $b1 = (byte) $i3;

        $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte compression_method> = $b1;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id>;

        $i3 = lengthof $r2;

        $i3 = $i3 + 38;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = $i3;

        $i3 = $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length>;

        if $i3 == $i0 goto label1;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect ServerHello");

        return;

     label1:
        return;
    }

    public byte[] getRandom()
    {
        org.apache.harmony.xnet.provider.jsse.ServerHello $r0;
        byte[] r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.ServerHello;

        r1 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        return r1;
    }

    public int getType()
    {
        org.apache.harmony.xnet.provider.jsse.ServerHello $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.ServerHello;

        return 2;
    }

    public void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)
    {
        org.apache.harmony.xnet.provider.jsse.ServerHello $r0;
        org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream $r1;
        byte[] $r2;
        int $i0;
        long $l1;
        org.apache.harmony.xnet.provider.jsse.CipherSuite $r3;
        byte $b2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.ServerHello;

        $r1 := @parameter0: org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] server_version>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void write(byte[])>($r2);

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] random>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void write(byte[])>($r2);

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id>;

        $i0 = lengthof $r2;

        $l1 = (long) $i0;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void writeUint8(long)>($l1);

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void write(byte[])>($r2);

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: org.apache.harmony.xnet.provider.jsse.CipherSuite cipher_suite>;

        $r2 = virtualinvoke $r3.<org.apache.harmony.xnet.provider.jsse.CipherSuite: byte[] toBytes()>();

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void write(byte[])>($r2);

        $b2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte compression_method>;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void write(byte)>($b2);

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] session_id>;

        $i0 = lengthof $r2;

        $i0 = $i0 + 38;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = $i0;

        return;
    }
}
