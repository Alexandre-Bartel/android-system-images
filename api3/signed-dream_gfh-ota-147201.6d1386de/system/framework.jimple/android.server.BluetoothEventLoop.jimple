class android.server.BluetoothEventLoop extends java.lang.Object
{
    private static final java.lang.String BLUETOOTH_ADMIN_PERM;
    private static final java.lang.String BLUETOOTH_PERM;
    private static final boolean DBG;
    private static final int EVENT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY;
    private static final int EVENT_RESTART_BLUETOOTH;
    private static final long INIT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY;
    private static final long MAX_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY;
    private static final java.lang.String TAG;
    private final android.server.BluetoothDeviceService mBluetoothService;
    private final android.content.Context mContext;
    private final java.util.HashMap mGetRemoteServiceChannelCallbacks;
    private final android.os.Handler mHandler;
    private boolean mInterrupted;
    private int mNativeData;
    private final java.util.HashMap mPasskeyAgentRequestData;
    private boolean mStarted;
    private java.lang.Thread mThread;

    static void <clinit>()
    {
        <android.server.BluetoothEventLoop: java.lang.String TAG> = "BluetoothEventLoop";

        <android.server.BluetoothEventLoop: long MAX_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY> = 12000L;

        <android.server.BluetoothEventLoop: long INIT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY> = 3000L;

        <android.server.BluetoothEventLoop: int EVENT_RESTART_BLUETOOTH> = 2;

        <android.server.BluetoothEventLoop: int EVENT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY> = 1;

        <android.server.BluetoothEventLoop: boolean DBG> = 0;

        <android.server.BluetoothEventLoop: java.lang.String BLUETOOTH_PERM> = "android.permission.BLUETOOTH";

        <android.server.BluetoothEventLoop: java.lang.String BLUETOOTH_ADMIN_PERM> = "android.permission.BLUETOOTH_ADMIN";

        staticinvoke <android.server.BluetoothEventLoop: void classInitNative()>();

        return;
    }

    void <init>(android.content.Context, android.server.BluetoothDeviceService)
    {
        android.server.BluetoothEventLoop $r0;
        android.content.Context $r1;
        android.server.BluetoothDeviceService $r2;
        android.server.BluetoothEventLoop$1 $r3;
        java.util.HashMap $r4;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.server.BluetoothDeviceService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new android.server.BluetoothEventLoop$1;

        specialinvoke $r3.<android.server.BluetoothEventLoop$1: void <init>(android.server.BluetoothEventLoop)>($r0);

        $r0.<android.server.BluetoothEventLoop: android.os.Handler mHandler> = $r3;

        $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService> = $r2;

        $r0.<android.server.BluetoothEventLoop: android.content.Context mContext> = $r1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.server.BluetoothEventLoop: java.util.HashMap mPasskeyAgentRequestData> = $r4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.server.BluetoothEventLoop: java.util.HashMap mGetRemoteServiceChannelCallbacks> = $r4;

        specialinvoke $r0.<android.server.BluetoothEventLoop: void initializeNativeDataNative()>();

        return;
    }

    static android.server.BluetoothDeviceService access$000(android.server.BluetoothEventLoop)
    {
        android.server.BluetoothEventLoop $r0;
        android.server.BluetoothDeviceService r1;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        r1 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        return r1;
    }

    static boolean access$100(android.server.BluetoothEventLoop)
    {
        android.server.BluetoothEventLoop $r0;
        boolean $z0;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        $z0 = specialinvoke $r0.<android.server.BluetoothEventLoop: boolean setUpEventLoopNative()>();

        return $z0;
    }

    static boolean access$202(android.server.BluetoothEventLoop, boolean)
    {
        android.server.BluetoothEventLoop $r0;
        boolean $z0;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        $z0 := @parameter1: boolean;

        $r0.<android.server.BluetoothEventLoop: boolean mStarted> = $z0;

        return $z0;
    }

    static boolean access$300(android.server.BluetoothEventLoop)
    {
        android.server.BluetoothEventLoop $r0;
        boolean z0;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        z0 = $r0.<android.server.BluetoothEventLoop: boolean mInterrupted>;

        return z0;
    }

    static boolean access$400(android.server.BluetoothEventLoop, int)
    {
        android.server.BluetoothEventLoop $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        $i0 := @parameter1: int;

        $z0 = specialinvoke $r0.<android.server.BluetoothEventLoop: boolean waitForAndDispatchEvent(int)>($i0);

        return $z0;
    }

    static void access$500(android.server.BluetoothEventLoop)
    {
        android.server.BluetoothEventLoop $r0;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        specialinvoke $r0.<android.server.BluetoothEventLoop: void tearDownEventLoopNative()>();

        return;
    }

    static java.lang.Thread access$602(android.server.BluetoothEventLoop, java.lang.Thread)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.Thread $r1;

        $r0 := @parameter0: android.server.BluetoothEventLoop;

        $r1 := @parameter1: java.lang.Thread;

        $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread> = $r1;

        return $r1;
    }

    private static native void classInitNative();

    private native void cleanupNativeDataNative();

    private native void initializeNativeDataNative();

    private static void log(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothEventLoop", $r0);

        return;
    }

    private boolean onAuthAgentAuthorize(java.lang.String, java.lang.String, java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1, $r2, $r3;
        android.bluetooth.BluetoothA2dp $r4;
        boolean $z0;
        android.server.BluetoothDeviceService $r5;
        android.content.Context $r6;
        int $i0;
        java.lang.StringBuilder $r7;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $z0 = virtualinvoke $r5.<android.server.BluetoothDeviceService: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("service_audio");

        if $z0 == 0 goto label4;

        $r4 = new android.bluetooth.BluetoothA2dp;

        $r6 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        specialinvoke $r4.<android.bluetooth.BluetoothA2dp: void <init>(android.content.Context)>($r6);

        $i0 = virtualinvoke $r4.<android.bluetooth.BluetoothA2dp: int getSinkPriority(java.lang.String)>($r1);

        if $i0 <= 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allowing incoming A2DP connection from ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothEventLoop", $r1);

        return $z0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting incoming A2DP connection from ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothEventLoop", $r1);

        return $z0;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting incoming ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connection from ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothEventLoop", $r1);

        return 0;
    }

    private void onAuthAgentCancel(java.lang.String, java.lang.String, java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAuthAgentCancel(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.server.BluetoothEventLoop: void log(java.lang.String)>($r1);

        return;
    }

    private void onBondingCreated(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.server.BluetoothDeviceService $r2;
        android.server.BluetoothDeviceService$BondState $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int)>($r1, 1);

        return;
    }

    private void onBondingRemoved(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.server.BluetoothDeviceService $r2;
        android.server.BluetoothDeviceService$BondState $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int,int)>($r1, 0, 6);

        return;
    }

    private void onCreateBondingResult(java.lang.String, int)
    {
        android.server.BluetoothEventLoop $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.server.BluetoothDeviceService $r2;
        android.server.BluetoothDeviceService$BondState $r3;
        boolean $z0;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        if $i0 != 0 goto label1;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int)>($r1, 1);

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $z0 = virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: boolean isAutoPairingAttemptsInProgress(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void clearPinAttempts(java.lang.String)>($r1);

        return;

     label1:
        if $i0 != 1 goto label2;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $i1 = virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: int getAttempt(java.lang.String)>($r1);

        if $i1 != 1 goto label2;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void addAutoPairingFailure(java.lang.String)>($r1);

        specialinvoke $r0.<android.server.BluetoothEventLoop: void pairingAttempt(java.lang.String,int)>($r1, $i0);

        return;

     label2:
        if $i0 != 4 goto label3;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $z0 = virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: boolean isAutoPairingAttemptsInProgress(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        specialinvoke $r0.<android.server.BluetoothEventLoop: void pairingAttempt(java.lang.String,int)>($r1, $i0);

        return;

     label3:
        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int,int)>($r1, 0, $i0);

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $z0 = virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: boolean isAutoPairingAttemptsInProgress(java.lang.String)>($r1);

        if $z0 == 0 goto label5;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void clearPinAttempts(java.lang.String)>($r1);

        return;

     label4:
        return;

     label5:
        return;
    }

    private void onDiscoveryCompleted()
    {
        android.server.BluetoothEventLoop $r0;
        android.content.Intent $r1;
        android.server.BluetoothDeviceService $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        virtualinvoke $r2.<android.server.BluetoothDeviceService: void setIsDiscovering(boolean)>(0);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.DISCOVERY_COMPLETED");

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r1, "android.permission.BLUETOOTH");

        return;
    }

    private void onDiscoveryStarted()
    {
        android.server.BluetoothEventLoop $r0;
        android.content.Intent $r1;
        android.server.BluetoothDeviceService $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        virtualinvoke $r2.<android.server.BluetoothDeviceService: void setIsDiscovering(boolean)>(1);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.DISCOVERY_STARTED");

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r1, "android.permission.BLUETOOTH");

        return;
    }

    private void onGetRemoteServiceChannelResult(java.lang.String, int)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        android.bluetooth.IBluetoothDeviceCallback $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<android.server.BluetoothEventLoop: java.util.HashMap mGetRemoteServiceChannelCallbacks>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (android.bluetooth.IBluetoothDeviceCallback) $r2;

        if $r4 == null goto label4;

        $r3 = $r0.<android.server.BluetoothEventLoop: java.util.HashMap mGetRemoteServiceChannelCallbacks>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        interfaceinvoke $r4.<android.bluetooth.IBluetoothDeviceCallback: void onGetRemoteServiceChannelResult(java.lang.String,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void onNameChanged(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.NAME_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.NAME", $r1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onPasskeyAgentCancel(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        android.content.Intent $r1;
        java.lang.String $r2;
        android.server.BluetoothDeviceService $r3;
        android.content.Context $r4;
        android.server.BluetoothDeviceService$BondState $r5;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r2 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        virtualinvoke $r3.<android.server.BluetoothDeviceService: boolean cancelPin(java.lang.String)>($r2);

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.PAIRING_CANCEL");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r2);

        $r4 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r1, "android.permission.BLUETOOTH_ADMIN");

        $r3 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r5 = virtualinvoke $r3.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r5.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int,int)>($r2, 0, 3);

        return;
    }

    private void onPasskeyAgentRequest(java.lang.String, int)
    {
        android.server.BluetoothEventLoop $r0;
        int $i0;
        android.content.Intent $r1;
        java.lang.String $r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        android.server.BluetoothDeviceService $r5;
        android.server.BluetoothDeviceService$BondState $r6;
        android.content.Context $r7;
        boolean $z0;
        byte[] $r8;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = $r0.<android.server.BluetoothEventLoop: java.util.HashMap mPasskeyAgentRequestData>;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $i0 = virtualinvoke $r5.<android.server.BluetoothDeviceService: int getBluetoothState()>();

        if $i0 != 3 goto label1;

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        virtualinvoke $r5.<android.server.BluetoothDeviceService: boolean cancelPin(java.lang.String)>($r2);

        return;

     label1:
        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r6 = virtualinvoke $r5.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $i0 = virtualinvoke $r6.<android.server.BluetoothDeviceService$BondState: int getBondState(java.lang.String)>($r2);

        if $i0 != 2 goto label2;

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $i0 = virtualinvoke $r5.<android.server.BluetoothDeviceService: int getRemoteClass(java.lang.String)>($r2);

        $i0 = staticinvoke <android.bluetooth.BluetoothClass$Device: int getDevice(int)>($i0);

        lookupswitch($i0)
        {
            case 1028: goto label3;
            case 1032: goto label3;
            case 1048: goto label3;
            case 1052: goto label3;
            case 1056: goto label3;
            case 1064: goto label3;
            default: goto label2;
        };

     label2:
        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.PAIRING_REQUEST");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r2);

        $r7 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r1, "android.permission.BLUETOOTH_ADMIN");

        return;

     label3:
        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r6 = virtualinvoke $r5.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $z0 = virtualinvoke $r6.<android.server.BluetoothDeviceService$BondState: boolean hasAutoPairingFailed(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r6 = virtualinvoke $r5.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $z0 = virtualinvoke $r6.<android.server.BluetoothDeviceService$BondState: boolean isAutoPairingBlacklisted(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r6 = virtualinvoke $r5.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r6.<android.server.BluetoothDeviceService$BondState: void attempt(java.lang.String)>($r2);

        $r5 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r8 = staticinvoke <android.bluetooth.BluetoothDevice: byte[] convertPinToBytes(java.lang.String)>("0000");

        virtualinvoke $r5.<android.server.BluetoothDeviceService: boolean setPin(java.lang.String,byte[])>($r2, $r8);

        return;
    }

    private void onRemoteClassUpdated(java.lang.String, int)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        int $i0;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_DEVICE_DISAPPEARED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.intent.CLASS", $i0);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteDeviceConnected(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_DEVICE_CONNECTED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteDeviceDisappeared(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_DEVICE_DISAPPEARED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteDeviceDisconnectRequested(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_DEVICE_DISCONNECT_REQUESTED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteDeviceDisconnected(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_DEVICE_DISCONNECTED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteDeviceFound(java.lang.String, int, short)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        int $i0;
        short $s1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $s1 := @parameter2: short;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_DEVICE_FOUND");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.intent.CLASS", $i0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>("android.bluetooth.intent.RSSI", $s1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteNameChanged(java.lang.String, java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1, $r2;
        android.content.Intent $r3;
        android.content.Context $r4;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_NAME_UPDATED");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.NAME", $r2);

        $r4 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r3, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteNameFailed(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_NAME_FAILED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;
    }

    private void onRemoteNameUpdated(java.lang.String, java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1, $r2;
        android.content.Intent $r3;
        android.content.Context $r4;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.REMOTE_NAME_UPDATED");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.ADDRESS", $r1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.bluetooth.intent.NAME", $r2);

        $r4 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r3, "android.permission.BLUETOOTH");

        return;
    }

    private void onRestartRequired()
    {
        android.server.BluetoothEventLoop $r0;
        boolean $z0;
        android.server.BluetoothDeviceService $r1;
        android.os.Handler $r2;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $z0 = virtualinvoke $r1.<android.server.BluetoothDeviceService: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothEventLoop", "*** A serious error occured (did hcid crash?) - restarting Bluetooth ***");

        $r2 = $r0.<android.server.BluetoothEventLoop: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        return;

     label1:
        return;
    }

    private void pairingAttempt(java.lang.String, int)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        int $i0, $i1;
        android.server.BluetoothDeviceService $r2;
        android.server.BluetoothDeviceService$BondState $r3;
        long $l2;
        byte $b3;
        android.os.Handler $r4;
        android.os.Message $r5;
        boolean $z0;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        $i1 = virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: int getAttempt(java.lang.String)>($r1);

        $l2 = (long) $i1;

        $l2 = $l2 * 3000L;

        $b3 = $l2 cmp 12000L;

        if $b3 <= 0 goto label1;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void clearPinAttempts(java.lang.String)>($r1);

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int,int)>($r1, 0, $i0);

        return;

     label1:
        $r4 = $r0.<android.server.BluetoothEventLoop: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $r5.<android.os.Message: java.lang.Object obj> = $r1;

        $r4 = $r0.<android.server.BluetoothEventLoop: android.os.Handler mHandler>;

        $l2 = (long) $i1;

        $l2 = $l2 * 3000L;

        $z0 = virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r5, $l2);

        if $z0 != 0 goto label2;

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void clearPinAttempts(java.lang.String)>($r1);

        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void setBondState(java.lang.String,int,int)>($r1, 0, $i0);

        return;

     label2:
        $r2 = $r0.<android.server.BluetoothEventLoop: android.server.BluetoothDeviceService mBluetoothService>;

        $r3 = virtualinvoke $r2.<android.server.BluetoothDeviceService: android.server.BluetoothDeviceService$BondState getBondState()>();

        virtualinvoke $r3.<android.server.BluetoothDeviceService$BondState: void attempt(java.lang.String)>($r1);

        return;
    }

    private native boolean setUpEventLoopNative();

    private native void tearDownEventLoopNative();

    private boolean waitForAndDispatchEvent(int)
    {
        android.server.BluetoothEventLoop $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: android.server.BluetoothEventLoop;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $z0 = specialinvoke $r0.<android.server.BluetoothEventLoop: boolean waitForAndDispatchEventNative(int)>($i0);

     label2:
        exitmonitor $r0;

        return $z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private native boolean waitForAndDispatchEventNative(int);

    protected void finalize() throws java.lang.Throwable
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.server.BluetoothEventLoop;

     label1:
        specialinvoke $r0.<android.server.BluetoothEventLoop: void cleanupNativeDataNative()>();

     label2:
        specialinvoke $r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r1 := @caughtexception;

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.util.HashMap getPasskeyAgentRequestData()
    {
        android.server.BluetoothEventLoop $r0;
        java.util.HashMap r1;

        $r0 := @this: android.server.BluetoothEventLoop;

        r1 = $r0.<android.server.BluetoothEventLoop: java.util.HashMap mPasskeyAgentRequestData>;

        return r1;
    }

    java.util.HashMap getRemoteServiceChannelCallbacks()
    {
        android.server.BluetoothEventLoop $r0;
        java.util.HashMap r1;

        $r0 := @this: android.server.BluetoothEventLoop;

        r1 = $r0.<android.server.BluetoothEventLoop: java.util.HashMap mGetRemoteServiceChannelCallbacks>;

        return r1;
    }

    public boolean isEventLoopRunning()
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.Thread $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @this: android.server.BluetoothEventLoop;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread>;

        if $r1 == null goto label4;

        $z0 = $r0.<android.server.BluetoothEventLoop: boolean mStarted>;

     label2:
        if $z0 == 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    void onModeChanged(java.lang.String)
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        int $i0;
        android.content.Context $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        $r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.server.BluetoothDeviceService: int bluezStringToScanMode(java.lang.String)>($r1);

        if $i0 < 0 goto label1;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.intent.action.SCAN_MODE_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.intent.SCAN_MODE", $i0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r3 = $r0.<android.server.BluetoothEventLoop: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>($r2, "android.permission.BLUETOOTH");

        return;

     label1:
        return;
    }

    void start()
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.Thread $r1;
        android.server.BluetoothEventLoop$2 $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread>;

     label2:
        if $r1 == null goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 = new android.server.BluetoothEventLoop$2;

        specialinvoke $r2.<android.server.BluetoothEventLoop$2: void <init>(android.server.BluetoothEventLoop,java.lang.String)>($r0, "Bluetooth Event Loop");

        $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread> = $r2;

        $r0.<android.server.BluetoothEventLoop: boolean mInterrupted> = 0;

        $r1 = $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

     label5:
        goto label3;

     label6:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void stop()
    {
        android.server.BluetoothEventLoop $r0;
        java.lang.Thread $r1;
        java.lang.InterruptedException $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.server.BluetoothEventLoop;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread>;

        if $r1 == null goto label5;

        $r0.<android.server.BluetoothEventLoop: boolean mInterrupted> = 1;

     label2:
        $r1 = $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread>;

     label3:
        virtualinvoke $r1.<java.lang.Thread: void join()>();

     label4:
        $r0.<android.server.BluetoothEventLoop: java.lang.Thread mThread> = null;

     label5:
        exitmonitor $r0;

        return;

     label6:
        $r2 := @caughtexception;

     label7:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothEventLoop", "Interrupted waiting for Event Loop thread to join");

     label8:
        goto label5;

     label9:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.Throwable from label2 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }
}
