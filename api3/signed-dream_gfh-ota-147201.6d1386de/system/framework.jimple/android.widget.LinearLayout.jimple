public class android.widget.LinearLayout extends android.view.ViewGroup
{
    public static final int HORIZONTAL;
    private static final int INDEX_BOTTOM;
    private static final int INDEX_CENTER_VERTICAL;
    private static final int INDEX_FILL;
    private static final int INDEX_TOP;
    public static final int VERTICAL;
    private static final int VERTICAL_GRAVITY_COUNT;
    private boolean mBaselineAligned;
    private int mBaselineAlignedChildIndex;
    private int mBaselineChildTop;
    private int mGravity;
    private int[] mMaxAscent;
    private int[] mMaxDescent;
    private int mOrientation;
    private int mTotalLength;
    private float mWeightSum;

    public void <init>(android.content.Context)
    {
        android.widget.LinearLayout $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        $r0.<android.widget.LinearLayout: boolean mBaselineAligned> = 1;

        $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = 0;

        $r0.<android.widget.LinearLayout: int mBaselineChildTop> = 0;

        $r0.<android.widget.LinearLayout: int mGravity> = 51;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.LinearLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;
        boolean $z0;
        float $f0;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<android.widget.LinearLayout: boolean mBaselineAligned> = 1;

        $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = 0;

        $r0.<android.widget.LinearLayout: int mBaselineChildTop> = 0;

        $r0.<android.widget.LinearLayout: int mGravity> = 51;

        $r3 = <com.android.internal.R$styleable: int[] LinearLayout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if $i0 < 0 goto label1;

        virtualinvoke $r0.<android.widget.LinearLayout: void setOrientation(int)>($i0);

     label1:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if $i0 < 0 goto label2;

        virtualinvoke $r0.<android.widget.LinearLayout: void setGravity(int)>($i0);

     label2:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        if $z0 != 0 goto label3;

        virtualinvoke $r0.<android.widget.LinearLayout: void setBaselineAligned(boolean)>($z0);

     label3:
        $f0 = virtualinvoke $r4.<android.content.res.TypedArray: float getFloat(int,float)>(4, -1.0F);

        $r0.<android.widget.LinearLayout: float mWeightSum> = $f0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(3, -1);

        $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void forceUniformHeight(int, int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke $r0.<android.view.View: int getMeasuredHeight()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        $i4 = 0;

     label1:
        if $i4 >= $i0 goto label3;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i4);

        $i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 != -1 goto label2;

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $r3.<android.view.ViewGroup$LayoutParams: int width> = $i5;

        virtualinvoke $r0.<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i1, 0, $i3, 0);

        $r3.<android.view.ViewGroup$LayoutParams: int width> = $i2;

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        return;
    }

    private void forceUniformWidth(int, int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke $r0.<android.view.View: int getMeasuredWidth()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        $i4 = 0;

     label1:
        if $i4 >= $i0 goto label3;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i4);

        $i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        if $i2 != -1 goto label2;

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $r3.<android.view.ViewGroup$LayoutParams: int height> = $i5;

        virtualinvoke $r0.<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i3, 0, $i1, 0);

        $r3.<android.view.ViewGroup$LayoutParams: int height> = $i2;

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        return;
    }

    private void setChildFrame(android.view.View, int, int, int, int)
    {
        android.widget.LinearLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i2 = $i0 + $i2;

        $i3 = $i1 + $i3;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.widget.LinearLayout$LayoutParams;

        return $z0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout $r0;
        android.widget.LinearLayout$LayoutParams $r1;

        $r0 := @this: android.widget.LinearLayout;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout $r0;
        int $i0;
        android.widget.LinearLayout$LayoutParams $r1;

        $r0 := @this: android.widget.LinearLayout;

        $i0 = $r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 0 goto label1;

        $r1 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r1.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;

     label1:
        $i0 = $r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 1 goto label2;

        $r1 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r1.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;

     label2:
        return null;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout $r0;
        android.util.AttributeSet $r1;
        android.widget.LinearLayout$LayoutParams $r2;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke $r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.LinearLayout$LayoutParams $r2;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke $r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout $r0;
        android.util.AttributeSet $r1;
        android.widget.LinearLayout$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        $r3 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.LinearLayout$LayoutParams $r2;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public int getBaseline()
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.LinearLayout$LayoutParams $r4;

        $r0 := @this: android.widget.LinearLayout;

        $i1 = $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i1 >= 0 goto label1;

        $i1 = specialinvoke $r0.<android.view.View: int getBaseline()>();

        return $i1;

     label1:
        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i2 = $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i1 > $i2 goto label2;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");

        throw $r1;

     label2:
        $i1 = $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $i1 = virtualinvoke $r2.<android.view.View: int getBaseline()>();

        if $i1 != -1 goto label4;

        $i1 = $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i1 != 0 goto label3;

        return -1;

     label3:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn\'t know how to get its baseline.");

        throw $r1;

     label4:
        $i2 = $r0.<android.widget.LinearLayout: int mBaselineChildTop>;

        $i0 = $r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 1 goto label5;

        $i0 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i0 = $i0 & 112;

        if $i0 == 48 goto label5;

        lookupswitch($i0)
        {
            case 16: goto label7;
            case 80: goto label6;
            default: goto label5;
        };

     label5:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i0 = $r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i2 = $i0 + $i2;

        $i1 = $i2 + $i1;

        return $i1;

     label6:
        $i2 = $r0.<android.view.View: int mBottom>;

        $i0 = $r0.<android.view.View: int mTop>;

        $i2 = $i2 - $i0;

        $i0 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 - $i0;

        $i0 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i2 = $i2 - $i0;

        goto label5;

     label7:
        $i0 = $r0.<android.view.View: int mBottom>;

        $i3 = $r0.<android.view.View: int mTop>;

        $i0 = $i0 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $i0 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 - $i3;

        $i3 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i0 = $i0 - $i3;

        $i0 = $i0 / 2;

        $i2 = $i2 + $i0;

        goto label5;
    }

    public int getBaselineAlignedChildIndex()
    {
        android.widget.LinearLayout $r0;
        int i0;

        $r0 := @this: android.widget.LinearLayout;

        i0 = $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        return i0;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.widget.LinearLayout $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return 0;
    }

    int getLocationOffset(android.view.View)
    {
        android.widget.LinearLayout $r0;
        android.view.View $r1;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.widget.LinearLayout $r0;
        android.view.View $r1;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getOrientation()
    {
        android.widget.LinearLayout $r0;
        int i0;

        $r0 := @this: android.widget.LinearLayout;

        i0 = $r0.<android.widget.LinearLayout: int mOrientation>;

        return i0;
    }

    android.view.View getVirtualChildAt(int)
    {
        android.widget.LinearLayout $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        return $r1;
    }

    int getVirtualChildCount()
    {
        android.widget.LinearLayout $r0;
        int $i0;

        $r0 := @this: android.widget.LinearLayout;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        return $i0;
    }

    public float getWeightSum()
    {
        android.widget.LinearLayout $r0;
        float f0;

        $r0 := @this: android.widget.LinearLayout;

        f0 = $r0.<android.widget.LinearLayout: float mWeightSum>;

        return f0;
    }

    public boolean isBaselineAligned()
    {
        android.widget.LinearLayout $r0;
        boolean z0;

        $r0 := @this: android.widget.LinearLayout;

        z0 = $r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        return z0;
    }

    void layoutHorizontal()
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        int[] $r1, $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.LinearLayout$LayoutParams $r5;

        $r0 := @this: android.widget.LinearLayout;

        $i5 = $r0.<android.view.View: int mPaddingTop>;

        $i6 = $i5;

        $i7 = $r0.<android.view.View: int mPaddingLeft>;

        $i8 = $i7;

        $i0 = $r0.<android.view.View: int mBottom>;

        $i1 = $r0.<android.view.View: int mTop>;

        $i1 = $i0 - $i1;

        $i0 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i1 - $i0;

        $i1 = $i1 - $i5;

        $i9 = $r0.<android.view.View: int mPaddingBottom>;

        $i1 = $i1 - $i9;

        $i9 = virtualinvoke $r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i4 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i3 = $i4 & 7;

        $i4 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i4 = $i4 & 112;

        $z0 = $r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        $r1 = $r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        $r2 = $r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        if $i3 == 3 goto label01;

        lookupswitch($i3)
        {
            case 1: goto label05;
            case 5: goto label04;
            default: goto label01;
        };

     label01:
        $i7 = 0;

     label02:
        if $i7 >= $i9 goto label13;

        $r3 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i7);

        if $r3 != null goto label06;

        $i3 = virtualinvoke $r0.<android.widget.LinearLayout: int measureNullChild(int)>($i7);

        $i8 = $i8 + $i3;

     label03:
        $i7 = $i7 + 1;

        goto label02;

     label04:
        $i8 = $r0.<android.view.View: int mRight>;

        $i7 = $r0.<android.view.View: int mLeft>;

        $i8 = $i8 - $i7;

        $i7 = $r0.<android.view.View: int mPaddingLeft>;

        $i8 = $i8 + $i7;

        $i7 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i8 = $i8 - $i7;

        goto label01;

     label05:
        $i8 = $r0.<android.view.View: int mRight>;

        $i3 = $r0.<android.view.View: int mLeft>;

        $i8 = $i8 - $i3;

        $i3 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i8 = $i8 - $i3;

        $i8 = $i8 / 2;

        $i8 = $i7 + $i8;

        goto label01;

     label06:
        $i3 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i3 == 8 goto label03;

        $i3 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i10 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i2 = -1;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.LinearLayout$LayoutParams) $r4;

        if $z0 == 0 goto label07;

        $i11 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i11 == -1 goto label07;

        $i2 = virtualinvoke $r3.<android.view.View: int getBaseline()>();

     label07:
        $i11 = $r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        $i12 = $i11;

        if $i11 >= 0 goto label08;

        $i12 = $i4;

     label08:
        $i11 = $i12 & 112;

        lookupswitch($i11)
        {
            case 16: goto label11;
            case 48: goto label10;
            case 80: goto label12;
            default: goto label09;
        };

     label09:
        $i2 = $r5.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i8 = $i8 + $i2;

        $i2 = virtualinvoke $r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>($r3);

        $i2 = $i8 + $i2;

        specialinvoke $r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>($r3, $i2, $i6, $i3, $i10);

        $i10 = $r5.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i3 = $i10 + $i3;

        $i10 = virtualinvoke $r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>($r3);

        $i3 = $i3 + $i10;

        $i8 = $i8 + $i3;

        $i3 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>($r3, $i7);

        $i7 = $i7 + $i3;

        goto label03;

     label10:
        $i6 = $r5.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i6 = $i5 + $i6;

        if $i2 == -1 goto label09;

        $i11 = $r1[1];

        $i2 = $i11 - $i2;

        $i6 = $i6 + $i2;

        goto label09;

     label11:
        $i6 = $i1 - $i10;

        $i6 = $i6 / 2;

        $i6 = $i6 + $i5;

        $i2 = $r5.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i6 = $i6 + $i2;

        $i2 = $r5.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i6 = $i6 - $i2;

        goto label09;

     label12:
        $i6 = $i0 - $i10;

        $i11 = $r5.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i6 = $i6 - $i11;

        if $i2 == -1 goto label09;

        $i11 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i2 = $i11 - $i2;

        $i11 = $r2[2];

        $i2 = $i11 - $i2;

        $i6 = $i6 - $i2;

        goto label09;

     label13:
        return;
    }

    void layoutVertical()
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;

        $r0 := @this: android.widget.LinearLayout;

        $i4 = $r0.<android.view.View: int mPaddingLeft>;

        $i5 = $r0.<android.view.View: int mPaddingTop>;

        $i6 = $i5;

        $i7 = $i4;

        $i0 = $r0.<android.view.View: int mRight>;

        $i1 = $r0.<android.view.View: int mLeft>;

        $i1 = $i0 - $i1;

        $i0 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i1 - $i0;

        $i1 = $i1 - $i4;

        $i8 = $r0.<android.view.View: int mPaddingRight>;

        $i1 = $i1 - $i8;

        $i8 = virtualinvoke $r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i3 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i2 = $i3 & 112;

        $i3 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i3 = $i3 & 7;

        if $i2 == 48 goto label01;

        lookupswitch($i2)
        {
            case 16: goto label05;
            case 80: goto label04;
            default: goto label01;
        };

     label01:
        $i5 = 0;

     label02:
        if $i5 >= $i8 goto label12;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i5);

        if $r1 != null goto label06;

        $i2 = virtualinvoke $r0.<android.widget.LinearLayout: int measureNullChild(int)>($i5);

        $i6 = $i6 + $i2;

     label03:
        $i5 = $i5 + 1;

        goto label02;

     label04:
        $i6 = $r0.<android.view.View: int mBottom>;

        $i5 = $r0.<android.view.View: int mTop>;

        $i6 = $i6 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingTop>;

        $i6 = $i6 + $i5;

        $i5 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i6 = $i6 - $i5;

        goto label01;

     label05:
        $i6 = $r0.<android.view.View: int mBottom>;

        $i2 = $r0.<android.view.View: int mTop>;

        $i6 = $i6 - $i2;

        $i2 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i6 = $i6 - $i2;

        $i6 = $i6 / 2;

        $i6 = $i5 + $i6;

        goto label01;

     label06:
        $i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label03;

        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i10 = $r3.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i10 >= 0 goto label07;

        $i10 = $i3;

     label07:
        $i10 = $i10 & 7;

        lookupswitch($i10)
        {
            case 1: goto label10;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label11;
            default: goto label08;
        };

     label08:
        $i10 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i6 = $i6 + $i10;

        $i10 = virtualinvoke $r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>($r1);

        $i10 = $i6 + $i10;

        specialinvoke $r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>($r1, $i7, $i10, $i9, $i2);

        $i9 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i9 + $i2;

        $i9 = virtualinvoke $r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>($r1);

        $i2 = $i2 + $i9;

        $i6 = $i6 + $i2;

        $i2 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>($r1, $i5);

        $i5 = $i5 + $i2;

        goto label03;

     label09:
        $i7 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i7 = $i4 + $i7;

        goto label08;

     label10:
        $i7 = $i1 - $i9;

        $i7 = $i7 / 2;

        $i7 = $i7 + $i4;

        $i10 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i7 = $i7 + $i10;

        $i10 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i7 = $i7 - $i10;

        goto label08;

     label11:
        $i7 = $i0 - $i9;

        $i10 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i7 = $i7 - $i10;

        goto label08;

     label12:
        return;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.LinearLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.widget.LinearLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        virtualinvoke $r0.<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i1, $i2, $i3, $i4);

        return;
    }

    void measureHorizontal(int, int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2;
        int[] $r1, $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.LinearLayout$LayoutParams $r5;
        byte $b11;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        $i2 = 0;

        $i3 = 0;

        $i4 = 0;

        $z0 = 1;

        $f0 = 0.0F;

        $i5 = virtualinvoke $r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $z1 = 0;

        $r1 = $r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        if $r1 == null goto label01;

        $r1 = $r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        if $r1 != null goto label02;

     label01:
        $r1 = newarray (int)[4];

        $r0.<android.widget.LinearLayout: int[] mMaxAscent> = $r1;

        $r1 = newarray (int)[4];

        $r0.<android.widget.LinearLayout: int[] mMaxDescent> = $r1;

     label02:
        $r1 = $r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        $r2 = $r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        $r1[3] = -1;

        $r1[2] = -1;

        $r1[1] = -1;

        $r1[0] = -1;

        $r2[3] = -1;

        $r2[2] = -1;

        $r2[1] = -1;

        $r2[0] = -1;

        $z2 = $r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        $i8 = 0;

     label03:
        if $i8 >= $i5 goto label25;

        $r3 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i8);

        if $r3 != null goto label05;

        $i9 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i10 = virtualinvoke $r0.<android.widget.LinearLayout: int measureNullChild(int)>($i8);

        $i9 = $i9 + $i10;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i9;

     label04:
        $i8 = $i8 + 1;

        goto label03;

     label05:
        $i9 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i9 != 8 goto label06;

        $i9 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>($r3, $i8);

        $i8 = $i8 + $i9;

        goto label04;

     label06:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.LinearLayout$LayoutParams) $r4;

        $f1 = $r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $f0 = $f0 + $f1;

        if $i6 != 1073741824 goto label14;

        $i9 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        if $i9 != 0 goto label14;

        $f1 = $r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b11 = $f1 cmpl 0.0F;

        if $b11 <= 0 goto label14;

        $i9 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i10 = $r5.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i12 = $r5.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i10 = $i10 + $i12;

        $i9 = $i9 + $i10;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i9;

        if $z2 == 0 goto label07;

        $i9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i9, $i9);

     label07:
        $z3 = 0;

        if $i7 == 1073741824 goto label08;

        $i9 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i9 != -1 goto label08;

        $z1 = 1;

        $z3 = 1;

     label08:
        $i9 = $r5.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i10 = $r5.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i9 = $i9 + $i10;

        $i10 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i10 = $i10 + $i9;

        if $z2 == 0 goto label10;

        $i12 = virtualinvoke $r3.<android.view.View: int getBaseline()>();

        if $i12 == -1 goto label10;

        $i13 = $r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i13 >= 0 goto label19;

        $i13 = $r0.<android.widget.LinearLayout: int mGravity>;

     label09:
        $i13 = $i13 & 112;

        $i13 = $i13 >> 4;

        $i13 = $i13 & -2;

        $i13 = $i13 >> 1;

        $i14 = $r1[$i13];

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i12);

        $r1[$i13] = $i14;

        $i14 = $r2[$i13];

        $i12 = $i10 - $i12;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i12);

        $r2[$i13] = $i12;

     label10:
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i10);

        if $z0 == 0 goto label20;

        $i12 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i12 != -1 goto label20;

        $z0 = 1;

     label11:
        $f1 = $r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b11 = $f1 cmpl 0.0F;

        if $b11 <= 0 goto label22;

        if $z3 == 0 goto label21;

     label12:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i9);

     label13:
        $i9 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>($r3, $i8);

        $i8 = $i8 + $i9;

        goto label04;

     label14:
        $i9 = -2147483648;

        $i10 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        if $i10 != 0 goto label15;

        $f1 = $r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b11 = $f1 cmpl 0.0F;

        if $b11 <= 0 goto label15;

        $i9 = 0;

        $r5.<android.view.ViewGroup$LayoutParams: int width> = -2;

     label15:
        $b11 = $f0 cmpl 0.0F;

        if $b11 != 0 goto label18;

        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

     label16:
        virtualinvoke $r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r3, $i8, $i0, $i10, $i1, 0);

        if $i9 == -2147483648 goto label17;

        $r5.<android.view.ViewGroup$LayoutParams: int width> = $i9;

     label17:
        $i9 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i10 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i12 = $r5.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i10 = $i10 + $i12;

        $i12 = $r5.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i10 = $i10 + $i12;

        $i12 = virtualinvoke $r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>($r3);

        $i10 = $i10 + $i12;

        $i9 = $i9 + $i10;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i9;

        goto label07;

     label18:
        $i10 = 0;

        goto label16;

     label19:
        $i13 = $r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        goto label09;

     label20:
        $z0 = 0;

        goto label11;

     label21:
        $i9 = $i10;

        goto label12;

     label22:
        if $z3 == 0 goto label24;

     label23:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i9);

        goto label13;

     label24:
        $i9 = $i10;

        goto label23;

     label25:
        $i8 = $r1[1];

        if $i8 != -1 goto label26;

        $i8 = $r1[0];

        if $i8 != -1 goto label26;

        $i8 = $r1[2];

        if $i8 != -1 goto label26;

        $i8 = $r1[3];

        if $i8 == -1 goto label27;

     label26:
        $i8 = $r1[3];

        $i9 = $r1[0];

        $i10 = $r1[1];

        $i12 = $r1[2];

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i12);

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i10);

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $i9 = $r2[3];

        $i10 = $r2[0];

        $i12 = $r2[1];

        $i13 = $r2[2];

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13);

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i12);

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i10);

        $i8 = $i8 + $i9;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i8);

     label27:
        $i8 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = $r0.<android.view.View: int mPaddingLeft>;

        $i10 = $r0.<android.view.View: int mPaddingRight>;

        $i9 = $i9 + $i10;

        $i8 = $i8 + $i9;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i8;

        $i8 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumWidth()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $i8 = staticinvoke <android.widget.LinearLayout: int resolveSize(int,int)>($i8, $i0);

        $i9 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = $i8 - $i9;

        if $i9 == 0 goto label51;

        $b11 = $f0 cmpl 0.0F;

        if $b11 <= 0 goto label51;

        $f1 = $r0.<android.widget.LinearLayout: float mWeightSum>;

        $b11 = $f1 cmpl 0.0F;

        if $b11 <= 0 goto label31;

        $f0 = $r0.<android.widget.LinearLayout: float mWeightSum>;

     label28:
        $r1[3] = -1;

        $r1[2] = -1;

        $r1[1] = -1;

        $r1[0] = -1;

        $r2[3] = -1;

        $r2[2] = -1;

        $r2[1] = -1;

        $r2[0] = -1;

        $i2 = -1;

        $r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        $i4 = 0;

     label29:
        if $i4 >= $i5 goto label47;

        $r3 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i4);

        if $r3 == null goto label30;

        $i10 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i10 != 8 goto label32;

     label30:
        $i4 = $i4 + 1;

        goto label29;

     label31:
        goto label28;

     label32:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.LinearLayout$LayoutParams) $r4;

        $f1 = $r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b11 = $f1 cmpl 0.0F;

        if $b11 <= 0 goto label35;

        $f2 = (float) $i9;

        $f2 = $f2 * $f1;

        $f2 = $f2 / $f0;

        $i10 = (int) $f2;

        $f0 = $f0 - $f1;

        $i9 = $i9 - $i10;

        $i12 = $r0.<android.view.View: int mPaddingTop>;

        $i13 = $r0.<android.view.View: int mPaddingBottom>;

        $i12 = $i12 + $i13;

        $i13 = $r5.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i12 = $i12 + $i13;

        $i13 = $r5.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i12 = $i12 + $i13;

        $i13 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        $i12 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>($i1, $i12, $i13);

        $i13 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        if $i13 != 0 goto label33;

        if $i6 == 1073741824 goto label40;

     label33:
        $i13 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i10 = $i13 + $i10;

        if $i10 >= 0 goto label34;

        $i10 = 0;

     label34:
        $i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i10, 1073741824);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i10, $i12);

     label35:
        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i12 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i13 = $r5.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i12 = $i12 + $i13;

        $i13 = $r5.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i12 = $i12 + $i13;

        $i13 = virtualinvoke $r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>($r3);

        $i12 = $i12 + $i13;

        $i10 = $i10 + $i12;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i10;

        if $i7 == 1073741824 goto label43;

        $i10 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i10 != -1 goto label43;

        $z3 = 1;

     label36:
        $i10 = $r5.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i12 = $r5.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i12 = $i10 + $i12;

        $i10 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i10 = $i10 + $i12;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i10);

        if $z3 == 0 goto label44;

     label37:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i12);

        if $z0 == 0 goto label45;

        $i12 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i12 != -1 goto label45;

        $z0 = 1;

     label38:
        if $z2 == 0 goto label30;

        $i12 = virtualinvoke $r3.<android.view.View: int getBaseline()>();

        if $i12 == -1 goto label30;

        $i13 = $r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i13 >= 0 goto label46;

        $i13 = $r0.<android.widget.LinearLayout: int mGravity>;

     label39:
        $i13 = $i13 & 112;

        $i13 = $i13 >> 4;

        $i13 = $i13 & -2;

        $i13 = $i13 >> 1;

        $i14 = $r1[$i13];

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i12);

        $r1[$i13] = $i14;

        $i14 = $r2[$i13];

        $i10 = $i10 - $i12;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i10);

        $r2[$i13] = $i10;

        goto label30;

     label40:
        if $i10 <= 0 goto label42;

     label41:
        $i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i10, 1073741824);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i10, $i12);

        goto label35;

     label42:
        $i10 = 0;

        goto label41;

     label43:
        $z3 = 0;

        goto label36;

     label44:
        $i12 = $i10;

        goto label37;

     label45:
        $z0 = 0;

        goto label38;

     label46:
        $i13 = $r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        goto label39;

     label47:
        $i6 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i4 = $r0.<android.view.View: int mPaddingLeft>;

        $i9 = $r0.<android.view.View: int mPaddingRight>;

        $i4 = $i4 + $i9;

        $i6 = $i6 + $i4;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i6;

        $i6 = $r1[1];

        if $i6 != -1 goto label48;

        $i6 = $r1[0];

        if $i6 != -1 goto label48;

        $i6 = $r1[2];

        if $i6 != -1 goto label48;

        $i6 = $r1[3];

        if $i6 == -1 goto label49;

     label48:
        $i6 = $r1[3];

        $i4 = $r1[0];

        $i9 = $r1[1];

        $i10 = $r1[2];

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i10);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i9);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i4);

        $i4 = $r2[3];

        $i9 = $r2[0];

        $i10 = $r2[1];

        $i12 = $r2[2];

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i12);

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i10);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i9);

        $i6 = $i6 + $i4;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i6);

     label49:
        if $z0 != 0 goto label50;

        if $i7 == 1073741824 goto label50;

        $i2 = $i3;

     label50:
        $i7 = $r0.<android.view.View: int mPaddingTop>;

        $i3 = $r0.<android.view.View: int mPaddingBottom>;

        $i7 = $i7 + $i3;

        $i7 = $i2 + $i7;

        $i2 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumHeight()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i2);

        $i1 = staticinvoke <android.widget.LinearLayout: int resolveSize(int,int)>($i7, $i1);

        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i8, $i1);

        if $z1 == 0 goto label52;

        specialinvoke $r0.<android.widget.LinearLayout: void forceUniformHeight(int,int)>($i5, $i0);

        return;

     label51:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        goto label49;

     label52:
        return;
    }

    int measureNullChild(int)
    {
        android.widget.LinearLayout $r0;
        int $i0;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        return 0;
    }

    void measureVertical(int, int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;
        byte $b12;
        java.lang.RuntimeException $r4;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        $i2 = 0;

        $i3 = 0;

        $i4 = 0;

        $z0 = 1;

        $f0 = 0.0F;

        $i5 = virtualinvoke $r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $z1 = 0;

        $i8 = $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        $i9 = 0;

     label01:
        if $i9 >= $i5 goto label22;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i9);

        if $r1 != null goto label03;

        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i11 = virtualinvoke $r0.<android.widget.LinearLayout: int measureNullChild(int)>($i9);

        $i10 = $i10 + $i11;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i10;

     label02:
        $i9 = $i9 + 1;

        goto label01;

     label03:
        $i10 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i10 != 8 goto label04;

        $i10 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>($r1, $i9);

        $i9 = $i9 + $i10;

        goto label02;

     label04:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $f1 = $r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $f0 = $f0 + $f1;

        if $i7 != 1073741824 goto label07;

        $i10 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i10 != 0 goto label07;

        $f1 = $r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label07;

        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i11 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i11 = $i11 + $i13;

        $i10 = $i10 + $i11;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i10;

     label05:
        if $i8 < 0 goto label06;

        $i10 = $i9 + 1;

        if $i8 != $i10 goto label06;

        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $r0.<android.widget.LinearLayout: int mBaselineChildTop> = $i10;

     label06:
        if $i9 >= $i8 goto label12;

        $f1 = $r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label12;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won\'t work.  Either remove the weight, or don\'t set mBaselineAlignedChildIndex.");

        throw $r4;

     label07:
        $i10 = -2147483648;

        $i11 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i11 != 0 goto label08;

        $f1 = $r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label08;

        $i10 = 0;

        $r3.<android.view.ViewGroup$LayoutParams: int height> = -2;

     label08:
        $b12 = $f0 cmpl 0.0F;

        if $b12 != 0 goto label11;

        $i11 = $r0.<android.widget.LinearLayout: int mTotalLength>;

     label09:
        virtualinvoke $r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r1, $i9, $i0, 0, $i1, $i11);

        if $i10 == -2147483648 goto label10;

        $r3.<android.view.ViewGroup$LayoutParams: int height> = $i10;

     label10:
        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i11 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i11 = $i11 + $i13;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i11 = $i11 + $i13;

        $i13 = virtualinvoke $r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>($r1);

        $i11 = $i11 + $i13;

        $i10 = $i10 + $i11;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i10;

        goto label05;

     label11:
        $i11 = 0;

        goto label09;

     label12:
        $z2 = 0;

        if $i6 == 1073741824 goto label13;

        $i10 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        if $i10 != -1 goto label13;

        $z1 = 1;

        $z2 = 1;

     label13:
        $i10 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i11 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i10 = $i10 + $i11;

        $i11 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i11 = $i11 + $i10;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i11);

        if $z0 == 0 goto label17;

        $i13 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        if $i13 != -1 goto label17;

        $z0 = 1;

     label14:
        $f1 = $r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label19;

        if $z2 == 0 goto label18;

     label15:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i10);

     label16:
        $i10 = virtualinvoke $r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>($r1, $i9);

        $i9 = $i9 + $i10;

        goto label02;

     label17:
        $z0 = 0;

        goto label14;

     label18:
        $i10 = $i11;

        goto label15;

     label19:
        if $z2 == 0 goto label21;

     label20:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i10);

        goto label16;

     label21:
        $i10 = $i11;

        goto label20;

     label22:
        $i8 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = $r0.<android.view.View: int mPaddingTop>;

        $i10 = $r0.<android.view.View: int mPaddingBottom>;

        $i9 = $i9 + $i10;

        $i8 = $i8 + $i9;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i8;

        $i8 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumHeight()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $i8 = staticinvoke <android.widget.LinearLayout: int resolveSize(int,int)>($i8, $i1);

        $i9 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = $i8 - $i9;

        if $i9 == 0 goto label43;

        $b12 = $f0 cmpl 0.0F;

        if $b12 <= 0 goto label43;

        $f1 = $r0.<android.widget.LinearLayout: float mWeightSum>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label26;

        $f0 = $r0.<android.widget.LinearLayout: float mWeightSum>;

     label23:
        $r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        $i4 = 0;

     label24:
        if $i4 >= $i5 goto label40;

        $r1 = virtualinvoke $r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i4);

        $i10 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i10 != 8 goto label27;

     label25:
        $i4 = $i4 + 1;

        goto label24;

     label26:
        goto label23;

     label27:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $f1 = $r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b12 = $f1 cmpl 0.0F;

        if $b12 <= 0 goto label30;

        $f2 = (float) $i9;

        $f2 = $f2 * $f1;

        $f2 = $f2 / $f0;

        $i10 = (int) $f2;

        $f0 = $f0 - $f1;

        $i9 = $i9 - $i10;

        $i11 = $r0.<android.view.View: int mPaddingLeft>;

        $i13 = $r0.<android.view.View: int mPaddingRight>;

        $i11 = $i11 + $i13;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i11 = $i11 + $i13;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i11 = $i11 + $i13;

        $i13 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        $i11 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>($i0, $i11, $i13);

        $i13 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i13 != 0 goto label28;

        if $i7 == 1073741824 goto label34;

     label28:
        $i13 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i10 = $i13 + $i10;

        if $i10 >= 0 goto label29;

        $i10 = 0;

     label29:
        $i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i10, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i11, $i10);

     label30:
        $i10 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i11 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i10 = $i10 + $i11;

        $i11 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i11 = $i11 + $i10;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i11);

        if $i6 == 1073741824 goto label37;

        $i13 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        if $i13 != -1 goto label37;

        $z2 = 1;

     label31:
        if $z2 == 0 goto label38;

     label32:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i10);

        if $z0 == 0 goto label39;

        $i10 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        if $i10 != -1 goto label39;

        $z0 = 1;

     label33:
        $i10 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i11 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i11 = $i11 + $i13;

        $i13 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i11 = $i11 + $i13;

        $i13 = virtualinvoke $r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>($r1);

        $i11 = $i13 + $i11;

        $i10 = $i10 + $i11;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i10;

        goto label25;

     label34:
        if $i10 <= 0 goto label36;

     label35:
        $i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i10, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i11, $i10);

        goto label30;

     label36:
        $i10 = 0;

        goto label35;

     label37:
        $z2 = 0;

        goto label31;

     label38:
        $i10 = $i11;

        goto label32;

     label39:
        $z0 = 0;

        goto label33;

     label40:
        $i7 = $r0.<android.widget.LinearLayout: int mTotalLength>;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i9 = $r0.<android.view.View: int mPaddingBottom>;

        $i4 = $i4 + $i9;

        $i7 = $i7 + $i4;

        $r0.<android.widget.LinearLayout: int mTotalLength> = $i7;

     label41:
        if $z0 != 0 goto label42;

        if $i6 == 1073741824 goto label42;

        $i2 = $i3;

     label42:
        $i6 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $r0.<android.view.View: int mPaddingRight>;

        $i6 = $i6 + $i3;

        $i2 = $i2 + $i6;

        $i6 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumWidth()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i6);

        $i0 = staticinvoke <android.widget.LinearLayout: int resolveSize(int,int)>($i2, $i0);

        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i0, $i8);

        if $z1 == 0 goto label44;

        specialinvoke $r0.<android.widget.LinearLayout: void forceUniformWidth(int,int)>($i5, $i1);

        return;

     label43:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        goto label41;

     label44:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.LinearLayout $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.LinearLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = $r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 1 goto label1;

        virtualinvoke $r0.<android.widget.LinearLayout: void layoutVertical()>();

        return;

     label1:
        virtualinvoke $r0.<android.widget.LinearLayout: void layoutHorizontal()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<android.widget.LinearLayout: int mOrientation>;

        if $i2 != 1 goto label1;

        virtualinvoke $r0.<android.widget.LinearLayout: void measureVertical(int,int)>($i0, $i1);

        return;

     label1:
        virtualinvoke $r0.<android.widget.LinearLayout: void measureHorizontal(int,int)>($i0, $i1);

        return;
    }

    public void setBaselineAligned(boolean)
    {
        android.widget.LinearLayout $r0;
        boolean $z0;

        $r0 := @this: android.widget.LinearLayout;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.LinearLayout: boolean mBaselineAligned> = $z0;

        return;
    }

    public void setBaselineAlignedChildIndex(int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base aligned child index out of range (0, ");

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = $i0;

        return;
    }

    public void setGravity(int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.LinearLayout: int mGravity>;

        if $i1 == $i0 goto label3;

        $i1 = $i0 & 7;

        if $i1 != 0 goto label1;

        $i0 = $i0 | 3;

     label1:
        $i1 = $i0 & 112;

        if $i1 != 0 goto label2;

        $i0 = $i0 | 48;

     label2:
        $r0.<android.widget.LinearLayout: int mGravity> = $i0;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label3:
        return;
    }

    public void setHorizontalGravity(int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i0 = $i0 & 7;

        $i1 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i1 = $i1 & 7;

        if $i1 == $i0 goto label1;

        $i1 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i1 = $i1 & -8;

        $i0 = $i1 | $i0;

        $r0.<android.widget.LinearLayout: int mGravity> = $i0;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label1:
        return;
    }

    public void setOrientation(int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.widget.LinearLayout: int mOrientation>;

        if $i1 == $i0 goto label1;

        $r0.<android.widget.LinearLayout: int mOrientation> = $i0;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label1:
        return;
    }

    public void setVerticalGravity(int)
    {
        android.widget.LinearLayout $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.LinearLayout;

        $i0 := @parameter0: int;

        $i0 = $i0 & 112;

        $i1 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i1 = $i1 & 112;

        if $i1 == $i0 goto label1;

        $i1 = $r0.<android.widget.LinearLayout: int mGravity>;

        $i1 = $i1 & -113;

        $i0 = $i1 | $i0;

        $r0.<android.widget.LinearLayout: int mGravity> = $i0;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label1:
        return;
    }

    public void setWeightSum(float)
    {
        android.widget.LinearLayout $r0;
        float $f0;

        $r0 := @this: android.widget.LinearLayout;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        $r0.<android.widget.LinearLayout: float mWeightSum> = $f0;

        return;
    }

    public static void <clinit>()
    {
        <android.widget.LinearLayout: int VERTICAL_GRAVITY_COUNT> = 4;

        <android.widget.LinearLayout: int VERTICAL> = 1;

        <android.widget.LinearLayout: int INDEX_TOP> = 1;

        <android.widget.LinearLayout: int INDEX_FILL> = 3;

        <android.widget.LinearLayout: int INDEX_CENTER_VERTICAL> = 0;

        <android.widget.LinearLayout: int INDEX_BOTTOM> = 2;

        <android.widget.LinearLayout: int HORIZONTAL> = 0;

        return;
    }
}
