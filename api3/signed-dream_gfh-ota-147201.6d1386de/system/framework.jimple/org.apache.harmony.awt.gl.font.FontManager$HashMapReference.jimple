class org.apache.harmony.awt.gl.font.FontManager$HashMapReference extends java.lang.ref.SoftReference
{
    private final java.lang.String key;
    final org.apache.harmony.awt.gl.font.FontManager this$0;

    public void <init>(org.apache.harmony.awt.gl.font.FontManager, java.lang.String, java.awt.peer.FontPeer, java.lang.ref.ReferenceQueue)
    {
        org.apache.harmony.awt.gl.font.FontManager$HashMapReference $r0;
        org.apache.harmony.awt.gl.font.FontManager $r1;
        java.lang.String $r2;
        java.awt.peer.FontPeer $r3;
        java.lang.ref.ReferenceQueue $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontManager$HashMapReference;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.FontManager;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.awt.peer.FontPeer;

        $r4 := @parameter3: java.lang.ref.ReferenceQueue;

        $r0.<org.apache.harmony.awt.gl.font.FontManager$HashMapReference: org.apache.harmony.awt.gl.font.FontManager this$0> = $r1;

        specialinvoke $r0.<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>($r3, $r4);

        $r0.<org.apache.harmony.awt.gl.font.FontManager$HashMapReference: java.lang.String key> = $r2;

        return;
    }

    public java.lang.Object getKey()
    {
        org.apache.harmony.awt.gl.font.FontManager$HashMapReference $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.FontManager$HashMapReference;

        r1 = $r0.<org.apache.harmony.awt.gl.font.FontManager$HashMapReference: java.lang.String key>;

        return r1;
    }
}
