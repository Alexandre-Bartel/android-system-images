class org.apache.harmony.xml.ExpatParser extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    static final java.lang.String CHARACTER_ENCODING;
    private static final java.lang.String DEFAULT_ENCODING;
    private static final java.lang.String OUTSIDE_START_ELEMENT;
    private static final int TIMEOUT;
    private int attributeCount;
    private int attributePointer;
    private final org.apache.harmony.xml.ExpatAttributes attributes;
    private final java.lang.String encoding;
    private boolean inStartElement;
    private final org.xml.sax.Locator locator;
    private int pointer;
    private final java.lang.String publicId;
    private final java.lang.String systemId;
    private final org.apache.harmony.xml.ExpatReader xmlReader;

    static void <clinit>()
    {
        <org.apache.harmony.xml.ExpatParser: int TIMEOUT> = 20000;

        <org.apache.harmony.xml.ExpatParser: java.lang.String OUTSIDE_START_ELEMENT> = "Attributes can only be used within the scope of startElement().";

        <org.apache.harmony.xml.ExpatParser: java.lang.String DEFAULT_ENCODING> = "UTF-8";

        <org.apache.harmony.xml.ExpatParser: java.lang.String CHARACTER_ENCODING> = "UTF-16";

        <org.apache.harmony.xml.ExpatParser: int BUFFER_SIZE> = 8096;

        staticinvoke <org.apache.harmony.xml.ExpatParser: void staticInitialize(java.lang.String)>("");

        return;
    }

    private void <init>(java.lang.String, org.apache.harmony.xml.ExpatReader, int, java.lang.String, java.lang.String)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r3, $r4;
        org.apache.harmony.xml.ExpatReader $r2;
        int $i0;
        org.apache.harmony.xml.ExpatParser$ExpatLocator $r5;
        org.apache.harmony.xml.ExpatParser$CurrentAttributes $r6;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.harmony.xml.ExpatReader;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        $r5 = new org.apache.harmony.xml.ExpatParser$ExpatLocator;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ExpatLocator: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>($r0, null);

        $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator> = $r5;

        $r6 = new org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        specialinvoke $r6.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>($r0, null);

        $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatAttributes attributes> = $r6;

        $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding> = $r1;

        $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader> = $r2;

        $r0.<org.apache.harmony.xml.ExpatParser: int pointer> = $i0;

        $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId> = $r4;

        $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String publicId> = $r3;

        return;
    }

    void <init>(java.lang.String, org.apache.harmony.xml.ExpatReader, int, java.lang.String, java.lang.String, org.apache.harmony.xml.ExpatParser$1)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r3, $r4;
        org.apache.harmony.xml.ExpatReader $r2;
        int $i0;
        org.apache.harmony.xml.ExpatParser$1 $r5;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.harmony.xml.ExpatReader;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: org.apache.harmony.xml.ExpatParser$1;

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,int,java.lang.String,java.lang.String)>($r1, $r2, $i0, $r3, $r4);

        return;
    }

    void <init>(java.lang.String, org.apache.harmony.xml.ExpatReader, boolean, java.lang.String, java.lang.String)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r3, $r4;
        org.apache.harmony.xml.ExpatReader $r2;
        boolean $z0;
        int $i0;
        org.apache.harmony.xml.ExpatParser$ExpatLocator $r5;
        org.apache.harmony.xml.ExpatParser$CurrentAttributes $r6;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.harmony.xml.ExpatReader;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        $r5 = new org.apache.harmony.xml.ExpatParser$ExpatLocator;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ExpatLocator: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>($r0, null);

        $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator> = $r5;

        $r6 = new org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        specialinvoke $r6.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>($r0, null);

        $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatAttributes attributes> = $r6;

        $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String publicId> = $r3;

        $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId> = $r4;

        $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader> = $r2;

        if $r1 != null goto label2;

        $r1 = "UTF-8";

     label1:
        $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding> = $r1;

        $r1 = $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $i0 = specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: int initialize(java.lang.String,boolean)>($r1, $z0);

        $r0.<org.apache.harmony.xml.ExpatParser: int pointer> = $i0;

        return;

     label2:
        goto label1;
    }

    static int access$1000(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int i0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        return i0;
    }

    static boolean access$1100(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        boolean z0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        z0 = $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement>;

        return z0;
    }

    static int access$1200(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int i0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        i0 = $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer>;

        return i0;
    }

    static int access$1300(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int i0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        i0 = $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        return i0;
    }

    static java.lang.String access$600(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        r1 = $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String publicId>;

        return r1;
    }

    static java.lang.String access$700(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        r1 = $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        return r1;
    }

    static int access$800(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int $i0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $i0 = specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: int line()>();

        return $i0;
    }

    static int access$900(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int $i0;

        $r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $i0 = specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: int column()>();

        return $i0;
    }

    private native void append(int, java.lang.String, boolean) throws org.xml.sax.SAXException, org.apache.harmony.xml.ExpatException;

    private native void append(int, byte[], int, int) throws org.xml.sax.SAXException, org.apache.harmony.xml.ExpatException;

    private native void append(int, char[], int, int) throws org.xml.sax.SAXException, org.apache.harmony.xml.ExpatException;

    private static native int cloneAttributes(int, int);

    private int column()
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        $i0 = staticinvoke <org.apache.harmony.xml.ExpatParser: int column(int)>($i0);

        return $i0;
    }

    private static native int column(int);

    private static native int createEntityParser(int, java.lang.String, java.lang.String);

    private void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        org.xml.sax.ContentHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endDocument()>();

        return;

     label1:
        return;
    }

    private native int initialize(java.lang.String, boolean);

    private int line()
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        $i0 = staticinvoke <org.apache.harmony.xml.ExpatParser: int line(int)>($i0);

        return $i0;
    }

    private static native int line(int);

    static java.io.InputStream openUrl(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.IOException $r1;
        java.net.URL $r2;
        java.net.URLConnection $r3;
        java.io.InputStream $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r3.<java.net.URLConnection: void setConnectTimeout(int)>(20000);

        virtualinvoke $r3.<java.net.URLConnection: void setReadTimeout(int)>(20000);

        virtualinvoke $r3.<java.net.URLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r3.<java.net.URLConnection: void setDoOutput(boolean)>(0);

        $r4 = virtualinvoke $r3.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r1 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r0);

        virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void parseExternalEntity(org.apache.harmony.xml.ExpatParser, org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0, $r1;
        org.xml.sax.InputSource $r2;
        org.xml.sax.Locator $r3;
        java.io.Reader $r4;
        java.lang.Throwable $r5, $r10, $r12;
        java.io.InputStream $r6;
        java.lang.String $r7, $r8;
        byte[] $r9;
        org.apache.harmony.xml.ExpatParser$ParseException $r11;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $r2 := @parameter1: org.xml.sax.InputSource;

        $r4 = virtualinvoke $r2.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if $r4 == null goto label04;

     label01:
        virtualinvoke $r1.<org.apache.harmony.xml.ExpatParser: void append(java.lang.String)>("<externalEntity>");

        specialinvoke $r1.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.Reader)>($r4);

        virtualinvoke $r1.<org.apache.harmony.xml.ExpatParser: void append(java.lang.String)>("</externalEntity>");

     label02:
        virtualinvoke $r4.<java.io.Reader: void close()>();

        return;

     label03:
        $r5 := @caughtexception;

        virtualinvoke $r4.<java.io.Reader: void close()>();

        throw $r5;

     label04:
        $r6 = virtualinvoke $r2.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        if $r6 == null goto label08;

     label05:
        $r7 = "<externalEntity>";

        $r8 = $r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        virtualinvoke $r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r9);

        specialinvoke $r1.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)>($r6);

        $r7 = "</externalEntity>";

        $r8 = $r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        virtualinvoke $r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r9);

     label06:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

        return;

     label07:
        $r10 := @caughtexception;

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        throw $r10;

     label08:
        $r7 = virtualinvoke $r2.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        if $r7 != null goto label09;

        $r11 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r11.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>("No input specified.", $r3, null);

        throw $r11;

     label09:
        $r6 = staticinvoke <org.apache.harmony.xml.ExpatParser: java.io.InputStream openUrl(java.lang.String)>($r7);

     label10:
        $r7 = "<externalEntity>";

        $r8 = $r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        virtualinvoke $r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r9);

        specialinvoke $r1.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)>($r6);

        $r7 = "</externalEntity>";

        $r8 = $r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        virtualinvoke $r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r9);

     label11:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

        return;

     label12:
        $r12 := @caughtexception;

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private void parseFragment(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.io.InputStream $r1;
        byte[] $r2;
        org.xml.sax.Locator $r3;
        int $i0, $i1;
        org.apache.harmony.xml.ExpatException $r4;
        org.apache.harmony.xml.ExpatParser$ParseException $r5;
        java.lang.String $r6;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = newarray (byte)[8096];

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 == -1 goto label5;

        $i1 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

     label2:
        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(int,byte[],int,int)>($i1, $r2, 0, $i0);

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r6 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r6, $r3, null);

        throw $r5;

     label5:
        return;

        catch org.apache.harmony.xml.ExpatException from label2 to label3 with label4;
    }

    private void parseFragment(java.io.Reader) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.io.Reader $r1;
        char[] $r2;
        org.xml.sax.Locator $r3;
        int $i0, $i1;
        org.apache.harmony.xml.ExpatException $r4;
        org.apache.harmony.xml.ExpatParser$ParseException $r5;
        java.lang.String $r6;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.io.Reader;

        $r2 = newarray (char)[4048];

     label1:
        $i0 = virtualinvoke $r1.<java.io.Reader: int read(char[])>($r2);

        if $i0 == -1 goto label5;

        $i1 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

     label2:
        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(int,char[],int,int)>($i1, $r2, 0, $i0);

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r6 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r6, $r3, null);

        throw $r5;

     label5:
        return;

        catch org.apache.harmony.xml.ExpatException from label2 to label3 with label4;
    }

    private java.lang.String pickEncoding(org.xml.sax.InputSource)
    {
        org.apache.harmony.xml.ExpatParser $r0;
        org.xml.sax.InputSource $r1;
        java.io.Reader $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: org.xml.sax.InputSource;

        $r2 = virtualinvoke $r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if $r2 == null goto label1;

        return "UTF-16";

     label1:
        $r3 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if $r3 != null goto label2;

        return "UTF-8";

     label2:
        return $r3;
    }

    private native void release(int);

    private static native void releaseParser(int);

    private void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        org.xml.sax.ContentHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2;
        org.xml.sax.Locator $r3;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r1 == null goto label1;

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r3);

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>();

        return;

     label1:
        return;
    }

    private static native void staticInitialize(java.lang.String);

    void append(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1;
        org.xml.sax.Locator $r2;
        int $i0;
        org.apache.harmony.xml.ExpatException $r3;
        org.apache.harmony.xml.ExpatParser$ParseException $r4;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

     label1:
        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(int,java.lang.String,boolean)>($i0, $r1, 0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r1 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r4.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r1, $r2, null);

        throw $r4;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    void append(byte[]) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    void append(byte[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        org.xml.sax.Locator $r2;
        java.lang.String $r3;
        org.apache.harmony.xml.ExpatException $r4;
        org.apache.harmony.xml.ExpatParser$ParseException $r5;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

     label1:
        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(int,byte[],int,int)>($i2, $r1, $i0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r3 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r3, $r2, null);

        throw $r5;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    void append(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        char[] $r1;
        int $i0, $i1, $i2;
        org.xml.sax.Locator $r2;
        java.lang.String $r3;
        org.apache.harmony.xml.ExpatException $r4;
        org.apache.harmony.xml.ExpatParser$ParseException $r5;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

     label1:
        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(int,char[],int,int)>($i2, $r1, $i0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r3 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r3, $r2, null);

        throw $r5;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    org.xml.sax.Attributes cloneAttributes()
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        org.xml.sax.Attributes $r2;
        org.apache.harmony.xml.ExpatParser$ClonedAttributes $r3;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $z0 = $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attributes can only be used within the scope of startElement().");

        throw $r1;

     label1:
        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        if $i0 != 0 goto label2;

        $r2 = staticinvoke <org.apache.harmony.xml.ExpatParser$ClonedAttributes: org.xml.sax.Attributes access$400()>();

        return $r2;

     label2:
        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer>;

        $i1 = $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        $i1 = staticinvoke <org.apache.harmony.xml.ExpatParser: int cloneAttributes(int,int)>($i0, $i1);

        $r3 = new org.apache.harmony.xml.ExpatParser$ClonedAttributes;

        $i2 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatParser$ClonedAttributes: void <init>(int,int,int,org.apache.harmony.xml.ExpatParser$1)>($i2, $i1, $i0, null);

        return $r3;
    }

    void comment(char[], int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        char[] $r1;
        int $i0;
        org.xml.sax.ext.LexicalHandler $r2;
        org.apache.harmony.xml.ExpatReader $r3;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r2 = $r3.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r1, 0, $i0);

        return;

     label1:
        return;
    }

    void endCdata() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        org.xml.sax.ext.LexicalHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        return;

     label1:
        return;
    }

    void endDtd() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        org.xml.sax.ext.LexicalHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

        return;

     label1:
        return;
    }

    void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r2, $r3;
        org.xml.sax.ContentHandler $r4;
        org.apache.harmony.xml.ExpatReader $r5;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r4 = $r5.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r4 == null goto label1;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;

     label1:
        return;
    }

    void endNamespace(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1;
        org.xml.sax.ContentHandler $r2;
        org.apache.harmony.xml.ExpatReader $r3;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r2 = $r3.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r1);

        return;

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.apache.harmony.xml.ExpatParser $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        entermonitor $r0;

     label1:
        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        if $i0 == 0 goto label2;

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void release(int)>($i0);

        $r0.<org.apache.harmony.xml.ExpatParser: int pointer> = 0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void finish() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1;
        int $i0;
        org.apache.harmony.xml.ExpatException $r2;
        org.apache.harmony.xml.ExpatParser$ParseException $r3;
        org.xml.sax.Locator $r4;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

     label1:
        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void append(int,java.lang.String,boolean)>($i0, "", 1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r1 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r1, $r4, null);

        throw $r3;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    void handleExternalEntity(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r2, $r6, $r8;
        org.apache.harmony.xml.ExpatParser$EntityParser $r3;
        java.net.URI $r4, $r9;
        org.xml.sax.EntityResolver $r5;
        org.apache.harmony.xml.ExpatReader $r7;
        boolean $z0;
        org.xml.sax.InputSource $r10;
        int $i0;
        java.lang.Exception $r11;
        java.lang.Class $r12;
        java.util.logging.Logger $r13;
        java.util.logging.Level $r14;
        java.lang.StringBuilder $r15;
        org.xml.sax.Locator $r16;
        java.lang.Throwable $r17;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r6 := @parameter2: java.lang.String;

        $r7 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r5 = $r7.<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver entityResolver>;

        if $r5 != null goto label01;

        return;

     label01:
        $r8 = $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        if $r8 == null goto label05;

        $r9 = new java.net.URI;

     label02:
        specialinvoke $r9.<java.net.URI: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke $r9.<java.net.URI: boolean isAbsolute()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r9.<java.net.URI: boolean isOpaque()>();

     label03:
        if $z0 != 0 goto label05;

     label04:
        $r4 = new java.net.URI;

        $r8 = $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>($r8);

        $r4 = virtualinvoke $r4.<java.net.URI: java.net.URI resolve(java.net.URI)>($r9);

        $r6 = virtualinvoke $r4.<java.net.URI: java.lang.String toString()>();

     label05:
        $r10 = interfaceinvoke $r5.<org.xml.sax.EntityResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>($r2, $r6);

        if $r10 == null goto label10;

        $r2 = specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String pickEncoding(org.xml.sax.InputSource)>($r10);

        $i0 = $r0.<org.apache.harmony.xml.ExpatParser: int pointer>;

        $i0 = staticinvoke <org.apache.harmony.xml.ExpatParser: int createEntityParser(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

     label06:
        $r3 = new org.apache.harmony.xml.ExpatParser$EntityParser;

        $r7 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r1 = virtualinvoke $r10.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r6 = virtualinvoke $r10.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r3.<org.apache.harmony.xml.ExpatParser$EntityParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,int,java.lang.String,java.lang.String,org.apache.harmony.xml.ExpatParser$1)>($r2, $r7, $i0, $r1, $r6, null);

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void parseExternalEntity(org.apache.harmony.xml.ExpatParser,org.xml.sax.InputSource)>($r3, $r10);

     label07:
        staticinvoke <org.apache.harmony.xml.ExpatParser: void releaseParser(int)>($i0);

        return;

     label08:
        $r11 := @caughtexception;

        $r12 = class "org/apache/harmony/xml/ExpatParser";

        $r8 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r13 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r8);

        $r14 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not resolve \'");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' relative to");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r8 = $r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' at ");

        $r16 = $r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r14, $r8, $r11);

        goto label05;

     label09:
        $r17 := @caughtexception;

        staticinvoke <org.apache.harmony.xml.ExpatParser: void releaseParser(int)>($i0);

        throw $r17;

     label10:
        return;

        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    void parseDocument(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void startDocument()>();

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)>($r1);

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatParser: void finish()>();

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void endDocument()>();

        return;
    }

    void parseDocument(java.io.Reader) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.io.Reader $r1;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void startDocument()>();

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.Reader)>($r1);

        virtualinvoke $r0.<org.apache.harmony.xml.ExpatParser: void finish()>();

        specialinvoke $r0.<org.apache.harmony.xml.ExpatParser: void endDocument()>();

        return;
    }

    void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r2;
        org.xml.sax.ContentHandler $r3;
        org.apache.harmony.xml.ExpatReader $r4;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r3 = $r4.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r1, $r2);

        return;

     label1:
        return;
    }

    void startCdata() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        org.xml.sax.ext.LexicalHandler $r1;
        org.apache.harmony.xml.ExpatReader $r2;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        return;

     label1:
        return;
    }

    void startDtd(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r2, $r3;
        org.xml.sax.ext.LexicalHandler $r4;
        org.apache.harmony.xml.ExpatReader $r5;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r4 = $r5.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r4 == null goto label1;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;

     label1:
        return;
    }

    void startElement(java.lang.String, java.lang.String, java.lang.String, int, int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1;
        org.xml.sax.ContentHandler $r4;
        org.apache.harmony.xml.ExpatReader $r5;
        org.apache.harmony.xml.ExpatAttributes $r6;
        java.lang.Throwable $r7;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r5 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r4 = $r5.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r4 != null goto label1;

        return;

     label1:
        $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 1;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = $i0;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = $i1;

        $r6 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatAttributes attributes>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, $r3, $r6);

     label2:
        $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        return;

     label3:
        $r7 := @caughtexception;

        $r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        $r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void startNamespace(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        java.lang.String $r1, $r2;
        org.xml.sax.ContentHandler $r3;
        org.apache.harmony.xml.ExpatReader $r4;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r3 = $r4.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r1, $r2);

        return;

     label1:
        return;
    }

    void text(char[], int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser $r0;
        char[] $r1;
        int $i0;
        org.xml.sax.ContentHandler $r2;
        org.apache.harmony.xml.ExpatReader $r3;

        $r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $r3 = $r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r2 = $r3.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r1, 0, $i0);

        return;

     label1:
        return;
    }
}
