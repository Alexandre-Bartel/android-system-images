class android.net.http.IdleCache extends java.lang.Object
{
    private static final int CHECK_INTERVAL;
    private static final int EMPTY_CHECK_MAX;
    private static final int IDLE_CACHE_MAX;
    private static final int TIMEOUT;
    private int mCached;
    private int mCount;
    private android.net.http.IdleCache$Entry[] mEntries;
    private int mReused;
    private android.net.http.IdleCache$IdleReaper mThread;

    void <init>()
    {
        android.net.http.IdleCache $r0;
        android.net.http.IdleCache$Entry[] $r1;
        int $i0;
        android.net.http.IdleCache$Entry $r2;

        $r0 := @this: android.net.http.IdleCache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (android.net.http.IdleCache$Entry)[8];

        $r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries> = $r1;

        $r0.<android.net.http.IdleCache: int mCount> = 0;

        $r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = null;

        $r0.<android.net.http.IdleCache: int mCached> = 0;

        $r0.<android.net.http.IdleCache: int mReused> = 0;

        $i0 = 0;

     label1:
        if $i0 >= 8 goto label2;

        $r1 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r2 = new android.net.http.IdleCache$Entry;

        specialinvoke $r2.<android.net.http.IdleCache$Entry: void <init>(android.net.http.IdleCache)>($r0);

        $r1[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    static int access$100(android.net.http.IdleCache)
    {
        android.net.http.IdleCache $r0;
        int i0;

        $r0 := @parameter0: android.net.http.IdleCache;

        i0 = $r0.<android.net.http.IdleCache: int mCount>;

        return i0;
    }

    static void access$200(android.net.http.IdleCache)
    {
        android.net.http.IdleCache $r0;

        $r0 := @parameter0: android.net.http.IdleCache;

        specialinvoke $r0.<android.net.http.IdleCache: void clearIdle()>();

        return;
    }

    static android.net.http.IdleCache$IdleReaper access$302(android.net.http.IdleCache, android.net.http.IdleCache$IdleReaper)
    {
        android.net.http.IdleCache $r0;
        android.net.http.IdleCache$IdleReaper $r1;

        $r0 := @parameter0: android.net.http.IdleCache;

        $r1 := @parameter1: android.net.http.IdleCache$IdleReaper;

        $r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = $r1;

        return $r1;
    }

    private void clearIdle()
    {
        android.net.http.IdleCache $r0;
        android.net.http.IdleCache$Entry $r1;
        long $l0, $l2;
        int $i1, $i4;
        android.net.http.IdleCache$Entry[] $r2;
        org.apache.http.HttpHost $r3;
        byte $b3;
        android.net.http.Connection $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.net.http.IdleCache;

        entermonitor $r0;

     label1:
        $i1 = $r0.<android.net.http.IdleCache: int mCount>;

        if $i1 <= 0 goto label4;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = 0;

     label2:
        if $i1 >= 8 goto label4;

        $r2 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r1 = $r2[$i1];

        $r3 = $r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r3 == null goto label3;

        $l2 = $r1.<android.net.http.IdleCache$Entry: long mTimeout>;

        $b3 = $l0 cmp $l2;

        if $b3 <= 0 goto label3;

        $r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r4 = $r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        virtualinvoke $r4.<android.net.http.Connection: void closeConnection()>();

        $r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i4 = $r0.<android.net.http.IdleCache: int mCount>;

        $i4 = $i4 - 1;

        $r0.<android.net.http.IdleCache: int mCount> = $i4;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    boolean cacheConnection(org.apache.http.HttpHost, android.net.http.Connection)
    {
        android.net.http.IdleCache $r0;
        org.apache.http.HttpHost $r1, $r5;
        android.net.http.Connection $r2;
        android.net.http.IdleCache$Entry $r3;
        long $l0;
        boolean $z0;
        int $i1;
        android.net.http.IdleCache$Entry[] $r4;
        android.net.http.IdleCache$IdleReaper $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.net.http.IdleCache;

        $r1 := @parameter0: org.apache.http.HttpHost;

        $r2 := @parameter1: android.net.http.Connection;

        entermonitor $r0;

        $z0 = 0;

     label1:
        $i1 = $r0.<android.net.http.IdleCache: int mCount>;

        if $i1 >= 8 goto label3;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = 0;

     label2:
        if $i1 >= 8 goto label3;

        $r4 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r3 = $r4[$i1];

        $r5 = $r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r5 != null goto label4;

        $r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = $r1;

        $r3.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = $r2;

        $l0 = 6000L + $l0;

        $r3.<android.net.http.IdleCache$Entry: long mTimeout> = $l0;

        $i1 = $r0.<android.net.http.IdleCache: int mCount>;

        $i1 = $i1 + 1;

        $r0.<android.net.http.IdleCache: int mCount> = $i1;

        $z0 = 1;

        $r6 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread>;

        if $r6 != null goto label3;

        $r6 = new android.net.http.IdleCache$IdleReaper;

        specialinvoke $r6.<android.net.http.IdleCache$IdleReaper: void <init>(android.net.http.IdleCache,android.net.http.IdleCache$1)>($r0, null);

        $r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = $r6;

        $r6 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread>;

        virtualinvoke $r6.<java.lang.Thread: void start()>();

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    void clear()
    {
        android.net.http.IdleCache $r0;
        android.net.http.IdleCache$Entry $r1;
        int $i0, $i1;
        android.net.http.IdleCache$Entry[] $r2;
        org.apache.http.HttpHost $r3;
        android.net.http.Connection $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.net.http.IdleCache;

        entermonitor $r0;

        $i0 = 0;

     label1:
        $i1 = $r0.<android.net.http.IdleCache: int mCount>;

        if $i1 <= 0 goto label3;

        if $i0 >= 8 goto label3;

        $r2 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r1 = $r2[$i0];

        $r3 = $r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r3 == null goto label2;

        $r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r4 = $r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        virtualinvoke $r4.<android.net.http.Connection: void closeConnection()>();

        $r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i1 = $r0.<android.net.http.IdleCache: int mCount>;

        $i1 = $i1 - 1;

        $r0.<android.net.http.IdleCache: int mCount> = $i1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    android.net.http.Connection getConnection(org.apache.http.HttpHost)
    {
        android.net.http.IdleCache $r0;
        org.apache.http.HttpHost $r1, $r2;
        android.net.http.IdleCache$Entry $r3;
        boolean $z0;
        android.net.http.Connection $r4;
        int $i0;
        android.net.http.IdleCache$Entry[] $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.net.http.IdleCache;

        $r1 := @parameter0: org.apache.http.HttpHost;

        entermonitor $r0;

        $r4 = null;

     label1:
        $i0 = $r0.<android.net.http.IdleCache: int mCount>;

        if $i0 <= 0 goto label3;

        $i0 = 0;

     label2:
        if $i0 >= 8 goto label3;

        $r5 = $r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r3 = $r5[$i0];

        $r2 = $r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r2 == null goto label4;

        $z0 = virtualinvoke $r2.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r4 = $r3.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        $r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r3.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i0 = $r0.<android.net.http.IdleCache: int mCount>;

        $i0 = $i0 - 1;

        $r0.<android.net.http.IdleCache: int mCount> = $i0;

     label3:
        exitmonitor $r0;

        return $r4;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public static void <clinit>()
    {
        <android.net.http.IdleCache: int TIMEOUT> = 6000;

        <android.net.http.IdleCache: int IDLE_CACHE_MAX> = 8;

        <android.net.http.IdleCache: int EMPTY_CHECK_MAX> = 5;

        <android.net.http.IdleCache: int CHECK_INTERVAL> = 2000;

        return;
    }
}
