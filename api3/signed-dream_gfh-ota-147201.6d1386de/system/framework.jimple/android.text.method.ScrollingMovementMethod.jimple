public class android.text.method.ScrollingMovementMethod extends java.lang.Object implements android.text.method.MovementMethod
{
    private static android.text.method.ScrollingMovementMethod sInstance;

    public void <init>()
    {
        android.text.method.ScrollingMovementMethod $r0;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private boolean executeDown(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $i0 := @parameter2: int;

        lookupswitch($i0)
        {
            case 19: goto label4;
            case 20: goto label5;
            case 21: goto label2;
            case 22: goto label3;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r0.<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>($r1, $r2);

        $z0 = 0 | $z0;

        return $z0;

     label3:
        $z0 = virtualinvoke $r0.<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>($r1, $r2);

        $z0 = 0 | $z0;

        return $z0;

     label4:
        $z0 = virtualinvoke $r0.<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>($r1, $r2);

        $z0 = 0 | $z0;

        return $z0;

     label5:
        $z0 = virtualinvoke $r0.<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>($r1, $r2);

        $z0 = 0 | $z0;

        return $z0;
    }

    public static android.text.method.MovementMethod getInstance()
    {
        android.text.method.ScrollingMovementMethod $r0;

        $r0 = <android.text.method.ScrollingMovementMethod: android.text.method.ScrollingMovementMethod sInstance>;

        if $r0 != null goto label1;

        $r0 = new android.text.method.ScrollingMovementMethod;

        specialinvoke $r0.<android.text.method.ScrollingMovementMethod: void <init>()>();

        <android.text.method.ScrollingMovementMethod: android.text.method.ScrollingMovementMethod sInstance> = $r0;

     label1:
        $r0 = <android.text.method.ScrollingMovementMethod: android.text.method.ScrollingMovementMethod sInstance>;

        return $r0;
    }

    public boolean canSelectArbitrarily()
    {
        android.text.method.ScrollingMovementMethod $r0;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        return 0;
    }

    protected boolean down(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Layout $r3;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingTop()>();

        $i2 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i2 = $i2 + $i3;

        $i0 = $i2 - $i1;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getLineForVertical(int)>($i0);

        $i2 = $i3;

        $i4 = $i3 + 1;

        $i4 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i4);

        $i0 = $i0 + 1;

        if $i4 >= $i0 goto label1;

        $i2 = $i3 + 1;

     label1:
        $i3 = virtualinvoke $r3.<android.text.Layout: int getLineCount()>();

        $i3 = $i3 - 1;

        if $i2 > $i3 goto label2;

        $i3 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i2 = $i2 + 1;

        $i2 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i2);

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = $i0 - $i1;

        $i1 = $i2 - $i1;

        virtualinvoke $r1.<android.view.View: void scrollTo(int,int)>($i3, $i1);

        $i1 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>($r1, $r3, $i1, $i2);

        return 1;

     label2:
        return 0;
    }

    public void initialize(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        return;
    }

    protected boolean left(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.text.Layout $r3;
        android.text.TextPaint $r4;
        float $f0, $f1;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $r4 = virtualinvoke $r3.<android.text.Layout: android.text.TextPaint getPaint()>();

        $f0 = virtualinvoke $r4.<android.graphics.Paint: float getFontSpacing()>();

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i4 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingTop()>();

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i0 = $i4 + $i0;

        $i4 = virtualinvoke $r3.<android.text.Layout: int getLineForVertical(int)>($i1);

        $i5 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = $i5 + $i1;

        $i1 = $i1 - $i0;

        $i0 = virtualinvoke $r3.<android.text.Layout: int getLineForVertical(int)>($i1);

        $i1 = 2147483647;

     label1:
        if $i4 > $i0 goto label2;

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r3.<android.text.Layout: float getLineLeft(int)>($i4);

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $i1 = (int) $f0;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        if $i2 <= $i1 goto label3;

        $i2 = $i2 - $i3;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        $i3 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        virtualinvoke $r1.<android.view.View: void scrollTo(int,int)>($i2, $i3);

        return 1;

     label3:
        return 0;
    }

    public boolean onKeyDown(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        int $i0;
        android.view.KeyEvent $r3;
        boolean $z0;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.text.method.ScrollingMovementMethod: boolean executeDown(android.widget.TextView,android.text.Spannable,int)>($r1, $r2, $i0);

        return $z0;
    }

    public boolean onKeyOther(android.widget.TextView, android.text.Spannable, android.view.KeyEvent)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        android.view.KeyEvent $r3;
        int $i0, $i1;
        boolean $z0, $z1;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 := @parameter2: android.view.KeyEvent;

        $i0 = virtualinvoke $r3.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<android.view.KeyEvent: int getAction()>();

        if $i1 != 2 goto label4;

        $i1 = virtualinvoke $r3.<android.view.KeyEvent: int getRepeatCount()>();

        $z0 = 1;

        $z1 = 0;

     label1:
        $i1 = $i1 + -1;

        if $i1 <= 0 goto label3;

        if $z0 == 0 goto label2;

        $z0 = specialinvoke $r0.<android.text.method.ScrollingMovementMethod: boolean executeDown(android.widget.TextView,android.text.Spannable,int)>($r1, $r2, $i0);

        if $z0 == 0 goto label2;

        $z1 = 1;

        staticinvoke <android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>($r2);

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>($r2);

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public boolean onKeyUp(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        int $i0;
        android.view.KeyEvent $r3;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.view.KeyEvent;

        return 0;
    }

    public void onTakeFocus(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        int $i0, $i1, $i2, $i3;
        android.text.Layout $r3;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r3 == null goto label1;

        $i2 = $i0 & 2;

        if $i2 == 0 goto label1;

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i1 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>(0);

        virtualinvoke $r1.<android.view.View: void scrollTo(int,int)>($i2, $i1);

     label1:
        if $r3 == null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingTop()>();

        $i2 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i2 = $i0 + $i2;

        $i0 = virtualinvoke $r3.<android.text.Layout: int getLineCount()>();

        $i1 = $i0 - 1;

        $i0 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i1 = $i1 + 1;

        $i1 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i1);

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i2 = $i3 - $i2;

        $i2 = $i1 - $i2;

        virtualinvoke $r1.<android.view.View: void scrollTo(int,int)>($i0, $i2);

        return;

     label2:
        return;

     label3:
        return;
    }

    public boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        android.view.MotionEvent $r3;
        boolean $z0;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 := @parameter2: android.view.MotionEvent;

        $z0 = staticinvoke <android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>($r1, $r2, $r3);

        return $z0;
    }

    public boolean onTrackballEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        android.view.MotionEvent $r3;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 := @parameter2: android.view.MotionEvent;

        return 0;
    }

    protected boolean right(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        android.text.Layout $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.text.TextPaint $r4;
        float $f0, $f1;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $r4 = virtualinvoke $r3.<android.text.Layout: android.text.TextPaint getPaint()>();

        $f0 = virtualinvoke $r4.<android.graphics.Paint: float getFontSpacing()>();

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i3 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingTop()>();

        $i4 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i4 = $i3 + $i4;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getLineForVertical(int)>($i0);

        $i5 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i0 = $i5 + $i0;

        $i0 = $i0 - $i4;

        $i4 = virtualinvoke $r3.<android.text.Layout: int getLineForVertical(int)>($i0);

        $i0 = 0;

     label1:
        if $i3 > $i4 goto label2;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r3.<android.text.Layout: float getLineRight(int)>($i3);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $i0 = (int) $f0;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingLeft()>();

        $i4 = virtualinvoke $r1.<android.widget.TextView: int getTotalPaddingRight()>();

        $i3 = $i3 + $i4;

        $i4 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i4 = $i4 - $i3;

        $i4 = $i0 - $i4;

        if $i1 >= $i4 goto label3;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = $i2 - $i3;

        $i2 = $i0 - $i2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        virtualinvoke $r1.<android.view.View: void scrollTo(int,int)>($i1, $i2);

        return 1;

     label3:
        return 0;
    }

    protected boolean up(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ScrollingMovementMethod $r0;
        android.widget.TextView $r1;
        android.text.Spannable $r2;
        android.text.Layout $r3;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.text.method.ScrollingMovementMethod;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.text.Spannable;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i1 = virtualinvoke $r3.<android.text.Layout: int getLineForVertical(int)>($i0);

        $i2 = $i1;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i1);

        if $i0 != $i3 goto label1;

        $i2 = $i1 + -1;

     label1:
        if $i2 < 0 goto label2;

        $i0 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i2 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i2);

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>($r1, $r3, $i0, $i2);

        return 1;

     label2:
        return 0;
    }
}
