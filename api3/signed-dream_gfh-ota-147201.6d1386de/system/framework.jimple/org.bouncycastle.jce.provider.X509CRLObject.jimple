public class org.bouncycastle.jce.provider.X509CRLObject extends java.security.cert.X509CRL
{
    private org.bouncycastle.asn1.x509.CertificateList c;
    private java.lang.String sigAlgName;
    private byte[] sigAlgParams;

    public void <init>(org.bouncycastle.asn1.x509.CertificateList) throws java.security.cert.CRLException
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.x509.CertificateList $r1;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.lang.String $r3;
        org.bouncycastle.asn1.DEREncodable $r4;
        org.bouncycastle.asn1.ASN1Encodable $r5;
        byte[] $r6;
        java.lang.Exception $r7;
        java.security.cert.CRLException $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: org.bouncycastle.asn1.x509.CertificateList;

        specialinvoke $r0.<java.security.cert.X509CRL: void <init>()>();

        $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c> = $r1;

     label1:
        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = staticinvoke <org.bouncycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>($r2);

        $r0.<org.bouncycastle.jce.provider.X509CRLObject: java.lang.String sigAlgName> = $r3;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        if $r4 == null goto label3;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r5 = (org.bouncycastle.asn1.ASN1Encodable) $r4;

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.ASN1Encodable: byte[] getDEREncoded()>();

        $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] sigAlgParams> = $r6;

     label2:
        return;

     label3:
        $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] sigAlgParams> = null;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.security.cert.CRLException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRL contents invalid: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CRLException: void <init>(java.lang.String)>($r3);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private java.util.Set getExtensionOIDs(boolean)
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        boolean $z0, $z1;
        java.util.HashSet $r1;
        int $i0;
        org.bouncycastle.asn1.x509.CertificateList $r2;
        org.bouncycastle.asn1.x509.TBSCertList $r3;
        org.bouncycastle.asn1.x509.X509Extensions $r4;
        java.util.Enumeration $r5;
        java.lang.Object $r6;
        org.bouncycastle.asn1.DERObjectIdentifier $r7;
        org.bouncycastle.asn1.x509.X509Extension $r8;
        java.lang.String $r9;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $z0 := @parameter0: boolean;

        $i0 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: int getVersion()>();

        if $i0 != 2 goto label3;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.TBSCertList: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (org.bouncycastle.asn1.DERObjectIdentifier) $r6;

        $r8 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>($r7);

        $z1 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        if $z0 != $z1 goto label1;

        $r9 = virtualinvoke $r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return $r1;

     label3:
        return null;
    }

    private boolean isIndirectCRL()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        java.lang.String $r2;
        byte[] $r3;
        org.bouncycastle.asn1.ASN1Encodable $r4;
        org.bouncycastle.asn1.x509.IssuingDistributionPoint $r5;
        boolean $z0;
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier IssuingDistributionPoint>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r3 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] getExtensionValue(java.lang.String)>($r2);

        if $r3 == null goto label4;

     label1:
        $r4 = staticinvoke <org.bouncycastle.x509.extension.X509ExtensionUtil: org.bouncycastle.asn1.ASN1Encodable fromExtensionValue(byte[])>($r3);

        $r5 = staticinvoke <org.bouncycastle.asn1.x509.IssuingDistributionPoint: org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean isIndirectCRL()>();

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading IssuingDistributionPoint");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label4:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.Set getCriticalExtensionOIDs()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.util.Set $r1;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = specialinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: java.util.Set getExtensionOIDs(boolean)>(1);

        return $r1;
    }

    public byte[] getEncoded() throws java.security.cert.CRLException
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.asn1.DEROutputStream $r2;
        org.bouncycastle.asn1.x509.CertificateList $r3;
        byte[] $r4;
        java.io.IOException $r5;
        java.security.cert.CRLException $r6;
        java.lang.String $r7;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = new org.bouncycastle.asn1.DEROutputStream;

        specialinvoke $r2.<org.bouncycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

     label1:
        virtualinvoke $r2.<org.bouncycastle.asn1.DEROutputStream: void writeObject(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.security.cert.CRLException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r6.<java.security.cert.CRLException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte[] getExtensionValue(java.lang.String)
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.lang.String $r1;
        java.io.ByteArrayOutputStream $r2;
        org.bouncycastle.asn1.DEROutputStream $r3;
        org.bouncycastle.asn1.x509.CertificateList $r4;
        org.bouncycastle.asn1.x509.TBSCertList $r5;
        org.bouncycastle.asn1.x509.X509Extensions $r6;
        org.bouncycastle.asn1.DERObjectIdentifier $r7;
        org.bouncycastle.asn1.x509.X509Extension $r8;
        org.bouncycastle.asn1.ASN1OctetString $r9;
        byte[] $r10;
        java.lang.Exception $r11;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.lang.String;

        $r4 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.TBSCertList: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r6 == null goto label4;

        $r7 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r7.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>($r1);

        $r8 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>($r7);

        if $r8 == null goto label4;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = new org.bouncycastle.asn1.DEROutputStream;

        specialinvoke $r3.<org.bouncycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r2);

     label1:
        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        virtualinvoke $r3.<org.bouncycastle.asn1.DEROutputStream: void writeObject(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error encoding ");

        $r1 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String toString()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r12;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.security.Principal getIssuerDN()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.jce.X509Principal $r1;
        org.bouncycastle.asn1.x509.X509Name $r2;
        org.bouncycastle.asn1.x509.CertificateList $r3;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = new org.bouncycastle.jce.X509Principal;

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.X509Name getIssuer()>();

        specialinvoke $r1.<org.bouncycastle.jce.X509Principal: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r2);

        return $r1;
    }

    public javax.security.auth.x500.X500Principal getIssuerX500Principal()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.ASN1OutputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        org.bouncycastle.asn1.x509.CertificateList $r3;
        org.bouncycastle.asn1.x509.X509Name $r4;
        javax.security.auth.x500.X500Principal $r5;
        byte[] $r6;
        java.io.IOException $r7;
        java.lang.IllegalStateException $r8;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r2 = new java.io.ByteArrayOutputStream;

     label1:
        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r2);

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.X509Name getIssuer()>();

        virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r4);

        $r5 = new javax.security.auth.x500.X500Principal;

        $r6 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r6);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t encode issuer DN");

        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.Date getNextUpdate()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.x509.CertificateList $r1;
        org.bouncycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.Time getNextUpdate()>();

        if $r2 == null goto label1;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.Time getNextUpdate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;

     label1:
        return null;
    }

    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.util.Set $r1;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = specialinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: java.util.Set getExtensionOIDs(boolean)>(0);

        return $r1;
    }

    public java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.math.BigInteger $r1, $r7;
        org.bouncycastle.jce.provider.X509CRLEntryObject $r2;
        org.bouncycastle.asn1.x509.CertificateList $r3;
        org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] $r4;
        boolean $z0, $z1;
        javax.security.auth.x500.X500Principal $r5;
        int $i0, $i1;
        org.bouncycastle.asn1.x509.TBSCertList$CRLEntry $r6;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.math.BigInteger;

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()>();

        $z0 = specialinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: boolean isIndirectCRL()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

        $r2 = new org.bouncycastle.jce.provider.X509CRLEntryObject;

        $r6 = $r4[$i0];

        specialinvoke $r2.<org.bouncycastle.jce.provider.X509CRLEntryObject: void <init>(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,javax.security.auth.x500.X500Principal)>($r6, $z0, $r5);

        $r5 = virtualinvoke $r2.<org.bouncycastle.jce.provider.X509CRLEntryObject: javax.security.auth.x500.X500Principal getCertificateIssuer()>();

        $r7 = virtualinvoke $r2.<org.bouncycastle.jce.provider.X509CRLEntryObject: java.math.BigInteger getSerialNumber()>();

        $z1 = virtualinvoke $r7.<java.math.BigInteger: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        return $r2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.util.Set getRevokedCertificates()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.jce.provider.X509CRLEntryObject $r1;
        java.util.HashSet $r2;
        org.bouncycastle.asn1.x509.CertificateList $r3;
        org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] $r4;
        boolean $z0;
        javax.security.auth.x500.X500Principal $r5;
        int $i0, $i1;
        org.bouncycastle.asn1.x509.TBSCertList$CRLEntry $r6;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()>();

        $z0 = specialinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: boolean isIndirectCRL()>();

        if $r4 == null goto label3;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r5 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r1 = new org.bouncycastle.jce.provider.X509CRLEntryObject;

        $r6 = $r4[$i0];

        specialinvoke $r1.<org.bouncycastle.jce.provider.X509CRLEntryObject: void <init>(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,javax.security.auth.x500.X500Principal)>($r6, $z0, $r5);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r1.<org.bouncycastle.jce.provider.X509CRLEntryObject: javax.security.auth.x500.X500Principal getCertificateIssuer()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;

     label3:
        return null;
    }

    public java.lang.String getSigAlgName()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.lang.String r1;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: java.lang.String sigAlgName>;

        return r1;
    }

    public java.lang.String getSigAlgOID()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.x509.CertificateList $r1;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.bouncycastle.asn1.DERObjectIdentifier $r3;
        java.lang.String $r4;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        return $r4;
    }

    public byte[] getSigAlgParams()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        byte[] $r1, $r2;
        int $i0;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] sigAlgParams>;

        if $r1 == null goto label1;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] sigAlgParams>;

        $i0 = lengthof $r1;

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] sigAlgParams>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;

     label1:
        return null;
    }

    public byte[] getSignature()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.x509.CertificateList $r1;
        org.bouncycastle.asn1.DERBitString $r2;
        byte[] $r3;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }

    public byte[] getTBSCertList() throws java.security.cert.CRLException
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.asn1.DEROutputStream $r2;
        org.bouncycastle.asn1.x509.CertificateList $r3;
        org.bouncycastle.asn1.x509.TBSCertList $r4;
        byte[] $r5;
        java.io.IOException $r6;
        java.security.cert.CRLException $r7;
        java.lang.String $r8;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = new org.bouncycastle.asn1.DEROutputStream;

        specialinvoke $r2.<org.bouncycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

     label1:
        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList getTBSCertList()>();

        virtualinvoke $r2.<org.bouncycastle.asn1.DEROutputStream: void writeObject(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.security.cert.CRLException;

        $r8 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CRLException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.Date getThisUpdate()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        org.bouncycastle.asn1.x509.CertificateList $r1;
        org.bouncycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.Time getThisUpdate()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }

    public int getVersion()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        int $i0;
        org.bouncycastle.asn1.x509.CertificateList $r1;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.CertificateList: int getVersion()>();

        return $i0;
    }

    public boolean hasUnsupportedCriticalExtension()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.util.Set $r1;
        boolean $z0;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: java.util.Set getCriticalExtensionOIDs()>();

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRevoked(java.security.cert.Certificate)
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.security.cert.Certificate $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.RuntimeException $r3;
        org.bouncycastle.asn1.x509.CertificateList $r4;
        org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] $r5;
        java.security.cert.X509Certificate $r6;
        java.math.BigInteger $r7, $r10;
        int $i0, $i1;
        org.bouncycastle.asn1.x509.TBSCertList$CRLEntry $r8;
        org.bouncycastle.asn1.DERInteger $r9;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.cert.Certificate;

        $r2 = virtualinvoke $r1.<java.security.cert.Certificate: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("X.509");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("X.509 CRL used with non X.509 Cert");

        throw $r3;

     label1:
        $r4 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()>();

        if $r5 == null goto label4;

        $r6 = (java.security.cert.X509Certificate) $r1;

        $r7 = virtualinvoke $r6.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $i0 = 0;

     label2:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label4;

        $r8 = $r5[$i0];

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.TBSCertList$CRLEntry: org.bouncycastle.asn1.DERInteger getUserCertificate()>();

        $r10 = virtualinvoke $r9.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $z0 = virtualinvoke $r10.<java.math.BigInteger: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public java.lang.String toString()
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        return "X.509 CRL";
    }

    public void verify(java.security.PublicKey) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.security.PublicKey $r1;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.PublicKey;

        virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: void verify(java.security.PublicKey,java.lang.String)>($r1, "BC");

        return;
    }

    public void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.bouncycastle.jce.provider.X509CRLObject $r0;
        java.security.PublicKey $r1;
        java.lang.String $r2, $r8;
        org.bouncycastle.asn1.x509.CertificateList $r3;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r4, $r6;
        org.bouncycastle.asn1.x509.TBSCertList $r5;
        boolean $z0;
        java.security.cert.CRLException $r7;
        java.security.Signature $r9;
        byte[] $r10;
        java.security.SignatureException $r11;

        $r0 := @this: org.bouncycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = $r0.<org.bouncycastle.jce.provider.X509CRLObject: org.bouncycastle.asn1.x509.CertificateList c>;

        $r5 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.CertificateList: org.bouncycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.TBSCertList: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $z0 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1Encodable: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r7 = new java.security.cert.CRLException;

        specialinvoke $r7.<java.security.cert.CRLException: void <init>(java.lang.String)>("Signature algorithm on CertifcateList does not match TBSCertList.");

        throw $r7;

     label1:
        $r8 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r8, $r2);

        virtualinvoke $r9.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1);

        $r10 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] getTBSCertList()>();

        virtualinvoke $r9.<java.security.Signature: void update(byte[])>($r10);

        $r10 = virtualinvoke $r0.<org.bouncycastle.jce.provider.X509CRLObject: byte[] getSignature()>();

        $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r10);

        if $z0 != 0 goto label2;

        $r11 = new java.security.SignatureException;

        specialinvoke $r11.<java.security.SignatureException: void <init>(java.lang.String)>("CRL does not verify with supplied public key.");

        throw $r11;

     label2:
        return;
    }
}
