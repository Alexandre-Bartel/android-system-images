public final class android.webkit.gears.ApacheHttpRequestAndroid extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    private static final java.lang.String DEFAULT_MIME_TYPE;
    public static final int HEADERS_MAP_INDEX_KEY;
    public static final int HEADERS_MAP_INDEX_VALUE;
    private static final java.lang.String HTTP_LINE_ENDING;
    public static final java.lang.String KEY_CONTENT_LENGTH;
    public static final java.lang.String KEY_CONTENT_TYPE;
    public static final java.lang.String KEY_ETAG;
    public static final java.lang.String KEY_EXPIRES;
    public static final java.lang.String KEY_LAST_MODIFIED;
    public static final java.lang.String KEY_LOCATION;
    private static final java.lang.String LOG_TAG;
    private java.io.InputStream mBodyInputStream;
    private java.lang.Thread mBridgeThread;
    private android.webkit.gears.ApacheHttpRequestAndroid$Buffer mBuffer;
    private android.webkit.CacheManager$CacheResult mCacheResult;
    private java.lang.String mCacheResultUrl;
    private org.apache.http.impl.client.AbstractHttpClient mClient;
    private boolean mConnectionFailed;
    private java.util.concurrent.locks.Lock mConnectionFailedLock;
    private boolean mConnectionFinished;
    private long mContentLength;
    private java.lang.Thread mHttpThread;
    private java.util.concurrent.locks.Lock mHttpThreadLock;
    private org.apache.http.client.methods.HttpRequestBase mMethod;
    private android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity;
    private java.util.Map mRequestHeaders;
    private org.apache.http.HttpResponse mResponse;
    private java.util.Map mResponseHeaders;
    private java.lang.String mResponseLine;
    private android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed mSignal;
    private java.util.concurrent.locks.Condition mStreamingReady;
    private java.util.concurrent.locks.Lock mStreamingReadyLock;

    public void <init>()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.util.concurrent.locks.Condition $r1;
        java.util.HashMap $r2;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.concurrent.locks.Lock $r4;
        android.webkit.gears.ApacheHttpRequestAndroid$Buffer $r5;
        android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed $r6;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mRequestHeaders> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders> = $r2;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread> = null;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mHttpThreadLock> = $r3;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFinished> = 0;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed> = 0;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock> = $r3;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mStreamingReadyLock> = $r3;

        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mStreamingReadyLock>;

        $r1 = interfaceinvoke $r4.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Condition mStreamingReady> = $r1;

        $r5 = new android.webkit.gears.ApacheHttpRequestAndroid$Buffer;

        specialinvoke $r5.<android.webkit.gears.ApacheHttpRequestAndroid$Buffer: void <init>(android.webkit.gears.ApacheHttpRequestAndroid)>($r0);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$Buffer mBuffer> = $r5;

        $r6 = new android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed;

        specialinvoke $r6.<android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed: void <init>(android.webkit.gears.ApacheHttpRequestAndroid)>($r0);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed mSignal> = $r6;

        return;
    }

    static org.apache.http.HttpResponse access$000(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.HttpResponse r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.HttpResponse mResponse>;

        return r1;
    }

    static org.apache.http.HttpResponse access$002(android.webkit.gears.ApacheHttpRequestAndroid, org.apache.http.HttpResponse)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.HttpResponse $r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter1: org.apache.http.HttpResponse;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.HttpResponse mResponse> = $r1;

        return $r1;
    }

    static org.apache.http.client.methods.HttpRequestBase access$100(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.client.methods.HttpRequestBase r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        return r1;
    }

    static android.webkit.gears.ApacheHttpRequestAndroid$Buffer access$1000(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        android.webkit.gears.ApacheHttpRequestAndroid$Buffer r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$Buffer mBuffer>;

        return r1;
    }

    static android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed access$1100(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed mSignal>;

        return r1;
    }

    static org.apache.http.impl.client.AbstractHttpClient access$200(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.impl.client.AbstractHttpClient r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.impl.client.AbstractHttpClient mClient>;

        return r1;
    }

    static java.lang.String access$302(android.webkit.gears.ApacheHttpRequestAndroid, java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter1: java.lang.String;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mResponseLine> = $r1;

        return $r1;
    }

    static java.util.concurrent.locks.Lock access$400(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.util.concurrent.locks.Lock r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        return r1;
    }

    static boolean access$500(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        boolean z0;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

        return z0;
    }

    static boolean access$502(android.webkit.gears.ApacheHttpRequestAndroid, boolean)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        boolean $z0;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        $z0 := @parameter1: boolean;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed> = $z0;

        return $z0;
    }

    static android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity access$600(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity>;

        return r1;
    }

    static long access$700(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        long l0;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        l0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: long mContentLength>;

        return l0;
    }

    static java.util.concurrent.locks.Lock access$800(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.util.concurrent.locks.Lock r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mStreamingReadyLock>;

        return r1;
    }

    static java.util.concurrent.locks.Condition access$900(android.webkit.gears.ApacheHttpRequestAndroid)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.util.concurrent.locks.Condition r1;

        $r0 := @parameter0: android.webkit.gears.ApacheHttpRequestAndroid;

        r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Condition mStreamingReady>;

        return r1;
    }

    private void applyRequestHeaders()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.client.methods.HttpRequestBase $r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String[] $r6;
        java.lang.String $r7, $r8;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mRequestHeaders>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String[]) $r5;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        $r7 = $r6[0];

        $r8 = $r6[1];

        virtualinvoke $r1.<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)>($r7, $r8);

        goto label2;

     label3:
        return;
    }

    public static java.lang.String getCookieForUrl(java.lang.String)
    {
        java.lang.String $r0;
        android.webkit.CookieManager $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r0 = virtualinvoke $r1.<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>($r0);

        return $r0;
    }

    public static void setCookieForUrl(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        android.webkit.CookieManager $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r2.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    private void setResponseHeader(java.lang.String, java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        java.util.Map $r4;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    private void synthesizeHeadersFromCacheResult(android.webkit.CacheManager$CacheResult)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        android.webkit.CacheManager$CacheResult $r1;
        int $i0;
        java.lang.String $r2, $r6, $r7;
        java.lang.StringBuilder $r3;
        java.util.HashMap $r4;
        long $l1;
        byte $b2;
        java.util.Date $r5;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: android.webkit.CacheManager$CacheResult;

        $i0 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: int getHttpStatusCode()>();

        if $i0 < 200 goto label8;

        if $i0 >= 300 goto label8;

        $r2 = "OK";

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1 ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mResponseLine> = $r2;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders> = $r4;

        $l1 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: long getContentLength()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>("Content-Length", $r2);

        $l1 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: long getExpires()>();

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label2;

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>($l1);

        $r2 = staticinvoke <org.apache.http.impl.cookie.DateUtils: java.lang.String formatDate(java.util.Date)>($r5);

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>("Expires", $r2);

     label2:
        $r2 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: java.lang.String getLastModified()>();

        if $r2 == null goto label3;

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>("Last-Modified", $r2);

     label3:
        $r2 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: java.lang.String getETag()>();

        if $r2 == null goto label4;

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>("ETag", $r2);

     label4:
        $r2 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: java.lang.String getLocation()>();

        if $r2 == null goto label5;

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>("Location", $r2);

     label5:
        $r6 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: java.lang.String getMimeType()>();

        $r2 = $r6;

        if $r6 != null goto label6;

        $r2 = "text/plain";

     label6:
        $r6 = virtualinvoke $r1.<android.webkit.CacheManager$CacheResult: java.lang.String getEncoding()>();

        $r7 = $r2;

        if $r6 == null goto label7;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>("Content-Type", $r7);

        return;

     label8:
        if $i0 < 300 goto label9;

        if $i0 >= 400 goto label9;

        $r2 = "MOVED";

        goto label1;

     label9:
        $r2 = "UNAVAILABLE";

        goto label1;
    }

    private void waitUntilConnectionFinished()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        boolean $z0;
        java.lang.Thread $r1;
        java.lang.InterruptedException $r2;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFinished>;

        if $z0 != 0 goto label5;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread>;

     label1:
        virtualinvoke $r1.<java.lang.Thread: void join()>();

     label2:
        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFinished> = 1;

        return;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J", ">>> Trying to join on mHttpThread when it does not exist!");

        return;

     label4:
        $r2 := @caughtexception;

        return;

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    public void abort()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.client.methods.HttpRequestBase $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        virtualinvoke $r1.<org.apache.http.client.methods.HttpRequestBase: void abort()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean appendCacheResult(byte[], int)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        byte[] $r1;
        int $i0;
        java.io.OutputStream $r2;
        android.webkit.CacheManager$CacheResult $r3;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult>;

     label2:
        if $r3 != null goto label4;

        $z0 = 0;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult>;

     label5:
        $r2 = virtualinvoke $r3.<android.webkit.CacheManager$CacheResult: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label6:
        $z0 = 1;

        goto label3;

     label7:
        $r4 := @caughtexception;

        $z0 = 0;

        goto label3;

     label8:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.io.IOException from label5 to label6 with label7;
        catch java.lang.Throwable from label4 to label6 with label8;
    }

    public boolean connectToRemote()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        android.webkit.gears.ApacheHttpRequestAndroid$Connection $r1;
        java.util.concurrent.locks.Lock $r2;
        boolean $z0;
        java.lang.Thread $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void applyRequestHeaders()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

        if $z0 != 0 goto label2;

        $r3 = new java.lang.Thread;

        $r1 = new android.webkit.gears.ApacheHttpRequestAndroid$Connection;

        specialinvoke $r1.<android.webkit.gears.ApacheHttpRequestAndroid$Connection: void <init>(android.webkit.gears.ApacheHttpRequestAndroid)>($r0);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread> = $r3;

        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread>;

        virtualinvoke $r3.<java.lang.Thread: void start()>();

     label2:
        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

     label3:
        if $z0 != 0 goto label5;

        $z0 = 1;

     label4:
        exitmonitor $r0;

        return $z0;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
    }

    public boolean createCacheResult(java.lang.String, int, java.lang.String, java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1, $r2, $r3, $r12;
        int $i0, $i1;
        org.apache.http.util.CharArrayBuffer $r4;
        android.net.http.Headers $r5;
        java.util.Map $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.util.Map$Entry $r10;
        java.lang.StringBuilder $r11;
        java.lang.String[] $r13;
        java.lang.Throwable $r14;
        android.webkit.CacheManager$CacheResult $r15;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        entermonitor $r0;

     label1:
        $r5 = new android.net.http.Headers;

        specialinvoke $r5.<android.net.http.Headers: void <init>()>();

        $r6 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.String[]) $r9;

        $r12 = $r13[1];

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new org.apache.http.util.CharArrayBuffer;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        specialinvoke $r4.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i1);

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r12);

        virtualinvoke $r5.<android.net.http.Headers: void parseHeader(org.apache.http.util.CharArrayBuffer)>($r4);

     label3:
        goto label2;

     label4:
        $r14 := @caughtexception;

        exitmonitor $r0;

        throw $r14;

     label5:
        $r15 = staticinvoke <android.webkit.CacheManager: android.webkit.CacheManager$CacheResult createCacheFile(java.lang.String,int,android.net.http.Headers,java.lang.String,boolean)>($r1, $i0, $r5, $r2, 1);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult> = $r15;

        $r15 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult>;

        if $r15 == null goto label8;

        $r15 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult>;

        virtualinvoke $r15.<android.webkit.CacheManager$CacheResult: void setEncoding(java.lang.String)>($r3);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mCacheResultUrl> = $r1;

     label6:
        $z0 = 1;

     label7:
        exitmonitor $r0;

        return $z0;

     label8:
        $z0 = 0;

        goto label7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String getAllResponseHeaders()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.StringBuilder $r1;
        java.util.Map $r2;
        java.lang.String $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String[] $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders>;

     label2:
        if $r2 != null goto label4;

        $r3 = null;

     label3:
        exitmonitor $r0;

        return $r3;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String[]) $r6;

        $r3 = $r7[0];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = $r7[1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label6:
        goto label5;

     label7:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

     label8:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String getRequestHeader(java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mRequestHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.String[]) $r3;

        if $r4 == null goto label3;

        $r1 = $r4[1];

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r1 = null;

        goto label2;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getResponseHeader(java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders>;

        if $r2 == null goto label4;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.String[]) $r3;

        if $r4 == null goto label3;

        $r1 = $r4[1];

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r1 = null;

        goto label2;

     label4:
        $r1 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public java.lang.String getResponseLine()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mResponseLine>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void initChildThread()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mBridgeThread> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void interrupt()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.util.concurrent.locks.Lock $r1;
        org.apache.http.client.methods.HttpRequestBase $r2;
        java.lang.Thread $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed> = 1;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        if $r2 == null goto label2;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        virtualinvoke $r2.<org.apache.http.client.methods.HttpRequestBase: void abort()>();

     label2:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread>;

        if $r3 == null goto label3;

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void waitUntilConnectionFinished()>();

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public boolean open(java.lang.String, java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1, $r2, $r6;
        boolean $z0;
        org.apache.http.impl.client.DefaultHttpClient $r3;
        org.apache.http.impl.client.AbstractHttpClient $r4;
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler $r5;
        org.apache.http.client.methods.HttpGet $r7;
        org.apache.http.params.HttpParams $r8;
        org.apache.http.client.methods.HttpPost $r9;
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r10;
        org.apache.http.client.methods.HttpRequestBase $r11;
        java.lang.Throwable $r12;
        org.apache.http.client.methods.HttpHead $r13;
        org.apache.http.client.methods.HttpPut $r14;
        org.apache.http.client.methods.HttpDelete $r15;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label01:
        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

     label02:
        if $z0 == 0 goto label04;

        $z0 = 0;

     label03:
        exitmonitor $r0;

        return $z0;

     label04:
        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.impl.client.AbstractHttpClient mClient> = $r3;

        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.impl.client.AbstractHttpClient mClient>;

        $r5 = new org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        specialinvoke $r5.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>(0, 0);

        virtualinvoke $r4.<org.apache.http.impl.client.AbstractHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)>($r5);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mResponseLine> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.Thread mHttpThread> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed> = 0;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFinished> = 0;

        $r6 = "GET";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label06;

        $r7 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r7.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r2);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod> = $r7;

     label05:
        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.impl.client.AbstractHttpClient mClient>;

        $r8 = virtualinvoke $r4.<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>($r8, 0);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>($r8, 0);

        $z0 = 1;

        goto label03;

     label06:
        $r6 = "POST";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label09;

        $r9 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r9.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r2);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod> = $r9;

        $r10 = new android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity;

        specialinvoke $r10.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: void <init>(android.webkit.gears.ApacheHttpRequestAndroid)>($r0);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity> = $r10;

        $r11 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod>;

        $r9 = (org.apache.http.client.methods.HttpPost) $r11;

        $r10 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity>;

        virtualinvoke $r9.<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>($r10);

     label07:
        goto label05;

     label08:
        $r12 := @caughtexception;

        exitmonitor $r0;

        throw $r12;

     label09:
        $r6 = "HEAD";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label10;

        $r13 = new org.apache.http.client.methods.HttpHead;

        specialinvoke $r13.<org.apache.http.client.methods.HttpHead: void <init>(java.lang.String)>($r2);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod> = $r13;

        goto label05;

     label10:
        $r6 = "PUT";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label11;

        $r14 = new org.apache.http.client.methods.HttpPut;

        specialinvoke $r14.<org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>($r2);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod> = $r14;

        goto label05;

     label11:
        $r6 = "DELETE";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label13;

        $r15 = new org.apache.http.client.methods.HttpDelete;

        specialinvoke $r15.<org.apache.http.client.methods.HttpDelete: void <init>(java.lang.String)>($r2);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.client.methods.HttpRequestBase mMethod> = $r15;

     label12:
        goto label05;

     label13:
        $z0 = 0;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label09 to label12 with label08;
    }

    public boolean parseHeaders()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        org.apache.http.Header $r1;
        java.util.concurrent.locks.Lock $r2;
        boolean $z0;
        java.util.HashMap $r3;
        org.apache.http.HttpResponse $r4;
        org.apache.http.Header[] $r5;
        int $i0, $i1;
        java.lang.String $r6, $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

        if $z0 == 0 goto label4;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void waitUntilConnectionFinished()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders> = $r3;

        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.HttpResponse mResponse>;

        if $r4 != null goto label5;

        $z0 = 0;

        goto label3;

     label5:
        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.HttpResponse mResponse>;

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        $i0 = 0;

     label6:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label8;

        $r1 = $r5[$i0];

        $r6 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getName()>();

        $r7 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getValue()>();

        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setResponseHeader(java.lang.String,java.lang.String)>($r6, $r7);

     label7:
        $i0 = $i0 + 1;

        goto label6;

     label8:
        $z0 = 1;

        goto label3;

     label9:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label7 with label9;
    }

    public int receive(byte[])
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        byte[] $r1;
        java.io.InputStream $r2;
        org.apache.http.HttpResponse $r3;
        org.apache.http.HttpEntity $r4;
        int $i0;
        java.io.IOException $r5, $r7;
        java.lang.Throwable $r6;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: byte[];

        entermonitor $r0;

     label01:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream>;

     label02:
        if $r2 != null goto label09;

     label03:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.HttpResponse mResponse>;

        if $r3 == null goto label06;

        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: org.apache.http.HttpResponse mResponse>;

     label04:
        $r4 = interfaceinvoke $r3.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r2 = interfaceinvoke $r4.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label05:
        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream> = $r2;

     label06:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream>;

     label07:
        if $r2 != null goto label09;

        $i0 = 0;

     label08:
        exitmonitor $r0;

        return $i0;

     label09:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream>;

     label10:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);

     label11:
        if $i0 <= 0 goto label13;

     label12:
        goto label08;

     label13:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label14:
        $i0 = 0;

        goto label12;

     label15:
        $r5 := @caughtexception;

        $i0 = -1;

        goto label12;

     label16:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

     label17:
        $r7 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.lang.Throwable from label03 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.io.IOException from label10 to label11 with label15;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label09 to label14 with label16;
    }

    public boolean saveCacheResult()
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        android.webkit.CacheManager$CacheResult $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult>;

        if $r1 == null goto label3;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mCacheResultUrl>;

     label2:
        if $r2 != null goto label5;

     label3:
        $z0 = 0;

     label4:
        exitmonitor $r0;

        return $z0;

     label5:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mCacheResultUrl>;

        $r1 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult>;

        staticinvoke <android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager$CacheResult)>($r2, $r1);

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.CacheManager$CacheResult mCacheResult> = null;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mCacheResultUrl> = null;

     label6:
        $z0 = 1;

        goto label4;

     label7:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean sendPostData(byte[], int)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        java.util.concurrent.locks.Lock $r2;
        android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity $r3;
        android.webkit.gears.ApacheHttpRequestAndroid$Buffer $r4;
        android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed $r5;
        android.webkit.gears.ApacheHttpRequestAndroid$DataPacket $r6;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return 0;

     label1:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity>;

        if $r3 != null goto label2;

        return 0;

     label2:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity mPostEntity>;

        $z0 = virtualinvoke $r3.<android.webkit.gears.ApacheHttpRequestAndroid$StreamEntity: boolean isReady()>();

        if $z0 != 0 goto label3;

        return 0;

     label3:
        if $r1 != null goto label5;

        if $i0 != 0 goto label5;

        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$Buffer mBuffer>;

        virtualinvoke $r4.<android.webkit.gears.ApacheHttpRequestAndroid$Buffer: void put(android.webkit.gears.ApacheHttpRequestAndroid$DataPacket)>(null);

     label4:
        $r5 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed mSignal>;

        virtualinvoke $r5.<android.webkit.gears.ApacheHttpRequestAndroid$SignalConsumed: void waitUntilPacketConsumed()>();

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $z0 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: boolean mConnectionFailed>;

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Gears-J", "failure");

        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return 0;

     label5:
        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: android.webkit.gears.ApacheHttpRequestAndroid$Buffer mBuffer>;

        $r6 = new android.webkit.gears.ApacheHttpRequestAndroid$DataPacket;

        specialinvoke $r6.<android.webkit.gears.ApacheHttpRequestAndroid$DataPacket: void <init>(android.webkit.gears.ApacheHttpRequestAndroid,byte[],int)>($r0, $r1, $i0);

        virtualinvoke $r4.<android.webkit.gears.ApacheHttpRequestAndroid$Buffer: void put(android.webkit.gears.ApacheHttpRequestAndroid$DataPacket)>($r6);

        goto label4;

     label6:
        $r2 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.concurrent.locks.Lock mConnectionFailedLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return 1;
    }

    public void setContentLength(long)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        long $l0;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $l0 := @parameter0: long;

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: long mContentLength> = $l0;

        return;
    }

    public void setRequestHeader(java.lang.String, java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        boolean $z0;
        long $l0;
        java.util.Map $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label1:
        $r3 = newarray (java.lang.String)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Content-Length");

        if $z0 == 0 goto label3;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        virtualinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void setContentLength(long)>($l0);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r4 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mRequestHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label4:
        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean useCacheResult(java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1, $r10;
        java.util.HashMap $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6, $r8;
        java.util.Map$Entry $r7;
        java.lang.String[] $r9;
        java.lang.Throwable $r11;
        android.webkit.CacheManager$CacheResult $r12;
        long $l0, $l2;
        byte $b1;
        java.io.InputStream $r13;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label01:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mRequestHeaders>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String[]) $r8;

        $r10 = $r9[1];

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r10);

     label03:
        goto label02;

     label04:
        $r11 := @caughtexception;

        exitmonitor $r0;

        throw $r11;

     label05:
        $r12 = staticinvoke <android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,java.util.Map)>($r1, $r2);

     label06:
        if $r12 != null goto label08;

        $z0 = 0;

     label07:
        exitmonitor $r0;

        return $z0;

     label08:
        $l0 = virtualinvoke $r12.<android.webkit.CacheManager$CacheResult: long getExpires()>();

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label09;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b1 = $l2 cmp $l0;

        if $b1 < 0 goto label09;

        $z0 = 0;

        goto label07;

     label09:
        $r13 = virtualinvoke $r12.<android.webkit.CacheManager$CacheResult: java.io.InputStream getInputStream()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream> = $r13;

        $r13 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream>;

        if $r13 != null goto label10;

        $z0 = 0;

        goto label07;

     label10:
        specialinvoke $r0.<android.webkit.gears.ApacheHttpRequestAndroid: void synthesizeHeadersFromCacheResult(android.webkit.CacheManager$CacheResult)>($r12);

     label11:
        $z0 = 1;

        goto label07;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label11 with label04;
    }

    public boolean useLocalServerResult(java.lang.String)
    {
        android.webkit.gears.ApacheHttpRequestAndroid $r0;
        java.lang.String $r1;
        android.webkit.gears.UrlInterceptHandlerGears $r2;
        boolean $z0;
        java.util.Map $r3;
        android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse $r4;
        java.io.InputStream $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.webkit.gears.ApacheHttpRequestAndroid;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = staticinvoke <android.webkit.gears.UrlInterceptHandlerGears: android.webkit.gears.UrlInterceptHandlerGears getInstance()>();

     label2:
        if $r2 != null goto label4;

        $z0 = 0;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $r3 = $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mRequestHeaders>;

        $r4 = virtualinvoke $r2.<android.webkit.gears.UrlInterceptHandlerGears: android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse getServiceResponse(java.lang.String,java.util.Map)>($r1, $r3);

        if $r4 != null goto label5;

        $z0 = 0;

        goto label3;

     label5:
        $r5 = virtualinvoke $r4.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.io.InputStream getInputStream()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.io.InputStream mBodyInputStream> = $r5;

        $r1 = virtualinvoke $r4.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.lang.String getStatusLine()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String mResponseLine> = $r1;

        $r3 = virtualinvoke $r4.<android.webkit.gears.UrlInterceptHandlerGears$ServiceResponse: java.util.Map getResponseHeaders()>();

        $r0.<android.webkit.gears.ApacheHttpRequestAndroid: java.util.Map mResponseHeaders> = $r3;

     label6:
        $z0 = 1;

        goto label3;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    public static void <clinit>()
    {
        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String LOG_TAG> = "Gears-J";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String KEY_LOCATION> = "Location";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String KEY_LAST_MODIFIED> = "Last-Modified";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String KEY_EXPIRES> = "Expires";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String KEY_ETAG> = "ETag";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String KEY_CONTENT_TYPE> = "Content-Type";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String KEY_CONTENT_LENGTH> = "Content-Length";

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String HTTP_LINE_ENDING> = "\r\n";

        <android.webkit.gears.ApacheHttpRequestAndroid: int HEADERS_MAP_INDEX_VALUE> = 1;

        <android.webkit.gears.ApacheHttpRequestAndroid: int HEADERS_MAP_INDEX_KEY> = 0;

        <android.webkit.gears.ApacheHttpRequestAndroid: java.lang.String DEFAULT_MIME_TYPE> = "text/plain";

        <android.webkit.gears.ApacheHttpRequestAndroid: int BUFFER_SIZE> = 4096;

        return;
    }
}
