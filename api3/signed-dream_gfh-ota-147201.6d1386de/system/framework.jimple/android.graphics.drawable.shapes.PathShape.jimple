public class android.graphics.drawable.shapes.PathShape extends android.graphics.drawable.shapes.Shape
{
    private android.graphics.Path mPath;
    private float mScaleX;
    private float mScaleY;
    private float mStdHeight;
    private float mStdWidth;

    public void <init>(android.graphics.Path, float, float)
    {
        android.graphics.drawable.shapes.PathShape $r0;
        android.graphics.Path $r1;
        float $f0, $f1;

        $r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r1 := @parameter0: android.graphics.Path;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        specialinvoke $r0.<android.graphics.drawable.shapes.Shape: void <init>()>();

        $r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath> = $r1;

        $r0.<android.graphics.drawable.shapes.PathShape: float mStdWidth> = $f0;

        $r0.<android.graphics.drawable.shapes.PathShape: float mStdHeight> = $f1;

        return;
    }

    public android.graphics.drawable.shapes.PathShape clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.PathShape $r0, $r4;
        android.graphics.Path $r1, $r2;
        android.graphics.drawable.shapes.Shape $r3;

        $r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r3 = specialinvoke $r0.<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>();

        $r4 = (android.graphics.drawable.shapes.PathShape) $r3;

        $r1 = new android.graphics.Path;

        $r2 = $r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        specialinvoke $r1.<android.graphics.Path: void <init>(android.graphics.Path)>($r2);

        $r4.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath> = $r1;

        return $r4;
    }

    public volatile android.graphics.drawable.shapes.Shape clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.PathShape $r0;

        $r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r0 = virtualinvoke $r0.<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>();

        return $r0;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.PathShape $r0;

        $r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r0 = virtualinvoke $r0.<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>();

        return $r0;
    }

    public void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.shapes.PathShape $r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        float $f0, $f1;
        android.graphics.Path $r3;

        $r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f1 = $r0.<android.graphics.drawable.shapes.PathShape: float mScaleX>;

        $f0 = $r0.<android.graphics.drawable.shapes.PathShape: float mScaleY>;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float)>($f1, $f0);

        $r3 = $r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r2);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    protected void onResize(float, float)
    {
        android.graphics.drawable.shapes.PathShape $r0;
        float $f0, $f1, $f2;

        $r0 := @this: android.graphics.drawable.shapes.PathShape;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = $r0.<android.graphics.drawable.shapes.PathShape: float mStdWidth>;

        $f0 = $f0 / $f2;

        $r0.<android.graphics.drawable.shapes.PathShape: float mScaleX> = $f0;

        $f0 = $r0.<android.graphics.drawable.shapes.PathShape: float mStdHeight>;

        $f0 = $f1 / $f0;

        $r0.<android.graphics.drawable.shapes.PathShape: float mScaleY> = $f0;

        return;
    }
}
