class android.webkit.WebViewCore$EventHub extends java.lang.Object
{
    static final int ADD_JS_INTERFACE;
    static final int BLOCK_FOCUS_CHANGE_UNTIL_KEY_UP;
    static final int CLEAR_CACHE;
    static final int CLEAR_CONTENT;
    static final int CLEAR_HISTORY;
    static final int CLEAR_SSL_PREF_TABLE;
    static final int CLICK;
    static final int DELETE_SELECTION;
    private static final int DESTROY;
    static final int DOC_HAS_IMAGES;
    static final int DUMP_DOMTREE;
    static final int DUMP_NAVTREE;
    static final int DUMP_RENDERTREE;
    static final int GET_SELECTION;
    static final int GO_BACK_FORWARD;
    static final int KEY_DOWN;
    static final int KEY_UP;
    static final int LISTBOX_CHOICES;
    static final int LOAD_DATA;
    static final int LOAD_URL;
    static final int NO_FOCUS_CHANGE_BLOCK;
    static final int PASS_TO_JS;
    static final int PAUSE_TIMERS;
    static final int REFRESH_PLUGINS;
    static final int RELOAD;
    static final int REPLACE_TEXT;
    static final int REQUEST_DOC_AS_TEXT;
    static final int REQUEST_EXT_REPRESENTATION;
    static final int REQUEST_FOCUS_HREF;
    static final int RESTORE_STATE;
    static final int RESUME_TIMERS;
    static final int SAVE_DOCUMENT_STATE;
    static final int SET_BACKGROUND_COLOR;
    static final int SET_FINAL_FOCUS;
    static final int SET_GLOBAL_BOUNDS;
    static final int SET_KIT_FOCUS;
    static final int SET_NETWORK_STATE;
    static final int SET_SCROLL_OFFSET;
    static final int SET_SELECTION;
    static final int SET_SNAP_ANCHOR;
    static final int SINGLE_LISTBOX_CHOICE;
    static final int SPLIT_PICTURE_SET;
    static final int STOP_LOADING;
    static final int SYNC_SCROLL;
    static final int TOUCH_EVENT;
    static final int TOUCH_UP;
    static final int UNBLOCK_FOCUS;
    static final int UPDATE_CACHE_AND_TEXT_ENTRY;
    static final int VIEW_SIZE_CHANGED;
    static final int WEBKIT_DRAW;
    private boolean mBlockMessages;
    private android.os.Handler mHandler;
    private java.util.ArrayList mMessages;
    private int mSavedPriority;
    private int mTid;
    final android.webkit.WebViewCore this$0;

    private void <init>(android.webkit.WebViewCore)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.webkit.WebViewCore $r1;
        java.util.ArrayList $r2;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter0: android.webkit.WebViewCore;

        $r0.<android.webkit.WebViewCore$EventHub: android.webkit.WebViewCore this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages> = $r2;

        return;
    }

    void <init>(android.webkit.WebViewCore, android.webkit.WebViewCore$1)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.webkit.WebViewCore $r1;
        android.webkit.WebViewCore$1 $r2;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter0: android.webkit.WebViewCore;

        $r2 := @parameter1: android.webkit.WebViewCore$1;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void <init>(android.webkit.WebViewCore)>($r1);

        return;
    }

    static int access$1700(android.webkit.WebViewCore$EventHub)
    {
        android.webkit.WebViewCore$EventHub $r0;
        int i0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        i0 = $r0.<android.webkit.WebViewCore$EventHub: int mSavedPriority>;

        return i0;
    }

    static int access$1702(android.webkit.WebViewCore$EventHub, int)
    {
        android.webkit.WebViewCore$EventHub $r0;
        int $i0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        $i0 := @parameter1: int;

        $r0.<android.webkit.WebViewCore$EventHub: int mSavedPriority> = $i0;

        return $i0;
    }

    static int access$1800(android.webkit.WebViewCore$EventHub)
    {
        android.webkit.WebViewCore$EventHub $r0;
        int i0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        i0 = $r0.<android.webkit.WebViewCore$EventHub: int mTid>;

        return i0;
    }

    static void access$200(android.webkit.WebViewCore$EventHub)
    {
        android.webkit.WebViewCore$EventHub $r0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void transferMessages()>();

        return;
    }

    static void access$5000(android.webkit.WebViewCore$EventHub, android.os.Message)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Message $r1;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void sendMessage(android.os.Message)>($r1);

        return;
    }

    static void access$5100(android.webkit.WebViewCore$EventHub, android.os.Message, long)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Message $r1;
        long $l0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter1: android.os.Message;

        $l0 := @parameter2: long;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void sendMessageDelayed(android.os.Message,long)>($r1, $l0);

        return;
    }

    static void access$5200(android.webkit.WebViewCore$EventHub, int)
    {
        android.webkit.WebViewCore$EventHub $r0;
        int $i0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void removeMessages(int)>($i0);

        return;
    }

    static void access$5300(android.webkit.WebViewCore$EventHub)
    {
        android.webkit.WebViewCore$EventHub $r0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void removeMessages()>();

        return;
    }

    static void access$5400(android.webkit.WebViewCore$EventHub, android.os.Message)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Message $r1;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void sendMessageAtFrontOfQueue(android.os.Message)>($r1);

        return;
    }

    static void access$5500(android.webkit.WebViewCore$EventHub)
    {
        android.webkit.WebViewCore$EventHub $r0;

        $r0 := @parameter0: android.webkit.WebViewCore$EventHub;

        specialinvoke $r0.<android.webkit.WebViewCore$EventHub: void blockMessages()>();

        return;
    }

    private void blockMessages()
    {
        android.webkit.WebViewCore$EventHub $r0;
        java.lang.Throwable $r1;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        entermonitor $r0;

     label1:
        $r0.<android.webkit.WebViewCore$EventHub: boolean mBlockMessages> = 1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void removeMessages()
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.webkit.WebViewCore $r1;
        java.util.ArrayList $r2;
        android.os.Handler $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.webkit.WebViewCore$EventHub: android.webkit.WebViewCore this$0>;

        staticinvoke <android.webkit.WebViewCore: boolean access$4902(android.webkit.WebViewCore,boolean)>($r1, 0);

        $r1 = $r0.<android.webkit.WebViewCore$EventHub: android.webkit.WebViewCore this$0>;

        staticinvoke <android.webkit.WebViewCore: boolean access$4702(android.webkit.WebViewCore,boolean)>($r1, 0);

        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 = $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label4:
        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void removeMessages(int)
    {
        android.webkit.WebViewCore$EventHub $r0;
        int $i0;
        boolean $z0;
        android.webkit.WebViewCore $r1;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.os.Handler $r4;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label01:
        $z0 = $r0.<android.webkit.WebViewCore$EventHub: boolean mBlockMessages>;

     label02:
        if $z0 == 0 goto label04;

     label03:
        exitmonitor $r0;

        return;

     label04:
        if $i0 != 130 goto label06;

     label05:
        $r1 = $r0.<android.webkit.WebViewCore$EventHub: android.webkit.WebViewCore this$0>;

        staticinvoke <android.webkit.WebViewCore: boolean access$4902(android.webkit.WebViewCore,boolean)>($r1, 0);

     label06:
        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        if $r2 == null goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("webcore", "Not supported in this case.");

     label07:
        goto label03;

     label08:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label09:
        $r4 = $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>($i0);

     label10:
        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void sendMessage(android.os.Message)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Message $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.os.Handler $r4;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter0: android.os.Message;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.webkit.WebViewCore$EventHub: boolean mBlockMessages>;

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        if $r2 == null goto label7;

        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label5:
        goto label3;

     label6:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label7:
        $r4 = $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

     label8:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void sendMessageAtFrontOfQueue(android.os.Message)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Message $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.os.Handler $r4;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter0: android.os.Message;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.webkit.WebViewCore$EventHub: boolean mBlockMessages>;

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        if $r2 == null goto label7;

        $r2 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r1);

     label5:
        goto label3;

     label6:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label7:
        $r4 = $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r1);

     label8:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void sendMessageDelayed(android.os.Message, long)
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Message $r1;
        long $l0;
        boolean $z0;
        android.os.Handler $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $r1 := @parameter0: android.os.Message;

        $l0 := @parameter1: long;

        entermonitor $r0;

     label1:
        $z0 = $r0.<android.webkit.WebViewCore$EventHub: boolean mBlockMessages>;

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 = $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, $l0);

     label5:
        goto label3;

     label6:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void transferMessages()
    {
        android.webkit.WebViewCore$EventHub $r0;
        android.os.Handler $r1;
        int $i0, $i1;
        android.webkit.WebViewCore$EventHub$1 $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.webkit.WebViewCore$EventHub;

        $i0 = staticinvoke <android.os.Process: int myTid()>();

        $r0.<android.webkit.WebViewCore$EventHub: int mTid> = $i0;

        $i0 = $r0.<android.webkit.WebViewCore$EventHub: int mTid>;

        $i0 = staticinvoke <android.os.Process: int getThreadPriority(int)>($i0);

        $r0.<android.webkit.WebViewCore$EventHub: int mSavedPriority> = $i0;

        $r2 = new android.webkit.WebViewCore$EventHub$1;

        specialinvoke $r2.<android.webkit.WebViewCore$EventHub$1: void <init>(android.webkit.WebViewCore$EventHub)>($r0);

        $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler> = $r2;

        entermonitor $r0;

     label1:
        $r3 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = $r0.<android.webkit.WebViewCore$EventHub: android.os.Handler mHandler>;

        $r3 = $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (android.os.Message) $r4;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r0.<android.webkit.WebViewCore$EventHub: java.util.ArrayList mMessages> = null;

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <android.webkit.WebViewCore$EventHub: int WEBKIT_DRAW> = 130;

        <android.webkit.WebViewCore$EventHub: int VIEW_SIZE_CHANGED> = 105;

        <android.webkit.WebViewCore$EventHub: int UPDATE_CACHE_AND_TEXT_ENTRY> = 117;

        <android.webkit.WebViewCore$EventHub: int UNBLOCK_FOCUS> = 127;

        <android.webkit.WebViewCore$EventHub: int TOUCH_UP> = 140;

        <android.webkit.WebViewCore$EventHub: int TOUCH_EVENT> = 141;

        <android.webkit.WebViewCore$EventHub: int SYNC_SCROLL> = 131;

        <android.webkit.WebViewCore$EventHub: int STOP_LOADING> = 101;

        <android.webkit.WebViewCore$EventHub: int SPLIT_PICTURE_SET> = 133;

        <android.webkit.WebViewCore$EventHub: int SINGLE_LISTBOX_CHOICE> = 124;

        <android.webkit.WebViewCore$EventHub: int SET_SNAP_ANCHOR> = 121;

        <android.webkit.WebViewCore$EventHub: int SET_SELECTION> = 113;

        <android.webkit.WebViewCore$EventHub: int SET_SCROLL_OFFSET> = 107;

        <android.webkit.WebViewCore$EventHub: int SET_NETWORK_STATE> = 119;

        <android.webkit.WebViewCore$EventHub: int SET_KIT_FOCUS> = 136;

        <android.webkit.WebViewCore$EventHub: int SET_GLOBAL_BOUNDS> = 116;

        <android.webkit.WebViewCore$EventHub: int SET_FINAL_FOCUS> = 135;

        <android.webkit.WebViewCore$EventHub: int SET_BACKGROUND_COLOR> = 126;

        <android.webkit.WebViewCore$EventHub: int SAVE_DOCUMENT_STATE> = 128;

        <android.webkit.WebViewCore$EventHub: int RESUME_TIMERS> = 110;

        <android.webkit.WebViewCore$EventHub: int RESTORE_STATE> = 108;

        <android.webkit.WebViewCore$EventHub: int REQUEST_FOCUS_HREF> = 137;

        <android.webkit.WebViewCore$EventHub: int REQUEST_EXT_REPRESENTATION> = 160;

        <android.webkit.WebViewCore$EventHub: int REQUEST_DOC_AS_TEXT> = 161;

        <android.webkit.WebViewCore$EventHub: int REPLACE_TEXT> = 114;

        <android.webkit.WebViewCore$EventHub: int RELOAD> = 102;

        <android.webkit.WebViewCore$EventHub: int REFRESH_PLUGINS> = 132;

        <android.webkit.WebViewCore$EventHub: int PAUSE_TIMERS> = 109;

        <android.webkit.WebViewCore$EventHub: int PASS_TO_JS> = 115;

        <android.webkit.WebViewCore$EventHub: int NO_FOCUS_CHANGE_BLOCK> = 0;

        <android.webkit.WebViewCore$EventHub: int LOAD_URL> = 100;

        <android.webkit.WebViewCore$EventHub: int LOAD_DATA> = 139;

        <android.webkit.WebViewCore$EventHub: int LISTBOX_CHOICES> = 123;

        <android.webkit.WebViewCore$EventHub: int KEY_UP> = 104;

        <android.webkit.WebViewCore$EventHub: int KEY_DOWN> = 103;

        <android.webkit.WebViewCore$EventHub: int GO_BACK_FORWARD> = 106;

        <android.webkit.WebViewCore$EventHub: int GET_SELECTION> = 129;

        <android.webkit.WebViewCore$EventHub: int DUMP_RENDERTREE> = 171;

        <android.webkit.WebViewCore$EventHub: int DUMP_NAVTREE> = 172;

        <android.webkit.WebViewCore$EventHub: int DUMP_DOMTREE> = 170;

        <android.webkit.WebViewCore$EventHub: int DOC_HAS_IMAGES> = 120;

        <android.webkit.WebViewCore$EventHub: int DESTROY> = 200;

        <android.webkit.WebViewCore$EventHub: int DELETE_SELECTION> = 122;

        <android.webkit.WebViewCore$EventHub: int CLICK> = 118;

        <android.webkit.WebViewCore$EventHub: int CLEAR_SSL_PREF_TABLE> = 150;

        <android.webkit.WebViewCore$EventHub: int CLEAR_HISTORY> = 112;

        <android.webkit.WebViewCore$EventHub: int CLEAR_CONTENT> = 134;

        <android.webkit.WebViewCore$EventHub: int CLEAR_CACHE> = 111;

        <android.webkit.WebViewCore$EventHub: int BLOCK_FOCUS_CHANGE_UNTIL_KEY_UP> = 1;

        <android.webkit.WebViewCore$EventHub: int ADD_JS_INTERFACE> = 138;

        return;
    }
}
