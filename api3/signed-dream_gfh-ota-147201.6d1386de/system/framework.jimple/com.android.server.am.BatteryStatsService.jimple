public final class com.android.server.am.BatteryStatsService extends com.android.internal.app.IBatteryStats$Stub
{
    static com.android.internal.app.IBatteryStats sService;
    android.content.Context mContext;
    final com.android.internal.os.BatteryStatsImpl mStats;

    void <init>(java.lang.String)
    {
        com.android.server.am.BatteryStatsService $r0;
        java.lang.String $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.android.internal.app.IBatteryStats$Stub: void <init>()>();

        $r2 = new com.android.internal.os.BatteryStatsImpl;

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void <init>(java.lang.String)>($r1);

        $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats> = $r2;

        return;
    }

    public static com.android.internal.app.IBatteryStats getService()
    {
        com.android.internal.app.IBatteryStats $r0;
        android.os.IBinder $r1;

        $r0 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        if $r0 == null goto label1;

        $r0 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        return $r0;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batteryinfo");

        $r0 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r1);

        <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService> = $r0;

        $r0 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        return $r0;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.BatteryStatsService $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3;
        java.lang.String $r4, $r7;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl $r5, $r8;
        android.util.PrintWriterPrinter $r6;
        boolean $z0, $z1;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        $r5 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r5;

        $z1 = 0;

        if $r3 == null goto label3;

     label1:
        $i0 = lengthof $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r4 = $r3[$i1];

        $r7 = "-c";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $z1 = 1;

     label3:
        if $z1 == 0 goto label7;

        $r8 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r8.<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String[])>($r2, $r3);

     label4:
        exitmonitor $r5;

     label5:
        return;

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        $r8 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r6 = new android.util.PrintWriterPrinter;

        specialinvoke $r6.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>($r2);

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl: void dumpLocked(android.util.Printer)>($r6);

        goto label4;

     label8:
        $r9 := @caughtexception;

        exitmonitor $r5;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public void enforceCallingPermission()
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0, $i1;
        android.content.Context $r1;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = $r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", $i0, $i1, null);

        return;
    }

    public com.android.internal.os.BatteryStatsImpl getActiveStatistics()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl r1;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        return r1;
    }

    public long getAwakeTimeBattery()
    {
        com.android.server.am.BatteryStatsService $r0;
        long $l0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = $r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        return $l0;
    }

    public long getAwakeTimePlugged()
    {
        com.android.server.am.BatteryStatsService $r0;
        long $l0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = $r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>();

        return $l0;
    }

    public byte[] getStatistics()
    {
        com.android.server.am.BatteryStatsService $r0;
        android.content.Context $r1;
        android.os.Parcel $r2;
        com.android.internal.os.BatteryStatsImpl $r3;
        byte[] $r4;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = $r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>($r2, 0);

        $r4 = virtualinvoke $r2.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public boolean isOnBattery()
    {
        com.android.server.am.BatteryStatsService $r0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl $r1;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        return $z0;
    }

    public void noteBluetoothOff()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOffLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteBluetoothOn()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOnLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockAcquired(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockReleased(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteInputEvent()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteInputEventLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneDataConnectionState(int, boolean)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean)>($i0, $z0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneOff()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePhoneOffLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneOn()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePhoneOnLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneSignalStrength(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePhoneSignalStrengthLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScanWifiLockAcquired(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteScanWifiLockAcquiredLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScanWifiLockReleased(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteScanWifiLockReleasedLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenBrightness(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteScreenBrightnessLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenOff()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteScreenOffLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenOn()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteScreenOnLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartGps(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteStartGps(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartSensor(int, int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r3 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r2 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSensor(int)>($i1);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartWakelock(int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0, $i1;
        java.lang.String $r1;
        com.android.internal.os.BatteryStatsImpl $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r3 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartWakeLocked(java.lang.String,int)>($r1, $i1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopGps(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteStopGps(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopSensor(int, int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r3 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r2 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSensor(int)>($i1);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopWakelock(int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0, $i1;
        java.lang.String $r1;
        com.android.internal.os.BatteryStatsImpl $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r3 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i0);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopWakeLocked(java.lang.String,int)>($r1, $i1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteUserActivity(int, int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0, $i1;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteUserActivityLocked(int,int)>($i0, $i1);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiOff(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiOffLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiOn(int)
    {
        com.android.server.am.BatteryStatsService $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiOnLocked(int)>($i0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiRunning()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiStopped()
    {
        com.android.server.am.BatteryStatsService $r0;
        com.android.internal.os.BatteryStatsImpl $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiStoppedLocked()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void publish(android.content.Context)
    {
        com.android.server.am.BatteryStatsService $r0;
        android.content.Context $r1;
        android.os.IBinder $r2;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 := @parameter0: android.content.Context;

        $r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext> = $r1;

        $r2 = virtualinvoke $r0.<com.android.internal.app.IBatteryStats$Stub: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("batteryinfo", $r2);

        return;
    }

    public void setOnBattery(boolean, int)
    {
        com.android.server.am.BatteryStatsService $r0;
        boolean $z0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl $r1;

        $r0 := @this: com.android.server.am.BatteryStatsService;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = $r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: void setOnBattery(boolean,int)>($z0, $i0);

        return;
    }
}
