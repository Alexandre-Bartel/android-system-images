public class org.apache.harmony.security.provider.crypto.SHA1Impl extends java.lang.Object implements org.apache.harmony.security.provider.crypto.SHA1_Data
{

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.SHA1Impl $r0;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1Impl;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void computeHash(int[])
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        $r0 := @parameter0: int[];

        $i0 = $r0[82];

        $i1 = $r0[83];

        $i2 = $r0[84];

        $i3 = $r0[85];

        $i4 = $r0[86];

        $i5 = 16;

     label01:
        if $i5 >= 80 goto label02;

        $i6 = $i5 - 3;

        $i6 = $r0[$i6];

        $i7 = $i5 - 8;

        $i7 = $r0[$i7];

        $i6 = $i6 ^ $i7;

        $i7 = $i5 - 14;

        $i7 = $r0[$i7];

        $i6 = $i6 ^ $i7;

        $i7 = $i5 - 16;

        $i7 = $r0[$i7];

        $i7 = $i6 ^ $i7;

        $i6 = $i7 << 1;

        $i7 = $i7 >>> 31;

        $i6 = $i6 | $i7;

        $r0[$i5] = $i6;

        $i5 = $i5 + 1;

        goto label01;

     label02:
        $i5 = 0;

     label03:
        if $i5 >= 20 goto label04;

        $i6 = $i0 << 5;

        $i7 = $i0 >>> 27;

        $i6 = $i6 | $i7;

        $i7 = $i1 & $i2;

        $i8 = $i1 ^ -1;

        $i8 = $i8 & $i3;

        $i7 = $i7 | $i8;

        $i6 = $i6 + $i7;

        $i7 = $r0[$i5];

        $i4 = $i7 + $i4;

        $i4 = $i4 + 1518500249;

        $i6 = $i6 + $i4;

        $i4 = $i3;

        $i3 = $i2;

        $i2 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i2 = $i2 | $i1;

        $i1 = $i0;

        $i0 = $i6;

        $i5 = $i5 + 1;

        goto label03;

     label04:
        $i5 = 20;

     label05:
        if $i5 >= 40 goto label06;

        $i6 = $i0 << 5;

        $i7 = $i0 >>> 27;

        $i6 = $i6 | $i7;

        $i7 = $i1 ^ $i2;

        $i7 = $i7 ^ $i3;

        $i6 = $i6 + $i7;

        $i7 = $r0[$i5];

        $i4 = $i7 + $i4;

        $i4 = $i4 + 1859775393;

        $i6 = $i6 + $i4;

        $i4 = $i3;

        $i3 = $i2;

        $i2 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i2 = $i2 | $i1;

        $i1 = $i0;

        $i0 = $i6;

        $i5 = $i5 + 1;

        goto label05;

     label06:
        $i5 = 40;

     label07:
        if $i5 >= 60 goto label08;

        $i6 = $i0 << 5;

        $i7 = $i0 >>> 27;

        $i6 = $i6 | $i7;

        $i7 = $i1 & $i2;

        $i8 = $i1 & $i3;

        $i7 = $i7 | $i8;

        $i8 = $i2 & $i3;

        $i7 = $i7 | $i8;

        $i6 = $i6 + $i7;

        $i7 = $r0[$i5];

        $i4 = $i7 + $i4;

        $i4 = $i4 + -1894007588;

        $i6 = $i6 + $i4;

        $i4 = $i3;

        $i3 = $i2;

        $i2 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i2 = $i2 | $i1;

        $i1 = $i0;

        $i0 = $i6;

        $i5 = $i5 + 1;

        goto label07;

     label08:
        $i5 = 60;

     label09:
        if $i5 >= 80 goto label10;

        $i6 = $i0 << 5;

        $i7 = $i0 >>> 27;

        $i6 = $i6 | $i7;

        $i7 = $i1 ^ $i2;

        $i7 = $i7 ^ $i3;

        $i6 = $i6 + $i7;

        $i7 = $r0[$i5];

        $i4 = $i7 + $i4;

        $i4 = $i4 + -899497514;

        $i6 = $i6 + $i4;

        $i4 = $i3;

        $i3 = $i2;

        $i2 = $i1 << 30;

        $i1 = $i1 >>> 2;

        $i2 = $i2 | $i1;

        $i1 = $i0;

        $i0 = $i6;

        $i5 = $i5 + 1;

        goto label09;

     label10:
        $i5 = $r0[82];

        $i0 = $i5 + $i0;

        $r0[82] = $i0;

        $i0 = $r0[83];

        $i0 = $i0 + $i1;

        $r0[83] = $i0;

        $i0 = $r0[84];

        $i0 = $i0 + $i2;

        $r0[84] = $i0;

        $i0 = $r0[85];

        $i3 = $i0 + $i3;

        $r0[85] = $i3;

        $i3 = $r0[86];

        $i3 = $i3 + $i4;

        $r0[86] = $i3;

        return;
    }

    static void updateHash(int[], byte[], int, int)
    {
        int[] $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8;
        byte $b5;
        short $s6;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = $r0[81];

        $i3 = $i2 >> 2;

        $i4 = $i2 & 3;

        $i2 = $i2 + $i1;

        $i2 = $i2 - $i0;

        $i2 = $i2 + 1;

        $i2 = $i2 & 63;

        $r0[81] = $i2;

        if $i4 == 0 goto label13;

     label01:
        if $i0 > $i1 goto label02;

        if $i4 >= 4 goto label02;

        $i2 = $r0[$i3];

        $b5 = $r1[$i0];

        $s6 = $b5 & 255;

        $i7 = 3 - $i4;

        $i7 = $i7 << 3;

        $i7 = $s6 << $i7;

        $i2 = $i2 | $i7;

        $r0[$i3] = $i2;

        $i4 = $i4 + 1;

        $i0 = $i0 + 1;

        goto label01;

     label02:
        if $i4 != 4 goto label12;

        $i3 = $i3 + 1;

        if $i3 != 16 goto label03;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r0);

        $i3 = 0;

     label03:
        if $i0 <= $i1 goto label04;

        return;

     label04:
        $i4 = $i1 - $i0;

        $i4 = $i4 + 1;

        $i4 = $i4 >> 2;

        $i2 = 0;

     label05:
        if $i2 >= $i4 goto label08;

        $b5 = $r1[$i0];

        $s6 = $b5 & 255;

        $i7 = $s6 << 24;

        $i8 = $i0 + 1;

        $b5 = $r1[$i8];

        $s6 = $b5 & 255;

        $i8 = $s6 << 16;

        $i7 = $i7 | $i8;

        $i8 = $i0 + 2;

        $b5 = $r1[$i8];

        $s6 = $b5 & 255;

        $i8 = $s6 << 8;

        $i7 = $i7 | $i8;

        $i8 = $i0 + 3;

        $b5 = $r1[$i8];

        $s6 = $b5 & 255;

        $i7 = $i7 | $s6;

        $r0[$i3] = $i7;

        $i0 = $i0 + 4;

        $i3 = $i3 + 1;

        if $i3 >= 16 goto label07;

     label06:
        $i2 = $i2 + 1;

        goto label05;

     label07:
        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r0);

        $i3 = 0;

        goto label06;

     label08:
        $i1 = $i1 - $i0;

        $i4 = $i1 + 1;

        if $i4 == 0 goto label10;

        $b5 = $r1[$i0];

        $s6 = $b5 & 255;

        $i1 = $s6 << 24;

        if $i4 == 1 goto label11;

        $i2 = $i0 + 1;

        $b5 = $r1[$i2];

        $s6 = $b5 & 255;

        $i2 = $s6 << 16;

        $i1 = $i1 | $i2;

        if $i4 == 2 goto label11;

        $i0 = $i0 + 2;

        $b5 = $r1[$i0];

        $s6 = $b5 & 255;

        $i0 = $s6 << 8;

        $i0 = $i0 | $i1;

     label09:
        $r0[$i3] = $i0;

     label10:
        return;

     label11:
        $i0 = $i1;

        goto label09;

     label12:
        goto label03;

     label13:
        goto label04;
    }
}
