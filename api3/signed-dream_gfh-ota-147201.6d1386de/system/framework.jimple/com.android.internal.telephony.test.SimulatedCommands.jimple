public final class com.android.internal.telephony.test.SimulatedCommands extends com.android.internal.telephony.gsm.BaseCommands implements com.android.internal.telephony.gsm.CommandsInterface, com.android.internal.telephony.test.SimulatedRadioControl
{
    private static final java.lang.String DEFAULT_SIM_PIN2_CODE;
    private static final java.lang.String DEFAULT_SIM_PIN_CODE;
    private static final com.android.internal.telephony.test.SimulatedCommands$SimFdnState INITIAL_FDN_STATE;
    private static final com.android.internal.telephony.test.SimulatedCommands$SimLockState INITIAL_LOCK_STATE;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String SIM_PUK2_CODE;
    private static final java.lang.String SIM_PUK_CODE;
    android.os.HandlerThread mHandlerThread;
    int mNetworkType;
    java.lang.String mPin2Code;
    int mPin2UnlockAttempts;
    java.lang.String mPinCode;
    int mPinUnlockAttempts;
    int mPuk2UnlockAttempts;
    int mPukUnlockAttempts;
    boolean mSimFdnEnabled;
    com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState;
    boolean mSimLockEnabled;
    com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState;
    boolean mSsnNotifyOn;
    int nextCallFailCause;
    int pausedResponseCount;
    java.util.ArrayList pausedResponses;
    com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState;

    static void <clinit>()
    {
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r0;
        com.android.internal.telephony.test.SimulatedCommands$SimFdnState $r1;

        <com.android.internal.telephony.test.SimulatedCommands: java.lang.String SIM_PUK_CODE> = "12345678";

        <com.android.internal.telephony.test.SimulatedCommands: java.lang.String SIM_PUK2_CODE> = "87654321";

        <com.android.internal.telephony.test.SimulatedCommands: java.lang.String LOG_TAG> = "SIM";

        <com.android.internal.telephony.test.SimulatedCommands: java.lang.String DEFAULT_SIM_PIN_CODE> = "1234";

        <com.android.internal.telephony.test.SimulatedCommands: java.lang.String DEFAULT_SIM_PIN2_CODE> = "5678";

        $r0 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState NONE>;

        <com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState INITIAL_LOCK_STATE> = $r0;

        $r1 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState NONE>;

        <com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState INITIAL_FDN_STATE> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Looper $r1;
        java.util.ArrayList $r2;
        android.os.HandlerThread $r3;
        com.android.internal.telephony.test.SimulatedGsmCallState $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r6, $r7;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedCommands$SimFdnState $r8, $r9;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        specialinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void <init>(android.content.Context)>(null);

        $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSsnNotifyOn> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses> = $r2;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int nextCallFailCause> = 16;

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String)>("SimulatedCommands");

        $r0.<com.android.internal.telephony.test.SimulatedCommands: android.os.HandlerThread mHandlerThread> = $r3;

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: android.os.HandlerThread mHandlerThread>;

        $r1 = virtualinvoke $r3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r4 = new com.android.internal.telephony.test.SimulatedGsmCallState;

        specialinvoke $r4.<com.android.internal.telephony.test.SimulatedGsmCallState: void <init>(android.os.Looper)>($r1);

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState> = $r4;

        $r5 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_OFF>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r5);

        $r6 = <com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState INITIAL_LOCK_STATE>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState> = $r6;

        $r6 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r7 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState NONE>;

        if $r6 == $r7 goto label3;

        $z0 = 1;

     label1:
        $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSimLockEnabled> = $z0;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPinCode> = "1234";

        $r8 = <com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState INITIAL_FDN_STATE>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState> = $r8;

        $r8 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState>;

        $r9 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState NONE>;

        if $r8 == $r9 goto label4;

        $z0 = 1;

     label2:
        $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSimFdnEnabled> = $z0;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPin2Code> = "5678";

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }

    private boolean isSimLocked()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r1, $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r1 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState NONE>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void resultFail(android.os.Message, java.lang.Throwable)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.lang.Throwable $r2;
        android.os.AsyncResult $r3;
        int $i0;
        java.util.ArrayList $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 := @parameter1: java.lang.Throwable;

        if $r1 == null goto label2;

        $r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r1);

        $r3.<android.os.AsyncResult: java.lang.Throwable exception> = $r2;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount>;

        if $i0 <= 0 goto label1;

        $r4 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        return;
    }

    private void resultSuccess(android.os.Message, java.lang.Object)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.lang.Object $r2;
        android.os.AsyncResult $r3;
        int $i0;
        java.util.ArrayList $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label2;

        $r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r1);

        $r3.<android.os.AsyncResult: java.lang.Object result> = $r2;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount>;

        if $i0 <= 0 goto label1;

        $r4 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        return;
    }

    private void returnSimLockedStatus(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int $i0;
        int[] $r2;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r3;
        com.android.internal.telephony.gsm.CommandsInterface$SimStatus $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = <com.android.internal.telephony.test.SimulatedCommands$1: int[] $SwitchMap$com$android$internal$telephony$test$SimulatedCommands$SimLockState>;

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] returnSimLockedStatus: mSimLockedState==NONE !?");

        return;

     label2:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] returnSimLockedStatus: SIM_PIN");

        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$SimStatus: com.android.internal.telephony.gsm.CommandsInterface$SimStatus SIM_PIN>;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r4);

        return;

     label3:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] returnSimLockedStatus: SIM_PUK");

        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$SimStatus: com.android.internal.telephony.gsm.CommandsInterface$SimStatus SIM_PUK>;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r4);

        return;
    }

    private void unimplemented(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.lang.RuntimeException $r2;
        android.os.AsyncResult $r3;
        int $i0;
        java.util.ArrayList $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        if $r1 == null goto label2;

        $r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r1);

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unimplemented");

        $r3.<android.os.AsyncResult: java.lang.Throwable exception> = $r2;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount>;

        if $i0 <= 0 goto label1;

        $r4 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        return;
    }

    public void acceptCall(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onAnswer()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void acknowledgeLastIncomingSMS(boolean, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void cancelPendingUssd(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2, $r3;
        android.os.Message $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r4);

        return;
    }

    public void changeSimPin(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2, $r5;
        android.os.Message $r3;
        com.android.internal.telephony.gsm.CommandException $r4;
        boolean $z0;
        com.android.internal.telephony.gsm.CommandException$Error $r6;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        if $r1 == null goto label1;

        $r5 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPinCode>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPinCode> = $r2;

        if $r3 == null goto label2;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r3 == null goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] changeSimPin: pin failed!");

        $r4 = new com.android.internal.telephony.gsm.CommandException;

        $r6 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r4.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r4);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        return;

     label3:
        return;
    }

    public void changeSimPin2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2, $r5;
        android.os.Message $r3;
        com.android.internal.telephony.gsm.CommandException $r4;
        boolean $z0;
        com.android.internal.telephony.gsm.CommandException$Error $r6;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        if $r1 == null goto label1;

        $r5 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPin2Code>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPin2Code> = $r2;

        if $r3 == null goto label2;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r3 == null goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] changeSimPin: pin2 failed!");

        $r4 = new com.android.internal.telephony.gsm.CommandException;

        $r6 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r4.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r6);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r4);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        return;

     label3:
        return;
    }

    public void conference(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(51, 0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void deactivateDefaultPDP(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void deleteSmsOnSim(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delete message at index ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SIM", $r3);

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void dial(java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        int $i0;
        android.os.Message $r2;
        com.android.internal.telephony.test.SimulatedGsmCallState $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Message;

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r3.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onDial(java.lang.String)>($r1);

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r2, null);

        return;
    }

    public void explicitCallTransfer(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(52, 0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void getBasebandVersion(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, "SimulatedCommands");

        return;
    }

    public void getCLIR(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void getCurrentCalls(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.util.List $r2;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r3, $r4;
        com.android.internal.telephony.test.SimulatedGsmCallState $r5;
        com.android.internal.telephony.gsm.CommandException $r6;
        com.android.internal.telephony.gsm.CommandException$Error $r7;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r3 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_READY>;

        if $r3 != $r4 goto label1;

        $r5 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $r2 = virtualinvoke $r5.<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getDriverCalls()>();

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;

     label1:
        $r6 = new com.android.internal.telephony.gsm.CommandException;

        $r7 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error RADIO_NOT_AVAILABLE>;

        specialinvoke $r6.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r7);

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r6);

        return;
    }

    public void getGPRSRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "5";

        $r2[1] = null;

        $r2[2] = null;

        $r2[3] = "2";

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getIMEI(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, "012345678901234");

        return;
    }

    public void getIMEISV(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, "99");

        return;
    }

    public void getIMSI(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, "012345678901234");

        return;
    }

    public void getLastCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int[] $r2;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (int)[1];

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int nextCallFailCause>;

        $r2[0] = $i0;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getLastPdpFailCause(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void getMute(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void getNeighboringCids(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int[] $r2;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (int)[7];

        $r2[0] = 6;

        $i0 = 1;

     label1:
        if $i0 >= 7 goto label2;

        $r2[$i0] = $i0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getNetworkSelectionMode(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int[] $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getOperator(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "El Telco Loco";

        $r2[1] = "Telco Loco";

        $r2[2] = "001001";

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getPDPContextList(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.util.ArrayList $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getPreferredNetworkType(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int[] $r2;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (int)[1];

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mNetworkType>;

        $r2[0] = $i0;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        java.lang.String[] $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "5";

        $r2[1] = null;

        $r2[2] = null;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getSignalStrength(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int[] $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (int)[2];

        $r2[0] = 23;

        $r2[1] = 0;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void getSimStatus(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int $i0;
        int[] $r2;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r3;
        com.android.internal.telephony.gsm.CommandsInterface$SimStatus $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = <com.android.internal.telephony.test.SimulatedCommands$1: int[] $SwitchMap$com$android$internal$telephony$gsm$CommandsInterface$RadioState>;

        $r3 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$SimStatus: com.android.internal.telephony.gsm.CommandsInterface$SimStatus SIM_NOT_READY>;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r4);

        return;

     label2:
        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$SimStatus: com.android.internal.telephony.gsm.CommandsInterface$SimStatus SIM_READY>;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r4);

        return;

     label3:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void returnSimLockedStatus(android.os.Message)>($r1);

        return;
    }

    public void handleCallSetupRequestFromSim(boolean, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void hangupConnection(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        char $c1;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $i0 = $i0 + 48;

        $c1 = (char) $i0;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(49, $c1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GSM", "[SimCmd] hangupConnection: resultFail");

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GSM", "[SimCmd] hangupConnection: resultSuccess");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void hangupForegroundResumeBackground(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(49, 0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void hangupWaitingOrBackground(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(48, 0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void invokeOemRilRequestRaw(byte[], android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        byte[] $r1;
        android.os.Message $r2;
        android.os.AsyncResult $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: android.os.Message;

        if $r2 == null goto label1;

        $r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r2);

        $r3.<android.os.AsyncResult: java.lang.Object result> = $r1;

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        return;
    }

    public void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String[] $r1;
        android.os.Message $r2;
        android.os.AsyncResult $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: android.os.Message;

        if $r2 == null goto label1;

        $r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r2);

        $r3.<android.os.AsyncResult: java.lang.Object result> = $r1;

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        return;
    }

    public void pauseResponses()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount> = $i0;

        return;
    }

    public void progressConnectingCallState()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: void progressConnectingCallState()>();

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void progressConnectingToActive()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: void progressConnectingToActive()>();

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void queryAvailableBandMode(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        int[] $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = newarray (int)[4];

        $r2[0] = 4;

        $r2[1] = 2;

        $r2[2] = 3;

        $r2[3] = 4;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, $r2);

        return;
    }

    public void queryCLIP(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.os.Message $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r2);

        return;
    }

    public void queryCallWaiting(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2;
        int $i0;
        android.os.Message $r3;
        boolean $z0;
        int[] $r4;
        byte $b1;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.os.Message;

        if $r1 == null goto label05;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("SC");

        if $z0 == 0 goto label05;

        if $r3 == null goto label11;

        $r4 = newarray (int)[1];

        $z0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSimLockEnabled>;

        if $z0 == 0 goto label03;

        $b1 = 1;

     label01:
        $r4[0] = $b1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] queryFacilityLock: SIM is ");

        $i0 = $r4[0];

        if $i0 != 0 goto label04;

        $r1 = "unlocked";

     label02:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, $r4, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label03:
        $b1 = 0;

        goto label01;

     label04:
        $r1 = "locked";

        goto label02;

     label05:
        if $r1 == null goto label10;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("FD");

        if $z0 == 0 goto label10;

        if $r3 == null goto label12;

        $r4 = newarray (int)[1];

        $z0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSimFdnEnabled>;

        if $z0 == 0 goto label08;

        $b1 = 1;

     label06:
        $r4[0] = $b1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] queryFacilityLock: FDN is ");

        $i0 = $r4[0];

        if $i0 != 0 goto label09;

        $r1 = "disabled";

     label07:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, $r4, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label08:
        $b1 = 0;

        goto label06;

     label09:
        $r1 = "enabled";

        goto label07;

     label10:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r3);

        return;

     label11:
        return;

     label12:
        return;
    }

    public void rejectCall(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(48, 0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void resetRadio(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void resumeResponses()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.os.Message $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount>;

        $i0 = $i0 - 1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount> = $i0;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int pausedResponseCount>;

        if $i0 != 0 goto label3;

        $i0 = 0;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label1:
        if $i0 >= $i1 goto label2;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.os.Message) $r2;

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.util.ArrayList pausedResponses>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "SimulatedCommands.resumeResponses < 0");

        return;
    }

    public void sendDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        char $c0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $c0 := @parameter0: char;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void sendEnvelope(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        android.os.Message $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r2, null);

        return;
    }

    public void sendSMS(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2;
        android.os.Message $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r3);

        return;
    }

    public void sendTerminalResponse(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        android.os.Message $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r2, null);

        return;
    }

    public void sendUSSD(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        android.os.Message $r2;
        boolean $z0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("#646#");

        if $z0 == 0 goto label1;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r2, null);

        virtualinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void triggerIncomingUssd(java.lang.String,java.lang.String)>("0", "You have NNN minutes remaining.");

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r2, null);

        virtualinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void triggerIncomingUssd(java.lang.String,java.lang.String)>("0", "All Done");

        return;
    }

    public void separateConnection(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;
        char $c1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        $i0 = $i0 + 48;

        $c1 = (char) $i0;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(50, $c1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void setAutoProgressConnectingCall(boolean)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: void setAutoProgressConnectingCall(boolean)>($z0);

        return;
    }

    public void setBandMode(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void setCLIR(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void setCallForward(int, int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;
        android.os.Message $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        $i3 := @parameter4: int;

        $r2 := @parameter5: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r2);

        return;
    }

    public void setCallWaiting(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        int $i0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        int $i0;
        android.os.Message $r3;
        com.android.internal.telephony.gsm.CommandException $r4;
        com.android.internal.telephony.gsm.CommandException$Error $r5;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r3 := @parameter4: android.os.Message;

        if $r1 == null goto label2;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("SC");

        if $z1 == 0 goto label2;

        if $r2 == null goto label1;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPinCode>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] setFacilityLock: pin is valid");

        $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSimLockEnabled> = $z0;

        if $r3 == null goto label5;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r3 == null goto label6;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] setFacilityLock: pin failed!");

        $r4 = new com.android.internal.telephony.gsm.CommandException;

        $r5 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error GENERIC_FAILURE>;

        specialinvoke $r4.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r5);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r4);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        if $r1 == null goto label4;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("FD");

        if $z1 == 0 goto label4;

        if $r2 == null goto label3;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPin2Code>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] setFacilityLock: pin2 is valid");

        $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSimFdnEnabled> = $z0;

        if $r3 == null goto label7;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label3:
        if $r3 == null goto label8;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] setFacilityLock: pin2 failed!");

        $r4 = new com.android.internal.telephony.gsm.CommandException;

        $r5 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error GENERIC_FAILURE>;

        specialinvoke $r4.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r5);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r4);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r3);

        return;

     label5:
        return;

     label6:
        return;

     label7:
        return;

     label8:
        return;
    }

    public void setLocationUpdates(boolean, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void setMute(boolean, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void setNetworkSelectionModeAutomatic(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r1);

        return;
    }

    public void setNetworkSelectionModeManual(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        android.os.Message $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r2);

        return;
    }

    public void setNextCallFailCause(int)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int nextCallFailCause> = $i0;

        return;
    }

    public void setNextDialFailImmediately(boolean)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: void setNextDialFailImmediately(boolean)>($z0);

        return;
    }

    public void setPreferredNetworkType(int, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Message;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mNetworkType> = $i0;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void setRadioPower(boolean, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0;
        android.os.Message $r1;
        java.lang.StringBuilder $r2;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r3;
        java.lang.String $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.Message;

        if $z0 == 0 goto label2;

        $z0 = specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean isSimLocked()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] setRadioPower: SIM locked! state=");

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r4);

        $r5 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_LOCKED_OR_ABSENT>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r5);

        return;

     label1:
        $r5 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_READY>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r5);

        return;

     label2:
        $r5 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_OFF>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r5);

        return;
    }

    public void setSuppServiceNotifications(boolean, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        boolean $z0, $z1;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        if $z0 == 0 goto label1;

        $z1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSsnNotifyOn>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SIM", "Supp Service Notifications already enabled!");

     label1:
        $r0.<com.android.internal.telephony.test.SimulatedCommands: boolean mSsnNotifyOn> = $z0;

        return;
    }

    public void setupDefaultPDP(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2, $r3;
        android.os.Message $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r4);

        return;
    }

    public void shutdown()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Looper $r1;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r2;
        android.os.HandlerThread $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r2 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r2);

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: android.os.HandlerThread mHandlerThread>;

        $r1 = virtualinvoke $r3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.os.Looper: void quit()>();

        return;

     label1:
        return;
    }

    public void simIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2, $r3;
        android.os.Message $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r2 := @parameter6: java.lang.String;

        $r3 := @parameter7: java.lang.String;

        $r4 := @parameter8: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r4);

        return;
    }

    public void startDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        char $c0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $c0 := @parameter0: char;

        $r1 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void stopDtmf(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void supplyNetworkDepersonalization(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        android.os.Message $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r2);

        return;
    }

    public void supplySimPin(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r8;
        android.os.Message $r2;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r3, $r4;
        java.lang.StringBuilder $r5;
        com.android.internal.telephony.gsm.CommandException $r6;
        com.android.internal.telephony.gsm.CommandException$Error $r7;
        boolean $z0;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r9;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r4 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState REQUIRE_PIN>;

        if $r3 == $r4 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPin: wrong state, state=");

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $r6 = new com.android.internal.telephony.gsm.CommandException;

        $r7 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r6.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r7);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r2, null, $r6);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r1 == null goto label2;

        $r8 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPinCode>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPin: success!");

        $r9 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_READY>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r9);

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPinUnlockAttempts> = 0;

        $r3 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState NONE>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState> = $r3;

        if $r2 == null goto label4;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r2, null, null);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        if $r2 == null goto label5;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPinUnlockAttempts>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPinUnlockAttempts> = $i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPin: failed! attempt=");

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPinUnlockAttempts>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPinUnlockAttempts>;

        if $i0 < 3 goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPin: set state to REQUIRE_PUK");

        $r3 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState REQUIRE_PUK>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState> = $r3;

     label3:
        $r6 = new com.android.internal.telephony.gsm.CommandException;

        $r7 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r6.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r7);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r2, null, $r6);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        return;

     label5:
        return;
    }

    public void supplySimPin2(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r8;
        android.os.Message $r2;
        com.android.internal.telephony.test.SimulatedCommands$SimFdnState $r3, $r4;
        java.lang.StringBuilder $r5;
        com.android.internal.telephony.gsm.CommandException $r6;
        com.android.internal.telephony.gsm.CommandException$Error $r7;
        boolean $z0;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState>;

        $r4 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState REQUIRE_PIN2>;

        if $r3 == $r4 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPin2: wrong state, state=");

        $r3 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $r6 = new com.android.internal.telephony.gsm.CommandException;

        $r7 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r6.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r7);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r2, null, $r6);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r1 == null goto label2;

        $r8 = $r0.<com.android.internal.telephony.test.SimulatedCommands: java.lang.String mPin2Code>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPin2: success!");

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPin2UnlockAttempts> = 0;

        $r3 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState NONE>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState> = $r3;

        if $r2 == null goto label4;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r2, null, null);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        if $r2 == null goto label5;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPin2UnlockAttempts>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPin2UnlockAttempts> = $i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPin2: failed! attempt=");

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPin2UnlockAttempts>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPin2UnlockAttempts>;

        if $i0 < 3 goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPin2: set state to REQUIRE_PUK2");

        $r3 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState REQUIRE_PUK2>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState> = $r3;

     label3:
        $r6 = new com.android.internal.telephony.gsm.CommandException;

        $r7 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r6.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r7);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r2, null, $r6);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        return;

     label5:
        return;
    }

    public void supplySimPuk(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2;
        android.os.Message $r3;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r4, $r5;
        java.lang.StringBuilder $r6;
        com.android.internal.telephony.gsm.CommandException $r7;
        com.android.internal.telephony.gsm.CommandException$Error $r8;
        boolean $z0;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r9;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        $r4 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r5 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState REQUIRE_PUK>;

        if $r4 == $r5 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPuk: wrong state, state=");

        $r4 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $r7 = new com.android.internal.telephony.gsm.CommandException;

        $r8 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r7.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r8);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r7);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("12345678");

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPuk: success!");

        $r9 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_READY>;

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)>($r9);

        $r4 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState NONE>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState> = $r4;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPukUnlockAttempts> = 0;

        if $r3 == null goto label4;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        if $r3 == null goto label5;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPukUnlockAttempts>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPukUnlockAttempts> = $i0;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPuk: failed! attempt=");

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPukUnlockAttempts>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPukUnlockAttempts>;

        if $i0 < 10 goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPuk: set state to SIM_PERM_LOCKED");

        $r4 = <com.android.internal.telephony.test.SimulatedCommands$SimLockState: com.android.internal.telephony.test.SimulatedCommands$SimLockState SIM_PERM_LOCKED>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState> = $r4;

     label3:
        $r7 = new com.android.internal.telephony.gsm.CommandException;

        $r8 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r7.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r8);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r7);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        return;

     label5:
        return;
    }

    public void supplySimPuk2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2;
        android.os.Message $r3;
        com.android.internal.telephony.test.SimulatedCommands$SimFdnState $r4, $r5;
        java.lang.StringBuilder $r6;
        com.android.internal.telephony.test.SimulatedCommands$SimLockState $r7;
        com.android.internal.telephony.gsm.CommandException $r8;
        com.android.internal.telephony.gsm.CommandException$Error $r9;
        boolean $z0;
        int $i0;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        $r4 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState>;

        $r5 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState REQUIRE_PUK2>;

        if $r4 == $r5 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPuk2: wrong state, state=");

        $r7 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimLockState mSimLockedState>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $r8 = new com.android.internal.telephony.gsm.CommandException;

        $r9 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r8.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r9);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r8);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("87654321");

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPuk2: success!");

        $r4 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState NONE>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState> = $r4;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPuk2UnlockAttempts> = 0;

        if $r3 == null goto label4;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, null);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        if $r3 == null goto label5;

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPuk2UnlockAttempts>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPuk2UnlockAttempts> = $i0;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SimCmd] supplySimPuk2: failed! attempt=");

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPuk2UnlockAttempts>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", $r1);

        $i0 = $r0.<com.android.internal.telephony.test.SimulatedCommands: int mPuk2UnlockAttempts>;

        if $i0 < 10 goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SIM", "[SimCmd] supplySimPuk2: set state to SIM_PERM_LOCKED");

        $r4 = <com.android.internal.telephony.test.SimulatedCommands$SimFdnState: com.android.internal.telephony.test.SimulatedCommands$SimFdnState SIM_PERM_LOCKED>;

        $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedCommands$SimFdnState mSimFdnEnabledState> = $r4;

     label3:
        $r8 = new com.android.internal.telephony.gsm.CommandException;

        $r9 = <com.android.internal.telephony.gsm.CommandException$Error: com.android.internal.telephony.gsm.CommandException$Error PASSWORD_INCORRECT>;

        specialinvoke $r8.<com.android.internal.telephony.gsm.CommandException: void <init>(com.android.internal.telephony.gsm.CommandException$Error)>($r9);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r3, null, $r8);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        return;

     label5:
        return;
    }

    public void switchWaitingOrHoldingAndActive(android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        android.os.Message $r1;
        boolean $z0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        java.lang.RuntimeException $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: android.os.Message;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>(50, 0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Hangup Error");

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultFail(android.os.Message,java.lang.Throwable)>($r1, $r3);

        return;

     label1:
        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void resultSuccess(android.os.Message,java.lang.Object)>($r1, null);

        return;
    }

    public void triggerHangupAll()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerHangupAll()>();

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void triggerHangupBackground()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerHangupBackground()>();

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void triggerHangupForeground()
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        com.android.internal.telephony.test.SimulatedGsmCallState $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r1.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerHangupForeground()>();

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void triggerIncomingSMS(java.lang.String)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void triggerIncomingUssd(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        android.os.Registrant $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mUSSDRegistrant>;

        if $r4 == null goto label1;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mUSSDRegistrant>;

        virtualinvoke $r4.<android.os.Registrant: void notifyResult(java.lang.Object)>($r3);

        return;

     label1:
        return;
    }

    public void triggerRing(java.lang.String)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        java.lang.String $r1;
        com.android.internal.telephony.test.SimulatedGsmCallState $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.internal.telephony.test.SimulatedCommands: com.android.internal.telephony.test.SimulatedGsmCallState simulatedCallState>;

        virtualinvoke $r2.<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerRing(java.lang.String)>($r1);

        $r3 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void notifyRegistrants()>();

        return;
    }

    public void triggerSsn(int, int)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0, $i1;
        com.android.internal.telephony.gsm.SuppServiceNotification $r1;
        android.os.Registrant $r2;
        android.os.AsyncResult $r3;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new com.android.internal.telephony.gsm.SuppServiceNotification;

        specialinvoke $r1.<com.android.internal.telephony.gsm.SuppServiceNotification: void <init>()>();

        $r1.<com.android.internal.telephony.gsm.SuppServiceNotification: int notificationType> = $i0;

        $r1.<com.android.internal.telephony.gsm.SuppServiceNotification: int code> = $i1;

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSsnRegistrant>;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r1, null);

        virtualinvoke $r2.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r3);

        return;
    }

    public void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.test.SimulatedCommands $r0;
        int $i0;
        java.lang.String $r1, $r2;
        android.os.Message $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.android.internal.telephony.test.SimulatedCommands;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.os.Message;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Write SMS to SIM with status ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SIM", $r1);

        specialinvoke $r0.<com.android.internal.telephony.test.SimulatedCommands: void unimplemented(android.os.Message)>($r3);

        return;
    }
}
