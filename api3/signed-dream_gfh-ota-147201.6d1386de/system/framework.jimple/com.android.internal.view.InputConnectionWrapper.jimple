public class com.android.internal.view.InputConnectionWrapper extends java.lang.Object implements android.view.inputmethod.InputConnection
{
    private static final int MAX_WAIT_TIME_MILLIS;
    private final com.android.internal.view.IInputContext mIInputContext;

    public void <init>(com.android.internal.view.IInputContext)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        com.android.internal.view.IInputContext $r1;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: com.android.internal.view.IInputContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext> = $r1;

        return;
    }

    public boolean beginBatchEdit()
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void beginBatchEdit()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean clearMetaKeyStates(int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void clearMetaKeyStates(int)>($i0);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        android.view.inputmethod.CompletionInfo $r1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        $r2 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void commitCompletion(android.view.inputmethod.CompletionInfo)>($r1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        java.lang.CharSequence $r1;
        int $i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void commitText(java.lang.CharSequence,int)>($r1, $i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean deleteSurroundingText(int, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0, $i1;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void deleteSurroundingText(int,int)>($i0, $i1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean endBatchEdit()
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void endBatchEdit()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean finishComposingText()
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void finishComposingText()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getCursorCapsMode(int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0, $i1, $i2;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback $r1;
        com.android.internal.view.IInputContext $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $i2 = 0;

     label01:
        $r1 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

     label02:
        $r2 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label03:
        $i1 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>($i0, $i1, $r1);

     label04:
        entermonitor $r1;

     label05:
        virtualinvoke $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        $z0 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

        if $z0 == 0 goto label06;

        $i2 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mCursorCapsMode>;

     label06:
        exitmonitor $r1;

     label07:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>($r1);

     label08:
        return $i2;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor $r1;

     label11:
        throw $r3;

     label12:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        android.view.inputmethod.ExtractedTextRequest $r1;
        int $i0, $i1;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback $r2;
        android.view.inputmethod.ExtractedText $r3;
        com.android.internal.view.IInputContext $r4;
        boolean $z0;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $i0 := @parameter1: int;

        $r3 = null;

     label01:
        $r2 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

     label02:
        $r4 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label03:
        $i1 = $r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>($r1, $i0, $i1, $r2);

     label04:
        entermonitor $r2;

     label05:
        virtualinvoke $r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        $z0 = $r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

        if $z0 == 0 goto label06;

        $r3 = $r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: android.view.inputmethod.ExtractedText mExtractedText>;

     label06:
        exitmonitor $r2;

     label07:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>($r2);

     label08:
        return $r3;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor $r2;

     label11:
        throw $r5;

     label12:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0, $i1, $i2;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback $r1;
        java.lang.CharSequence $r2;
        com.android.internal.view.IInputContext $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = null;

     label01:
        $r1 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

     label02:
        $r3 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label03:
        $i2 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>($i0, $i1, $i2, $r1);

     label04:
        entermonitor $r1;

     label05:
        virtualinvoke $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        $z0 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

        if $z0 == 0 goto label06;

        $r2 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: java.lang.CharSequence mTextAfterCursor>;

     label06:
        exitmonitor $r1;

     label07:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>($r1);

     label08:
        return $r2;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor $r1;

     label11:
        throw $r4;

     label12:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0, $i1, $i2;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback $r1;
        java.lang.CharSequence $r2;
        com.android.internal.view.IInputContext $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = null;

     label01:
        $r1 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

     label02:
        $r3 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label03:
        $i2 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>($i0, $i1, $i2, $r1);

     label04:
        entermonitor $r1;

     label05:
        virtualinvoke $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        $z0 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

        if $z0 == 0 goto label06;

        $r2 = $r1.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: java.lang.CharSequence mTextBeforeCursor>;

     label06:
        exitmonitor $r1;

     label07:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>($r1);

     label08:
        return $r2;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor $r1;

     label11:
        throw $r4;

     label12:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public boolean performContextMenuAction(int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void performContextMenuAction(int)>($i0);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean performEditorAction(int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void performEditorAction(int)>($i0);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        com.android.internal.view.IInputContext $r3;
        android.os.RemoteException $r4;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void performPrivateCommand(java.lang.String,android.os.Bundle)>($r1, $r2);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean reportFullscreenMode(boolean)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        boolean $z0;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void reportFullscreenMode(boolean)>($z0);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        android.view.KeyEvent $r1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void sendKeyEvent(android.view.KeyEvent)>($r1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        java.lang.CharSequence $r1;
        int $i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void setComposingText(java.lang.CharSequence,int)>($r1, $i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setSelection(int, int)
    {
        com.android.internal.view.InputConnectionWrapper $r0;
        int $i0, $i1;
        com.android.internal.view.IInputContext $r1;
        android.os.RemoteException $r2;

        $r0 := @this: com.android.internal.view.InputConnectionWrapper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

     label1:
        interfaceinvoke $r1.<com.android.internal.view.IInputContext: void setSelection(int,int)>($i0, $i1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.InputConnectionWrapper: int MAX_WAIT_TIME_MILLIS> = 2000;

        return;
    }
}
